/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994 -- All Rights Reserved

PROJECT:	Legos	     
MODULE:		gandalf
FILE:		strings.goc

AUTHOR:		Roy Goldman, Nov 13, 1994

ROUTINES:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	roy	11/13/94	Initial version.

DESCRIPTION:
	
	A repository for strings, so we can get DGROUP nice and small;


	$Id: strings.goc,v 1.2 98/10/13 22:18:31 martin Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/


@include <stdapp.goh>

@define STR(_chunk, _string) \
 @chunk TCHAR _chunk[] = _TEXT(_string)

@start Strings, data;

@chunk TCHAR SorryNotSupportedYet[] = _TEXT("Sorry, Not Supported Yet");
@chunk TCHAR InternalVariables[] = _TEXT("Variables in internal scopes are read-only");
@chunk TCHAR Shadowed[] = _TEXT("This variable is currently shadowed by the local scope and cannot be modified");
@chunk TCHAR DuploStart[] = _TEXT("duplo_start");
@chunk TCHAR DuploRev[] = _TEXT("duplo_revision");
@chunk TCHAR RevisionHeader[] = _TEXT("Revision Header");
@chunk TCHAR None[] = _TEXT("None - At Top Level");
@chunk TCHAR NoActive[] = _TEXT("Locals: <No Active Routines>");
@chunk TCHAR TopLevel[] = _TEXT("module_init");
@chunk TCHAR Array[] = _TEXT("<array>");
@chunk TCHAR Comp[] = _TEXT("<comp>");
@chunk TCHAR Module[] = _TEXT("<module>");
@chunk TCHAR Complex[] = _TEXT("<complex>");
@chunk TCHAR StartTop[] = _TEXT("sub module_init()");
@chunk TCHAR SubDuploUi[] = _TEXT("sub duplo_ui_ui_ui()");
@chunk TCHAR DuploUi[] = _TEXT("duplo_ui_ui_ui");
@chunk TCHAR SubDuploStart[] = _TEXT("sub duplo_start()");
@chunk TCHAR CallDuploStart[] = _TEXT("duplo_start()");
@chunk TCHAR FuncDuploStart[] = _TEXT("function duplo_start()");
@chunk TCHAR FuncDuploRev[] = _TEXT( "sub duplo_revision()");
@chunk TCHAR StartRev[] = _TEXT("Start Revision Header");
@chunk TCHAR EndTop[] = _TEXT("end sub"); /* module_init */
@chunk TCHAR EndRev[] = _TEXT("End Revision Header");
@chunk TCHAR EndFunction[] = _TEXT("end function");
@chunk TCHAR EndSub[] = _TEXT("end sub");
@chunk TCHAR GandalfFileError[] = _TEXT("File Error");
@chunk TCHAR EditorStart[] = _TEXT("\
sub module_goTo(context as string)\r\r\
end sub\r\
function module_getContext()\r\r\
module_getContext = \"\"\r\r\
end function\r\r\
sub module_show()\r\
REM code for making this module appear\r\
form1.visible=1\r\r\
end sub\r\
sub module_hide()\r\
REM code for making this module disappear\r\
form1.visible=0\r\r\
end sub\r\
sub module_init()\r\
REM place initialization code here\r\r\
end sub\r\r\
sub module_exit()\r\r\
end sub");
@chunk TCHAR EditorAggStart[] = _TEXT("sub module_init()\r\rend sub\r");
@chunk TCHAR WriteError[] = _TEXT("Error writing file");
@chunk TCHAR LviewError[] = _TEXT("Couldn't find legos viewer application");
@chunk TCHAR StructString[] = _TEXT("STRUCT %s");
@chunk TCHAR EndStructString[] = _TEXT("END STRUCT");
@chunk TCHAR AggDefaultStructFields[] = _TEXT("DIM MI_libModule as module\r\nDIM MI_loadModule as module\r\nDIM MI_class as string\r\nDIM MI_proto as string");
@chunk TCHAR AggPropertyStructFields[] = _TEXT("DIM %s as %s");
@chunk TCHAR ExportAggregate[] = _TEXT("ExportAggregate(\"%s\", \"Make%s\")");
@chunk TCHAR CallTestSub[] = _TEXT("%s_Test");
@chunk TCHAR CallMakeSub[] = _TEXT("Make%s()");
@chunk TCHAR MakeAggregateRuntime[] = _TEXT("function Make%s(aggTop as component, loadModule as module) global as component\r\nDIM %sInstance as STRUCT %s\r\nSetTop(aggTop)");
@chunk TCHAR MakeAggregateBuildtime[] = _TEXT("sub Make%s() global");
@chunk TCHAR InitAggregate[] = _TEXT("%sInstance^MI_libModule=CurModule()\r\n%sInstance^MI_loadModule=loadModule\r\n%sInstance^MI_class=\"%s\"\r\nMake%s=%sInstance");
@chunk TCHAR AggInitDefaultComp[] = _TEXT("%sInstance^defaultComp=%s\n");
@chunk TCHAR AggCreatedRoutineName[] = _TEXT("%s_Created");
@chunk TCHAR AggCreatedRoutineHeader[] = _TEXT("%s_Created(%sInstance)\r\n");
@chunk TCHAR AggSetPropSub[] = _TEXT("sub %s_SetProperty(self as STRUCT %s, prop as string, value)");
@chunk TCHAR AggSpecialGetRoutineName[] = _TEXT("%sGet_%s");
@chunk TCHAR AggSpecialSetRoutineName[] = _TEXT("%sSet_%s");
@chunk TCHAR AggDefaultSetPropCase[] = _TEXT("CASE \"%s\"\r\n\tself^%s=value");
@chunk TCHAR AggSpecialSetPropCase[] = _TEXT("CASE \"%s\"\r\n\t%sSet_%s(self, value)");
@chunk TCHAR AggDefaultGetPropCase[] = _TEXT("CASE \"%s\"\r\n\t%s_GetProperty=self^%s");
@chunk TCHAR AggSpecialGetPropCase[] = _TEXT("CASE \"%s\"\r\n\t%s_GetProperty=%sGet_%s(self)");
@chunk TCHAR AggEndSelect[] = _TEXT("END select");
@chunk TCHAR AggVersion[] = _TEXT("REM aggVersion=");
@chunk TCHAR AggGetPropFunc[] = _TEXT("function %s_GetProperty(self as STRUCT %s, prop as string)");
@chunk TCHAR AggNameInfo[] = _TEXT("REM aggName=");
@chunk TCHAR AggPropertyInfo[] = _TEXT("REM aggProperties=");
@chunk TCHAR AggActionInfo[] = _TEXT("REM aggActions=");
@chunk TCHAR AggEventInfo[] = _TEXT("REM aggEvents=");
@chunk TCHAR AggDefaultInfo[] = _TEXT("REM aggDefaultComp=");
@chunk TCHAR AggPrivVarInfo[] = _TEXT("REM aggPrivVars=");
@chunk TCHAR AggClassVarInfo[] = _TEXT("REM aggClassVars=");

@chunk TCHAR BgadnewState[] = _TEXT("REM &bgadnew& ");

/* Module name used with "run" trigger */
@chunk TCHAR ResFile[] = _TEXT("\\TEMPMOD.BC");
@chunk TCHAR EnableEvents[] = _TEXT("EnableEvents()");
@chunk TCHAR DisableEvents[] = _TEXT("DisableEvents()");

@STR(WriteResourceError, "Error writing out resource file.");
@STR(BadAggNameError, "Illegal aggregate name.");

@end Strings
