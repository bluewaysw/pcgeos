/*
	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		UI
FILE:		uiMain.ui

AUTHOR:		Steve Scholl

	
REVISION HISTORY:
	Name		Date		Description
	----		----		-----------
	Steve Scholl	2/92		Initial Revision
	RainerB   	12/2023	  	Re-Renamed from Artist to GeoDraw

DESCRIPTION:
	$Id: uiMain.ui,v 1.5 98/07/20 19:31:57 joon Exp $

*/

#include "Art/mkrGeoDrawDoc.ui"
/*#ifdef GPC */
start AppTCMonikerResource, data;
#include "Art/mkrGeoDrawDocTC.ui"
end AppTCMonikerResource;
/*#endif */
#include "Art/mkrGeoDraw.ui"
#include "Art/mkrGeoDrawTiny.ui"
#include "Art/mkrBitmapPtrTool.ui"

/* ----------------------------------------------------------------------------
	Application Object
-----------------------------------------------------------------------------*/


start	AppLCMonikerResource, data;

visMoniker DatafileMonikerList = list {
	GeoDrawDocLCMoniker,
	GeoDrawDocLMMoniker,
	GeoDrawDocSCMoniker,
	GeoDrawDocSMMoniker,
	GeoDrawDocYCMoniker,
	GeoDrawDocYMMoniker,
/*#ifdef GPC  */
	GeoDrawDocTCMoniker,
/*#endif */
	GeoDrawDocSCGAMoniker
}

end	AppLCMonikerResource;

start DrawAppResource;

DrawApp = DrawApplication vardataReloc {
	moniker = list {
		GeoDrawTextMoniker
		,
		GeoDrawLCMoniker,
		GeoDrawLMMoniker,
		GeoDrawSCMoniker,
		GeoDrawSMMoniker,
		GeoDrawYCMoniker,
		GeoDrawYMMoniker,
		GeoDrawSCGAMoniker,
		GeoDrawTinyTCMoniker,
		GeoDrawTinyTMMoniker,
		GeoDrawTinyTCGAMoniker
	}
	children = DrawPrimary;
	gcnList (MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) =
			DrawPrimary;
	gcnList (MANUFACTURER_ID_GEOWORKS,MGCNLT_APP_STARTUP) =
			DrawDocumentControlObj;
	gcnList (MANUFACTURER_ID_GEOWORKS,MGCNLT_ACTIVE_LIST) =
			DrawDocumentControlObj,
			DrawDisplayControl,
			DrawViewControl,
			DrawRulerShowControl, DrawTabControl;
	gcnList (MANUFACTURER_ID_GEOWORKS,GAGCNLT_STARTUP_LOAD_OPTIONS) =
			DrawToolControl,
			UserLevelList;
	gcnList (MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
			DrawDocumentControlObj,
			DrawDisplayControl, DrawStyleSheetControl,
			DrawEditControl,
			DrawDuplicateControl,
			DrawPasteInsideControl,
			DrawViewControl,
			DrawPrintControl,
			DrawPageSizeControl,
			DrawRulerShowControl, DrawRulerTypeControl,
			DrawGridControl,
			DrawGuideControl,
#if _BITMAP_EDITING
			DrawBitmapFormatControl,
			DrawConvertControl,
#endif
			DrawNudgeControl, DrawMoveInsideControl,
			DrawGroupControl,
			DrawArcControl,
			DrawAlignDistributeControl,
			DrawObscureAttrControl,
			DrawTransformControl,
			DrawInstructionControl,
			DrawLocksControl,
			DrawDefaultAttributesControl,
			DrawRotateControl,
			DrawScaleControl,
			DrawHideShowControl, DrawDraftModeControl,
			DrawCustomShapeControl,
/*#if _NDO2000  */
			DrawDuplicateManyControl,  
/*#endif */
			DrawCustomDuplicateControl,
			DrawSkewControl,
			DrawAlignToGridControl, DrawHandleControl,
			DrawDepthControl, DrawFlipControl,
			DrawCreateControl,
#if DO_PIZZA
			DrawAreaColorSelector,
#else
			DrawAreaColorSelector, DrawAreaAttrControl,
#endif
			DrawBackgroundAttrControl,
			DrawBothColorSelector,
			DrawBackgroundColorSelector,
			DrawStartingGradientColorSelector,
			DrawEndingGradientColorSelector,
			DrawGradientFillControl,
			DrawLineColorSelector, DrawLineAttrControl,
			DrawGrObjToolControl, DrawBitmapToolControl,
			DrawImpexImportControl, DrawImpexExportControl,
			DrawSplinePointControl,
			DrawSplineOpenCloseControl,
			DrawSplineSmoothnessControl,
			DrawFontControl, DrawTextStyleControl,
			DrawPointSizeControl, DrawCharFGColorControl,
			DrawFontAttrControl, DrawCharBGColorControl,
			DrawJustificationControl, DrawParaSpacingControl,
			DrawLineSpacingControl,
		   	DrawParaBGColorControl, DrawMarginControl,
		   	DrawTabControl, DrawDefaultTabsControl,
			/* DrawDropCapControl, */
			DrawBorderControl, DrawBorderColorControl,
		   	DrawHyphenationControl, DrawTextStyleSheetControl,
			DrawSpellControl, DrawSearchReplaceControl;
	gcnList (MANUFACTURER_ID_GEOWORKS,
		 GAGCNLT_APP_TARGET_NOTIFY_DOCUMENT_CHANGE) =
			DrawImpexImportControl;
	gcnList (MANUFACTURER_ID_GEOWORKS,
		 GAGCNLT_APP_TARGET_NOTIFY_GROBJ_BODY_SELECTION_STATE_CHANGE) =
			DrawImpexExportControl;
	hints = {
		ATTR_GEN_INIT_FILE_CATEGORY {
		char	"geodraw", 0
		},
		ATTR_GEN_APPLICATION_PRINT_CONTROL {
			UN_OPTR DrawPrintControl
		},
  /*		ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER {
			UN_OPTR SaveOptionsTrigger
		},
		ATTR_GEN_APPLICATION_RESET_OPTIONS_TRIGGER {
			UN_OPTR ResetOptionsTrigger
		},  */
		ATTR_GEN_HELP_FILE {
		    char "artist", 0
		}
	}
}

visMoniker GeoDrawTextMoniker = "GeoDraw";

end	DrawAppResource;


/* ----------------------------------------------------------------------------
	 Primary window.
-----------------------------------------------------------------------------*/

start	Interface;

DrawPrimary = GenPrimary vardataReloc {
	children = 	DrawFileMenu, DrawEditControl, DrawViewControl,
			DrawOptionsMenu, CreateMenubarSpace,
			DrawTransformMenu, 
			DrawArrangeMenu, DrawAttributeMenu,
			DrawTextMenu, DrawDisplayControl,
			TopToolbar, DisplayGroup, BottomToolbar,
			DrawGrObjToolControl, DrawBitmapToolControl;
	hints = {
		HINT_PRIMARY_FULL_SCREEN,
		HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 2>
		},
		/*
		 * Motif will automatically add a help trigger and
		 * place it in the title bar if ATTR_GEN_HELP_CONTEXT is
		 * placed on the GenPrimary.
		 */
		ATTR_GEN_HELP_CONTEXT {
			char "TOC", 0
		},
		ATTR_GEN_PRIMARY_DONE_ON_CLOSE {
		    lptr 0
		    UN_OPTR DrawDocumentControlObj
		    UN_OPTR DrawDisplayGroupObj
		    UN_OPTR DrawPrintControl
		    lptr 0, 0
		    lptr 0, 0
		    lptr 0, offset DrawDoneText, offset DrawDoneMultiText
		    lptr 0, 0
		}
	}
}

visMoniker DrawDoneText = "Close the document and exit GeoDraw.";
visMoniker DrawDoneMultiText = "Close GeoDraw documents and exit.";


DrawFileMenu = GenInteraction {
	children = 	DrawDocumentControlObj,
			DrawImpexSubGroup,
			DrawPrintSubGroup,
			DrawFileExit;
	visibility = popup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE { GenInteractionGroupType GIGT_FILE_MENU } }
}

CreateEditMenuSpace = GenInteraction {
	children = DrawCreateMenu;
	hints = { HINT_SAME_CATEGORY_AS_PARENT }
}

DrawViewControl = GenViewControl {
	minZoom = 12;
	maxZoom = 400;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_VIEW_MENU
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		     GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTRODUCTORY,
		     GVC_SUGGESTED_INTRODUCTORY_FEATURES or mask GVCF_REDRAW>,
		    <GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_BEGINNING,
		     GVC_SUGGESTED_BEGINNING_FEATURES or mask GVCF_REDRAW>,
		    <GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTERMEDIATE,
		     GVC_DEFAULT_FEATURES or mask GVCF_REDRAW or \
						mask GVCF_BIG_ENLARGE>,
		    <GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
		     UIIL_INTRODUCTORY,
		     GVC_DEFAULT_TOOLBOX_FEATURES>
		},
/* XXX		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_TOOLBOX_UI,
		  0,0,
		  0,mask GVCToolboxFeatures
		> } */
	}
}



DrawOptionsMenu = GenInteraction {
/*	moniker = 'O',"Options";  */
	visibility = popup;  
	children = SetUserLevelDialog, OptionsGroup, DrawToolControl,
		   SaveResetGroup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE
			{ GenInteractionGroupType GIGT_OPTIONS_MENU } }
}

OptionsGroup = GenInteraction {
	children = 	FloatingToolbox,
			DrawRulerInteraction,
			DrawGridControl,
			DrawGuideControl,
			DrawInstructionControl,
			DrawHandleControl,
			DrawDraftModeControl;
}

SaveResetGroup = GenInteraction {
	children = SaveOptionsTrigger, ResetOptionsTrigger;
}

CreateMenubarSpace = GenInteraction {
}

DrawCreateMenu = GenInteraction {
	moniker = 'a',"Create";
	visibility = popup;
	children = DrawCreateControl, DrawCustomShapeControl;
}



DrawTransformMenu = GenInteraction {
	moniker = 'n',"Transform";
	children =	DrawFlipControl,
			DrawScaleControl,
			DrawRotateControl,
			DrawSkewControl,
			DrawTransformControl,
#if _BITMAP_EDITING
			DrawPolylineMenu,
			DrawConvertControl;
#else
			DrawPolylineMenu;
#endif


	visibility = popup;
}

DrawArrangeMenu = GenInteraction {
	moniker = 'r',"Arrange";
	children =	DrawDepthControl,
			DrawNudgeControl,
			DrawAlignDistributeControl,
			DrawAlignToGridControl,
			DrawGroupControl;

	visibility = popup;
}

DrawAttributeMenu = GenInteraction {
	moniker = 'A',"Attributes";
	children =	DrawBothColorSelector,
			DrawAreaAttrInteraction,
			DrawLineAttrInteraction,
			DrawBackgroundAttrInteraction,
			DrawStyleSheetControl,
			DrawGradientAttrInteraction,
			DrawArcControl,
#if _BITMAP_EDITING
			DrawBitmapFormatControl,
#endif
			ExtAttrDialog,
			DrawDefaultAttributesControl;
	visibility = popup;
}


DrawPolylineMenu = GenInteraction {
	moniker = 'P', "Polyline";
	children =
		DrawSplinePointControl,
		DrawSplineOpenCloseControl,
		DrawSplineSmoothnessControl;
	visibility = popup;
}

DrawTextMenu = GenInteraction {
	moniker = 'T', "Text";
	children = DrawFontControl, DrawPointSizeControl, DrawTextStyleControl,
		   DrawCharFGColorControl, DrawCharBGColorControl,
		   DrawFontAttrControl, TextParaSubGroup,
		   DrawSearchReplaceControl,DrawSpellControl;
	visibility = popup;
}

TopToolbar = GenInteraction {
	children = 
		DrawViewTools,
		DrawPrintTools,
		DrawEditTools,
		DrawGrObjToolTools,
#if _BITMAP_EDITING
		DrawBitmapToolTools,
#endif
		FontTools,
		PointSizeTools,
		TextStyleTools,
		JustificationTools;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY
	}
}

BottomToolbar = GenInteraction {
	children =
		DrawDocumentTools,
		DrawStyleSheetTools,
		DrawDisplayTools;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY
	}
}

DisplayGroup = GenInteraction {
	children = LeftToolbar, DrawDisplayGroupObj, RightToolbar;
	visibility = subGroup;
	hints = { HINT_ORIENT_CHILDREN_HORIZONTALLY, 
		  HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		  HINT_EXPAND_HEIGHT_TO_FIT_PARENT
	}
}

DrawGrObjToolControl = GrObjToolControl {
	genStates = default -enabled;
	output = DrawGrObjHeadObj;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
				UIIL_INTRODUCTORY,
				mask GOTCF_PTR or mask GOTCF_ROTATE_PTR or \
				mask GOTCF_TEXT or mask GOTCF_LINE or \
				mask GOTCF_RECT or mask GOTCF_ROUNDED_RECT or \
				mask GOTCF_ELLIPSE
			>,<
			GCSUIC_ADD_TOOLBOX_FEATURES_IF_APP_FEATURE_ON,
				mask DF_BASIC_POLYLINE_EDITING,
/* New Deal likely wants: 	mask GOTCF_POLYLINE or mask GOTCF_POLYCURVE */
				mask GOTCF_POLYLINE
			>,<
			GCSUIC_ADD_TOOLBOX_FEATURES_IF_APP_FEATURE_ON,
				mask DF_EXTENDED_POLYLINE_EDITING,
				mask GOTCF_SPLINE
			>,<
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_INTERACTIVE_CREATE,
				0
			>
		}
	}
}

DrawBitmapToolControl = GrObjBitmapToolControl vardataReloc{
	genStates = default -enabled;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask VBTCF_DRAW_RECT or mask VBTCF_DRAW_ELLIPSE
		},
		ATTR_GEN_CONTROL_APP_TOOLBOX_UI {
			UN_OPTR	BitmapPtrTool
		},
		ATTR_VIS_BITMAP_TOOL_CONTROL_POSITION_FOR_ADDED_TOOLS {
			word CCO_FIRST
		}
	}
	output = DrawGrObjHeadObj;
}

BitmapPtrTool = VisBitmapToolItem {
	genStates = default -usable;
	moniker = list {
		BitmapPtrToolTCMoniker,
		BitmapPtrToolTMMoniker,
		BitmapPtrToolTCGAMoniker
	}
	toolClass = 0;
	identifier = -1;
}

JustificationTools = GenToolGroup {
	controller = DrawJustificationControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

FontTools = GenToolGroup {
	controller = DrawFontControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

PointSizeTools = GenToolGroup {
	controller = DrawPointSizeControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

TextStyleTools = GenToolGroup {
	controller = DrawTextStyleControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

end Interface;

start	FileMenuUI;

DrawFileExit = GenTrigger {
    action = MSG_GEN_DISPLAY_CLOSE, DrawPrimary;
    hints = {
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
	    InteractionCommand IC_EXIT
	}
    }
}

DrawImpexSubGroup = GenInteraction {
	children = DrawImpexImportControl, DrawImpexExportControl;
}

DrawImpexImportControl = DrawImportControl vardataReloc{
	visibility = dialog;
	moniker = 'I', "Import Graphic";
	importAttrs = default +nonDocumentImport;
	importDataClasses = graphics;
	importDestination = "TO_APP_TARGET";
	importMessage = "MSG_GB_IMPORT";
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask IMPORTCF_FILE_MASK
		},
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawImport", 0
		},
		ATTR_GEN_DESTINATION_CLASS { UN_DD GrObjBodyClass }
	}
}

DrawImpexExportControl = DrawExportControl vardataReloc{
	moniker = 'E', "Export Graphic";
	exportDataClasses = graphics;
	exportDestination = "TO_APP_TARGET";
	exportMessage = "MSG_GB_EXPORT";
	hints = { 
		ATTR_GEN_DESTINATION_CLASS { UN_DD GrObjBodyClass },
		ATTR_EXPORT_CONTROL_APP_UI { UN_OPTR DrawExportListParent },
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawExport", 0
		}
	}
}

/* DrawExportListGroup = GenInteraction {
	children = DrawExportListParent;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_HORIZONTALLY
	}
	genStates = default -usable;
} */

DrawExportListParent = GenInteraction {
	moniker = "Export:";
	children = DrawExportList;
	genStates = default -usable;
}

DrawExportList = GenItemGroup {
	children = ExportEntireDocumentItem, ExportSelectedObjectsItem;
	selection = "MSG_GB_EXPORT";
	applyMsg = "MSG_EXPORT_CONTROL_SET_MSG";
	destination = DrawImpexExportControl;
	hints = {
		HINT_IF_SYSTEM_ATTRS { SystemAttrs mask SA_HORIZONTALLY_TINY },
			HINT_ITEM_GROUP_MINIMIZE_SIZE,
			HINT_ITEM_GROUP_DISPLAY_CURRENT_SELECTION,
		HINT_ELSE,
			HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_ENDIF
	}
}

ExportEntireDocumentItem = GenItem {
	moniker = 'D', "Entire Document";
	identifier = "MSG_GB_EXPORT";
}

ExportSelectedObjectsItem = GenItem {
	moniker = 'O', "Selected Objects";
	identifier = "MSG_GB_EXPORT_SELECTED_GROBJS";
}

DrawPrintSubGroup = GenInteraction {
	children = DrawPrintControl, 
		   DrawPageSizeControl;
	visibility = subGroup;
}

DrawPrintControl = PrintControl vardataReloc {
	printOutput = "TO_APP_MODEL";
	docNameOutput = DrawDocumentGroupObj;
	printAttributes = default -textOutput, -pageControls;
	hints = {
#if LIMITED_FAX_SUPPORT
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask PRINTCTF_FAX_TRIGGER
		},
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask PRINTCF_FAX_TRIGGER
		},
#endif
		HINT_SAME_CATEGORY_AS_PARENT,
		ATTR_GEN_DESTINATION_CLASS { UN_DD DrawDocumentClass }
	}
}


DrawPageSizeControl = PageSizeControl vardataReloc {
	PAGE_SETUP_CONTROL_VALUES
	pageSizeAttrs = "mask PZCA_ACT_LIKE_GADGET";
	genAttributes = default +notifyVisibility;
	output = "TO_APP_MODEL";
	hints = {
		ATTR_GEN_DESTINATION_CLASS { UN_DD DrawDocumentClass },
		ATTR_GEN_CONTROL_REQUIRE_UI {word mask PSIZECF_MARGINS},
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}
}
end	FileMenuUI;

start	EditMenuUI;


DrawEditControl = GenEditControl vardataReloc {
	visibility = popup;
	hints = {
		ATTR_GEN_CONTROL_APP_UI {
			UN_OPTR EditMenuGroup
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
				UIIL_INTRODUCTORY,
				0
			>,<
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
				UIIL_ADVANCED,
/* New Deal likely wants:	mask GECToolboxFeatures             */
				0
			>
		},
#if _NDO2000
		ATTR_GEN_CONTROL_REQUIRE_UI {
		    word mask GECF_CLIP_ART or mask GECF_CHAR_MAP
		},
#endif
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_EDIT_MENU
		}
	}
}

EditMenuGroup = GenInteraction {
	genStates = default -usable;
	children =	DrawDuplicateInteraction,
			DrawPasteInsideInteraction,
			DrawHideShowControl,
			CreateEditMenuSpace;
}

DrawDuplicateInteraction = GenInteraction {
	moniker = 'l', "Duplicate";
	visibility = popup;
	children = 
		DrawDuplicateControl,
/*#if _NDO2000*/
		DrawDuplicateManyControl,  
/*#endif */
		DrawCustomDuplicateControl;
	hints = { HINT_SAME_CATEGORY_AS_PARENT }
}

DrawDuplicateControl = SubclassedDuplicateControl {
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_BASIC_OPTIONS,
				mask GODCF_DUPLICATE
			>,<
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_BASIC_OPTIONS,
				mask GODCTF_DUPLICATE
			>
		},
		HINT_SAME_CATEGORY_AS_PARENT
	}
}

DrawPasteInsideInteraction = GenInteraction {
	moniker = 'I', "Paste Inside";
	visibility = popup;
	children = DrawPasteInsideControl, DrawMoveInsideControl;
	hints = { HINT_SAME_CATEGORY_AS_PARENT }
}

DrawPasteInsideControl = SubclassedPasteInsideControl {
}

#if _BITMAP_EDITING
DrawConvertControl = GrObjConvertControl {
	moniker = 'C', "Convert";
	visibility = popup;
}
#endif

DrawSearchReplaceControl = SearchReplaceControl {
	SEARCH_AND_REPLACE_TRIGGER_VALUES
	visibility = dialog;
	hints = {
		ATTR_SEARCH_CONTROL_SELECTION_TYPE {
			word 	SDT_TEXT
		}
#if 0
	    	, HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_BEGINNING,
		 SRC_SUGGESTED_BEGINNING_FEATURES>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_ADVANCED,
		 SRC_DEFAULT_FEATURES>
		}
#endif
#ifdef GPC
#if DO_DBCS
		, ATTR_GEN_EXTRA_KBD_ACCELERATORS {
		    KeyboardShortcut <0, 0, 0, 0, C_SYS_F2 and 0xfff>
		}
#else
		, ATTR_GEN_EXTRA_KBD_ACCELERATORS {
		    KeyboardShortcut <0, 0, 0, 0, CS_CONTROL and 0xf, VC_F2>
		}
#endif	/* DO_DBCS */
#endif	/* GPC */
	}
}

DrawSpellControl = SpellControl {
	SPELL_CHECK_TRIGGER_VALUES
	visibility = dialog;
#if 0
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_INTRODUCTORY,
		 SC_SUGGESTED_INTRODUCTORY_FEATURES>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_BEGINNING,
		 SC_DEFAULT_FEATURES>
	    }
	}
#endif
}

end	EditMenuUI;

start	OptionsMenuUI;


DrawToolControl = GenToolControl {
	moniker = 'T', "Customize Tool Bars";
	visibility = dialog;
	type = command;
	toolboxList = DrawToolboxList;
	toolGroupList = DrawToolGroupList;
}

chunk DrawToolboxList = data {
	UN_OPTR TopToolbar
	UN_OPTR TopToolbarName
	UN_OPTR LeftToolbar
	UN_OPTR LeftToolbarName
	UN_OPTR RightToolbar
	UN_OPTR RightToolbarName
	UN_OPTR BottomToolbar
	UN_OPTR BottomToolbarName
	UN_OPTR FloatingToolbox
	UN_OPTR FloatingToolboxName
}

chunk TopToolbarName = "Above Document";
chunk LeftToolbarName = "Left of Document";
chunk RightToolbarName = "Right of Document";
chunk BottomToolbarName = "Below Document";
chunk FloatingToolboxName = "Floating Toolbox";

chunk DrawToolGroupList = data {
	UN_OPTR DrawDocumentTools
	UN_OPTR DrawPrintTools
	UN_OPTR DrawEditTools
	UN_OPTR DrawViewTools
	UN_OPTR DrawDisplayTools
	UN_OPTR DrawDuplicateTools
	UN_OPTR DrawPasteInsideTools
	UN_OPTR DrawGrObjToolTools
#if _BITMAP_EDITING
	UN_OPTR DrawBitmapToolTools
#endif
	UN_OPTR DrawAreaColorTools
	UN_OPTR DrawLineColorTools
	UN_OPTR DrawBothColorTools
	UN_OPTR DrawLineAttrTools
	UN_OPTR DrawTextColorTools
	UN_OPTR DrawStyleSheetTools
	UN_OPTR DrawGroupTools 
/*	UN_OPTR DrawConvertTools	*/
	UN_OPTR DrawDepthTools
	UN_OPTR DrawFlipTools
	UN_OPTR JustificationTools
	UN_OPTR	FontTools
	UN_OPTR	TextStyleTools
	UN_OPTR	PointSizeTools
}

DrawRulerInteraction = GenInteraction {
	moniker = 'R', "Rulers";
	visibility = popup;
	children = DrawRulerTypeControl, DrawRulerShowControl;
}

DrawRulerShowControl = RulerShowControl {
	rulerAttrs = default +showVertical, +showHorizontal;
	message = "MSG_DRAW_DISPLAY_UPDATE_RULERS";
}

DrawRulerTypeControl = RulerTypeControl {
	visibility = subGroup;

}

DrawGridControl = RulerGridControl {
	moniker = 'G', "Grid";
	type = properties;
	visibility = dialog;
}

DrawInstructionControl = GrObjInstructionControl {
	moniker = 'I', "Instructions";
	visibility = popup;
}

DrawGuideControl = RulerGuideControl {
	moniker = 'u', "Guidelines";
	type = properties;
	visibility = dialog;
}

#if _BITMAP_EDITING
DrawBitmapFormatControl = VisBitmapFormatControl {
	moniker = 'F', "Bitmap Format";
	visibility = dialog;
	type = properties;
}
#endif

DrawHandleControl = GrObjHandleControl {
	moniker = 'H', "Handles";
	visibility = popup;
}


SaveOptionsTrigger = GenTrigger {
	SAVE_OPTIONS_TRIGGER_VALUES
	action = MSG_META_SAVE_OPTIONS, DrawApp;
}

ResetOptionsTrigger = GenTrigger {
	RESET_OPTIONS_TRIGGER_VALUES
	action = MSG_DRAW_APPLICATION_QUERY_RESET_OPTIONS, DrawApp;
}

end	OptionsMenuUI;


start	GeometryMenuUI;

DrawDepthControl = GrObjDepthControl {
	visibility = subGroup;
}

DrawFlipControl = GrObjFlipControl {
        moniker = 'F', "Flip";
        visibility = popup;
}

DrawCreateControl = GrObjCreateControl {
	genStates = default +enabled;
	moniker = 'C', "Create";
	visibility = subGroup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_INTRODUCTORY,
				mask GOCCF_RECTANGLE or \
				mask GOCCF_ELLIPSE or \
				mask GOCCF_LINE or \
				mask GOCCF_TRIANGLE or \
				mask GOCCF_OCTOGON or \
				mask GOCCF_FIVE_POINTED_STAR or \
				mask GOCCF_EIGHT_POINTED_STAR
			>,<
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_BEGINNING,
				mask GOCCF_RECTANGLE or \
				mask GOCCF_ELLIPSE or mask GOCCF_LINE or \
				mask GOCCF_ROUNDED_RECTANGLE or \
				mask GOCCF_ARC or \
				mask GOCCF_TRIANGLE or mask GOCCF_OCTOGON or \
				mask GOCCF_FIVE_POINTED_STAR or \
				mask GOCCF_EIGHT_POINTED_STAR
			>
		}
	}
	/* WARNING - there appears to be a buffer size problem in UIC,
	 *           so if you move all of the bitfield entries above 
	 *           onto their own lines, UIC spits out a bogus line. */
}

DrawNudgeControl = GrObjNudgeControl {
	moniker = 'M', "Move";
	visibility = popup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_GEOMETRY,
				mask GONCF_NUDGE_LEFT or \
				mask GONCF_NUDGE_RIGHT or \
				mask GONCF_NUDGE_UP or \
				mask GONCF_NUDGE_DOWN>
		}
	}
}

DrawMoveInsideControl = GrObjMoveInsideControl {
	moniker = 'N', "Nudge Inside";
	visibility = popup;
}

DrawRotateControl = GrObjRotateControl {
	moniker = 'R', "Rotate";
	visibility = popup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_GEOMETRY,
				mask GORCF_90_DEGREES_CW or \
				mask GORCF_180_DEGREES or \
				mask GORCF_90_DEGREES_CCW>
		}
	}
}

DrawScaleControl = GrObjScaleControl {
	moniker = 'S', "Scale";
	visibility = popup;
}

DrawHideShowControl = GrObjHideShowControl {
	moniker = 'H', "Hide";
	visibility = popup;
}

DrawDraftModeControl = GrObjDraftModeControl {
}

DrawCustomShapeControl = GrObjCustomShapeControl {
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_INTRODUCTORY,
				0
			>,<
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_BEGINNING,
				mask GOCSCF_NUM_POLYGON_SIDES or \
					mask GOCSCF_NUM_STAR_POINTS
			>,<
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_INTERMEDIATE,
				mask GOCSCF_NUM_POLYGON_SIDES or \
					mask GOCSCF_POLYGON_RADIUS or \
					mask GOCSCF_NUM_STAR_POINTS or \
					mask GOCSCF_STAR_RADII
			>
		}
	}
}

/*#if _NDO2000 */
DrawDuplicateManyControl = GrObjCustomDuplicateControl {
	moniker = 'M', "Multi-Duplicate";
	visibility = dialog;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbMultiDup", 0
		},
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask GOCDCF_SCALE or mask GOCDCF_SKEW
		}
	}
}
/*#endif */

DrawCustomDuplicateControl = GrObjCustomDuplicateControl {
	moniker = 'C', "Custom Duplicate";
	visibility = dialog;
}

DrawSkewControl = GrObjSkewControl {
	moniker = 'k', "Skew";
	visibility = popup;
}

DrawTransformControl = GrObjTransformControl {
}

DrawAlignDistributeControl = GrObjAlignDistributeControl {
	hints = {
		HINT_SAME_CATEGORY_AS_PARENT
	}

}

DrawAlignToGridControl = GrObjAlignToGridControl {
	moniker = 'A', "Align to Grid";
}

DrawArcControl = GrObjArcControl {
	moniker = 'r', "Arcs";
	type = properties;
	visibility = dialog;
}

DrawGroupControl = GrObjGroupControl {
}

end	GeometryMenuUI;

start	AttributeMenuUI;

ExtAttrDialog = GenInteraction {
	moniker = 'E', "Extended Attributes";
	children = DrawObscureAttrControl, DrawLocksControl;
	visibility = dialog;
	type = properties;
	hints = {
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE,
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawExtAttr", 0
		}
	}
}

DrawObscureAttrControl = GrObjObscureAttrControl {
	hints = {
		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_UI,
		  0, GOOAC_INSERT_OR_DELETE_FEATURES or GOOAC_WRAP_FEATURES,
		  0,0
		> }
	}
}

DrawLocksControl = GrObjLocksControl {
	moniker = "Locks";
	hints = {
		HINT_DRAW_IN_BOX,
		HINT_PLACE_MONIKER_ABOVE
	}
}

DrawDefaultAttributesControl = GrObjDefaultAttributesControl {
}

DrawBothColorSelector = GrObjBothColorSelector {
	genStates = default -usable;
	moniker = 'C', "Color";
	type = properties;
	visibility = dialog;
	hints = {
		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_UI,
		  mask CSF_INDEX, mask CSFeatures and not mask CSF_INDEX,
		  0,0
		> }
	}
}

DrawAreaAttrInteraction = GenInteraction {
	moniker = 'A', "Area Attributes";
	type = properties;
	visibility = dialog;
#if DO_PIZZA
	children = DrawAreaColorSelector;
#else
	children = DrawAreaColorSelector, DrawAreaAttrControl;
#endif
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawArAttr", 0
		}
	}
}

DrawBackgroundAttrInteraction = GenInteraction {
	moniker = 'B', "Background Color";
	type = properties;
	visibility = dialog;
	children = DrawBackgroundColorSelector, DrawBackgroundAttrControl;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawBGAttr", 0
		}
	}
}

DrawAreaColorSelector = GrObjAreaColorSelector vardataReloc{
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_ATTRIBUTES,
				mask CSF_INDEX or mask CSF_PATTERN>
		},
#if DO_PIZZA
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE
#else
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE,
		ATTR_COLOR_SELECTOR_DISABLE_OBJECT {
			UN_OPTR DrawAreaAttrControl
		}
#endif
	}
}

DrawBackgroundColorSelector = GrObjBackgroundColorSelector {
	hints = {
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE
	}
}

#if DO_PIZZA
#else
DrawAreaAttrControl = GrObjAreaAttrControl {
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask GOAACF_TRANSPARENCY
		}
	}
}
#endif
 
DrawBackgroundAttrControl = GrObjAreaAttrControl {
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask GOAACFeatures and not mask GOAACF_TRANSPARENCY
		}
	}
}

DrawGradientAttrInteraction = GenInteraction {
	moniker = 'G', "Gradient Fill";
	type = properties;
	visibility = dialog;
	children = DrawStartingGradientColorSelector,
			DrawEndingGradientColorSelector,
			DrawGradientFillControl;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawGrdnt", 0
		}
	}
}

DrawStartingGradientColorSelector = GrObjStartingGradientColorSelector {
	moniker = "Start Color";
	hints = {
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE,
		HINT_DRAW_IN_BOX,
		HINT_PLACE_MONIKER_ABOVE
	}
}

DrawEndingGradientColorSelector = GrObjEndingGradientColorSelector {
	moniker = "End Color";
	hints = {
			HINT_DRAW_IN_BOX,
			HINT_PLACE_MONIKER_ABOVE
	}
}

DrawGradientFillControl = GrObjGradientFillControl {
}

DrawLineAttrInteraction = GenInteraction {
	moniker = 'L', "Line Attributes";
	type = properties;
	visibility = dialog;
	children = DrawLineColorSelector, DrawLineAttrControl;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "dbDrawLiAttr", 0
		}
	}
}

DrawLineColorSelector = GrObjLineColorSelector vardataReloc{
	hints = {
		HINT_GEN_CONTROL_DESTROY_CHILDREN_WHEN_NOT_INTERACTABLE,
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask CSF_PATTERN
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask CSTF_PATTERN
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_ATTRIBUTES,
				mask CSF_INDEX>
		},
		ATTR_COLOR_SELECTOR_DISABLE_OBJECT {
			UN_OPTR DrawLineAttrControl
		}

	}
}

DrawLineAttrControl = GrObjLineAttrControl {
	hints = {
		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_TOOLBOX_UI,
		  0, 0,
		  0, mask GOLACTF_STYLE
		> },
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_ATTRIBUTES,
				mask GOLACF_WIDTH_INDEX>
		}
	}
}

DrawStyleSheetControl = GrObjStyleSheetControl {
	moniker = 'S', "Graphic Style Sheets";
	visibility = popup;
	hints = {
#if DO_DBCS
		ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_PATH {
			GenFilePath <SP_TEMPLATE, "GeoDraw">
		},
#else
		ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_PATH {
			GenFilePath <SP_TEMPLATE, "GeoDraw Templates">
		},
#endif
		ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_TOKEN {
			GeodeToken	<"DDAT", MANUFACTURER_ID_GEOWORKS>
		},
		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_TOOLBOX_UI,
		  0,0,
		  0,mask SSCToolboxFeatures
		> }
	}
}

end	AttributeMenuUI;

start	PolylineMenuUI;

DrawSplinePointControl = SplinePointControl {
	visibility = subGroup;

	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_INTRODUCTORY,
				mask SPCF_DELETE_ANCHORS or \
				mask SPCF_INSERT_CONTROLS or \
				mask SPCF_DELETE_CONTROLS
			>,<
			GCSUIC_ADD_NORMAL_FEATURES_IF_APP_FEATURE_ON,
				mask DF_EXTENDED_POLYLINE_EDITING,
				mask SPCF_INSERT_ANCHORS
			>
		}
	}
}

DrawSplineOpenCloseControl = SplineOpenCloseControl {
	visibility = subGroup;
}

DrawSplineSmoothnessControl = SplineSmoothnessControl {
	moniker = 'P', "Control Points";
	visibility = popup;
}

end	PolylineMenuUI;


start	TextMenuUI;



DrawFontControl = FontControl {
	moniker = 'n', "Fonts";
	visibility = popup;
}

DrawTextStyleControl = TextStyleControl {
	moniker = 'S', "Styles";
	visibility = popup;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
#if DO_PIZZA
		    word	mask TSCF_INDEX or mask TSCF_ALL_CAP or \
				mask TSCF_SMALL_CAP or mask TSCF_BOXED
#else
		    word	mask TSCF_INDEX or mask TSCF_ALL_CAP or \
				mask TSCF_SMALL_CAP
#endif
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
#if DO_PIZZA
		    word	mask TSCTF_INDEX or mask TSCTF_ALL_CAP or \
				mask TSCTF_SMALL_CAP or mask TSCTF_BOXED
#else
		    word	mask TSCTF_INDEX or mask TSCTF_ALL_CAP or \
				mask TSCTF_SMALL_CAP
#endif
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_TEXT_EDITING,
				mask TSCF_PLAIN or \
				mask TSCF_BOLD or \
				mask TSCF_ITALIC or \
				mask TSCF_UNDERLINE or \
				mask TSCF_STRIKE_THRU or \
				mask TSCF_SUBSCRIPT or \
				mask TSCF_SUPERSCRIPT
			>
		},
	/*
 	 * The HINT_GEN_CONTROL_MODIFY_INITIAL_UI must come after the
	 * HINT_GEN_CONTROL_SCALABLE_UI_DATA, apparently, because this
	 * didn't work when it came before it.
	 */
/*		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_TOOLBOX_UI,
		  0,0,
		  0,mask TSCToolboxFeatures
		>} */
	}
}

DrawPointSizeControl = PointSizeControl {
	moniker = 'z', "Sizes";
	visibility = popup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_TEXT_EDITING,
				mask PSCF_9 or mask PSCF_10 or \
				mask PSCF_12 or mask PSCF_14 or \
				mask PSCF_18 or mask PSCF_24 or \
				mask PSCF_36 or mask PSCF_54 or \
				mask PSCF_72
			>, <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
				UIIL_INTERMEDIATE,
				mask PSCF_9 or mask PSCF_10 or \
				mask PSCF_12 or mask PSCF_14 or \
				mask PSCF_18 or mask PSCF_24 or \
				mask PSCF_36 or mask PSCF_54 or \
				mask PSCF_72 or mask PSCF_SMALLER or \
				mask PSCF_LARGER or mask PSCF_CUSTOM_SIZE
			>, <
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
				UIIL_INTRODUCTORY,
				mask PSCTF_9 or mask PSCTF_10 or \
				mask PSCTF_12 or mask PSCTF_14 or \
				mask PSCTF_18 or mask PSCTF_24 or \
				mask PSCTF_36 or mask PSCTF_54 or \
				mask PSCTF_72
			>
		},

	/*
 	 * The HINT_GEN_CONTROL_MODIFY_INITIAL_UI must come after the
	 * HINT_GEN_CONTROL_SCALABLE_UI_DATA, apparently, because this
	 * didn't work when it came before it.
	 */
/* XXX		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_TOOLBOX_UI,
		  0,0,
		  0,mask PSCToolboxFeatures
		> } */
	}

}

DrawCharFGColorControl = CharFGColorControl {
	moniker = 'T', "Text Color";
	type = properties;
	visibility = dialog;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask CSF_PATTERN
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask CSTF_PATTERN
		},
		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
			mask GCUF_USER_TOOLBOX_UI,
			0, 0,
			0, mask CSTF_INDEX or mask CSTF_DRAW_MASK>
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA {
			GenControlScalableUIEntry <
			GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_EXTENDED_ATTRIBUTES,
				mask CSF_INDEX
			>, <
			GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
				mask DF_BASIC_ATTRIBUTES,
				0
			>
		}
	}
}

DrawCharBGColorControl = CharBGColorControl {
	moniker = 'B', "Text Background Color";
	type = properties;
	visibility = dialog;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask CSTF_PATTERN
		}
	}
}

DrawFontAttrControl = FontAttrControl {
	moniker = 'A', "Character Attributes";
	type = properties;
	visibility = dialog;
}

/* --- */

TextParaSubGroup = GenInteraction {
	children = ParagraphMenu, DrawTextStyleSheetControl;
}

ParagraphMenu = GenInteraction {
	moniker = 'P', "Paragraph";
	children = DrawJustificationControl, DrawLineSpacingControl,
		   DrawParaSpacingControl,
		   DrawParaBGColorControl,
		   DrawMarginControl,
		   DrawTabControl, DrawDefaultTabsControl, BorderSubMenu,
		   /* DrawDropCapControl, */ DrawHyphenationControl;

	visibility = popup;
}

DrawJustificationControl = JustificationControl {
	moniker = 'J', "Justification";
	visibility = popup;
}

DrawLineSpacingControl = LineSpacingControl {
	moniker = 'L', "Line Spacing";
	visibility = popup;
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask DF_EXTENDED_TEXT_EDITING,
		 mask LASCF_SINGLE or mask LASCF_ONE_AND_A_HALF or \
					mask LASCF_DOUBLE>}
	}
}

DrawParaSpacingControl = ParaSpacingControl {
	moniker = 'c', "Paragraph Spacing";
	type = properties;
	visibility = dialog;
}

DrawParaBGColorControl = ParaBGColorControl {
	moniker = 'P', "Paragraph Color";
	type = properties;
	visibility = dialog;
}

DrawTextStyleSheetControl = TextStyleSheetControl {
	moniker = 'e', "Text Style Sheets";
	visibility = popup;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask SSCF_LOAD
		}
	}
}

DrawMarginControl = MarginControl {
	moniker = 'I', "Indents";
	type = properties;
	visibility = dialog;
}

DrawTabControl = TabControl {
	moniker = 'T', "Tabs";
	type = properties;
	visibility = dialog;
}

DrawDefaultTabsControl = DefaultTabsControl {
	moniker = 'D', "Default Tabs";
	type = properties;
	visibility = dialog;
}

BorderSubMenu = GenInteraction {
	moniker = 'B', "Borders";
	children = DrawBorderControl, DrawBorderColorControl;
	visibility = popup;
}

DrawBorderControl = BorderControl {
}

DrawBorderColorControl = BorderColorControl {
	moniker = 'B', "Border Color";
	type = properties;
	visibility = dialog;
}

/* DrawDropCapControl = DropCapControl {
	moniker = 'D', "Drop Cap";
	type = properties;
	visibility = dialog;
} */

DrawHyphenationControl = HyphenationControl {
	moniker = 'H', "Hyphenation";
	type = properties;
	visibility = dialog;
}

end	TextMenuUI;


start	ToolBarsUI;

DrawStyleSheetTools = GenToolGroup {
	controller = DrawStyleSheetControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawGroupTools = GenToolGroup {
	controller = DrawGroupControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

/*
DrawConvertTools = GenToolGroup {
	controller = DrawConvertControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}
*/

DrawDepthTools = GenToolGroup {
	controller = DrawDepthControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawDocumentTools = GenToolGroup {
	controller = DrawDocumentControlObj;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawPrintTools = GenToolGroup {
	controller = DrawPrintControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawViewTools = GenToolGroup {
	controller = DrawViewControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}


DrawDisplayTools = GenToolGroup {
	controller = DrawDisplayControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawEditTools = GenToolGroup {
	controller = DrawEditControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawDuplicateTools = GenToolGroup {
	controller = DrawDuplicateControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawPasteInsideTools = GenToolGroup {
	controller = DrawPasteInsideControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawAreaColorTools = GenToolGroup {
	controller = DrawAreaColorSelector;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawTextColorTools = GenToolGroup {
	controller = DrawCharFGColorControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawBothColorTools = GenToolGroup {
	controller = DrawBothColorSelector;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawLineColorTools = GenToolGroup {
	controller = DrawLineColorSelector;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawLineAttrTools = GenToolGroup {
	controller = DrawLineAttrControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DrawFlipTools = GenToolGroup {
	controller = DrawFlipControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

/*
DrawCreateTools = GenToolGroup {
	genStates = default -usable;
	controller = DrawCreateControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}
*/

LeftToolbar = GenInteraction {
	children = 
		DrawBothColorTools,
		DrawAreaColorTools,
		DrawLineColorTools,
		DrawLineAttrTools,
		DrawTextColorTools;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_VERTICALLY
	}
}

RightToolbar = GenInteraction {
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_VERTICALLY
	}
}

DrawGrObjToolTools = GenToolGroup {
	controller = DrawGrObjToolControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

#if _BITMAP_EDITING
DrawBitmapToolTools = GenToolGroup {
	controller = DrawBitmapToolControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}
#endif

/*
 * this is used in the window menu but is small and gets loaded on
 * start up so I stuck it here
 *
 */

DrawDisplayControl = GenDisplayControl {
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_WINDOW_MENU
		},
		HINT_DISPLAY_CONTROL_NO_FEATURES_IF_TRANSPARENT_DOC_CTRL_MODE,
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		     GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTRODUCTORY,
		     mask GDCTF_DISPLAY_LIST>,
		    <GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTERMEDIATE,
		     GDC_DEFAULT_FEATURES>},

		HINT_GEN_CONTROL_MODIFY_INITIAL_UI { GenControlUserData <
		  mask GCUF_USER_TOOLBOX_UI,
		  0,0,
		  0,mask GDICToolboxFeatures
		> }
	}
}

FloatingToolbox = GenInteraction {
	moniker = 'F', "Floating Toolbox";
	visibility = dialog;
	children = DrawFlipTools, DrawDepthTools,
			DrawGroupTools, DrawDuplicateTools,
			DrawPasteInsideTools;
	hints = {
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_TOOLBOX,
/*
		HINT_INITIAL_SIZE {
			SpecWidth  <>
			SpecHeight <SST_PIXELS,18*4>
			word	4
		},
*/
		HINT_INTERACTION_MAKE_RESIZABLE,
/*
		HINT_MINIMUM_SIZE {
			SpecWidth <SST_PIXELS, 18+12>
			SpecHeight <SST_PIXELS, 18+12>
			word	1
		},
*/
		HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT {
	     	   SpecWinSizePair <	mask SWSS_RATIO or PCT_5, \
					mask SWSS_RATIO or PCT_15	 >
		}
	}
}


end	ToolBarsUI;
