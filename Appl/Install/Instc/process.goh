@include "../Shared/instllr.goh"

extern VMBlockHandle ICGetMainArrayHandle(void);
extern void ICAddMainEntry(InstallEntry *entryPtr);
extern InstallEntry * ICLockMainArrayElement(word item);
extern void ICUnlockMainArray(InstallEntry 	*elemPtr );
extern void ICEnableTriggers(word triggres);
extern void ICInitiateReadFileBox(void);
extern void ICCloseReadFileBox(void);
extern Boolean ICIsSystemDir(FileMainParams *params);
extern void UpdateDocumentUI(void);

extern void 	LocalScramblePwd(char * pwd);
extern word GetInstallOptions(word startOptions);
typedef enum {
	SIF_TYPE_ALL,
	SIF_TYPE_GEOS,
	SIF_TYPE_FOLDERS
	} SelectInstallType;
extern Boolean SelectInstallFile( FileMainParams *params, SelectInstallType type);
extern int ICCheckForExistingFile(FileMainParams *params, word *itemFound);
extern Boolean ICDoDosTokenDialog(DosTokenParams *tokParams);
extern void ICAddDosTokenEntry(DosTokenParams *tokenParams);
extern void ICAddFileEntry(FileMainParams *params, word flags, word type);
extern Boolean ICWriteFileToHugeArray(FileMainParams *fParams,VMFileHandle  docFile);
extern void ICDeleteEntry(word item);
extern void ICUpdateFileEntry ( word item );
extern Boolean ICCompleteFileMainParams(FileMainParams *params);

extern void ToolDisplayFileInfo(InstallEntry	*entryPtr);
extern void ToolConstructPath(char *buffer, DiskHandle dh, char *path, char *file);

/*--------------------- ICUpdateCurrentDataText ---------------------
 *	Aufgabe:
 *	Zusammenhang:
 *	Strategie:
 *	Parameter:
 ---------------------------------------------------------------------------*/
void ICUpdateCurrentDataText(FileMainParams *info, Boolean enable);

/*--------------------- ICUpdateStatusBar ---------------------
 *      Aufgabe:        Mehr FileInfo in der Statusbar anzeigen.
 ---------------------------------------------------------------------------*/
void ICUpdateStatusBar(InstallEntry	* entryPtr);

