@include "password.goh"
@start PasswordWithHintResource;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass PwdAskPasswordDialog = {
        GI_visMoniker = "Password Check" ;
@ifdef DESKTOP_BUILD
        GI_comp = @PwdAskPasswordContents ;
        GII_visibility = GIV_DIALOG ;
@endif
@ifdef N9000_BUILD
        GI_comp = @PwdAskPasswordBorder ;
        GII_visibility = GIV_POPUP ;
@endif

        GII_type = GIT_COMMAND ;
        GII_attrs = @default |
                    GIA_MODAL |
                    GIA_NOT_USER_INITIATABLE |
                    GIA_INITIATED_VIA_USER_DO_DIALOG ;
        HINT_ORIENT_CHILDREN_VERTICALLY ;
        HINT_CENTER_CHILDREN_ON_MONIKERS ;
@ifdef N9000_BUILD
        HINT_DRAW_IN_BOX ;
        HINT_DRAW_SHADOW ;
        HINT_EXPAND_HEIGHT_TO_FIT_PARENT ;
@endif
        ATTR_GEN_HELP_CONTEXT = "Password Check";
    }
    /*---------------------------------------------------------------------*/
@ifdef N9000_BUILD
    @chunk TCHAR PwdAskPasswordBorderTitle[] = "Password Check";
    @object ComplexMonikerClass PwdAskPasswordBorder =  {
        ComplexMoniker = GenInteractionClass;
        CMI_topText = @PwdAskPasswordBorderTitle;
        CMI_fontSize = FOAM_NORMAL_FONT_SIZE;
        GI_comp = @PwdAskPasswordContents ;
        CMI_iconBitmap = CMB_SERVICES_DEFINE;
/*
        HINT_DRAW_IN_BOX;
        HINT_DRAW_SHADOW;
*/
        HINT_PLACE_MONIKER_ABOVE;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT;
        HINT_COMPLEX_MONIKER_DRAW_SEPARATOR;
        ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN;
        HINT_INDENT_CHILDREN = FOAM_HEADER_ICON_WIDTH ;
        ATTR_COMPLEX_MONIKER_PLACE_BITMAP_AT_LEFT;
    }
@endif
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass PwdAskPasswordContents = {
        GI_comp =
            @PwdPasswordText,
            @PwdHintText,
            @PwdPasswordOKTrigger,
            @PwdPasswordChangeTrigger ;
        HINT_CENTER_CHILDREN_ON_MONIKERS ;
        ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_EXPAND_HEIGHT_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
@ifdef DESKTOP_BUILD
    @object GenTextClass PwdPasswordText = {
@endif
@ifdef N9000_BUILD
    @object NSafeGenTextClass PwdPasswordText = {
@endif
        GI_visMoniker = "Password:" ;
        GTXI_maxLength = PASSWORD_MAX_LENGTH ;
        GTXI_text = "" ;
        GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
        ATTR_GEN_TEXT_CHAR_ATTR = OptrToChunk(@UserPasswordFont);
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_DEFAULT_FOCUS ;
    }
    /*---------------------------------------------------------------------*/
    @chunk VisTextCharAttr UserPasswordFont =
                               CHAR_ATTR_FONT_SIZE(FID_BISON, 13) ;
    /*---------------------------------------------------------------------*/
    @object GenTextClass PwdHintText = {
        GI_visMoniker = "Hint:" ;
        GI_attrs = @default | GA_READ_ONLY ;
        GTXI_text = "" ;
        GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
        GTXI_maxLength = PASSWORD_HINT_LENGTH ;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass PwdPasswordOKTrigger = {
        GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE ;
        HINT_SEEK_REPLY_BAR ;
        ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_OK ;
        HINT_DEFAULT_DEFAULT_ACTION ;
@ifdef N9000_BUILD
        HINT_SEEK_SLOT = 0;
@endif
    }
    /*---------------------------------------------------------------------*/
@ifdef N9000_BUILD
    @chunk TCHAR PasswordChangeMoniker [] = "Change\rPassword" ;
    @object ComplexMonikerClass PwdPasswordChangeTrigger = {
        ComplexMoniker = GenTriggerClass ;
        CMI_topText = @PasswordChangeMoniker ;
        HINT_SEEK_MENU_BAR ;
        HINT_SEEK_SLOT = 1;
        GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE ;
        ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_RESET ;
    }
@endif
@ifdef DESKTOP_BUILD
    @object GenTriggerClass PwdPasswordChangeTrigger = {
        GI_visMoniker = 'C', "Change password" ;
        GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE ;
        HINT_SEEK_REPLY_BAR ;
        ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_RESET ;
    }
@endif
    /*---------------------------------------------------------------------*/
@end PasswordWithHintResource ;


@start ChangePasswordResource ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass PwdChangePasswordDialog = {
        GI_visMoniker = "Change Passsword" ;
@ifdef DESKTOP_BUILD
        GI_comp = @PwdChangePasswordContents ;
@endif
@ifdef N9000_BUILD
        GI_comp = @PwdChangePasswordBorder ;
@endif
        GII_visibility = GIV_DIALOG ;
        GII_type = GIT_COMMAND ;
        GII_attrs = @default |
                    GIA_MODAL |
                    GIA_NOT_USER_INITIATABLE |
                    GIA_INITIATED_VIA_USER_DO_DIALOG ;
        HINT_ORIENT_CHILDREN_VERTICALLY ;
        HINT_CENTER_CHILDREN_ON_MONIKERS ;
        ATTR_GEN_HELP_CONTEXT = "Change Password";
    }
    /*---------------------------------------------------------------------*/
@ifdef N9000_BUILD
    @chunk TCHAR PwdChangePasswordBorderTitle[] = "Change Password";
    @object ComplexMonikerClass PwdChangePasswordBorder =  {
        ComplexMoniker = GenInteractionClass;
        CMI_topText = @PwdChangePasswordBorderTitle;
        CMI_fontSize = FOAM_NORMAL_FONT_SIZE;
        GI_comp = @PwdChangePasswordContents ;
        CMI_iconBitmap = CMB_SERVICES_DEFINE;
        HINT_DRAW_IN_BOX;
        HINT_DRAW_SHADOW;
        HINT_PLACE_MONIKER_ABOVE;
/*        HINT_EXPAND_WIDTH_TO_FIT_PARENT; */
        HINT_COMPLEX_MONIKER_DRAW_SEPARATOR;
        ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN;
        HINT_INDENT_CHILDREN = FOAM_HEADER_ICON_WIDTH ;
        ATTR_COMPLEX_MONIKER_PLACE_BITMAP_AT_LEFT;
    }
@endif
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass PwdChangePasswordContents = {
        GI_comp =
            @PwdChangePassword1,
            @PwdChangePassword2,
            @PwdChangePasswordHint,
            @PwdChangePasswordNote,
            @PwdChangePasswordOK;
        HINT_CENTER_CHILDREN_ON_MONIKERS ;
        ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_EXPAND_HEIGHT_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
@ifdef N9000_BUILD
    @object NSafeGenTextClass PwdChangePassword1 = {
@else
    @object GenTextClass PwdChangePassword1 = {
@endif
        GI_visMoniker = "Password:" ;
        GTXI_maxLength = PASSWORD_MAX_LENGTH ;
        GTXI_text = "" ;
        GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
        ATTR_GEN_TEXT_CHAR_ATTR = OptrToChunk(@UserChangePasswordFont);
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_DEFAULT_FOCUS ;
        HINT_DEFAULT_TARGET ;
    }
    /*---------------------------------------------------------------------*/
@ifdef N9000_BUILD
    @object NSafeGenTextClass PwdChangePassword2 = {
@else
    @object GenTextClass PwdChangePassword2 = {
@endif
        GI_visMoniker = "Retype Password:" ;
        GTXI_maxLength = PASSWORD_MAX_LENGTH ;
        GTXI_text = "" ;
        GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
        ATTR_GEN_TEXT_CHAR_ATTR = OptrToChunk(@UserChangePasswordFont);
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
@ifdef N9000_BUILD
    @object NSafeGenTextClass PwdChangePasswordHint = {
@else
    @object GenTextClass PwdChangePasswordHint = {
@endif
        GI_visMoniker = "Hint:" ;
        GTXI_text = "" ;
        GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
        GTXI_maxLength = PASSWORD_HINT_LENGTH ;
@ifdef N9000_BUILD
        HINT_MINIMUM_SIZE = { SST_PIXELS | 260, 0 } ;
@else
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_MINIMUM_SIZE = { SST_PIXELS | 400, 0 } ;
@endif
    }
    /*---------------------------------------------------------------------*/
    @object GenTextClass PwdChangePasswordNote = {
        GI_visMoniker = "NOTE! " ;
        GI_attrs = @default | GA_READ_ONLY ;
        GTXI_text = "A hint is a reminder shown when asked for a password.  Be sure to put in information only you know.  This feature is optional." ;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass PwdChangePasswordOK = {
        GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE ;
        HINT_SEEK_REPLY_BAR ;
        ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_OK ;
        HINT_DEFAULT_DEFAULT_ACTION ;
@ifdef N9000_BUILD
        HINT_SEEK_SLOT = 0;
@endif
    }
    /*---------------------------------------------------------------------*/
    @chunk VisTextCharAttr UserChangePasswordFont =
                               CHAR_ATTR_FONT_SIZE(FID_BISON, 13) ;
    /*---------------------------------------------------------------------*/
@end ChangePasswordResource ;

@start PwdStrings, data ;
    /*---------------------------------------------------------------------*/
    @chunk char PwdBadPassword[] = "Access denied! Enter password first." ;
    @chunk char PwdChangePasswordError[] = "The entered passwords do not match.  Please try again." ;
    @chunk char PwdOkToDelete[] = "Are you sure you want to delete this item?" ;
    /*---------------------------------------------------------------------*/
    
@chunk TCHAR DelWarnString[] = "Are you sure you want to permanently delete the word \"\001\" from the Word Matcher dictionary?";

@chunk TCHAR AddInfoStr[] = "No match is found for the word for which you are searching.  Would you like to add this word to the Word Matcher dictionary?";
//chunk TCHAR NotFoundInfoStr[] = "No words were found with that search pattern.";
@chunk TCHAR noFoundInfoStr[] = "No matching word was found for your search";
@chunk TCHAR ErrStr1[] = "Can't add word - no Word match data file";
@chunk TCHAR ErrStr2[] = "Can't add word - word is too short";
@chunk TCHAR ErrStr3[] = "Can't add word - word is too long";
@chunk TCHAR ErrStr4[] = "Can't add word - couldn't create memory block";

    
@end PwdStrings ;



