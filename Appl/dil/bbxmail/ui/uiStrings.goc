/***********************************************************************
 *
 *	Copyright (c) Designs in Light 2002 -- All Rights Reserved
 *
 * PROJECT:	  TVK Mail
 * MODULE:	  TKK Mail
 * FILE:	  uiStrings.goc
 *
 ***********************************************************************/

@include	<stdapp.goh>
@include        <ui.goh>
@include        <product.goh>
@include        "mail.goh"

@start STRINGS, data;

@chunk TCHAR msglistName[] ="msglist";
@localize not;

@chunk TCHAR addrBookFileName[] = "My Contacts";
@localize {"name of address book data file located in Document folder" 1-32};
@chunk TCHAR addrBookMailField[] = "email";
@localize {"name of address book field for email - make sure this is the same as the field's name in the Contacts app"};
@chunk TCHAR addrBookAliasField[] = "alias";
@localize {"name of address book field for aliases"};

@chunk TCHAR printMessageName[] = "Mail Message";
@localize {"string for document name when printing"};


@chunk TCHAR messTitleMkr[] = "\"%s\"";
@localize {"used to create the moniker for the message read window" 1-128};

@chunk TCHAR messTitleNoSubjMkr[] = "[No Subject]";
@localize {"used to create the moniker for the message read window for a message with no subject"};

@chunk TCHAR messListNoSubjMkr[] = "[No Subject]";
@localize {"used to create the moniker for the message list for a message with no subject"};



@chunk TCHAR folderExistsErr[] = "A folder named \"\1\" already exists.";
@localize {"error when trying to create a folder that already exists; @1 is the folder name"};

@chunk TCHAR folderNoCreateErr[] = "An error occurred trying to create the folder.";
@localize {"generic error when trying to create a folder"};

@chunk TCHAR folderNoRenameErr[] = "Unable to rename the folder \"\1\".";
@localize {"generic error when trying to rename a folder"};

@chunk TCHAR folderRenameExistsErr[] = "Unable to rename the folder to \"\1\". A folder with that name already exists.";
@localize {"error when trying to rename a folder to a name that already exists; @1 is the new folder name"};

@chunk TCHAR addrLaunchErr[] = "Unable to open the Contacts application.";
@localize {"error from File / Address Book (Contacts app)"};

@chunk TCHAR browserLaunchErr[] = "Unable to open the browser.";
@localize {"error after clicking on a URL in a message"};

@chunk TCHAR docLaunchErr[] = "Unable to open an application for the attachment.";
@localize {"error trying to open attachment"};

@chunk TCHAR emptyToFieldErr[] = "The To: field must be filled in.";
@localize {"error when To: field is left empty"};

@chunk TCHAR unableToCreateMessageErr[] = "Error: unable to create the message.";
@localize {"error when file error occurs creating the message."};

@chunk TCHAR unableToSaveMessageErr[] = "Error: unable to save the message.";
@localize {"error when file error occurs saving the message."};

@chunk TCHAR unableToOpenMessageErr[] = "Error: unable to open message.";
@localize {"error when file error occurs opening the message."};


@chunk TCHAR saveThrowBackStr[]="This message has not yet been sent. Do you want to save it, throw it away, or go back to the message window?";
@localize {"message when user exits New Message window without saving or sending the message. buttons=save/throw away/back"};

@chunk TCHAR unableToMoveMessageStr[] = "Error: unable to move the message to the folder \"\1\".";
@localize {"error when file error occurs moving a message from one file to another; @1 is the folder name"};
@chunk TCHAR unableToRecoverStr[] = "Error: unable to recover the message.";
@localize {"error when file error occurs recovering a message from Trash"};

@visMoniker yesMoniker = 'Y', "Yes";
@localize {"used for standard OK/Cancel dialogs"};

@visMoniker noMoniker = 'N', "No";
@localize {"used for standard OK/Cancel dialogs"};

@visMoniker saveMoniker = 'S', "Save";
@localize {"used for save/throw away/back message dialog"};
@visMoniker throwAwayMoniker = 'T', "Throw Away";
@localize {"used for save/throw away/back message dialog"};
@visMoniker backMoniker = 'B', "Back";
@localize {"used for save/throw away/back message dialog"};

@visMoniker readMoniker = "Read";
@localize {"used for read/edit message button"};
@visMoniker editMoniker = "Edit";
@localize {"used for read/edit message button"};

@chunk TCHAR folderDeleteEmpty[] = "Delete the folder \"\1\"?";
@localize {"yes/no message for deleting an empty folder"};

@chunk TCHAR folderDeleteNonEmpty[] = "The folder \"\1\" contains messages. You will not be able to undo this action. Delete it any way?";
@localize {"yes/no message for deleting a non-empty folder"};

@chunk TCHAR folderDeleteErr[] = "Unable to delete the folder \"\1\".";
@localize {"error when deleting a folder fails"};

@chunk TCHAR emptyTrashStr[] = "Delete all messages in the Trash?";
@localize {"yes/no message for emptying the trash"};

@chunk TCHAR deleteAccountStr[] = "This will delete all messages, folders, and attachments for this account. You will not be able to undo this action. Do you wish to proceed?";
@localize {"yes/no message for deleting an account"};

@chunk TCHAR deleteAccountErr[] = "Unable to delete the account. A file may be open by another application.";
@localize {"error when deleting an account fails"};

@chunk TCHAR messageSavedStr[] = "Your message \"\1\" has been saved.";
@localize {"OK message after successfully saving a draft message; @1 is the subject"};

@ifndef MANUAL_RECOVER
@chunk TCHAR messageRecoveredStr[] = "Your message has been recovered to the folder \"\1\".";
@localize {"OK message after recovering a message from the trash; @1 is the folder name the message was recovered to"};
@endif

@chunk TCHAR unableToCreateAccountErr[] = "An error occurred when creating the account \"\1\".";
@localize {"file error when creating an account; @1 is the account name"};

@chunk TCHAR defaultAccountErr[] = "An error occurred when creating the default account.";
@localize {"error when creating the default mail account; app exits"};

@chunk TCHAR accountExistsErr[] = "Error: an account named \"\1\" already exists.";
@localize {"error for new account when account already exists; @1 is the account name"};

@chunk TCHAR unableToSaveAccountErr[] = "Error: unable to save account information.";
@localize {"memory alloc or file error when saving account info"};

@chunk TCHAR attachFileTwiceStr[] = "The file \"\1\" is already attached. Do you wish to attach it again?";
@localize {"yes/no when file has already been attached; @1 is filename"};

@chunk TCHAR noMoreFoundStr[] = "No more instances of \"\1\" were found.";
@localize {"message when search fails or wraps completely; @1 is the search string"};

@chunk TCHAR copyAttachErr[] = "Unable to copy the attachment file \"\1\".";
@localize {"error when copying a forwarded attachment; @1 is the attachment file name"};

@chunk TCHAR saveAttachOverwriteStr[] = "\"\1\" already exists. Would you like to overwrite it?";
@localize {"message when saving an attachment where the file already exists; @1 is the attachment name"};

@chunk TCHAR saveAttachErr[] = "Unable to save the attachment file \"\1\".";
@localize {"error when saving an attachment; @1 is the attachment file name"};

@chunk TCHAR saveAttachNameErr[] = "Invalid file name. The file name must be less than 8.3 characters for DOS files, and 32 characters for other files.";

@chunk TCHAR attachNoExistStr[] = "One or more of the attachments cannot be opened.  Would you like to send the message anyway?";
@localize {"message when attachments for message being sent cannot be opened."};

@chunk TCHAR enterPasswordStr[] = "Please enter the password for %s.";
@localize {"prompt displayed when asking the user for a password; %s is mail account"};

@chunk TCHAR noServerErr[] = "You must configure your e-mail account first.";
@localize {"error when trying to send or receive mail with no account set up"};

@chunk TCHAR attachUnreadable[] = " (file unreadable)";
@localize {"string appended to open/convert/save attachment dialog if file missing or unreadable"};

/*------------------------------------------------------------------------*/

@chunk TCHAR fromFieldStr[] = "From: ";
@localize {"string displayed for From: field; must end with : "};
@chunk TCHAR fromFieldOut[] = "From: ";
@localize not;
@chunk TCHAR fromFieldName[] = "FROM";
@localize not;
@chunk TCHAR replyToFieldName[] = "REPLY-TO";
@localize not;

@chunk TCHAR subjectFieldStr[] = "Subject: ";
@localize {"string displayed for Subject: field; must end with : "};
@chunk TCHAR subjectFieldOut[] = "Subject: ";
@localize not;
@chunk TCHAR subjectFieldName[] = "SUBJECT";
@localize not;

@chunk TCHAR toFieldStr[] = "To: ";
@localize {"string displayed for To: field; must end with : "};
@chunk TCHAR toFieldOut[] = "To: ";
@localize not;
@chunk TCHAR toFieldName[] = "TO";
@localize not;

@chunk TCHAR dateFieldStr[] = "Date: ";
@localize {"string displayed for Date: field; must end with : "};
@chunk TCHAR dateFieldOut[] = "Date: ";
@localize not;
@chunk TCHAR dateFieldName[] = "DATE";
@localize not;

@chunk TCHAR ccFieldStr[] = "Cc: ";
@localize {"string displayed for Cc: field; must end with : "};
@chunk TCHAR ccFieldOut[] = "Cc: ";
@localize not;
@chunk TCHAR ccFieldName[] = "CC";
@localize not;

@ifdef BCC_SUPPORT
@chunk TCHAR bccFieldStr[] = "Bcc: ";
@localize {"string displayed for Bcc: field; must end with : "};
@chunk TCHAR bccFieldOut[] = "Bcc: ";
@localize not;
@chunk TCHAR bccFieldName[] = "BCC";
@localize not;
@endif

@chunk TCHAR xdirFieldOut[] = "X-Dir: ";
@localize not;
@chunk TCHAR xdirFieldName[] = "X-DIR";
@localize not;

@chunk TCHAR xreadFieldOut[] = "X-Read: R\r";
@localize not;
@chunk TCHAR xreadFieldName[] = "X-READ";
@localize not;

@chunk TCHAR xmailerFieldStr[] = "X-Mailer: BBX Mail 1.1";
@localize not;

@chunk TCHAR addrSeparator[] = ", ";
@localize not;

@chunk TCHAR dateFormatStr[] = "|SW|, |SD| |SM| |SY| |Zh|:|Zm|:|Zs|";
@localize not;

@chunk TCHAR dateFormatStrAlt1[] = "|SD| |SM| |SY| |Zh|:|Zm|:|Zs|";
@localize not;

@chunk TCHAR timeFormatStr[] = "|Zh|:|Zm|:|Zs|";
@localize not;

@chunk TCHAR reStr[] = "Re: ";
@localize {"string prepended to subject for replying to messages"};

@chunk TCHAR fwdStr[] = "Fwd: ";
@localize {"string prepended to subject for forwarded message"};

@chunk TCHAR replyAtStr[] = "At %s, %s wrote:\r";
@localize {"string used for message replies; first %s is date & time, 2nd is sender"};

@chunk TCHAR replyDateFormatStr[] = "|HH|:|Zm||AP| |NM|/|SD|/|SY|";
@localize {"date/time format in for replies"};

@chunk TCHAR noSubjectStr[] = "No Subject";
@localize {"string for message with no subject"};

@chunk TCHAR sendingStatus[] = "Sending mail";
@localize {"string to notify the user that email is sending messages"};

@chunk TCHAR sendProgress[] = "Sending %d of %d";
@localize {"string to notify the user which message is being sent"};

@chunk TCHAR receivingStatus[] = "Receiving mail";
@localize {"string to notify the user that email is receiving messages"};

@chunk TCHAR checkMailStatus[] = "Checking for new mail";
@localize {"string to notify user that email is checking for new messages"};

@chunk TCHAR connectingStatus[] = "Connecting";
@localize {"string to notify user that email is connecting to the server"};

@chunk TCHAR receiveProgress[] = "Receiving %d of %d";
@localize {"string to notify the user which message is being received"};

@chunk TCHAR meFailedToConnectSMTP[] = "Failed to connect to email server";
@localize {"Error message notifying user that email failed to connect to the SMTP server"};

@chunk TCHAR meUnknownError[] = "The email exchange failed.";
@localize {"Email failed to send or receive for an unknown reason"};

@chunk TCHAR meHostNotResolved[] = "Failed because the host cannot be resolved.";
@localize {"Notify user email failed because host was not resolved"};

@chunk TCHAR meHostUnreachable[] = "Failed because the host is not reachable.";
@localize {"Notify user email failed because host was not reachable"};

@chunk TCHAR meLoginFailed[] = "Failed because login failed.";
@localize {"Notify User Login Failed"};

@chunk TCHAR meNetworkError[] = "The connection was lost during message transfer. Please check your internet connection and try again.";
@localize {"Notify of network error"};

@chunk TCHAR meUserStopped[] = "The email connection has been stopped.";
@localize {"User has terminated the connection"};

@chunk TCHAR mailToSendStr[] = "You still have email messages waiting to be sent. Would you still like to exit, or send the mail?";
@localize {"message displayed when mail still in Outbox when exiting"};

@visMoniker exitMoniker = 'E', "Exit";
@localize {"used for mailToSendStr"};
@visMoniker sendMoniker = 'S', "Send";
@localize {"used for mailToSendStr"};

@chunk TCHAR stopStopTrigger[] = "Stop";
@localize {"text for the button to cancel sending of email"};

@chunk TCHAR stoppingStr[] = "Stopping\xc9please wait";
@localize {"string when canceling sending of email"};

@chunk TCHAR attachmentProgress[] = "Attachment: ";
@localize {"moniker for the progress gen value when sending attachments"};

@chunk TCHAR defaultProgress[] = "Progress: ";
@localize {"default moniker for the download progress bar"};

@chunk TCHAR warnTrash1[] = "Warning! The Trash folder has \2 messages in it and is starting to get full. You should empty the trash.";
@localize {"warning for 400, 450 messages in Trash; @2 is # messages"};

@chunk TCHAR warnOutbox1[] = "Warning! The Outbox folder has \2 messages in it and is starting to get full. You should send the queued messages.";
@localize {"warning for 400, 450 messages in Outbox; @2 is # messages"};

@chunk TCHAR warnOther1[] = "Warning! The folder \"\1\" has \2 messages in it and is starting to get full. You should delete some of the messages or move them to other folders.";
@localize {"warning for 400, 450 messages in other folders; @1 is folder name; @2 is # messages"};

@chunk TCHAR warnTrash3[] = "Warning! The Trash folder is full. Empty the trash immediately.";
@localize {"warning for 500 messages in the Trash; @2 is # messages"};

@chunk TCHAR warnOutbox3[] = "Warning! The Outbox folder is full. Either send the messages or delete some of them immediately.";
@localize {"Warning for 500 messages in the Outbox; @2 is # messages"};

@chunk TCHAR warnOther3[] = "Warning! The folder \"\1\" has \2 messages in it and is full. Delete some of the messages or move them to other folders immediately.";
@localize {"Warning for 500 messages in other folders; @1 is folder name; @2 is # messages"};

@chunk TCHAR warnBadAddress[] = "The message with subject \"\1\" has a bad address \"\2\"";
@localize {"Warning for a badly formatted address"};
@chunk TCHAR warnBadAddress2[] = "The message with subject \"\1\" has a bad or missing address";
@localize {"Warning for a badly formatted or missing address"};

@chunk TCHAR badAddrErr[] = "\"\1\" is not a valid email address.";
@localize {"error if the user enters a bad email address in a field"};

@chunk TCHAR nonLatin1Err[] = "The text that was pasted contained characters that are not supported by email. These characters were replaced with underscores (_).";
@localize "error when pasting text outside Latin-1 character set into email";

@chunk TCHAR noGraphicsErr[] = "Graphics cannot be pasted into email messages. They must be included as file attachments.";
@localize "error when pasting graphics into email";

@ifdef COMPOSE_SEND_NOW
@chunk TCHAR composeSendNowMultipleStr[] = "You have other email waiting to be sent. Would you like to send these as well?";
@endif

@ifdef LEAVE_MAIL_ON_SERVER

@chunk TCHAR deleteStatus[] = "Checking for messages to delete";
@localize {"progress string when checking for messages previously left on server that can now be deleted"};

@chunk TCHAR deleteProgress[] = "Deleting message %d from server";
@localize {"progress string when deleting a message that had previously been left on the server"};

@endif

@chunk TCHAR CantDeselectDefaultMsg[] = "You can not de-select a default account.  To make another account the default, select it in the Account Settings window and check the Default account on startup box.";

/* strings to put date into date field of outgoing email per RFC2822 */
@chunk char MonStr[] = "Mon";
@localize not;
@chunk char TueStr[] = "Tue";
@localize not;
@chunk char WedStr[] = "Wed";
@localize not;
@chunk char ThuStr[] = "Thu";
@localize not;
@chunk char FriStr[] = "Fri";
@localize not;
@chunk char SatStr[] = "Sat";
@localize not;
@chunk char SunStr[] = "Sun";
@localize not;

@chunk char JanStr[] = "Jan";
@localize not;
@chunk char FebStr[] = "Feb";
@localize not;
@chunk char MarStr[] = "Mar";
@localize not;
@chunk char AprStr[] = "Apr";
@localize not;
@chunk char MayStr[] = "May";
@localize not;
@chunk char JunStr[] = "Jun";
@localize not;
@chunk char JulStr[] = "Jul";
@localize not;
@chunk char AugStr[] = "Aug";
@localize not;
@chunk char SepStr[] = "Sep";
@localize not;
@chunk char OctStr[] = "Oct";
@localize not;
@chunk char NovStr[] = "Nov";
@localize not;
@chunk char DecStr[] = "Dec";
@localize not;

@end STRINGS;
