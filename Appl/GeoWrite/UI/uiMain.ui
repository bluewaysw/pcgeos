/*
 * Project:	GeoWrite
 * File:	UI/uiMain.ui
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	Tony Requist	    Initial version
 *	12/2023	  RainerB   Renamed from Writer to GeoWrite
 *
 *	This file contains the user interface description for the main
 *	part of the word processor.
 *
 *	$Id: uiMain.ui,v 1.6 98/04/28 10:39:50 joon Exp $
 *
 */

#include "Art/mkrEditTextTool.ui"
#include "Art/mkrBitmapPtrTool.ui"

#include "Art/mkrGeoWrite.ui"
#include "Art/mkrGeoWriteTiny.ui"

start ApplicationUI;

/* ----------------------------------------------------------------------------
	Application object
-----------------------------------------------------------------------------*/

WriteApp = WriteApplication vardataReloc {
	children = WritePrimary;

	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) =
		WritePrimary;

	gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_APP_STARTUP) =
		WriteDocumentControl;

	gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_ACTIVE_LIST) =
		WriteDocumentControl,
		WriteDisplayControl,
		WriteViewControl,

			/* Fax */
#if FAX_SUPPORT || LIMITED_FAX_SUPPORT
		WriteSendControl,
#endif

			/* Text library */

		WriteRulerShowControl,
		WriteTextRulerControl, WriteTabControl;

	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_STARTUP_LOAD_OPTIONS) =
		WriteToolControl,
		ShowBarList, MiscSettingsList, UserLevelList;

	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
		WriteDocumentControl,WritePrintControl,
#if LIMITED_FAX_SUPPORT
		WriteFaxPrintControl,
#endif
		WriteEditControl, WritePageControl,
		WriteDisplayControl, WriteViewControl,

			/* Spell library */

		WriteSpellControl, WriteThesaurusControl,

			/* Text library */

		WriteTextStyleSheetControl,
		WriteSearchReplaceControl, WriteTextRulerControl,
		WriteLineSpacingControl,
		WriteJustificationControl, WriteParaSpacingControl,
		WriteParaBGColorControl, WriteParaAttrControl,
		WriteMarginControl, WriteTabControl, WriteDefaultTabsControl,
		WriteBorderControl, WriteBorderColorControl,
		/* WriteDropCapControl, */
		WriteHyphenationControl,
		WriteFontControl, WriteTextStyleControl, WritePointSizeControl,
		WriteCharFGColorControl, WriteCharBGColorControl,
		WriteFontAttrControl, WriteTextCountControl,

			/* GrObj library */

		WriteGrObjToolControl, WriteGrObjBitmapToolControl,
		WriteInstructionControl,
		WriteAreaColorControl, WriteBackgroundColorControl,
#if DO_PIZZA
		WriteBackgroundAttrControl,
#else
		WriteAreaAttrControl, WriteBackgroundAttrControl,
#endif
		WriteLineColorControl, WriteLineAttrControl,
		WriteGrObjObscureAttrControl, WriteAlignDistributeControl,
		WriteAlignToGridControl,
		WriteGroupControl, WriteDepthControl,
		WriteFlipControl, WriteNudgeControl,
		WriteRotateControl, WriteScaleControl, WriteSkewControl,
		WriteTransformControl, WriteArcControl,
		WriteStartingGradientColorControl,
		WriteEndingGradientColorControl, WriteGradientFillControl,
		WriteGrObjStyleSheetControl, 
		WriteSplineOpenCloseControl,
		WriteSplinePointControl, WriteSplineSmoothnessControl,
		WriteCustomShapeControl, WriteHandleControl,
		WriteHideShowControl, WriteDraftModeControl,
		WriteDuplicateControl, 
		WritePasteInsideControl, 
		WriteMoveInsideControl, 
		WriteConvertControl,
		WriteDefaultAttributesControl, WriteCustomDuplicateControl,
		WriteMultiDuplicateControl,
		WriteGrObjObscureAttrControl2, WriteGrObjCreateControl,
		WriteGrObjLocksControl,

			/* Bitmap library */
#if _BITMAP_EDITING
		WriteBitmapFormatControl,
#endif
			/* Ruler library */

		WriteRulerTypeControl, WriteGridSpacingControl,
		WriteRulerGuideControl, WriteRulerShowControl,

			/* Local Goodies */
#ifdef DO_PIZZA
		WriteFixedSpacingControl,	/* Pizza project */
		WriteRowColumnDisplayControl,
#endif
			/* Help editor stuff */

#if FAX_SUPPORT || LIMITED_FAX_SUPPORT
			/* Fax */
		WriteSendControl,
#endif

		WriteTextHelpControl,

			/* Impex Library */

		WriteImportControl, WriteExportControl;

	moniker = list {
		GeoWriteTextMoniker,
		GeoWriteLCMoniker, 
		GeoWriteLMMoniker,
		GeoWriteSCMoniker, 
		GeoWriteSMMoniker, 
		GeoWriteYCMoniker, 
		GeoWriteYMMoniker, 
		GeoWriteSCGAMoniker,
		GeoWriteTinyTCMoniker, 
		GeoWriteTinyTMMoniker, 
		GeoWriteTinyTCGAMoniker
	}
	hints = {
		ATTR_GEN_INIT_FILE_CATEGORY {
			char	"write", 0
		},
		ATTR_GEN_APPLICATION_PRINT_CONTROL {
			UN_OPTR WritePrintControl
		},
 /*		ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER {
			UN_OPTR SaveOptionsTrigger
		},
		ATTR_GEN_APPLICATION_RESET_OPTIONS_TRIGGER {
			UN_OPTR ResetOptionsTrigger
		},  */
		ATTR_GEN_HELP_FILE {
		    char "writer", 0
		}
	}
}
visMoniker GeoWriteTextMoniker = "GeoWrite";

end ApplicationUI;

/* ----------------------------------------------------------------------------
	Primary window
-----------------------------------------------------------------------------*/

start PrimaryUI;

WritePrimary = GenPrimary vardataReloc {
	children =
		FileMenu, WriteEditControl, ViewMenu, OptionsMenu,
		LayoutMenu, GraphicsMenu, ParagraphMenu,
		CharacterMenu,
		HelpEditMenu, 
		WriteDisplayControl,
		GraphicsToolbar,
	        FunctionToolbar,
	        StyleToolbar,
	        DisplayGroup,
	        HiddenDialog
#ifdef BATCH_RTF
	    , BatchStatusDialog,
	    BatchHelpFilesInteraction  /* uiHelpEdit.ui */
#endif
	    ;

	hints = {
		HINT_PRIMARY_FULL_SCREEN,
		HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 2>
		},
		ATTR_GEN_HELP_CONTEXT { char "TOC", 0 },
	/*
	 *	Added, because people kept whining about the kbd going away
	 *	when we pulled down menus.
	 */

		ATTR_GEN_WINDOW_KBD_OVERRIDE {	KeyboardOverride	KO_KEYBOARD_REQUIRED},
		ATTR_GEN_PRIMARY_DONE_ON_CLOSE {
		    lptr 0
		    UN_OPTR WriteDocumentControl
		    UN_OPTR WriteDisplayGroup
		    UN_OPTR WritePrintControl
		    lptr 0, 0
		    lptr 0, 0
		    lptr 0, offset WriteDoneText, offset WriteDoneMultiText
		    lptr 0, 0
		}
	}
}

visMoniker WriteDoneText = "Close the document and exit GeoWrite.";
visMoniker WriteDoneMultiText = "Close GeoWrite documents and exit.";

/* ----------------------------------------------------------------------------
	Always visible objects
-----------------------------------------------------------------------------*/

DisplayGroup = GenInteraction {
	children = GrObjToolsToolbar, WriteDisplayGroup;
	visibility = subGroup;
	hints = { HINT_ORIENT_CHILDREN_HORIZONTALLY,
		  HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		  HINT_EXPAND_HEIGHT_TO_FIT_PARENT 
	}
}

WriteDisplayGroup = GenDisplayGroup {
	hints = {
		HINT_DEFAULT_FOCUS, HINT_DEFAULT_TARGET,
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PCT_OF_FIELD_WIDTH, PCT_70>,
			SpecHeight <SST_PCT_OF_FIELD_HEIGHT, PCT_55>,
			0
		},
		HINT_DISPLAY_GROUP_FULL_SIZED_IF_TRANSPARENT_DOC_CTRL_MODE
	}
}

/* -----------------------
	Drawing Tools Toolbar
-------------------------- */

GrObjToolsToolbar = GenInteraction {
#if _BITMAP_EDITING
	children = GrObjDrawingTools, GrObjBitmapTools;
#else
	children = GrObjDrawingTools;
#endif
	visibility = popout;
	genAttributes = default +notifyVisibility;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_VISIBILITY_MESSAGE {
			word MSG_WRITE_APPLICATION_TOOLBAR_VISIBILITY
		},
		ATTR_GEN_VISIBILITY_DATA {
			word 0, mask WBS_SHOW_DRAWING_TOOLS or \
				mask WBS_SHOW_BITMAP_TOOLS
		}
	}
}

/* ------------------------------------
   Batch Log Dialog
   ------------------------------------ */
#ifdef BATCH_RTF 
BatchStatusDialog = GenInteraction {
	moniker = "Batch Status";
	visibility = dialog;
	attributes = default +notUserInitiatable, +modal;
	type = notification; 
	children =
		BatchStatusTopGroup,
	        BatchStatusText,
		BatchStatusStopTrigger;
}

BatchStatusTopGroup = GenInteraction {
	children =
		BatchStatusCurrentFileName;
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_CHILDREN_ON_MONIKERS
	}
}


/**** CURRENT FILE NAME ****/

BatchStatusCurrentFileName = GenText {
	moniker = "Current file:";
	genAttributes = default +readOnly;
	textDisplayAttributes = default +singleLineText;
	text = "<none>";
	hints = {
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

/**** STATUS TEXT BOX  ****/

BatchStatusText = GenText {
    genAttributes = default +readOnly;
    textDisplayAttributes = default +initScrolling;
    hints = {
	HINT_FIXED_SIZE {
	    SpecWidth <SST_AVG_CHAR_WIDTHS, 60>
	    SpecHeight <SST_LINES_OF_TEXT, 20>
	}
    }	
}

chunk FileUnderlineText =  "\\\r================================\\\r";
chunk OpeningText = "Opening. . .\\\r";
chunk ExportingText = "Exporting file. . .";
chunk ExportSuccessText = "Success!\\\r\\\r";
chunk ExportFailedText = "Failed.\\\r\\\r";
chunk ExportDoneText = "Done!";
chunk ImportSavingText = "Saving GeoWrite document ";
chunk EllipseText = ". . .";

/**** TRIGGERS  ****/

visMoniker BatchProcessingStopTriggerText = "Stop";
visMoniker BatchProcessingDoneTriggerText = "OK";

BatchStatusStopTrigger = GenTrigger {
    moniker = BatchProcessingStopTriggerText;
    action = MSG_WRITE_PROCESS_ABORT_BATCH, process;    
    hints = { 
	HINT_SEEK_REPLY_BAR,
	HINT_DEFAULT_FOCUS,
	HINT_DEFAULT_TARGET,
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND { word IC_OK }
    }
}
#endif   /* BATCH_RTF */

end PrimaryUI;

start GraphicToolsUI;


EditTextTool = GrObjToolItem {
	genStates = default -usable;
	moniker = list {
		EditTextToolTCMoniker,
		EditTextToolTMMoniker,
		EditTextToolTCGAMoniker
	}
	toolClass = "EditTextGuardianClass";
	identifier = "-1";
	hints = { ATTR_GEN_FOCUS_HELP { optr EditTextHelpString } }
}

chunk EditTextHelpString = "Edit Text";

#if _BITMAP_EDITING
GrObjBitmapTools = GenToolGroup {
	genStates = default -usable;
	controller = WriteGrObjBitmapToolControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}
#endif

end GraphicToolsUI;

/* -----------------------
	Graphics Toolbar
-------------------------- */

start PrimaryUI;

GraphicsToolbar = GenInteraction {
	genStates = default -usable;
	children = AreaColorTools, LineColorTools, LineAttrTools,
		   TextColorTools, GroupTools, DuplicateTools,
		   PasteInsideTools, DepthTools,
		   FlipTools;
	visibility = popout;
	genAttributes = default +notifyVisibility;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
		ATTR_GEN_VISIBILITY_MESSAGE {
			word MSG_WRITE_APPLICATION_TOOLBAR_VISIBILITY
		},
		ATTR_GEN_VISIBILITY_DATA {
			word 0, mask WBS_SHOW_GRAPHIC_BAR
		}
	}
}

end PrimaryUI;

start GraphicBarUI;

AreaColorTools = GenToolGroup {
	controller = WriteAreaColorControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

LineColorTools = GenToolGroup {
	controller = WriteLineColorControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

LineAttrTools = GenToolGroup {
	controller = WriteLineAttrControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

TextColorTools = GenToolGroup {
	controller = WriteCharFGColorControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

GroupTools = GenToolGroup {
	controller = WriteGroupControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DuplicateTools = GenToolGroup {
	controller = WriteDuplicateControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

PasteInsideTools = GenToolGroup {
	controller = WritePasteInsideControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

DepthTools = GenToolGroup {
	controller = WriteDepthControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

FlipTools = GenToolGroup {
	controller = WriteFlipControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

end GraphicBarUI;

/* -----------------------
	Function Toolbar
-------------------------- */

start PrimaryUI;

FunctionToolbar = GenInteraction {
	genStates = default -usable;
	visibility = popout;
	genAttributes = default +notifyVisibility;
	children =
		DocumentTools, 
		TextStyleSheetTools,
		SearchReplaceTools,
		EditTools, 
#ifdef DO_PIZZA
		RowColumnDisplayTools,
#endif
		HyphenationTools;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
		ATTR_GEN_VISIBILITY_MESSAGE {
			word MSG_WRITE_APPLICATION_TOOLBAR_VISIBILITY
		},
		ATTR_GEN_VISIBILITY_DATA {
			word 0, mask WBS_SHOW_FUNCTION_BAR
		}
	}
}

end PrimaryUI;

start FunctionBarUI;

DocumentTools = GenToolGroup {
	controller = WriteDocumentControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

SearchReplaceTools = GenToolGroup {
	controller = WriteSearchReplaceControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

EditTools = GenToolGroup {
	controller = WriteEditControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

ViewTools = GenToolGroup {
	controller = WriteViewControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

HyphenationTools = GenToolGroup {
	controller = WriteHyphenationControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

#ifdef DO_PIZZA
RowColumnDisplayTools = GenToolGroup {
	controller = WriteRowColumnDisplayControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}
#endif

end FunctionBarUI;

/* -----------------------
	Style Toolbar
-------------------------- */

start PrimaryUI;

StyleToolbar = GenInteraction {
	children = 
		ViewTools,
		PageTools,
		SpellTools,
		PrintTools,
		FontTools,
		PointSizeTools,
		TextStyleTools,
		JustificationTools,
		LineSpacingTools;
	visibility = popout;
	genAttributes = default +notifyVisibility;
	hints = {
		HINT_TOOLBOX,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_ALLOW_CHILDREN_TO_WRAP,
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
		ATTR_GEN_VISIBILITY_MESSAGE {
			word MSG_WRITE_APPLICATION_TOOLBAR_VISIBILITY
		},
		ATTR_GEN_VISIBILITY_DATA {
			word 0, mask WBS_SHOW_STYLE_BAR
		}
	}
}

end PrimaryUI;

start StyleBarUI;


PageTools = GenToolGroup {
	controller = WritePageControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

SpellTools = GenToolGroup {
	controller = WriteSpellControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

PrintTools = GenToolGroup {
	controller = WritePrintControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

TextStyleSheetTools = GenToolGroup {
	controller = WriteTextStyleSheetControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

JustificationTools = GenToolGroup {
	controller = WriteJustificationControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

LineSpacingTools = GenToolGroup {
	controller = WriteLineSpacingControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

FontTools = GenToolGroup {
	controller = WriteFontControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

PointSizeTools = GenToolGroup {
	controller = WritePointSizeControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

TextStyleTools = GenToolGroup {
	controller = WriteTextStyleControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}
GrObjDrawingTools = GenToolGroup {
	controller = WriteGrObjToolControl;
	hints = {
		HINT_SAME_ORIENTATION_AS_PARENT,
		HINT_MINIMIZE_CHILD_SPACING
	}
}

end StyleBarUI;

/* ----------------------------------------------------------------------------
	File menu
-----------------------------------------------------------------------------*/

start PrimaryUI;

FileMenu = GenInteraction {
	children = WriteDocumentControl, WriteImportControl,
		   WriteExportControl, PrintSubGroup,
	           WriteGrObjToolControl, WriteGrObjBitmapToolControl,
		   WriteFileExit;
	visibility = popup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE { GenInteractionGroupType GIGT_FILE_MENU } }
}

end PrimaryUI;

start FileMenuUI;

WriteFileExit = GenTrigger {
    action = MSG_GEN_DISPLAY_CLOSE, WritePrimary;
    hints = {
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
	    InteractionCommand IC_EXIT
	}
    }
}

PrintSubGroup = GenInteraction {
	children =
#if FAX_SUPPORT
		WriteSendControl,
#endif
		  WritePrintControl, 
#if LIMITED_FAX_SUPPORT
		WriteSendControl,
		WriteFaxPrintControl,
#endif
		   WritePageSizeControl,
		   WritePageSetupDialog;
	visibility = subGroup;
}

WriteGrObjToolControl = GrObjToolControl vardataReloc {
	hints = {
		ATTR_GEN_CONTROL_APP_TOOLBOX_UI {
			UN_OPTR	EditTextTool
		},
		ATTR_GROBJ_TOOL_CONTROL_POSITION_FOR_ADDED_TOOLS {
			word CCO_FIRST
		},
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
		    word mask GOTCF_POLYCURVE
		},
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		            GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
			    UIIL_INTRODUCTORY,
			    mask GOTCF_PTR>,
			   <GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
			    UIIL_INTERMEDIATE,
			    mask GOTCF_PTR or mask GOTCF_TEXT or \
			    mask GOTCF_LINE or mask GOTCF_ROTATE_PTR or \
			    mask GOTCF_ELLIPSE or \
			    mask GOTCF_RECT or mask GOTCF_ROUNDED_RECT>,
			   <GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
			    UIIL_ADVANCED,
			    GOTC_DEFAULT_TOOLBOX_FEATURES>
		} 
	}

	output = WriteHead;	/* Speeds things up if direct */
}

WriteGrObjBitmapToolControl = GrObjBitmapToolControl vardataReloc{
	genStates = default -enabled;
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask VBTCF_DRAW_RECT or mask VBTCF_DRAW_ELLIPSE
		},
		ATTR_GEN_CONTROL_APP_TOOLBOX_UI {
			UN_OPTR	BitmapPtrTool
		},
		ATTR_VIS_BITMAP_TOOL_CONTROL_POSITION_FOR_ADDED_TOOLS {
			word CCO_FIRST
		}
	}

	output = WriteHead;	/* Speeds things up if direct */
}

BitmapPtrTool = VisBitmapToolItem {
	genStates = default -usable;
	moniker = list {
		BitmapPtrToolTCMoniker,
		BitmapPtrToolTMMoniker,
		BitmapPtrToolTCGAMoniker
	}
	toolClass = 0;
	identifier = -1;
	hints = { ATTR_GEN_FOCUS_HELP { optr BitmapPtrHelpString } }
}

chunk BitmapPtrHelpString = "Bitmap Pointer";

end FileMenuUI;

/* ----------------------------------------------------------------------------
	Window menu
-----------------------------------------------------------------------------*/

start PrimaryUI;

WriteDisplayControl = GenDisplayControl {
	visibility = popup;
	hints = { 
		ATTR_GEN_INTERACTION_GROUP_TYPE { 
			GenInteractionGroupType GIGT_WINDOW_MENU 
		},
		HINT_DISPLAY_CONTROL_NO_FEATURES_IF_TRANSPARENT_DOC_CTRL_MODE,
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		     GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTRODUCTORY,
		     mask GDCTF_DISPLAY_LIST>,
		    <GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		     UIIL_INTERMEDIATE,
		     GDC_DEFAULT_FEATURES>}
	}
}

end PrimaryUI;
