/*
 * Project:	GeoWrite
 * File:	UI/uiText.ui
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	Tony Requist	    Initial version
 *	12/2023	  RainerB   Renamed from Writer to GeoWrite
 *
 *	This file contains the user interface description for the edit
 * menu.
 *
 *	$Id: uiText.ui,v 1.2 97/07/02 12:32:16 newdeal Exp $
 *
 */

/*-----------------------------------------------------------------------------
	Paragraph menu
-----------------------------------------------------------------------------*/

start PrimaryUI;

ParagraphMenu = GenInteraction {
	moniker = 'P', "Paragraph";
	children = WriteJustificationControl, WriteLineSpacingControl,
		   WriteParaSpacingControl,
		   WriteParaBGColorControl, WriteParaAttrControl,
		   WriteTextStyleSheetControl, WriteMarginControl,
		   WriteTabControl, WriteDefaultTabsControl, BorderSubMenu,
		   /* WriteDropCapControl, */ WriteHyphenationControl;
	visibility = popup;
}

end PrimaryUI;

start ParagraphMenuUI;

WriteJustificationControl = JustificationControl {
	moniker = 'J', "Justification";
	visibility = popup;
}

WriteLineSpacingControl = LineSpacingControl {
	moniker = 'L', "Line Spacing";
	visibility = popup;
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		  GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		  mask WF_COMPLEX_TEXT_ATTRIBUTES,
		  mask LASCF_SINGLE or mask LASCF_ONE_AND_A_HALF or \
					mask LASCF_DOUBLE>,
		 <GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
		  mask WF_COMPLEX_TEXT_ATTRIBUTES,
		  mask LASCTF_SINGLE or mask LASCTF_ONE_AND_A_HALF or \
					mask LASCTF_DOUBLE>
	    }
	}
}

WriteParaSpacingControl = ParaSpacingControl {
	moniker = 'c', "Paragraph Spacing";
	type = properties;
	visibility = dialog;
}

WriteParaBGColorControl = ParaBGColorControl {
	moniker = 'P', "Paragraph Color";
	type = properties;
	visibility = dialog;
#ifdef GPC_ONLY
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA {
		GenControlScalableUIEntry <
		GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		UIIL_INTRODUCTORY,
		mask CSF_INDEX or \
		mask CSF_FILLED_LIST
		>,<
		GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		UIIL_BEGINNING,
		mask CSF_INDEX or \
		mask CSF_FILLED_LIST or \
		mask CSF_RGB or \
		mask CSF_OTHER or \
		mask CSF_PATTERN or \
		mask CSF_FILLED_LIST
		>
	    }
	}
#endif
}

WriteParaAttrControl = ParaAttrControl {
	moniker = 'A', "Paragraph Attributes";
	type = properties;
	visibility = dialog;
}

WriteTextStyleSheetControl = TextStyleSheetControl {
	moniker = 'S', "Text Style Sheets";
	visibility = popup;
	hints = {
		HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		     GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		     mask WF_COMPLEX_TEXT_ATTRIBUTES,
		     mask SSCF_APPLY or mask SSCF_SAVE_STYLE or \
		     mask SSCF_RECALL_STYLE or mask SSCF_LOAD>},
#if DO_DBCS
		ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_PATH {
			GenFilePath <SP_TEMPLATE, "GeoWrite">
		},
#else
		ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_PATH {
			GenFilePath <SP_TEMPLATE, "GeoWrite Templates">
		},
#endif
		ATTR_STYLE_SHEET_LOAD_STYLE_SHEET_TOKEN {
			GeodeToken	<"WDAT", MANUFACTURER_ID_GEOWORKS>
		}
	}
}

WriteMarginControl = MarginControl {
	moniker = 'I', "Indents";
	type = properties;
	visibility = dialog;
}

WriteTabControl = TabControl {
	moniker = 'T', "Tabs";
	type = properties;
	visibility = dialog;
}

WriteDefaultTabsControl = DefaultTabsControl {
	moniker = 'D', "Default Tabs";
	type = properties;
	visibility = dialog;
}

BorderSubMenu = GenInteraction {
	moniker = 'B', "Borders";
	children = WriteBorderControl, WriteBorderColorControl;
	visibility = popup;
}

WriteBorderControl = BorderControl {
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask WF_COMPLEX_TEXT_ATTRIBUTES,
		 mask BCF_LIST>}
	}
}

WriteBorderColorControl = BorderColorControl {
	moniker = 'B', "Border Color";
	type = properties;
	visibility = dialog;
}

/* WriteDropCapControl = DropCapControl {
	moniker = 'D', "Drop Cap";
	type = properties;
	visibility = dialog;
} */

WriteHyphenationControl = HyphenationControl {
	moniker = 'H', "Hyphenation";
	type = properties;
	visibility = dialog;
}


end ParagraphMenuUI;


/*-----------------------------------------------------------------------------
	Character menu
-----------------------------------------------------------------------------*/

start PrimaryUI;

CharacterMenu = GenInteraction {
	moniker = 'C', "Character";
#if	_ABBREVIATED_PHRASE
#ifdef GPC
	children = WriteTextStyleControlGroup,
	           WriteFontControl, WritePointSizeControl,
	           WriteCharFGColorControl,
		   WriteCharBGColorControl, WriteFontAttrControl,
		   WriteAbbrPhraseControl, WriteExpandControl;
#else
	children = WriteTextStyleControl,
	           WriteFontControl, WritePointSizeControl,
	           WriteCharFGColorControl,
		   WriteCharBGColorControl, WriteFontAttrControl,
		   WriteAbbrPhraseControl, WriteExpandControl;
#endif
#else
#ifdef GPC
	children = WriteTextStyleControlGroup,
	    	   WriteFontControl, WritePointSizeControl,
	           WriteCharFGColorControl,
		   WriteCharBGColorControl, WriteFontAttrControl;
#else
	children = WriteTextStyleControl,
	    	   WriteFontControl, WritePointSizeControl,
	           WriteCharFGColorControl,
		   WriteCharBGColorControl, WriteFontAttrControl;
#endif
#endif
	visibility = popup;
}

end PrimaryUI;

start CharacterMenuUI;


/* 
 * This dialog exists as a parent for the font & point size controllers.
 * When the CharacterMenu is not visible (usally level 1), the font & 
 * point size controllers did not have their tool box UI visible, because
 * their parent (previously CharacterMenu), was not fully usable.  In order
 * to show the toolbox UI while the CharacterMenu is not visible, this 
 * invisible dialog was created as a surrogate parent for these two
 * controllers.  Sean 3/14/99.
 */
HiddenDialog = GenInteraction {
    visibility = dialog;
    attributes = notUserInitiatable;
/* initial location for default features is CharacterMenu -- brianc 7/12/00 */
/*    children = WriteFontControl, WritePointSizeControl;*/
}



WriteFontControl = FontControl {
	moniker = 'n', "Fonts";
	visibility = popup;
}


#ifdef GPC
WriteTextStyleControlGroup = GenInteraction {
    moniker = 'S', "Styles";
    children = WriteTextStyleControl;
    visibility = popup;
}
#endif

WriteTextStyleControl = TextStyleControl {
#ifndef GPC
	moniker = 'S', "Styles";
	visibility = popup;
#endif
	hints = {
	    ATTR_GEN_CONTROL_PROHIBIT_UI {
#if DO_PIZZA
		word	mask TSCF_INDEX or mask TSCF_ALL_CAP or \
			mask TSCF_SMALL_CAP or mask TSCF_BOXED
#else
		word	mask TSCF_INDEX or mask TSCF_ALL_CAP or \
			mask TSCF_SMALL_CAP
#endif
	    },
	    ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
#if DO_PIZZA
		word	mask TSCTF_INDEX or mask TSCTF_ALL_CAP or \
			mask TSCTF_SMALL_CAP or mask TSCTF_BOXED
#else
		word	mask TSCTF_INDEX or mask TSCTF_ALL_CAP or \
			mask TSCTF_SMALL_CAP
#endif
	    },
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask WF_COMPLEX_TEXT_ATTRIBUTES,
		 mask TSCF_PLAIN or mask TSCF_BOLD or \
		 mask TSCF_ITALIC or mask TSCF_UNDERLINE or \
		 mask TSCF_SUBSCRIPT or mask TSCF_SUPERSCRIPT or \
		 mask TSCF_STRIKE_THRU>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_FEATURE_OFF,
		 mask WF_SIMPLE_TEXT_ATTRIBUTES,
		 mask TSCF_PLAIN or mask TSCF_BOLD or \
		 mask TSCF_ITALIC or mask TSCF_UNDERLINE>},
	}
}


WritePointSizeControl = PointSizeControl {
	moniker = 'z', "Sizes";
	visibility = popup;
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
		 mask WF_COMPLEX_TEXT_ATTRIBUTES,
		 mask PSCTF_9 or mask PSCTF_10 or mask PSCTF_12 or \
		 mask PSCTF_14 or mask PSCTF_18 or mask PSCTF_24 or \
		 mask PSCTF_36 or mask PSCTF_54 or mask PSCTF_72 or \
		 mask PSCTF_SMALLER or mask PSCTF_LARGER>,
		<GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_FEATURE_OFF,
		 mask WF_SIMPLE_TEXT_ATTRIBUTES,
		 mask PSCTF_9 or mask PSCTF_10 or mask PSCTF_12 or \
		 mask PSCTF_14 or mask PSCTF_18 or mask PSCTF_24 or \
		 mask PSCTF_36 or mask PSCTF_54 or mask PSCTF_72>,
		<GCSUIC_SET_TOOLBOX_FEATURES_IF_APP_LEVEL,
		 UIIL_INTRODUCTORY,
		 mask PSCTF_9 or mask PSCTF_10 or \
		 mask PSCTF_12 or mask PSCTF_14 or \
		 mask PSCTF_18 or mask PSCTF_24 or \
		 mask PSCTF_36 or mask PSCTF_54 or \
		 mask PSCTF_72>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_INTERMEDIATE,
		 mask PSCF_9 or mask PSCF_10 or \
		 mask PSCF_12 or mask PSCF_14 or \
		 mask PSCF_18 or mask PSCF_24 or \
		 mask PSCF_36 or mask PSCF_54 or \
		 mask PSCF_72 or mask PSCF_SMALLER or \
		 mask PSCF_LARGER or mask PSCF_CUSTOM_SIZE>
	    }
	}

}



WriteCharFGColorControl = CharFGColorControl {
	moniker = 'T', "Text Color";
	type = properties;
	visibility = dialog;
	hints = {
#ifdef GPC_ONLY
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA {
		GenControlScalableUIEntry <
		GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		UIIL_INTRODUCTORY,
		mask CSF_INDEX
		>,<
		GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		UIIL_BEGINNING,
		mask CSF_INDEX or \
		mask CSF_RGB or \
		mask CSF_OTHER
		>
	    },
#endif
	    ATTR_GEN_CONTROL_PROHIBIT_UI {
		word	mask CSF_PATTERN
	    },
	    ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
		word	mask CSTF_PATTERN
	    }
	}
}

WriteCharBGColorControl = CharBGColorControl {
	moniker = 'B', "Text Background Color";
	type = properties;
	visibility = dialog;
#ifdef GPC_ONLY
	hints = {
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA {
		GenControlScalableUIEntry <
		GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		UIIL_INTRODUCTORY,
		mask CSF_INDEX or \
		mask CSF_FILLED_LIST
		>,<
		GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		UIIL_BEGINNING,
		mask CSF_INDEX or \
		mask CSF_FILLED_LIST or \
		mask CSF_RGB or \
		mask CSF_OTHER or \
		mask CSF_PATTERN or \
		mask CSF_FILLED_LIST
		>
	    }
	}
#endif
}

WriteFontAttrControl = FontAttrControl {
	moniker = 'A', "Character Attributes";
	type = properties;
	visibility = dialog;
}

end CharacterMenuUI;
