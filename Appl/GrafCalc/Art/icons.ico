@start TOOLMONIKERRESOURCE,data;

@visMoniker schwarz= {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
				   GSSaveTransform(),
				   GSSetAreaColorIndex(0),
				   GSFillRect(0,0,15,15),
				   GSRestoreTransform(),
				   GSEndString()
		         }
	          }
 @visMoniker gruen = {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
					GSSaveTransform(),
					GSSetAreaColorIndex(2),
					GSFillRect(0,0,15,15),
					GSRestoreTransform(),
					GSEndString()
		         }
	      }
@visMoniker tuerkis = {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
					GSSaveTransform(),
					GSSetAreaColorIndex(3),
					GSFillRect(0,0,15,15),
					GSRestoreTransform(),
					GSEndString()
		         }
	       }
@visMoniker hellgrau = {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
					GSSaveTransform(),
					GSSetAreaColorIndex(7),
					GSFillRect(0,0,15,15),
					GSRestoreTransform(),
					GSEndString()
		         }
	       }
@visMoniker hellblau = {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
					GSSaveTransform(),
					GSSetAreaColorIndex(9),
					GSFillRect(0,0,15,15),
					GSRestoreTransform(),
					GSEndString()
		         }
	      }
@visMoniker hellrot = {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
					GSSaveTransform(),
					GSSetAreaColorIndex(12),
					GSFillRect(0,0,15,15),
					GSRestoreTransform(),
					GSEndString()
		         }
	      }
@visMoniker gelb = {
	    size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 15, 15;
		gstring {
					GSSaveTransform(),
					GSSetAreaColorIndex(14),
					GSFillRect(0,0,15,15),
					GSRestoreTransform(),
					GSEndString()
		         }
	      }
  @visMoniker MusterDurchgezeichnet= {
                    size = tiny;
                    color = color4;
                    aspectRatio = normal;
                    cachedSize = 25,15;
                    gstring {
                              GSSaveTransform(),
                              GSSetLineWidth(1.0),
                              GSSetLineStyle(0,0),
                              GSDrawLine(0,8,25,8),
                              GSRestoreTransform(),
                              GSEndString()
                            }
                  }
  @visMoniker MusterGepunktet= {
                    size = tiny;
                    color = color4;
                    aspectRatio = normal;
                    cachedSize = 25,15;
                    gstring {
                              GSSaveTransform(),
                              GSSetLineWidth(1.0),
                              GSSetLineStyle(2,0),
                              GSDrawLine(0,8,25,8),
                              GSRestoreTransform(),
                              GSEndString()
                            }
                  }
  @visMoniker MusterGestrichelt= {
                    size = tiny;
                    color = color4;
                    aspectRatio = normal;
                    cachedSize = 25,15;
                    gstring {
                              GSSaveTransform(),
                              GSSetLineWidth(1.0),
                              GSSetLineStyle(1,0),
                              GSDrawLine(0,8,25,8),
                              GSRestoreTransform(),
                              GSEndString()
                            }
                  }
 /* @visMoniker MusterStrichPunkt= {
                    size = tiny;
                    color = color4;
                    aspectRatio = normal;
                    cachedSize = 25,10;
                    gstring {
                              GSSaveTransform(),
                              GSSetLineWidth(1.0),
                              GSSetLineStyle(3,0),
                              GSDrawLine(0,5,25,5),
                              GSRestoreTransform(),
                              GSEndString()
                            }
                  }*/
  /*@visMoniker MusterStrichPunktPunkt= {
                    size = tiny;
                    color = color4;
                    aspectRatio = normal;
                    cachedSize = 25,10;
                    gstring {
                              GSSaveTransform(),
                              GSSetLineWidth(1.0),
                              GSSetLineStyle(4,0),
                              GSDrawLine(0,5,25,5),
                              GSRestoreTransform(),
                              GSEndString()
                            }
                  }*/


@visMoniker RShift = {
	size = standard;
		style = tool;
		color = color4;
		aspectRatio = normal;
		cachedSize = 38, 25;
		gstring {
			GSSaveTransform(),
			GSSetAreaColor(0xff,0xff,0xff),
			GSFillRect(-4,-1,42,26),

			GSRestoreTransform(),
			GSDrawBitmapAtCP (606),
			Bitmap (38,25,BMC_UNCOMPACTED,(BMT_MASK | BMF_4BIT)),
			0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0x99, 0x9f, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0x99, 0x9f, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x9f, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x9f, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x9f, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99, 0x99,
					0x99, 0x99, 0x99, 0x99, 0x9f, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0x99, 0x9f, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0x99, 0x9f, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
					0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			/*GSSetTextColorIndex(9),
			GSSetFont(FID_UNIVERSITY,6.0),
			GSDrawText(-4,-5),
			"Blick",*/
			GSEndString()
		}
}
@visMoniker LShift = {
	size = standard;
	style = tool;
	color = color4;
	aspectRatio = normal;
	cachedSize = 38, 25;
	gstring {
		GSSaveTransform(),
		GSSetAreaColor(0xff,0xff,0xff),
		GSFillRect(-4,-1,42,26),
		GSRestoreTransform(),
		GSDrawBitmapAtCP (606),
		Bitmap (38,25,BMC_UNCOMPACTED,(BMT_MASK | BMF_4BIT)),
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xf9, 0x99, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xf9, 0x99, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xf9, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xf9, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x99,
				0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0x99,
				0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xf9, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xf9, 0x99, 0x99, 0x99, 0x99, 0x99,
				0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xf9, 0x99, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xf9, 0x99, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
				0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		/*GSSetTextColorIndex(9),
		GSSetFont(FID_UNIVERSITY,6.0),
		GSDrawText(-4,-5),
		"View",*/
		GSEndString()
	}
}
@visMoniker DShift = {
	size = standard;
	style = tool;
	color = color4;
	aspectRatio = normal;
	cachedSize = 38, 25;
	gstring {
		GSSaveTransform(),
		GSSetAreaColor(0xff,0xff,0xff),
		GSFillRect(-4,-1,42,26),
		GSRestoreTransform(),
		GSDrawBitmapAtCP (285),
		Bitmap (42,25,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0xfc, 0xff, 0x00, 0xc0, 0xec, 0xff, 0xfc, 0xff,
		0x00, 0xc0, 0xec, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xec, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xec, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99,
		0x00, 0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfb, 0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99,
		0x00, 0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfb, 0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99,
		0x00, 0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfb, 0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99,
		0x00, 0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfb, 0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99,
		0x00, 0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfb, 0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfe, 0xff, 0x02, 0x99,
		0x9f, 0xff, 0xf8, 0x99, 0x05, 0x9f, 0xff, 0x99,
		0x9f, 0xff, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfd,
		0xff, 0x00, 0xf9, 0xf5, 0x99, 0xfd, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfd, 0xff, 0x00, 0xf9, 0xf5,
		0x99, 0xfd, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfb,
		0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99, 0x00,
		0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfa,
		0xff, 0x00, 0xf9, 0xfb, 0x99, 0x00, 0x9f, 0xfb,
		0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfa, 0xff, 0x00,
		0xf9, 0xfb, 0x99, 0x00, 0x9f, 0xfb, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xf9, 0xff, 0x00, 0xf9, 0xfd,
		0x99, 0xf9, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xf7,
		0xff, 0x01, 0x99, 0x9f, 0xf8, 0xff, 0xfc, 0xff,
		0x00, 0xc0, 0xf7, 0xff, 0x01, 0x99, 0x9f, 0xf8,
		0xff, 0xfc, 0xff, 0x00, 0xc0, 0xec, 0xff,
		/*GSSetTextColorIndex(9),
		GSSetFont(FID_UNIVERSITY,6.0),
		GSDrawText(-4,-5),
		"View",*/
		GSEndString()
	}
}
@visMoniker UShift = {
	size = standard;
	style = tool;
	color = color4;
	aspectRatio = normal;
	cachedSize = 38, 25;
	gstring {
		GSSaveTransform(),
		GSSetAreaColor(0xff,0xff,0xff),
		GSFillRect(-4,-1,42,26),
		GSRestoreTransform(),
		GSDrawBitmapAtCP (283),
		Bitmap (42,25,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0xfc, 0xff, 0x00, 0xc0, 0xec, 0xff, 0xfc, 0xff,
		0x00, 0xc0, 0xec, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xf7, 0xff, 0x01, 0x99, 0x9f, 0xf8, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xf7, 0xff, 0x01, 0x99, 0x9f,
		0xf8, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xf9, 0xff,
		0x00, 0xf9, 0xfd, 0x99, 0xf9, 0xff, 0xfc, 0xff,
		0x00, 0xc0, 0xf9, 0xff, 0x00, 0xf9, 0xfd, 0x99,
		0xf9, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfa, 0xff,
		0x00, 0xf9, 0xfb, 0x99, 0x00, 0x9f, 0xfb, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99,
		0x00, 0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfb, 0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfd, 0xff, 0x00, 0xf9,
		0xf5, 0x99, 0xfd, 0xff, 0xfc, 0xff, 0x00, 0xc0,
		0xfd, 0xff, 0x00, 0xf9, 0xf5, 0x99, 0xfd, 0xff,
		0xfc, 0xff, 0x00, 0xc0, 0xfe, 0xff, 0x02, 0x99,
		0x9f, 0xff, 0xf8, 0x99, 0x05, 0x9f, 0xff, 0x99,
		0x9f, 0xff, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfb,
		0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99, 0x00,
		0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfb,
		0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99, 0x00,
		0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfb,
		0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99, 0x00,
		0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfb,
		0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99, 0x00,
		0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xfb,
		0xff, 0xf8, 0x99, 0x00, 0x9f, 0xfc, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xfb, 0xff, 0xf8, 0x99, 0x00,
		0x9f, 0xfc, 0xff, 0xfc, 0xff, 0x00, 0xc0, 0xec,
		0xff, 0xfc, 0xff, 0x00, 0xc0, 0xec, 0xff, 0xfc,
		0xff, 0x00, 0xc0, 0xec, 0xff,
		/*GSSetTextColorIndex(9),
		GSSetFont(FID_UNIVERSITY,6.0),
		GSDrawText(-4,-5),
		"View",*/
		GSEndString()
	}
}
@visMoniker ok = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 15, 15;
	gstring {
		GSDrawBitmapAtCP (156),
		Bitmap (15,15,BMC_UNCOMPACTED,(BMT_MASK | BMF_4BIT)),
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x20,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff,
		0x00, 0x40, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff,
		0xff, 0xff, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff,
		0x0f, 0xff, 0xff, 0xff, 0x00, 0x80, 0xff, 0xff,
		0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x09, 0x00,
		0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff,
		0x05, 0x00, 0xff, 0xff, 0xf0, 0xf0, 0xff, 0xff,
		0xff, 0xff, 0x02, 0x00, 0xff, 0xff, 0xff, 0x0f,
		0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0xff, 0xff,
		0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		GSEndString()
	}
}
@visMoniker Up = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 20, 14;
	gstring {
		GSDrawBitmapAtCP (188),
		Bitmap (20,14,BMC_UNCOMPACTED,(BMT_MASK | BMF_4BIT)),
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x60, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xf9, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x00,
		0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0x99, 0x99,
		0xff, 0xff, 0xff, 0xff, 0x00, 0xf0, 0x00, 0xff,
		0xff, 0xff, 0xff, 0x99, 0x99, 0xff, 0xff, 0xff,
		0xff, 0x01, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xf9,
		0x99, 0x99, 0x9f, 0xff, 0xff, 0xff, 0x01, 0xf8,
		0x00, 0xff, 0xff, 0xff, 0xf9, 0x99, 0x99, 0x9f,
		0xff, 0xff, 0xff, 0x03, 0xfc, 0x00, 0xff, 0xff,
		0xff, 0x99, 0x99, 0x99, 0x99, 0xff, 0xff, 0xff,
		0x03, 0xfc, 0x00, 0xff, 0xff, 0xff, 0x99, 0x99,
		0x99, 0x99, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x00,
		0xff, 0xff, 0xf9, 0x99, 0x99, 0x99, 0x99, 0x9f,
		0xff, 0xff, 0x07, 0xfe, 0x00, 0xff, 0xff, 0xf9,
		0x99, 0x99, 0x99, 0x99, 0x9f, 0xff, 0xff, 0x00,
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		GSEndString()
	}
}
@visMoniker Down = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 20, 14;
	gstring {
		GSDrawBitmapAtCP (188),
		Bitmap (20,14,BMC_UNCOMPACTED,(BMT_MASK | BMF_4BIT)),
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
		0xfe, 0x00, 0xff, 0xff, 0xf9, 0x99, 0x99, 0x99,
		0x99, 0x9f, 0xff, 0xff, 0x07, 0xfe, 0x00, 0xff,
		0xff, 0xf9, 0x99, 0x99, 0x99, 0x99, 0x9f, 0xff,
		0xff, 0x03, 0xfc, 0x00, 0xff, 0xff, 0xff, 0x99,
		0x99, 0x99, 0x99, 0xff, 0xff, 0xff, 0x03, 0xfc,
		0x00, 0xff, 0xff, 0xff, 0x99, 0x99, 0x99, 0x99,
		0xff, 0xff, 0xff, 0x01, 0xf8, 0x00, 0xff, 0xff,
		0xff, 0xf9, 0x99, 0x99, 0x9f, 0xff, 0xff, 0xff,
		0x01, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xf9, 0x99,
		0x99, 0x9f, 0xff, 0xff, 0xff, 0x00, 0xf0, 0x00,
		0xff, 0xff, 0xff, 0xff, 0x99, 0x99, 0xff, 0xff,
		0xff, 0xff, 0x00, 0xf0, 0x00, 0xff, 0xff, 0xff,
		0xff, 0x99, 0x99, 0xff, 0xff, 0xff, 0xff, 0x00,
		0x60, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x9f,
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		GSEndString()
	}
}
@visMoniker Dx = {
	size = standard;
		style = icon;
		color = color4;
		aspectRatio = normal;
		cachedSize = 18, 12;
		gstring {
			GSDrawBitmapAtCP (150),
			Bitmap (18,12,BMC_UNCOMPACTED,(BMT_MASK | BMF_4BIT)),
			0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0x10, 0x00, 0x00, 0xff, 0xf0, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0x28, 0x88, 0x00, 0xff,
			0x0f, 0x0f, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0xff,
			0x28, 0x50, 0x00, 0xff, 0x0f, 0x0f, 0xff, 0xf0,
			0xf0, 0xff, 0xff, 0xff, 0x44, 0x21, 0xc0, 0xf0,
			0xff, 0xf0, 0xff, 0xff, 0x0f, 0xff, 0xf0, 0x00,
			0x44, 0x20, 0x00, 0xf0, 0xff, 0xf0, 0xff, 0xff,
			0x0f, 0xff, 0xff, 0xff, 0x82, 0x51, 0xc0, 0x0f,
			0xff, 0xff, 0x0f, 0xf0, 0xf0, 0xff, 0xf0, 0x00,
			0xfe, 0x88, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f,
			0xff, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,

			GSEndString()
	}
}
@visMoniker Grafik = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 38, 25;
	gstring {
		GSDrawBitmapAtCP (384),
		Bitmap (38,25,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0xfd, 0xff, 0x00, 0xfc, 0xee, 0xff, 0xfd, 0xff, 
		0x00, 0xfc, 0xee, 0xff, 0xfd, 0xff, 0x00, 0xfc, 
		0xf8, 0xff, 0x00, 0x0f, 0xfc, 0xff, 0x03, 0xfc, 
		0xcf, 0xff, 0xff, 0xfd, 0xff, 0x00, 0xfc, 0xf8, 
		0xff, 0x00, 0x0f, 0xfc, 0xff, 0x03, 0xcf, 0xfc, 
		0xff, 0xff, 0xfd, 0xff, 0x00, 0xfc, 0xf8, 0xff, 
		0x00, 0x0f, 0xfd, 0xff, 0x04, 0xfc, 0xff, 0xff, 
		0xcf, 0xff, 0xfd, 0xff, 0x00, 0xfc, 0xfc, 0xff, 
		0x05, 0xfc, 0xcf, 0xff, 0xff, 0x0f, 0xcc, 0xfe, 
		0xff, 0x00, 0xfc, 0xfd, 0xff, 0xfd, 0xff, 0x00, 
		0xfc, 0xfc, 0xff, 0x09, 0xcf, 0xfc, 0xff, 0xff, 
		0xcc, 0xff, 0xcc, 0xff, 0xff, 0xcf, 0xfd, 0xff, 
		0xfd, 0xff, 0x00, 0xfc, 0xfd, 0xff, 0x09, 0xfc, 
		0xff, 0xff, 0xcf, 0xfc, 0x0f, 0xff, 0xff, 0xcf, 
		0xfc, 0xfc, 0xff, 0xfd, 0xff, 0x00, 0xfc, 0xfd, 
		0xff, 0x09, 0xfc, 0xff, 0xff, 0xfc, 0xcf, 0x0f, 
		0xff, 0xff, 0xfc, 0xcf, 0xfc, 0xff, 0xfd, 0xff, 
		0x00, 0xfc, 0xfd, 0xff, 0x00, 0xcf, 0xfd, 0xff, 
		0x00, 0x0f, 0xf8, 0xff, 0xfd, 0xff, 0x00, 0xfc, 
		0xfe, 0xff, 0x00, 0xfc, 0xfc, 0xff, 0x00, 0x0f, 
		0xf8, 0xff, 0xfd, 0xff, 0x00, 0xfc, 0xfe, 0xff, 
		0x00, 0xfc, 0xfc, 0xff, 0x00, 0x0f, 0xfa, 0xff, 
		0x01, 0xf9, 0xff, 0xfd, 0xff, 0x04, 0xfc, 0xff, 
		0xf0, 0x00, 0xcc, 0xf4, 0x00, 0x01, 0x9f, 0xff, 
		0xfd, 0xff, 0x00, 0xfc, 0xfe, 0xff, 0x00, 0xcf, 
		0xfc, 0xff, 0x00, 0x0f, 0xfa, 0xff, 0x01, 0x9f, 
		0xff, 0xfd, 0xff, 0x03, 0xfc, 0xff, 0xff, 0xfc, 
		0xfb, 0xff, 0x00, 0x0f, 0xfb, 0xff, 0x02, 0xf9, 
		0xff, 0xff, 0xfd, 0xff, 0x03, 0xfc, 0xff, 0xff, 
		0xfc, 0xfb, 0xff, 0x00, 0x0f, 0xfb, 0xff, 0x02, 
		0xf9, 0xff, 0xff, 0xfd, 0xff, 0x03, 0xfc, 0xff, 
		0xff, 0xcf, 0xfb, 0xff, 0x02, 0x0f, 0xf9, 0x9f, 
		0xfd, 0xff, 0x02, 0x9f, 0xff, 0xff, 0xfd, 0xff, 
		0x02, 0xfc, 0xff, 0xfc, 0xfa, 0xff, 0x02, 0x09, 
		0x9f, 0xf9, 0xfd, 0xff, 0x02, 0x9f, 0xff, 0xff, 
		0xfd, 0xff, 0x00, 0xfc, 0xfd, 0xff, 0x0b, 0x99, 
		0x9f, 0xff, 0xff, 0xf9, 0x9f, 0xff, 0xff, 0x99, 
		0xff, 0xff, 0xf9, 0xfe, 0xff, 0xfd, 0xff, 0x00, 
		0xfc, 0xfe, 0xff, 0x06, 0xf9, 0xff, 0xf9, 0x9f, 
		0xf9, 0x9f, 0x0f, 0xfe, 0xff, 0x02, 0x99, 0xff, 
		0x9f, 0xfe, 0xff, 0xfd, 0xff, 0x0a, 0xfc, 0xff, 
		0xf9, 0xff, 0x9f, 0xff, 0xff, 0xf9, 0x9f, 0xff, 
		0x0f, 0xfd, 0xff, 0x00, 0x99, 0xfd, 0xff, 0xfd, 
		0xff, 0x03, 0xfc, 0xff, 0xff, 0x99, 0xfb, 0xff, 
		0x00, 0x0f, 0xf8, 0xff, 0xfd, 0xff, 0x00, 0xfc, 
		0xf8, 0xff, 0x00, 0x0f, 0xf8, 0xff, 0xfd, 0xff, 
		0x00, 0xfc, 0xee, 0xff, 0xfd, 0xff, 0x00, 0xfc, 
		0xee, 0xff, 
		GSEndString()
	}
}
@visMoniker Proz100 = {
	size = standard;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 38, 25;
	gstring {
		GSDrawBitmapAtCP (313),
		Bitmap (38,25,BMC_PACKBITS,(BMT_MASK | BMF_4BIT)),
		0xfc, 0x00, 0xee, 0xff, 0xfc, 0x00, 0xee, 0xff, 
		0xfc, 0x00, 0xee, 0xff, 0xfc, 0x00, 0xee, 0xff, 
		0xfc, 0x00, 0xee, 0xff, 0xfc, 0x00, 0xee, 0xff, 
		0xfc, 0x00, 0xee, 0xff, 0x04, 0x02, 0x0c, 0x06, 
		0x0c, 0x20, 0xfe, 0xff, 0x03, 0x0f, 0xff, 0xff, 
		0x00, 0xfe, 0xff, 0x08, 0xf0, 0x0f, 0xff, 0xff, 
		0x00, 0xff, 0xff, 0x0f, 0xff, 0x17, 0x06, 0x1e, 
		0x0f, 0x12, 0x40, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
		0xf0, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0xff, 
		0xf0, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0x17, 0x0a, 
		0x12, 0x09, 0x0c, 0x40, 0xff, 0xff, 0x0f, 0x0f, 
		0xff, 0xf0, 0xff, 0x0f, 0xff, 0xff, 0x0f, 0xf0, 
		0xff, 0xff, 0x00, 0xff, 0xf0, 0xff, 0xff, 0x11, 
		0x12, 0x33, 0x19, 0x80, 0x80, 0xff, 0xf0, 0xff, 
		0x0f, 0xff, 0x00, 0xff, 0x00, 0xff, 0xf0, 0x0f, 
		0xf0, 0x0f, 0xfe, 0xff, 0x02, 0x0f, 0xff, 0xff, 
		0x04, 0x02, 0x21, 0x10, 0x81, 0x00, 0xfe, 0xff, 
		0x0c, 0x0f, 0xff, 0x0f, 0xff, 0xf0, 0xff, 0xf0, 
		0xff, 0xff, 0x0f, 0xff, 0xff, 0xf0, 0xfe, 0xff, 
		0x04, 0x02, 0x21, 0x10, 0x81, 0x00, 0xfe, 0xff, 
		0x0c, 0x0f, 0xff, 0x0f, 0xff, 0xf0, 0xff, 0xf0, 
		0xff, 0xff, 0x0f, 0xff, 0xff, 0xf0, 0xfe, 0xff, 
		0x04, 0x02, 0x33, 0x19, 0x82, 0x00, 0xfe, 0xff, 
		0x0c, 0x0f, 0xff, 0x00, 0xff, 0x00, 0xff, 0xf0, 
		0x0f, 0xf0, 0x0f, 0xff, 0xff, 0x0f, 0xfe, 0xff, 
		0x04, 0x02, 0x12, 0x09, 0x04, 0x60, 0xfe, 0xff, 
		0x0f, 0x0f, 0xff, 0xf0, 0xff, 0x0f, 0xff, 0xff, 
		0x0f, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xf0, 0x0f, 
		0xff, 0x04, 0x02, 0x1e, 0x0f, 0x04, 0x90, 0xfe, 
		0xff, 0x0f, 0x0f, 0xff, 0xf0, 0x00, 0x0f, 0xff, 
		0xff, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xff, 0x0f, 
		0xf0, 0xff, 0x04, 0x02, 0x0c, 0x06, 0x08, 0x60, 
		0xfe, 0xff, 0x03, 0x0f, 0xff, 0xff, 0x00, 0xfe, 
		0xff, 0x08, 0xf0, 0x0f, 0xff, 0xff, 0x0f, 0xff, 
		0xf0, 0x0f, 0xff, 0xfc, 0x00, 0xee, 0xff, 0xfc, 
		0x00, 0xee, 0xff, 0xfc, 0x00, 0xee, 0xff, 0xfc, 
		0x00, 0xee, 0xff, 0xfc, 0x00, 0xee, 0xff, 0xfc, 
		0x00, 0xee, 0xff, 0xfc, 0x00, 0xee, 0xff, 0xfc, 
		0x00, 0xee, 0xff, 
		GSEndString()
	}
}



@end TOOLMONIKERRESOURCE;
