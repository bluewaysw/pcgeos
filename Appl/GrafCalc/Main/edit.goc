@include <stdapp.goh>
@include "Main/grafcalc.goh"
@include "UI/appui.goh"


extern word arbeitsbereich;
extern optr aktives_Textobjekt;
extern byte zeilenzahl;

/*byte einzelschritte_links_bestimmen(char buf[200], int pos);
byte einzelschritte_rechts_bestimmen(char buf[200], int pos);*/

/*byte einzelschritte_links_bestimmen(char buf[200], int pos)
{
     char *rPtr;
     int anz_schritte_l;

              rPtr =strrchr(buf, '\r');
              // Der Cursor soll sich nur in der aktuellen Eingabezeile bewegen können
              if ((rPtr!=NULL) && (rPtr-buf < pos - 1) || (rPtr==NULL))
              {
                      if ((pos>0) && ((buf[pos-1]=='(') || (buf[pos-1]=='E')))
                      {
	           if (buf[pos-1]=='(')
	           {
		if ((pos>2) && ((buf[pos-2]=='n') || (buf[pos-2]=='s') || (buf[pos-2]=='t') || (buf[pos-2]=='g')))
		{
			if (buf[pos-3]=='i')
				if ((pos>4) && (buf[pos-5]=='a'))					//asin
					anz_schritte_l=5;
				else							//sin
					anz_schritte_l=4;
			if (buf[pos-3]=='l')							//ln
				anz_schritte_l=3;
			if ((buf[pos-3]=='o') || 	(buf[pos-3]=='a') || (buf[pos-3]=='b'))			//log, tan, abs
				anz_schritte_l=4;
			if (buf[pos-3]=='r')							//sqrt
				anz_schritte_l=5;
			if (buf[pos-3]=='c')
				anz_schritte_l=5;						//fact
		 }
		 else anz_schritte_l=1;
                                }
	            else
		anz_schritte_l=2;								//EE
	  }
	  else
	            anz_schritte_l=1;
               }
              return anz_schritte_l;
}*/
/*byte einzelschritte_rechts_bestimmen(char buf[200], int pos)
{
     int anz_schritte_r;
     //char *rPtr;

     //rPtr=strchr(buf,'\0');
     if ((buf[pos]=='a') || (buf[pos]=='s') || (buf[pos]=='c') || (buf[pos]=='t') || (buf[pos]=='l') || (buf[pos]=='f'))
     {
           if (((buf[pos+1]=='a') && (buf[pos+2]!='c')) || (buf[pos+1]=='b') || (buf[pos+1]=='o'))
           {
	anz_schritte_r=4;			//abs,sin,cos,tan,log
                    //MessageNumberBox(anz_schritte_r);
           }
           if (((buf[pos+1]=='a') && (buf[pos+2]=='c'))  || (buf[pos+1]=='c') || (buf[pos+1]=='q') || (buf[pos+1]=='s')	|| (buf[pos+1]=='t'))
           {
	anz_schritte_r=5;			//asin,atan,acos,sqrt,fact
	//MessageNumberBox(anz_schritte_r);
           }
           if (buf[pos+1]=='n') anz_schritte_r=3;						//ln
     }
     else anz_schritte_r=1;

     return anz_schritte_r;
}*/
@extern method GCalcProcessClass, MSG_CURSOR_SCHRITT_LINKS
{
    /*int i,pos,anzahl;*/
    /*char *rPtr;*/
    char buf[200];

     /*if ((arbeitsbereich== CALCULATOR) || (arbeitsbereich== Y_EDITOR))
     { */
              /*pos=TextGetCursorPosition();*/
              @call aktives_Textobjekt::MSG_VIS_TEXT_GET_ALL_PTR(buf);
              //anzahl=einzelschritte_links_bestimmen( buf, pos);
              /*anzahl=1;
              for (i=1;i<=anzahl;i++)*/
                    if (editmode==0)	/*nur bewegen*/
              	      @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_BACKWARD_CHAR,0);
                    else
                      @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_BACKWARD_CHAR,0);
      /*}*/
      /*if (arbeitsbereich==TABLE)

              @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_BACKWARD_CHAR,0);*/

 /*WORD statt CHAR geht wortweise, wobei aber z.B. -8 auch als ein Wort genommen wird*/
}
@extern method GCalcProcessClass, MSG_CURSOR_SCHRITT_RECHTS
{
    /*int i,pos,anzahl;*/
    /*char *rPtr;*/
    char buf[200];

       /*if ((arbeitsbereich== CALCULATOR) || (arbeitsbereich==Y_EDITOR))
       { */
              /*pos=TextGetCursorPosition();*/
              @call aktives_Textobjekt::MSG_VIS_TEXT_GET_ALL_PTR(buf);
              /*anzahl=einzelschritte_rechts_bestimmen( buf, pos);*/
              /*anzahl=1;
              for (i=1;i<=anzahl;i++)*/
	 		  if (editmode==0)	/*nur bewegen*/
              	   @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_FORWARD_CHAR,0);
              else
                   @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_CHAR,0);
       /*}*/
       /*if (arbeitsbereich==TABLE)
               @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_FORWARD_CHAR,0); */
}
@extern method GCalcProcessClass, MSG_CURSOR_ANS_ENDE
{
          if ((arbeitsbereich==CALCULATOR) || (arbeitsbereich==Y_EDITOR) || (arbeitsbereich==TABLE))
                    @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_END_OF_TEXT,0);
}
@extern method GCalcProcessClass, MSG_CURSOR_AN_ZEILENANFANG
{
         if ((arbeitsbereich==CALCULATOR) || (arbeitsbereich==Y_EDITOR) || (arbeitsbereich==TABLE))
                    @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_START_OF_LINE,0);
}
/*@extern method GCalcProcessClass, MSG_CURSOR_LOESCHT_LINKS
{
    int pos,i,anzahl;
    char buf[200];

     if ((arbeitsbereich== CALCULATOR) || (arbeitsbereich== Y_EDITOR))
     {
              pos=TextGetCursorPosition();//MessageNumberBox(pos);
              @call aktives_Textobjekt::MSG_VIS_TEXT_GET_ALL_PTR(buf);

              anzahl=einzelschritte_links_bestimmen( buf, pos);
              for (i=1;i<=anzahl;i++)
              	      @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_BACKWARD_CHAR,0);
       }
       if (arbeitsbereich==TABLE)
              @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_BACKWARD_CHAR,0);
}*/
/*@extern method GCalcProcessClass, MSG_CURSOR_LOESCHT_RECHTS
{
    int pos;
    char *rPtr;
    char buf[200];
    //char term[10];

    if ((arbeitsbereich==CALCULATOR) || (arbeitsbereich==Y_EDITOR))
    {
              pos=TextGetCursorPosition();
              @call aktives_Textobjekt::MSG_VIS_TEXT_GET_ALL_PTR(buf);
              rPtr =strrchr(buf, '\r');
              // Der Cursor soll sich nur in der aktuellen Eingabezeile bewegen können
              if ((rPtr!=NULL) && (rPtr-buf < pos - 1) || (rPtr==NULL))
              {
                      @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_WORD,0);
                      pos=TextGetCursorPosition();
	  if (buf[pos]=='(')
                          @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_CHAR,0);
              }
     }
     if (arbeitsbereich==TABLE)
     {
               @call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_WORD,0);
               //@call aktives_Textobjekt::MSG_VIS_TEXT_GET_ALL_PTR(term);
               //if (strlen(term)==0)
                   //@call aktives_Textobjekt::MSG_VIS_TEXT_REPLACE_ALL_PTR("0",0);
     }
}*/
@extern method GCalcProcessClass, MSG_DISPLAY_LOESCHEN
{
         char *rPtr;
         char buf[100];

         if ((arbeitsbereich==CALCULATOR) || (arbeitsbereich==Y_EDITOR) || (arbeitsbereich==TABLE))
         {
                @call aktives_Textobjekt::MSG_VIS_TEXT_GET_ALL_PTR(buf);
    		rPtr =strrchr(buf, '\r');
   		if (rPtr!=NULL)
		{
	     		rPtr++;
	     		strcpy(buf,rPtr);
		}
                if (strlen(buf)!=0)
	       		@call aktives_Textobjekt::MSG_VIS_TEXT_DO_KEY_FUNCTION(VTKF_DELETE_PARAGRAPH,0);
                else
                    {
	      		  @call aktives_Textobjekt::MSG_VIS_TEXT_DELETE_ALL();
                          zeilenzahl=0;
                    }
                if (arbeitsbereich==CALCULATOR) @send aktives_Textobjekt::MSG_META_GRAB_FOCUS_EXCL();
          }
}

