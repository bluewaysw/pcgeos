@include <stdapp.goh>
@include "Main/grafcalc.goh"
@include "UI/appui.goh"
#include <initfile.h>

//MSG_WINKELMASS_EINSTELLEN
//MSG_NACHKOMMASTELLEN_EINSTELLEN
//MSG_ZAHLDARSTELLUNG_EINSTELLEN
//MSG_DIAGRAM_CHANGED
//MSG_OPTIONEN_SPEICHERN
//MSG_OPTIONEN_LADEN


extern byte hintergrund;
extern byte x_achsen_teilung;
extern byte ko_achsen;
extern int winkelmass;
extern double digits;
extern char speicher[100];
extern LocalNumericFormat  *dez_format;
extern FloatFloatToAsciiFormatFlags format;
extern byte z_format;
extern word arbeitsbereich;

@extern method GCalcProcessClass, MSG_WINKELMASS_EINSTELLEN
{
	word sprache;

	sprache = @call Sprachen::MSG_GEN_ITEM_GROUP_GET_SELECTION();
	//MessageNumberBox(sprache);
      if (mass==1)
      {
	 winkelmass = GRADMASS;      
      	 if (sprache==ENGLISCH)
           @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("DEG",0);
         else
           @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("GRAD",0);
      }
      else
      {
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("RAD",0);
         winkelmass = BOGENMASS;
      }
     if (arbeitsbereich==3)  @call self::MSG_INVALIDATE_VIEW();
     @call self::MSG_ARBEITSBEREICH_EINSTELLEN(arbeitsbereich);
}
@extern method GCalcProcessClass, MSG_NACHKOMMASTELLEN_EINSTELLEN
{
      word sprache;
      char zahl_str[2];      
      char d[8]="";

      sprache = @call Sprachen::MSG_GEN_ITEM_GROUP_GET_SELECTION();
      if (sprache==ENGLISCH) strcat(d,"FD "); else strcat(d,"NKST ");
      //MessageBox(d);
      @call Nachkommastellen::MSG_VIS_TEXT_GET_ALL_PTR(zahl_str);
      
      if (anzahl==1) Text_incrementieren(zahl_str,1,0,8,0); else Text_incrementieren(zahl_str,-1,0,8,0);     
      FloatAsciiToFloat(FAF_PUSH_RESULT, strlen(zahl_str),zahl_str,0);
       //FloatPopNumber(&digits); 
      FloatGeos80ToIEEE64(&digits);
      @call Nachkommastellen::MSG_VIS_TEXT_REPLACE_ALL_PTR(zahl_str, 0);
      strcat(d,zahl_str);//MessageBox(d);
      @call InfotextDigits::MSG_VIS_TEXT_REPLACE_ALL_PTR(d,0);
      @call self::MSG_ARBEITSBEREICH_EINSTELLEN(arbeitsbereich);
}
@extern method GCalcProcessClass, MSG_ZAHLDARSTELLUNG_EINSTELLEN
{
       if (zahlenformat==NORMAL) 
       {
       	    format=FFAF_DONT_USE_SCIENTIFIC;		/*zahlenformat ist Übergabeparameter*/
       	     //MessageNumberBox(zahlenformat);
       }
       else format=FFAF_SCIENTIFIC;      
       z_format=zahlenformat; 
       @call self::MSG_ARBEITSBEREICH_EINSTELLEN(arbeitsbereich); 
}
@extern method GCalcProcessClass, MSG_DIAGRAM_CHANGED
{
       word auswahl;

       auswahl=@call Diagramm::MSG_GEN_BOOLEAN_GROUP_GET_SELECTED_BOOLEANS();
       if (auswahl & 1)  hintergrund=1; else hintergrund=0;
       if (auswahl & 2)
       {
	ko_achsen=1;
                    @call Achsenteilung::MSG_GEN_SET_ENABLED(VUM_DELAYED_VIA_APP_QUEUE);
       }
       else
       {
	ko_achsen=0;
                    @call Achsenteilung::MSG_GEN_SET_NOT_ENABLED(VUM_DELAYED_VIA_APP_QUEUE);
       }
       if (auswahl & 4)
       {
                   if (ko_achsen==1)
                       x_achsen_teilung=1;	//y_achsen_teilung ist eingeschlossen
                   else x_achsen_teilung=0;
       }
       else
                   x_achsen_teilung=0;
       @call self::MSG_INVALIDATE_VIEW();
}
@extern method GCalcProcessClass, MSG_OPTIONEN_SPEICHERN
{
      word selectionDiagram;
      char digit_str[2]; 
      word sprachwahl;

      InitFileWriteInteger("gcalc","angle",winkelmass);	//winkelmass ist global
      @call Nachkommastellen::MSG_VIS_TEXT_GET_ALL_PTR(digit_str);
      InitFileWriteString("gcalc","frac_digits",digit_str);
      selectionDiagram=@call Diagramm::MSG_GEN_BOOLEAN_GROUP_GET_SELECTED_BOOLEANS();
      InitFileWriteInteger("gcalc","DiagrammSettings",selectionDiagram);
      InitFileWriteInteger("gcalc","Format",format);
      sprachwahl=@call Sprachen::MSG_GEN_ITEM_GROUP_GET_SELECTION();
      InitFileWriteInteger("gcalc","Language",sprachwahl);
      InitFileSave();
      InitFileCommit();
 //@send GCalcApp::MSG_META_SAVE_OPTIONS();  // Für Controller
}
@extern method GCalcProcessClass, MSG_OPTIONEN_LADEN
{
      Boolean err;
      word groesse,sprachenwahl;
      char digit_str[2];
      char d[8]="";
      selections selectionDiagram;
 
      err = InitFileReadInteger("gcalc","Language", (unsigned short *) &sprachenwahl); 
      if (err) sprachenwahl=DEUTSCH;
      @call Sprachen::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(sprachenwahl,0);
      @call Sprachen::MSG_GEN_ITEM_GROUP_SET_MODIFIED_STATE(TRUE);
      @call Sprachen::MSG_GEN_APPLY();
     // err = InitFileReadInteger("gcalc","angle", &winkelmass);
      err = InitFileReadInteger("gcalc","angle", (unsigned short *) &winkelmass);
      if ( err ) winkelmass = BOGENMASS;
      @call Winkelmass::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(winkelmass,0);
     @call Winkelmass::MSG_GEN_ITEM_GROUP_SET_MODIFIED_STATE(TRUE);
     @call Winkelmass::MSG_GEN_APPLY();
     if (winkelmass==1)
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("DEG",0);
     else
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("RAD",0);
    /*-------------------------------------------------------------------------------------------------------------------*/
    /*Die Reihenfolge der Befehle darf nicht verändert werden, da sie sich gegenseitig beeinflussen. Keine Ahnung warum*/
     err = InitFileReadStringBuffer("gcalc","frac_digits",digit_str,2,&groesse);
     if (err)
     {
     	  if (sprachenwahl==ENGLISCH) strcat(d,"FD ");
          strcpy(digit_str,"2");
          @call Nachkommastellen::MSG_VIS_TEXT_REPLACE_ALL_PTR(digit_str,0);
          strcat(d,"2");          
          digits=2;
          @call Taste_Dezimalpunkt::MSG_GEN_USE_VIS_MONIKER(OptrToChunk(@Dezimalpunkt),VUM_NOW);
      }
      else
      {
         @call Nachkommastellen::MSG_VIS_TEXT_REPLACE_ALL_PTR(digit_str,0);         
         FloatAsciiToFloat(FAF_PUSH_RESULT, strlen(digit_str),digit_str,0);
         //FloatPopNumber(&digits);
         FloatGeos80ToIEEE64(&digits);
         /*if (sprachenwahl==ENGLISCH)
         {
             strcat(d,"FD "); 
             @call Taste_Dezimalpunkt::MSG_GEN_USE_VIS_MONIKER(OptrToChunk(@Dezimalpunkt),VUM_NOW);
         }
         else
         {
             strcat(d,"NKST ");
             @call Taste_Dezimalpunkt::MSG_GEN_USE_VIS_MONIKER(OptrToChunk(@Dezimalkomma),VUM_NOW);
         }*/
         strcat(d,digit_str);
      }
     @call InfotextDigits::MSG_VIS_TEXT_REPLACE_ALL_PTR(d,0);
     err = InitFileReadStringBuffer("gcalc","memory", speicher , 100, &groesse);
          if (err) strcpy(speicher,"0");
          if (strlen(speicher)>0)
              if (sprachenwahl==ENGLISCH)
              	@call InfotextSpeicher::MSG_VIS_TEXT_REPLACE_ALL_PTR("M",0);
              else
                @call InfotextSpeicher::MSG_VIS_TEXT_REPLACE_ALL_PTR("S",0);
          else
         @call InfotextSpeicher::MSG_VIS_TEXT_DELETE_ALL();
    /*-----------------------------------------------------------------------------------------------------------------------*/
     err = InitFileReadInteger("gcalc","DiagrammSettings",&selectionDiagram);
       if (err) selectionDiagram=7;
      @call Diagramm::MSG_GEN_BOOLEAN_GROUP_SET_GROUP_STATE(selectionDiagram,0);
      @call self::MSG_DIAGRAM_CHANGED();
      err = InitFileReadInteger("gcalc","Format",&format);
      if (err) format=512;	/*512 für FFAF_DONT_USE_SCIENTIFIC*/
      if (format==512) 
      {        
            @call Zahlenformat::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(NORMAL,0);  
            z_format=NORMAL;
       } 
      else 			/*format=FFAF_SCIENTIFIC*/
      {
             @call Zahlenformat::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(SCIENTIFIC,0);  
             z_format=SCIENTIFIC;
       } 
   

}
