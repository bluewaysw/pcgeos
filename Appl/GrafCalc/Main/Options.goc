@include <stdapp.goh>
@include "grafcalc.goh"
@include "UI/appui.goh"
#include <initfile.h>

extern byte hintergrund;
extern byte x_achsen_teilung;
extern byte ko_achsen;
extern int winkelmass;
extern double digits;
extern char speicher[90];
extern LocalNumericFormat  *dez_format;
extern FloatFloatToAsciiFormatFlags format;
extern byte z_format;
extern word arbeitsbereich;

@extern method GCalcProcessClass, MSG_WINKELMASS_EINSTELLEN
{
      if (mass==1) winkelmass = GRADMASS;
      if (mass==2) winkelmass = BOGENMASS;
      if (winkelmass==1)
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("DEG",0);
     else
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("RAD",0);
     if (arbeitsbereich==3)  @call self::MSG_INVALIDATE_VIEW();
     @call self::MSG_ARBEITSBEREICH_EINSTELLEN(arbeitsbereich);
}
@extern method GCalcProcessClass, MSG_NACHKOMMASTELLEN_EINSTELLEN
{
      char zahl_str[2];      
      char d[4]="FD ";

      @call Nachkommastellen::MSG_VIS_TEXT_GET_ALL_PTR(zahl_str);
      
       if (anzahl==1) Text_incrementieren(zahl_str,1,0,8,0); else Text_incrementieren(zahl_str,-1,0,8,0);     
       FloatAsciiToFloat(FAF_PUSH_RESULT, strlen(zahl_str),zahl_str,0);
       //FloatPopNumber(&digits); 
        FloatGeos80ToIEEE64(&digits);
      @call Nachkommastellen::MSG_VIS_TEXT_REPLACE_ALL_PTR(zahl_str, 0);
       strcat(d,zahl_str);
      @call InfotextDigits::MSG_VIS_TEXT_REPLACE_ALL_PTR(d,0);
      @call self::MSG_ARBEITSBEREICH_EINSTELLEN(arbeitsbereich);
}
@extern method GCalcProcessClass, MSG_ZAHLDARSTELLUNG_EINSTELLEN
{
       if (zahlenformat==2) format=FFAF_DONT_USE_SCIENTIFIC;		/*zahlenformat ist �bergabeparameter*/
       else format=FFAF_SCIENTIFIC;
       z_format=zahlenformat; 
        @call self::MSG_ARBEITSBEREICH_EINSTELLEN(arbeitsbereich); 
}
@extern method GCalcProcessClass, MSG_DIAGRAM_CHANGED
{
       word auswahl;

       auswahl=@call Diagramm::MSG_GEN_BOOLEAN_GROUP_GET_SELECTED_BOOLEANS();
       if (auswahl & 1)  hintergrund=1; else hintergrund=0;
       if (auswahl & 2)
       {
	ko_achsen=1;
                    @call Achsenteilung::MSG_GEN_SET_ENABLED(VUM_DELAYED_VIA_APP_QUEUE);
       }
       else
       {
	ko_achsen=0;
                    @call Achsenteilung::MSG_GEN_SET_NOT_ENABLED(VUM_DELAYED_VIA_APP_QUEUE);
       }
       if (auswahl & 4)
       {
                   if (ko_achsen==1)
                       x_achsen_teilung=1;	//y_achsen_teilung ist eingeschlossen
                   else x_achsen_teilung=0;
       }
       else
                   x_achsen_teilung=0;
       @call self::MSG_INVALIDATE_VIEW();
}
@extern method GCalcProcessClass, MSG_OPTIONEN_SPEICHERN
{
      word selectionDiagram;
      char digit_str[2];       

      InitFileWriteInteger("gcalc","angle",winkelmass);	//winkelmass ist global
      @call Nachkommastellen::MSG_VIS_TEXT_GET_ALL_PTR(digit_str);
      InitFileWriteString("gcalc","frac_digits",digit_str);
      selectionDiagram=@call Diagramm::MSG_GEN_BOOLEAN_GROUP_GET_SELECTED_BOOLEANS();
      InitFileWriteInteger("gcalc","DiagrammSettings",selectionDiagram);
      InitFileWriteInteger("gcalc","Format",format);
      InitFileSave();
      InitFileCommit();
 //@send GCalcApp::MSG_META_SAVE_OPTIONS();  // F�r Controller
}
@extern method GCalcProcessClass, MSG_OPTIONEN_LADEN
{
      Boolean err;
      word groesse;
      char digit_str[2];
      char d[4]="FD ";
      selections selectionDiagram;
 
      // err = InitFileReadInteger("gcalc","angle", &winkelmass);
       err = InitFileReadInteger("gcalc","angle", (unsigned short *) &winkelmass);
      if ( err ) winkelmass = BOGENMASS;
      @call Winkelmass::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(winkelmass,0);
     @call Winkelmass::MSG_GEN_ITEM_GROUP_SET_MODIFIED_STATE(TRUE);
     @call Winkelmass::MSG_GEN_APPLY();
     if (winkelmass==1)
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("DEG",0);
     else
         @call InfotextAngle::MSG_VIS_TEXT_REPLACE_ALL_PTR("RAD",0);
    /*-------------------------------------------------------------------------------------------------------------------*/
    /*Die Reihenfolge der Befehle darf nicht ver�ndert werden, da sie sich gegenseitig beeinflussen. Keine Ahnung warum*/
     err = InitFileReadStringBuffer("gcalc","frac_digits",digit_str,2,&groesse);
     if (err)
     {
          strcpy(digit_str,"2");
          @call Nachkommastellen::MSG_VIS_TEXT_REPLACE_ALL_PTR(digit_str,0);
          strcat(d,"2");          
          digits=2;
      }
      else
      {
         @call Nachkommastellen::MSG_VIS_TEXT_REPLACE_ALL_PTR(digit_str,0);         
         FloatAsciiToFloat(FAF_PUSH_RESULT, strlen(digit_str),digit_str,0);
         //FloatPopNumber(&digits);
         FloatGeos80ToIEEE64(&digits);
         strcat(d,digit_str);
      }
     @call InfotextDigits::MSG_VIS_TEXT_REPLACE_ALL_PTR(d,0);
     
    /*-----------------------------------------------------------------------------------------------------------------------*/
     err = InitFileReadInteger("gcalc","DiagrammSettings",&selectionDiagram);
       if (err) selectionDiagram=7;
      @call Diagramm::MSG_GEN_BOOLEAN_GROUP_SET_GROUP_STATE(selectionDiagram,0);
      @call self::MSG_DIAGRAM_CHANGED();
      err = InitFileReadInteger("gcalc","Format",&format);
      if (err) format=512;	/*512 f�r FFAF_DONT_USE_SCIENTIFIC*/
      if (format==512) 
      {        
            @call Zahlenformat::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(NORMAL,0);  
            z_format=NORMAL;
       } 
      else 			/*format=FFAF_SCIENTIFIC*/
      {
             @call Zahlenformat::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(SCIENTIFIC,0);  
             z_format=SCIENTIFIC;
       }  
}
