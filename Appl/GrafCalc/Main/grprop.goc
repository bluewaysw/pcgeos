@include <stdapp.goh>
@include "Main/grafcalc.goh"
@include "UI/appui.goh"

extern byte farbindex[5];

void Text_incrementieren(char zahl_str[2], double increment, double min, double max, word fracDigits)
{ 
     double zahl;

     FloatAsciiToFloat(FAF_PUSH_RESULT, strlen(zahl_str),zahl_str,0);
     //FloatPopNumber(&zahl);
      FloatGeos80ToIEEE64(&zahl);
     zahl=zahl + increment;
     if (zahl>max) zahl = max;
     if (zahl<min) zahl = min;
     LocalFixedToAscii(zahl_str,MakeWWFixed(zahl),fracDigits);
}
@extern method GCalcProcessClass, MSG_GRAPH_COLOR_1
{
      farbindex[0]=@call Farbauswahl1::MSG_GEN_ITEM_GROUP_GET_SELECTION();       
}
@extern method GCalcProcessClass, MSG_GRAPH_COLOR_2
{
      farbindex[1]=@call Farbauswahl2::MSG_GEN_ITEM_GROUP_GET_SELECTION(); 
}      
@extern method GCalcProcessClass, MSG_GRAPH_COLOR_3
{
      farbindex[2]=@call Farbauswahl2::MSG_GEN_ITEM_GROUP_GET_SELECTION();       
}
@extern method GCalcProcessClass, MSG_GRAPH_COLOR_4
{
      farbindex[3]=@call Farbauswahl2::MSG_GEN_ITEM_GROUP_GET_SELECTION();       
}
@extern method GCalcProcessClass, MSG_GRAPH_COLOR_5
{
      farbindex[4]=@call Farbauswahl2::MSG_GEN_ITEM_GROUP_GET_SELECTION();       
}
@extern method GCalcProcessClass, MSG_TABLE_X_INCREMENTIEREN
{
      char zahl_str[10];
     
      double incr;
      char inc_str[10];

      @call Delta_X::MSG_VIS_TEXT_GET_ALL_PTR(inc_str);
      FloatAsciiToFloat(FAF_PUSH_RESULT, strlen(inc_str),inc_str,0);
      //FloatPopNumber(&incr);
       FloatGeos80ToIEEE64(&incr);
      @call X_Eingabe::MSG_VIS_TEXT_GET_ALL_PTR(zahl_str);
/*MessageBox(zahl_str);*/
       
/*MessageNumberBox(zahl)*/
       
       if (increment==1) Text_incrementieren(zahl_str,incr,-1000,1000,4);else Text_incrementieren(zahl_str,-incr,-1000,1000,4);
       
       @call X_Eingabe::MSG_VIS_TEXT_REPLACE_ALL_PTR(zahl_str, 0);
       @call self::MSG_FUNKTIONSWERTE_BERECHNEN();
}

@extern method GCalcProcessClass, MSG_TABLE_DX_INCREMENTIEREN
{      
      char inc_str[10];

      @call Delta_X::MSG_VIS_TEXT_GET_ALL_PTR(inc_str);
      if (increment==1) Text_incrementieren(inc_str,0.1,0.1,10,1);else Text_incrementieren(inc_str,-0.1,0.1,10,1);      
       @call Delta_X::MSG_VIS_TEXT_REPLACE_ALL_PTR(inc_str, 0);
}

@extern method GCalcProcessClass, MSG_LINIENDICKE_INCREMENTIEREN	
{
      char dicke_str[2];

      switch (nr)
      {
          case 1:
          	@call LinienDicke1::MSG_VIS_TEXT_GET_ALL_PTR(dicke_str);
  //MessageBox(dicke_str);
                    if (increment==1) Text_incrementieren(dicke_str,1,0,8,0); else Text_incrementieren(dicke_str,-1,0,8,0);         	
          	@call LinienDicke1::MSG_VIS_TEXT_REPLACE_ALL_PTR(dicke_str, 0);                    
                    break;
           case 2:
	@call LinienDicke2::MSG_VIS_TEXT_GET_ALL_PTR(dicke_str);
          	if (increment==1) Text_incrementieren(dicke_str,1,0,8,0); else Text_incrementieren(dicke_str,-1,0,8,0);
          	@call LinienDicke2::MSG_VIS_TEXT_REPLACE_ALL_PTR(dicke_str, 0);	
                    break;
           case 3:
	@call LinienDicke3::MSG_VIS_TEXT_GET_ALL_PTR(dicke_str);
          	if (increment==1) Text_incrementieren(dicke_str,1,0,8,0); else Text_incrementieren(dicke_str,-1,0,8,0);
          	@call LinienDicke3::MSG_VIS_TEXT_REPLACE_ALL_PTR(dicke_str, 0);	
                    break;
           case 4:
	@call LinienDicke4::MSG_VIS_TEXT_GET_ALL_PTR(dicke_str);
          	if (increment==1) Text_incrementieren(dicke_str,1,0,8,0); else Text_incrementieren(dicke_str,-1,0,8,0); 
          	@call LinienDicke4::MSG_VIS_TEXT_REPLACE_ALL_PTR(dicke_str, 0);	
                    break;
           case 5:
	@call LinienDicke5::MSG_VIS_TEXT_GET_ALL_PTR(dicke_str);
          	if (increment==1) Text_incrementieren(dicke_str,1,0,8,0); else Text_incrementieren(dicke_str,-1,0,8,0);
          	@call LinienDicke5::MSG_VIS_TEXT_REPLACE_ALL_PTR(dicke_str, 0);    	           
       }
       /*@call self::MSG_INVALIDATE_VIEW();  */
}
