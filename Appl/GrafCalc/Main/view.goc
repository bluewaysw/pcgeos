@include <stdapp.goh>
@include "Main/grafcalc.goh"
@include "UI/appui.goh"
@include <Objects/clipbrd.goh>


@start PtrResource;
  @include "Art/mausicon.ico"
@end PtrResource;

extern double xfaktor;
extern double yfaktor;
extern double deltax;
extern double deltay;
extern word arbeitsbereich;

#define URSPRUNG_X 160
#define URSPRUNG_Y 80

@extern method GCalcProcessClass, MSG_SHIFT_VIEW
{  
  if (strchr(ms.MS_ziffer,'u')) 
      deltay=deltay-50;
  if (strchr(ms.MS_ziffer,'d')) 
      deltay=deltay+50;
  if (strchr(ms.MS_ziffer,'r')) 
      deltax=deltax+100;
 if (strchr(ms.MS_ziffer,'l')) 
      deltax=deltax-100;
  @call self::MSG_INVALIDATE_VIEW();
     if ((deltax!=0) | (deltay!=0)) 
     {
      @call AnsichtUrsprungImZentrum::MSG_GEN_SET_ENABLED(VUM_NOW);
      //@call UrsprungZentrieren::MSG_GEN_ITEM_GROUP_SET_ITEM_STATE(URSPRUNG_ZENTRIERT,FALSE);
     }
     else  
     {
      @call AnsichtUrsprungImZentrum::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
      //@call GeografiUrsprungZentrieren::MSG_GEN_ITEM_GROUP_SET_ITEM_STATE(URSPRUNG_ZENTRIERT,TRUE);
     }
}

@extern method GCalcProcessClass, MSG_VERKLEINERNX		/*Zoom out*/
{       
    double xfaktor_vorher;

    xfaktor_vorher=xfaktor;       
    if (xfaktor > 0.01) 
     {
       if (xfaktor > 1)  xfaktor=zoomfaktor_out_bestimmen(xfaktor);                   
       else
       {
            if (xfaktor==1) xfaktor=0.5;                            
            else
            {
                 xfaktor=-1/xfaktor;	// die 3 Rechenschritte sind offenbar nicht in einem Schritt möglich
                 xfaktor=zoomfaktor_out_bestimmen(xfaktor);
                 xfaktor=-1/xfaktor;                 
             }
       }  
       deltax=deltax*xfaktor/xfaktor_vorher; 
       @call self::MSG_INVALIDATE_VIEW();
     }
     @call self::MSG_ENDISABLE_TRIGGERS();
     //@call ZoomFactorX::MSG_GEN_VALUE_SET_VALUE(MakeWWFixed(xfaktor),0);
}
@extern method GCalcProcessClass, MSG_VERKLEINERNY
{ 
      double yfaktor_vorher;

      yfaktor_vorher=yfaktor;   
      if (yfaktor>0.01) 
      {
         if (yfaktor > 1) yfaktor=zoomfaktor_out_bestimmen(yfaktor);                        
         else
          { 
              if (yfaktor==1) yfaktor=0.5;                            
              else
              {  
                  yfaktor=-1/yfaktor;	// die 3 Rechenschritte sind offenbar nicht in einem Schritt möglich
                  yfaktor=zoomfaktor_out_bestimmen(yfaktor);
                  yfaktor=-1/yfaktor;                        
               }      
            } 
            deltay=deltay*yfaktor/yfaktor_vorher;                
            @call self::MSG_INVALIDATE_VIEW();
        }
        @call self::MSG_ENDISABLE_TRIGGERS();
        //@call ZoomFactorY::MSG_GEN_VALUE_SET_VALUE(MakeWWFixed(yfaktor),0);
}
@extern method GCalcProcessClass, MSG_VERGROESSERNX	/*Zoom in*/
{     /*Bild verkleinern -> Zoomfaktor <1, vergrößern (Lupenfunktion) -> Zoomfaktor >1*/
      /*Zoomfaktoren <1 werden als negative Faktoren in der Tabelle geführt: 0.5 -> -2*/      
      double xfaktor_vorher;

      xfaktor_vorher=xfaktor;
      if (xfaktor < 100) 
      {
          if (xfaktor >= 1) xfaktor=zoomfaktor_in_bestimmen(xfaktor);                                                         
           else
           {
                if (xfaktor==0.5)  xfaktor=1;	                                   
                else
                {  
	/* die folgenden 3 Rechenschritte sind offenbar nicht in einem Schritt möglich*/	
                    xfaktor=-1/xfaktor;		
                    xfaktor=zoomfaktor_in_bestimmen(xfaktor);	
                    xfaktor=-1/xfaktor;	                                        
                }        
         }        
        deltax=deltax*xfaktor/xfaktor_vorher;  
        @call self::MSG_INVALIDATE_VIEW();
      }
      @call self::MSG_ENDISABLE_TRIGGERS();
      //@call ZoomFactorX::MSG_GEN_VALUE_SET_VALUE(MakeWWFixed(xfaktor),0);
}
@extern method GCalcProcessClass, MSG_VERGROESSERNY
{   
    double yfaktor_vorher;

    yfaktor_vorher=yfaktor;
    if (yfaktor<50) 
     {
         if (yfaktor>=1) yfaktor=zoomfaktor_in_bestimmen(yfaktor);         
          else
          {
               if (yfaktor==0.5) yfaktor=1;
               else
               {
                    yfaktor=-1/yfaktor;	// die 3 Rechenschritte sind offenbar nicht in einem Schritt möglich
                    yfaktor=zoomfaktor_in_bestimmen(yfaktor);
                    yfaktor=-1/yfaktor;                    
                }
           } 
           deltay=deltay*yfaktor/yfaktor_vorher; 
           @call self::MSG_INVALIDATE_VIEW();
     }
    @call self::MSG_ENDISABLE_TRIGGERS();
    //@call ZoomFactorY::MSG_GEN_VALUE_SET_VALUE(MakeWWFixed(yfaktor),0);
}

@extern method GCalcProcessClass, MSG_VERGROESSERNXY
{   
     @call self::MSG_VERGROESSERNY();
     @call self::MSG_VERGROESSERNX();
}
@extern method GCalcProcessClass, MSG_VERKLEINERNXY
{   
      @call self::MSG_VERKLEINERNY();
      @call self::MSG_VERKLEINERNX();
} 

@extern method GCalcProcessClass, MSG_NORMALGROESSE
{   
    if (xfaktor!=1 || yfaktor!=1)
    { 
      deltay=dividiere(deltay,yfaktor);
      yfaktor = 1;
      if (xfaktor!=1) 
       {
        xfaktor=1;deltax=dividiere(deltax,xfaktor);
        //berechnet[0]=FALSE;
        //berechnet[1]=FALSE;
        //berechnet[2]=FALSE;
        }
        //ansicht_geaendert=TRUE;
      @call self::MSG_INVALIDATE_VIEW();
    }
    @call self::MSG_ENDISABLE_TRIGGERS();
    //@call ZoomFactorX::MSG_GEN_VALUE_SET_INTEGER_VALUE(1,0);
    //@call ZoomFactorY::MSG_GEN_VALUE_SET_INTEGER_VALUE(1,0);
} 

@extern method GCalcProcessClass, MSG_URSPRUNGIMZENTRUM
{   
   if (deltax!=0 || deltay!=0)
    {
     deltay = 0;deltax=0;     
     @call self::MSG_INVALIDATE_VIEW();
    }
   @call AnsichtUrsprungImZentrum::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
   //@call UrsprungZentrieren::MSG_GEN_ITEM_GROUP_SET_ITEM_STATE(URSPRUNG_ZENTRIERT,TRUE);
} 
@extern method GCalcProcessClass, MSG_PUNKT_IN_BILDMITTE_SETZEN
{
 word selectionPunktInBildmitte;
 selectionPunktInBildmitte=@call DiagrammVerschieben::MSG_GEN_BOOLEAN_GROUP_GET_SELECTED_BOOLEANS();
 if (selectionPunktInBildmitte & 1)
  @call Grafikfenster::MSG_GEN_VIEW_SET_PTR_IMAGE(@p1maus,PIL_WINDOW);
else
   @call Grafikfenster::MSG_GEN_VIEW_SET_PTR_IMAGE(NullOptr,PIL_WINDOW);
}
@extern method GCalcProcessClass, MSG_META_START_SELECT
{    
        sdword deltax_neu,deltay_neu;
        word selectionPunktInBildmitte;
       if (arbeitsbereich==GRAPH)
       { 
       	selectionPunktInBildmitte=@call DiagrammVerschieben::MSG_GEN_BOOLEAN_GROUP_GET_SELECTED_BOOLEANS();
       	if (selectionPunktInBildmitte &1)
       	{ 
         	@send DiagrammVerschieben::MSG_GEN_BOOLEAN_GROUP_SET_BOOLEAN_STATE(PUNKT_IN_BILDMITTE,FALSE);

         	deltax_neu=(sdword)sub(xPosition,160);
         	deltay_neu=yPosition-80;
         	deltax=deltax+deltax_neu;
         	deltay=deltay+deltay_neu;
         	@call self::MSG_INVALIDATE_VIEW();
         	if (deltax_neu!=0 || deltay_neu!=0)
           		@call AnsichtUrsprungImZentrum::MSG_GEN_SET_ENABLED(VUM_NOW);
         	@callsuper();
         	@call Grafikfenster::MSG_GEN_VIEW_SET_PTR_IMAGE(NullOptr,PIL_WINDOW);
         	retVal->flags=MRF_PROCESSED | MRF_CLEAR_POINTER_IMAGE; 
	}
       }       
}
@extern method GCalcProcessClass, MSG_META_MOUSE_PTR
{
   if (arbeitsbereich==GRAPH)
   {
       double xkoord,ykoord;
       char xstring[15];
       char ystring[15];
      
      if ((xPosition>0) && (xPosition<320) && (yPosition>0) && (yPosition<160))
      {
           ykoord=dividiere(-((sword)yPosition + deltay - URSPRUNG_Y) * 0.04,yfaktor);
           LocalFixedToAscii(ystring,MakeWWFixed(ykoord),3);
           xkoord=dividiere(((sword)xPosition +deltax - URSPRUNG_X) * 0.04,xfaktor);
          LocalFixedToAscii(xstring,MakeWWFixed(xkoord),3);
          @call MauspositionValueX::MSG_VIS_TEXT_REPLACE_ALL_PTR(xstring,0);
          @call MauspositionValueY::MSG_VIS_TEXT_REPLACE_ALL_PTR(ystring,0);
       }
      else
      {
          @call MauspositionValueX::MSG_VIS_TEXT_DELETE_ALL();
          @call MauspositionValueY::MSG_VIS_TEXT_DELETE_ALL();
      }     
   }
}
@extern method GCalcProcessClass, MSG_ENDISABLE_TRIGGERS
{
  if (sub(xfaktor,100)<0 && sub(xfaktor,0.01)>0)	 /*xfaktor zwischen 50 und 0.02*/
   {
        @call AnsichtNormalgroesse::MSG_GEN_SET_ENABLED(VUM_NOW);        
        @call ZoomInX::MSG_GEN_SET_ENABLED(VUM_NOW);
        @call ZoomOutX::MSG_GEN_SET_ENABLED(VUM_NOW);
		//wenn zusätzlich gilt:
         if (sub(yfaktor,0.02)>0)
         {
              @call ZoomOutXY::MSG_GEN_SET_ENABLED(VUM_NOW);               
          }
          if (sub(yfaktor,50)<0)
          {
               @call ZoomInXY::MSG_GEN_SET_ENABLED(VUM_NOW);                
          }
    }
    else		/*xfaktor auf den Grenzen*/
    {
         if (sub(xfaktor,100)>=0)    //xfaktor gleich 100
         {
             @call ZoomInX::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
             @call ZoomInXY::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
              
          }
          else		/*xfaktor kleiner als 0.01*/
          {
              @call ZoomOutX::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
              @call ZoomOutXY::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);               
          }
     }

     if (sub(yfaktor,100)<0 && sub(yfaktor,0.01)>0) 	/*yfaktor zwischen 100 und 0.01*/
     {
          @call AnsichtNormalgroesse::MSG_GEN_SET_ENABLED(VUM_NOW);          
          @call ZoomOutY::MSG_GEN_SET_ENABLED(VUM_NOW);
          @call ZoomInY::MSG_GEN_SET_ENABLED(VUM_NOW);
               		//wenn zusätzlich gilt
          if (sub(xfaktor,0.01)>0)
          {
              @call ZoomOutXY::MSG_GEN_SET_ENABLED(VUM_NOW);
              
          }
          if (sub(xfaktor,100)<0)
          {
              @call ZoomInXY::MSG_GEN_SET_ENABLED(VUM_NOW);
              
          }
      }
      else		//yfaktor außerhalb
      {
           if (sub(yfaktor,100)>=0)	//yfaktor größer als 100
           {
               @call ZoomInY::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
               @call ZoomInXY::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
                
           }
           else		//yfaktor kleiner als 0.01
           {
               @call ZoomOutY::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
               @call ZoomOutXY::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
                
           }
      } 
     if (xfaktor==1 && yfaktor==1)
      {
          @call AnsichtNormalgroesse::MSG_GEN_SET_NOT_ENABLED(VUM_NOW);
          
      }
}
int zoomfaktor_in_bestimmen(int faktor)
{
       switch (faktor)
       {
           case -200:
              faktor=-100;
              break;
           case -100:
              faktor= -50;
              break;
           case -50:
              faktor=-20;
              break;
           case -20:
              faktor=-10;
              break;
           case -10:
              faktor=-5;
              break;
           case -5:
              faktor=-2;
              break;
           case -2:
              faktor=1;
              break; 
           case 1:
              faktor=2;
              break;
           case 2:
              faktor=5;
              break;
           case 5:
              faktor=10;
              break; 
           case 10:
              faktor=20;
              break;
           case 20:
              faktor=50;
              break;
           case 50:
              faktor=100;
              break;
           case 100:
              faktor=200;
              break; 
       }  
      //MessageNumberBox(faktor);
      return faktor; 
}
int zoomfaktor_out_bestimmen(int faktor)
{
       switch (faktor)
       {
           case 1000:
               faktor=500;
               break;  
           case 500:
               faktor=200;
               break;
           case 200:
               faktor=100;
               break;  
           case 100:
               faktor=50;
               break;
           case 50:
               faktor=20;
               break;
           case 20:
               faktor=10;
               break;
           case 10:
               faktor=5;
               break;
           case 5:
               faktor=2;
               break;
           case 2:
               faktor=1;
               break;     
           case 1:
              faktor=-2;
              break;
           case -2:
              faktor=-5;
              break;
           case -5:
              faktor=-10;
              break; 
           case -10:
              faktor=-20;
              break;
           case -20:
              faktor= -50;
              break;
            case -50:
               faktor= -100;
            case -100:
               faktor=-200;
               break;
            case -200:
               faktor=-500;
               break;
            case -500:
               faktor=-1000;
               break;   
       }  
       return faktor; 
}

