/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	  GeoBanner
 * MODULE:	  Banner
 * FILE:	  banner.ui
 *
 * AUTHOR:  	  Roger Flores, a Long Time Ago.
 *
 * REVISION HISTORY:
 *	Name	  Date	    Description
 *	----	  ----	    -----------
 *	rsf	long/ago    Initial version
 *      SY	10/ 2/92    port to 2.0  (including changing headers :)
 *
 * DESCRIPTION:
 *	
 *	This file contains the user-interface description for the banner app.
 *
 *	$Id: banner.ui,v 1.4 98/04/28 17:32:35 joon Exp $
 *
 ***********************************************************************/

#include "generic.uih"
#include "spool.uih"
#include "Objects/Text/tCtrl.uih"
#include "Art/mkrApp.ui"
#include "Art/mkrAppTiny.ui"

/* Banner is a visContent so that it may appear within a view to 
   allow scrolling to view the whole banner */
class	Banner	= VisContent, master {

	B_FontID = wordComp : BANNER_DEFAULT_FONT_ID;
	B_Height = wordComp : 0;
	B_Width = wordComp : 0;
	B_SpecialEffects = wordComp : 0;
	B_LastSpecialEffects = wordComp : 0;
	B_PointSize = wordComp : 0;
	B_MessageHeight = wordComp : 0;
	B_BorderWidth = wordComp : 0;
	B_BorderLineWidth = wordComp : 0;
	B_QuarterInch = wordComp : 0;
	B_XOffset = wordComp : 0;
	B_YOffset = wordComp : 0;
	B_TextOffset = wordComp : 0;
	B_LeaderWidth = wordComp : 0;
	B_TimerHandle = wordComp : 0;
	B_TimerID = wordComp : 0;
	B_LastMaximizedHeight = wordComp : 0;
	B_BannerState = byteComp : 0;
	B_PrintPosition = byteComp : 0;
	B_EndSpace = wordComp : 0;
#if DO_DBCS
	B_CharStart = wordComp : 0;
	B_CharLength = wordComp : 0;
#else
	B_CharStart = byteComp : 0;
	B_CharLength = byteComp : 0;
#endif
}

class  BannerGenView = GenView {
}

class  BannerText = GenText {
}

class  BannerPrimary = GenPrimary {
}


start	BannerStrings, data;

/*
 *  the following are appended to the document name used by the spooler.
 *  Length is limited by FILE_LONGNAME_LENGTH in the message 
 *  MSG_PRINT_SET_DOC_NAME.
 */
chunk topPostfix	= { (top)}
	localize "suffix print job name for top of double-height banner", 31;
chunk bottomPostfix	= { (bottom)}
	localize "suffix print job name for bottom of double-height banner", 31;

/*
 *  warning & error messages
 */
chunk noTextWarningString = "You cannot print an empty banner";

chunk exitWarningString = "Are you sure you want to exit GeoBanner?";

end	BannerStrings;


start AppResource;

BannerApp = GenApplication {
	moniker = list {
	        BannerTextMoniker,
		AppMoniker,
		AppTinyMoniker
	}

	children = BannerPrimaryObj;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = BannerPrimaryObj;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
		BannerPrintControl,
		EditMenu,
		FontsMenu,
		StylesMenu, WriteCharFGColorControl;
	hints = {
	    ATTR_GEN_HELP_FILE { char "banner", 0 }
	}
}

visMoniker BannerTextMoniker = 
	"GeoBanner";

end AppResource;

/*-----------------------------------------------------------------------------
		Menus `n` stuff
-----------------------------------------------------------------------------*/

start Interface;


BannerPrimaryObj = BannerPrimary vardataReloc {
	children =
		FileMenu,
		EditMenu,
		FontsMenu,
		StylesMenu,
		EffectsMenu,
		BordersMenu,
	        TextColorTrigger,
		BannerTextEdit,
		BannerView;
	hints = {
		ATTR_GEN_HELP_CONTEXT {
			char "TOC", 0
		},
		ATTR_GEN_PRIMARY_DONE_ON_CLOSE {
		    lptr offset BannerDoneExplain
		    optr 0
		    optr 0
		    UN_OPTR BannerPrintControl
		    lptr 0, 0
		    lptr 0, offset BannerDonePrint
		    lptr 0, offset BannerDoneExit
		    lptr 0
		    lptr 0, offset BannerDoneBack
		}
	}
}

visMoniker BannerDoneExplain = "What would you like to do with your banner?";
visMoniker BannerDonePrint = "Print my banner.";
visMoniker BannerDoneExit = "Throw away my banner.";
visMoniker BannerDoneBack = "Go back to my banner.";

BannerTextEdit = BannerText {
	moniker = "Enter banner message here:";
	text = "";
	genAttributes = default + targetable;
	maxLength = 200;		/* seems like a decent number */
	textDisplayAttributes = singleLineText, noWordWrapping,
		useTabForNavigation, allowTextOffEnd;
	applyMsg = MSG_META_DUMMY;
	destination = TheBanner;
	hints = {
		ATTR_GEN_TEXT_CHAR_ATTR {
			word TUICharAttr
		},
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_DEFAULT_FOCUS,
		HINT_DEFAULT_TARGET,
	    	HINT_PLACE_MONIKER_ABOVE,
		HINT_TEXT_WASH_COLOR {
			ColorQuad <
				C_WHITE,
				CF_INDEX,
				0, 0
			>
		}
	}
}

chunk TUICharAttr = data {
	CHAR_ATTR_SS_FONT_SIZE_STYLE_COLOR
	(0, 2, FID_DTC_URW_ROMAN, 24, 0, C_BLACK)
}

BannerView = BannerGenView {
	moniker = "Preview of how this banner will look when it's printed:";
	output = TheBanner;
	viewAttributes = sameColorAsParentWin, viewSizeFollowsContentSize;
	horizAttributes = default +scrollable;
	horizIncrement = 200;
	hints = {
	    HINT_PLACE_MONIKER_ABOVE
	}
}

TheBanner = Banner {
	view = BannerView;
	contentAttrs = sameWidthAsSubview, sameHeightAsSubview; 
}	

end Interface;


start	Menus;

/*-----------------------------------------------------------------------------
			Edit Menu
-----------------------------------------------------------------------------*/
EditMenu = GenEditControl {
	genStates = default + enabled;
	moniker = 'E', "Edit";
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask GECF_SELECT_ALL or mask GECF_CLIP_ART or mask GECF_UNDO
		}
	}
	visibility = popup;
	output = BannerTextEdit;
}

/*-----------------------------------------------------------------------------
			Font Menu
-----------------------------------------------------------------------------*/
FontsMenu = FontControl {
	genStates = default + enabled;
	moniker = 'n', "Fonts";
	visibility = popup;
	output = TheBanner;
}

/*-----------------------------------------------------------------------------
		Styles menu
-----------------------------------------------------------------------------*/
StylesMenu = TextStyleControl {
	genStates = default + enabled;
	visibility = popup;
	moniker = 'S', "Styles";
	output = TheBanner;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			TSCFeatures <0,0,0,0,1,1,1,1,1,1,1,1>
		}
	}
}


SeperateDoubleHeight = GenInteraction {
	visibility = subGroup;
	children = DoubleHeightList;
}

DoubleHeightList = GenItemGroup {
	behaviorType = nonExclusive;
	children = DoubleHeightEntry;
	applyMsg = MSG_BANNER_SET_SPECIAL_EFFECT;
	destination = TheBanner;
}

DoubleHeightEntry = GenItem ignoreDirty {
	moniker = 'H', "Double Height";
	kbdAccelerator = control 'h';
	identifier = "mask SE_DOUBLE_HEIGHT";
}

/*-----------------------------------------------------------------------------
		EffectsMenu
-----------------------------------------------------------------------------*/

EffectsMenu = GenInteraction {
	visibility = popup;
	moniker = 's', "Effects";
	children = ExclusiveSpecialEffectsList;
}

ExclusiveSpecialEffectsList = GenItemGroup {
	behaviorType = exclusive;
	numSelections = 1;
	selection = "SE_NO_EFFECT";
	children =
		NoEffectEntry,
		SmallShadowEntry,
		LargeShadowEntry,
		FogEntry,
		ThreeDEntry;
	applyMsg = MSG_BANNER_SET_SPECIAL_EFFECT;
	destination = TheBanner;
}

NoEffectEntry = GenItem ignoreDirty {
	moniker = 'N', "No Effect";
	identifier = "SE_NO_EFFECT";
}

SmallShadowEntry = GenItem ignoreDirty {
	moniker = 'S', "Small Shadow";
	identifier = "mask SE_SMALL_SHADOW";
}

LargeShadowEntry = GenItem ignoreDirty {
	moniker = 'L', "Large Shadow";
	identifier = "mask SE_LARGE_SHADOW";
}

FogEntry = GenItem ignoreDirty {
	moniker = 'F', "Fog";
	identifier = "mask SE_FOG";
}

ThreeDEntry = GenItem ignoreDirty {
	moniker = '3', "3D Effect";
	identifier = "mask SE_THREE_D";
}

/*-----------------------------------------------------------------------------
		BordersMenu
-----------------------------------------------------------------------------*/

BordersMenu = GenInteraction {
	visibility = popup;
	moniker = 'B', "Borders";
	children = ExclusiveBoxList;
}

ExclusiveBoxList = GenItemGroup {
	behaviorType = exclusive;
	numSelections = 1;
	selection = "SE_NO_BORDER";
	children =
		NoBorderEntry,
		ThinBoxEntry,
		ThickBoxEntry,
		DoubleBoxEntry;
	applyMsg = MSG_BANNER_SET_SPECIAL_EFFECT;
	destination = TheBanner;
	hints = {
	    HINT_ORIENT_CHILDREN_VERTICALLY
	}
}

NoBorderEntry = GenItem ignoreDirty {
	moniker = 'N', "No Border";
	identifier = "SE_NO_BORDER";
}

ThinBoxEntry = GenItem ignoreDirty {
	moniker = 'T', "Thin Border";
	identifier = "mask SE_THIN_BOX";
}

ThickBoxEntry = GenItem ignoreDirty {
	moniker = 'W', "Wide Border";
	identifier = "mask SE_THICK_BOX";
}

DoubleBoxEntry = GenItem ignoreDirty {
	moniker = 'D',"Double Border";
	identifier = "mask SE_DOUBLE_BOX";
}


/*-----------------------------------------------------------------------------
		TextColorMenu
-----------------------------------------------------------------------------*/
TextColorTrigger = GenTrigger {
   	moniker = 'C', "Color";
	children = WriteCharFGColorControl;
	action = MSG_GEN_INTERACTION_INITIATE, WriteCharFGColorControl;
	hints = {
		HINT_SEEK_MENU_BAR
		/* Can't include this as it will crash SPUI */
		/* HINT_TRIGGER_BRINGS_UP_WINDOW */
	}
}

WriteCharFGColorControl = CharFGColorControl {
	moniker = "Color";
	type = properties;
	visibility = dialog;
	output = BannerTextEdit;
	hints = {
		HINT_INTERACTION_SINGLE_USAGE,
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask CSF_PATTERN or mask CSF_DRAW_MASK \
			                         or mask CSF_OTHER
		}
	}
}

end	Menus;

start PrintUI;

/*-----------------------------------------------------------------------------
			BannerPrintControl
-----------------------------------------------------------------------------*/

FileMenu = GenInteraction {
	children = BannerPrintControl, BannerExit;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_FILE_MENU
		}
	}
}

BannerExit = GenTrigger {
    action = MSG_GEN_DISPLAY_CLOSE, BannerPrimaryObj;
    hints = {
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
	    InteractionCommand IC_EXIT
	}
    }
}

BannerPrintControl = PrintControl vardataReloc {
	genStates = default + enabled;
	visibility = subGroup;
	printOutput = TheBanner;
	docNameOutput = TheBanner;
	printAttributes =
		verifyPrint,
		showProgress,
		progressByPage,
		forceRotatedOutput,
		usesDialogBox,
		graphicsOutput,
		defaultQuality low;
	hints = {
		HINT_SAME_CATEGORY_AS_PARENT,
		ATTR_GEN_CONTROL_DO_NOT_USE_LIBRARY_NAME_FOR_HELP
	}
}

end PrintUI;
