/* ****************************
Copyright 1995 Clemens Kochinke d/b/a FuzzyLogicTM
PROJECT:        Web Editor Jupiter 2Web version 1
CONTENT:        This file contains the bottom buttons and db's
                that will be attached dynamically via
                MSG_GEN_OPEN_APPLICATION
STATUS:         Works fine.
DATE:           November 13, 1995
                Completed 12/29/1995
                SpeedTag new 2/24/1997
 * *****************************/
/*     **************************
 *                 Headers
 **********************************/
    @include "app.goh"    /* Includes classes and constants. */
    @include "global.goh" /* Must be after app.goh.
                           * Includes globals, objects, prototypes. */
#include <heap.h>
@include <bstrings.goh>

@extern method HTMDocumentClass, MSG_SPEED_TAG
{
char /* *tagBufPtr,*/ *tagFront, *tagEnd;
  optr ourText;
  optr textOD;
  @callsuper();
  pself = ObjDerefGen( oself );
  if ( pself->HTMDI_textHandle == NullHandle ){
        }
else    {
    ourText = /*GeodeGetOptrNS(*/ @HTMText/* )*/;
    textOD = ConstructOptr( pself->HTMDI_textHandle,
                             OptrToChunk( ourText ) );
(void) MemLock(OptrToHandle(@SPt0));  /* void from GeoFile / layout */
 switch (whichTag)
        {
        case 0:
/*
tagBufPtr = LMemDeref(@SPt0);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
tagFront = LMemDeref(@SPt0);
tagEnd = LMemDeref(@SPt0a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 1:
/*
tagBufPtr = LMemDeref(@SPt1);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
tagFront = LMemDeref(@SPt1);
tagEnd = LMemDeref(@SPt1a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 2:
/*
tagBufPtr = LMemDeref(@SPt2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
tagFront = LMemDeref(@SPt2);
tagEnd = LMemDeref(@SPt2a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 3:
/*
tagBufPtr = LMemDeref(@SPt3);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
tagFront = LMemDeref(@SPt3);
tagEnd = LMemDeref(@SPt3a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 4:
/*
tagBufPtr = LMemDeref(@SPt4);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
tagFront = LMemDeref(@SPt4);
tagEnd = LMemDeref(@SPt4a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 5:
/*
tagBufPtr = LMemDeref(@SPt5);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
tagFront = LMemDeref(@SPt5);
tagEnd = LMemDeref(@SPt5a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        }
MemUnlock(OptrToHandle(@SPt0));
        }
@call textOD::MSG_META_TEXT_USER_MODIFIED(textOD); /* works */
}

