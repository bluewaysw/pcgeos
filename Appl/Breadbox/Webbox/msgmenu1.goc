/* ***************************
 * Copyright (C) 1995 Clemens Kochinke d/b/a FuzzyLogicTM
 * Portions:
 * Portions Copyright (c) Geoworks 1992 -- All Rights Reserved
 * PROJECT:  Jupiter 2Web Editor
 * MODULE:   Methods for Document Class
 * FILE:     msgmenu.goc
 * AUTHORS:  Lawrence Hosken: Sep 21, 1992
 *           Clemens Kochinke: December 29, 1995
 * REVISION HISTORY:
 *      Name   Date      Description
 *      ----   ----      -----------
 *      CK     12/29/95  Completion
 *      CK      1/1/96  Separate button from menu functions
 *      CK      2/9/96   Chunk Strings separated out
 * DESCRIPTION:
 *      These are the function definitions and method definitions
 *      for the document object - only menu functions
***********************************/
/* INDEX:
@extern method HTMDocumentClass, MSG_TAG_ONE
                ASCII Chars (1-110), Forms (11-33)
@extern method HTMDocumentClass, MSG_TAG_TWO
                Used for Tables, Miscellaneous, Frames (1-11), Java (12)
*/
/*     **************************
 *                 Headers
 **********************************/
    @include "app.goh"    /* Includes classes and constants. */
    @include "global.goh" /* Must be after app.goh.
                           * Includes globals, objects, prototypes. */
#include <heap.h>
@include <men1str.goh>
/**************************/
@extern method HTMDocumentClass, MSG_TAG_ONE /*MENU_TRIGGER_CASE*/
{
char * tagBufPtr, *tagFront, *tagEnd;
  optr ourText;
  optr textOD;
  @callsuper();
  pself = ObjDerefGen( oself );
  if ( pself->HTMDI_textHandle == NullHandle ){
        }
else    {
    ourText = /*GeodeGetOptrNS(*/ @HTMText/* )*/;
    textOD = ConstructOptr( pself->HTMDI_textHandle,
                             OptrToChunk( ourText ) );
(void) MemLock(OptrToHandle(@M1Tag1));  /* void from GeoFile / layout */
 switch (whichTag)
        {
/* ASCII chars = ANSI */
        case 1:
tagBufPtr = LMemDeref(@M1Tag1);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 2:
tagBufPtr = LMemDeref(@M1Tag2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 3:
tagBufPtr = LMemDeref(@M1Tag3);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 4:
tagBufPtr = LMemDeref(@M1Tag4);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 5:
tagBufPtr = LMemDeref(@M1Tag5);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 6:
tagBufPtr = LMemDeref(@M1Tag6);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
/*@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/        break;
        case 7:
tagBufPtr = LMemDeref(@M1Tag7);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 8:
tagBufPtr = LMemDeref(@M1Tag8);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 9:
tagBufPtr = LMemDeref(@M1Tag9);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 10:
tagBufPtr = LMemDeref(@M1Tag10);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break; 
/* ae, oe, ue, dann Ae Oe Ue sz: */
        case 101:
tagBufPtr = LMemDeref(@M1Tag101);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 102:
tagBufPtr = LMemDeref(@M1Tag102);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 103:
tagBufPtr = LMemDeref(@M1Tag103);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 104:
tagBufPtr = LMemDeref(@M1Tag104);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 105:
tagBufPtr = LMemDeref(@M1Tag105);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 106:
tagBufPtr = LMemDeref(@M1Tag106);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 107:
tagBufPtr = LMemDeref(@M1Tag107);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 108:
tagBufPtr = LMemDeref(@M1Tag108);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 109:
tagBufPtr = LMemDeref(@M1Tag109);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 110:
tagBufPtr = LMemDeref(@M1Tag110);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 111:
tagBufPtr = LMemDeref(@M1Tag111);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 112:
tagBufPtr = LMemDeref(@M1Tag112);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 113:
	    tagBufPtr = LMemDeref(@M1Tag113);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 114:
	    tagBufPtr = LMemDeref(@M1Tag114);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
/* science */
        case 1001:
	    tagBufPtr = LMemDeref(@M1Tag1001);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1002:
	    tagBufPtr = LMemDeref(@M1Tag1002);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1003:
	    tagBufPtr = LMemDeref(@M1Tag1003);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1004:
	    tagBufPtr = LMemDeref(@M1Tag1004);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1005:
	    tagBufPtr = LMemDeref(@M1Tag1005);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1006:
	    tagBufPtr = LMemDeref(@M1Tag1006);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1007:
	    tagBufPtr = LMemDeref(@M1Tag1007);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1008:
	    tagBufPtr = LMemDeref(@M1Tag1008);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1009:
	    tagBufPtr = LMemDeref(@M1Tag1009);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1010:
	    tagBufPtr = LMemDeref(@M1Tag1010);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1011:
	    tagBufPtr = LMemDeref(@M1Tag1011);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 1012:
	    tagBufPtr = LMemDeref(@M1Tag1012);
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
/* end of ASCII */

        case 11:
/*
tagBufPtr = LMemDeref(@M1Tag11);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag11);
   tagEnd = LMemDeref(@M1Tag11a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 12:
/*
tagBufPtr = LMemDeref(@M1Tag12);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag12);
   tagEnd = LMemDeref(@M1Tag11a);
InsertTags(textOD, tagFront, tagEnd);
        break;

        case 120:
/*
tagBufPtr = LMemDeref(@M1Tag120);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag120);
   tagEnd = LMemDeref(@M1Tag11a);
InsertTags(textOD, tagFront, tagEnd);
        break;

        case 13:
tagBufPtr = LMemDeref(@M1Tag13);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;

        case 14:
tagBufPtr = LMemDeref(@M1Tag14);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;

        case 15:
tagBufPtr = LMemDeref(@M1Tag15);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 16:
tagBufPtr = LMemDeref(@M1Tag16);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 17:
tagBufPtr = LMemDeref(@M1Tag17);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 18:
tagBufPtr = LMemDeref(@M1Tag18);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 19:
tagBufPtr = LMemDeref(@M1Tag19);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 20:
tagBufPtr = LMemDeref(@M1Tag20);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 21:
tagBufPtr = LMemDeref(@M1Tag21);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 22:
tagBufPtr = LMemDeref(@M1Tag22);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 23:
/*
tagBufPtr = LMemDeref(@M1Tag23);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag23);
   tagEnd = LMemDeref(@M1Tag23a);
InsertTags(textOD, tagFront, tagEnd);
        break;

        case 24:
/*
tagBufPtr = LMemDeref(@M1Tag24);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag24);
   tagEnd = LMemDeref(@M1Tag23a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 25:
/*
tagBufPtr = LMemDeref(@M1Tag25);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag25);
   tagEnd = LMemDeref(@M1Tag23a);
InsertTags(textOD, tagFront, tagEnd);
        break;

        case 26:
tagBufPtr = LMemDeref(@M1Tag26);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 27:
tagBufPtr = LMemDeref(@M1Tag27);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;

        case 28:
tagBufPtr = LMemDeref(@M1Tag28);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
        break;
        case 29:
/*
tagBufPtr = LMemDeref(@M1Tag29);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag29);
   tagEnd = LMemDeref(@M1Tag29a);
InsertTags(textOD, tagFront, tagEnd);
        break;

        case 30:
/*
tagBufPtr = LMemDeref(@M1Tag30);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag30);
   tagEnd = LMemDeref(@M1Tag29a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 31:
/*
tagBufPtr = LMemDeref(@M1Tag31);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag31);
   tagEnd = LMemDeref(@M1Tag29a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 32:
/*
tagBufPtr = LMemDeref(@M1Tag32);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag32);
   tagEnd = LMemDeref(@M1Tag29a);
InsertTags(textOD, tagFront, tagEnd);
        break;
        case 33:
/*
tagBufPtr = LMemDeref(@M1Tag33);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
*/
   tagFront = LMemDeref(@M1Tag33);
   tagEnd = LMemDeref(@M1Tag29a);
InsertTags(textOD, tagFront, tagEnd);
	break;
        default:
	    @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("*invalid whichTag value*",0);
        }
MemUnlock(OptrToHandle(@M1Tag1));
/* MemFree(OptrToHandle(@M1Tag1)); causes crash on 2nd use of menu */
        }
/* ObjMarkDirty(textOD); Makes no difference, doesn't activate save button,
                        still lets user close app without saving */
@call textOD::MSG_META_TEXT_USER_MODIFIED(textOD); /* works */
/* not good, no effect:
@call textOD::MSG_VIS_TEXT_SET_USER_MODIFIED();  */
}

