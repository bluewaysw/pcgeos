/************************
 * Copyright (C) 1995 Clemens Kochinke d/b/a FuzzyLogicTM
 * Portions:
 * Portions Copyright (c) Geoworks 1992 -- All Rights Reserved
 * PROJECT:  Jupiter 2Web Editor
 * MODULE:   Methods for Document Class
 * FILE:     msgbutton.goc
 * AUTHORS:  Lawrence Hosken: Sep 21, 1992
 *           Clemens Kochinke: December 29, 1995
 * REVISION HISTORY:
 *      Name   Date      Description
 *      ----   ----      -----------
 *      CK     12/29/95  Completion
 *      CK      1/26/96  Tag1 string is chunk in TStrings.goc
 *      CK      2/13/97  Method for Java dialog box
 * DESCRIPTION:
 *      These are the function definitions and method definitions
 *      for the document object - only button functions and Java box
***********************************/
/***************************
 *                 Headers
 **********************************/
    @include "app.goh"    /* Includes classes and constants. */
    @include "global.goh" /* Must be after app.goh.
                           * Includes globals, objects, prototypes. */
#include <heap.h>
/***NEW***********************/
    @include <bstrings.goh>   /* @chunk string declarations */
    @include <men2str.goh>   /* @chunk string declarations */
/*************************************************/
/* From InsertTags :
@call textOD::MSG_VIS_TEXT_GET_SELECTION_RANGE(&vtr);
@call textOD::MSG_META_SUSPEND();
      / * (1)  after tag * /
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end, vtr.VTR_end);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagEnd,0);
      / * (2)  before tag * /
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_start, vtr.VTR_start);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagFront,0);
      / * (3)  Reinsert old range, compensating for insertion * /
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end+strlen(tagFront),
        vtr.VTR_start+strlen(tagFront));
@call textOD::MSG_META_UNSUSPEND();
/ *      Remove highlight of marked text and
        place cursor at end of highlighted segment.
        It goes to end because cursor usually goes to end with
        any new text entry; placing it at the beginning was
        confusing!  * /
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end+strlen(tagEnd)+strlen(tagFront),
        vtr.VTR_end+strlen(tagEnd)+strlen(tagFront));
*/

@extern method HTMDocumentClass, MSG_FL_JAVA
{
//char            buffer[256];
char            seltext[256];
VisTextRange    vtr;
/* dword           selectStart, selectEnd, textSize;
  */
char            * tagBufPtr;
optr            ourText;
optr            textOD, textEntry;

word jarg;    /* Java applet alignment argument from GenItemGroup */

  @callsuper();
  pself = ObjDerefGen( oself );
  if ( pself->HTMDI_textHandle != NullHandle )  {
    ourText = /*GeodeGetOptrNS( */@HTMText/* )*/;
    textOD = ConstructOptr( pself->HTMDI_textHandle,
                             OptrToChunk( ourText ) );

(void)  MemLock(OptrToHandle(@J1start));

/* 1) Get range, enter beginning of <APPLET and CODE=> tags */
@call textOD::MSG_VIS_TEXT_GET_SELECTION_RANGE(&vtr);
@call textOD::MSG_META_SUSPEND();

@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end, vtr.VTR_end);
/* 9) add /APPLET tag */
tagBufPtr = LMemDeref(@J1end2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_start, vtr.VTR_start);
tagBufPtr = LMemDeref(@J1start);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

/* 2) Get text for <CODE=> tag from first text object in dialog
      box and insert it */
textEntry=/*GeodeGetOptrNS(*/@JText1/*)*/;
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();
/*&seltext="";LValue required*/

/* 3) Close tag parameter with ", get next tag <PARAM NAME=>; then get text
      from next text objects in dialog box and insert them */
tagBufPtr = LMemDeref(@J2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
textEntry=/*GeodeGetOptrNS(*/@JText2/*)*/;
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();
/**seltext = "";Error pointer conversion */

/* 4) Same with tag <CODEBASE=> */
tagBufPtr = LMemDeref(@J3);
textEntry=/*GeodeGetOptrNS(*/@JText3/*)*/;
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();

/* 5) Same with tag <NAME=> */
tagBufPtr = LMemDeref(@J4);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
textEntry=/*GeodeGetOptrNS(*/@JText4/*)*/;
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();

/* 6) Same with tag <ALT=> */
tagBufPtr = LMemDeref(@J5);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
textEntry=/*GeodeGetOptrNS(*/@JText5/*)*/;
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();

/* 7) Alignment */
tagBufPtr = LMemDeref(@J6);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

/*(void)  MemLock(OptrToHandle(@M4Tag37));*/ /* other resource, let's open it */

 jarg = @call /*GeodeGetOptrNS(@*/JAligns/*)*/::MSG_GEN_ITEM_GROUP_GET_SELECTION();
if (jarg != (GIGS_NONE)){
        if (jarg==37)     tagBufPtr = LMemDeref(@JL);
        else if (jarg==38)     tagBufPtr = LMemDeref(@JC);
        else              tagBufPtr = LMemDeref(@JR);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
/*  MemUnlock( OptrToHandle( @M4Tag37 ) );*/
                        }

/* 8) Close <APPLET> tag.  */
tagBufPtr = LMemDeref(@J1end1);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end+strlen(tagBufPtr),
        vtr.VTR_start+strlen(tagBufPtr));
@call textOD::MSG_META_UNSUSPEND();
/* The cursor will end up somewhere in the middle, not perfect
   but about right because the user has to change a few things anyway */
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end+strlen(tagBufPtr)+strlen(tagBufPtr),
        vtr.VTR_end+strlen(tagBufPtr)+strlen(tagBufPtr));

  MemUnlock( OptrToHandle( @J1start ) );
  /* That's all, folks ! */

@call textOD::MSG_META_TEXT_USER_MODIFIED(textOD);
   }
}

/*********** OBLETS *****************/
@extern method HTMDocumentClass, MSG_FL_OBLET
{
//char            buffer[256];
char            seltext[256];
char            * tagBufPtr;
optr            ourText;
optr            textOD, textEntry;
VisTextRange    vtr;
word oarg;    /* Oblet alignment argument from GenItemGroup */

  @callsuper();
  pself = ObjDerefGen( oself );
  if ( pself->HTMDI_textHandle != NullHandle )  {
    ourText = /*GeodeGetOptrNS( */@HTMText /*)*/;
    textOD = ConstructOptr( pself->HTMDI_textHandle,
                             OptrToChunk( ourText ) );

(void)  MemLock(OptrToHandle(@O1start));


@call textOD::MSG_VIS_TEXT_GET_SELECTION_RANGE(&vtr);
@call textOD::MSG_META_SUSPEND();

@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end, vtr.VTR_end);

/* 6) Add </OBJECT> tag. */
tagBufPtr = LMemDeref(@O1end2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

/* 1) Enter beginning of <APPLET and CLASSID=> tags */
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_start, vtr.VTR_start);
tagBufPtr = LMemDeref(@O1start);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

/* 2) Get text for <CLASSID=> tag from first text object in dialog
      box and insert it */
textEntry=/*GeodeGetOptrNS(*/@OText1/*)*/;
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();

/* 3) Close tag parameter with ", get next tag <CODETYPE=>; then get text
      from next text objects in dialog box and insert them */
tagBufPtr = LMemDeref(@O2);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
textEntry=/*GeodeGetOptrNS(*/@OText2/*)*/;
@call textEntry::MSG_VIS_TEXT_GET_ALL_PTR(seltext);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(seltext, strlen(seltext)) ;
@call textEntry::MSG_VIS_TEXT_DELETE_ALL();

/* 4) Alignment */
tagBufPtr = LMemDeref(@J6);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);

 oarg = @call /*GeodeGetOptrNS(@*/OAligns/*)*/::MSG_GEN_ITEM_GROUP_GET_SELECTION();
if (oarg != (GIGS_NONE)){
        if (oarg==37)     tagBufPtr = LMemDeref(@JL);
        else if (oarg==38)     tagBufPtr = LMemDeref(@JC);
        else              tagBufPtr = LMemDeref(@JR);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);
                        }
/* 5) Close <OBJECT> tag. */
tagBufPtr = LMemDeref(@O1end1);
@call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(tagBufPtr,0);


@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end+strlen(tagBufPtr),
        vtr.VTR_start+strlen(tagBufPtr));
@call textOD::MSG_META_UNSUSPEND();
/* The cursor will end up somewhere in the middle, not perfect
   but about right because the user has to change a few things anyway */
@call textOD::MSG_VIS_TEXT_SELECT_RANGE(vtr.VTR_end+strlen(tagBufPtr)+strlen(tagBufPtr),
        vtr.VTR_end+strlen(tagBufPtr)+strlen(tagBufPtr));


  MemUnlock( OptrToHandle( @O1start ) );

@call textOD::MSG_META_TEXT_USER_MODIFIED(textOD);
   }
}


/* INDEX:
@extern method HTMDocumentClass, MSG_BUTTON_CASE
                Used for speed buttons, tag clusters
Nathan's suggestion:
  MemLock( OptrToHandle( @buffer ) );
  bufferPtr = LMemDeref( @buffer );
  @call PSCTopTextObj::MSG_VIS_TEXT_REPLACE_ALL_PTR( bufferPtr, 0 );
  MemUnlock( OptrToHandle( @buffer ) );
*/

/*************************************************/

@extern method HTMDocumentClass, MSG_BUTTON_CASE
{
char * bufferPtr;
  optr ourText;
  optr textOD;
  @callsuper();
  pself = ObjDerefGen( oself );
  if ( pself->HTMDI_textHandle == NullHandle ){
        }
else    {
    ourText = /*GeodeGetOptrNS( */@HTMText/* )*/;
    textOD = ConstructOptr( pself->HTMDI_textHandle,
                             OptrToChunk( ourText ) );

        MemLock  (OptrToHandle(@Tag1));

 switch (whichTag)
        {
case 1:
/* FAST HTML DOC */
/*
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("<HTML>\r<!--Begin Jupiter 2Web for GEOS-->\r\r\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<HEAD>\r<TITLE> Type title here </TITLE>\r\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("</HEAD>\r<BODY>\rType or paste text here\r\r</BODY>\r\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("<!--End Jupiter 2Web for GEOS-->\r\r</HTML>\0", 0);
*/

/**************************/
/* Use @chunk string as per GWBallot, Benoit, Magic and Illini1970 */
/*      MemLock  (OptrToHandle(@Tag1));
        @call ::MSG_VIS_TEXT_REPLACE_SELECTION_OPTR(@Tag1, 0);
        MemUnlock(OptrToHandle(@Tag1));
*/

/*  MemLock( OptrToHandle( @Tag1 ) );*/
  bufferPtr = LMemDeref( @Tag1 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
/*  MemUnlock( OptrToHandle( @Tag1 ) );*/

/**************************/
    break;

case 2:
/* Ray's Table */
/*@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<TABLE BORDER>\r<CAPTION>Table Caption goes here</CAPTION>\r<TR>\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<TD>Insert Header for Column 1</TD>\r<TD>Insert Header for Column 2\0",0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("</TD>\r<TD>Insert Header for Column 3</TD>\r<TD>Insert Header for Column 4</TD>\r</TR>\r\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("<TR><TD>Insert Data for Row 2, Column 1</TD>\r<TD>Insert Data for Row 2, Column 2</TD>\r<TD>Insert Data for Row 2, Column 3</TD>\r<TD>Insert Data for Row 2, Column 4</TD>\r</TR>\r\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("<TR><TD>Insert Data for Row 3, Column 1</TD>\r<TD>Insert Data for Row 3, Column 2</TD>\r<TD>Insert Data for Row 3, Column 3</TD>\r<TD>Insert Data for Row 3, Column 4</TD>\r</TR>\r</TABLE>\r\0", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--GWRep Ray\'s Table-->\r",0);
*/
  bufferPtr = LMemDeref( @Tag2 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 3:
/* Quick Form, Questions and Answers */
/*
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<FORM>\r<H2><Short Response></H2>\r<INPUT TYPE=\"text\" ", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("NAME=\"Answer\" SIZE=\"35\" MAXLENGTH=\"65\" VALUE=\"??\">\r", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r\r<H2>Long Response</H2>\r<TEXTAREA COLS=\"50\" ROWS=\"10\" ", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("NAME=\"Details\">\r</TEXTAREA>\r\r<H2>Other Form Tags:</H2>\r", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("<INPUT> <SELECT> <OPTION>\r</FORM>\r", 0);
*/
  bufferPtr = LMemDeref( @Tag3 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 4:
/* Quick Caps, Centered Titles */
/*
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--Font size changes enhance caps on centered text \"Explore This Page Now\"-->\r<CENTER>",0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<H2>\r<FONT SIZE = +5>E</FONT>xplore<FONT SIZE = +4>T</FONT>his\r</H2>\r<H1>",0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<FONT SIZE = -2>P</FONT>age<FONT SIZE = -3>N</FONT>ow!\r</H1>\r</CENTER>\r",0);
*/
  bufferPtr = LMemDeref( @Tag4 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 5:
/* Body Colors */
/*
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--Place after the initial BODY tag-->\r<BODY BGCOLOR=\"#000000\" LINK=\"#FFFF00\"", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(" VLINK=\"#22AA22\" ALINK=\"0077FF\ TEXT=\"#F0F0F0\">\r<!--This would give you", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(" a black background, yellow anchors that flash blue-green ", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("when activated, pale-green after having been visited, and light-grey text.-->\r", 0);
*/
  bufferPtr = LMemDeref( @Tag5 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

 case 6:
/* GIF & Text */
/* @send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--Pictures and Text: Side-by-Side-->\r<!--This template allows you to have a specific graphic\r", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("on the left side of your text. The \"alt=\" indicates \rthe name of the graphic that would show up if \r", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("folks have their graphics turned off.-->\r\r<IMG ALIGN=LEFT HSPACE=18 VSPACE=0 SRC=\"your.gif\" ALT=\"any name\">\r", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("<H2> Type your text here to go to the left of your graphic. </H2>\r", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!-- The \"HSPACE\" \"VSPACE\" are additional tags to position your\rgraphic after it is at the left side.", 0);
@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR(" You can also easily use\r\"ALIGN=RIGHT\". The \"H2\" tag sets the size of the type. -->", 0);
*/
  bufferPtr = LMemDeref( @Tag6 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 7:
/*@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--File Link-->\r<A HREF=\"file:/c:/jupiter/2web.htm\"> Linked text goes here. </A>\r", 0);
*/
  bufferPtr = LMemDeref( @Tag7 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 8:
/*@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--Mail Link-->\r<A HREF=\"mailto:orderinfo@aol.com\"> Linked text goes here. </A>\r", 0);
*/
  bufferPtr = LMemDeref( @Tag8 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 9:
/*@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--Page Link-->\r<A NAME=\"2Web Home Page\">\r", 0);
*/
  bufferPtr = LMemDeref( @Tag9 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

case 10:
/*@send textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR("\r<!--Picture Link-->\r<IMG SRC=\"C:/jupiter/2web/2webview.gif\">\r", 0);
*/
  bufferPtr = LMemDeref( @Tag10 );
  @call textOD::MSG_VIS_TEXT_REPLACE_SELECTION_PTR( bufferPtr, 0 );
    break;

        }
  MemUnlock( OptrToHandle( @Tag1 ) );
        }
/* ObjMarkDirty(textOD); Makes no difference, doesn't activate save button,
                        still lets user close app without saving */
@call textOD::MSG_META_TEXT_USER_MODIFIED(textOD);
 }


