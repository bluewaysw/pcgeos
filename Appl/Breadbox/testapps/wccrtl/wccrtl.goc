/********************************************************************
 *
 * Test-Application for Watcom RTL functions in AnsiC-Library.
 *
 *******************************************************************/

@include <stdapp.goh>
#include "wcc_test_function.h"

@class WatcomRTLProcessClass, GenProcessClass;
@endc;


@classdecl WatcomRTLProcessClass, neverSaved;


@start AppResource;

@object GenApplicationClass WatcomRTLApp = {

    GI_visMoniker = list { @WatcomRTLMoniker };
    GI_comp = @WatcomRTLPrimary;
    gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS ) = @WatcomRTLPrimary;
}

@visMoniker WatcomRTLMoniker = "Watcom RTL Test";

@end AppResource;


@start Interface;

@object GenPrimaryClass WatcomRTLPrimary = {
    
    GI_comp = @WatcomRTLResultGlyph__U4M,
                @WatcomRTLResultGlyph__I4M,
                @WatcomRTLResultGlyph__U4D,
                @WatcomRTLResultGlyph__I4D,
                @WatcomRTLResultGlyph__CHP;
}

@object GenGlyphClass WatcomRTLResultGlyph__U4M = {
    
    GI_visMoniker = "function __U4M untested.";
}

@object GenGlyphClass WatcomRTLResultGlyph__I4M = {
    
    GI_visMoniker = "function __I4M untested.";
}

@object GenGlyphClass WatcomRTLResultGlyph__U4D = {
    
    GI_visMoniker = "function __U4D untested.";
}

@object GenGlyphClass WatcomRTLResultGlyph__I4D = {
    
    GI_visMoniker = "function __I4D untested.";
}

@object GenGlyphClass WatcomRTLResultGlyph__CHP = {
    
    GI_visMoniker = "function __CHP untested.";
}

@end Interface;


@method WatcomRTLProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION {
    
    @callsuper();
    
    if( test_function__U4M() )
        @call WatcomRTLResultGlyph__U4M::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __U4M ok.", VUM_DELAYED_VIA_UI_QUEUE);
    else
        @call WatcomRTLResultGlyph__U4M::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __U4M nok!", VUM_DELAYED_VIA_UI_QUEUE);
        
    if( test_function__I4M() )
        @call WatcomRTLResultGlyph__I4M::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __I4M ok.", VUM_DELAYED_VIA_UI_QUEUE);
    else
        @call WatcomRTLResultGlyph__I4M::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __I4M nok!", VUM_DELAYED_VIA_UI_QUEUE);
        
    if( test_function__U4D() )
        @call WatcomRTLResultGlyph__U4D::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __U4D ok.", VUM_DELAYED_VIA_UI_QUEUE);
    else
        @call WatcomRTLResultGlyph__U4D::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __U4D nok!", VUM_DELAYED_VIA_UI_QUEUE);
        
    if( test_function__I4D() )
        @call WatcomRTLResultGlyph__I4D::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __I4D ok.", VUM_DELAYED_VIA_UI_QUEUE);
    else
        @call WatcomRTLResultGlyph__I4D::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __I4D nok!", VUM_DELAYED_VIA_UI_QUEUE);
        
    if( test_function__CHP() )
        @call WatcomRTLResultGlyph__CHP::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __CHP ok.", VUM_DELAYED_VIA_UI_QUEUE);
    else
        @call WatcomRTLResultGlyph__CHP::MSG_GEN_REPLACE_VIS_MONIKER_TEXT( "function __CHP nok!", VUM_DELAYED_VIA_UI_QUEUE);
}



