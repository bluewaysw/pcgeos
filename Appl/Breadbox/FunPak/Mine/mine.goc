/***************************************************************************
 *                                                                         *
 *  MINE                                                                   *
 *                                                                         *
 ***************************************************************************/


/***************************************************************************
 *		Include files
 ***************************************************************************/

@include <stdapp.goh>
@include <Objects/gViewCC.goh>
@include <gstring.h>
@include <spool.goh>
@include <Objects/clipbrd.goh>
@include <initfile.h>
@include "mine.goh"
@include <Ansi/stdio.h>

@define NEWDEAL_COMPANY
/*
@define BREADBOX_COMPUTER_COMPANY
@define _YAGO
*/

MemHandle mine_field_handle = NullHandle ;
word game_mode ;
byte fun_mode             = 0 ;
word size_x               = INITIAL_SIZE ;
word size_y               = INITIAL_SIZE ;
byte time_sec             = 0 ;
byte time_min             = 0 ;
byte time_hour            = 0 ;
word timer_id ;
word timer_handle ;
word num_mines            = 0 ;
word num_squares_left     = 0 ;
word num_flags            = 0 ;
word player_score         = 1 ;
Boolean timer_going       = FALSE ;
byte density              = MINE_LOW_DENSITY ;
char  pname[14]           = "Mine Document" ;
Boolean growBoolean       = TRUE ;
Boolean timedBoolean      = TRUE ;
Boolean flaggingBoolean   = TRUE ;
Boolean areaClearBoolean  = TRUE ;
high_score high_scores[10] ;
word num_high_scores      = 0 ;
char mine_state_file[25] = "Mine Field High Scores" ;

@ifdef _YAGO
char mine_path[20] = "GameData" ;             /* Sub directory for games */
char mine_relativePath[] = "F:\\GEOWORKS" ;   /* Absolute path */
word mine_drive = 0 ;                         /* Absolute drive */
@endif

@ifdef BREADBOX_COMPUTER_COMPANY
char mine_path[20] = "Quintessence!" ;
char mine_relativePath[] = "." ;
word mine_drive = SP_PUBLIC_DATA ;
@endif

@ifdef NEWDEAL_COMPANY
char mine_path[20] = "Game" ;
char mine_relativePath[] = "." ;
word mine_drive = SP_PUBLIC_DATA ;
@endif

char BombPicture[] = {
		Bitmap (14,14,BMC_UNCOMPACTED,(BMT_MASK|BMF_4BIT)),
		0x0e, 0x00, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff,
		0xff,
		0x31, 0x00, 0xff, 0xe0, 0xff, 0xf0, 0xff, 0xff,
		0xff,
		0x70, 0x80, 0xfe, 0xce, 0xff, 0xff, 0x0f, 0xff,
		0xff,
		0xf9, 0xc0, 0xec, 0x4c, 0xef, 0xf0, 0x00, 0xff,
		0xff,
		0x77, 0xf0, 0xfe, 0xce, 0xf0, 0x07, 0x00, 0x00,
		0xff,
		0x2f, 0xf8, 0xff, 0xef, 0x07, 0x70, 0x00, 0x00,
		0x0f,
		0x0f, 0xf8, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00,
		0x0f,
		0x1f, 0xfc, 0xff, 0xf0, 0x70, 0x00, 0x00, 0x00,
		0x00,
		0x1f, 0xfc, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x1f, 0xfc, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
		0x00,
		0x0f, 0xf8, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 
		0x0f, 0xf8, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x0f,
		0x07, 0xf0, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00,
		0xff,
		0x01, 0xc0, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff,
		0xff
} ;

#define SQUARE_SIZE           16
#define TEXT_SIZE             (SQUARE_SIZE-2)

#define MINE_FIELD_COVER_BIT  0x80
#define MINE_FIELD_MARK_BIT   0x40
#define MINE_FIELD_HASH_BIT   0x20

#define quick_mine_field(posx, posy)  ((posx)+((posy)*(size_x)))

#define DOC_WIDTH             INITIAL_SIZE*SQUARE_SIZE
#define DOC_HEIGHT            DOC_WIDTH

@start AppMonikerResource, data ;
@visMoniker Moniker0 = {
	size = standard;
	color = color4;
	aspectRatio = normal;
	cachedSize = 48, 30;
	gstring {
		GSDrawBitmapAtCP (906),
		Bitmap (48,30,BMC_UNCOMPACTED,(BMT_MASK|BMF_4BIT)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x60, 0x0c, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x04, 0x00, 0x03, 0x80, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x08, 0x00, 0x03, 0x80, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x08, 0x00, 0x03, 0x80, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff,
		0x00, 0x10, 0x00, 0x03, 0x80, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x00, 0x07, 0xc0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x92, 0x00, 0x1f, 0xf0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xef, 0xfe, 0xff, 0xef, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff,
		0x02, 0x54, 0x80, 0x7f, 0xfc, 0x00, 0xff, 0xff,
		0xff, 0xef, 0xfe, 0xfe, 0xfe, 0xff, 0xef, 0xff, 0xff,
		0xff, 0xf0, 0x07, 0x07, 0x70, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x01, 0x11, 0x00, 0xff, 0xfe, 0x00, 0xff, 0xff, 
		0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 
		0x04, 0x10, 0x40, 0xff, 0xfe, 0x00, 0xff, 0xff,
		0xfe, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xfe, 0xff, 0xff, 
		0xff, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
		0xff, 0xff, 0xff, 0xff, 
		0x02, 0x38, 0x81, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xef, 0xff, 0xec, 0xef, 0xff, 0xef, 0xff, 0xff, 
		0xf0, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x7c, 0x01, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xfe, 0xc4, 0xce, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x0f, 0xff, 0xe3, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xee, 0xec, 0xcc, 0x44, 0x4c, 0xcc, 0xee, 0xef, 0xff, 
		0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x7c, 0x03, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xfe, 0xc4, 0xce, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x02, 0x38, 0x83, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xef, 0xff, 0xec, 0xef, 0xff, 0xef, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff,
		0x04, 0x10, 0x43, 0xff, 0xff, 0x80, 0xff, 0xff,
		0xfe, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xfe, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff,
		0x01, 0x11, 0x03, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xfe, 0xff, 0xfc, 0xff, 0xfe, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff,
		0x02, 0x54, 0x83, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xef, 0xfe, 0xfe, 0xfe, 0xff, 0xef, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff,
		0x00, 0x92, 0x01, 0xff, 0xff, 0x00, 0xff, 0xff,
		0xff, 0xff, 0xef, 0xfe, 0xff, 0xef, 0xff, 0xff, 0xff,
		0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x01, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
		0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 
		GSEndString()
	}
}
@visMoniker Moniker1 = {
	size = standard;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 48, 30;
	gstring {
		GSDrawBitmapAtCP (366),
		Bitmap (48,30,BMC_UNCOMPACTED,(BMT_MASK|BMF_MONO)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 
		0x1f, 0xf0, 0x00, 0x00, 
		0x00, 0x00, 0x60, 0x0c, 0x00, 0x00, 0x00, 0x00, 
		0x60, 0x0c, 0x00, 0x00,
		0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00,
		0x80, 0x02, 0x00, 0x00,
		0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
		0x00, 0x03, 0x00, 0x00, 
		0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 
		0x00, 0x01, 0x00, 0x00, 
		0x00, 0x04, 0x00, 0x03, 0x80, 0x00, 0x00, 0x04, 
		0x00, 0x03, 0x80, 0x00, 
		0x00, 0x08, 0x00, 0x03, 0x80, 0x00, 0x00, 0x08, 
		0x00, 0x03, 0x80, 0x00, 
		0x00, 0x08, 0x00, 0x03, 0x80, 0x00, 0x00, 0x08, 
		0x00, 0x03, 0x80, 0x00,
		0x00, 0x10, 0x00, 0x03, 0x80, 0x00, 0x00, 0x10, 
		0x00, 0x03, 0x80, 0x00,
		0x00, 0x10, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x10, 
		0x00, 0x07, 0xc0, 0x00, 
		0x00, 0x10, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x10, 
		0x00, 0x1f, 0xf0, 0x00, 
		0x00, 0x10, 0x00, 0x69, 0xfc, 0x00, 0x00, 0x10, 
		0x00, 0x69, 0xfc, 0x00, 
		0x00, 0x10, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x10, 
		0x00, 0xff, 0xfe, 0x00, 
		0x00, 0x10, 0x00, 0xef, 0xfe, 0x00, 0x00, 0x10, 
		0x00, 0xef, 0xfe, 0x00, 
		0x00, 0x10, 0x01, 0xff, 0xff, 0x00, 0x00, 0x10, 
		0x01, 0xff, 0xff, 0x00, 
		0x00, 0x5e, 0x01, 0xbf, 0xff, 0x00, 0x00, 0x5e,
		0x01, 0xbf, 0xff, 0x00, 
		0x00, 0x38, 0x03, 0xff, 0xff, 0x80, 0x00, 0x38, 
		0x03, 0xff, 0xff, 0x80, 
		0x00, 0x78, 0x03, 0x7f, 0xff, 0x80, 0x00, 0x78,
		0x03, 0x7f, 0xff, 0x80, 
		0x00, 0xa8, 0x03, 0xff, 0xff, 0x80, 0x00, 0xa8, 
		0x03, 0xff, 0xff, 0x80,
		0x00, 0x24, 0x03, 0xff, 0xff, 0x80, 0x00, 0x24,
		0x03, 0xff, 0xff, 0x80, 
		0x00, 0x20, 0x03, 0xff, 0xff, 0x80, 0x00, 0x20,
		0x03, 0xff, 0xff, 0x80, 
		0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 
		0x03, 0xff, 0xff, 0x80, 
		0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00,
		0x01, 0xff, 0xff, 0x00, 
		0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 
		0x01, 0xff, 0xff, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00,
		0x00, 0xff, 0xfe, 0x00,
		0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00,
		0x00, 0x7f, 0xfc, 0x00,
		0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 
		0x00, 0x3f, 0xf8, 0x00, 
		0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xe0, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 
		GSEndString()
	}
}
@visMoniker Moniker2 = {
	size = tiny;
	color = gray1;
	aspectRatio = verySquished;
	cachedSize = 40, 15;
	gstring {
		GSDrawBitmapAtCP (156),
		Bitmap (40,15,BMC_UNCOMPACTED,(BMT_MASK|BMF_MONO)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 
		0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 
		0xc0, 0x00, 
		0x00, 0x0c, 0x00, 0x20, 0x00, 0x00, 0x0c, 0x00, 
		0x20, 0x00, 
		0x00, 0x10, 0x00, 0x30, 0x00, 0x00, 0x10, 0x00,
		0x30, 0x00, 
		0x00, 0x20, 0x00, 0x30, 0x00, 0x00, 0x20, 0x00, 
		0x30, 0x00,
		0x00, 0x20, 0x00, 0x78, 0x00, 0x00, 0x20, 0x00, 
		0x78, 0x00, 
		0x00, 0x20, 0x03, 0xbf, 0x00, 0x00, 0x20, 0x03, 
		0xbf, 0x00, 
		0x00, 0x20, 0x06, 0xff, 0x80, 0x00, 0x20, 0x06,
		0xff, 0x80, 
		0x00, 0xb8, 0x0b, 0xff, 0xc0, 0x00, 0xb8, 0x0b,
		0xff, 0xc0, 
		0x00, 0xe0, 0x1f, 0xff, 0xe0, 0x00, 0xe0, 0x1f, 
		0xff, 0xe0, 
		0x00, 0x50, 0x1f, 0xff, 0xe0, 0x00, 0x50, 0x1f,
		0xff, 0xe0, 
		0x00, 0x00, 0x1f, 0xff, 0xe0, 0x00, 0x00, 0x1f, 
		0xff, 0xe0, 
		0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x0f,
		0xff, 0xc0,
		0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x07,
		0xff, 0x00,
		0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 
		0xfc, 0x00, 
		GSEndString()
	}
}

@end AppMonikerResource

    @classdecl MineProcessClass, neverSaved ;
    @classdecl MinePrimaryClass ;

/***************************************************************************
 *		UI Objects
 ***************************************************************************/



/*=========================================================================*/



@start	AppResource ;
    /*---------------------------------------------------------------------*/
    @object GenApplicationClass MineApp = {
        GI_visMoniker = list { @MineTextMoniker,
                               @Moniker0,
                               @Moniker1,
                               @Moniker2 }
        GI_comp       = @MinePrimary,
                        @MineHelpControl;
        gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS)
                      = @MinePrimary;
        gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_ACTIVE_LIST)
                      = @MineViewControl;
        gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS)
                      = @MineHelpControl,
                        @MineViewControl ;
    }
    /*---------------------------------------------------------------------*/
    @visMoniker MineTextMoniker =
        "Mine Field" ;
    /*---------------------------------------------------------------------*/
@end	AppResource



/*=========================================================================*/



@start	Interface		/* this resource is for misc UI objects */ ;
    /*---------------------------------------------------------------------*/
    @object MinePrimaryClass MinePrimary  = {
        GI_comp             = @MineViewGroup1,
                              @MineViewModeMenu,
                              @MineDialogs,
                              @MineViewMenu;
        ATTR_GEN_HELP_CONTEXT = "TOC";
        HINT_SIZE_WINDOW_AS_DESIRED ;
        HINT_PRIMARY_NO_FILE_MENU ;
        HINT_DEFAULT_TARGET;
        HINT_DEFAULT_FOCUS;
        HINT_CENTER_CHILDREN_HORIZONTALLY ;
/*
        HINT_NO_TALLER_THAN_CHILDREN_REQUIRE ;
        HINT_NO_WIDER_THAN_CHILDREN_REQUIRE ;
*/
    }
    /*---------------------------------------------------------------------*/
    @object HelpControlClass MineHelpControl = {
        GI_states = @default|GS_ENABLED;
        HCI_helpType = HT_SIMPLE_HELP;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineViewGroup1 = {
        GI_comp = @MineViewGroup2, @MineViewGroup3 ;

        /* On small screens, lets put the Timer and info on the left */
        /* side of the map instead of above the map. */
        HINT_IF_SYSTEM_ATTRS = SA_TINY;
            HINT_ORIENT_CHILDREN_HORIZONTALLY ;
        HINT_ELSE ;
            HINT_ORIENT_CHILDREN_VERTICALLY ;
            HINT_CENTER_CHILDREN_HORIZONTALLY ;
            HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
            HINT_EXPAND_HEIGHT_TO_FIT_PARENT ;
        HINT_ENDIF ;
        HINT_DEFAULT_TARGET;
        HINT_DEFAULT_FOCUS;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineViewGroup2 = {
        GI_comp = @MineViewGroup4, @MineQuickNew ;
        HINT_IF_SYSTEM_ATTRS = SA_TINY;
            HINT_ORIENT_CHILDREN_VERTICALLY ;
        HINT_ELSE ;
            HINT_ORIENT_CHILDREN_HORIZONTALLY ;
            HINT_CENTER_CHILDREN_VERTICALLY ;
            HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY ;
        HINT_ENDIF ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineViewGroup4 = {
        GI_comp = @MineTimer,
                  @MineFlagCount,
                  @MineScore ;

        HINT_ORIENT_CHILDREN_VERTICALLY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass MineQuickNew = {
        GI_visMoniker   = 'N', "New" ;
        GTI_destination = process ;
        GTI_actionMsg   = MSG_VIEW_MINE_NEW ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineViewGroup3 = {
        GI_comp = @MineView ;
        HINT_CENTER_CHILDREN_VERTICALLY ;
        HINT_CENTER_CHILDREN_HORIZONTALLY ;
        HINT_EXPAND_HEIGHT_TO_FIT_PARENT ;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_MINIMUM_SIZE = { SST_PIXELS | 100,
                              SST_PIXELS | 100,
                              0 } ;
        HINT_INITIAL_SIZE = { SST_PIXELS | 246,
                              SST_PIXELS | 246,
                              0 } ;
        HINT_DEFAULT_TARGET;
        HINT_DEFAULT_FOCUS;
    }
    /*---------------------------------------------------------------------*/
    @object MineContentClass MineContent = {
        VCNI_view         = MineView ;
        VCNI_attrs        = @default |
                            VCNA_SAME_WIDTH_AS_VIEW |
                            VCNA_SAME_HEIGHT_AS_VIEW |
                            VCNA_LARGE_DOCUMENT_MODEL |
                            VCNA_ACTIVE_MOUSE_GRAB_REQUIRES_LARGE_EVENTS ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineDialogs = {
        GI_comp = @MineCompletedBox,
                  @MineFoundBox,
                  @MinePlaceHighScoreBox ;
        GII_type = GIT_ORGANIZATIONAL ;
        GII_visibility = GIV_DIALOG ;
        GII_attrs = @default | GIA_NOT_USER_INITIATABLE ;
    }
    /*---------------------------------------------------------------------*/
    @object MineTimerClass MineTimer = {
        GI_visMoniker    = "Time 00:00:00" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass MineFlagCount = {
        GI_visMoniker    = "0/0" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass MineScore = {
        GI_visMoniker    = "Score: 0" ;
    }
    /*---------------------------------------------------------------------*/
    @object MineViewClass MineView = {
        GVI_attrs      = @default |
                         GVA_CONTROLLED ;
        GVI_horizAttrs   = @default |
                           GVDA_SCROLLABLE |
                           GVDA_NO_LARGER_THAN_CONTENT ;
        GVI_vertAttrs    = @default |
                           GVDA_SCROLLABLE |
                           GVDA_NO_LARGER_THAN_CONTENT ;
        GVI_content      = @MineContent;
        GVI_docBounds    = {0, 0, DOC_WIDTH, DOC_HEIGHT};
        HINT_DEFAULT_TARGET;
        HINT_DEFAULT_FOCUS;
        HINT_VIEW_REMOVE_SCROLLERS_WHEN_NOT_SCROLLABLE ;
    }
    /*---------------------------------------------------------------------*/
@end Interface

@if 0

@start InterfaceAbout ;
@visMoniker LesInkLogo = {
	size = tiny;
	style = icon;
	color = color4;
	aspectRatio = normal;
	cachedSize = 24, 64;
	gstring {
		GSDrawBitmapAtCP (966),
		Bitmap (24,64,BMC_UNCOMPACTED,(BMT_MASK|BMF_4BIT)),
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x18, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x18, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x14, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x14, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x12, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x12, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x13, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x11, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x11, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x30, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 
		0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x20, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x0f, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x00, 0x60, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x0f, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x00, 0xc0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x00, 
		0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x01, 0xc0, 0xc0, 0xff, 0xff, 0xff, 0xf0, 0x00, 
		0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x01, 0x80, 0xc0, 0xff, 0xff, 0xff, 0xf0, 0x0f, 
		0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x03, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x00, 0xff, 
		0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x03, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x00, 0xff, 
		0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x02, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x0f, 0xff, 
		0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 
		0x06, 0x01, 0x80, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
		0xff, 
		0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
		0x06, 0x01, 0x80, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
		0xff, 
		0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
		0x06, 0x01, 0x80, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
		0xff, 
		0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
		0x06, 0x01, 0x80, 0xff, 0xff, 0xf0, 0x0f, 0xff, 
		0xff, 
		0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
		0x02, 0x13, 0x80, 0xff, 0xff, 0xff, 0x0f, 0xff, 
		0xf0, 
		0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0x02, 0x13, 0x00, 0xff, 0xff, 0xff, 0x0f, 0xff, 
		0xf0, 
		0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0x02, 0x13, 0x00, 0xff, 0xff, 0xff, 0x0f, 0xff, 
		0xf0, 
		0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0x01, 0x13, 0x00, 0xff, 0xff, 0xff, 0xf0, 0xff, 
		0xf0, 
		0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0x01, 0x16, 0x00, 0xff, 0xff, 0xff, 0xf0, 0xff, 
		0xf0, 
		0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x16, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x16, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x1e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x1c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x1c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x1c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x18, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x18, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x18, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x03, 0xef, 0x80, 0xff, 0xff, 0xff, 0x00, 0x00, 
		0x0f, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0x03, 0xef, 0x80, 0xff, 0xff, 0xff, 0x00, 0x00, 
		0x0f, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0x07, 0xef, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0x0f, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0x07, 0xef, 0xc0, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0x0f, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0x0f, 0xc7, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 
		0xff, 
		0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0x0f, 0xc7, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 
		0xff, 
		0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0x1f, 0xc7, 0xf0, 0xff, 0xf0, 0x00, 0x00, 0x00, 
		0xff, 
		0xf0, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0x1f, 0xc7, 0xf0, 0xff, 0xf0, 0x00, 0x00, 0x00, 
		0xff, 
		0xf0, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x3f, 0xff, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0x3f, 0xff, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0x3f, 0xff, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0x3f, 0xff, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0x3f, 0xff, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0x3f, 0xff, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		GSEndString()
	}
}
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineAbout = {
        GI_comp = @About1to3, @About5, @About8 ;
        GI_visMoniker   = 'A', "About Mine Field" ;
        GII_visibility  = GIV_DIALOG ;
        GII_type        = GIT_NOTIFICATION ;
        HINT_ORIENT_CHILDREN_VERTICALLY ;
        HINT_CENTER_CHILDREN_HORIZONTALLY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass About1 = {
        GI_visMoniker = "Mine Field v1.0" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass About2 = {
        GI_visMoniker = "by" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass About3 = {
        GI_visMoniker = "LesInk Productions" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass LeftAbout = {
        GI_visMoniker = list { @Moniker0,
                               @Moniker1,
                               @Moniker2 }
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass RightAbout = {
        GI_visMoniker = list { @LesInkLogo }
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass AboutSub1to3 = {
        GI_comp = @About1, @About2, @About3 ;
        HINT_ORIENT_CHILDREN_VERTICALLY ;
        HINT_CENTER_CHILDREN_HORIZONTALLY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass About1to3 = {
        GI_comp = @LeftAbout, @AboutSub1to3, @RightAbout ;
        HINT_ORIENT_CHILDREN_HORIZONTALLY ;
        HINT_CENTER_CHILDREN_VERTICALLY ;
    }
    /*---------------------------------------------------------------------*/
/*
    @object GenGlyphClass About4 = {
        GI_visMoniker = "---" ;
    }
*/
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass About5 = {
        GI_visMoniker = "Programmed by Lysle E. Shields III" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass About8 = {
        GI_visMoniker = "Copyright 1994.  All rights reserved." ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceAbout

@endif

@start InterfaceDialogs1 ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineCompletedBox = {
        GI_visMoniker   = "We have a winner!" ;
        GII_visibility  = GIV_DIALOG ;
        GII_type        = GIT_NOTIFICATION ;
        GII_attrs       = @default                         |
                          GIA_INITIATED_VIA_USER_DO_DIALOG |
                          GIA_MODAL                        |
                          GIA_NOT_USER_INITIATABLE         ;
        GI_comp         = @WinnerGlyph ;
        HINT_ORIENT_CHILDREN_HORIZONTALLY ;
        HINT_CENTER_CHILDREN_VERTICALLY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass WinnerGlyph = {
        GI_comp = @WinnerGlyph1,
                  @WinnerSnipGlyph,
                  @WinnerGlyph2 ;
        HINT_CENTER_CHILDREN_HORIZONTALLY ;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass WinnerGlyph1 = {
        GI_visMoniker = "CONGRATULATIONS!" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass WinnerSnipGlyph = {
        GI_visMoniker = list { @SnipMoniker } ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass WinnerGlyph2 = {
        GI_visMoniker = "You win!" ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceDialogs1

@start InterfaceDialogs2 ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MinePlaceHighScoreBox = {
        GI_visMoniker  = "Sign in to the Hall of Fame!" ;
        GII_visibility = GIV_DIALOG ;
        GII_type       = GIT_NOTIFICATION ;
        GII_attrs      = @default                         |
                          GIA_INITIATED_VIA_USER_DO_DIALOG |
                          GIA_MODAL                        |
                          GIA_NOT_USER_INITIATABLE         ;
        GI_comp        = @PlaceHighScoreText ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTextClass PlaceHighScoreText = {
        GI_visMoniker = "Name: " ;
        GTXI_maxLength = 75 ;
        GTXI_attrs     = @default |
                         GTA_SINGLE_LINE_TEXT |
                         GTA_ALLOW_TEXT_OFF_END |
                         GTA_TAIL_ORIENTED ;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
        HINT_TEXT_WHITE_WASH_COLOR ;
        HINT_DEFAULT_FOCUS ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceDialogs2

@start InterfaceDialogs3 ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineFoundBox = {
        GI_visMoniker   = "Oooops!" ;
        GII_visibility  = GIV_DIALOG ;
        GII_type        = GIT_NOTIFICATION ;
        GII_attrs       = @default                         |
                          GIA_INITIATED_VIA_USER_DO_DIALOG |
                          GIA_MODAL                        |
                          GIA_NOT_USER_INITIATABLE         ;
        GI_comp         = @LoserGlyph,
                          @LoserContinueTrigger ;
        HINT_ORIENT_CHILDREN_HORIZONTALLY ;
        HINT_CENTER_CHILDREN_VERTICALLY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass LoserGlyph = {
        GI_comp = @LoserBoomGlyph,
                  @LoserGlyph2 ;
        HINT_CENTER_CHILDREN_HORIZONTALLY ;
        HINT_EXPAND_WIDTH_TO_FIT_PARENT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass LoserBoomGlyph = {
        GI_visMoniker = list { @BoomMoniker } ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass LoserGlyph2 = {
        GI_visMoniker = "Sorry, try again" ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass LoserContinueTrigger = {
        GI_visMoniker = "Continue for Fun" ;
        GI_attrs        = @default | GA_SIGNAL_INTERACTION_COMPLETE ;
        ATTR_GEN_TRIGGER_INTERACTION_COMMAND = 0x80 ;
        HINT_SEEK_REPLY_BAR ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceDialogs3

@start InterfaceViewMenu ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineViewMenu = {
        GI_comp        = @MineViewControl,
                         @MineHighScoreTrigger,
                         @MineCopyToClipboard ;
        GII_visibility = GIV_POPUP ;
        ATTR_GEN_INTERACTION_GROUP_TYPE
                       = (GIGT_VIEW_MENU) ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineHighScoreTrigger = {
        GI_visMoniker   = 'H', "High Scores" ;
        GI_comp = @MineHighScoreList ;
        GII_visibility  = GIV_DIALOG ;
    }
    /*---------------------------------------------------------------------*/
    @object GenViewControlClass MineViewControl = {
        HINT_GEN_CONTROL_MODIFY_INITIAL_UI
                   = { GCUF_USER_UI,
                       0, /* GVCF_REDRAW, */
                       GVCF_ADJUST_ASPECT_RATIO|   /* Prohibits */
                       GVCF_MAIN_SCALE_TO_FIT |
                       GVCF_SCALE_TO_FIT |
                       GVCF_APPLY_TO_ALL|
                       GVCF_SHOW_HORIZONTAL|
                       GVCF_SHOW_VERTICAL,
                       0,
                       0} ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass MineCopyToClipboard = {
        GI_visMoniker   = 'C', "Copy to clipboard" ;
        GTI_destination = process ;
        GTI_actionMsg   = MSG_META_CLIPBOARD_COPY ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceViewMenu

@start InterfaceOptionsMenu ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineViewModeMenu = {
        GI_comp = /* @MineAbout, */
                  @MineModeGroup;
        GI_visMoniker = 'O', "Options" ;
        GII_visibility = GIV_POPUP ;
        ATTR_GEN_INTERACTION_GROUP_TYPE
                       = (GIGT_FILE_MENU) ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineModeGroup = {
        GI_comp = @MineNewOption,
                  @MineUncoverAll,
                  @MineSizeOption,
                  @MineDensitySubGroup,
                  @MineOptionFlagsSubGroup ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass MineNewOption = {
        GI_visMoniker   = 'N', "New Game" ;
        GTI_destination = process ;
        GTI_actionMsg   = MSG_VIEW_MINE_NEW ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass MineUncoverAll = {
        GI_visMoniker   = 'U', "Uncover all" ;
        GTI_destination = process ;
        GTI_actionMsg   = MSG_MINE_UNCOVER_ALL ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineSizeOption = {
        GI_visMoniker   = 'S', "Size change" ;
        GII_visibility  = GIV_DIALOG ;
        GI_comp         = @MineSizeApplyTrigger,
                          @MineSizeXGenValue,
                          @MineSizeYGenValue ;
    }
    /*---------------------------------------------------------------------*/
    @object GenTriggerClass MineSizeApplyTrigger = {
        GTI_destination = process ;
        GTI_actionMsg   = MSG_MINE_SIZE_CHANGED ;
        ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_APPLY} ;
        HINT_SEEK_REPLY_BAR ;
        HINT_DEFAULT_DEFAULT_ACTION ;
    }
    /*---------------------------------------------------------------------*/
    @object GenValueClass MineSizeXGenValue = {
        GI_visMoniker   = 'X', "X Size" ;
        GVLI_value      = MakeWWFixed((float)INITIAL_SIZE) ;
        GVLI_minimum    = MakeWWFixed(5.0) ;
        GVLI_maximum    = MakeWWFixed(100.0) ;
    }
    /*---------------------------------------------------------------------*/
    @object GenValueClass MineSizeYGenValue = {
        GI_visMoniker   = 'Y', "Y Size" ;
        GVLI_value      = MakeWWFixed((float)INITIAL_SIZE) ;
        GVLI_minimum    = MakeWWFixed(5.0) ;
        GVLI_maximum    = MakeWWFixed(100.0) ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineDensitySubGroup = {
        GI_visMoniker = 'D', "Density" ;
        GI_comp = @MineGroupDensity ;
        GII_visibility = GIV_POPUP ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineOptionFlagsSubGroup = {
        GI_visMoniker = 'L', "Limiting features" ;
        GI_comp = @MineOptionFlags;
        GII_visibility = GIV_POPUP ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceOptionsMenu

@start InterfaceDensity ;
    /*---------------------------------------------------------------------*/
    @object GenItemGroupClass MineGroupDensity = {
        GI_comp = @MineGroupVeryLowDensity,
                  @MineGroupLowDensity,
                  @MineGroupLowToMediumDensity,
                  @MineGroupMediumDensity,
                  @MineGroupMediumToHighDensity,
                  @MineGroupHighDensity,
                  @MineGroupImpossibleDensity ;
        GIGI_selection = MINE_MEDIUM_DENSITY ;
        GIGI_destination = process ;
        GIGI_applyMsg = MSG_MINE_SET_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupVeryLowDensity = {
        GI_visMoniker = '1', "1. Very Low" ;
        GII_identifier = MINE_VERY_LOW_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupLowDensity = {
        GI_visMoniker = '2', "2. Low" ;
        GII_identifier = MINE_LOW_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupLowToMediumDensity = {
        GI_visMoniker = '3', "3. Low to Medium" ;
        GII_identifier = MINE_LOW_TO_MEDIUM_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupMediumDensity = {
        GI_visMoniker = '4', "4. Medium" ;
        GII_identifier = MINE_MEDIUM_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupMediumToHighDensity = {
        GI_visMoniker = '5', "5. Medium to High" ;
        GII_identifier = MINE_MEDIUM_TO_HIGH_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupHighDensity = {
        GI_visMoniker = '6', "6. High" ;
        GII_identifier = MINE_HIGH_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenItemClass MineGroupImpossibleDensity = {
        GI_visMoniker = '7', "7. Impossible" ;
        GII_identifier = MINE_IMPOSSIBLE_DENSITY ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceDensity

@start InterfaceFlags ;
    /*---------------------------------------------------------------------*/
    @object GenBooleanClass MineBooleanGrow = {
        GI_visMoniker = 'G', "Grow automatically" ;
        GBI_identifier = MINE_BOOLEAN_GROW_BIT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenBooleanClass MineBooleanTimed = {
        GI_visMoniker = 'T', "Timed game" ;
        GBI_identifier = MINE_BOOLEAN_TIMER_BIT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenBooleanClass MineBooleanFlagUse = {
        GI_visMoniker = 'F', "Flag use" ;
        GBI_identifier = MINE_BOOLEAN_FLAGGING_BIT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenBooleanClass MineBooleanAreaClear = {
        GI_visMoniker = 'A', "Area clear" ;
        GBI_identifier = MINE_BOOLEAN_AREA_CLEAR_BIT ;
    }
    /*---------------------------------------------------------------------*/
    @object GenBooleanGroupClass MineOptionFlags = {
        GI_comp = @MineBooleanGrow,
                  @MineBooleanTimed,
                  @MineBooleanFlagUse,
                  @MineBooleanAreaClear ;
        GBGI_destination = process ;
        GBGI_applyMsg = MSG_MINE_SET_BOOLEANS ;
    }
    /*---------------------------------------------------------------------*/
@end InterfaceFlags

@start InterfaceScores ;
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass MineHighScoreList = {
        GI_visMoniker   = "Hall of Fame" ;
        GI_comp = @ScoreNames,
                  @ScoreValues ;
        HINT_DRAW_IN_BOX ;
        HINT_ORIENT_CHILDREN_HORIZONTALLY ;
        HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass ScoreNames = {
        GI_comp = @ScoreName1,
                  @ScoreName2,
                  @ScoreName3,
                  @ScoreName4,
                  @ScoreName5,
                  @ScoreName6,
                  @ScoreName7,
                  @ScoreName8,
                  @ScoreName9,
                  @ScoreName10 ;
    }
    /*---------------------------------------------------------------------*/
    @object GenInteractionClass ScoreValues = {
        GI_comp = @ScoreValue1,
                  @ScoreValue2,
                  @ScoreValue3,
                  @ScoreValue4,
                  @ScoreValue5,
                  @ScoreValue6,
                  @ScoreValue7,
                  @ScoreValue8,
                  @ScoreValue9,
                  @ScoreValue10 ;
    }
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName1 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName2 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName3 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName4 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName5 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName6 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName7 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName8 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName9 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreName10 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue1 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue2 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue3 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue4 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue5 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue6 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue7 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue8 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue9 = {
    } ;
    /*---------------------------------------------------------------------*/
    @object GenGlyphClass ScoreValue10 = {
    } ;
    /*---------------------------------------------------------------------*/
@end InterfaceScores


/*=========================================================================*/

@start StringsResource ;
    /*---------------------------------------------------------------------*/
    @chunk char StringFlags[] = "Flags: %d of %d" ;
        @localize { "Shows Flags <current> of <num mines>"  0-30 } ;
    @chunk char StringScore[] = "Score: %d" ;
        @localize { "Current Score"  0-20 } ;
    @chunk char StringTimePrefix[] = "Time " ;
         @localize { "Prefix for time, usually 'Time '+00:00:00"  0-30 } ;
    @chunk char StringTimePostfix[] = "     " ;
         @localize { "Postfix for time, usually 00:00:00+'    '" 0-20 } ;
    /*---------------------------------------------------------------------*/
@end StringsResource ;


/*=========================================================================*/


@start BoomMonikerResource ;

@visMoniker BoomMoniker = {
	size = tiny;
	color = color4;
	aspectRatio = normal;
	cachedSize = 128, 80;
	gstring {
		GSDrawBitmapAtCP (6406),
		Bitmap (128,80,BMC_UNCOMPACTED,(BMT_MASK|BMF_4BIT)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x07, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xec, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x0f, 0x00, 
		0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x1f, 0x80, 
		0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x3f, 0x80, 
		0x0f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x04, 0x00, 0x00, 0xf8, 0x00, 0x3f, 0x80, 
		0x1f, 0x00, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0x00, 0x01, 0xfc, 0x00, 0x7f, 0xc0, 
		0x1f, 0x00, 0x07, 0x80, 0x00, 0x60, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 
		0xec, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0xc0, 0x01, 0xfe, 0x00, 0xff, 0xc0, 
		0x3f, 0x80, 0x0f, 0x80, 0x01, 0xc0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xcc, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xec, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcc, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0xf0, 0x01, 0xfe, 0x01, 0xff, 0xe0, 
		0x7f, 0x80, 0x1f, 0xc0, 0x03, 0xc0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0xf8, 0x01, 0xff, 0x01, 0xff, 0xe0, 
		0xff, 0x80, 0x3f, 0xc0, 0x07, 0xc0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 
		0xec, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0xfe, 0x03, 0xff, 0x83, 0xff, 0xe1, 
		0xff, 0xc0, 0x7f, 0xa0, 0x1f, 0x80, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 
		0xec, 0xcf, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xef, 0xcf, 
		0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0xff, 0x83, 0xff, 0xc7, 0xff, 0xf3, 
		0xff, 0xc0, 0x7f, 0xe0, 0x3f, 0x80, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 
		0xee, 0xec, 0xcf, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x7f, 0xe3, 0xff, 0xcf, 0xff, 0xf3, 
		0xff, 0xc0, 0xff, 0xe0, 0x7f, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 
		0xee, 0xee, 0xec, 0xcf, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xfc, 0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x7f, 0xff, 0xff, 0xef, 0xff, 0xff, 
		0xff, 0xe1, 0xff, 0xf0, 0xff, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 
		0xee, 0xee, 0xee, 0xec, 0xcc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xcf, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xcc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xce, 0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xe3, 0xff, 0xf3, 0xff, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 
		0xee, 0xee, 0xee, 0xee, 0xec, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xec, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xcc, 0xee, 0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xe7, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xcc, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x0e, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xce, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xcc, 0xcf, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xfc, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 
		0xcc, 0xcc, 0xcc, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xf8, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xec, 0xcc, 0xce, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xec, 0xff, 0xcc, 0xcc, 0xcc, 
		0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xec, 0xcc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xce, 0xee, 
		0xee, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xce, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xee, 
		0xee, 0xee, 0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 
		0xee, 0xee, 0xee, 0xcc, 0xcc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xce, 0xee, 0xec, 0xcc, 0xcc, 0xee, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0xce, 0x00, 0x0c, 0xcc, 0xcc, 0xce, 
		0xee, 0xee, 0xcc, 0xcc, 0xcc, 0x00, 0x0c, 0xcc, 0xcc, 
		0xce, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xfc, 0xcc, 0xcc, 0xcc, 0xcc, 0xce, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0x00, 0x00, 0x00, 0xcc, 0xcc, 0xce, 
		0xee, 0xec, 0xcc, 0xcc, 0x00, 0x00, 0x00, 0x0c, 0xcc, 
		0xce, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xec, 0xcc, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xfc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 
		0xec, 0xcc, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0xcc, 0xce, 
		0xee, 0xec, 0xcc, 0xc0, 0x00, 0x00, 0x00, 0x0c, 0xcc, 
		0xcc, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xee, 
		0xcc, 0xcc, 0xce, 0xee, 0xee, 0xec, 0xcc, 0xcc, 0xce, 
		0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 
		0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xee, 0xee, 
		0xcc, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x0c, 0xcc, 0xcc, 
		0xee, 0xcc, 0xcc, 0xc0, 0x00, 0x00, 0xee, 0xe0, 0xcc, 
		0xcc, 0x0e, 0xec, 0xcc, 0xcc, 0xcc, 0x0e, 0xee, 0xee, 
		0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xec, 0xcc, 0xcc, 0xce, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
		0xcc, 0xcc, 0xcc, 0xc0, 0x00, 0xcc, 0xcc, 0xce, 0xee, 
		0xcc, 0xcc, 0x00, 0x00, 0x0e, 0xee, 0xe0, 0xcc, 0xcc, 
		0x0e, 0xcc, 0xcc, 0x00, 0x00, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x0e, 0xec, 0xcc, 0xcc, 0xcc, 0x0e, 0xee, 0xec, 
		0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcc, 
		0xcc, 0xcc, 0x00, 0x00, 0x00, 0x0c, 0xcc, 0xce, 0xee, 
		0xcc, 0xcc, 0x00, 0x00, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0x0e, 0xcc, 0xcc, 0x00, 0x0e, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x00, 0xec, 0xcc, 0xcc, 0xcc, 0x0e, 0xee, 0xec, 
		0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xcc, 0xcc, 0xcc, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 
		0xcc, 0xcc, 0x00, 0x00, 0x00, 0x0c, 0xcc, 0xce, 0xee, 
		0xcc, 0xcc, 0x00, 0x0e, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0x0e, 0xcc, 0xcc, 0x00, 0x0e, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x00, 0xec, 0xcc, 0xcc, 0xcc, 0x0e, 0xee, 0xcc, 
		0xcc, 0xcc, 0xcc, 0x0e, 0xee, 0xcc, 0xcc, 0xcc, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 
		0xcc, 0xcc, 0x00, 0x00, 0xee, 0xec, 0xcc, 0x00, 0xee, 
		0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0x00, 0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x00, 0xec, 0xcc, 0x0c, 0xcc, 0x0e, 0xee, 0xcc, 
		0xc0, 0xcc, 0xc0, 0x0e, 0xec, 0xcc, 0xcc, 0xcc, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 0xee, 
		0xcc, 0xcc, 0x0e, 0xee, 0xec, 0xcc, 0xcc, 0xc0, 0xee, 
		0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0x00, 0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x00, 0xcc, 0xcc, 0x0c, 0xcc, 0x0e, 0xec, 0xcc, 
		0xcc, 0xcc, 0xc0, 0x0e, 0xec, 0xcc, 0xcc, 0xc0, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0x0c, 0xcc, 0xce, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xce, 
		0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0x00, 0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x00, 0xcc, 0xcc, 0x0c, 0xcc, 0x0e, 0xec, 0xcc, 
		0x0c, 0xcc, 0xc0, 0x0e, 0xec, 0xcc, 0xcc, 0xc0, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 
		0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0x00, 0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xee, 0xcc, 
		0xcc, 0x00, 0xcc, 0xcc, 0x0c, 0xcc, 0x0e, 0xcc, 0xcc, 
		0x0c, 0xcc, 0xc0, 0xee, 0xcc, 0xcc, 0xcc, 0x00, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xee, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x0c, 0xcc, 0xcc, 
		0xcc, 0xcc, 0xc0, 0xee, 0xee, 0xee, 0xec, 0xcc, 0xc0, 
		0x00, 0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 0xec, 0xcc, 
		0xcc, 0x00, 0xcc, 0xc0, 0x0c, 0xcc, 0x0e, 0xcc, 0xc0, 
		0x0c, 0xcc, 0x00, 0xee, 0xcc, 0xcc, 0xcc, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 
		0xee, 0xcc, 0xcc, 0xcc, 0xc0, 0x00, 0x00, 0xcc, 0xcc, 
		0xec, 0xcc, 0xc0, 0xee, 0xee, 0xee, 0xec, 0xcc, 0xc0, 
		0x00, 0xcc, 0xcc, 0xc0, 0xee, 0xee, 0xee, 0xec, 0xcc, 
		0xc0, 0x0c, 0xcc, 0xc0, 0x0c, 0xcc, 0x0e, 0xcc, 0xc0, 
		0xcc, 0xcc, 0x00, 0xee, 0xcc, 0xcc, 0xc0, 0x00, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 
		0xee, 0xcc, 0xcc, 0x00, 0x00, 0x00, 0x00, 0xcc, 0xcc, 
		0xcc, 0xcc, 0xcc, 0xee, 0xee, 0xee, 0xcc, 0xcc, 0xc0, 
		0x00, 0xec, 0xcc, 0xcc, 0xee, 0xee, 0xee, 0xcc, 0xcc, 
		0xc0, 0x0c, 0xcc, 0xc0, 0x0c, 0xcc, 0x0c, 0xcc, 0x00, 
		0xcc, 0xcc, 0x00, 0xec, 0xcc, 0xcc, 0xc0, 0x0e, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 
		0xee, 0xcc, 0xcc, 0xc0, 0x00, 0x00, 0x0e, 0x0c, 0xcc, 
		0xce, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x00, 
		0x00, 0xee, 0xcc, 0xcc, 0xcc, 0xee, 0xcc, 0xcc, 0xcc, 
		0x00, 0x0c, 0xcc, 0xc0, 0xec, 0xcc, 0x0c, 0xcc, 0x00, 
		0xcc, 0xcc, 0x0e, 0xec, 0xcc, 0xcc, 0x00, 0x0e, 0xee, 
		0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 
		0xee, 0xec, 0xcc, 0xc0, 0x00, 0xee, 0xee, 0xcc, 0xcc, 
		0xce, 0x0c, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0, 0x00, 
		0x0e, 0xee, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0, 
		0x00, 0x0c, 0xcc, 0xc0, 0xec, 0xcc, 0xcc, 0xc0, 0x00, 
		0xcc, 0xcc, 0x0e, 0xec, 0xcc, 0xcc, 0x00, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
		0xce, 0xec, 0xcc, 0xce, 0xee, 0xee, 0xec, 0xcc, 0xcc, 
		0x00, 0xe0, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xe0, 0x00, 
		0x0e, 0xee, 0xec, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x00, 
		0x00, 0xcc, 0xcc, 0x00, 0xec, 0xcc, 0xcc, 0xc0, 0x0c, 
		0xcc, 0xc0, 0x0e, 0xcc, 0xcc, 0xcc, 0x00, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xfc, 0xec, 0xcc, 0xcc, 0xee, 0xec, 0xcc, 0xcc, 0xcc, 
		0x00, 0xe0, 0x0c, 0xcc, 0xcc, 0xcc, 0xce, 0x00, 0x00, 
		0x0e, 0xee, 0xee, 0x0c, 0xcc, 0xcc, 0xcc, 0xc0, 0x00, 
		0x00, 0xcc, 0xcc, 0x00, 0xec, 0xcc, 0xcc, 0xc0, 0x0c, 
		0xcc, 0xc0, 0x0e, 0xcc, 0xcc, 0xc0, 0x00, 0xee, 0xee, 
		0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xc0, 
		0x00, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xee, 0xee, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0e, 0xcc, 0xcc, 0x00, 0xec, 0xcc, 0xcc, 0x00, 0xec, 
		0xcc, 0xc0, 0x0e, 0xcc, 0xcc, 0xc0, 0x0e, 0xee, 0xee, 
		0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x00, 
		0x0e, 0xee, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 
		0xee, 0xee, 0xee, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xee, 0xcc, 0xcc, 0x0e, 0xec, 0xcc, 0xcc, 0x00, 0xec, 
		0xcc, 0xc0, 0xec, 0xcc, 0xcc, 0x00, 0x0e, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xcc, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xfc, 0x0c, 0xcc, 0xcc, 0xcc, 0xcc, 0x00, 0x00, 
		0x0e, 0xee, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xe0, 0x00, 0x00, 0x00, 0x0e, 
		0xee, 0xe0, 0x00, 0x0e, 0xec, 0xcc, 0xc0, 0x00, 0xec, 
		0xcc, 0x00, 0xec, 0xcc, 0xcc, 0x00, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 
		0xcc, 0xce, 0xec, 0xcc, 0xcc, 0xc0, 0x00, 0x00, 0x00, 
		0xee, 0xee, 0xee, 0xe0, 0x00, 0x00, 0x00, 0x0e, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xe0, 0x00, 0x0e, 0xee, 0x0c, 0xc0, 0x0e, 0xcc, 
		0xcc, 0x00, 0xec, 0xcc, 0xc0, 0x00, 0xcc, 0xcc, 0xcc, 
		0xcc, 0xcc, 0xce, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xcc, 0xee, 
		0xee, 0xee, 0xec, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x0e, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xe0, 0x00, 0x0e, 0xee, 0x00, 0x00, 0x0e, 0xcc, 
		0xcc, 0x00, 0xee, 0xcc, 0xc0, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xfc, 0xcc, 0xcc, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xcc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0x00, 0x00, 0xee, 0xee, 
		0x00, 0x0e, 0xee, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcc, 0xce, 0xee, 
		0xee, 0xee, 0xee, 0x00, 0x00, 0x00, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0x00, 0xee, 0xe0, 
		0x00, 0x0c, 0xce, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcc, 
		0xee, 0xee, 0xee, 0x00, 0x0e, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xe0, 
		0x00, 0xcc, 0xcc, 0xcc, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xcc, 0xcc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcc, 0xcc, 0xcc, 0xcf, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xcc, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0xcc, 0xcf, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xfc, 0xcc, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0xcc, 0x0c, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xcc, 0xcc, 0xcc, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xdf, 
		0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0x00, 0xcc, 0xc0, 0x0e, 0xcf, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0x00, 0x00, 0xc0, 0x0e, 0xcf, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x8f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0x00, 0x00, 0x00, 0x0e, 0xec, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x87, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xe0, 0x00, 0xee, 0xec, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x03, 0xff, 0x9f, 0xff, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xec, 0xcf, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xce, 0xee, 
		0xee, 0xee, 0xee, 0xe0, 0xee, 0xee, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x07, 0xfe, 0x1f, 0xff, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xcc, 0xce, 
		0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x07, 0xfc, 0x0f, 0xfe, 0x01, 
		0xff, 0xff, 0xff, 0x9f, 0xff, 0xc0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xee, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xfc, 
		0xce, 0xee, 0xee, 0xee, 0xee, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x0f, 0xf8, 0x0f, 0xfe, 0x01, 
		0xff, 0xfb, 0xff, 0x87, 0xff, 0xc0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xce, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 
		0xfc, 0xce, 0xee, 0xee, 0xee, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x0f, 0xf0, 0x07, 0xfc, 0x00, 
		0xff, 0xf9, 0xff, 0x81, 0xff, 0xe0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xfc, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xfc, 0xce, 0xee, 0xee, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x0f, 0xe0, 0x07, 0xfc, 0x00, 
		0xff, 0xf1, 0xff, 0x80, 0x7f, 0xe0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xec, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xff, 0xfe, 0xce, 0xee, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xfc, 0xce, 0xee, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xf8, 0x00, 
		0x7f, 0xf0, 0xff, 0x80, 0x1f, 0xf0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xec, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x1f, 0x00, 0x03, 0xf8, 0x00, 
		0x7f, 0xe0, 0x7f, 0x00, 0x07, 0xf0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xcf, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x3e, 0x00, 0x01, 0xf0, 0x00, 
		0x3f, 0xe0, 0x3f, 0x00, 0x01, 0xe8, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xce, 0xee, 0xcf, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xce, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xef, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x3c, 0x00, 0x01, 0xf0, 0x00, 
		0x1f, 0xc0, 0x1f, 0x00, 0x00, 0x78, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xce, 0xec, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0xe0, 0x00, 
		0x1f, 0xc0, 0x0f, 0x00, 0x00, 0x1c, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xfc, 0xec, 0xcf, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xec, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0xe0, 0x00, 
		0x0f, 0x80, 0x0f, 0x00, 0x00, 0x04, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xfc, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xec, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x40, 0x00, 
		0x0f, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xcc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xcf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xec, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x40, 0x00, 
		0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xec, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		GSEndString()
	}
}
@end BoomMonikerResource ;

/*=========================================================================*/
@start SnipMonikerResource ;

@visMoniker SnipMoniker = {
	size = tiny;
	color = color4;
	aspectRatio = normal;
	cachedSize = 120, 75;
	gstring {
		GSDrawBitmapAtCP (5631),
		Bitmap (120,75,BMC_UNCOMPACTED,(BMT_MASK|BMF_4BIT)),
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x06, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x80, 0x00, 0x00, 0xfc, 0x00, 0x07, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0x80, 0x00, 0x01, 0xfc, 0x00, 0x0f, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x0f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0x84, 0x00, 0x01, 0xfc, 0x00, 0x0f, 
		0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xcf, 0xff, 0xfc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0x84, 0x00, 0x01, 0xfc, 0x00, 0x1f, 
		0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xcf, 0xff, 0xfc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0x84, 0x00, 0x01, 0xec, 0x00, 0x3f, 
		0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xcf, 0xff, 0xfc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x0f, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0x8c, 0x00, 0x01, 0xec, 0x00, 0x3f, 
		0x80, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xcf, 0xff, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x0f, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xcc, 0x00, 0x01, 0xec, 0x00, 0x7f, 
		0x80, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xec, 0xff, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0xff, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xcc, 0x00, 0x01, 0xec, 0x00, 0x7f, 
		0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xec, 0xff, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xec, 0x00, 0x11, 0xec, 0x00, 0xff, 
		0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xcf, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 
		0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xfc, 0x00, 0x39, 0xec, 0x18, 0xff, 
		0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xcc, 0xec, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x0f, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0x0f, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
		0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xfe, 0x00, 0x7d, 0xec, 0x1f, 0xfe, 
		0x01, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xec, 0xee, 
		0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xf0, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xf0, 0xf0, 0x00, 0xf0, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xff, 0x01, 0xf9, 0xec, 0x3f, 0xfc, 
		0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xec, 0xee, 
		0xec, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0x0f, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
		0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0x83, 0xf1, 0xec, 0x3f, 0xfc, 
		0x07, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xcf, 0xff, 0xff, 0x0f, 0xff, 0xf0, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0x0f, 0xff, 0x0f, 0x00, 
		0x00, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 
		0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xc7, 0xe1, 0xec, 0x1f, 0xfc, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xec, 0xff, 0xf0, 0xff, 0xf0, 0x0f, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xf0, 0x00, 0xff, 0x00, 
		0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xef, 0x81, 0xec, 0x07, 0xf8, 
		0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xcf, 0x0f, 0xff, 0x0f, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 
		0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xff, 0x01, 0xf4, 0x09, 0xf7, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xec, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 0xf0, 0x00, 
		0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xfe, 0x01, 0xf4, 0x0b, 0xf7, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xcf, 0x0f, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 
		0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xfc, 0x01, 0xf4, 0x17, 0xef, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xff, 0xf0, 0xf0, 0x00, 0x00, 
		0x0f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xfc, 0x01, 0xf4, 0x1f, 0xdf, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xff, 0xf0, 0xf0, 0x00, 0x00, 
		0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0xf0, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x07, 0xff, 0xfc, 0x01, 0xfc, 0x3f, 0xc7, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xec, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 
		0xff, 0xf0, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0xff, 0xf8, 0x01, 0xfc, 0x7f, 0x83, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xf0, 0xff, 0x00, 0x00, 0x0f, 
		0xff, 0xff, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0xff, 0xf8, 0x01, 0xfc, 0x7f, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0xf0, 0xf0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x03, 0xff, 0xf8, 0x01, 0xfc, 0xff, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0xee, 0xee, 0xee, 
		0xee, 0xee, 0xee, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0x0f, 0xf0, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x01, 0xff, 0xf8, 0x01, 0xfc, 0xfe, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0xee, 0xee, 
		0xee, 0xee, 0xec, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xff, 0x0f, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x7f, 0xe0, 0x01, 0xfd, 0xfe, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xee, 0xee, 
		0xee, 0xec, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xf0, 0x00, 0x0f, 0xf0, 0xf0, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x3f, 0x80, 0x01, 0xfd, 0xfc, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xee, 
		0xcc, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x0c, 0x00, 0x01, 0xff, 0xf8, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0xe0, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xff, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xdf, 0xe0, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0xf0, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0xc0, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xc0, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x0f, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x0f, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
		0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x07, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x01, 0xf3, 0xfc, 0x00, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x0f, 0xff, 0xfc, 0x00, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x03, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x01, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x7f, 0xff, 0xbf, 0x80, 0x01, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0f, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xf8, 0x1f, 0x3f, 0xe0, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x01, 0xf8, 0x1f, 0x3f, 0xf0, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x01, 0xf0, 0x1e, 0x3f, 0xf8, 0x00, 
		0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0f, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x01, 0xf0, 0x3c, 0x3f, 0xf8, 0x00, 
		0x3f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x01, 0xf8, 0x7c, 0x3c, 0x7c, 0x00, 
		0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xf0, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0xff, 
		0xff, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xf8, 0x38, 0x7e, 0x00, 
		0x1f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0xff, 0xf0, 0x38, 0x3e, 0x00, 
		0x0f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x7f, 0xe0, 0x38, 0x1e, 0x00, 
		0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
		0xff, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x1f, 0x80, 0x3c, 0x1e, 0x00, 
		0x01, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x1e, 0x00, 
		0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 
		0x00, 0x3f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 
		0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 
		0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
		0xff, 0xff, 0xff, 0xff, 
		GSEndString()
	}
}

@end SnipMonikerResource ;
/*=========================================================================*/



word MyRandom(void) ;

/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_GEN_PROCESS_OPEN_APPLICATION
{
    FileHandle fhandle ;
    byte *mine_field ;

    @callsuper() ;

    @call MineApp::MSG_GEN_APPLICATION_INSTALL_TOKEN();

    mine_field_handle = MemAlloc(10000,
                                 HF_SHARABLE|HF_SWAPABLE,
                                 HAF_ZERO_INIT) ;
    mine_field = (byte *)MemLock(mine_field_handle) ;

    FilePushDir() ;
    FileSetCurrentPath(mine_drive, mine_relativePath) ;
    FileCreateDir(mine_path) ;
    FileSetCurrentPath(mine_drive, mine_path) ;

    fhandle = FileOpen(mine_state_file, FILE_ACCESS_R|FILE_DENY_W) ;


    if (fhandle!=NullHandle)  {
        /* Make sure file at beginning */
        FilePos(fhandle, 0, FILE_POS_START) ;
        FileRead(fhandle, &size_x, sizeof(word), FALSE) ;
        FileRead(fhandle, &size_y, sizeof(word), FALSE) ;
        FileRead(fhandle, mine_field, sizeof(byte)*size_x*size_y, FALSE) ;
        FileRead(fhandle, &game_mode, sizeof(byte), FALSE) ;
        FileRead(fhandle, &time_sec, sizeof(byte), FALSE) ;
        FileRead(fhandle, &time_min, sizeof(byte), FALSE) ;
        FileRead(fhandle, &time_hour, sizeof(byte), FALSE) ;
        FileRead(fhandle, &num_mines, sizeof(word), FALSE) ;
        FileRead(fhandle, &num_squares_left, sizeof(word), FALSE) ;
        FileRead(fhandle, &num_flags, sizeof(word), FALSE) ;
        FileRead(fhandle, &density, sizeof(byte), FALSE) ;
        FileRead(fhandle, &player_score, sizeof(word), FALSE) ;
        FileRead(fhandle, &fun_mode, sizeof(byte), FALSE) ;
        FileRead(fhandle, &high_scores, 10*sizeof(high_score), FALSE) ;
        FileRead(fhandle, &num_high_scores, sizeof(word), FALSE) ;
        FileRead(fhandle, &growBoolean, sizeof(Boolean), FALSE) ;
        FileRead(fhandle, &timedBoolean, sizeof(Boolean), FALSE) ;
        FileRead(fhandle, &flaggingBoolean, sizeof(Boolean), FALSE) ;
        FileRead(fhandle, &areaClearBoolean, sizeof(Boolean), FALSE) ;
        FileClose(fhandle, FALSE) ;
        @call MineGroupDensity::MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION(density, FALSE) ;
        if (game_mode==1)  {
            timer_handle = TimerStart(TIMER_EVENT_CONTINUAL,
                                  @MineTimer,
                                  120,
                                  MSG_MINE_TIMER_CHANGE,
                                  60,
                                  &timer_id) ;
            timer_going = TRUE ;
        }
        @send MineTimer::MSG_MINE_CHANGE_TIME() ;
        @send process::MSG_MINE_UPDATE_FLAG_COUNT() ;
        @send MineSizeXGenValue::MSG_GEN_VALUE_SET_INTEGER_VALUE(size_x, FALSE) ;
        @send MineSizeYGenValue::MSG_GEN_VALUE_SET_INTEGER_VALUE(size_y, FALSE) ;
        @send MineView::MSG_GEN_VIEW_SET_DOC_BOUNDS(
                            (size_y*SQUARE_SIZE),
                            (size_x*SQUARE_SIZE),
                            0,
                            0) ;
        @send process::MSG_MINE_UPDATE_HIGH_SCORES() ;
    } else  {
        @send process::MSG_VIEW_MINE_NEW() ;
    }
    FilePopDir() ;

    /* Now that I know whether it is true or false, set the corresponding
       state of the GenBooleanClass item in my user interface. */

    @call MineOptionFlags::MSG_GEN_BOOLEAN_GROUP_SET_BOOLEAN_STATE(
                                  MINE_BOOLEAN_GROW_BIT,
                                  growBoolean) ;
    @call MineOptionFlags::MSG_GEN_BOOLEAN_GROUP_SET_BOOLEAN_STATE(
                                  MINE_BOOLEAN_TIMER_BIT,
                                  timedBoolean) ;
    @call MineOptionFlags::MSG_GEN_BOOLEAN_GROUP_SET_BOOLEAN_STATE(
                                  MINE_BOOLEAN_FLAGGING_BIT,
                                  flaggingBoolean) ;
    @call MineOptionFlags::MSG_GEN_BOOLEAN_GROUP_SET_BOOLEAN_STATE(
                                  MINE_BOOLEAN_AREA_CLEAR_BIT,
                                  areaClearBoolean) ;
    if (timedBoolean)  {
        @send MineScore::MSG_GEN_SET_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
        @send MineTimer::MSG_GEN_SET_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
    } else {
        @send MineScore::MSG_GEN_SET_NOT_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
        @send MineTimer::MSG_GEN_SET_NOT_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
    }

    @send oself::MSG_MINE_SIZE_CHANGED() ;
    MemUnlock(mine_field_handle) ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_GEN_PROCESS_CLOSE_APPLICATION
{
    FileHandle fhandle ;
    byte *mine_field ;
/*
    word error ;
*/
    mine_field = (byte *)MemLock(mine_field_handle) ;

    if (timer_going)
        TimerStop(timer_handle, timer_id) ;
    timer_going = FALSE ;

    FilePushDir() ;
    FileSetCurrentPath(mine_drive, mine_relativePath) ;
    FileCreateDir(mine_path) ;
    FileSetCurrentPath(mine_drive, mine_path) ;
    FileDelete(mine_state_file) ;
    fhandle = FileCreate(mine_state_file,
              FILE_CREATE_TRUNCATE |
              FILE_ACCESS_RW |
              FILE_DENY_NONE /* |
              FCF_NATIVE |
              FCF_NATIVE_WITH_EXT_ATTRS*/,
              FILE_ATTR_NORMAL) ;
/*
    error = ThreadGetError() ;
*/

    if (fhandle!=NullHandle)  {
        /* Make sure file at beginning */
        FilePos(fhandle, 0, FILE_POS_START) ;
        FileWrite(fhandle, &size_x, sizeof(word), FALSE) ;
        FileWrite(fhandle, &size_y, sizeof(word), FALSE) ;
        FileWrite(fhandle, mine_field, sizeof(byte)*size_x*size_y, FALSE) ;
        FileWrite(fhandle, &game_mode, sizeof(byte), FALSE) ;
        FileWrite(fhandle, &time_sec, sizeof(byte), FALSE) ;
        FileWrite(fhandle, &time_min, sizeof(byte), FALSE) ;
        FileWrite(fhandle, &time_hour, sizeof(byte), FALSE) ;
        FileWrite(fhandle, &num_mines, sizeof(word), FALSE) ;
        FileWrite(fhandle, &num_squares_left, sizeof(word), FALSE) ;
        FileWrite(fhandle, &num_flags, sizeof(word), FALSE) ;
        FileWrite(fhandle, &density, sizeof(byte), FALSE) ;
        FileWrite(fhandle, &player_score, sizeof(word), FALSE) ;
        FileWrite(fhandle, &fun_mode, sizeof(byte), FALSE) ;
        FileWrite(fhandle, &high_scores, 10*sizeof(high_score), FALSE) ;
        FileWrite(fhandle, &num_high_scores, sizeof(word), FALSE) ;
        FileWrite(fhandle, &growBoolean, sizeof(Boolean), FALSE) ;
        FileWrite(fhandle, &timedBoolean, sizeof(Boolean), FALSE) ;
        FileWrite(fhandle, &flaggingBoolean, sizeof(Boolean), FALSE) ;
        FileWrite(fhandle, &areaClearBoolean, sizeof(Boolean), FALSE) ;
        FileClose(fhandle, FALSE) ;
    }
    FilePopDir() ;

    MemUnlock(mine_field_handle) ;
    MemFree(mine_field_handle) ;
    return (@callsuper()) ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_VIEW_INVALIDATE
{
    WindowHandle win ;
    GStateHandle gstate ;

    win = @call MineView::MSG_GEN_VIEW_GET_WINDOW() ;
    gstate = GrCreateState(win) ;
    GrInvalRect(gstate, 0, 0, 2000,2000) ;
    GrDestroyState(gstate) ;
    @call MineContent::MSG_VIS_INVALIDATE();
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_VIEW_MINE_NEW
{
    byte *mine_field ;

    mine_field = (byte *)MemLock(mine_field_handle) ;

    MineMake(mine_field, size_x, size_y) ;
    @call process::MSG_VIEW_INVALIDATE() ;
    @call MineView::MSG_GEN_UPDATE_VISUAL(VUM_NOW) ;
    fun_mode = game_mode = 0 ;
    if (timer_going)
        TimerStop(timer_handle, timer_id) ;
    @call MineTimer::MSG_MINE_RESET_TIMER() ;
    @call process::MSG_MINE_UPDATE_FLAG_COUNT() ;
    player_score = (word)0x7FFF ;
    @call process::MSG_MINE_UPDATE_SCORE() ;

    MemUnlock(mine_field_handle) ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_SIZE_CHANGED
{
    word x, y ;

    x = @call MineSizeXGenValue::MSG_GEN_VALUE_GET_INTEGER_VALUE() ;
    y = @call MineSizeYGenValue::MSG_GEN_VALUE_GET_INTEGER_VALUE() ;

    if ((x!=size_x) || (y!=size_y))  {
        size_x = x ;
        size_y = y ;

        @send process::MSG_VIEW_MINE_NEW() ;
        @send MineView::MSG_GEN_VIEW_SET_DOC_BOUNDS(
                            (size_y*SQUARE_SIZE),
                            (size_x*SQUARE_SIZE),
                            0,
                            0) ;
    }
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_META_CLIPBOARD_COPY
{
    ClipboardItemHeader *headerMem ;
    MemHandle           headerMemHandle ;
    VMFileHandle        transferVMFile ;
    VMBlockHandle       dataVMBlock ;
    VMBlockHandle       headerVMBlock ;
    GStateHandle        gstate;
    RectDWord           rect = {0,0,2000,2000} ;

    @send MineApp::MSG_GEN_APPLICATION_MARK_BUSY() ;
    transferVMFile = ClipboardGetClipboardFile() ;

    gstate = GrCreateGString(transferVMFile, GST_VMEM, &dataVMBlock);
    MineDraw(gstate,&rect);
    GrEndGString(gstate);

    headerVMBlock = VMAlloc(transferVMFile, sizeof(ClipboardItemHeader), 1111) ;
    headerMem = (ClipboardItemHeader *)VMLock(
                 transferVMFile, headerVMBlock, &headerMemHandle) ;
    headerMem->CIH_owner = ConstructOptr(GeodeGetProcessHandle(), 0) ;
    headerMem->CIH_flags = 0 ;
    headerMem->CIH_name[0] = 'M' ;
    headerMem->CIH_name[1] = 'i' ;
    headerMem->CIH_name[2] = 'n' ;
    headerMem->CIH_name[3] = 'e' ;
    headerMem->CIH_name[4] = '\0' ;
    headerMem->CIH_formatCount = 1;
    headerMem->CIH_sourceID = 0 ;
    headerMem->CIH_formats[0].CIFI_format =
        FormatIDFromManufacturerAndType(
             MANUFACTURER_ID_GEOWORKS,
             CIF_GRAPHICS_STRING) ;
    headerMem->CIH_formats[0].CIFI_vmChain =
        (VMChain)(((dword)(dataVMBlock))<<16L) ;
    headerMem->CIH_formats[0].CIFI_extra1 = 0 ;
    headerMem->CIH_formats[0].CIFI_extra2 = 0 ;
    VMUnlock(headerMemHandle) ;
    ClipboardRegisterItem(BlockIDFromFileAndBlock(transferVMFile,
        headerVMBlock),
        0) ;
    @send MineApp::MSG_GEN_APPLICATION_MARK_NOT_BUSY() ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_COMPLETED
{
    if (timer_going)
        TimerStop(timer_handle, timer_id) ;
    game_mode = 2 ;
    UserDoDialog(@MineCompletedBox) ;
    if ((!fun_mode) && (player_score > high_scores[9].score))
        @send oself::MSG_MINE_PLACE_HIGH_SCORE() ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_PLACE_HIGH_SCORE
{
    high_score new_high ;
    high_score temp ;
    sword i ;

    if (timedBoolean)  {
        UserDoDialog(@MinePlaceHighScoreBox) ;
        @call PlaceHighScoreText::MSG_VIS_TEXT_GET_ALL_PTR(new_high.name) ;
        new_high.score = player_score ;

        if (num_high_scores < 10)
            num_high_scores++ ;

        for (i=0; i<10; i++)  {
            if (new_high.score > high_scores[i].score)  {
                mycopy((char *)&temp, (char *)&high_scores[i], sizeof(high_score)) ;
                mycopy((char *)&high_scores[i], (char *)&new_high, sizeof(high_score)) ;
                mycopy((char *)&new_high, (char *)&temp, sizeof(high_score)) ;
            }
        }

        @send oself::MSG_MINE_UPDATE_HIGH_SCORES() ;
    }
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_REDRAW_SQUARE_9
{
    WindowHandle win ;
    GStateHandle gstate ;
    RectDWord    rect = {0,0,2000,2000} ;

    rect.RD_left = SQUARE_SIZE*(pos_x-1) ;
    if (rect.RD_left < 0)
        rect.RD_left = 0 ;
    rect.RD_top = SQUARE_SIZE*(pos_y-1) ;
    if (rect.RD_top < 0)
        rect.RD_top = 0 ;
    rect.RD_right = SQUARE_SIZE*(pos_x+2) ;
    rect.RD_bottom = SQUARE_SIZE*(pos_y+2) ;

    win = @call MineView::MSG_GEN_VIEW_GET_WINDOW() ;
    gstate = GrCreateState(win) ;
    GrSetAreaColor(gstate, CF_INDEX, C_WHITE, 0, 0) ;
    GrFillRect(gstate, rect.RD_left, rect.RD_top,
                       rect.RD_right, rect.RD_bottom) ;
    GrDestroyState(gstate) ;
    @send process::MSG_MINE_REDRAW_SQUARE(pos_x, pos_y) ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_REDRAW_SQUARE
{
    WindowHandle win ;
    GStateHandle gstate ;
    RectDWord    rect = {0,0,2000,2000} ;

    rect.RD_left = SQUARE_SIZE*pos_x ;
    rect.RD_top = SQUARE_SIZE*pos_y ;
    rect.RD_right = SQUARE_SIZE*(pos_x+1) ;
    rect.RD_bottom = SQUARE_SIZE*(pos_y+1) ;

    win = @call MineView::MSG_GEN_VIEW_GET_WINDOW() ;
    gstate = GrCreateState(win) ;
    GrSetAreaColor(gstate, CF_INDEX, C_WHITE, 0, 0) ;
    GrFillRect(gstate, rect.RD_left, rect.RD_top,
                       rect.RD_right, rect.RD_bottom) ;
    MineDraw(gstate, &rect) ;
    GrDestroyState(gstate) ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_FOUND
{
    if (timer_going)  {
        TimerStop(timer_handle, timer_id) ;
        timer_going = FALSE ;
    }
    if (UserDoDialog(@MineFoundBox)==IC_OK)  {
        game_mode = 2 ;
        UncoverAll() ;
        @call process::MSG_VIEW_INVALIDATE() ;
        fun_mode = 0 ;
    } else {
        fun_mode = 1 ;
        timer_handle = TimerStart(TIMER_EVENT_CONTINUAL,
                                  @MineTimer,
                                  60,
                                  MSG_MINE_TIMER_CHANGE,
                                  60,
                                  &timer_id) ;
        timer_going = TRUE ;
    }
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_UNCOVER_ALL
{
    if (timer_going)
        TimerStop(timer_handle, timer_id) ;
    game_mode = 2 ;
    UncoverAll() ;
    @call process::MSG_VIEW_INVALIDATE() ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_UPDATE_FLAG_COUNT
{
    char buffer[50] ;

    MemLock(OptrToHandle(@StringFlags)) ;
    sprintf(buffer, LMemDeref(@StringFlags), num_flags, num_mines) ;
    MemUnlock(OptrToHandle(@StringFlags)) ;
    @call MineFlagCount::MSG_GEN_REPLACE_VIS_MONIKER_TEXT(buffer, VUM_NOW) ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_UPDATE_SCORE
{
    char buffer[50] ;
    sword score_time ;

    score_time = ((sword)time_hour)*720 + ((sword)time_min)*12 + (((sword)time_sec/5)) ;
    score_time = num_mines - score_time ;
    if (score_time > 0)  {
        if (score_time < player_score)  {
            player_score = score_time ;
            MemLock(OptrToHandle(@StringScore)) ;
            sprintf(buffer, LMemDeref(@StringScore), player_score) ;
            MemUnlock(OptrToHandle(@StringScore)) ;
            @call MineScore::MSG_GEN_REPLACE_VIS_MONIKER_TEXT(buffer, VUM_NOW) ;
        }
    }
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_SET_DENSITY
{
    density = selection ;
    @send process::MSG_VIEW_MINE_NEW() ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_SET_BOOLEANS
{
    Boolean old_timed ;

    old_timed = timedBoolean ;

    growBoolean = timedBoolean = flaggingBoolean = areaClearBoolean = FALSE ;
    if (selectedBooleans & MINE_BOOLEAN_GROW_BIT)
        growBoolean = TRUE ;
    if (selectedBooleans & MINE_BOOLEAN_TIMER_BIT)
        timedBoolean = TRUE ;
    if (selectedBooleans & MINE_BOOLEAN_FLAGGING_BIT)
        flaggingBoolean = TRUE ;
    if (selectedBooleans & MINE_BOOLEAN_AREA_CLEAR_BIT)
        areaClearBoolean = TRUE ;

    if (timedBoolean)  {
        @send MineScore::MSG_GEN_SET_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
        @send MineTimer::MSG_GEN_SET_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
    } else {
        @send MineScore::MSG_GEN_SET_NOT_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
        @send MineTimer::MSG_GEN_SET_NOT_USABLE(VUM_DELAYED_VIA_UI_QUEUE) ;
    }

    if (old_timed != timedBoolean)
        @send process::MSG_VIEW_MINE_NEW() ;
}
/*-------------------------------------------------------------------------*/
@method MineProcessClass, MSG_MINE_UPDATE_HIGH_SCORES
{
    static optr score_names[10] = {
           @ScoreName1,
           @ScoreName2,
           @ScoreName3,
           @ScoreName4,
           @ScoreName5,
           @ScoreName6,
           @ScoreName7,
           @ScoreName8,
           @ScoreName9,
           @ScoreName10
    } ;
    static optr score_values[10] = {
           @ScoreValue1,
           @ScoreValue2,
           @ScoreValue3,
           @ScoreValue4,
           @ScoreValue5,
           @ScoreValue6,
           @ScoreValue7,
           @ScoreValue8,
           @ScoreValue9,
           @ScoreValue10
    } ;
    word i ;
    optr who ;
    char buffer[20] ;

    for (i=0; i<10; i++)  {
        who = score_names[i] ;
        @send who::MSG_GEN_REPLACE_VIS_MONIKER_TEXT(high_scores[i].name, VUM_NOW) ;
        if (i<num_high_scores)  {
            @send who::MSG_GEN_SET_USABLE(VUM_NOW) ;
        } else {
            @send who::MSG_GEN_SET_NOT_USABLE(VUM_NOW) ;
        }
        who = score_values[i] ;
        convert_word_to_str(buffer, high_scores[i].score) ;
        @send who::MSG_GEN_REPLACE_VIS_MONIKER_TEXT(buffer, VUM_NOW) ;
        if (i<num_high_scores)  {
            @send who::MSG_GEN_SET_USABLE(VUM_NOW) ;
        } else {
            @send who::MSG_GEN_SET_NOT_USABLE(VUM_NOW) ;
        }
    }
}
/*-------------------------------------------------------------------------*/
@method MinePrimaryClass, MSG_GEN_DISPLAY_SET_MINIMIZED
{
    if (timer_going)
        TimerStop(timer_handle, timer_id) ;
    timer_going = FALSE ;
    @callsuper() ;
}
/*-------------------------------------------------------------------------*/
@method MinePrimaryClass, MSG_GEN_DISPLAY_SET_NOT_MINIMIZED
{
    if (game_mode==1)  {
        timer_handle = TimerStart(TIMER_EVENT_CONTINUAL,
                              @MineTimer,
                              120,
                              MSG_MINE_TIMER_CHANGE,
                              60,
                              &timer_id) ;
        timer_going = TRUE ;
    }
    @callsuper() ;
}
/*-------------------------------------------------------------------------*/
