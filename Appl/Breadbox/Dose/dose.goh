/***********************************************************************
 *
 *
 * PROJECT:	Insulin Dose Calculator
 * MODULE:	Dose
 * FILE:		dose.goh
 * AUTHOR:	jfh  3/04
 *
 * DESCRIPTION:
 *
 *
 *
 *
 *
 *
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *		Include files
 ***************************************************************************
 */

@include <stdapp.goh>
#include <ansi/string.h>
#include <ansi/stdlib.h>
@include <math.goh>
#include <initfile.h>
@include <objects/gadgets.goh>

/*
 ***************************************************************************
 *		defines
 ***************************************************************************
 */

#define	ACK_NO 1
#define  ACK_YES 2

#define	RB_RECORD 1

#define  DRAW_LINES 1

#define	RECORDS 1
#define	SETUP 2
#define	FIELD_LEN 10

#define	FOOD_MAX 185
#define	PORTION_MAX 50
#define	CARBS_MAX 10

#define  BREAKFAST 1
#define  MORNING 2
#define  LUNCH 3
#define  AFTERNOON 4
#define  DINNER 5
#define  EVENING 6
#define  START_BREAKFAST 0
#define  START_MORNING 9
#define  START_LUNCH 11
#define  START_AFTERNOON 14
#define  START_DINNER 17
#define  START_EVENING 19

#define  A_1 1
#define  A_7 2
#define  A_14 3
#define  A_30 4
#define  A_60 5
#define  A_90 6

#define DOC_WIDTH  240
#define DOC_HEIGHT  240
#define GRAPH_LEFT  25
#define GRAPH_TOP  20
#define GRAPH_RIGHT  230
#define GRAPH_BOTTOM  180
#define GRAPH_GLUC_TICKS 30
#define GRAPH_POINT_TICKS 10
#define GRAPH_POINT_SIZE 3
#define GRAPH_POINTS_LEFT  GRAPH_LEFT+GRAPH_POINT_TICKS/2
#define GRAPH_RIGHT_DESKTOP  380

#define GT_MEALS 1
#define GT_DAYS 2

#define EMPTY 0xffff
#define DO_UI 1
#define NO_UI 2

/*
 ***************************************************************************
 *		globals
 ***************************************************************************
 */

extern Boolean g_recordDose;
extern VMFileHandle g_vmfh;
extern ChunkHandle g_ch;
extern word g_numRecs;
extern Boolean g_onOG;
extern Boolean g_onZ;
extern word g_upperLim;
extern word g_lowerLim;
extern Boolean g_mealChanged;

/*
 ***************************************************************************
 *		structures
 ***************************************************************************
 */

/* an hour minute structure for meal/snack defualt times  */
typedef struct {
	 word		HMS_hour;
	 word		HMS_minute;
} HourMinStruct;

/* This is the structure of the dose log VM mapblock  */
typedef struct {
	 ChunkHandle	SMS_recsChunkHan;
	 HourMinStruct	SMS_mealSettings[6];
} SetupMapStruct;

/* This is the structure of the setup info saved in the setup array  */
typedef struct {
	TimerDateAndTime	SS_dateTime;
	WWFixedAsDWord		SS_sens;
	WWFixedAsDWord		SS_insRatio;
	word					SS_corr;
} SetupStruct;

/* This is the structure of the dose log VM mapblock  */
typedef struct {
	 word				RMS_numRecs;	/* the number of records */
	 ChunkHandle	RMS_recsChunkHan;
} RecsMapStruct;

/* a structure for dose records to be saved in the array */
typedef struct {
	 TimerDateAndTime	RS_dateTime;
	 char					RS_glucose[FIELD_LEN];
	 char					RS_carbs[FIELD_LEN];
	 char					RS_dose[FIELD_LEN];
    word					RS_meal;
} RecsStruct;

/* This is the structure of the carbs database VM mapblock  */
typedef struct {
	 VMBlockHandle		CMS_carbsBlockHan;
	 word					CMS_alphaArray[28];
} CarbsMapStruct;

/* This is the structure of the other data log VM mapblock */
typedef struct {
	ChunkHandle	OMS_dataChunkHan[9];
} OtherMapStruct;

/* This is the structure of the other data info */
typedef struct {
	DateParamsStruct	OS_date;
	char					OS_data[20];
} OtherStruct;

/*
 ***************************************************************************
 *		function prototypes
 ***************************************************************************
 */

word AckDBox (char* string1, char* string2, optr ackMsg);
void NotifyDBox (char* string1, optr notifyMsg);
void DrawLogTitles (void);
void SetMealFromTime(void);
void SetPCCard (void);

/*
 ***************************************************************************
 *		Class & Message Definitions
 ***************************************************************************
 */


@class	DoseProcessClass, GenProcessClass ;
	@message void MSG_DOSE_CALCULATE();
	@message void MSG_DOSE_APPLY_SETTINGS();
	@message void MSG_DOSE_APPLY_MEAL_TIMES();
	@message void MSG_DOSE_CLOSE_MEAL_TIMES();
	@message (TIME_INPUT_ACTION) MSG_DOSE_MEAL_TIMES_APPLY;
	@message void MSG_DOSE_LOG_DOSE();
	@message (GEN_BOOLEAN_GROUP_STATUS_MSG) MSG_DOSE_LOG_BOOLEAN_STATUS;

	@message void MSG_DOSE_OPEN_HISTORY();
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_DOSE_LOG_DLIST_MONIKER_QUERY;
	@message void MSG_DOSE_CLOSE_LOG();
	@message void MSG_DOSE_CLEAR_LOG();

	@message void MSG_DOSE_CALCULATE_AVG();

	@message void MSG_DOSE_EXPORT_HISTORY();

	@message void MSG_DOSE_OPEN_EBOOK();

	@message void MSG_DOSE_OPEN_ENTER_OTHER_HIST();
	@message void MSG_DOSE_ENTER_OTHER_HIST();
	@message void MSG_DOSE_VIEW_OTHER_HIST();
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_DOSE_OTHER_VIEW_DLIST_MONIKER_QUERY;
	@message void MSG_DOSE_OTHER_DELETE_ITEM();

	@message void MSG_DOSE_OPEN_BMI_CALC();
	@message void MSG_DOSE_CALC_BMI();
@endc

@class GenDoseApplicationClass GenApplicationClass;
@endc;

@class GenLogPrimaryClass GenPrimaryClass;
@endc;

@class GenCarbsPrimaryClass GenPrimaryClass;
@endc;

@class GenFavsPrimaryClass GenPrimaryClass;
@endc;

@class GenGraphPrimaryClass GenPrimaryClass;
@endc;

@class VisGraphContentClass, VisContentClass;
	@message void MSG_GRAPH_OPEN_GRAPH();
	@message void MSG_GRAPH_CLOSE_DBOX();
	@message (GEN_TRIGGER_ACTION) MSG_GRAPH_DAY_SCROLL;
	@message (GEN_TRIGGER_ACTION) MSG_GRAPH_PAGE_SCROLL;
	@message void MSG_GRAPH_SCROLL_HOME();
	@message void MSG_GRAPH_SCROLL_END();
	@message void MSG_GRAPH_SET_START(word sPoint);
	@message void MSG_GRAPH_SET_NEW_LIMITS();
	@message (GEN_ITEM_GROUP_APPLY_MSG) MSG_GRAPH_TYPE_APPLY;
	@message (GEN_BOOLEAN_GROUP_STATUS_MSG) MSG_GRAPH_LINES_BOOLEAN_STATUS;

	@instance word				VGCI_startPoint = 0xffff;
	@instance word				VGCI_graphType = GT_MEALS;
@endc;

@class GenDetailsInteractionClass GenInteractionClass;
@endc;

@class GenFDetailsInteractionClass GenInteractionClass;
@endc;

@class CarbsGenDynamicListClass GenDynamicListClass;
	@message void MSG_CARBS_OPEN_CARBS();
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_CARBS_DLIST_MONIKER_QUERY;
	@message void MSG_CARBS_CLOSE_CARBS();
	@message void MSG_CARBS_OPEN_CARBS_DETAILS();
	@message (GEN_TRIGGER_ACTION) MSG_CARBS_PREV_NEXT_DETAIL;
	@message void MSG_CARBS_OPEN_ADD_CARBS();
	@message void MSG_CARBS_ADD_CARBS();
	@message void MSG_CARBS_DELETE_FROM_CARBS();
	@message void MSG_CARBS_DELETE_FROM_CARBS_NO_CONF();
	@message void MSG_CARBS_OPEN_MODIFY_CARBS_ITEM();
	@message void MSG_CARBS_MODIFY_CARBS_ITEM();
	@message VMFileHandle MSG_CARBS_GET_CARBS_FILEHANDLE();
	@message dword MSG_CARBS_GET_NUM_RECS();
	@message void MSG_CARBS_ADD_TO_FAVS();

	@instance VMFileHandle		CGDLI_fileHandle = NullHandle;
	@instance dword				CGDLI_numCarbRecs = 0;

@endc;

@class FavsGenDynamicListClass GenDynamicListClass;
	@message void MSG_FAVS_OPEN_FAVS();
	@message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_FAVS_DLIST_MONIKER_QUERY;
	@message void MSG_FAVS_CLOSE_FAVS();
	@message void MSG_FAVS_OPEN_FAVS_DETAILS();
	@message (GEN_TRIGGER_ACTION) MSG_FAVS_PREV_NEXT_DETAIL;
	@message void MSG_FAVS_OPEN_ADD_FAVS();
	@message Boolean MSG_FAVS_ADD_FAVS(word doUI);
	@message void MSG_FAVS_DELETE_FROM_FAVS();
	@message void MSG_FAVS_DELETE_FROM_FAVS_NO_CONF();
	@message void MSG_FAVS_OPEN_MODIFY_FAVS_ITEM();
	@message void MSG_FAVS_MODIFY_FAVS_ITEM();
	@message VMFileHandle MSG_FAVS_GET_FAVS_FILEHANDLE();
	@message void MSG_FAVS_SET_FAVS_FILEHANDLE(VMFileHandle vmfh);
	@message dword MSG_FAVS_GET_NUM_RECS();

	@instance VMFileHandle		FGDLI_fileHandle = NullHandle;
	@instance dword				FGDLI_numFavRecs = 0;

@endc;




