/***********************************************************************
 *
 *	Copyright (c) Geoworks 1991-92 -- All Rights Reserved
 *
 * PROJECT:	  Fake Gopher Server
 * MODULE:	  Documentation
 * FILE:	  README
 *
 * AUTHOR:	  Alvin Cham, Dec. 5, 1994
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	12/22/95  acham	    Initial version
 *
 * DESCRIPTION:
 *	Documentation for a sample gopher server, used for testing the client.
 *
 *	$Id: README,v 1.1.4.1 97/03/29 10:55:09 canavese Exp $
 *
 ***********************************************************************/

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The Sample Gopher Server (via socket) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Contents
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Contents
Synopsis
How to use and how it works
Misc notes

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Synopsis (Overview)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

This directory contains files which implements a very simple gopher server,
which is needed for testing the gopher client via sockets using the loopback
driver mechanism, because TCP/IP or other mechanisms weren't completed 
by the time when this application was written.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
How to use and how it works
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Overview:
---------

The application contains a series of triggers.  The function for each trigger 
is as follows:

-- "Connect" -- establishes connection with the gopher client.
-- "Menu1" -- sends a sample stream of data over to the client
-- "Menu2" -- sends a sample stream of data over to the client
-- "Menu3" -- sends a sample stream of data over to the client
-- "Menu4" -- sends a sample stream of data over to the client
-- "Gopher+" -- sends a sample stream of gopher+ attribute data over to the 
		client
-- "Load" -- loads an application (the gopher client) upon socket connection.

How to begin?
-------------

To begin, the user should press the "Load" trigger so that the server would
know which application to load upon socket connection.  (The text string of 
the application that will be loaded is stored in variable "selfPath", it is 
currently set to "EC C GClient")  The user should then press the "Connect"
trigger to trigger connection to the gopher client.  (The gopher client
application will automatically be launched at this time.)      

How does it work?
-----------------

Now, we may simulate some interaction between the server and the client.  For
example:

	(1) press "connect" on the client side (connecting to the server)
	(2) press "Menu1" on the server side (sending data to client)
	(3) press "open" on the client side after highlighting a menu item
	(4) press "Menu2" on the server side (sending another stream of data)
	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Misc notes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(1)  Only the data from "menu2" and "menu3" has gopher+ attributes.  Thus, 
when trying to 'open' an item from "menu3" display, the server should 
return the data from the "gopher+" trigger first, and then another 'open' 
will ask the server to send the actual data.

(2)  To test this server, one would need the *.000 files in the directory
/staff/pcgeos/acham/Appl/GServer and place them into the 'privdata' 
directory of your local drive.  This is IMPORTANT!!




