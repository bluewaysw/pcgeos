/***********************************************************************
 *Copyright 1994-2001 Breadbox Computer Company LLC  All Rights Reserved
 *
 * PROJECT:	Breadbox Crossword Maker
 * FILE:		xwm.goh
 * AUTHOR:	John Howard   11/01
 *
 *
 *
 *
 *
 ***********************************************************************/

@include <stdapp.goh>
#include <Ansi/stdio.h>
#include <Ansi/string.h>
#include <token.h>
#include <gstring.h>
#include <initfile.h>
#include <compress.h>

/***************************************************************************
 * Constants
 **************************************************************************/

#define MANUFACTURER_ID_BREADBOX    16431

#define GRID 1
#define LIST 2
#define ANSW 3

#define GRID_MIN_SIZE       10
#define GRID_MAX_SIZE       25
#define GRID_DEFAULT_SIZE   15
#define WORD_MIN_SIZE       3
#define WORD_MAX_SIZE       10
#define WORD_LIST_MAX_SIZE  50
#define WORD_LIST_ELEMENT_SIZE  ( WORD_MAX_SIZE + 1 )
#define CLUE_TEXT_MAX_SIZE		245
#define CLUE_ELEMENT_SIZE  255

#define GRID_SPACE          ( ' ' )

#define GRID_NUM_CALC_TRIES             5
#define GRID_NUM_RANDOM_PLACE_TRIES     5

#define XWM_DOCUMENT_PROTOCOL_MAJOR     1
#define XWM_DOCUMENT_PROTOCOL_MINOR     0

#define CWD_DOC_PROTO_MAJOR = 1
#define CWD_DOC_PROTO_MINOR = 0

#define UI_DISABLE 0
#define UI_ENABLE 1

#define XWMS_SQUARE     0x0001
#define XWMS_ANSWERS    0x0002

#define DRAW_GRID_MARGINS               /*20*/1
#define DRAW_GRID_SPACE_SIZE            20
#define DRAW_GRID_TEXT_SIZE             14
#define DRAW_GRID_TEXT_FONT             FID_DTC_URW_MONO
#define DRAW_GRID_NUM_SIZE              6
#define DRAW_GRID_NUM_FONT              FID_DTC_URW_SANS
#define DRAW_GRID_MAX_SCALE_FACTOR      MakeWWFixed( 1.5 )

#define PRINT_WORD_MIN_TEXT_SIZE    MakeWWFixed( 9.0 )
#define PRINT_WORD_STEP_TEXT_SIZE   MakeWWFixed( 1.0 )
#define PRINT_WORD_MAX_TEXT_SIZE    MakeWWFixed( 14.0 )
#define PRINT_WORD_COLUMN_SPACING   (0.25 * 72)
#define PRINT_WORD_TEXT_FONT        FID_DTC_URW_MONO
#define PRINT_WORD_TEXT_BOX_WIDTH   (7.5 * 72)
#define PRINT_WORD_TEXT_BOX_HEIGHT  (3 * 72)
#define PRINT_WORD_TEXT_BOX_LEFT    (.5 * 72)
#define PRINT_WORD_TEXT_BOX_TOP     (8 * 72)
#define PRINT_GRID_BOUNDS_LEFT      (1.25 * 72)
#define PRINT_GRID_BOUNDS_TOP       (1.5 * 72)
#define PRINT_GRID_BOUNDS_RIGHT     (7.25 * 72)
#define PRINT_GRID_BOUNDS_BOTTOM    (7.5 * 72)
#define PRINT_HEADER_BOUNDS_LEFT    (1.25 * 72)
#define PRINT_HEADER_BOUNDS_RIGHT   (7.25 * 72)
#define PRINT_HEADER_BOUNDS_TOP     (.75 * 72)
#define PRINT_HEADER_TEXT_FONT      FID_DTC_URW_ROMAN
#define PRINT_HEADER_TEXT_SIZE      MakeWWFixed( 18.0 )

#define ACK_NO 1
#define ACK_YES 2

#define ADD_WORD_DUPE			WORD_LIST_MAX_SIZE+1
#define ADD_WORD_LIST_FULL		WORD_LIST_MAX_SIZE+2

/***************************************************************************
 * Structures and Types
 **************************************************************************/

typedef struct                          /* Document Map Block structure */
{
	 ChunkHandle XWMDM_wordListChunk;    /* word list chunk handle */
    ChunkHandle XWMDM_wordSearchChunk;  /* word search chunk handle */
	 ChunkHandle XWMDM_answersChunk;     /* answers array chunk handle */
	 word XWMDM_width;                     /* Width of grid */
	 word XWMDM_height;                    /* Height of grid */
	 word XWMDM_settings;                  /* Booleans from XWMSettingsOther */
}
XWMDocumentMap;

typedef struct                          /* Word list descriptor */
{
	 char XWMLE_word[WORD_LIST_ELEMENT_SIZE];
	 Boolean XWMLE_placed;
	 char XWMLE_clue[CLUE_ELEMENT_SIZE];
}
XWMListElement;

typedef struct                          /* Word search answer descriptor */
{
	 word XWMAE_row;                      /* Row of first letter */
	 word XWMAE_column;                   /* Column of first letter */
	 word XWMAE_direction;                /* Direction of word */
	 word XWMAE_length;                   /* Length of word */
	 word XWMAE_wordNum;                  /* pointer to word in list */
}
XWMAnswerElement;

typedef struct                  /* to change the exp dbox help context */
{
	char XWMHC_name[12];
}
XWMHelpContext;

/***************************************************************************
 * Globals
 **************************************************************************/

extern VMFileHandle g_fhDocument;
extern optr g_oDocument;
extern VMBlockHandle g_bhDocHeap;
extern ChunkHandle g_chDocWordList;
extern ChunkHandle g_chDocWordGrid;
extern ChunkHandle g_chDocAnswers;
extern Boolean g_bWSInitialized;
extern Boolean g_onYago;
extern word g_numPlaced;
extern word g_width;
extern word g_height;
extern word g_settings;
extern word g_cellNum;
extern word g_geosCellNum;
extern word g_cellNumArray[GRID_MAX_SIZE][GRID_MAX_SIZE];
extern word g_geosCellNumArray[GRID_MAX_SIZE][GRID_MAX_SIZE];

/***************************************************************************
 * Function defines
 **************************************************************************/

void XWMInitializePuzzle(void);
void XWMClearWordGrid(void);
void XWMMarkWordsNotPlaced(optr owl);
void XWMSetLetter(optr owg, word x, word y, char c);
char XWMGetLetter(optr owg, word x, word y);
Boolean XWMCalculatePuzzle(void);
void XWMGetDirectionOffsets(word nDir, sword *pndx, sword *pndy);
void XWMGetDocBounds(RectDWord *pr);
void XWMDrawWordGrid(GStateHandle gstate, word nLeftBound, word nTopBound,
							  word nRightBound, word nBottomBound, Boolean bPrinting);
Boolean XWMDoesCellGetNumber(optr owg, word row, word col);
void NotifyDBox (char* string1, optr notifyMsg);
word AckDBox (char* string1, char* string2, optr ackMsg);
void EnableDisableFileUI(word enOrDis);
word XWMAddWord(char* wordToAdd);

/* these are for printed output only */
void XWMDrawHeader(GStateHandle gstate, Boolean drawNameBlock);
void XWMDrawClueList(GStateHandle gstate);



word MyRandom(word range);

/***************************************************************************
 * Class definitions
 **************************************************************************/

@class XWMProcessClass, GenProcessClass;
	 @message (GEN_DYNAMIC_LIST_QUERY_MSG) MSG_XWM_PROCESS_QUERY_WORD_LIST;
	 @message (GEN_ITEM_GROUP_STATUS_MSG) MSG_XWM_PROCESS_WORD_LIST_STATUS;
	 @message void MSG_XWM_PROCESS_ADD_WORD();
    @message void MSG_XWM_PROCESS_DELETE_WORD();
	 @message void MSG_XWM_PROCESS_CALCULATE();
    @message (GEN_VALUE_STATUS_MSG) MSG_XWM_PROCESS_STATUS_WIDTH;
    @message (GEN_VALUE_STATUS_MSG) MSG_XWM_PROCESS_STATUS_HEIGHT;
    @message (GEN_VALUE_APPLY_MSG) MSG_XWM_PROCESS_APPLY_SETTINGS_WIDTH;
    @message (GEN_VALUE_APPLY_MSG) MSG_XWM_PROCESS_APPLY_SETTINGS_HEIGHT;
    @message (GEN_ITEM_GROUP_APPLY_MSG) MSG_XWM_PROCESS_APPLY_SETTINGS_LEVEL;
    @message (GEN_BOOLEAN_GROUP_APPLY_MSG) MSG_XWM_PROCESS_APPLY_SETTINGS_OTHER;
    @message (GEN_BOOLEAN_GROUP_STATUS_MSG) MSG_XWM_PROCESS_SETTINGS_OTHER_CHANGED;
	 @message void MSG_XWM_PROCESS_OPEN_CLUES_DB();
	 @message void MSG_XWM_PROCESS_ENTER_CLUE();
	 @message (GEN_TRIGGER_ACTION) MSG_XWM_PROCESS_OPEN_EXPORT_DB;
	 @message void MSG_XWM_PROCESS_MAKE_PZL();
	 @message void MSG_XWM_PROCESS_MAKE_XWORD();
	 @message void MSG_XWM_IMPORT_WORD_LIST();
	 @message (GEN_FILE_SELECTOR_NOTIFICATION_MSG) MSG_XWM_IMPORT_SELECTOR_ACTION;

@endc;

@class XWMDocumentControlClass, GenDocumentControlClass;
@endc;


