/***********************************************************************
 *
 *	Copyright (c) GlobalPC 1998 -- All Rights Reserved
 *
 * PROJECT:	Internet Dial-up and configure application.
 * MODULE:
 * FILE:	IDialup.goc
 *
 * AUTHOR:	Mingzhe Zhu, Nov 20, 1998
 *
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      mzhu   11/20/98        Initial version
 *
 * DESCRIPTION:
 *
 *	$Id: $
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *		Include files
 ***************************************************************************
 */

@include <product.goh>
@include <stdapp.goh>
#include <sockmisc.h>
@include <accpnt.goh>
@include "IDialup.goh"
@include "Art/mkrDialApp.goh"

@start APP2MONIKERRESOURCE, data;
@include "Art/mkrDialApp2.goh"
@end APP2MONIKERRESOURCE;

/*
 ***************************************************************************
 *		UI Objects
 ***************************************************************************
 */

@start	AppResource ;

@object IDialupAppClass IDialupApp = {

    GI_visMoniker = list {
      @IDialupTextMoniker,
      @DialAppSCMoniker,
   //   @DialAppSMMoniker,
      @DialApp2Moniker
      }
    GI_comp = @IDialupPrimary;
    gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = @IDialupPrimary;
    ATTR_GEN_HELP_FILE = "dialup";
}
@visMoniker IDialupTextMoniker = "Internet Dial-Up & Configure";

@end	AppResource


@start	Interface;


/*
 *  Primary Object
 */
@object IDialupPrimaryClass IDialupPrimary  = {
    GI_comp = @IDConnectionMenu, @IDOptionsMenu, @IDConnectionGroup,
	      @IDInfoGroup, @IDEditGroup, @IDVerifyPhoneGroup,
              @IDIdleNotifyDialog, @IDLIANotifyDialog, @IDSuspendNotifyDialog,
	      @IDDialingOptionsDialog;
    HINT_SIZE_WINDOW_AS_DESIRED;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
    HINT_CENTER_WINDOW;
    //    HINT_DISPLAY_MINIMIZED_ON_STARTUP;
    ATTR_GEN_HELP_CONTEXT = "TOC";
    ATTR_GEN_DISPLAY_NOT_MAXIMIZABLE;
    HINT_DISPLAY_NOT_RESIZABLE;
    // HINT_PRIMARY_MINIMIZE_REPLACES_CLOSE_FUNCTION;
/* remmed these out to show app in start bar let app minimize again if
 * user clicks it in start bar jfh - 7/17/02 */
//    HINT_PRIMARY_HIDE_MINIMIZE_UI;
//    HINT_AVOID_MENU_BAR; //??
}

@object GenInteractionClass IDConnectionMenu = {
  	GI_visMoniker = 'C', "Connections";
	GI_comp =  @IDAddConnectionButton,
	        @IDModifyConnectionButton,
	        @IDDeleteConnectionButton;
	GI_attrs = @default | GA_KBD_SEARCH_PATH;
	GII_visibility = GIV_POPUP ;
	//	ATTR_GEN_INTERACTION_GROUP_TYPE = (GIGT_VIEW_MENU);
}

@object GenInteractionClass IDOptionsMenu = {
        GI_visMoniker = 'O', "Options";
	GI_comp = @IDDialingOptionsButton, @IDShowDetailsGroup;
	GI_attrs = @default | GA_KBD_SEARCH_PATH;
	GII_visibility = GIV_POPUP;
}

@object GenTriggerClass IDDialingOptionsButton = {
    GI_visMoniker = 'D', "Dialing Options...";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_DIALING_OPTIONS;
}

@object GenBooleanGroupClass IDShowDetailsGroup = {
  GI_comp = @IDShowDetailsCheckBox;
  GBGI_destination = @IDialupApp;
  GBGI_applyMsg = MSG_IDA_SHOW_DETAILS;
}

@object GenBooleanClass IDShowDetailsCheckBox = {
  GI_visMoniker = 'S',"Show Connection Details For Dial-Up";
  GBI_identifier = 1;
  HINT_PLACE_MONIKER_TO_LEFT;
}

@object GenTriggerClass IDModifyConnectionButton = {
    GI_visMoniker = 'M', "Modify Connection...";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_EDIT_CONNECTION;
    HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass IDAddConnectionButton = {
    GI_visMoniker = 'A', "Add New Connection...";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_CREATE_CONNECTION ;
    HINT_SEEK_MENU_BAR;
}

@object GenTriggerClass IDDeleteConnectionButton = {
    GI_visMoniker = 'D', "Delete Connection...";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_DELETE_CONNECTION;
    HINT_SEEK_MENU_BAR;
}

@object GenInteractionClass IDConnectionGroup = {
    GI_visMoniker = "Network Connection";
    GI_comp = @IDConnectionListGroup,
              @IDConnectionNetType,
              @IDConnectionActivateBox,
              @IDConnectionPhoneAndLogin;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_LEFT_JUSTIFY_CHILDREN;
    HINT_DRAW_IN_BOX;
}

@object GenInteractionClass IDConnectionListGroup = {
    GI_comp = @IDConnectionList;
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
    HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY;
    HINT_DONT_INCLUDE_ENDS_IN_CHILD_SPACING;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
}

@object GenDynamicListClass IDConnectionList = {
    GIGI_destination = process;
    GIGI_applyMsg = MSG_IDP_CONNECTION_LIST_APPLY;
    GDLI_queryMsg = MSG_IDP_CONNECTION_LIST_MONIKER_QUERY;
    GIGI_behaviorType = GIGBT_EXCLUSIVE;
    HINT_ITEM_GROUP_MINIMIZE_SIZE;
    HINT_ITEM_GROUP_DISPLAY_CURRENT_SELECTION;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|60, SST_LINES_OF_TEXT|1};
}

@object GenGlyphClass IDConnectionNetType = {
    GI_visMoniker = list { @netTypeDefaultStr };
}

@object GenInteractionClass IDConnectionActivateBox = {
    GI_states = @default & ~GS_USABLE;
    GI_comp = @IDConnectionActivateTrigger;

    HINT_ORIENT_CHILDREN_HORIZONTALLY;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
    HINT_CENTER_CHILDREN_VERTICALLY;
    HINT_DRAW_IN_BOX;
}

@object GenTriggerClass IDConnectionActivateTrigger = {
    GI_visMoniker = "Activate";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_ACTIVATE;
    HINT_DEFAULT_DEFAULT_ACTION;
}

@object GenInteractionClass IDConnectionPhoneAndLogin = {
    GI_visMoniker = "Active Access Point";
    GI_states = @default & ~GS_USABLE;
    GI_comp = @IDConnectionPhoneNumberBox, @IDConnectionUserNameBox, @IDConnectionBottomBox;
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY;
    HINT_CENTER_CHILDREN_VERTICALLY;
    HINT_DRAW_IN_BOX;
}

@object GenInteractionClass IDConnectionPhoneNumberBox = {
    GI_visMoniker = "Phone Number:";
    GI_comp = @IDConnectionPhoneNumber;
    HINT_DRAW_IN_BOX;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|24, SST_LINES_OF_TEXT|2};
}

@object GenTextClass IDConnectionPhoneNumber = {
    GTXI_text = "";
    GI_attrs = @default | GA_READ_ONLY;
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
}

@object GenInteractionClass IDConnectionUserNameBox = {
    GI_visMoniker = "Login Name:";
    GI_comp = @IDConnectionUserName;
    HINT_DRAW_IN_BOX;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|24, SST_LINES_OF_TEXT|2};
}

@object GenTextClass IDConnectionUserName = {
    GTXI_text = "";
    GI_attrs = @default | GA_READ_ONLY;
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
}

@object GenInteractionClass IDConnectionBottomBox = {
    GI_comp = @IDConnectButton;
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
}

@object GenTriggerClass IDConnectButton = {
    GI_visMoniker = "Connect";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_CONNECT;
}

@end Interface

@start DBInterface;

@object GenInteractionClass IDEditGroup = {
    GI_comp = @IDEditConnectionName, @IDEditConnectionType, @IDEditPhoneNumber, @IDEditDialingOptionsGroup,
              @IDEditIP, @IDEditGateway, @IDEditMask,
              @IDEditDNS1, @IDEditDNS2,
			  @IDEditUserName, @IDEditPassword,
              @IDEditOkButton, @IDEditCancelButton;
    GII_visibility = GIV_DIALOG;
    GII_type = GIT_COMMAND;
    GII_attrs = @default | GIA_MODAL | GIA_NOT_USER_INITIATABLE;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_RIGHT_JUSTIFY_CHILDREN;
    HINT_DRAW_IN_BOX;
    ATTR_GEN_HELP_CONTEXT = "dbConnection";
    ATTR_GEN_HELP_FILE = "dialup";
}

@object GenItemGroupClass IDEditConnectionType = {
	GI_visMoniker = "Type:" ;
	GI_comp = @IDEditTypeDialUp, @IDEditTypePacketDriver, @IDEditTypeODINetwork ;
	GIGI_selection = 0 ;

    HINT_PLACE_MONIKER_ABOVE;
    HINT_ITEM_GROUP_TOOLBOX_STYLE ;
	HINT_ITEM_GROUP_DISPLAY_CURRENT_SELECTION;
    HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	GIGI_destination = process ;
	ATTR_GEN_ITEM_GROUP_STATUS_MSG = MSG_IDP_EDIT_TYPE_MODIFIED ;
}

@object GenItemClass IDEditTypeDialUp = {
	GI_visMoniker = "Dial-Up ISP" ;
	GII_identifier = NET_TYPE_PPP ;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_CENTER_MONIKER;
}

@object GenItemClass IDEditTypeODINetwork = {
	GI_visMoniker = "ODI Network" ;
	GII_identifier = NET_TYPE_ODI ;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_CENTER_MONIKER;
}

@object GenItemClass IDEditTypePacketDriver = {
	GI_visMoniker = "Packet Driver" ;
	GII_identifier = NET_TYPE_PKT ;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_CENTER_MONIKER;
}

@object GenTextClass IDEditConnectionName = {
    GI_visMoniker = "Connection name:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = 20;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}

@object GenTextClass IDEditUserName = {
    GI_visMoniker = "User name:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = 50;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}

@chunk	VisTextCharAttr PasswordStyle =
    CHAR_ATTR_FONT_SIZE(FID_BISON, 13);

@object GenTextClass IDEditPassword = {
    GI_visMoniker = "Password:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = 50;
    GTXI_destination = process;
    /* To hide the password with asteriks */
    ATTR_GEN_TEXT_CHAR_ATTR = (ChunkHandle) @PasswordStyle;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
}


/*
 * These are all of the valid dialing characters.  In case you are
 * interested, the following special dialing characters are:
 *    !   = FLASH, hang up for a brief 0.5 second, then pick back up
 *    ,   = Pause 2 or 3 seconds
 *    W/w = Wait for dialtone of some kind
 *    @   = Wait for silence
 *
 * This allows: ! # ( ) * , - 0 1 2 3 4 5 6 7 8 9 @ W w
 */
@chunk VisTextCustomFilterData PhoneFilterArray[] = {
@ifdef DO_DBCS
    {C_SPACE, C_EXCLAMATION_MARK-1},			/* After: ! */
    {C_EXCLAMATION_MARK+1, C_NUMBER_SIGN-1},		/* After: # */
@else
    {C_SPACE, C_EXCLAMATION-1},			/* After: ! */
    {C_EXCLAMATION+1, C_NUMBER_SIGN-1},		/* After: # */
@endif
    {C_NUMBER_SIGN+1, C_LEFT_PAREN-1},		/* After: ( ) * */
    {C_ASTERISK+1, C_COMMA-1},			/* After: , - */
@ifdef DO_DBCS
    {C_HYPHEN_MINUS+1, C_DIGIT_ZERO-1},			/* After: 0...9 */
    {C_DIGIT_NINE+1, C_COMMERCIAL_AT-1},			/* After: @ */
    {C_COMMERCIAL_AT+1, C_LATIN_CAPITAL_LETTER_W-1},			/* After: W */
    {C_LATIN_CAPITAL_LETTER_W+1, C_LATIN_SMALL_LETTER_W-1},			/* After: w */
    {C_LATIN_SMALL_LETTER_W+1, 0xffff}			/* That all folks! */
@else
    {C_MINUS+1, C_ZERO-1},			/* After: 0...9 */
    {C_NINE+1, C_AT_SIGN-1},			/* After: @ */
    {C_AT_SIGN+1, C_CAP_W-1},			/* After: W */
    {C_CAP_W+1, C_SMALL_W-1},			/* After: w */
    {C_SMALL_W+1, 0xffff}			/* That all folks! */
@endif
};

@object GenTextClass IDEditPhoneNumber = {
    GI_visMoniker = "Phone number:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = 60;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
    ATTR_GEN_TEXT_CUSTOM_FILTER = (ChunkHandle) @PhoneFilterArray;
}

@object GenBooleanGroupClass IDEditDialingOptionsGroup = {
    GI_comp = @IDEDOAreaCode, @IDEDOOneForLD;
    GBGI_applyMsg = MSG_IDP_EDIT_DIALING_OPTIONS_CHANGED;
    GBGI_destination = process;
    HINT_ORIENT_CHILDREN_VERTICALLY;
}

@object GenBooleanClass IDEDOAreaCode = {
    GI_visMoniker = "Always dial area code";
    GBI_identifier = IDEDO_AREA_CODE;
}

@object GenBooleanClass IDEDOOneForLD = {
    GI_visMoniker = "Always dial a 1 for long distance";
    GBI_identifier = IDEDO_ONE_FOR_LD;
}

@object IDialupIPTextClass IDEditIP = {
    GI_visMoniker = "IP Address (0.0.0.0 = DHCP):";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = MAX_IP_DECIMAL_ADDR_LENGTH;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}
@object IDialupIPTextClass IDEditMask = {
    GI_visMoniker = "IP Mask:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = MAX_IP_DECIMAL_ADDR_LENGTH;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}
@object IDialupIPTextClass IDEditGateway = {
    GI_visMoniker = "Gateway Address:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = MAX_IP_DECIMAL_ADDR_LENGTH;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}

@object IDialupIPTextClass IDEditDNS1 = {
    GI_visMoniker = "Primary DNS:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = MAX_IP_DECIMAL_ADDR_LENGTH;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}
@object IDialupIPTextClass IDEditDNS2 = {
    GI_visMoniker = "Secondary DNS:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = MAX_IP_DECIMAL_ADDR_LENGTH;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    GTXI_destination = process;
}

@object GenTriggerClass IDEditOkButton = {
    GI_visMoniker = "OK";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_EDIT_OK;
    GI_attrs =  @default;
    HINT_SEEK_REPLY_BAR;
    HINT_DEFAULT_DEFAULT_ACTION;
}

@object GenTriggerClass IDEditCancelButton = {
    GI_visMoniker = "Cancel";
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_DISMISS};
    HINT_SEEK_REPLY_BAR;
}


/*
 * This is the dialog box which asks the user to verify their phone entry.
 */
@object GenInteractionClass IDVerifyPhoneGroup = {
    GI_visMoniker = "Phone Number Confirmation";
    GI_comp = @IDVPTopText, @IDVPNumberGroup, @IDVPOK, @IDVPChange;
    GII_attrs = @default | GIA_MODAL | GIA_NOT_USER_INITIATABLE
        | GIA_INITIATED_VIA_USER_DO_DIALOG;
    GII_visibility = GIV_DIALOG;
    GII_type = GIT_AFFIRMATION;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CUSTOM_CHILD_SPACING = { SST_AVG_CHAR_WIDTHS | 2 };
}

@object GenTextClass IDVPTopText = {
	 GTXI_text = "According to the information you've entered, this is the phone number your PC will dial:";
    GI_attrs = @default | GA_READ_ONLY;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|45, 0};
    ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
}

@object GenInteractionClass IDVPNumberGroup = {
    GI_comp = @IDVPNumberGlyph;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
}

@object GenGlyphClass IDVPNumberGlyph = {};

@object GenTriggerClass IDVPOK = {
    GI_visMoniker = 'O', "OK";
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_YES};
    HINT_SEEK_REPLY_BAR;
    HINT_DEFAULT_DEFAULT_ACTION;
}

@object GenTriggerClass IDVPChange = {
    GI_visMoniker = 'C', "Change";
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_NO};
    HINT_SEEK_REPLY_BAR;
}

/*
 * This is the dialog box for editing dialing settings.
 */
@object GenInteractionClass IDDialingOptionsDialog = {
    GI_visMoniker = "Dialing Options";
    GI_comp = @IDDialingOptionsAlignGroup,
	      @IDDODialtoneGroup,
@if defined(PRODUCT_NDO2000)
              @IDDOMiscOptionsGroup,
@endif
              @IDDOOkButton, @IDDOCancelButton;
    GII_visibility = GIV_DIALOG;
    GII_type = GIT_COMMAND;
    GII_attrs = @default | GIA_MODAL | GIA_NOT_USER_INITIATABLE;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_DRAW_IN_BOX;
    ATTR_GEN_HELP_CONTEXT = "dbDialOpt";
    ATTR_GEN_HELP_FILE = "dialup";
}

@object GenInteractionClass IDDialingOptionsAlignGroup = {
    GI_comp = @IDDOAreaCode, @IDDOOutsideLine,
	      @IDDOCallWaiting, @IDDODialTypeGroup;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_ON_MONIKERS;
}

@object GenTextClass IDDOAreaCode = {
    GI_visMoniker = 'a', "Local area code:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = APDO_AREA_CODE_LEN;
    HINT_FIXED_SIZE = {SST_WIDE_CHAR_WIDTHS|3, SST_LINES_OF_TEXT|1};
    ATTR_GEN_TEXT_NUMERIC;
    ATTR_GEN_TEXT_NO_SPACES;
}

@object GenTextClass IDDOOutsideLine = {
    GI_visMoniker = 'o', "Prefix to reach outside line:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = APDO_OUTSIDE_LINE_LEN;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    ATTR_GEN_TEXT_CUSTOM_FILTER = (ChunkHandle) @PhoneFilterArray;
}

@object GenTextClass IDDOCallWaiting = {
    GI_visMoniker = 'c', "Prefix to disable call waiting:";
    GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
    GTXI_maxLength = APDO_CALL_WAITING_LEN;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|20, SST_LINES_OF_TEXT|1};
    ATTR_GEN_TEXT_CUSTOM_FILTER = (ChunkHandle) @PhoneFilterArray;
}

@object GenItemGroupClass IDDODialTypeGroup = {
    GI_visMoniker = "Dial using:";
    GI_comp = @IDDODTTone, @IDDODTPulse;
    GIGI_behaviorType = GIGBT_EXCLUSIVE;
    GIGI_selection = 'T';
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
}

@object GenItemClass IDDODTTone = {
    GI_visMoniker = 'T', "Tone";
    GII_identifier = 'T';
}

@object GenItemClass IDDODTPulse = {
    GI_visMoniker = 'P', "Pulse";
    GII_identifier = 'P';
}

@object GenBooleanGroupClass IDDODialtoneGroup = {
    GI_comp = @IDDODDialtone;
}

@object GenBooleanClass IDDODDialtone = {
    GI_visMoniker = 'W', "Wait for dialtone (uncheck if you have voice mail)";
    GBI_identifier = 1;
}

@if defined(PRODUCT_NDO2000)
@object GenBooleanGroupClass IDDOMiscOptionsGroup = {
    GI_comp = @IDDOMUseLQM;
}

@object GenBooleanClass IDDOMUseLQM = {
    GI_visMoniker = 'L', "Use Line Quality Monitoring";
    GBI_identifier = 1;
}
@endif

@object GenTriggerClass IDDOOkButton = {
@if defined(PRODUCT_NDO2000)
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_OK};
@else
    GI_visMoniker = "Change";
@endif
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_DIALING_OPTIONS_CHANGE;
    GI_attrs =  @default;
    HINT_SEEK_REPLY_BAR;
    HINT_DEFAULT_DEFAULT_ACTION;
}

@object GenTriggerClass IDDOCancelButton = {
@if defined(PRODUCT_NDO2000)
@else
    GI_visMoniker = "Don't Change";
@endif
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_DISMISS};
    HINT_SEEK_REPLY_BAR;
}

@end DBInterface

@start InfoResource ;

@chunk TCHAR statusStr[] = _TEXT("Connection status : ");
@chunk TCHAR openingStr[] = _TEXT("Initializing...");
@chunk TCHAR connectingStr[] = _TEXT("Connecting...");
@chunk TCHAR dialingStr[] = _TEXT("Dialing...");
@chunk TCHAR connectedStr[] = _TEXT("Connected");
@chunk TCHAR closingStr[] = _TEXT("Closing...");
@chunk TCHAR disconnectedStr[] = _TEXT("Disconnected");

@chunk TCHAR timeStr[] = _TEXT("Connection time : ");
@chunk TCHAR speedStr[] = _TEXT("Speed (bits per second) : ");
@chunk TCHAR sentStr[] = _TEXT("Bytes sent : ");
@chunk TCHAR receivedStr[] = _TEXT("Bytes received : ");

@object IDialupInfoClass IDInfoGroup = {

  IDI_speed = 0;

  IDI_status_x = 0;
  IDI_status_y = 0;

  IDI_time_x = 0;

  IDI_speed_x = 0;
  IDI_speed_y = 0;

  IDI_received_x = 0;

  IDI_sent_x = 0;

    GI_comp = @IDInfoStatusBox, @IDInfoDataBox, @IDDisconnectButton;
    GI_states = @default & ~GS_USABLE;
    IDII_dialogID = @IDI_DIALOG_ID_DIALUP_INFO;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_HORIZONTALLY;
    HINT_CENTER_CHILDREN_VERTICALLY;
}

@object GenInteractionClass IDInfoStatusBox = {
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_ON_MONIKERS;
    HINT_DRAW_IN_BOX;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|40, SST_LINES_OF_TEXT|3};
}

@object GenInteractionClass IDInfoDataBox = {
    GI_visMoniker = "Data Transmission";
    GI_states = @default & ~GS_USABLE;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_ON_MONIKERS;
    HINT_DRAW_IN_BOX;
    HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|40, SST_LINES_OF_TEXT|4};
}

/* This object sends to App object because while trying to connect, we
 * need handle this on the UI thread.  After we are connected, it is
 * handled on the process thread.
 */
@object GenTriggerClass IDDisconnectButton = {
    GI_visMoniker = "Disconnect";
    GTI_destination = @IDialupApp;
    GTI_actionMsg = MSG_IDA_DISCONNECT;
}

@end InfoResource

@start OtherResource ;

@object IDialupInteractionClass IDIdleNotifyDialog = {
    GI_visMoniker = "Idle Connection";
    GI_comp = @IDINText1, @IDINBox,
              @IDINKeepConnectionButton, @IDINDisconnectButton;
    GII_visibility = GIV_DIALOG;
    GII_type = GIT_COMMAND;
    GII_attrs = @default | GIA_MODAL | GIA_NOT_USER_INITIATABLE;
    IDII_dialogID = @IDI_DIALOG_ID_IDLE_NOTIFY;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_ON_MONIKERS;
    HINT_DRAW_IN_BOX;
}

@object GenInteractionClass IDINBox = {
    GI_comp = @IDINText2;
    HINT_DRAW_IN_BOX;
}

@object GenTextClass IDINText1 = {
  GI_attrs = @default | GA_READ_ONLY;
  ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
  HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|40, 0};
}

@object GenTextClass IDINText2 = {
  GI_attrs = @default | GA_READ_ONLY;
  ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
  HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|40, 0};
}

@object GenTriggerClass IDINDisconnectButton = {
    GI_visMoniker = "Disconnect";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_IDLE_DISCONNECT;
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    HINT_SEEK_REPLY_BAR;
@if defined(PRODUCT_NDO2000)
@else
    HINT_DEFAULT_DEFAULT_ACTION;
@endif
}

@object GenTriggerClass IDINKeepConnectionButton = {
    GI_visMoniker = "Stay connected";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_STAY_CONNECTED;
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_DISMISS};
    HINT_SEEK_REPLY_BAR;
@if defined(PRODUCT_NDO2000)
    HINT_DEFAULT_DEFAULT_ACTION;
@endif
}

@object IDialupInteractionClass IDLIANotifyDialog = {
    GI_comp = @IDLIANotifyText,
              @IDLIAKeepConnectionButton, @IDLIADisconnectButton;
    GII_visibility = GIV_DIALOG;
    GII_type = GIT_COMMAND;
    GII_attrs = @default | GIA_MODAL | GIA_NOT_USER_INITIATABLE;
    IDII_dialogID = @IDI_DIALOG_ID_LIA_NOTIFY;
    HINT_ORIENT_CHILDREN_VERTICALLY;
    HINT_CENTER_CHILDREN_ON_MONIKERS;
    HINT_DRAW_IN_BOX;
}

@object GenTextClass IDLIANotifyText = {
  GI_attrs = @default | GA_READ_ONLY;
  ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
  HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|40, 0};
}

@object GenTriggerClass IDLIADisconnectButton = {
    GI_visMoniker = "Disconnect";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_IDLE_DISCONNECT;
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    HINT_SEEK_REPLY_BAR;
@if defined(PRODUCT_NDO2000)
@else
    HINT_DEFAULT_DEFAULT_ACTION;
@endif
}

@object GenTriggerClass IDLIAKeepConnectionButton = {
    GI_visMoniker = "Stay connected";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_STAY_CONNECTED;
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_DISMISS};
    HINT_SEEK_REPLY_BAR;
@if defined(PRODUCT_NDO2000)
    HINT_DEFAULT_DEFAULT_ACTION;
@endif
}

@object IDialupInteractionClass IDSuspendNotifyDialog = {
    GI_comp = @IDSNText,
              @IDSNKeepConnectionButton, @IDSNDisconnectButton;
    GII_visibility = GIV_DIALOG;
    GII_type = GIT_COMMAND;
    GII_attrs = @default | GIA_MODAL | GIA_NOT_USER_INITIATABLE;
    IDII_dialogID = @IDI_DIALOG_ID_SUSPEND_NOTIFY;
}

@object GenTextClass IDSNText = {
  GTXI_text = "Warning: Your PC is still connected to the Internet.  Please power off your PC after you have disconnected.";
  GI_attrs = @default | GA_READ_ONLY;
  ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
  HINT_FIXED_SIZE = {SST_AVG_CHAR_WIDTHS|40, 0};
}

@object GenTriggerClass IDSNDisconnectButton = {
    GI_visMoniker = "Disconnect";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_IDLE_DISCONNECT;
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    HINT_SEEK_REPLY_BAR;
@if defined(PRODUCT_NDO2000)
@else
    HINT_DEFAULT_DEFAULT_ACTION;
@endif
}

@object GenTriggerClass IDSNKeepConnectionButton = {
    GI_visMoniker = "Stay connected";
    GTI_destination = process;
    GTI_actionMsg = MSG_IDP_STAY_CONNECTED;
    GI_attrs =  @default | GA_SIGNAL_INTERACTION_COMPLETE;
    ATTR_GEN_TRIGGER_INTERACTION_COMMAND = {IC_DISMISS};
    HINT_SEEK_REPLY_BAR;
@if defined(PRODUCT_NDO2000)
    HINT_DEFAULT_DEFAULT_ACTION;
@endif
}

@end OtherResource


@start StringResource, data;

@chunk TCHAR noConnectionStr[] = _TEXT("Sorry, you haven't yet configured a Network Connection, so you cannot be connected to the Internet.");
@chunk TCHAR modifyConnectionStr[] = _TEXT("Modify Connection");
@if defined(PRODUCT_NDO2000)
@chunk TCHAR changeStr[] = _TEXT("OK");
@chunk TCHAR noChangeStr[] = _TEXT("Cancel");
@else
@chunk TCHAR changeStr[] = _TEXT("Change");
@chunk TCHAR noChangeStr[] = _TEXT("Don't Change");
@endif
@chunk TCHAR addConnectionStr[] = _TEXT("Add a New Connection");
@chunk TCHAR addStr[] = _TEXT("Add");
@chunk TCHAR cancelStr[] = _TEXT("Cancel");
@chunk TCHAR deleteStr1[] = _TEXT("Are you sure you want to delete the Internet Service Provider \"");
@chunk TCHAR deleteStr2[] = _TEXT("\" from your list?");
@chunk TCHAR idleStr1[] = _TEXT("You are still connected to the Internet, but you have not been using the connection for ");
@chunk TCHAR idleStr2[] = _TEXT(" minutes. Do you want to stay connected?");
@chunk TCHAR idleStr3[] = _TEXT("For your protection, your connection will be closed in ");
@chunk TCHAR idleStr4[] = _TEXT(" minute(s) unless you click the \"Stay Connected\" button below.");
@chunk TCHAR hourStr[] = _TEXT(" hour and ");

@chunk TCHAR lastIAppStr[] = _TEXT("You no longer have any Internet programs open. Would you like to stay connected to ");

@chunk TCHAR idialStr[] = _TEXT("Internet Dialup");

@chunk TCHAR busyStr[] = _TEXT("The phone line is busy. Please try later or dial a different number");
@chunk TCHAR noDialtoneStr[] = _TEXT("No dialtone detected. Please check your phone line.");
@chunk TCHAR noCarrierStr[] = _TEXT("Cannot connect. Please check your phone line and the phone number, and try again.");
@chunk TCHAR noAnswerStr[] = _TEXT("Cannot connect. Please check the phone number.");

@chunk TCHAR authFailedStr[] = _TEXT("The password or user name for this account is incorrect.");

@chunk TCHAR deviceBusyStr[] = _TEXT("Cannot dial. The modem appears to already be in use.");
@chunk TCHAR deviceErrorStr[] = _TEXT("Cannot dial. The modem does not appear to be responding.");
@chunk TCHAR dialErrorStr[] = _TEXT("Cannot dial. Please try again.");
@chunk TCHAR callFailedStr[] = _TEXT("The call failed. Please try again.");
@chunk TCHAR negFailedStr[] = _TEXT("The modem negotiation failed. Please try again.");

@chunk TCHAR setDefaultConnectionStr[] = _TEXT("Please set the default Network Connection or connect here.");

@chunk TCHAR timeoutStr[] = _TEXT("Timeout. The server stopped responding while \
trying to connect. Please try again later.");

@chunk TCHAR invalidDNS1Str[] = _TEXT("The primary DNS address entered is not a valid IP address.  Please either check and re-enter the address or leave the field blank if this Network Connection did not provide a primary DNS server address.");
@chunk TCHAR invalidDNS2Str[] = _TEXT("The secondary DNS address entered is not a valid IP address.  Please either check and re-enter the address or leave the field blank if this Network Connection did not provide a secondary DNS server address.");

@chunk TCHAR timeoutOpenStr[] = _TEXT("Network Connection not responding.  Connection has timed out and has been closed.  Please try to connect to a different number or try to connect to this number later.");

@chunk TCHAR ConnectionLostStr[] = _TEXT("Network Connection has been lost.  Please try again later.");

@chunk TCHAR dontChangeFieldNowStr[] = _TEXT("You are currently attempting to establish a connection to the internet.  Changing desktops will interrupt this operation.  Please disconnect before changing desktops.");

@chunk TCHAR fieldChangeCloseConnStr[] = _TEXT("You currently have an open connection to the internet.  Changing desktops will close this connection.  Do you want to proceed?");

@chunk TCHAR fieldChangeAlreadyClosingStr[] = _TEXT("The internet connection is currently being closed.  Once the connection is closed, you will be taken to the other desktop.");

@chunk TCHAR dialIntStr[] = _TEXT("Attempt to connect to Network Connection was interrupted.  Please check your phone line or try again later.");

@chunk TCHAR connectionIntStr[] = _TEXT("Connection to Network Connection has been interrupted.  Please check your phone line or try connecting again.");

@chunk TCHAR invalidAreaCodeStr[] = _TEXT("The area code entered is invalid.  Please enter a valid area code.");

@chunk TCHAR verifyBlankPwdStr[] = _TEXT("You have not entered a password.  You will be asked to enter your password whenever you log on to this connection.");

@chunk TCHAR mustRestart[] = _TEXT("The type of network connection has changed. A restart is needed to continue.") ;
@chunk TCHAR mustRestartPPP[] = _TEXT("The network connection type has changed to Dial-Up (PPP). A restart is required to proceed.\r\rAfter restarting, return to this screen and click \"Connect\" to establish a connection with the selected Internet Service Provider.") ;

@chunk TCHAR noEdit[] = _TEXT("The currently active Connection cannot be deleted. Please activate a different Connection first.") ;

@chunk TCHAR activeAppendStr[] = _TEXT(" (Active)");

@visMoniker fieldChangeCloseConnYesVisMoniker = "Yes, Disconnect";
@visMoniker fieldChangeCloseConnNoVisMoniker = "No, Stay Connected";

@visMoniker netTypeDefaultStr = "Connection Type";
@visMoniker netTypeHostStr = "Type: Host Network";
@visMoniker netTypePppStr = "Type: Dial-Up ISP (PPP)";
@visMoniker netTypeOdiStr = "Type: ODI Network";
@visMoniker netTypePktStr = "Type: Packet Driver";


/* This and all of the strings below are used to produce some error
 * that may be useful to tech support if PPP produces an unusual error.
 * Perhaps if we can determine when some of these might occur, we can
 * give the user better feedback.
 */
@chunk TCHAR unknownPPPErrorClosedStr[] = _TEXT("Connection closed because of internal error: \001");
@chunk TCHAR unknownPPPErrorFailedStr[] = _TEXT("Failed to connect because of internal error: \001");

@chunk TCHAR err_ssde_blacklisted[] = _TEXT("SSDE_BLACKLISTED");
@chunk TCHAR err_ssde_delayed[] = _TEXT("SSDE_DELAYED");
@chunk TCHAR err_ssde_looped_back[] = _TEXT("SSDE_LOOPED_BACK");
@chunk TCHAR err_ssde_device_not_found[] = _TEXT("SSDE_DEVICE_NOT_FOUND");
@chunk TCHAR err_ssde_no_username[] = _TEXT("SSDE_NO_USERNAME");
@chunk TCHAR err_ssde_cancel[] = _TEXT("SSDE_CANCEL");
@chunk TCHAR err_ssde_invalid_accpnt[] = _TEXT("SSDE_INVALID_ACCPNT");
@chunk TCHAR err_ssde_login_failed[] = _TEXT("SSDE_LOGIN_FAILED");
@chunk TCHAR err_ssde_login_failed_no_notify[] = _TEXT("SSDE_LOGIN_FAILED_NO_NOTIFY");
@chunk TCHAR err_sde_timeout[] = _TEXT("SDE_CONNECTION_TIMEOUT");
@chunk TCHAR err_sde_connection_refused[] = _TEXT("SDE_CONNECTION_REFUSED");
@chunk TCHAR err_sde_medium_busy[] = _TEXT("SDE_MEDIUM_BUSY");
@chunk TCHAR err_sde_insufficient_memory[] = _TEXT("SDE_INSUFFICIENT_MEMORY");
@chunk TCHAR err_sde_not_registered[] = _TEXT("SDE_NOT_REGISTERED");
@chunk TCHAR err_sde_already_registered[] = _TEXT("SDE_ALREADY_REGISTERED");
@chunk TCHAR err_sde_connection_exists[] = _TEXT("SDE_CONNECTION_EXISTS");
@chunk TCHAR err_sde_link_open_failed[] = _TEXT("SDE_LINK_OPEN_FAILED");
@chunk TCHAR err_sde_driver_not_found[] = _TEXT("SDE_DRIVER_NOT_FOUND");
@chunk TCHAR err_sde_destination_unreach[] = _TEXT("SDE_DESTINATION_UNREACHABLE");
@chunk TCHAR err_sde_conn_reset_peer[] = _TEXT("SDE_CONNECTION_RESET_BY_PEER");
@chunk TCHAR err_sde_connection_reset[] = _TEXT("SDE_CONNECTION_RESET");
@chunk TCHAR err_sde_unsupported_function[] = _TEXT("SDE_UNSUPPORTED_FUNCTION");
@chunk TCHAR err_sde_invalid_conn_handle[] = _TEXT("SDE_INVALID_CONNECTION_HANDLE");
@chunk TCHAR err_sde_invalid_addr_link[] = _TEXT("SDE_INVALID_ADDR_FOR_LINK");
@chunk TCHAR err_sde_invalid_addr[] = _TEXT("SDE_INVALID_ADDR");
@chunk TCHAR err_sde_temporary_error[] = _TEXT("SDE_TEMPORARY_ERROR");
@chunk TCHAR err_sde_interrupted[] = _TEXT("SDE_INTERRUPTED");
@chunk TCHAR err_ppp_unknown[] = _TEXT("UNKNOWN_ERROR");


@end StringResource;
