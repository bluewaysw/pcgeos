/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	GeoDex
MODULE:		UI
FILE:		uiMain.ui

AUTHOR:		Ted H. Kim, March 3, 1992

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	ted	3/3/92		Initial revision

DESCRIPTION:
	Contains the main UI definitions for the GeoDex application.
		
	$Id: uiMain.ui,v 1.5 98/04/28 11:37:49 joon Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/


#include "product.uih"
#include "generic.uih"
#include "spool.uih"
#include "impex.uih"
#include "Internal/prodFeatures.uih"

/*---------------------------------------------------------------------------
	CONSTANTS DEFINITIONS
---------------------------------------------------------------------------*/

#ifdef DO_PIZZA
#define _PZ_PCGEOS	-1
#else
#define _PZ_PCGEOS	0
#endif

#ifdef GPC
#define _GPC	        -1
#else
#define _GPC          	0
#endif

#define _IMPEX_MERGE	-1
#define _QUICK_DIAL	-1
#define _PHONE_ICON	-1
#define _OPTIONS_MENU	-1

#if _OPTIONS_MENU
#define _OPTIONS_MENU_VIEW	-1
#else
#define _OPTIONS_MENU_VIEW	0
#endif


#if FAX_SUPPORT
#include <mailbox.uih>
#endif
#include "Objects/Text/tCtrl.uih"
/* #ifdef GPC */
/*start AppSCMonikerResource, data; */
/*#include "Art/gpcGeoDexSC.ui"  */
/*#include "Art/gpcGeoDexTC.ui"  /* used in SC cases, so leave in SC resource */
/*end AppSCMonikerResource; */
/* #else */
#include "Art/mkrGeoDex.ui"
#include "Art/mkrGeoDexTiny.ui"
/* #endif */
/*#ifdef GPC */
/*start AppSCMonikerResource, data;  */
/*#include "Art/gpcGeoDexDocSC.ui"   */
/*#include "Art/gpcGeoDexDocTC.ui"   */
/*end AppSCMonikerResource;    */
/*#else */
#include "Art/mkrGeoDexDoc.ui"
#include "Art/dexdoctiny.ui"
/*#endif */
#ifdef GPC
start BWUpMonikerResource, data;
#include "Art/gpcCalendarSC.ui"
end BWUpMonikerResource;
#else
#include "Art/mkrCalendar.ui"
#endif
#if _PHONE_ICON
#include "Art/mkrDial.ui"
#endif
#include "Art/mkrNew.ui"
#include "Art/mkrNote.ui"
#include "Art/bwUp.ui"
#include "Art/bwDown.ui"
/* #ifdef GPC */
/* we're getting a bit big in AppSCMonikerResource, so we'll add another */
start AppSCMonikerResource2, data;
#include "Art/gpcFindSC.ui"
#include "Art/gpcEmailSC.ui"
end AppSCMonikerResource2;
/* #endif */


start Interface;
end Interface;

start MenuResource;
end MenuResource;

start SearchResource;
end SearchResource;

class LettersComp = GenGadget, master {
	default attributes = default +composite;
	interface = hptrComp : null;
	rolodexApp = hptrComp : null;
	bwMidsect = hptrComp : null;
	colMidsect = hptrComp : null;
	bwBottom = hptrComp : null;
	colBottom = hptrComp : null;
	cgaMidsect = hptrComp : null;
#ifdef GPC
	lastNameMkr = nptrComp : null;
#endif
}

class Letters = GenGadget, master {
	flags = wordComp : 0;
	letter = wordComp : -1;
	rolodexApp = hptrComp : null;
	interface = hptrComp : null;
	menu = hptrComp : null;
	search = hptrComp : null;
	bwLetters = hptrComp : null;
	colLetters = hptrComp : null;
	numPts = wordComp : 0;
	coordBuf = wordComp : "22 dup (?)";
}

class TitledGenTrigger = GenTrigger, master {
	title = nptrComp: null;
	pictureNumber = byteComp: 0;
}

class NotesDialog = GenInteraction {
}

class RolodexApplication = GenApplication {
	default appFeatures = "DEFAULT_FEATURES";
}

#ifdef GPC
class AddrFieldText = GenText {
}

class SearchDynamicList = GenDynamicList {
}

class NoteIconGlyph = GenGlyph {
}
#endif

class BlackBorder = GenInteraction {
}

#ifdef EXPORT
class RolDocumentControl = GenDocumentControl {
}
#endif

start AppLCMonikerResource, data;
visMoniker DatafileMonikerList = list {
/*#ifdef GPC */
/*	GPCGeoDexDocSCMoniker,
	GPCGeoDexDocTCMoniker,  */
/*#else */
	GeoDexDocLCMoniker,
	GeoDexDocLMMoniker,
	GeoDexDocSCMoniker,
	GeoDexDocSMMoniker,
	GeoDexDocSCGAMoniker,
	GeoDexDocYCMoniker,
	GeoDexDocYMMoniker,
	GeoDexDocTCMoniker
/*#endif */
}
end	AppLCMonikerResource;

#define SINGLE_LINE_DISPLAY_ATTRIBUTES \
		singleLineText, noWordWrapping

start AppResource;

RolodexApp = RolodexApplication vardataReloc {
	children = RolodexPrimary,
		DialSummons,
		PhoneNumberListBox
#if _IMPEX_MERGE
		, ImpexMergeDialog
#endif /* _IMPEX_MERGE */
#ifdef GPC
		, NewRecordDialog
#endif
		;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = RolodexPrimary;

	gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_ACTIVE_LIST) = 
		RolUIDocControl
#if FAX_SUPPORT
		, SendControl
#endif /* FAX_SUPPORT */
		;
	gcnList(MANUFACTURER_ID_GEOWORKS,MGCNLT_APP_STARTUP) = RolUIDocControl;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
		RolUIDocControl,
		RolImportControl,
		RolExportControl,
		RolodexEditControl,
#ifdef GPC
	        NewEditMenu,
#endif
		RolodexSearchControl,
#if FAX_SUPPORT
		SendControl,
#endif
		RolPrintControl;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_STARTUP_LOAD_OPTIONS) =
		UserLevelList
#if _OPTIONS_MENU
		, OptionsMenu
#endif
		;
	moniker = list {
		GeoDexTextMoniker
		,
#ifdef GPC
		GPCGeoDexSCMoniker,
		GPCGeoDexTCMoniker
#else
		GeoDexLCMoniker,
		GeoDexLMMoniker,
		GeoDexSCMoniker,
		GeoDexSMMoniker,
		GeoDexSCGAMoniker,
		GeoDexYCMoniker,
		GeoDexYMMoniker,
		GeoDexTinyTCMoniker,
		GeoDexTinyTMMoniker,
		GeoDexTinyTCGAMoniker
#endif
	}
	hints = {
#ifdef GPC
/* dynamically changed between AUI and CUI */
		ATTR_GEN_INIT_FILE_CATEGORY {char "contacts0", 0},
#else
		ATTR_GEN_INIT_FILE_CATEGORY {char "contacts", 0},
#endif
		ATTR_GEN_APPLICATION_PRINT_CONTROL {UN_OPTR RolPrintControl},
		ATTR_GEN_APPLICATION_ADDITIONAL_TOKENS {
			GeodeToken <<'ADBK'>, MANUFACTURER_ID_GENERIC>
		}
/*#if _OPTIONS_MENU
		,   */
/*#ifdef GPC  */
/*#if !_NDO1998
		ATTR_GEN_APPLICATION_RESET_OPTIONS_TRIGGER {
			UN_OPTR ResetOptionsTrigger
		}, */
/*#endif   */
/*#endif
		ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER {
			UN_OPTR SaveOptionsTrigger
		}  */
/*#endif */
		,
		ATTR_GEN_HELP_FILE {
		    char "address", 0
		}
	}
}

visMoniker GeoDexTextMoniker = "Contacts";
	   
end AppResource;

start Interface;

#ifdef GPC
RolodexPrimary = GenPrimary vardataReloc {
#else
RolodexPrimary = GenPrimary {
#endif
	children = 
		   ConfirmBox,
#if _QUICK_DIAL
		   ConfirmBox2,
#endif
		   NotesBox,
		   FileMenu,
		   EditMenu,
		   ShowMenu,
#if _OPTIONS_MENU
		   OptionsMenu,
#endif
		   UtilMenu,
#if  _QUICK_DIAL 
		   QuickDialWindow,
#endif
	           /*BothView*/Border;

	hints = { 
#ifdef GPC
#if !_NDO1998
		ATTR_GEN_PRIMARY_DONE_ON_CLOSE {
		    lptr 0
		    UN_OPTR RolUIDocControl
		    optr 0
		    UN_OPTR RolPrintControl
		    lptr 0, 0
		    lptr 0, 0
		    lptr 0, offset RolodexDoneText
		    lptr 0
		    lptr 0, 0
		},
		HINT_DISPLAY_NOT_RESIZABLE,
#endif
#endif
		HINT_SIZE_WINDOW_AS_DESIRED,
		ATTR_GEN_HELP_CONTEXT {
			char "TOC", 0
		}
	}
}

#ifdef GPC
visMoniker RolodexDoneText = "Close the document and exit Contacts.";
#endif

Border = BlackBorder {
        children = BothView;
	hints = {
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
	    HINT_CENTER_CHILDREN_HORIZONTALLY,
	    HINT_CENTER_CHILDREN_VERTICALLY
	}
}

	/* The main object that holds the record data in GeoDex */

BothView = GenInteraction {
	genStates = default -enabled;
	children = CardView, BrowseView;
	hints = { 
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}

}

CardView = GenInteraction {
	children = Card,
		   PageButtons;
	hints = { 
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}

	/* The composite gadget that displays all of the text fields */

Card = LettersComp {
	children = MyLetters, Records;
	interface = Interface;
	rolodexApp = AppResource;
	bwMidsect = BWMidsectResource;
	colMidsect = ColorMidsectResource;
	bwBottom = BWBottomResource;
	colBottom = ColorBottomResource;
	cgaMidsect = CGABWMidsectResource;
#ifdef GPC
	lastNameMkr = LastNameExplanationMoniker;
#endif
}
	/* The letter tab gadget definition */

MyLetters = Letters {
	rolodexApp = AppResource;
	interface = Interface;
	menu = MenuResource;
	search = SearchResource;
	bwLetters = BWLettersResource;
	colLetters = ColorLettersResource;
}

/***************************************************************************
			Record Field Definitions
***************************************************************************/

Records = GenInteraction {
#ifdef GPC
	children = LastNameFieldGroup,
#else
	children = LastNameField,
#endif
#ifdef DO_PIZZA
		   PhoneticField,
		   ZipField,
#endif
#ifdef GPC
	           StaticPhoneSixGroup,/*moved here*/
		   AddrBoxGroup,
#else
		   AddrBox,
#endif
#ifdef GPC
		   AllPhoneFields;
#else
		   PhoneFields;
#endif
	hints = { HINT_ORIENT_CHILDREN_VERTICALLY } 
}

#ifdef GPC
LastNameFieldGroup = GenInteraction {
        children = LastNameFields, NoteIcon;
	hints = {
	    HINT_ORIENT_CHILDREN_HORIZONTALLY,
	    HINT_CENTER_CHILDREN_VERTICALLY
	}
}
#include "Art/gpcNoteIcon.ui"
visMoniker NoNoteIconMoniker = {
    gstring {
	GSBeginString
	GSSetAreaColor 255, 255, 255
	GSFillRect 0, 0, 15, 12
	GSEndString
    }
}
NoteIcon = NoteIconGlyph {
        /* moniker is toggled */
        moniker = NoNoteIconMoniker;
	hints = {
	    HINT_GADGET_BACKGROUND_COLORS {
		Color C_WHITE
		Color C_WHITE
		Color C_WHITE
		Color C_WHITE
	    }
	}
}
LastNameFields = GenInteraction {
	children = LastNameMoniker, LastNameField;
	hints = {
	    HINT_CUSTOM_CHILD_SPACING {
		word 0
	    }
	}
}
LastNameMoniker = GenInteraction {
	children = LastNameTitle, LastNameExplanation;
	hints = {
	    HINT_ORIENT_CHILDREN_HORIZONTALLY,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
	    HINT_BOTTOM_JUSTIFY_CHILDREN
	}
}
LastNameTitle = GenGlyph {
	moniker = "Name:";
}
LastNameExplanation = GenGlyph {
	moniker = LastNameExplanationMoniker;
}
/* This moniker must *exactly* match NewLastNameExplanationMoniker */
/* ...and the byte offset coded into LettersCompSpecBuild()        */
visMoniker LastNameExplanationMoniker = {
    gstring {
	GSBeginString
	GSSaveState
	GSSetFont FID_UNIVERSITY, 10, 0
	GSDrawTextOptr 0, 0, LastNameString
	GSRestoreState
	GSEndString
    }
}
#endif

LastNameField = GenText {
	/* applyMsg = MSG_ROLODEX_CR; */
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = SORT_BUFFER_LENGTH;
#ifdef DO_PIZZA
	moniker = LastNameMoniker;
#endif
	hints = { 
		  ATTR_GEN_PROPERTY,
		  ATTR_GEN_TEXT_STATUS_MSG {
			word	MSG_ROLODEX_CR
		  },
#ifndef GPC
		  ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR {
	   	     VisTextDefaultCharAttr <
			0, 0, 0,		 /* underline, bold, italic */
			C_BLACK,		 /* color */
#ifdef DO_PIZZA
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
#else
			VTDS_10,		 /* size */
			VTDF_BERKELEY		 /* font */
#endif
		     >
		  },
#endif
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED,
#ifdef GPC
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 210>
			SpecHeight <>
		  },
#else
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 220>
			SpecHeight <>
		  },
#endif
#ifndef DO_PIZZA
		  HINT_DEFAULT_FOCUS,
#endif
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,		;SCPI_index
			    CF_INDEX,		;SCPI_info.
			    0, 0		;SCPI_unused
		    >
    	    	   }
	}
}

#ifdef DO_PIZZA
/**********************************************************************
 *		start DO_PIZZA
 **********************************************************************/

visMoniker LastNameMoniker = "Index:";

PhoneticField = GenText {
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = SORT_BUFFER_LENGTH;
	moniker = PhoneticMoniker;
	hints = { 
		  ATTR_GEN_PROPERTY,
		  ATTR_GEN_TEXT_STATUS_MSG {
			word	MSG_ROLODEX_PHONETIC_CR
		  },
		  ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR {
	   	     VisTextDefaultCharAttr <
			0, 0, 0,		 /* underline, bold, italic */
			C_BLACK,		 /* color */
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
		     >
		  },
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 146>
			SpecHeight <>
		  },
		  HINT_DEFAULT_FOCUS,
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,		;SCPI_index
			    CF_INDEX,		;SCPI_info.
			    0, 0		;SCPI_unused
		    >
    	    	   }
	}
}

visMoniker PhoneticMoniker = "Name:";

ZipField = GenText {
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = SORT_BUFFER_LENGTH;
	moniker = ZipMoniker;
	hints = { 
		  ATTR_GEN_PROPERTY,
		  ATTR_GEN_TEXT_STATUS_MSG {
			word	MSG_ROLODEX_ZIP_CR
		  },
		  ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR {
	   	     VisTextDefaultCharAttr <
			0, 0, 0,		 /* underline, bold, italic */
			C_BLACK,		 /* color */
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
		     >
		  },
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 100> /* must handle full- */
			SpecHeight <>		    /* width characters  */
		  },
		  HINT_DEFAULT_FOCUS,
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,		;SCPI_index
			    CF_INDEX,		;SCPI_info.
			    0, 0		;SCPI_unused
		    >
    	    	   }
	}
}

visMoniker ZipMoniker = "ZipCode:";

/**********************************************************************
 *		end DO_PIZZA
 **********************************************************************/
#endif

#ifdef GPC
AddrBoxGroup = GenInteraction {
	children = AddrTitle, AddrBox;
	hints = {
	    HINT_CUSTOM_CHILD_SPACING {
		word 0
	    }
	}
}
AddrTitle = GenGlyph {
#ifdef GPC
	moniker = "Full Mailing Address:";
#else
	moniker = "Address:";
#endif
}
#endif
AddrBox = GenInteraction {
	children = AddrField;
}

#ifdef GPC
AddrField = AddrFieldText {
#else
AddrField = GenText {
#endif
        destination = process;
	maxLength = ADDR_FIELD_LENGTH;
	genAttributes = targetable;
#ifdef GPC
	textDisplayAttributes = default +useTabForNavigation, +initScrolling;
#else
	textDisplayAttributes = default -useTabForNavigation;
#endif
	hints = { 
#ifndef GPC
		  ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR {
	   	     VisTextDefaultCharAttr <
			0, 0, 0,		 /* underline, bold, italic */
			C_BLACK,		 /* color */
#ifdef DO_PIZZA
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
#else
			VTDS_10,		 /* size */
			VTDF_BERKELEY		 /* font */
#endif
		     >
		  },
#endif
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 220>
#ifdef GPC
			SpecHeight <SST_LINES_OF_TEXT, 4>
#else
			SpecHeight <SST_PIXELS, 52>
#endif
		  },
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,		;    SCPI_index
			    CF_INDEX,		;SCPI_info.
			    0, 0		;    SCPI_unused
		    >
    	    	   }
	}
}

	/* Phone number related objects */

#ifdef GPC

AllPhoneFields = GenInteraction {
	children = StaticPhoneFields;
}


#if _NDO2000

#define STATIC_PHONE_NAME_VALUES \
        destination = process; \
	genAttributes = targetable; \
	textDisplayAttributes = default +singleLineText; \
	maxLength = PHONE_NO_LENGTH; \
	hints = { \
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL, \
		  HINT_FIXED_SIZE { \
			SpecWidth <SST_PIXELS, 63>, \
			SpecHeight <SST_LINES_OF_TEXT, 1> \
		  }, \
		  HINT_TEXT_WASH_COLOR { \
		    ColorQuad < \
			    C_WHITE, \
                            CF_INDEX, \
			    0, 0 \
		    > \
    	    	   } \
	}

#else

#define STATIC_PHONE_NAME_VALUES \
	genAttributes = targetable, readOnly; \
	textDisplayAttributes = default +singleLineText; \
	maxLength = PHONE_NO_LENGTH; \
	hints = { \
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL, \
		  HINT_FIXED_SIZE { \
			SpecWidth <SST_PIXELS, 65>, \
			SpecHeight <SST_LINES_OF_TEXT, 1> \
		  }, \
		  HINT_TEXT_WASH_COLOR { \
		    ColorQuad < \
			    C_WHITE, \
                            CF_INDEX, \
			    0, 0 \
		    > \
    	    	   } \
	}

#endif

#define STATIC_PHONE_NUMBER_VALUES \
        destination = process; \
	genAttributes = targetable; \
	textDisplayAttributes = default +singleLineText; \
	maxLength = PHONE_NO_LENGTH; \
	hints = { \
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL, \
		  HINT_FIXED_SIZE { \
			SpecWidth <SST_PIXELS, 148>, \
			SpecHeight <SST_LINES_OF_TEXT, 1> \
		  }, \
		  HINT_TEXT_WASH_COLOR { \
		    ColorQuad < \
			    C_WHITE, \
                            CF_INDEX, \
			    0, 0 \
		    > \
    	    	   } \
	}

StaticPhoneFields = GenInteraction {
	children = /*StaticPhoneSixGroup,*//*moved above AddrField*/
			StaticPhoneOneGroup,
			StaticPhoneTwoGroup,
			StaticPhoneThreeGroup,
			StaticPhoneFourGroup,
			StaticPhoneFiveGroup,
			StaticPhoneSevenGroup;
	hints = {
	    HINT_CUSTOM_CHILD_SPACING {
		word 1
	    }
	}
}

/* not visible to user */
StaticPhoneBlankGroup = GenInteraction {
	children = StaticPhoneBlankName, StaticPhoneBlankNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneBlankName = GenText {
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneBlankNumber = GenText {
	STATIC_PHONE_NUMBER_VALUES
}

StaticPhoneOneGroup = GenInteraction {
	children = StaticPhoneOneName, StaticPhoneOneNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneOneName = GenText {
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneOneNumber = GenText {
	STATIC_PHONE_NUMBER_VALUES
}

StaticPhoneTwoGroup = GenInteraction {
	children = StaticPhoneTwoName, StaticPhoneTwoNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneTwoName = GenText {
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneTwoNumber = GenText {
	STATIC_PHONE_NUMBER_VALUES
}

StaticPhoneThreeGroup = GenInteraction {
	children = StaticPhoneThreeName, StaticPhoneThreeNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneThreeName = GenText {
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneThreeNumber = GenText {
	STATIC_PHONE_NUMBER_VALUES
}

StaticPhoneFourGroup = GenInteraction {
	children = StaticPhoneFourName, StaticPhoneFourNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneFourName = GenText {
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneFourNumber = GenText {
	STATIC_PHONE_NUMBER_VALUES
}

StaticPhoneFiveGroup = GenInteraction {
	children = StaticPhoneFiveName, StaticPhoneFiveNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneFiveName = GenText {
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneFiveNumber = GenText {
	STATIC_PHONE_NUMBER_VALUES
}

/* email */
StaticPhoneSixGroup = GenInteraction {
	children = StaticPhoneSixName, StaticPhoneSixNumber;
	/* vertical */
	hints = {
	    HINT_CUSTOM_CHILD_SPACING {
		word 0
	    }
	}
}
StaticPhoneSixName = GenText {
#if !_NDO2000
    destination = process;
#endif
	STATIC_PHONE_NAME_VALUES
}
StaticPhoneSixNumber = GenText {
    /* wider than others */
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = PHONE_NO_LENGTH;
	hints = {
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 148+65+5>,
			SpecHeight <SST_LINES_OF_TEXT, 1>
		  },
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,
                            CF_INDEX,
			    0, 0
		    >
    	    	   }
	}
}

StaticPhoneSevenGroup = GenInteraction {
	children = StaticPhoneSevenName, StaticPhoneSevenNumber;
	hints = {
	    HINT_CENTER_CHILDREN_VERTICALLY,
	    HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}
StaticPhoneSevenName = GenText {
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = PHONE_NO_LENGTH;
	hints = {
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 63>,
			SpecHeight <SST_LINES_OF_TEXT, 1>
		  },
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,
                            CF_INDEX,
			    0, 0
		    >
    	    	   }
	}
}
StaticPhoneSevenNumber = GenText vardataReloc {
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = PHONE_NO_LENGTH;
	hints = {
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 148>,
			SpecHeight <SST_LINES_OF_TEXT, 1>
		  },
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,
                            CF_INDEX,
			    0, 0
		    >
		  },
		  HINT_ALIGN_LEFT_EDGE_WITH_OBJECT {
		      UN_OPTR StaticPhoneOneNumber
		  }
	}
}

#else

PhoneFields = GenInteraction {
	children = ScrollButtons, 
		PhoneNoTypeField, 
		PhoneNoField;
	hints = { HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 1>
		  },
		  HINT_ORIENT_CHILDREN_HORIZONTALLY }
}

#endif  /* GPC */

ScrollButtons	= GenInteraction {
	children = ScrollUpTrigger, ScrollDownTrigger;
	hints = { HINT_ORIENT_CHILDREN_VERTICALLY,
		  HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 1>
		  }
		}
}

ScrollUpTrigger = GenTrigger {
	moniker = {
	    cachedSize = 14, 9;
	    gstring {
		GSBeginString
		GSFillBitmapAtCP <(EndScrollUpBM-StartScrollUpBM)
		StartScrollUpBM	label	byte
			dw	14
			dw	9
			db	0, BMF_MONO			
			db	00000000b,00000000b
			db	00000000b,00000000b
			db	00000001b,00000000b
			db	00000011b,10000000b
			db	00000111b,11000000b
			db	00001111b,11100000b
			db	00011111b,11110000b
			db	00111111b,11111000b
			db	00000000b,00000000b
		EndScrollUpBM	label	byte
		GSEndString
	    }
	}
	kbdAccelerator = control 'U';
	genAttributes = default +initiatesInputHoldUp;
	action = MSG_ROLODEX_PHONE_UP, process;
	hints = { HINT_DONT_SHOW_SHORTCUT }
}

ScrollDownTrigger = GenTrigger {
	moniker = {
	    cachedSize = 14, 9;
	    gstring {
		GSBeginString
		GSFillBitmapAtCP <(EndScrollDownBM-StartScrollDownBM)>
		StartScrollDownBM	label	byte
			dw	14
			dw	9
			db	0, BMF_MONO			
			db	00000000b,00000000b
			db	00000000b,00000000b
			db	00111111b,11111000b
			db	00011111b,11110000b
			db	00001111b,11100000b
			db	00000111b,11000000b
			db	00000011b,10000000b
			db	00000001b,00000000b
			db	00000000b,00000000b
		EndScrollDownBM	label	byte
		GSEndString
	    }
	}
	kbdAccelerator = control 'D';
	genAttributes = default +initiatesInputHoldUp;
	action = MSG_ROLODEX_PHONE_DOWN, process;
	hints = { HINT_DONT_SHOW_SHORTCUT,
		  ATTR_GEN_TRIGGER_ACTION_DATA {
				word	0
		  }
	}
}

PhoneNoTypeField = GenText {
	destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = PHONE_TYPE_LENGTH;
	hints = { 
		  ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR {
	   	     VisTextDefaultCharAttr <
			0, 0, 0,		 /* underline, bold, italic */
			C_BLACK,		 /* color */
#ifdef DO_PIZZA
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
#else
			VTDS_10,		 /* size */
			VTDF_BERKELEY		 /* font */
#endif
		     >
		  },
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 40>
			SpecHeight <>
		  },
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,		;    SCPI_index
                            CF_INDEX,        ;SCPI_info.
			    0, 0		;    SCPI_unused
		    >
    	    	   }
	}
}

PhoneNoField = GenText {
	applyMsg = MSG_ROLODEX_PHONE_DOWN;
        destination = process;
	genAttributes = targetable;
	textDisplayAttributes = default +singleLineText;
	maxLength = PHONE_NO_LENGTH;
	hints = { 
		  ATTR_GEN_TEXT_DEFAULT_CHAR_ATTR {
	   	     VisTextDefaultCharAttr <
			0, 0, 0,		 /* underline, bold, italic */
			C_BLACK,		 /* color */
#ifdef DO_PIZZA
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
#else
			VTDS_10,		 /* size */
			VTDF_BERKELEY		 /* font */
#endif
		     >
		  },
		  ATTR_GEN_TEXT_DO_NOT_INTERACT_WITH_SEARCH_CONTROL,
		  ATTR_GEN_SEND_APPLY_MSG_ON_APPLY_EVEN_IF_NOT_MODIFIED,
		  HINT_FIXED_SIZE {
			SpecWidth <SST_PIXELS, 148>
			SpecHeight <>
		  },
		  HINT_TEXT_WASH_COLOR {
		    ColorQuad <
			    C_WHITE,		;    SCPI_index
                            CF_INDEX,        ;SCPI_info.
			    0, 0		;    SCPI_unused
		    >
    	    	   }
	}
}

#if _PHONE_ICON
#ifdef GPC
visMoniker DialTextMoniker = "Dial";
AutoDialTrigger = GenTrigger {
#if !NDO_ROLODEX_ORIGINAL_UI
#	genStates = default -usable;
#endif
	moniker = list {
		DialTextMoniker,	  
		DialSMMoniker,
		DialSCMoniker
	}
#else
AutoDialTrigger = TitledGenTrigger {
	title = "Dial";
	pictureNumber = 5;
#endif


	kbdAccelerator = control 'L';
	genAttributes = default + initiatesInputIgnore;
	action = MSG_ROLODEX_AUTO_DIAL, process;
#ifdef GPC
	hints = { HINT_DONT_SHOW_SHORTCUT,
		ATTR_GEN_TRIGGER_ACTION_DATA {
				word    -1
		},
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_CENTER_MONIKER,
		ATTR_GEN_FOCUS_HELP {
		    optr AutoDialTriggerHelp
		},
#if !_NDO1998
            /* Older versions of the software can't access new hints. */
	    HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
		IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	    }
#endif
	}
#endif
}
chunk AutoDialTriggerHelp = "Use modem to dial phone";
#endif
	/* All of the buttons for GeoDex */

PageButtons = GenInteraction {
	children = PreviousTrigger, NextTrigger,
		NewTrigger, NotesTrigger
#ifdef GPC
	  /*      , EmailTrigger   */
	        , FindTrigger
#endif
		, CalendarTrigger
#if NDO_ROLODEX_ORIGINAL_UI || _PHONE_ICON
 		, AutoDialTrigger
#endif
		;
	hints = { HINT_ORIENT_CHILDREN_VERTICALLY,
		  HINT_CUSTOM_CHILD_SPACING {
			SpecSizeSpec <SST_PIXELS, 1>
		  }
	}
}


#ifdef GPC
visMoniker PreviousText = " Prev ";
PreviousTrigger = GenTrigger {
	moniker = list { PreviousText, GPCUpSCMoniker }
#else
PreviousTrigger = TitledGenTrigger {
	title = "Previous";
	pictureNumber = 0;
#endif
	kbdAccelerator = specificUI PAGEUP;
	genAttributes = default +initiatesInputHoldUp;
	action = MSG_ROLODEX_PREVIOUS, process;
#ifdef GPC
	hints = {
	    HINT_CENTER_MONIKER,
	    HINT_DONT_SHOW_SHORTCUT,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    ATTR_GEN_FOCUS_HELP {
		optr PreviousTriggerHelp
	    },
#if !_NDO1998
            /* Older versions of the software can't access new hints. */
	    HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
		IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	    },
	    ATTR_GEN_FOCUS_DISABLED_HELP {
		optr PreviousTriggerDisabledHelp
	    }
#endif
	}
#else
	hints = {
	    HINT_DONT_SHOW_SHORTCUT,
	    ATTR_GEN_FOCUS_HELP {
		optr PreviousTriggerHelp
	    },
#if !_NDO1998
	    ATTR_GEN_FOCUS_DISABLED_HELP {
		optr PreviousTriggerDisabledHelp
	    }
#endif
	}
#endif
}
chunk PreviousTriggerHelp = "Display the previous card";
chunk PreviousTriggerDisabledHelp = "No previous card to display";

#ifdef GPC
visMoniker NextText = "Next";
NextTrigger = GenTrigger {
	moniker = list { NextText, GPCDownSCMoniker }
#else
NextTrigger = TitledGenTrigger {
	title = "Next";
	pictureNumber = 1;
#endif
	kbdAccelerator = specificUI PAGEDOWN;
	genAttributes = default +initiatesInputHoldUp;
	action = MSG_ROLODEX_NEXT, process;
#ifdef GPC
	hints = {
	    HINT_CENTER_MONIKER,
	    HINT_DONT_SHOW_SHORTCUT,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    ATTR_GEN_FOCUS_HELP {
		optr NextTriggerHelp
	    },
#if !_NDO1998
            /* Older versions of the software can't access new hints. */
	    HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
		IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	    },
	    ATTR_GEN_FOCUS_DISABLED_HELP {
		optr NextTriggerDisabledHelp
	    }
#endif
	}
#else
	hints = {
	    HINT_DONT_SHOW_SHORTCUT,
	    ATTR_GEN_FOCUS_HELP {
		optr NextTriggerHelp
	    },
#if !_NDO1998
	    ATTR_GEN_FOCUS_DISABLED_HELP {
		optr NextTriggerDisabledHelp
	    }
#endif
	}
#endif
}
chunk NextTriggerHelp = "Display the next card";
chunk NextTriggerDisabledHelp = "No next card to display";

#ifdef GPC
visMoniker NewText = "New";
NewTrigger = GenTrigger {
	moniker = list { NewText, GPCNewSCMoniker }
#else
NewTrigger = TitledGenTrigger {
	title = "New";
	pictureNumber = 2;
#endif
	kbdAccelerator = control 'N';
	genAttributes = default +initiatesInputHoldUp;
#ifdef GPC
	action = MSG_ROLODEX_NEW_INITIATE, process;
#else
	action = MSG_ROLODEX_NEW, process;
#endif
#ifdef GPC
	hints = {
#if !_NDO1998
	    HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
		IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	    },
#endif
	    HINT_CENTER_MONIKER,
	    HINT_DONT_SHOW_SHORTCUT,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    ATTR_GEN_FOCUS_HELP {
		optr NewTriggerHelp
	    }
	}
#else
	hints = {
	    HINT_DONT_SHOW_SHORTCUT,
	    ATTR_GEN_FOCUS_HELP {
		optr NewTriggerHelp
	    }
	}
#endif
}
chunk NewTriggerHelp = "Create a new card";

#ifdef GPC
visMoniker NotesText = "Notes";
NotesTrigger = GenTrigger {
	moniker = list { NotesText, GPCNoteSCMoniker }
#else
NotesTrigger = TitledGenTrigger {
	title = "Notes";
	pictureNumber = 3;
#endif
	action = MSG_ROLODEX_NOTES, process;
#ifdef GPC
	hints = {
#if !_NDO1998
	    HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
		IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	    },
#endif
	    HINT_CENTER_MONIKER,
	    HINT_DONT_SHOW_SHORTCUT,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    ATTR_GEN_FOCUS_HELP {
		optr NotesTriggerHelp
	    }
	}
#endif
}
chunk NotesTriggerHelp = "Edit notes for this card";

#ifdef GPC
visMoniker CalendarText = "Calendar";
CalendarTrigger = GenTrigger {
	moniker = list { CalendarText, GPCCalendarSCMoniker }
#else
CalendarTrigger = TitledGenTrigger {
	title = "Calendar";
	pictureNumber = 4;
#endif
	genStates = default -enabled;
	action = MSG_ROLODEX_CALL_CALENDAR, process;
#ifdef GPC
	hints = {
	    HINT_CENTER_MONIKER,
	    HINT_DONT_SHOW_SHORTCUT,
	    HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	    ATTR_GEN_FOCUS_HELP {
		optr CalendarTriggerHelp
	    },
#if !_NDO1998
            /* Older versions of the software can't access new hints. */
	    HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
		IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	    },
	    ATTR_GEN_FOCUS_DISABLED_HELP {
		optr CalendarTriggerDisabledHelp
	    }
#endif
	}
#endif
}
chunk CalendarTriggerHelp = "Search Calendar data";
chunk CalendarTriggerDisabledHelp = "Select some text to find in Calendar data";

#ifdef GPC
visMoniker EmailText = "Email";
EmailTrigger = GenTrigger {
/*	 genStates = default -enabled;  */
	 genStates = default -usable;
	 moniker = list { EmailText, GPCEmailSCMoniker }
    action = MSG_ROLODEX_CALL_EMAIL, process;
    hints = {
#if !_NDO1998
	HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
	    IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	},
#endif
	HINT_CENTER_MONIKER,
	HINT_DONT_SHOW_SHORTCUT,
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	ATTR_GEN_FOCUS_HELP {
	    optr EmailTriggerHelp
	}
    }
}
chunk EmailTriggerHelp = "Send Email";

visMoniker FindText = "Find";
FindTrigger = GenTrigger {
    moniker = list { FindText, GPCFindSCMoniker }
    action = MSG_GEN_INTERACTION_INITIATE, RolodexSearchControl;
    hints = {
#if !_NDO1998
	HINT_USE_ICON_TEXT_COMBINATION_MONIKER {
	    IconTextMonikerParams<mask ITMF_POSITION_ICON_ABOVE_TEXT, 2>
	},
#endif
	HINT_CENTER_MONIKER,
	HINT_DONT_SHOW_SHORTCUT,
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	ATTR_GEN_FOCUS_HELP {
	    optr FindTriggerHelp
	}
    }
}
chunk FindTriggerHelp = "Search for a card";
#endif

end Interface;

	/* The right side of the both view.  */

start	SearchResource;

BrowseView = GenInteraction {
	children = 
		SearchList;
	genStates = default -usable;
}

#ifdef GPC
SearchList = SearchDynamicList {
#else
SearchList = GenDynamicList {
#endif
	numSelections = 1;
	applyMsg = MSG_ROLODEX_FIND_RECORD;
	queryMsg = MSG_ROLODEX_REQUEST_ENTRY_MONIKER;
	destination = process;
	hints = {
		HINT_ITEM_GROUP_SCROLLABLE,
		ATTR_GEN_ITEM_GROUP_CUSTOM_DOUBLE_PRESS {
			word	MSG_ROLODEX_EXPAND_TO_BOTH_VIEW
		},
#ifdef GPC
		/* to detect note icon click */
		ATTR_GEN_ITEM_GROUP_SET_MODIFIED_ON_REDUNDANT_SELECTION,
		/* size for GPC version calculated dynamically - see
		 * RolodexBrowse() & BringUpBothView().  -Don 11/23/00 */
#else
		HINT_FIXED_SIZE {
#ifdef DO_PIZZA
			SpecWidth	<SST_WIDE_CHAR_WIDTHS, 12>
			SpecHeight	<SST_LINES_OF_TEXT, 12>
			word	12
#else
			SpecWidth	<SST_WIDE_CHAR_WIDTHS, 15>
			SpecHeight	<SST_LINES_OF_TEXT, 13>
			word	13
#endif
		}
#endif
	}
}

FileMenu = GenInteraction {
	children = RolUIDocControl,
		RolImportControl,
		RolExportControl,
#if FAX_SUPPORT
		SendControl,
#endif
#ifdef GPC
		RolPrintControl, RolodexFileExit;
#else
		RolPrintControl;
#endif
	visibility = popup;
	hints = { ATTR_GEN_INTERACTION_GROUP_TYPE { GenInteractionGroupType GIGT_FILE_MENU } }
}

#ifdef GPC
RolodexFileExit = GenTrigger {
    action = MSG_GEN_DISPLAY_CLOSE, RolodexPrimary;
    hints = {
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
	    InteractionCommand IC_EXIT
	}
    }
}
#endif

end SearchResource;

start	RolDocumentBlock;

RolAppDocControl = GenDocumentGroup {
	defaultName = "Contatcs";
	output = process;
	uiDC = RolUIDocControl;
	protocolMajor = 2;
	protocolMinor = 0;
	/* don't check handles since we can be launched transparently via
	   email */
	hints = {
	    ATTR_GEN_DOCUMENT_GROUP_DOCUMENT_HANDLES {
		word 0
	    }
	}
}

end	RolDocumentBlock;

start MenuResource;

/***************************************************************************
				CONTROLS
***************************************************************************/


	/* UI document control object */

#ifdef EXPORT
RolUIDocControl = RolDocumentControl {
#else
RolUIDocControl = GenDocumentControl {
#endif
	dcAttributes =
		mode sharedSingle,
		vmFile,
		supportsSaveAsRevert,
		currentTask none;
	features = default /*-singleFileCleanCanNewOpen,*/
			   -supportsUserSettableEmptyDocument,
			   +supportsUserSettableDefaultDocument,
			   -supportsTemplates;
	noNameText = "Contacts";
#ifdef DO_DBCS
	/* on DBCS version, file name size is up to 15. so... */
	defaultFile = "Contacts";
#else
#if NDO_ROLODEX_ORIGINAL_UI
	defaultFile = "First Contact List";
#else
	defaultFile = "My Contacts";
#endif
#endif
	documentTokenChars = "'a','d','b','k'";
	documentTokenID = 0;
	appDC = RolAppDocControl;

	/*
	 * Import and export UI
	 */

#if     NDO_ROLODEX_ORIGINAL_UI || !_GPC || EXPORT
	importGroup = RolImportControl;
	exportGroup = RolExportControl;
#endif
	enableDisableList = RolodexEnableList;


#if _NDO2000
#if DO_DBCS
	dialogOpenDefaultText = "Open Startup:\\\r"
 				"Open the Contacts startup document\\\r"
				"(normally \\\"Contacts\\\").";
#else
 	dialogOpenDefaultText = "Open Startup:\\\r"
 				"Open the Contacts startup document\\\r"
 				"(normally \\\"My Contacts\\\").";
#endif
 	dialogImportText = "Import:\\\rImport data from another contact list"
 			   " to create a new document.";
 	dialogUserLevelText = "Change Program Level:\\\rChange how simple or"
 			      " complex you would like Contacts to be.";
#else

#ifdef GPC_ONLY
#if DO_DBCS
	dialogOpenDefaultText = "/BOpen Startup:/B\\\r"
				"Open the Contacts startup document\\\r"
				"(normally \\\"Contacts\\\").";
#else
	dialogOpenDefaultText = "/BOpen Startup:/B\\\r"
				"Open the Contacts startup document\\\r"
				"(normally \\\"My Contacts\\\").";
#endif
	dialogImportText = "/BImport:/B\\\rImport data from another contact list"
			   " to create a new document.";
	dialogUserLevelText = "/BChange Program Level:/B\\\rChange how simple or"
			      " complex you would like Contacts to be.";
#else
#if DO_DBCS
	dialogOpenDefaultText = "Open Startup:\\\r"
				"Open the Contacts startup document\\\r"
				"(normally \\\"Contacts\\\").";
#else
	dialogOpenDefaultText = "Open Startup:\\\r"
				"Open the Contacts startup document\\\r"
				"(normally \\\"My Contacts\\\").";
#endif
	dialogImportText = "Import:\\\rImport data from another contact list"
			   " to create a new document.";
	dialogUserLevelText = "Change Program Level:\\\rChange how simple or"
			      " complex you would like Contacts to be.";
#endif
#endif

#if _NDO2000
	userLevelDialog = SetUserLevelDialog;
#endif
	hints = {
#ifdef GPC
#if _OPTIONS_MENU
#if !_NDO1998
	    ATTR_GEN_DOCUMENT_CONTROL_NEW_DOC_WARNING {
		lptr offset NewDocWarningString
	    },
#endif
#endif
#endif
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_INTRODUCTORY,
		 GDC_SUGGESTED_INTRODUCTORY_FEATURES>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_BEGINNING,
		 GDC_SUGGESTED_BEGINNING_FEATURES>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_INTERMEDIATE,
		 GDC_SUGGESTED_ADVANCED_FEATURES>
	    }
	}
}

#ifdef GPC
chunk NewDocWarningString = "Creating a new document will affect functionality of other applications.  Are you sure you want to continue?";
#endif

chunk RolodexEnableList = data {
	UN_OPTR	RolodexSearchControl
}

	/* UI print control object */

RolPrintControl = PrintControl vardataReloc {
	printAttributes = default -pageControls;
	printOutput = process;
	docNameOutput = RolAppDocControl;
	genStates = default -enabled;
	hints = {
#if LIMITED_FAX_SUPPORT
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask PRINTCTF_FAX_TRIGGER
		},
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask PRINTCF_FAX_TRIGGER
		},
#endif
		ATTR_PRINT_CONTROL_APP_UI { UN_OPTR PrintGroup },
		ATTR_GEN_CONTROL_DO_NOT_USE_LIBRARY_NAME_FOR_HELP
	}
}

PrintGroup = GenInteraction {
        genStates = default -usable;
	moniker = "Contacts Options:";
	children = PrintOptionList, PrintNotes;
	hints = { HINT_DRAW_IN_BOX,
		  HINT_ORIENT_CHILDREN_VERTICALLY,
		  HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

PrintOptionList = GenItemGroup {
	children = PrintCurrent, PrintCurrentAddress, PrintAll, PrintAddress, PrintPhone;
#if FAX_SUPPORT
	selection = 1;	/* Print everything in send control case */
#else
	selection = 0;	/* Default to current record in non-clavin case */
#endif /* FAX_SUPPORT */
	numSelections = 1;
	destination = process;
	hints = { HINT_ORIENT_CHILDREN_VERTICALLY,
		  ATTR_GEN_ITEM_GROUP_STATUS_MSG {
			  word    MSG_ROLODEX_PRINT_OPTION
		  }
	}
}

PrintCurrent = GenItem ignoreDirty {
	moniker = "Current card";
	identifier = PFF_CUR_REC;
}

PrintCurrentAddress = GenItem ignoreDirty {
	moniker = "Current card - Address only (for labels / envelopes)";
	identifier = PFF_CUR_REC_ADDR;
}

PrintAll = GenItem ignoreDirty {
#if _FAX_SUPPORT
	moniker = "Addresses and Phone numbers";
#else
	moniker = "All cards - Addresses, phone numbers and email";
#endif /* FAX_SUPPORT */
	identifier = PFF_ALL;
}

PrintAddress = GenItem ignoreDirty {
	moniker = "All cards - Addresses only (for labels / envelopes)";
	identifier = PFF_ALL_ADDR;
}

PrintPhone = GenItem ignoreDirty {
#if FAX_SUPPORT
	moniker = "Phone Numbers Only";
#else
	moniker = "All cards - Phone numbers and email only";
#endif /* FAX_SUPPORT */
	identifier = PFF_ALL_PHONES;
}

PrintNotes = GenBooleanGroup {
	children = PrintNotesOnly;
	destination = process;
}

PrintNotesOnly = GenBoolean {
	moniker = "Print Notes";
	identifier = "1";
}

end MenuResource;

		/* Used for printing to text object */

start TextObjectPrintUI;

PrintTextEdit = VisText {
	right	= "8*72";			/* Standard page size */
	bottom	= "10*72";
	
	optFlags = default -geometryInvalid;

	text = "";
	charAttrRuns = ( "VisTextDefaultCharAttr" ) {
		0, 0, 0,		 /* underline, bold, italic */
		C_BLACK,		 /* color */
#ifdef DO_PIZZA
			VTDS_16,		 /* size */
			VTDF_PIZZA_KANJI	 /* font */
#else
			VTDS_10,		 /* size */
			VTDF_BERKELEY		 /* font */
#endif
	}
}

end TextObjectPrintUI;

/***************************************************************************
 *		Include all the .UI files	                           *
 ***************************************************************************/

#include "uiMenu.ui"
#include "uiDialog.ui"
#include "uiStrings.ui"
#if FAX_SUPPORT
#include "uiClavin.ui"
#endif
