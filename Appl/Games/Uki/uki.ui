/*
 *
 * Project: 	PC GEOS
 * Module:  	Test Program
 * File:	uki.ui
 *
 * Author:	Jimmy Lefkowitz
 *
 *	This file contains the user interface description for maze.geo
 *
 *	$Id: uki.ui,v 1.1 97/04/04 15:47:10 newdeal Exp $

 */

#include "generic.uih"

#define _JEDI   0

/*#include "Art/mkrUki.ui"
*/
#include "Art/mkuki.ui"

/* -----------------------------------------------------------------------
	Product Macros
-------------------------------------------------------------------------- */

class UkiContent = VisContent
{
}

class	UkiPrimary = GenPrimary
{
}


start	UIApplication;

UkiApp = GenApplication  vardataReloc 
{
	moniker = list { 
		UkiTextMoniker,
	 /*	UkiLCMoniker,
		UkiLMMoniker,
		UkiSCMoniker,
		UkiSMMoniker,
		UkiYCMoniker,
		UkiYMMoniker,
		UkiSCGAMoniker,
		UkiTMMoniker,
		UkiTCGAMoniker
		*/
		UkiAppMoniker,
		UkiTinyMoniker
	}
	children =
		MyPrimary;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) =
		MyPrimary;
	gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_STARTUP_LOAD_OPTIONS) =
		UkiPlayingModeList, UkiObstaclesList, UkiBoardSizeList;
	hints = {
		ATTR_GEN_INIT_FILE_CATEGORY {
			char	"Uki", 0
		}
		,
	/*	ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER {
			UN_OPTR UkiSaveOptionsTrigger
		}, */
		ATTR_GEN_HELP_FILE { char "uki", 0 }
	}
}



visMoniker UkiTextMoniker = "Uki";

end	UIApplication;



start Interface;

MyPrimary = UkiPrimary 
{
	children =
		UkiMenuGroup,
		UkiScoreGroup,
		UkiView;
	hints = 
		{
		  HINT_SIZE_WINDOW_AS_DESIRED,
		  HINT_CENTER_CHILDREN_HORIZONTALLY,
		  HINT_CENTER_CHILDREN_VERTICALLY,
		  HINT_FULL_JUSTIFY_CHILDREN_VERTICALLY,
		  HINT_INCLUDE_ENDS_IN_CHILD_SPACING,
/*		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT, */
		HINT_PRIMARY_NO_FILE_MENU,
 /*		HINT_PRIMARY_FULL_SCREEN, */
		ATTR_GEN_HELP_CONTEXT {
			char	"TOC", 0
		},
		ATTR_GEN_WINDOW_KBD_OVERRIDE {
			word	KO_NO_KEYBOARD
		},
		HINT_DISPLAY_MENU_BAR_HIDDEN_ON_STARTUP,
		ATTR_GEN_DISPLAY_MENU_BAR_POPPED_OUT,
		HINT_CENTER_WINDOW
	 /*	HINT_POSITION_WINDOW_AT_RATIO_OF_PARENT {
			 SpecWinSizePair < mask SWSS_RATIO or PCT_0, \
						    mask SWSS_RATIO or PCT_0>
			 } */
	}
}

UkiView = GenView
{
	viewAttributes = default +dontSendKbdReleases;
	backColorR = "BACKGROUND_COLOR";
	output = MyContent;
	hints = {
 		HINT_MINIMUM_SIZE {
			SpecWidth <SST_PIXELS, 170>
			SpecHeight <SST_PIXELS, 170>
		},
		HINT_INITIAL_SIZE {
			SpecWidth <SST_PIXELS, 350>
			SpecHeight <SST_PIXELS, 350>
		},
		HINT_DEFAULT_FOCUS,
		HINT_DEFAULT_TARGET
	}
}


end Interface;


start	ContentBlock;

MyContent = UkiContent
{
	right = 1000;
	bottom = 1000;
	view = UkiView;
	hints = 
	{
		HINT_DEFAULT_TARGET,
		HINT_DEFAULT_FOCUS
	}
}
end	ContentBlock;



start	Interface;		

UkiMenuGroup = GenInteraction
{
	children = 
		UkiGameGroup,
		UkiOptionGroup;
#if	0
		UkiSoundGroup;
#endif
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}


/***********************************************************************
	Game Menu
***********************************************************************/

UkiGameGroup = GenInteraction
{
	moniker = 'G',"Game";
	children =
		UkiGameSubGroup;
	visibility = popup;
	hints =	{
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_FILE_MENU
		}
	}
}
UkiGameSubGroup = GenInteraction
{
	children =
		StartTrigger,
		ComputerSuggestMoveTrigger;
}


StartTrigger = GenTrigger
{
	moniker = 'S', "Start New Game";
	action = MSG_UKI_START, MyContent;
}


ComputerSuggestMoveTrigger = GenTrigger
{
	moniker = 'C',"Computer Hint";
	action = MSG_UKI_COMPUTER_HINT, MyContent;

}


/***********************************************************************
	Sound Menu
***********************************************************************/

#if	0
UkiSoundGroup = GenInteraction
{
	moniker = 'S', "Sound";
	children =
		UkiSoundList;
	visibility = popup;
}

UkiSoundList = GenItemGroup {
	children =
		UkiSoundOnItem,
		UkiSoundOffItem,
		UkiSoundSystemPreferenceItem;
	selection = "US_PREF";
	numSelections = 1;
	applyMsg = MSG_UKI_SET_SOUND;
	destination = MyContent;
}

UkiSoundSystemPreferenceItem = GenItem {
	moniker = 'P', "Use System Preference";
	identifier = "US_PREF";
}

UkiSoundOnItem = GenItem {
	moniker = 'S', "Sound On";
	identifier = "US_ON";
}

UkiSoundOffItem = GenItem {
	moniker = 'O', "Sound Off";
	identifier = "US_OFF";
}
#endif


/***********************************************************************
	Options Menu
***********************************************************************/


UkiOptionGroup = GenInteraction
{
	children =
		UkiPlayingModeList,
		UkiOtherOptions
		, UkiSaveOptionsGroup
		;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_OPTIONS_MENU
		}
	}
}



UkiSaveOptionsGroup = GenInteraction 
{
	children = UkiSaveOptionsTrigger;
	visibility = subGroup;
}

UkiSaveOptionsTrigger = GenTrigger {
	SAVE_OPTIONS_TRIGGER_VALUES
	action = MSG_META_SAVE_OPTIONS, UkiApp;
}

UkiPlayingModeList =  GenItemGroup {
	children =
		TwoPlayerMode
		,
		PlayWhite,
		PlayBlack,
		ComputerPlayGame
		;
	selection = "UPM_PLAY_WHITE";
	numSelections = 1;
	applyMsg = MSG_UKI_SET_PLAY_MODE;
	destination = MyContent;
	hints = {
		ATTR_GEN_INIT_FILE_KEY {
			char	"playingMode", 0
		}
	}
}


TwoPlayerMode = GenItem {
	moniker = 'T',"Two Players";
	identifier = "UPM_TWO_PLAYER";
}


PlayWhite = GenItem {
	moniker = 'F',"Play First (Green)";
	identifier = "UPM_PLAY_WHITE";
}

PlayBlack = GenItem {
	moniker = 'S',"Play Second (Purple)";
	identifier = "UPM_PLAY_BLACK";
}

ComputerPlayGame = GenItem {
	moniker = 'C',"Computer vs. Computer";
	identifier = "UPM_COMPUTER";
}

/****
ComputerContinuousPlay	= GenItem {
	moniker = 'o',"Computer Continuous";
	identifier = "UPM_COMPUTER_CONTINUOUS";
}
****/


UkiOtherOptions = GenInteraction
{
	children =
		UkiObstaclesList,
		UkiBoardSizeSubMenu;
	visibility = subGroup;	
	hints = {
		ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
	}
}


UkiObstaclesList = GenBooleanGroup
{
	children =
		UkiObstaclesEntry;
	applyMsg = MSG_UKI_SET_OBSTACLES;
	destination = MyContent;
	hints = {
		    ATTR_GEN_INIT_FILE_KEY {
			char	"obstacles", 0
		    }
		}
}

UkiObstaclesEntry = GenBoolean
{
	moniker = 't',"Obstacles";
	identifier = 1;
}

UkiBoardSizeSubMenu = GenInteraction
{
	moniker = 'B', "Board Size";
	children = 
		UkiBoardSizeList;
	visibility = popup;
}

UkiBoardSizeList = GenItemGroup
{
	children =
		BoardSize6,
		BoardSize8,
		BoardSize10,
		BoardSize12,
		BoardSize14,
		BoardSize16
		,BoardSize18
		;
	selection = 8;
	numSelections = 1;
	applyMsg = MSG_UKI_SET_BOARD_SIZE;
	destination = MyContent;
	hints = {
		    ATTR_GEN_INIT_FILE_KEY {
			char	"boardSize", 0
		    }
		}
}

BoardSize6 = GenItem {
	moniker = " 6";
	identifier = 6;
}

BoardSize8 = GenItem {
	moniker = " 8";
	identifier = 8;
}

BoardSize10 = GenItem {
	moniker = "10";
	identifier = 10;
}

BoardSize12 = GenItem {
	moniker = "12";
	identifier = 12;
}

BoardSize14 = GenItem {
	moniker = "14";
	identifier = 14;
}

BoardSize16 = GenItem {
	moniker = "16";
	identifier = 16;
}

BoardSize18 = GenItem {
	moniker = "18";
	identifier = 18;
}

/***********************************************************************
	Objects to display the current score
***********************************************************************/

UkiScoreGroup = GenInteraction 
{
	children =
		WhiteScore,
		NewGameButton,
		BlackScore;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,	
		HINT_EXPAND_WIDTH_TO_FIT_PARENT,
		HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
		HINT_CENTER_CHILDREN_VERTICALLY
		}
}

WhiteScore = GenText {
 /*	moniker = "Player 1:"; */
	moniker = "Green:";
	text = " ";
	textDisplayAttributes =
		default +singleLineText;
	genAttributes =
		default +readOnly;
	hints = {
		HINT_MINIMUM_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 4>
			SpecHeight <>
		  }
	}
}

NewGameButton = GenTrigger
{
	moniker = 'N', "New Game";
	action = MSG_UKI_START, MyContent;
}

BlackScore = GenText {
 /*	moniker = "Player 2:"; */
	moniker = "Purple:";
	text = " ";
	textDisplayAttributes =
		default +singleLineText;
	genAttributes =
		default +readOnly;
	hints = {
		HINT_MINIMUM_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 4>
			SpecHeight <>
		}
	}
}

end Interface;



start	DataBlock, data;

chunk   TieGame = "Tie Game!";

/*chunk	Player1Wins = "Player 1 Wins!";
chunk	Player2Wins = "Player 2 Wins!";
*/
chunk	Player1Wins = "Green Wins!";
chunk	Player2Wins = "Purple Wins!";

/*chunk	Computer1Wins = "Computer 1 Wins!";
chunk	Computer2Wins = "Computer 2 Wins!";
*/
chunk	Computer1Wins = "Green Wins!";
chunk	Computer2Wins = "Purple Wins!";

chunk     YouWin = "You Win!";
chunk	ComputerWins = "The Computer Wins!"; 
chunk	ComputerNoMove = "The computer cannot move.  It's your turn again.";
/*chunk	Player1NoMove = "Player 1 Has No Move!";
chunk	Player2NoMove = "Player 2 Has No Move!";
*/
chunk	Player1NoMove = "Green Has No Move!";
chunk	Player2NoMove = "Purple Has No Move!";
chunk	YouNoMove = "You Have No Move!";


end	DataBlock;



