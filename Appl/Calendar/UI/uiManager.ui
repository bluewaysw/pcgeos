/****************************************************************************

	Copyright (c) GeoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Calendar/UI
FILE:		uiManager.ui

AUTHOR:		Don Reeves, 2-23-91

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Don	2/23/91		Initial revsion - moved from calendar.ui
	Richard 5/17/95		Remove pen library for Responder
	Richard 6/20/95		Memos for Responder

DESCRIPTION:
	Contains the UI class definitions for the GeoPlanner application

	$Id: uiManager.ui,v 1.3 98/04/28 11:27:25 joon Exp $

*****************************************************************************/

/*---------------------------------------------------------------------------
	CONSTANTS DEFINITIONS
---------------------------------------------------------------------------*/

#define	_PRODUCT_RESPONDER 	0
#define HAS_MIN_WEEK_DAY_WIDTH	0

#ifdef	NO_PEN_SUPPORT
#define	_USE_INK		0
#else
#define	_USE_INK		-1
#endif

#ifdef	NO_OPTIONS_MENU
#define _OPTIONS_MENU		0
#else
#define _OPTIONS_MENU		-1
#endif

#ifdef	TODOLIST
#define	_TODO			-1
#else
#define	_TODO			0
#endif

#ifdef REMOTE_CALENDAR
#define _REMOTE_CALENDAR	-1
#else
#define _REMOTE_CALENDAR	0
#endif

#ifdef DATE_ON_TITLE_BAR
#define _DATE_ON_TITLE_BAR	-1
#else
#define _DATE_ON_TITLE_BAR	0
#endif

#ifdef DISPLAY_TIME
#define _DISPLAY_TIME		-1
#else
#define _DISPLAY_TIME		0
#endif


/***************************************************************************
 *                     Include file & Resource Declarations                *
 ***************************************************************************/

#include "Internal/prodFeatures.uih"
#include "generic.uih"
#include "spool.uih"
#include "config.uih"
#if _USE_INK
#include "ink.uih"
#endif
#include "Objects/Text/tCtrl.uih"


/* #include "mkrGeoPlanner.ui"	*/		/* Application icons */
/* #include "mkrGeoPlannerTiny.ui" */		/* Application icons */
/* #include "mkrGeoPlannerDoc.ui" */		/* document icons */

start AppSCMonikerResource, data;
#include "gpcCalendarSC.ui"
#include "gpcCalendarDocSC.ui"
end   AppSCMonikerResource;

start AppTCMonikerResource, data;
#include "gpcCalendarTC.ui"
#include "gpcCalendarDocTC.ui"
end   AppTCMonikerResource;

start	AppResource;
end	AppResource;

start	Interface;
end	Interface;

start	MenuBlock;
end	MenuBlock;

start	RepeatBlock;
end	RepeatBlock;

start	DPResource;
end	DPResource;

#ifdef DO_PIZZA /* Pizza */
start	HolidayBlock;
end	HolidayBlock;
#endif

/***************************************************************************
 *                     Application - Specific Definitions                  *
 ***************************************************************************/

class	Year = GenGadget, master {
	default attributes = default +composite;
	curYear		= wordComp : 0;		/* current year & month */
	curMonth	= byteComp : 0;
	changeYear	= wordComp : 0;		/* soon-to-be year & month */
	changeMonth	= byteComp : 0;

	yearViewWidth	= wordComp : 0;		/* width of the view */
	yearViewHeight	= wordComp : 0;		/* height of the view */
	minWidth	= wordComp : 0;		/* mimimum width of the year */
	minHeight	= wordComp : 0;		/* minimum height of the year*/
	minMonthWidth	= wordComp : 0;		/* width of a month */
	minMonthHeight	= wordComp : 0;		/* height of a month */
	maxMonthWidth	= wordComp : 0;		/* width of a month */
	maxMonthHeight	= wordComp : 0;		/* height of a month */
	monthWidth	= wordComp : 0;		/* width of a month */
	monthHeight	= wordComp : 0;		/* height of a month */
	datesFontSize	= byteComp : 0;		/* font size forthe dates */
	titleFontSize	= byteComp : 0;		/* font size for the title */

	firstDay	= byteComp : 0;		/* first selected day */
	firstMonth	= byteComp : 0;		/* month of same */
	firstYear	= wordComp : 0;		/* year of same */
	lastDay		= byteComp : 0;		/* last selected day */
	lastMonth	= byteComp : 0;		/* month of same */
	lastYear	= wordComp : 0;		/* year of same */

	oldFirstDay	= byteComp : 0;		/* first old selected day */
	oldFirstMonth	= byteComp : 0;		/* month of same */
	oldFirstYear	= wordComp : 0;		/* year of same */
	oldLastDay	= byteComp : 0;		/* last old selected day */
	oldLastMonth	= byteComp : 0;		/* month of same */
	oldLastYear	= wordComp : 0;		/* year of same */

	printYear	= wordComp : 0;		/* year to print */
	printMonth	= byteComp : 0;		/* month to print */
	printMonthWidth	= wordComp : 0;		/* print month width */
	printMonthHgt	= wordComp : 0;		/* print month height */
	printFontSizes	= wordComp : 0;		/* large & small font sizes */

	Flags		= bitFieldComp word {
		BAD_IMAGE, CLOSEST, GRAB_MOUSE, SELECT, PIVOT_LAST,
		SELECT_REGION, ONE_MONTH_SIZE, SMALL_MONTH_SIZE,
		MANUAL_CHANGE, NEEDS_INIT, OUT_OF_YEAR_BOUNDS, DRAG_OK }
			: NEEDS_INIT;
}

class	Month = GenGadget, master {
	month		= byteComp : 0;		/* month displayed */
	year		= wordComp : 0;		/* year displayed */
	fontID		= wordComp : 0;		/* font to draw in */
	titleFontSize	= byteComp : 0;		/* size of title font */
	datesFontSize	= byteComp : 0;		/* size of dates font */
	firstDayPos	= byteComp : 0;		/* pos of first day of month */
	numberRows	= byteComp : 0;		/* number if rows in month */
	daysThisMonth	= byteComp : 0;		/* number of days this month */
	static		  byteComp : 0;		/* INTERNAL: to draw dates */
	offsetDOW	= wordComp : 0;		/* offset to days of week */
	offsetGrid	= wordComp : 0;		/* offset to grid */
	dateWidth	= wordComp : 0;		/* width of a single date */
	dateHeight	= wordComp : 0;		/* height of a single date */
	leftMargin	= wordComp : 0;		/* left margin of the month */
	monthRight	= wordComp : 0;		/* right side of the month */
	monthBottom	= wordComp : 0;		/* bottom edge of the month */
	flags		= bitFieldComp byte
		{NEW_MONTH, NEW_SIZE, HAS_FOCUS, PRINT, YEAR_IN_TITLE}
				: YEAR_IN_TITLE, NEW_MONTH;
	static		wordComp : "2 dup (?)";		/* month map */
#ifdef DO_DBCS
	static		wordComp : "3 dup (?)";		/* the date string */
	static 		wordComp : "32 dup (?)";	/* the title string */
#else
	static		byteComp : "3 dup (?)";		/* the date string */
	static 		byteComp : "32 dup (?)";	/* the title string */
#endif
#ifdef DO_PIZZA /* Pizza */
	holidayWidth	= wordComp : 0;		/* width of a holiday mark */
	holidayHeight	= wordComp : 0;		/* height of a holiday mark */
#endif
#if	HAS_MIN_WEEK_DAY_WIDTH
	weekdayWidth	= wordComp : 0;		/* width of weekday column */
#endif
}

class	DayPlan	= VisContent, master {
	eventTable	= nptrComp : null;	/* handle to event data */
	bufferTable	= nptrComp : null;	/* handle to buffer table */
	rangeLength	= wordComp : 0;		/* # of days displayed */
	rangeOffset	= wordComp : 0;
	startDay	= byteComp : 0;		/* start display: day */
	startMonth	= byteComp : 0;		/*              : month */
	startYear	= wordComp : 0;		/*              : year */
	endDay		= byteComp : 0;		/* end display: day */
	endMonth	= byteComp : 0;		/*            : month */
	endYear		= wordComp : 0;		/*            : year  */
	flags		= bitFieldComp byte
		 {TEMPLATE, HEADERS, FILE_VALID, ALLOW_RELOAD, LOADING,
		  DP_DIRTY, NEEDS_REDRAW, DELETE_ON_LOAD} : {};
	printFlags	= byteComp : 0;		/* DayPlanPrintFlags */
	textHeight	= wordComp : 0;		/* height of single line */
	myViewWidth	= wordComp : 0;		/* view's width */
	myViewHeight	= wordComp : 0;		/* view's height */
	docOffset	= wordComp : 0;		/* view's document offset */
	docHeight	= wordComp : 0;		/* view's document height */
	selectEvent	= wordComp : 0;		/* the current select event */
	beginMinute	= byteComp : 0;
	beginHour	= byteComp : 0;		/* start time */
	endMinute	= byteComp : 0;
	endHour		= byteComp : 0;		/* end time */
	interval	= byteComp : 0;		/* minutes between events */
	prefFlags	= byteComp : 0;		/* PreferenceFlags */
	startup		= byteComp : 0;		/* ViewInfo */

	inkFlags	= byteComp : 0;
	inkGroup	= wordComp : 0;
	inkItem		= wordComp : 0;
}

class	DayEvent = VisComp, master {
	timeYear	= wordComp : 0;		/* year of event */
	timeDay		= byteComp : 0;		/* day of event */
	timeMonth	= byteComp : 0;		/* month of event */
	timeMinute	= byteComp : 0;		/* minute of event */
	timeHour	= byteComp : 0;		/* hour of event */
	alarmYear	= wordComp : 0;		/* year of alarm */
	alarmDay	= byteComp : 0;		/* day of alarm */
	alarmMonth	= byteComp : 0;		/* month of alarm */
	alarmMinute	= byteComp : 0;		/* minute of alarm */
	alarmHour	= byteComp : 0;		/* hour of alarm */
	stateFlags	= bitFieldComp byte {
		ALARM, NORMAL, HEADER, REPEAT, HOLIDAY } : {};
	actionFlags	= bitFieldComp	byte {
		MOUSE, FEATURES, VIRGIN, TIME_DIRTY, TEXT_DIRTY } : {};
	repeatID	= wordComp : 0;		/* Repeat ID (if any */
	DBGroup		= wordComp : 0;		/* Database group for event */
	DBItem		= wordComp : 0;		/* Database item for event */
	block		= hptrComp : null;	/* block handle for DayEvent */
	eventHandle	= nptrComp : null;	/* object handle to DayEvent */
	timeHandle	= nptrComp : null;	/* object handle to time TEO */
	textHandle	= nptrComp : null;	/* object handle to text TEO */
}


class	CustomSpin = GenValue {
	firstMoniker	= nptrComp : null;
	maxTextLen	= byteComp : 100;
}

class	DateArrows = GenValue {
}

class	MonthValue = GenValue {
	default value = 1;
	default minimum = 1;
	default maximum = 12;
}

class	MyPrint = GenInteraction {
	printAttrs	= byteComp : 0;		/* MyPrintAttrs */
	fontID		= wordComp : 0;		/* FontID to print with */
}

class	MySearch = meta, master {
	searchData	= hptrComp : null;
	eventTable	= nptrComp : null;
	eventOffset	= wordComp : 0;
	matchOffset	= wordComp : 0;

	firstMonthDay	= wordComp : 0;
	firstYear	= wordComp : 0;
	startMonthDay	= wordComp : 0;
	startYear	= wordComp : 0;
	lastMonthDay	= wordComp : 0;
	lastYear	= wordComp : 0;

	currentMonthDay	= wordComp : 0;
	currentYear	= wordComp : 0;
	nextMonthDay	= wordComp : 0;
	nextYear	= wordComp : 0;
}

class	SizeControl = GenGadget {
	default attributes = default +composite;
}

class	Reminder = GenInteraction, master {
	eventGroup	= wordComp : 0;
	eventItem	= wordComp : 0;
	eventMinute	= byteComp : 0;
	eventHour	= byteComp : 0;
	eventDay	= byteComp : 0;
	eventMonth	= byteComp : 0;
	eventYear	= wordComp : 0;
}

class	CalendarPrimary = GenPrimary {
}

class	CalendarApp = GenApplication {
	visibileGroups	= wordComp : 0;
	documentState	= wordComp : 0;
}

class	CalendarSRC = SearchReplaceControl {
}

class	CalendarTimeDateControl = PrefTimeDateControl {
}


#ifdef DO_PIZZA /* Pizza */
class	SetHolidayInteraction = GenInteraction {
	dataFlag	= byteComp	: 0;	/* 0 : not changed
						   1 : changed
						   2 : indeterminate */
	stateFlag	= byteComp	: 0;	/* state flag */

	RHoliday	= wordComp	: 0;	/* repeat holiday */
	holidayMemHandle = wordComp	: 0;	/* LMem handle for holiday */
	NH_ChunkArray	= wordComp	: 0;	/* Natinal Holiday chunk */
	PH_ChunkArray	= wordComp	: 0;	/* Personal Holiday chunk */
	PW_ChunkArray	= wordComp	: 0;	/* Personal Weekday chunk */

	prevYstartDay	= byteComp	: 0;	/* prev YearObj startDay */
	prevYstartMonth	= byteComp	: 0;	/* prev YearObj startMonth */
	prevYstartYear	= wordComp	: 0;	/* prev YearObj startYear */
	prevYendDay	= byteComp	: 0;	/* prev YearObj endDay */
	prevYendMonth	= byteComp	: 0;	/* prev YearObj endMonth */
	prevYendYear	= wordComp	: 0;	/* prev YearObj endYear */
}
#endif

/***************************************************************************
 *                          Week View classes                              *
 ***************************************************************************/

/***************************************************************************
 *                          Include all the .UI files                      *
 ***************************************************************************/

#include "uiMain.ui"
#include "uiMenu.ui"
#include "uiDialog.ui"
#include "uiStrings.ui"

