/****************************************************************************

	Copyright (c) GEoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Calendar/UI
FILE:		uiMenu.ui

AUTHOR:		Don Reeves, 2-23-91

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Don	2/23/91		Initial revsion - moved from calendar.ui

DESCRIPTION:
	Contains all the menu item declarations for the GeoPlanner
	application
		
	$Id: uiMenu.ui,v 1.4 98/03/08 17:17:59 gene Exp $

*****************************************************************************/

/*****************************************************************************
 *                              GeoPlanner Menus                             *
 *****************************************************************************/

start	PrimaryInterface;

FileMenu = GenInteraction {
	children =
		CalendarDocumentControl,
		FilePrintGroup,
		FileExitTrigger;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_FILE_MENU
		}
	}
}

EditMenu = GenInteraction {
	children =
		EditControl,
		EditMenuGroup;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_EDIT_MENU
		}
	}
}

ViewMenu = GenInteraction {
	children =
		ViewViewGroup,
		ViewBothGroup,
		ViewDataGroup;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_VIEW_MENU
		}
	}
}

QuickMenu = GenInteraction {
	moniker = 'Q', "Quick";
	children = 
		QuickDayTrigger,
		QuickWeekTrigger,
		QuickWeekendTrigger,
		QuickMonthTrigger,
		QuickQuarterTrigger,
		QuickYearTrigger,
		QuickGotoBox,
		QuickSubGroup;
	visibility = popup;
}

UtilitiesMenu = GenInteraction {
	moniker = 'U', "Utilities";
	children = 
		RepeatBox,
#ifdef DO_PIZZA /* Pizza */
                SetHoliday,
#endif
		GeoDexTrigger;
	genStates = default -enabled;
	visibility = popup;
}

end	PrimaryInterface;



/*****************************************************************************
 *                           GeoPlanner Menus Contents                       *
 *****************************************************************************/

start	MenuBlock;

/**************************************
 * File Menu
 **************************************/

CalendarDocumentControl = GenDocumentControl {
	dcAttributes = 
		mode sharedSingle,
		vmFile,
		supportsSaveAsRevert,
		currentTask none;
	features = default +supportsUserSettableDefaultDocument,
		           -supportsUserSettableEmptyDocument,
			   -supportsTemplates;
	documentTokenChars = "\"plnr\"";
	documentTokenID = "MANUFACTURER_ID_GEOWORKS";
	noNameText = "No Schedule";
	defaultFile = "My Schedule";
	appDC = CalendarDocumentGroup;
	enableDisableList = calendarEnableDisableList;
/*	importGroup = CalendarImportControl; */
/*	exportGroup = CalendarExportControl; */
#if _NDO2000
	userLevelDialog = SetUserLevelDialog;
#endif
	dialogOpenDefaultText = "Open Startup:\\\r"
				"Open the Calendar startup document\\\r"
				"(normally \\\"My Schedule\\\").";
	dialogUserLevelText = "Change Program Level:\\\rChange how simple or"
			      " complex you would like Calendar to be.";
	hints = {
	    ATTR_GEN_PATH_DATA {GenFilePath <SP_PRIVATE_DATA,>},
#ifdef GPC
	    ATTR_GEN_DOCUMENT_CONTROL_NEW_DOC_WARNING {
		lptr offset NewDocWarningString
	    },
#endif
	    HINT_GEN_CONTROL_SCALABLE_UI_DATA { GenControlScalableUIEntry <
		 GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_INTRODUCTORY,
		 GDC_SUGGESTED_INTRODUCTORY_FEATURES>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_BEGINNING,
		 GDC_SUGGESTED_BEGINNING_FEATURES>,
		<GCSUIC_SET_NORMAL_FEATURES_IF_APP_LEVEL,
		 UIIL_INTERMEDIATE,
		 GDC_SUGGESTED_ADVANCED_FEATURES>
	     }
	}
}

#ifdef GPC
chunk NewDocWarningString = "Creating a new document will affect functionality of other applications.  Are you sure you want to continue?";
#endif
	
chunk calendarEnableDisableList = data {
	UN_OPTR	UtilitiesMenu
	UN_OPTR	EditNew
}

#if	0
CalendarImportControl = ImportControl {
	importDataClasses = spreadSheet;
	importDestination = CalendarDocumentControl;
	importMessage = MSG_GEN_DOCUMENT_CONTROL_OPEN_IMPORT_SELECTED;
	genStates = default -usable;
}

CalendarExportControl = ExportControl {
	exportDataClasses = spreadSheet;
	genStates = default -usable;
}
#endif

/**************************************
 * Print sub-category
 **************************************/

FilePrintGroup = GenInteraction {
	children =
		CalendarPrintControl,
		CalendarPageSetup;
}

CalendarPrintControl = PrintControl vardataReloc {
	fromPage = 1;
	toPage = 1;
	firstPage = 1;
	lastPage = 1;
	printOutput = CalendarPrintOptions;
	docNameOutput = CalendarDocumentGroup;
	printAttributes = default -pageControls;
	genStates = default +enabled;
	hints = {
#if LIMITED_FAX_SUPPORT
		ATTR_GEN_CONTROL_PROHIBIT_TOOLBOX_UI {
			word	mask PRINTCTF_FAX_TRIGGER
		},
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask PRINTCF_FAX_TRIGGER
		},
#endif
		HINT_SAME_CATEGORY_AS_PARENT,
		ATTR_PRINT_CONTROL_APP_UI {UN_OPTR CalendarPrintOptions},
		ATTR_GEN_CONTROL_DO_NOT_USE_LIBRARY_NAME_FOR_HELP
	}
}

CalendarPageSetup = PageSizeControl {
	PAGE_SETUP_CONTROL_VALUES
	pageSizeAttrs = "mask PZCA_ACT_LIKE_GADGET or \
			 mask PZCA_INITIALIZE";
	genStates = default +enabled;
	hints = {
		HINT_CENTER_CHILDREN_ON_MONIKERS,
		HINT_SAME_CATEGORY_AS_PARENT,
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask PSIZECF_PAGE_TYPE
		},
		ATTR_GEN_CONTROL_DO_NOT_USE_LIBRARY_NAME_FOR_HELP
	}
}

FileExitTrigger = GenTrigger {
	action = MSG_GEN_DISPLAY_CLOSE, PlannerPrimary;
	hints = {
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word 	IC_EXIT
		}
	}
}


/**************************************
 * Edit Menu
 **************************************/

EditControl = GenEditControl vardataReloc {
	hints = {
#if _NDO2000
		ATTR_GEN_CONTROL_REQUIRE_UI {
		        word mask GECF_CHAR_MAP
		},
#endif
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word mask GECF_SELECT_ALL or mask GECF_CLIP_ART
		}
	}
	visibility = subGroup;
}

EditMenuGroup = GenInteraction {
	children =
		EditSubGroup,
#if	_TODO
		EditToDoSubGroup,
#endif
#if _USE_INK
		EditInkControl,
#endif
		CalendarSearch;
}

EditSubGroup = GenInteraction {
	children = 
		EditNew,
		EditDelete,
		EditAlarm;
}

EditNew = GenTrigger {
	moniker = 'N', "New Event";
	kbdAccelerator = control 'n';
	action = MSG_DP_QUICK_ADD, DayPlanObject;
	genStates = default -enabled;
	genAttributes = default
		+initiatesInputHoldUp,
		+notifyVisibility;
	hints = {
		ATTR_GEN_VISIBILITY_DATA {word 0, mask VUIG_EDIT_MENU}
	}
}

EditDelete = GenTrigger {
	moniker = 'E', "Delete Event";
	action = MSG_DP_DELETE_EVENT, DayPlanObject;
	genStates = default -enabled;
	genAttributes = default
		+initiatesInputHoldUp;
}

EditAlarm = GenTrigger {
	moniker = 'A', "Alarm Settings";
	kbdAccelerator = control 'a';
	action = MSG_DP_ALARM_SETTINGS, DayPlanObject;
	genStates = default -enabled;
	genAttributes = default +initiatesInputHoldUp;
	hints = {
		HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

#if _USE_INK

EditInkControl = InkControl vardataReloc {
	visibility = subGroup;
	hints = {
		ATTR_GEN_DESTINATION_CLASS {
			UN_DD InkClass
		}
	}
}
#endif

#if	_TODO
EditToDoSubGroup = GenInteraction {
	children = 
		EditTodoNew,
		MarkAsSubGroup,
		EditTodoDelete;
}

EditTodoNew = GenTrigger {
	moniker = "New To Do Event";
	action = MSG_DP_NEW_TODO_EVENT, DayPlanObject;
	genAttributes = default
		+initiatesInputHoldUp,
		+notifyVisibility;
	hints = {
		ATTR_GEN_VISIBILITY_DATA {word 0, mask VUIG_EDIT_MENU}
	}
}

EditTodoDelete = GenTrigger {
	moniker = "Delete To Do Event";
	action = MSG_DP_DELETE_EVENT, DayPlanObject;
	genStates = default -enabled;  
	genAttributes = default
		+initiatesInputHoldUp;
}

MarkAsSubGroup = GenInteraction {
	visibility = popup;
	moniker = "Mark as:";
	genStates = default -enabled;  
	children = 
		HighPriorityTrigger,
		NormalPriorityTrigger,
		CompletedTrigger;
}

HighPriorityTrigger = GenTrigger {
	moniker = "High Priority";
	action = MSG_DP_CHANGE_EVENT_TO_HIGH_PRIORITY, DayPlanObject;
	genAttributes = default
		+initiatesInputHoldUp;
}

NormalPriorityTrigger = GenTrigger {
	moniker = "Normal Priority";
	action = MSG_DP_CHANGE_EVENT_TO_NORMAL_PRIORITY, DayPlanObject;
	genAttributes = default
		+initiatesInputHoldUp;
}

CompletedTrigger = GenTrigger {
	moniker = "Completed";
	action = MSG_DP_EVENT_COMPLETED, DayPlanObject;
	genAttributes = default
		+initiatesInputHoldUp;
}

#endif


/**************************************
 * View Menu
 **************************************/

ViewViewGroup = GenInteraction {
	children =
		ViewViewList;
}
	
ViewViewList = GenItemGroup {
	children =
#if  	_TODO
		ViewViewCalEventsItem,
		ViewViewCalTodoItem,
		ViewViewCalendarItem,
		ViewViewEventsItem
		ViewViewTodoItem;
#else
		ViewViewCalendarItem,
		ViewViewEventsItem;
#endif
#if 	_TODO
	selection = "VT_CALENDAR_AND_EVENTS";
#else
	selection = "VT_CALENDAR";
#endif
	numSelections = 1;
	applyMsg = MSG_SIZE_CONTROL_SET_VIEW_TYPE;
	destination = CalendarSizeControl;
	hints = {
		ATTR_GEN_ITEM_GROUP_SET_MODIFIED_ON_REDUNDANT_SELECTION
	}
}

ViewViewCalendarItem = GenItem {
	moniker = 'l', "Calendar";
	kbdAccelerator = control 'L';
	identifier = "VT_CALENDAR";
}

ViewViewEventsItem = GenItem {
	moniker = ViewEventsMoniker;
	kbdAccelerator = control 'E';
	identifier = "VT_EVENTS";
}

visMoniker	ViewEventsMoniker 	= 'E', "Events";

#if _USE_INK
visMoniker	ViewEventsInkMoniker	= 'E', "Events/Ink";
#endif

#if	_TODO
ViewViewCalEventsItem = GenItem {
	moniker = "Calendar/Events";
	identifier = "VT_CALENDAR_AND_EVENTS";
}

ViewViewCalTodoItem = GenItem {
	moniker = "Calendar/To Do List";
	identifier = "VT_CALENDAR_AND_TODO_LIST";
}

ViewViewTodoItem = GenItem {
	moniker = 'T', "To Do List";
	kbdAccelerator = control 'T';
	identifier = "VT_TODO";
}
#endif


ViewBothGroup = GenInteraction {
	visibility = subGroup;
	children =
		ViewBothList;
}

ViewBothList = GenBooleanGroup {
	children =
		ViewBothBoolean;
	selectedBooleans = "mask VI_BOTH";
	applyMsg = MSG_SIZE_CONTROL_SET_VIEW_BOTH;
	destination = CalendarSizeControl;
}

ViewBothBoolean = GenBoolean {
	moniker = 'B', "Both";
	identifier = "mask VI_BOTH";
}



ViewDataGroup = GenInteraction {
	visibility = subGroup;
	children =
#if _USE_INK
		ViewDataList,
		ViewInkList;
#else
		ViewDataList;
#endif
}

ViewDataList = GenItemGroup {
	children =
		ViewOneMonthItem,
		ViewFullYearItem;
	selection = "YI_ONE_MONTH_SIZE";
	numSelections = 1;
	applyMsg = MSG_YEAR_SET_MONTH_SIZE;
	destination = YearObject;
}

ViewOneMonthItem = GenItem {
	moniker = 'M', "Single Month";
	identifier = "YI_ONE_MONTH_SIZE";
}

ViewFullYearItem = GenItem {
	moniker = 'Y', "Full Year";
	identifier = "YI_SMALL_MONTH_SIZE";
}

#if _USE_INK
ViewInkList = GenBooleanGroup {
	children =
		ViewInkBoolean;
	applyMsg = MSG_SIZE_CONTROL_SET_VIEW_INK;
	destination = CalendarSizeControl;
	genStates = default -usable;
}

ViewInkBoolean = GenBoolean {
	moniker = 'I', "Ink";
	identifier = "mask VI_INK";
}
#endif

/**************************************
 * Quick Menu
 **************************************/

QuickDayTrigger = GenTrigger {
	moniker = 'T', "Today";
	kbdAccelerator = control 'T';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_TODAY
		}
	}
}

QuickWeekTrigger = GenTrigger {
	moniker = 'W', "This Week";
	kbdAccelerator = control 'W';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_WEEK
		}
	}
}

QuickWeekendTrigger = GenTrigger {
	moniker = 'd', "This Weekend";
	kbdAccelerator = control 'd';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_WEEKEND
		}
	}
}

QuickMonthTrigger = GenTrigger {
	moniker = 'M', "This Month";
	kbdAccelerator = control 'M';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_MONTH
		}
	}
}

QuickQuarterTrigger = GenTrigger {
	moniker = 'Q', "This Quarter";
	kbdAccelerator = control 'Q';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_QUARTER
		}
	}
}

QuickYearTrigger = GenTrigger {
	moniker = 'Y', "This Year";
	kbdAccelerator = control 'Y';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_YEAR
		}
	}
}

QuickGotoBox = GenInteraction {
	moniker = 'G', "Go to Date";
	kbdAccelerator = control 'G';
	children =
		QuickGotoDateCtrl,
		QuickGotoOK;
	type = command;
	visibility = dialog;
	hints = {
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		ATTR_GEN_HELP_CONTEXT {
			char	"dbGotoDate", 0
		}
	}
}

QuickGotoDateCtrl = CalendarTimeDateControl {
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word 	mask PTDCF_TIME
		},
		ATTR_PREF_TIME_DATE_CONTROL_MINIMUM_YEAR {
			word 	LOW_YEAR
		},
		ATTR_PREF_TIME_DATE_CONTROL_MAXIMUM_YEAR {
			word 	HIGH_YEAR
		}
	}
}

QuickGotoOK = GenTrigger {
	moniker = 'G', "Go to Date";
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		HINT_DEFAULT_DEFAULT_ACTION,
		HINT_SEEK_REPLY_BAR,
		ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
			word	IC_APPLY
		},
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_GOTO
		}
	}
}

QuickSubGroup = GenInteraction {
	children =
		QuickPrevious;
}

QuickPrevious = GenTrigger {
	moniker = 'B', "Go Back";
	kbdAccelerator = control 'B';
	action = MSG_CALENDAR_QUICK, process;
	hints = {
		ATTR_GEN_TRIGGER_ACTION_DATA {
			word	QUICK_PREVIOUS
		}
	}
}


/**************************************
 * Utilities Menu 
 **************************************/

CalendarSearch = CalendarSRC {
	moniker = 'F', "Find";
#ifdef GPC_ONLY
	kbdAccelerator = specificUI F2;
#else
	kbdAccelerator = control 'f';
#endif
	enableFlags = "mask SREF_SEARCH";
	visibility = dialog;
	output = MySearchObject;
	genStates = default +enabled;
	hints = {
		ATTR_GEN_CONTROL_PROHIBIT_UI {
			word	mask SRCF_FIND_PREV or \
				mask SRCF_REPLACE_CURRENT or \
				mask SRCF_REPLACE_ALL or \
				mask SRCF_REPLACE_ALL_IN_SELECTION or \
				mask SRCF_PARTIAL_WORDS or \
				mask SRCF_IGNORE_CASE or \
				mask SRCF_WILDCARDS or \
				mask SRCF_SPECIAL_CHARS
		},
		ATTR_GEN_HELP_CONTEXT {
			char "dbFind", 0
		},
		ATTR_GEN_CONTROL_DO_NOT_USE_LIBRARY_NAME_FOR_HELP
	}
}


/**************************************
 * Preferences Box
 **************************************/

OptionsMenu = GenInteraction {
	children =
		SetUserLevelDialog,
		OptionsGroup,
		SaveResetGroup;
	visibility = popup;
	hints = {
		ATTR_GEN_INTERACTION_GROUP_TYPE {
			GenInteractionGroupType GIGT_OPTIONS_MENU
		}
	}
}

OptionsGroup = GenInteraction {
	children = PreferencesBox;
}

SaveResetGroup = GenInteraction {
	children = SaveOptionsTrigger, ResetOptionsTrigger;
}

SaveOptionsTrigger = GenTrigger {
	SAVE_OPTIONS_TRIGGER_VALUES
	action = MSG_META_SAVE_OPTIONS, Calendar;
}

ResetOptionsTrigger = GenTrigger {
	RESET_OPTIONS_TRIGGER_VALUES
	action = MSG_CALENDAR_APP_QUERY_RESET_OPTIONS, Calendar;
}

/* See the "PrefBlock" for the dialog box definition */


/**************************************
 * GeoDex DDE Trigger
 **************************************/

GeoDexTrigger = GenTrigger {
	moniker = 'F', "Find in Contacts";
	action = MSG_CALENDAR_SEARCH_GEODEX, process;
	genStates = default -enabled;
	hints = {
	    HINT_TRIGGER_BRINGS_UP_WINDOW
	}
}

end	MenuBlock;
