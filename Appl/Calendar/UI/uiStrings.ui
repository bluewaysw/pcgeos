/****************************************************************************

	Copyright (c) GeoWorks 1989 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		Calendar/UI
FILE:		uiStrings.ui

AUTHOR:		Don Reeves, 2-23-91

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Don	2/23/91		Initial revsion - moved from calendar.ui
	Richard	4/12/95		Make Monday first day of week for Responder
	RR	6/8/95		Variable length event error messages

DESCRIPTION:
	Contains the string and data resources for the GeoPlanner application
		
	$Id: uiStrings.ui,v 1.2 97/07/01 12:12:11 newdeal Exp $

*****************************************************************************/

/*****************************************************************************
 *                         Day & Month Strings                               *
 *****************************************************************************/

start	DataBlock, data;

/*
 * The day of week abbreviations
 */
chunk suntext	= "S";
chunk montext	= "M";
chunk tuetext	= "T";
chunk wedtext	= "W";
chunk thutext	= "T";
chunk fritext	= "F";
chunk sattext	= "S";
#if _DATE_ON_TITLE_BAR
chunk todayis	= "Today is";
#endif
chunk hyphen	= " -";

chunk noRepeats	= "No Repeating Events";


/*****************************************************************************
 *                            Bitmap Definitions                             *
 *****************************************************************************/

#include "alarmIconOn.ui"
#include "alarmIconOff.ui"
#include "repeatIcon.ui"

#if	_TODO
chunk	completeIcon	= data {
	Bitmap <13,12,BMC_PACKBITS,BMF_MONO>
	db	0x01, 0x00, 0x08
	db	0x01, 0x00, 0x18
	db	0x01, 0x00, 0x30
	db	0x01, 0x00, 0x60
	db	0x01, 0x00, 0xc0
	db	0x01, 0x01, 0x80
	db	0x01, 0xc3, 0x80
	db	0x01, 0xe7, 0x00
	db	0x01, 0x7e, 0x00
	db	0x01, 0x3c, 0x00
	db	0x01, 0x1c, 0x00
	db	0x01, 0x08, 0x00
}

 
chunk	highPriorityIcon = data {
	Bitmap <13,12,BMC_PACKBITS,BMF_MONO>
	db	0x01, 0x02, 0x00
	db	0x01, 0x07, 0x00
	db	0x01, 0x07, 0x00
	db	0x01, 0x0f, 0x80
	db	0x01, 0xff, 0xf8
	db	0x01, 0x7f, 0xf0
	db	0x01, 0x1f, 0xc0
	db	0x01, 0x3f, 0xe0
	db	0x01, 0x3f, 0xe0
	db	0x01, 0x78, 0xf0
	db	0x01, 0x60, 0x30
	db	0x01, 0x80, 0x08
}

#endif		/* if TODO */

chunk	undoDeleteEventStr	= "Delete Event";
chunk	undoInsertEventStr	= "Insert Event";
chunk	undoRevertTextStr	= "Text Change";
chunk	undoRevertTimeStr	= "Time Change";

	
end	DataBlock;



start	ErrorBlock, data;

/* The ErrorArray contains groups of two words:
 *	word1:	Chunk handle of a string in this resource block
 *	word2:	Complete error type (use DON_constants)
 */
chunk ErrorArray = data {
	nptr	BadTimeText			/* CAL_ERROR_BAD_TIME */
	word	DON_ERROR
	nptr	BadDateText			/* CAL_ERROR_BAD_DATE */
	word	DON_ERROR
	nptr	BadRepeatWeeklyText		/* CAL_ERROR_REPEAT_WEEKLY */
	word	DON_ERROR
	nptr	BadRepeatDateYearText		/* CAL_ERROR_REPEAT_DATE_Y */
	word	DON_ERROR
	nptr	BadRepeatNoTextText		/* CAL_ERROR_REPEAT_NOTEXT */
	word	DON_ERROR
	nptr	SearchEndOfEventText		/* CAL_ERROR_END_OF_DB */
	word	CustomDialogBoxFlags <0, CDT_QUESTION, GIT_AFFIRMATION,0>
	nptr	SearchCompleteText		/* CAL_ERROR_SEARCH_DONE */
	word	DON_NOTIFY
	nptr	SearchNoMatchText		/* CAL_ERROR_NO_MATCH */
	word	DON_NOTIFY
	nptr	NoGeodexText			/* CAL_ERROR_NO_GEODEX */
	word	DON_ERROR
	nptr	NoFileOpenText			/* CAL_ERROR_NO_FILE */
	word	DON_ERROR
	nptr	BadYearText			/* CAL_ERROR_BAD_YEAR */
	word	DON_WARNING			
	nptr	PrefStartGtrEndText		/* CAL_ERROR_START_GTR_END */
	word	DON_ERROR
	nptr	TextGettingLargeText		/* CAL_ERROR_GETTING_LARGE */
	word	DON_WARNING
	nptr	TextTooLargeText		/* CAL_ERROR_TOO_LARGE */
	word	DON_ERROR
	nptr	DocTooLargeText			/* CAL_ERROR_DOC_TOO_LARGE */
	word	DON_WARNING
	nptr	TimeRevertedText		/* CAL_ERROR_TIME_REVERTED */
	word	DON_NOTIFY
	nptr	RepeatDatesText			/* CAL_ERROR_REPEAT_DATES */
	word	DON_ERROR
	nptr	EventTableTooBigText		/* CAL_ERROR_ET_TOO_BIG */
	word	DON_ERROR
	nptr	EventsWontFitText		/* CAL_ERROR_EVENTS_WONT_FIT */
	word	CustomDialogBoxFlags <0, CDT_WARNING, GIT_AFFIRMATION,0>
	nptr	YearTooSmallText		/* CAL_ERROR_YEAR_TOO_SMALL */
	word	DON_ERROR
#ifdef DO_PIZZA /* Pizza */
	nptr	HolidayFileOpenText		/* CAL_ERROR_H_FILE_OPEN */
	word	DON_ERROR
	nptr	HolidayFileReadText		/* CAL_ERROR_H_FILE_READ */
	word	DON_ERROR
	nptr	HolidayDateOrderText		/* CAL_ERROR_H_DATE_ORDER */
	word	DON_ERROR
#endif
}
 
chunk BadTimeText = "Please enter the time like this: \\\"\\1\\\"";

chunk BadDateText = "Please enter the date like this: \\\"\\1\\\", and make sure that the number of days in the month is valid.";

chunk BadRepeatWeeklyText = "Please select one or more days in the \\\"Event Will Occur\\\" section of the dialog box.";

chunk BadRepeatDateYearText = "The chosen day and month combination can never occur. Please select again.\\\r\\\rMessage Code: PL-01";

chunk BadRepeatNoTextText = "Please enter an event description in the General Information section of the dialog box. The description must contain at least one visible character.";

chunk SearchEndOfEventText = "Search was completed through \\1. Continue search from the beginning?";

chunk SearchCompleteText = "Search Complete.";

chunk SearchNoMatchText = "Search complete. No matches found.";

chunk NoGeodexText = "Unable to connect with Contacts.\\\r\\\rMessage Code: PL-02";

chunk NoFileOpenText = "You must open a Calendar document before you can search for text from Contacts.\\\r\\\rMessage Code: PL-03";

chunk BadYearText = "Calendar can only display dates between 1904 and 2099.\\\r\\\rMessage Code: PL-04";

chunk PrefStartGtrEndText = "Please enter a Start Time that is earlier than the End Time.\\\r\\\rMessage Code: PL-05";

chunk TextGettingLargeText = "The description for this event is getting too long. Some text may not be saved. Try separating the information into several events.\\\r\\\rMessage Code: PL-06";

chunk TextTooLargeText = "The description for this event is too long. Some of the text at the end of the event has been deleted.\\\r\\\rMessage Code: PL-07";

chunk DocTooLargeText = "The selected days contain more events than can be displayed in the window. Please select a smaller range of days.\\\r\\\rMessage Code: PL-08";

chunk TimeRevertedText = "The event time entered, \\\"\\1\\\", cannot be understood. It has been changed back to \\\"\\2\\\".\\\r\\\rIf you are trying to enter text for an event, hit either the \\\"Tab\\\" or \\\"Enter\\\" keys and then start typing, or click with the mouse to the right of the time and the vertical bar.\\\r\\\rMessage Code: PL-09";

chunk RepeatDatesText = "The \\\"From\\\" date must be earlier than the \\\"To\\\" date.\\\r\\\rMessage Code: PL-10";

chunk EventTableTooBigText = "Calendar can't display more than 1000 events at once. Please select a smaller range of days.\\\r\\\rMessage Code: PL-11";

chunk EventsWontFitText = "The month is too small to hold event text. Do you want the empty month printed anyway?";

chunk YearTooSmallText = "The month or year is too small to be printed. Try a larger page size.\\\r\\\rMessage Code: PL-12";


#ifdef DO_PIZZA /* Pizza */
chunk	HolidayFileOpenText = "The holiday data file could not be opened. Please close the data file currently opened by another application, and start this application again.\\\r\\\rMessage Code: PL-H-1";

chunk	HolidayFileReadText = "The holiday data could not be read normally. It is a data format error. Please start this application again after investigating the data file.\\\r\\\rMessage Code: PL-H-2";

chunk	HolidayDateOrderText = "Date order of holiday data is wrong. It is a data format error. Please set up a holiday data again after investigating the data file.\\\r\\\rMessage Code: PL-H-3";
#endif

end	ErrorBlock;

#ifdef DO_PIZZA /* Pizza */
/*****************************************************************************
 *                     Holiday Setting Strings                               *
 *****************************************************************************/
/*
start	HolidayStrings, data;

chunk	sarrayErrorString = "It is a holiday data structure error. Data could not be saved.";
chunk	fopenErrorString = "The holiday data file could not be opened. Please close the data file currently opened by another application, and start this application again.";
chunk	fwriteErrorString = "The holiday data could not be written normally. It is a data format error. Please set up a holiday data again after investigating the data file.";
chunk	dataSaveString = "Holiday data have been changed. Do you wish to save the changes?";
chunk	undicideddataSaveString = "Holiday data are undecided now. Do you wish to save the changes?";

end	HolidayStrings;
*/
#endif

