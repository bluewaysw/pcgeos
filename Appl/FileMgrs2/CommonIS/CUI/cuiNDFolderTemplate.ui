
/*
*
* Project:    PC GEOS
* Module:    desktop
* File:    CUI/cuiNDFolderTemplate.ui
*
* Author:    Dave Litwin
*
*    This File contains the user Interface description for the basic
*    NewDesk folder window and the basic NewDesk folder
*    object from which all the BA folder object classes will subclass.
*    If we are compiling BA, the folder object used it BAFolder, not
*    the NDFolder of NewDesk alone.
*
*    $Id: cuiNDFolderTemplate.ui,v 1.5 98/06/15 14:07:48 joon Exp $
*
*/


start NDFolderObjectTemplate;
/* do not change object offset */
#if _NEWDESKONLY
NDFolderObject = NDFolder {
#else
NDFolderObject = BAFolder {
#endif
    ndObjType = "WOT_FOLDER";
    popUpType = WPUT_SELECTION;
    hints = {
        ATTR_FOLDER_HELP_CONTEXT { char "oDocF", 0 }
    }
}
end NDFolderObjectTemplate;

start NDFolderDummyResource;
/* do not change object offset */
#if _NEWDESKONLY
NDFolderDummy = NDFolder {
#else
NDFolderDummy = BAFolder {
#endif
    ndObjType = "WOT_FOLDER";
    popUpType = WPUT_SELECTION;
    hints = {
        ATTR_FOLDER_HELP_CONTEXT { char "oDocF", 0 }
    }
}
end NDFolderDummyResource;

start NDSystemFolderObjectTemplate;
/* do not change object offset */
#if _NEWDESKONLY
NDSystemFolderObject = NDFolder {
#else
NDSystemFolderObject = BAFolder {
#endif
    shellObjectAttrs = default -movable, -copyable, -deletable;
    ndObjType = "WOT_FOLDER";
    popUpType = WPUT_SELECTION;
    hints = {
        ATTR_FOLDER_HELP_CONTEXT { char "oDocF", 0 }
    }
}
end NDSystemFolderObjectTemplate;

start NDSystemFolderDummyResource;
#if _NEWDESKONLY
NDSystemFolderDummy = NDFolder {
#else
NDSystemFolderDummy = BAFolder {
#endif
    shellObjectAttrs = default -movable, -copyable, -deletable;
    ndObjType = "WOT_FOLDER";
    popUpType = WPUT_SELECTION;
    hints = {
        ATTR_FOLDER_HELP_CONTEXT { char "oDocF", 0 }
    }
}
end NDSystemFolderDummyResource;

start NDFolderWindowTemplate;
/* do not change object offset */
NDFolderWindow = NEWDESK_PRIMARY {
    ENTRY_LEVEL_STATE(ELS_NULL)
#if _NEWDESKBA
    children = NDFolderView, NDFolderInfo, NDFolderMenu,
           NDFolderButtonGroup;
#else
    children = NDFolderDirTools,
#if GPC_NAMES_AND_DETAILS_TITLES
            NDFolderViewGroup
#else
            NDFolderView
#endif
            , NDFolderInfo, NDFolderMenu, NDFolderMenuView
            , NDFolderMenuBrowseOptions;
#endif
    genStates = default -usable;
    hints = {
#if _NEWDESKBA
        ENTRY_LEVEL_HINTS,
        ATTR_EL_HELP_CONTEXT { char "aDocFolder", 0 },
#endif
        ATTR_GEN_HELP_CONTEXT {
            char "oDocF", 0
        },
        HINT_SIZE_WINDOW_AS_DESIRED,
        HINT_SIZE_WINDOW_AS_RATIO_OF_FIELD {
            SpecWinSizePair < mask SWSS_RATIO or PCT_75, \
                              mask SWSS_RATIO or PCT_75 >
        },
        HINT_PRIMARY_NO_FILE_MENU,
        HINT_PRIMARY_NO_EXPRESS_MENU,
            ATTR_GEN_WINDOW_CUSTOM_LAYER_ID {
            word 0
        }
    }
}

/* do not change object offset */
NDFolderView = DesktopView {
    output = null;        /* set when duplicated */
    viewAttributes = focusable, dragScrolling;
    vertAttributes = scrollable;
    horizAttributes = scrollable;
    docRight = FOLDER_PANE_HORIZ_DOC;
    docBottom = FOLDER_PANE_VERT_DOC;
    genAttributes = default +initiatesBusyState, +targetable;
    hints = {
        HINT_DEFAULT_TARGET,
        HINT_DEFAULT_FOCUS,
        HINT_VIEW_REMOVE_SCROLLERS_WHEN_NOT_SCROLLABLE,
        HINT_INITIAL_SIZE {
            word    FOLDER_PANE_HORIZ_OPEN
            word    FOLDER_PANE_VERT_OPEN
        },
        HINT_MINIMUM_SIZE {
            word    0
            word    FOLDER_PANE_VERT_MIN
        }
    }
}

/* do not change object offset */
#if _PEN_BASED
NDFolderInfo = NoQTText {
#else
NDFolderInfo = PathnameStorage {
#endif
    genAttributes = readOnly;
    textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES,
                    allowTextOffEnd, singleLineText;
    hints = {
        HINT_EXPAND_WIDTH_TO_FIT_PARENT,
        HINT_TEXT_FRAME
    }
}

/* do not change object offset */
NDFolderMenu = NDSortViewPopupMenu {
    moniker = 'F', "File";
    sortViewParent = NDFolderMenuOther;
    sortViewPosition = 3;
    sortViewFlags = "mask NDSVPMF_NOT_FOR_MENU";
    visibility = popup;
    children =    NDFolderMenuFile,
            NDFolderMenuOther,
            NDFolderMenuPrint,
            NDFolderMenuClose;
    hints = {
        HINT_INFREQUENTLY_USED            /* not pinnable */
    }
}

#if GPC_NAMES_AND_DETAILS_TITLES
/*---- names and details column titles ---*/
/* do not change object offset */
NDFolderViewGroup = GenInteraction {
    children = NDFolderTitles, NDFolderView;
    hints = {
        HINT_EXPAND_WIDTH_TO_FIT_PARENT,
        HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
        HINT_ORIENT_CHILDREN_VERTICALLY,
        HINT_CUSTOM_CHILD_SPACING {
            word 0
        }
    }
}

/* do not change object offset */
NDFolderTitles = GenInteraction {
    children = NDFolderTitleName, NDFolderTitleSize,
            NDFolderTitleDate
#if GPC_NO_NAMES_AND_DETAILS_ATTRS
                ;
#else
            , NDFolderTitleAttr;
#endif
    genStates = default -usable;
    hints = {
        HINT_ORIENT_CHILDREN_HORIZONTALLY,
        HINT_EXPAND_WIDTH_TO_FIT_PARENT,
        HINT_CUSTOM_CHILD_SPACING {
            word 0
        },
        HINT_TOOLBOX
    }
}
/* do not change object offset */
NDFolderTitleName = GenTrigger {
    moniker = "Name";
    action = MSG_SET_SORT_MODE, process;
    hints = {
        HINT_FIXED_SIZE {
            word    0
            word    0
        },
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    mask FIDS_NAME
        }
    }
}
/* do not change object offset */
NDFolderTitleSize = GenTrigger {
    moniker = "Size";
    action = MSG_SET_SORT_MODE, process;
    hints = {
        HINT_FIXED_SIZE {
            word    0
            word    0
        },
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    mask FIDS_SIZE
        }
    }
}
/* do not change object offset */
NDFolderTitleDate = GenTrigger {
    moniker = "Modified";
    action = MSG_SET_SORT_MODE, process;
    hints = {
        HINT_FIXED_SIZE {
            word    0
            word    0
        },
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    mask FIDS_DATE
        }
    }
}
/* do not change object offset */
NDFolderTitleAttr = GenTrigger {
    moniker = "Attr";
    hints = {
        HINT_FIXED_SIZE {
            word    0
            word    0
        }
    }
}
#endif

/* do not change object offset */
NDFolderMenuDisplayOptions = GenInteraction {
    children = NDFolderMenuDisplayOptionsList;
    genStates = default -usable;
    hints = {
        ATTR_GEN_INIT_FILE_PROPAGATE_TO_CHILDREN
    }
}
/* do not change object offset */
NDFolderMenuDisplayOptionsList = GenBooleanGroup {
    children = NDFolderMenuDisplayOptionsHidden;
    applyMsg = MSG_SET_VIEW_OPTIONS;
    destination = process;
    hints = {
        ATTR_GEN_INIT_FILE_KEY {char "displayOptions", 0}
    }
}
/* do not change object offset */
NDFolderMenuDisplayOptionsHidden = GenBoolean {
    moniker = 'H', "Show Hidden Files";
    identifier = "mask FIDA_HIDDEN";
}

/*---- Options menu ----*/
NDFolderMenuBrowseOptions = NDPopupMenu {
    moniker = 'O', "Options";
    visibility = popup;
    children =    NDFolderMenuBrowseList;
    hints = {
        HINT_INFREQUENTLY_USED            /* not pinnable */
    }
}
NDFolderMenuBrowseList = GenItemGroup {
    children = NDFolderMenuBrowseSingle,
           NDFolderMenuBrowseMultiple;
    applyMsg = MSG_SET_BROWSE_MODE;
    destination = process;
    genAttributes = default +initiatesBusyState;
    /* setting read from .ini in GetInitFileMappings and saved
       in NDDesktopSetBrowseMode */
}
NDFolderMenuBrowseSingle = GenItem {
    moniker = 'S', "Browse in Single Window";
    identifier = "mask FIBM_SINGLE";
}
NDFolderMenuBrowseMultiple = GenItem {
    moniker = 'M', "Browse in Multiple Windows";
    identifier = "mask FIBM_MULTIPLE";
}

NDFolderMenuView = NDSortViewPopupMenu {
    moniker = 'V', "View";
    children = NDFolderMenuViewSortView, NDFolderMenuRescan;
    sortViewParent = NDFolderMenuViewSortView;
    sortViewPosition = 0;
    sortViewFlags = "mask NDSVPMF_VIEW_NOT_SUBMENU";
    visibility = popup;
    hints = {
        HINT_INFREQUENTLY_USED            /* not pinnable */
    }
}

NDFolderMenuViewSortView = GenInteraction {
}

NDFolderMenuRescan = GenTrigger {
    moniker = 'R', "Rescan";
    action = MSG_WINDOWS_REFRESH_CURRENT, "TO_OBJ_BLOCK_OUTPUT";
}

NDFolderMenuOpen = GenTrigger {
    moniker = 'O', "Open";
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_OPEN_SELECT_LIST
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

/*---- NDFolderMenuFolderOptions ----*/
NDFolderMenuFolderOptions = GenInteraction {
#if _NEWDESKBA
    children = NDFolderMenuDistribute, NDFolderMenuOptions;
#else
    children = NDFolderMenuOptions;
#endif
}

#if _NEWDESKBA
NDFolderMenuDistribute = GenTrigger {
    moniker = 'i', "Distribute to Students";
    action = MSG_ND_FOLDER_SEND_AS_WHITESPACE, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_BA_DISTRIBUTE_FILES
        }
    }
}
#endif        /* #if _NEWDESKBA */

NDFolderMenuOptions = GenInteraction {
    moniker = 'p', "Options";
/*    children =    NDFolderMenuGetInfo,
            NDFolderMenuAttributes;
*/
    visibility = popup;
    hints = {
        HINT_INFREQUENTLY_USED
    }
}

NDFolderMenuGetInfo = GenTrigger {
    moniker = 'I', "File Info";
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_GET_INFO
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

NDFolderMenuAttributes = GenTrigger {
    moniker = 'A', "Attributes";
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_CHANGE_ATTR
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}


/*---- NDFolderMenuFile ----*/
NDFolderMenuFile = GenInteraction {
    children =    NDFolderMenuOpen,
            NDFolderMenuMove,
            NDFolderMenuCopy,
            NDFolderMenuDuplicate,
            NDFolderMenuRename,
            NDFolderMenuThrowAway,
                    NDFolderMenuGetInfo;
}

NDFolderMenuCopy = GenTrigger {
    moniker = 'y', "Copy";
    kbdAccelerator = specificUI F8;
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_COPY
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

NDFolderMenuDuplicate = GenTrigger {
    moniker = 't', "Duplicate";
    kbdAccelerator = specificUI F9;
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_DUPLICATE
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

NDFolderMenuMove = GenTrigger {
    moniker = 'M', "Move";
    kbdAccelerator = specificUI F7;
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_MOVE
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

NDFolderMenuRename = GenTrigger {
    moniker = 'R', "Rename";
    kbdAccelerator = specificUI F2;
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_RENAME
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

NDFolderMenuThrowAway = GenTrigger {
    moniker = 'D', "Delete";
    kbdAccelerator = specificUI DELETE;
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_THROW_AWAY
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

NDFolderMenuPrint = GenTrigger {
    moniker = 'P', "Print";
    kbdAccelerator = ctrl 'P';
    genAttributes = default +initiatesInputIgnore;
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_PRINT
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}

/*---- NDFolderMenuOther ---*/
NDFolderMenuOther = GenInteraction {
    children =    NDFolderMenuCreateFolder,
            NDFolderMenuSelectAll,
#ifdef CREATE_LINKS
            NDFolderMenuDeselectAll,
            NDFolderMenuCreateLink;
#else
            NDFolderMenuDeselectAll;
#endif
}

NDFolderMenuSelectAll = GenTrigger {
    moniker = 'S', "Select All";
    kbdAccelerator = ctrl 'A';
    action = MSG_ND_FOLDER_SEND_AS_WHITESPACE, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_SELECT_ALL
        }
    }
}

NDFolderMenuDeselectAll = GenTrigger {
    moniker = 'l', "Deselect All";
    kbdAccelerator = ctrl shift 'A';
    action = MSG_ND_FOLDER_SEND_AS_WHITESPACE, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_DESELECT_ALL
        }
    }
}

/*---- NDFolderMenuCreateFolder ----*/
NDFolderMenuCreateFolder = GenTrigger {
    moniker = 'F', "Create Folder";
    kbdAccelerator = specificUI INSERT;
    action = MSG_ND_FOLDER_SEND_AS_WHITESPACE, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_CREATE_DIR
        }
    }
}

#ifdef CREATE_LINKS
NDFolderMenuCreateLink = GenTrigger {
    moniker = 'k', "Create Desktop Link";
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_CREATE_LINK
            word    0
            word    ERROR_NO_SELECTION
        }
    }
}
#endif

/*---- NDFolderMenuClose ---*/
NDFolderMenuClose = GenTrigger {
    moniker = 'C', "Close";
    action = MSG_ND_FOLDER_SEND_AS_WHITESPACE, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FOLDER_CLOSE
        }
    }
}


#if _NEWDESKBA
/* Assistance Buttons for NDFolder */
NDFolderButtonGroup = GenInteraction {
    children = NDFolderOpenItemTrigger, NDFolderRemoveItemTrigger,
           NDFolderCopyItemTrigger, NDFolderCloseTrigger,
           NDFolderHelpTrigger;
    hints = {
        HINT_ORIENT_CHILDREN_HORIZONTALLY,
        HINT_EXPAND_WIDTH_TO_FIT_PARENT,
        HINT_FULL_JUSTIFY_CHILDREN_HORIZONTALLY,
        HINT_INCLUDE_ENDS_IN_CHILD_SPACING
    }
}

NDFolderOpenItemTrigger = GenTrigger {
    moniker = 'O', "Open Item";
    action = MSG_ND_FOLDER_SEND_AS_SINGLE_SELECTION, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_OPEN_SELECT_LIST
            word    0
            word    ERROR_OPEN_INCORRECT_SELECTION
        }
    }
}

NDFolderRemoveItemTrigger = GenTrigger {
    moniker = 'R', "Remove Item";
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_THROW_AWAY
            word    0
            word    ERROR_THROW_AWAY_NO_SELECTION
        }
    }
}

NDFolderCopyItemTrigger = GenTrigger {
    moniker = 'p', "Copy Item";
    action = MSG_ND_FOLDER_SEND_AS_SELECTED_ITEMS, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        HINT_TRIGGER_BRINGS_UP_WINDOW,
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FM_START_COPY
            word    0
            word    ERROR_COPY_NO_SELECTION
        }
    }
}

NDFolderCloseTrigger = GenTrigger {
    moniker = 'C', "Close";
    action = MSG_ND_FOLDER_SEND_AS_WHITESPACE, "TO_OBJ_BLOCK_OUTPUT";
    hints = {
        ATTR_GEN_TRIGGER_ACTION_DATA {
            word    MSG_FOLDER_CLOSE
        }
    }
}

NDFolderHelpTrigger = GenTrigger {
    action = MSG_META_BRING_UP_HELP, "TO_SELF";
    hints = {
        ATTR_GEN_DEFAULT_MONIKER {
            word GDMT_HELP;
        },
        ATTR_GEN_HELP_CONTEXT { char "oDocF",0 }
    }
}
#endif            /* #if _NEWDESKBA */

NDFolderDirTools = GenInteraction {
    children = NDFolderDirUpButton, NDFolderDirPath;
    hints = {
        HINT_TOOLBOX,
        HINT_ORIENT_CHILDREN_HORIZONTALLY,
        HINT_EXPAND_WIDTH_TO_FIT_PARENT,
        HINT_CENTER_CHILDREN_VERTICALLY
    }
}
#include "../CArt/mkrNDFolderDirUp.ui"

DummyUnusedObject = GenGlyph {
    genStates = default -usable;
}

NDFolderDirUpButton = DirTool {
    toolType = DIRTOOL_UPDIR;
    moniker = list { NDFolderDirUpMoniker, NDFolderDirUpMonikerBW }
    action = MSG_FOLDER_UP_DIR, "TO_OBJ_BLOCK_OUTPUT";
    kbdAccelerator = specificUI BACKSPACE;
    hints = {
        ATTR_GEN_EXTRA_KBD_ACCELERATORS {
        KeyboardShortcut <0, 0, 1, 0, 0, C_SMALL_U> /* ctrl-u */
        }
    }
}
#if _PEN_BASED
NDFolderDirPath = NoQTText {
#else
NDFolderDirPath = PathnameStorage {
#endif
    genAttributes = readOnly;
    textDisplayAttributes = DESK_SINGLE_LINE_DISPLAY_ATTRIBUTES,
                    allowTextOffEnd, singleLineText;
    hints = {
        HINT_EXPAND_WIDTH_TO_FIT_PARENT,
        HINT_INITIAL_SIZE {
            SpecWidth <SST_PIXELS, 10>,
            SpecHeight <0, 0>
        }
    }
}

end NDFolderWindowTemplate;


