/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDRemovableDiskSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 539
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0xf7, 0xbb, 0x00, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x02, 0xb9, 0x99, 0x8f, 0xfc, 0xff, 
		0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x03, 0xb9, 0x99, 0x8f, 0x00, 0xfd, 
		0xff, 0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x03, 0xb9, 0x99, 0x8f, 0x44, 0xfd, 
		0xff, 0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x02, 0xb9, 0x99, 0x8f, 0xfc, 0xff, 
		0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x02, 0xb9, 0x99, 0x8f, 0xfc, 0xff, 
		0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x02, 0xb9, 0x99, 0x8f, 0xfc, 0xff, 
		0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x02, 0xb9, 0x99, 0x8f, 0xfc, 0xff, 
		0x02, 0x09, 0x99, 0x1d
	db	0xfe, 0x00, 0x02, 0x3f, 0xff, 0xfe
	db	0xf4, 0xdd, 0x02, 0xb9, 0x99, 0x8f, 0xfc, 0xff, 
		0x02, 0x09, 0x99, 0x1d
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0xfe
	db	0xfd, 0xdd, 0x00, 0xd8, 0xf9, 0x88, 0x02, 0xb9, 
		0x99, 0x8f, 0xfc, 0xff, 0x02, 0x09, 0x99, 0x1d
	db	0x00, 0x01, 0xfd, 0xff, 0x00, 0xfe
	db	0xfe, 0xdd, 0x01, 0xd8, 0x87, 0xf9, 0x77, 0x02, 
		0xb9, 0x99, 0x84, 0xfe, 0x11, 0x04, 0x44, 0x11, 
		0x09, 0x99, 0x1d
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xfe
	db	0x03, 0xdd, 0xdd, 0xd8, 0x87, 0xf8, 0x77, 0x02, 
		0xb9, 0x99, 0x81, 0xfe, 0x11, 0x04, 0x44, 0xff, 
		0x09, 0x99, 0x1d
	db	0x00, 0x1f, 0xfd, 0xff, 0x00, 0xfe
	db	0x02, 0xdd, 0xd8, 0x87, 0xf7, 0x77, 0x02, 0xb9, 
		0x99, 0x90, 0xfc, 0x00, 0x02, 0x99, 0x99, 0x1d
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0xfe
	db	0x00, 0xdd, 0xf5, 0xff, 0x00, 0xb9, 0xf8, 0x99, 
		0x00, 0x1d
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xfe
	db	0x01, 0xdf, 0xf7, 0xf6, 0x77, 0x00, 0xb9, 0xf8, 
		0x99, 0x00, 0x1d
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xfe
	db	0x03, 0xdf, 0x77, 0x22, 0x27, 0xf8, 0x77, 0x00, 
		0xb9, 0xf8, 0x99, 0x00, 0x1d
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xfe
	db	0x03, 0xdf, 0x77, 0x22, 0x2f, 0xf8, 0x77, 0x00, 
		0xb9, 0xf8, 0x99, 0x00, 0x1d
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xfe
	db	0x06, 0xdf, 0x77, 0xff, 0xff, 0x77, 0x77, 0x78, 
		0xfb, 0x88, 0x01, 0x11, 0x99, 0xfb, 0x00, 0x02, 
		0x09, 0x98, 0x1d
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xfe
	db	0x06, 0xdf, 0x77, 0x44, 0x47, 0x77, 0x77, 0x78, 
		0xfb, 0x00, 0x02, 0x01, 0x19, 0x07, 0xfe, 0x77, 
		0x04, 0x78, 0x88, 0x09, 0x81, 0x1d
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xfc
	db	0x06, 0xdf, 0x77, 0x44, 0x4f, 0x77, 0x77, 0x78, 
		0xfa, 0x00, 0x01, 0x11, 0x07, 0xfe, 0x77, 0x04, 
		0x78, 0x88, 0x08, 0x11, 0xdd
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0xf8
	db	0x06, 0xdf, 0x77, 0xff, 0xff, 0x77, 0x77, 0x7f, 
		0xfa, 0xff, 0x00, 0xf1, 0xfa, 0x11, 0x01, 0x1d, 
		0xdd
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0x00
	db	0x00, 0xdf, 0xf1, 0x77, 0x02, 0x78, 0x80, 0xf0, 
		0xfd, 0xdd
	db	0x00, 0x7f, 0xfd, 0xff, 0x00, 0x00
	db	0x00, 0xdf, 0xf1, 0x77, 0x02, 0x78, 0x0f, 0x80, 
		0xfd, 0xdd
	db	0x00, 0x7f, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0x00, 0xd8, 0xf1, 0x88, 0x02, 0x80, 0xf8, 0x0d, 
		0xfd, 0xdd
	db	0x00, 0x7f, 0xfe, 0xff, 0x01, 0xfc, 0x00
	db	0x00, 0xdf, 0xf1, 0xff, 0x01, 0xf7, 0x70, 0xfc, 
		0xdd
	db	0x00, 0x7f, 0xfe, 0xff, 0x01, 0xf8, 0x00
	db	0x00, 0xdf, 0xf1, 0x77, 0x01, 0x70, 0x0d, 0xfc, 
		0xdd
	db	0x00, 0x3f, 0xfe, 0xff, 0x01, 0xf0, 0x00
	db	0x00, 0xdd, 0xf0, 0x00, 0xfb, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDRemovableDiskSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x3f, 0xff, 0xfe
	db	0x00, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0xc0, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0xc0, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x00, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x00, 0x7f, 0xff, 0xe2, 0x00, 0x22
	db	0x01, 0x80, 0x00, 0x23, 0xff, 0xe2
	db	0x06, 0x00, 0x00, 0x23, 0xff, 0xe2
	db	0x18, 0x00, 0x00, 0x21, 0xff, 0xc2
	db	0x3f, 0xff, 0xff, 0xe0, 0x00, 0x02
	db	0x40, 0x00, 0x00, 0x20, 0x00, 0x02
	db	0x4e, 0x00, 0x00, 0x20, 0x00, 0x02
	db	0x4e, 0x00, 0x00, 0x20, 0x00, 0x02
	db	0x40, 0x07, 0xff, 0xe3, 0xff, 0xe2
	db	0x4e, 0x04, 0x00, 0x12, 0x01, 0xe6
	db	0x4e, 0x04, 0x00, 0x0a, 0x01, 0xec
	db	0x40, 0x07, 0xff, 0xff, 0xff, 0xf8
	db	0x40, 0x00, 0x00, 0x00, 0x1f, 0x00
	db	0x40, 0x00, 0x00, 0x00, 0x1f, 0x00
	db	0x40, 0x00, 0x00, 0x00, 0x1e, 0x00
	db	0x40, 0x00, 0x00, 0x00, 0x1c, 0x00
	db	0x7f, 0xff, 0xff, 0xff, 0xf8, 0x00
	db	0x3f, 0xff, 0xff, 0xff, 0xf0, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDRemovableDiskSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x3f, 0xff, 0xfe
	db	0x07, 0xff, 0xff, 0xe2, 0x00, 0x22
	db	0x18, 0x00, 0x00, 0x22, 0xc0, 0x22
	db	0x3f, 0xff, 0xff, 0xe2, 0xc0, 0x22
	db	0x40, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x4e, 0x00, 0x00, 0x22, 0x00, 0x22
	db	0x40, 0x07, 0xff, 0xe3, 0xff, 0xe2
	db	0x40, 0x04, 0x00, 0x21, 0xff, 0xc2
	db	0x40, 0x07, 0xff, 0xe0, 0x00, 0x02
	db	0x40, 0x00, 0x00, 0x23, 0xff, 0xe2
	db	0x40, 0x00, 0x00, 0x32, 0x01, 0xe6
	db	0x7f, 0xff, 0xff, 0xfa, 0x01, 0xe8
	db	0x3f, 0xff, 0xff, 0xff, 0xff, 0xf8
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/newdesk.tiny.pcx with pixel 13 masked out
 */
start NDStandardTCMonikerResource, data;
visMoniker NDRemovableDiskTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 156
		Bitmap <15,15,0,BMF_4BIT or mask BMT_MASK>
	db	0x03, 0xfe
	db	0xdd, 0xdd, 0xdd, 0x99, 0x99, 0x99, 0x99, 0x10
	db	0x03, 0xfe
	db	0xdd, 0xdd, 0xdd, 0x99, 0x4f, 0xff, 0xf9, 0x10
	db	0x03, 0xfe
	db	0xdd, 0xdd, 0xdd, 0x99, 0xff, 0xff, 0xf9, 0x10
	db	0x03, 0xfe
	db	0xdd, 0xdd, 0xdd, 0x99, 0xff, 0xff, 0xf9, 0x10
	db	0x03, 0xfe
	db	0xdd, 0xdd, 0xdd, 0x99, 0xff, 0xff, 0xf9, 0x10
	db	0x03, 0xfe
	db	0xdd, 0xdd, 0xdd, 0x99, 0x11, 0x11, 0x49, 0x10
	db	0x3f, 0xfe
	db	0xdd, 0x88, 0x88, 0x99, 0x99, 0x99, 0x99, 0x10
	db	0x7f, 0xfe
	db	0xd8, 0x88, 0x88, 0x99, 0x00, 0x00, 0x09, 0x10
	db	0xff, 0xfe
	db	0x88, 0x88, 0x88, 0x99, 0x0f, 0xf7, 0x09, 0x10
	db	0xff, 0xfc
	db	0x87, 0x47, 0x77, 0x71, 0x11, 0x11, 0x11, 0xd0
	db	0xff, 0xfc
	db	0x87, 0x77, 0x77, 0x77, 0x77, 0x77, 0x88, 0xd0
	db	0xff, 0xfc
	db	0x87, 0x77, 0x00, 0x00, 0x00, 0x07, 0x88, 0xd0
	db	0xff, 0xfc
	db	0x87, 0x77, 0x77, 0x77, 0x77, 0x77, 0x88, 0xd0
	db	0xff, 0xf8
	db	0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x8d, 0xd0
	db	0x00, 0x00
	db	0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xd0
		GSEndString
	}
}
end NDStandardTCMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDRemovableDiskTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x03, 0xff
	db	0x02, 0xcb
	db	0x02, 0x8b
	db	0x02, 0x8b
	db	0x02, 0xfb
	db	0x02, 0xfb
	db	0x3e, 0x03
	db	0x7e, 0xfb
	db	0xfe, 0x9b
	db	0xa1, 0xfc
	db	0x80, 0x0c
	db	0x8f, 0xec
	db	0x80, 0x0c
	db	0xff, 0xf8
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDRemovableDiskTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x03, 0xff
	db	0x3e, 0xcb
	db	0x7e, 0x8b
	db	0xfe, 0x8b
	db	0xa2, 0xfb
	db	0x8e, 0x03
	db	0x82, 0xfb
	db	0xfe, 0x9b
	db	0x01, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
