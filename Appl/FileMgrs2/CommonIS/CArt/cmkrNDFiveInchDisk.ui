/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDFiveInchDiskSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 621
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd8, 0xf3, 0x00, 0x00, 0x8d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x01, 0xd0, 0x04, 0xfc, 0x44, 0xf9, 
		0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x02, 0xd0, 0x04, 0xf4, 0xfe, 0xff, 
		0x00, 0x44, 0xf9, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x01, 0xd0, 0x04, 0xfc, 0x44, 0xf9, 
		0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x01, 0xd0, 0x04, 0xfd, 0xff, 0x00, 
		0x44, 0xf9, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x01, 0xd0, 0x04, 0xfc, 0x44, 0xf9, 
		0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00
	db	0xfd, 0xdd, 0x01, 0xd0, 0x04, 0xfc, 0x44, 0xf9, 
		0x00, 0xfc, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0x00, 0xfc, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x08, 
		0x88, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x03, 0x08, 
		0x8f, 0xff, 0x88, 0xfc, 0x00, 0x00, 0x0d, 0xfd, 
		0xdd
	db	0x05, 0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x03, 0x08, 
		0xfd, 0xdd, 0xf8, 0xfc, 0x00, 0x00, 0x0d, 0xfd, 
		0xdd
	db	0x05, 0x00, 0x7f, 0xfc, 0x1f, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x04, 0x8f, 
		0xdd, 0xdd, 0xdf, 0x80, 0xfd, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xfc, 0x1f, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x04, 0x8f, 
		0xdd, 0xdd, 0xdf, 0x80, 0xfd, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xfc, 0x1f, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x04, 0x8f, 
		0xdd, 0xdd, 0xdf, 0x80, 0xfd, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x05, 0x08, 
		0xfd, 0xdd, 0xf8, 0x00, 0x60, 0xfe, 0x00, 0x00, 
		0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfc, 0x00, 0x05, 0x08, 
		0x8f, 0xff, 0x88, 0x06, 0x66, 0xfe, 0x00, 0x00, 
		0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x04, 0x08, 
		0x88, 0x00, 0x00, 0x60, 0xfe, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xf3, 0x00, 0x00, 0x0d, 
		0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd0, 0xfb, 0x00, 0x01, 0x06, 
		0x66, 0xfb, 0x00, 0x00, 0x0d, 0xfd, 0xdd
	db	0x05, 0x00, 0x7f, 0xf7, 0xf7, 0xfe, 0x00
	db	0xfd, 0xdd, 0x00, 0xd8, 0xfc, 0x00, 0x00, 0xd0, 
		0xfe, 0x00, 0x00, 0xd0, 0xfd, 0x00, 0x00, 0x8d, 
		0xfd, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDFiveInchDiskSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x03, 0xff, 0xfe, 0x00
	db	0x00, 0x6b, 0xf3, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x03, 0xff, 0xfe, 0x00
	db	0x00, 0x6f, 0xf3, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x03, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x03, 0xff, 0xfc, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xf9, 0xcf, 0xfe, 0x00
	db	0x00, 0x7f, 0xfa, 0x2f, 0xfe, 0x00
	db	0x00, 0x7f, 0xf4, 0x17, 0xfe, 0x00
	db	0x00, 0x7f, 0xf4, 0x17, 0xfe, 0x00
	db	0x00, 0x7f, 0xf4, 0x17, 0xfe, 0x00
	db	0x00, 0x7f, 0xfa, 0x2d, 0xfe, 0x00
	db	0x00, 0x7f, 0xf9, 0xc8, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3d, 0xfe, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xf7, 0xf7, 0xfe, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDFiveInchDiskSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x0f, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x0f, 0xff, 0xfe, 0x00
	db	0x00, 0x60, 0x0f, 0xff, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfc, 0x00
	db	0x00, 0x7f, 0xfc, 0x1f, 0xfe, 0x00
	db	0x00, 0x7f, 0xf8, 0x0f, 0xfe, 0x00
	db	0x00, 0x7f, 0xf8, 0x0f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfc, 0x1f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3d, 0xfe, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x7f, 0xf7, 0xf7, 0xfe, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/newdesk.tiny.pcx with pixel 13 masked out
 */
start NDStandardTCMonikerResource, data;
visMoniker NDFiveInchDiskTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 144
		Bitmap <15,15,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x01, 0xff, 0xfe
	db	0xf9, 0x00
	db	0x01, 0xff, 0xfe
	db	0x03, 0x04, 0x44, 0x44, 0x40, 0xfd, 0x00
	db	0x01, 0xff, 0xfc
	db	0x03, 0x04, 0x44, 0x44, 0x40, 0xfe, 0x00, 0x00, 
		0xd0
	db	0x01, 0xff, 0xfe
	db	0x03, 0x04, 0x44, 0x44, 0x40, 0xfd, 0x00
	db	0x01, 0xff, 0xfe
	db	0xf9, 0x00
	db	0x01, 0xff, 0xfe
	db	0xfe, 0x00, 0x01, 0xff, 0xf0, 0xfe, 0x00
	db	0x01, 0xfc, 0x7e
	db	0x04, 0x00, 0x00, 0x0f, 0xdd, 0xdf, 0xfe, 0x00
	db	0x01, 0xfc, 0x7e
	db	0x04, 0x00, 0x00, 0x0f, 0xdd, 0xdf, 0xfe, 0x00
	db	0x01, 0xfc, 0x7e
	db	0x07, 0x00, 0x00, 0x0f, 0xdd, 0xdf, 0x06, 0x00, 
		0x00
	db	0x01, 0xff, 0xfe
	db	0xfe, 0x00, 0x01, 0xff, 0xf0, 0xfe, 0x00
	db	0x01, 0xff, 0xfe
	db	0xf9, 0x00
	db	0x01, 0xff, 0xfe
	db	0xfe, 0x00, 0x00, 0x06, 0xfd, 0x00
	db	0x01, 0xff, 0xfe
	db	0xfe, 0x00, 0x00, 0x06, 0xfd, 0x00
	db	0x01, 0xf7, 0xde
	db	0x07, 0x00, 0x00, 0xd0, 0x06, 0x00, 0xd0, 0x00, 
		0x00
	db	0x01, 0x00, 0x00
	db	0xfa, 0xdd, 0x00, 0xd0
		GSEndString
	}
}
end NDStandardTCMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDFiveInchDiskTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0xff, 0xff
	db	0x81, 0xff
	db	0x81, 0xfc
	db	0x81, 0xff
	db	0xff, 0xff
	db	0xfc, 0x7f
	db	0xf8, 0x3f
	db	0xf8, 0x3f
	db	0xf8, 0x2f
	db	0xfc, 0x7f
	db	0xff, 0xff
	db	0xfe, 0xff
	db	0xfe, 0xff
	db	0xf7, 0xdf
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDFiveInchDiskTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0xff, 0xff
	db	0x83, 0xff
	db	0xff, 0xfc
	db	0xfc, 0x7f
	db	0xf8, 0x2f
	db	0xfc, 0x7f
	db	0xff, 0xff
	db	0xfe, 0xff
	db	0xf7, 0xdf
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
