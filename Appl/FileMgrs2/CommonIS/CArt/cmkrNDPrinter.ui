/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDPrinterSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 575
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x02, 0x00, 0x07, 0xff, 0xfe, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfc, 0x88, 0xf5, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x01, 0xf8, 
		0x8d, 0xf6, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x01, 0xf8, 
		0x70, 0xf6, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x02, 0xf8, 
		0xf7, 0x0d, 0xf7, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x02, 0xf8, 
		0xff, 0x70, 0xf7, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x03, 0xf8, 
		0xff, 0xf7, 0x0d, 0xf8, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xfc, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x03, 0xf8, 
		0xff, 0xff, 0x70, 0xf8, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x04, 0xf8, 
		0xff, 0xff, 0xf7, 0x0d, 0xf9, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x00, 0xf8, 
		0xfe, 0xff, 0x00, 0x78, 0xf9, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfd, 0xff, 0x00, 0xf8, 
		0xfd, 0x88, 0x00, 0x8d, 0xfa, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xfc, 0xff, 0x00, 0xf7, 
		0xfe, 0x77, 0x00, 0x8d, 0xfa, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xf8, 0xff, 0x00, 0x8d, 
		0xfa, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xf8, 0xff, 0x00, 0x8d, 
		0xfa, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xf8, 0xff, 0x00, 0x8d, 
		0xfa, 0xdd
	db	0x05, 0x00, 0x07, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0xd8, 0xf8, 0xff, 0x00, 0x8d, 
		0xfa, 0xdd
	db	0x00, 0x01, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0xfe, 0xdd, 0x00, 0xd8, 0xfe, 0x88, 0xf8, 0xff, 
		0xfe, 0x88, 0x00, 0x8d, 0xfd, 0xdd
	db	0x00, 0x01, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0xfe, 0xdd, 0x03, 0xd8, 0xfe, 0xfe, 0xf8, 0xf8, 
		0xff, 0x03, 0x8e, 0xfe, 0xfe, 0x8d, 0xfd, 0xdd
	db	0x00, 0x01, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0xfe, 0xdd, 0x03, 0xd8, 0xef, 0xef, 0xe8, 0xf8, 
		0xff, 0x03, 0x8f, 0xef, 0xef, 0x8d, 0xfd, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0x80
	db	0x06, 0xdd, 0xdd, 0xd8, 0x88, 0xfe, 0x88, 0x88, 
		0xf8, 0xff, 0x04, 0x88, 0x88, 0xfe, 0x88, 0x8d, 
		0xfe, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0x80
	db	0x06, 0xdd, 0xdd, 0xd8, 0x88, 0xef, 0x88, 0x88, 
		0xf8, 0x77, 0x04, 0x88, 0x88, 0xef, 0x88, 0x8d, 
		0xfe, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0x80
	db	0x04, 0xdd, 0xdd, 0xd8, 0x88, 0xfe, 0xf4, 0x88, 
		0x02, 0xfe, 0x88, 0x8d, 0xfe, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0x80
	db	0x03, 0xdd, 0xdd, 0xd8, 0x88, 0xf2, 0xef, 0x01, 
		0x88, 0x8d, 0xfe, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0x80
	db	0x03, 0xdd, 0xdd, 0xd8, 0x88, 0xf2, 0x77, 0x01, 
		0x88, 0x8d, 0xfe, 0xdd
	db	0x00, 0x01, 0xfe, 0xff, 0x01, 0xfe, 0x00
	db	0xfe, 0xdd, 0x00, 0xd8, 0xf2, 0x77, 0x00, 0x8d, 
		0xfd, 0xdd
	db	0x00, 0x01, 0xfd, 0xff, 0x00, 0x80
	db	0xfe, 0xdd, 0x00, 0xd8, 0xf2, 0x77, 0x01, 0x88, 
		0x8d, 0xfe, 0xdd
	db	0x00, 0x01, 0xfd, 0xff, 0x00, 0x80
	db	0xfe, 0xdd, 0x00, 0xd8, 0xf2, 0x77, 0x01, 0x88, 
		0x8d, 0xfe, 0xdd
	db	0x00, 0x01, 0xfd, 0xff, 0x00, 0x80
	db	0xfe, 0xdd, 0x00, 0xd8, 0xf2, 0x77, 0x01, 0x88, 
		0x8d, 0xfe, 0xdd
	db	0x00, 0x01, 0xfd, 0xff, 0x00, 0x80
	db	0xfe, 0xdd, 0x00, 0xd8, 0xf1, 0x88, 0x00, 0x8d, 
		0xfe, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x80
	db	0xfd, 0xdd, 0x00, 0xd8, 0xf2, 0x88, 0x00, 0x8d, 
		0xfe, 0xdd
	db	0x01, 0x00, 0x7f, 0xfe, 0xff, 0x00, 0x80
	db	0xfd, 0xdd, 0x00, 0xd8, 0xf2, 0x88, 0x00, 0x8d, 
		0xfe, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDPrinterSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x01, 0xff, 0xc0, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x60, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x50, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x48, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x44, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x42, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x41, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x40, 0x80, 0x00
	db	0x00, 0x01, 0x00, 0x40, 0x40, 0x00
	db	0x00, 0x01, 0x00, 0x7f, 0xe0, 0x00
	db	0x00, 0x01, 0x00, 0x1f, 0xe0, 0x00
	db	0x00, 0x01, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x01, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x01, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x01, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x7f, 0x00, 0x00, 0x3f, 0x80
	db	0x00, 0x41, 0x00, 0x00, 0x20, 0x80
	db	0x00, 0x41, 0x00, 0x00, 0x20, 0x80
	db	0x01, 0xcf, 0x00, 0x00, 0x3c, 0xe0
	db	0x01, 0xcf, 0x00, 0x00, 0x3c, 0xe0
	db	0x01, 0xcf, 0xff, 0xff, 0xfc, 0xe0
	db	0x01, 0xc0, 0x00, 0x00, 0x00, 0xe0
	db	0x01, 0xea, 0xaa, 0xaa, 0xaa, 0xe0
	db	0x00, 0x55, 0x55, 0x55, 0x55, 0x80
	db	0x00, 0x6a, 0xaa, 0xaa, 0xaa, 0xe0
	db	0x00, 0x55, 0x55, 0x55, 0x55, 0xe0
	db	0x00, 0x6a, 0xaa, 0xaa, 0xaa, 0xe0
	db	0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0
	db	0x00, 0x1f, 0xff, 0xff, 0xff, 0xe0
	db	0x00, 0x1f, 0xff, 0xff, 0xff, 0xe0
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDPrinterSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x01, 0xff, 0xc0, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0xb0, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x8c, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0x83, 0x00, 0x00
	db	0x00, 0x01, 0x00, 0xff, 0x80, 0x00
	db	0x00, 0x01, 0x00, 0x7f, 0x80, 0x00
	db	0x00, 0x01, 0x00, 0x00, 0x80, 0x00
	db	0x00, 0x7f, 0x00, 0x00, 0xfe, 0x00
	db	0x01, 0xc1, 0x00, 0x00, 0x83, 0x80
	db	0x01, 0xc7, 0xff, 0xff, 0xe3, 0x80
	db	0x01, 0xc0, 0x00, 0x00, 0x03, 0x80
	db	0x00, 0x6a, 0xaa, 0xaa, 0xaa, 0x00
	db	0x00, 0x55, 0x55, 0x55, 0x56, 0x00
	db	0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDPrinterTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x00, 0x00
	db	0x1f, 0x00
	db	0x11, 0x80
	db	0x11, 0x40
	db	0x11, 0x20
	db	0x11, 0xf0
	db	0x10, 0x10
	db	0x10, 0x10
	db	0x70, 0x1c
	db	0xd0, 0x17
	db	0xdf, 0xf7
	db	0xc0, 0x07
	db	0x40, 0x04
	db	0x7f, 0xfc
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDPrinterTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x0f, 0x80
	db	0x09, 0x40
	db	0x09, 0x20
	db	0x09, 0xe0
	db	0x08, 0x20
	db	0x38, 0x38
	db	0x68, 0x2c
	db	0x6f, 0xec
	db	0x60, 0x0c
	db	0x3f, 0xf8
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
