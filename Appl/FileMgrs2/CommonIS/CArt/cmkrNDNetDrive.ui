/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDNetDriveSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 502
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0x01, 0x00, 0x0f, 0xfe, 0xff, 0x00, 0xe0
	db	0xfb, 0xdd, 0xf2, 0x88, 0x02, 0x8d, 0xdd, 0xdd
	db	0x01, 0x00, 0x3f, 0xfe, 0xff, 0x00, 0xf0
	db	0xfc, 0xdd, 0x00, 0x88, 0xf2, 0x77, 0x02, 0x70, 
		0xdd, 0xdd
	db	0x00, 0x00, 0xfd, 0xff, 0x00, 0xf0
	db	0xfd, 0xdd, 0x00, 0x88, 0xf2, 0x77, 0x03, 0x70, 
		0x00, 0xdd, 0xdd
	db	0x00, 0x03, 0xfd, 0xff, 0x00, 0xf0
	db	0xfe, 0xdd, 0x00, 0x88, 0xf2, 0x77, 0x04, 0x70, 
		0x08, 0x80, 0xdd, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xdf, 0xf1, 0xff, 0x04, 0xf8, 
		0x88, 0x80, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xff, 0xf1, 0x77, 0x04, 0x78, 
		0x88, 0x80, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x07, 0xdd, 0xdd, 0xf7, 0x77, 0x22, 0x27, 0xee, 
		0xe7, 0xf6, 0x77, 0x04, 0x78, 0x88, 0x80, 0xdd, 
		0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x07, 0xdd, 0xdd, 0xf7, 0x77, 0x22, 0x28, 0xee, 
		0xe8, 0xf6, 0x77, 0x04, 0x78, 0x88, 0x80, 0xdd, 
		0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x08, 0xdd, 0xdd, 0xf7, 0x77, 0x78, 0x88, 0x78, 
		0x88, 0x77, 0xf7, 0x88, 0x04, 0x78, 0x88, 0x80, 
		0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xf7, 0xfb, 0x77, 0xf7, 0xff, 
		0x04, 0x78, 0x88, 0x80, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xf7, 0xfb, 0x77, 0xf7, 0x88, 
		0x04, 0x78, 0x88, 0x80, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xf7, 0xfb, 0x77, 0xf7, 0xff, 
		0x04, 0x78, 0x88, 0x00, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xf7, 0xf1, 0x77, 0x04, 0x78, 
		0x80, 0xf0, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x02, 0xdd, 0xdd, 0xf7, 0xf1, 0x77, 0x04, 0x78, 
		0x0f, 0x80, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xe0
	db	0x01, 0xdd, 0xdd, 0xf0, 0x88, 0x04, 0x80, 0xf8, 
		0x0d, 0xdd, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xc0
	db	0x01, 0xdd, 0xdd, 0xf0, 0xff, 0x01, 0xf7, 0x70, 
		0xfe, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0x80
	db	0x02, 0xdd, 0xdd, 0xf7, 0xf1, 0x77, 0x01, 0x70, 
		0x0d, 0xfe, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0x00
	db	0x02, 0xdd, 0xdd, 0xd0, 0xf0, 0x00, 0xfd, 0xdd
	db	0x05, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00
	db	0xf7, 0xdd, 0x02, 0xd8, 0xee, 0x60, 0xf6, 0xdd
	db	0x05, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00
	db	0xf7, 0xdd, 0x02, 0xd8, 0xee, 0x60, 0xf6, 0xdd
	db	0x05, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00
	db	0xf7, 0xdd, 0x02, 0xd8, 0xee, 0x60, 0xf6, 0xdd
	db	0x05, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00
	db	0xf7, 0xdd, 0x03, 0x88, 0xee, 0x68, 0x8d, 0xf7, 
		0xdd
	db	0x00, 0x3f, 0xfd, 0xff, 0x00, 0xfc
	db	0x00, 0xdd, 0xf8, 0x88, 0x02, 0x8f, 0xff, 0xe6, 
		0xf7, 0x88, 0x00, 0xdd
	db	0x00, 0x0f, 0xfd, 0xff, 0x00, 0xf0
	db	0x01, 0xdd, 0xdd, 0xf9, 0xee, 0x01, 0xef, 0xfe, 
		0xf7, 0xee, 0x01, 0xdd, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xe0
	db	0x02, 0xdd, 0xdd, 0xd6, 0xfa, 0x66, 0x02, 0x6e, 
		0xee, 0xe6, 0xf9, 0x66, 0x02, 0x6d, 0xdd, 0xdd
	db	0x00, 0x07, 0xfd, 0xff, 0x00, 0xe0
	db	0x02, 0xdd, 0xdd, 0xd6, 0xef, 0x66, 0x02, 0x6d, 
		0xdd, 0xdd
	db	0x05, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00
	db	0xf7, 0xdd, 0xfe, 0x66, 0x00, 0x6d, 0xf7, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
	db	0xfb, 0x00
	db	0xe9, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDNetDriveSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x0f, 0xff, 0xff, 0xff, 0xe0
	db	0x00, 0x30, 0x00, 0x00, 0x00, 0x10
	db	0x00, 0xc0, 0x00, 0x00, 0x00, 0x70
	db	0x03, 0x00, 0x00, 0x00, 0x01, 0xf0
	db	0x07, 0xff, 0xff, 0xff, 0xff, 0xf0
	db	0x0c, 0x00, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0xee, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0xee, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0x00, 0x3f, 0xff, 0xfd, 0xf0
	db	0x08, 0x00, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0x00, 0x3f, 0xff, 0xfd, 0xf0
	db	0x08, 0x00, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0x00, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0x00, 0x00, 0x00, 0x01, 0xf0
	db	0x08, 0x00, 0x00, 0x00, 0x01, 0xe0
	db	0x0f, 0xff, 0xff, 0xff, 0xff, 0xc0
	db	0x0f, 0xff, 0xff, 0xff, 0xff, 0x80
	db	0x07, 0xff, 0xff, 0xff, 0xff, 0x00
	db	0x00, 0x00, 0x04, 0xc0, 0x00, 0x00
	db	0x00, 0x00, 0x04, 0xc0, 0x00, 0x00
	db	0x00, 0x00, 0x04, 0xc0, 0x00, 0x00
	db	0x00, 0x00, 0x0c, 0xe0, 0x00, 0x00
	db	0x3f, 0xff, 0xf8, 0x7f, 0xff, 0xfc
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x07, 0xff, 0xf8, 0x7f, 0xff, 0xe0
	db	0x07, 0xff, 0xff, 0xff, 0xff, 0xe0
	db	0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDNetDriveSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00
	db	0x00, 0x10, 0x00, 0x00, 0x0c, 0x00
	db	0x00, 0x16, 0xff, 0xff, 0x8c, 0x00
	db	0x00, 0x10, 0xff, 0xff, 0x8c, 0x00
	db	0x00, 0x10, 0x00, 0x00, 0x0c, 0x00
	db	0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00
	db	0x00, 0x00, 0x01, 0x40, 0x00, 0x00
	db	0x00, 0x00, 0x03, 0x60, 0x00, 0x00
	db	0x00, 0x7f, 0xfe, 0x3f, 0xfe, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	db	0x00, 0x1f, 0xfe, 0x3f, 0xf8, 0x00
	db	0x00, 0x00, 0x03, 0xe0, 0x00, 0x00
	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/newdesk.tiny.pcx with pixel 13 masked out
 */
start NDStandardTCMonikerResource, data;
visMoniker NDNetDriveTCMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = color4;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 152
		Bitmap <15,15,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x01, 0xff, 0xfe
	db	0xfa, 0x88, 0x00, 0x80
	db	0x01, 0xff, 0xfe
	db	0xfa, 0xff, 0x00, 0x80
	db	0x01, 0xff, 0xfe
	db	0x00, 0xf7, 0xfb, 0x77, 0x00, 0x80
	db	0x01, 0xff, 0xfe
	db	0x02, 0xf7, 0x22, 0x78, 0xfe, 0x88, 0x01, 0x87, 
		0x80
	db	0x01, 0xff, 0xfe
	db	0x02, 0xf7, 0x77, 0x7f, 0xfe, 0xff, 0x01, 0xf7, 
		0x80
	db	0x01, 0xff, 0xfe
	db	0x00, 0xf7, 0xfb, 0x77, 0x00, 0x80
	db	0x01, 0xff, 0xfe
	db	0x00, 0xf8, 0xfb, 0x88, 0x00, 0x80
	db	0x01, 0x7f, 0xfe
	db	0x00, 0xd0, 0xfa, 0x00
	db	0x01, 0x03, 0x80
	db	0xfe, 0xdd, 0x04, 0x8e, 0x0d, 0xdd, 0xdd, 0xd0
	db	0x01, 0x07, 0xc0
	db	0x07, 0xdd, 0xdd, 0xd8, 0x8e, 0x88, 0xdd, 0xdd, 
		0xd0
	db	0x01, 0xff, 0xfe
	db	0xfe, 0x88, 0x04, 0xee, 0xe8, 0x88, 0x88, 0x80
	db	0x01, 0x7f, 0xfc
	db	0x00, 0xde, 0xfb, 0xee, 0x00, 0xd0
	db	0x01, 0x7f, 0xfc
	db	0x07, 0xd0, 0x00, 0x00, 0xee, 0xe0, 0x00, 0x00, 
		0xd0
	db	0x01, 0x07, 0xc0
	db	0x07, 0xdd, 0xdd, 0xd8, 0x00, 0x08, 0xdd, 0xdd, 
		0xd0
	db	0x01, 0x00, 0x00
	db	0xfa, 0xdd, 0x00, 0xd0
		GSEndString
	}
}
end NDStandardTCMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDNetDriveTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0xff, 0xff
	db	0xff, 0xff
	db	0x80, 0x03
	db	0xb7, 0xfb
	db	0x87, 0xfb
	db	0x80, 0x03
	db	0xff, 0xff
	db	0x7f, 0xff
	db	0x02, 0x80
	db	0x06, 0xc0
	db	0xfc, 0x7f
	db	0x00, 0x00
	db	0x7c, 0x7c
	db	0x07, 0xc0
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd4.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDNetDriveTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0xff, 0xff
	db	0x80, 0x03
	db	0xb7, 0xfb
	db	0x80, 0x03
	db	0xff, 0xff
	db	0x02, 0x80
	db	0xfc, 0x7f
	db	0x7c, 0x7c
	db	0x03, 0x80
	db	0x00, 0x00
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
