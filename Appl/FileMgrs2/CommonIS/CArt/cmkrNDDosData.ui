/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCMonikerResource, data;
visMoniker NDDosDataSCMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = color4;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSDrawBitmapAtCP 565
		Bitmap <48,30,BMC_PACKBITS,BMF_4BIT or mask BMT_MASK>
	db	0x05, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x00
	db	0xfb, 0xdd, 0xfb, 0x88, 0x00, 0x8d, 0xf6, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x01, 0xf8, 
		0x78, 0xf6, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x02, 0xf8, 
		0xf7, 0x8d, 0xf7, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x02, 0xf8, 
		0xff, 0x78, 0xf7, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x03, 0xf8, 
		0xff, 0xf7, 0x8d, 0xf8, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xfc, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x03, 0xf8, 
		0xff, 0xff, 0x78, 0xf8, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xfe, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x04, 0xf8, 
		0xff, 0xff, 0xf7, 0x8d, 0xf9, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x00, 0xf8, 
		0xfe, 0xff, 0x00, 0x78, 0xf9, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x00, 0xf8, 
		0xfe, 0xff, 0x01, 0xf7, 0x8d, 0xfa, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xc0, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x00, 0xf8, 
		0xfd, 0xff, 0x00, 0x78, 0xfa, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x00, 0xf8, 
		0xfd, 0xff, 0x01, 0xf7, 0x8d, 0xfb, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x00, 0xf8, 
		0xfc, 0xff, 0x00, 0x78, 0xfb, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfd, 0xff, 0x00, 0xf8, 
		0xfb, 0x88, 0x00, 0x8d, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xfc, 0xff, 0x00, 0xf7, 
		0xfd, 0x77, 0x01, 0x78, 0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0x00, 0x8f, 0xf7, 0xff, 0x01, 0xf8, 
		0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0xfb, 0xdd, 0xf4, 0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xfc, 0x00
	db	0xfa, 0xdd, 0x00, 0xd8, 0xf6, 0x88, 0xfc, 0xdd
	db	0x05, 0x00, 0x01, 0xff, 0xff, 0xfc, 0x00
	db	0xfa, 0xdd, 0x00, 0xd8, 0xf6, 0x88, 0xfc, 0xdd
		GSEndString
	}
}
end NDStandardSCMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSMMonikerResource, data;
visMoniker NDDosDataSMMoniker = {
	size = standard;
	style = icon;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 48, 30;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 186
		Bitmap <48,30,0,BMF_MONO>
	db	0x00, 0x0f, 0xff, 0x80, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x40, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x20, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x10, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x08, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x04, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x02, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x01, 0x00, 0x00
	db	0x00, 0x08, 0x01, 0x00, 0x80, 0x00
	db	0x00, 0x08, 0x01, 0x00, 0x40, 0x00
	db	0x00, 0x08, 0x01, 0x00, 0x20, 0x00
	db	0x00, 0x08, 0x01, 0x00, 0x10, 0x00
	db	0x00, 0x08, 0x01, 0xff, 0xf8, 0x00
	db	0x00, 0x08, 0x00, 0x7f, 0xfc, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x1c, 0x00
	db	0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00
	db	0x00, 0x01, 0xff, 0xff, 0xfc, 0x00
	db	0x00, 0x01, 0xff, 0xff, 0xfc, 0x00
		GSEndString
	}
}
end NDStandardSMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardSCGAMonikerResource, data;
visMoniker NDDosDataSCGAMoniker = {
	size = tiny;
	style = icon;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 48, 14;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 90
		Bitmap <48,14,0,BMF_MONO>
	db	0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00
	db	0x00, 0x08, 0x00, 0x98, 0x00, 0x00
	db	0x00, 0x08, 0x00, 0x86, 0x00, 0x00
	db	0x00, 0x08, 0x00, 0x81, 0x80, 0x00
	db	0x00, 0x08, 0x00, 0x80, 0x60, 0x00
	db	0x00, 0x08, 0x00, 0xff, 0xe0, 0x00
	db	0x00, 0x08, 0x00, 0x3f, 0xe0, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x08, 0x00, 0x00, 0x20, 0x00
	db	0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00
		GSEndString
	}
}
end NDStandardSCGAMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTMMonikerResource, data;
visMoniker NDDosDataTMMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = normal;
	color = gray1;
	cachedSize = 15, 15;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 36
		Bitmap <15,15,0,BMF_MONO>
	db	0x7f, 0x00
	db	0x41, 0x80
	db	0x41, 0x40
	db	0x41, 0x20
	db	0x41, 0x10
	db	0x41, 0x08
	db	0x41, 0xfc
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x7f, 0xfc
		GSEndString
	}
}
end NDStandardTMMonikerResource;
/*
 * Moniker generated from PCX/nd.pcx with pixel 13 masked out
 */
start NDStandardTCGAMonikerResource, data;
visMoniker NDDosDataTCGAMoniker = {
	size = tiny;
	style = tool;
	aspectRatio = verySquished;
	color = gray1;
	cachedSize = 15, 10;
	gstring {
		GSBeginString
		GSFillBitmapAtCP 26
		Bitmap <15,10,0,BMF_MONO>
	db	0x7f, 0xc0
	db	0x40, 0xa0
	db	0x40, 0x90
	db	0x40, 0x88
	db	0x40, 0xfc
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x40, 0x04
	db	0x7f, 0xfc
		GSEndString
	}
}
end NDStandardTCGAMonikerResource;
