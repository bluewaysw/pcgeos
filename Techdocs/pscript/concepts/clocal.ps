%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 17 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /NewCenturySchlbk-Italic FMFONTDEFINE
5 0 /Courier FMFONTDEFINE
6 0 /Courier-Bold FMFONTDEFINE
7 0 /Helvetica FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "335" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization Goals) 434.3 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(335) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
(Localization is the means by which) 180 610.3 T
1 9 Q
(GEOS) 344.66 610.3 T
1 10 Q
( adapts to foreign environments.) 370.83 610.3 T
(The kernel automatically accounts for such country-dependent items as) 180 597.3 T
(currencies and keyboard layouts. Y) 180 584.3 T
(our geodes can work with foreign) 341.31 584.3 T
(character sets and formatting preferences. Using the) 180 571.3 T
3 F
(ResEdit) 426.85 571.3 T
1 F
( tool, anyone) 467.96 571.3 T
(can quickly translate an executable\325) 180 558.3 T
(s text into other languages. Y) 345.59 558.3 T
(ou should) 480.43 558.3 T
(look over this chapter whether or not you\325re planning on distributing your) 180 545.3 T
(software internationally) 180 532.3 T
(. The chapter includes documentation for some) 290.94 532.3 T
(functions which you\325re likely to use regardless.) 180 519.3 T
0 14 Q
(8.1) 142.54 466.97 T
0 24 Q
(Localization Goals) 180 466.97 T
1 10 Q
(The bene\336t of Geoworks\325 experience with previous international products) 180 441.3 T
(was designed into) 180 428.3 T
1 9 Q
(GEOS) 265.2 428.3 T
1 10 Q
( from the start. The kernel was designed with the) 291.37 428.3 T
(following three goals of localization in mind:) 180 415.3 T
2 F
(u) 180 395.3 T
1 F
(Ease of use) 198 395.3 T
(Localization should be easy to use. A cumbersome system would slow) 198 383.3 T
(programmers and leave them reluctant to use the system.) 198 371.3 T
2 F
(u) 180 352.3 T
1 F
(Integration with the kernel) 198 352.3 T
-0.37 (Functions used by many geodes should be part of the kernel. This allows) 198 340.3 P
(for shared code, using less memory and making developers\325 jobs easier) 198 328.3 T
(.) 522.1 328.3 T
2 F
(u) 180 309.3 T
1 F
(Economy) 198 309.3 T
-0.71 (Anyone should be able to translate an executable\325) 198 297.3 P
-0.71 (s text without having to) 421.39 297.3 P
(understand or access the source code.) 198 285.3 T
-0.53 (If you plan to release your software in other languages, you should code it for) 180 266.3 P
(easy conversion later) 180 253.3 T
(. Even if you have no such plans, there are still good) 276.67 253.3 T
(reasons for using the localization features of) 180 240.3 T
1 9 Q
(GEOS) 387.23 240.3 T
1 10 Q
(.) 413.4 240.3 T
2 F
(u) 180 220.3 T
1 F
(Stay Generic and Adaptable) 198 220.3 T
(By using localization code, your programs can work in a variety of) 198 208.3 T
(environments without modi\336cation of source code. Even if you don\325) 198 196.3 T
(t) 505.97 196.3 T
-0.31 (translate your geode into another language, users can still use it despite) 198 184.3 P
(different keyboards and character sets.) 198 172.3 T
81 144 531 648 C
235.51 643.97 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.97 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "335" 1
%%Page: "336" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(336) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(Respect user) 198 641.33 T
(\325) 257.43 641.33 T
(s preferences) 259.1 641.33 T
(Much of localization deals with user preferences which differ from) 198 629.33 T
-0.69 (country to country) 198 617.33 P
-0.69 (. Regardless of country) 280.68 617.33 P
-0.69 (, users may make changes using) 383.06 617.33 P
(the Preferences desk tool \050see Figure) 198 605.33 T
(8-) 370.78 605.33 T
(1\051 and will no doubt appreciate) 379.67 605.33 T
(having their preferences maintained.) 198 593.33 T
2 F
(u) 180 574.33 T
1 F
(Conform to the system) 198 574.33 T
-0.32 (Y) 198 562.33 P
-0.32 (ou\325re probably going to end up using localization since much of) 203.93 562.33 P
1 9 Q
-0.29 (GEOS) 492.12 562.33 P
1 10 Q
-0.32 ( is) 518.29 562.33 P
(already localized. If your geodes are going to read) 198 550.33 T
1 9 Q
(DOS) 429.31 550.33 T
1 10 Q
( text \336les or) 448.98 550.33 T
(alphabetize lists, you\325re going to use localized code;) 198 538.33 T
1 9 Q
(GEOS) 436.55 538.33 T
1 10 Q
( takes foreign) 462.72 538.33 T
(character sets into account. Fortunately) 198 526.33 T
(, localization functions are easy) 381.71 526.33 T
(to use. In those situations where you don\325) 198 514.33 T
(t absolutely have to use) 389.32 514.33 T
(localized code, usually it\325) 198 502.33 T
(s easier to use the localized functions than to) 312.09 502.33 T
(write your own.) 198 490.33 T
81 144 531 648 C
194.67 144 531 420.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
194.67 144 531 420.98 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 432 288 216 151 198 234.98 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 432 288
%%Creator: dump.geo
%%DocumentFonts: 
%%Title: 
%%EndComments

64 dict begin	% It is recommended that we have our own dictionary...
% Screen pixels are run-length encoded exactly as received from the kernel,
% decoded by the procedure readrlestring, which returns a single packet of
% pixels and translated to whatever format is appropriate for the type of
% image being displayed (4-color, 4-bit greyscale, etc.) by some other
% procedure that comes after readrlestring.

/rlestr1 1 string def % single-element string for reading initial packet byte
/rlestr 129 string def
/readrlestring {
  currentfile rlestr1 readhexstring pop  0 get
  dup 127 le {
    currentfile rlestr 0
    4 3 roll 		% stack now (file rlestr 0 #)
    1 add 		% # is string index and we need length
    getinterval
    readhexstring
    pop			% discard eof status
  } {
    257 exch sub 	% figure number of repetitions
    dup			% save for after the loop
    currentfile rlestr1 readhexstring	% read the byte to duplicate
    pop			% discard eof status
    0 get		% fetch the byte from rlestr1
    exch 		% bring count to the top
    0 exch		% push initial loop value under count
    1 exch		% push increment value under count
    1 sub		% set terminate value. count is 1-origin, though
    { rlestr exch 2 index put } % given index, fetch byte and store in rlestr
    for
    pop 		% discard replicated byte. original count still there
    rlestr exch 0 exch getinterval
 } ifelse
} bind def
%%EndProlog
%%Page: 1 1
6.0 72 mul 4.0 72 mul scale
491 266 1
[ 491 0 0 -266 0 266 ]
{ readrlestring }
image
C400011F7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7F
C5FF01DF7FC600021FDF7FC600031FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF03
9FDF7F3FC7FF039FDF7F3FC7FF039FC07F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF03
9FDF7F3FC7FF039FDF7F3FC7FF049FDF7F3FFEFA000601FFCCFFFFF33FFDFF01FE67FE
FF023FFFFCF9FF01F99FFDFF08F3FE7FCFFFF93FFF9FF9FF049FDF7F3FFEFAFF06FDFF
CCFFFFF33FFDFF01FE7FFEFF023FFFFCF9FF00F9FCFF08F3FE7FCFFFF9FFFF9FF9FF08
9FDF7F3FFEFFFF807FFEFF2BFDFFCCC387E1070E1C3F860C2618387E187F0C1C307061
F9986649F090070FE18383F061861FC130C198667FFBFF379FDF7F3FFEF1FEE03FFFCE
FFFDFFCC9933F33264C99F326664C9933F333E64C993264CF9932647F9933267CC9933
E64CCCCF99264C93267FFBFF379FDF7F3FFEE004707FFF00007DFFCCCF03F33206781F
326664C999FF333E7CCC132640F993264FF9933207E09933E660CC0F9933CC98267FFB
FF379FD17F3FFEC001B0FE7F00007DFFCCF33FF3327F99FF326664C99E7F333E7CC993
264FF993264FF993327FCC9933E64CCCFF993CCC93267FFBFF379FC47F3FFEF80F773C
200002FDFFCC9933F33264C99F326664C9933F333E64C993264CF993264FF9933267CC
9933E64CCCCF99264C93267FFBFF379FDC7F3FFEF80C7FF8000006FDFFE0C387F9330E
1C3F860F2619987F987F0CCC133061FC18704FFC93330FE09983F060E61FC130C19830
7FFBFF0C9FDC7F3FFEF8007FFD000003FDF8FF01FE7FF8FF03FE7FFF9FF2FF03CFFFFE
7FFBFF0C9FD97F3FFEF8007FFA000001FDF8FF01FE7FF8FF03F0FFFC3FF2FF02CFFFF0
FAFF0C9FD37F3FFEE0007FD0000003FDD0FF0C9FC77F3FFEE001FFE0000006FDD0FF0E
9FC07F3FFEE007FFCE400006FDFFF1FDFF003FF7FF08FE7FFFFFFE7FFFFF8FFEFF00F9
FDFF02CFFF99FEFF049FF8FFFE67FDFF0E9FDF7F3FFEE00FFFDF80000AFDFFE7FDFF00
3FF7FF08FE7FFFFFFE7FFFFF3FFEFF00F9FDFF02CFFF99FEFF049FF3FFFE67FDFF399F
DF7F3FFEF03FFFC7E00007FDFFC386480386187FF0CC924C3070CCFC30707C1990060E
193E1C32401C30C3FF860E0FC3083864FC1861C33243FDFF399FDF7F3FFEF3BFFF8000
0007FDFFE732399933333FE64C8E3993264CF993267CC9933264C8FF3991CCC99999FF
3264CF99999323F99333993267FDFF399FDF7F3FFEF3DFFF00110003FDFFE732799983
39FFE7CC9E781327CCFC13267CC993326409FF3993CCCC19CFFF8264CF99999027F990
33C13267FDFF399FDF7F3FFEF2FFFF0000400FFDFFE7327999333E7FE7CC9E79F327CC
F993267CC9933264F9FF3993CCC999F3FF3264CF999993E7F993F3993267FDFF119FDF
7F3FFEF9FFFE0008E11FFDFFE7327999FE3324E64C9E7993264CF993267CC9933264C9
FF3993CCC999999F3264CF99999327F99333993267FDFF399FDF7F3FFEFEFFFE0003F3
9DFDFFE7867999839873F0E09E7C3330E0FC13307CCC13320E19FF3C33CCCC1CC39F82
660FC3C99867FC1873C18273FDFF0C9FDF7F3FFEFF47FF0001F7FCFDFAFF00E7FBFF00
FCF1FF003FF0FF0C9FDF7F3FFEFF81FF8003FFBAFDF3FF00E1DFFF0C9FC07F3FFEFF80
FFF003FFB7FDD0FF0C9FDF7F3FFEFF807FF807FF94BDD0FF0F9FDF7F3FFEFF801FFC07
FFDDCDFFFF9FFEFF00F3D7FF0F9FDF7F3FFEFF801FFC0FFFF1CDFFFF9FFEFF00F3D7FF
169FDF7F3FFEFFC03FFC0FFFFFFDFFE183864C3861864C3FDAFF169FDF7F3FFEFFE03F
FC0BFFFF1DFFCC993239933332399FDAFF049FDF7F3FFEFA000901FFCF99827C13F302
7CD9FF169FDF7F3FFFFFF07FFC1FFFF00FFFCF99327993F33E7F3FDAFF169FDF7F3FFF
FFF07FFE3FFFF00FFFCC9932799333327993DAFF169FDF7F3FFFFFF0FFFE7FFFF00FFF
E199827C1879867C33DAFF069FDF7F3FFFFFF0FDFF01E61FD0FF069FDF7F3FFFFFF1FC
FF003FD0FF069FDF7F3FFFFFF9FCFF007FD0FF069FDF7F3FFFFFF9CAFF079FDF7F3FFF
FFFD7FCBFF069FDF7F3FFFFFFECAFF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7
FF039FDF7F3FC7FF059FDF7F3FCFF9FEFF04F99FFFFF9FD1FF059FDF7F3FCFF9FEFF00
F9FEFF009FD1FF0D9FDF7F3FC830C3241C309860E19FD1FF0D9FDF7F3FC999991CCF99
93267C9FD1FF0D9FDF7F3FC999813CCC199326609FD1FF0D9FDF7F3FC9999F3CC99993
264C9FD1FF0D9FDF7F3FC99CC33CCC1C9866609FD1FF039FDF7F3FC7FF039FDF7F3FC7
FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7
FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FFCFF01FE19FDFF01FC7FFEFF05CFE7
FFFFF933F3FF0007FEFF01FE7FF1FF039FDF7F3FFCFF01FCC9FDFF00F9FDFF05CFE7FF
FFF9F3F3FF003FFEFF01FE7FF1FF039FDF7F3FFCFF10FCF83870E1C3F0E19200E187C3
0FE1C121F3FF063CE618030661C3F2FF039FDF7F3FFCFF10FCF993264C99F9CC8E664C
CFE667CC9933F3FF060E4CC999324C99F2FF039FDF7F3FFEFF16E00004F993266781F9
CC9E6660CFE667C09933800007C0F80008013F1E09993240CF80F700FDFF039FDF7F3F
FEFF16EFFFFCF99326799FF9CC9E664CCFE667CF9933FFFFF7DFF7FF063F1CC999324F
F3F7FF00FEFDFF039FDF7F3FFEFF16EFFFFCC993264C99F9CC9E664CCFE667CC9933FF
FFF7DFF7FF063E4CC999324C99F7FF00FEFDFF039FDF7F3FFEFF16EFFFFE199870E1C3
F9E19E6660E7F30FE1C139FFFFF7DFF7FF0604E609990661C3F7FF00FEFDFF039FDF7F
3FFEFF00EFEDFF01F7DFF3FF003FF5FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFF3
FF003FF5FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF019FDF
017F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00
FEFDFF039FDF7F3FFEFF01EFC0F100040F0003F7DFE6FF00FEFDFF039FDF7F3FFEFF01
EFDFF1FF04EF2AABF7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5453F7DFFA
FF0CCF9FFFFFCF9FFFFC3FFCF0E1E7FAFF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF
28ABF7DFFAFF0CC71FFFFFC71FFFF99FF8E64CC7FAFF00FEFDFF039FDF7F3FFEFF02EF
DC3FF2FF04EF5353F7DFFAFF0CC21860FFC21864F99FFCE64CE7FAFF00FEFDFF039FDF
7F3FFEFF02EFD99FF2FF04EF2B2BF7DFFAFF0CC893267FC89323F99FFCE64CE7FAFF00
FEFDFF039FDF7F3FFEFF08EFD9F324930C1C333FF8FF04EF5793F7DFFAFF0CCD93267F
CD9827FC1FFCF060E7FAFF00FEFDFF039FDF7F3FFEFF08EFD9F3238E64C9933FF8FF04
EF27ABF7DFFAFF0CCF93267FCF9327FF9FFCFE7CE7FAFF00FEFDFF039FDF7F3FFEFF08
EFD9F3279E04C9F33FF8FF04EF4FD3F7DFFAFF0CCF932667CF9327FF39FCFCF9E7FAFF
00FEFDFF039FDF7F3FFEFF08EFD9F3279E7CC9F33FF8FF04EF2FCBF7DFFAFF0CCF9866
67CF9827FC79FCF1E3E7FAFF00FEFDFF039FDF7F3FFEFF08EFD993279E64C9933FF8FF
04EF5FE3F7DFF7FF00CFFDFF00F3F6FF00FEFDFF039FDF7F3FFEFF08EFDC38279F0CCC
383FF8FF04EF1FEBF7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFFBFF003FF8FF04EF3F
F3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFFCFF01F87FF8FF04EF0003F7DFE6FF00
FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5553F7DFE6FF00FEFDFF039FDF7F3FFEFF01
EFDFF1FF04EF0003F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6
FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFE
FF05EFD9CFFFFE7FF5FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF05EFD8CFFFFE
7FF5FF04EF3FF3F7DFFAFF0CCF9FFFFFCF9FFFFC3FFCF0E1E7FAFF00FEFDFF039FDF7F
3FFEFF07EFD84990060E193FF7FF04EF3FF3F7DFFAFF0CC71FFFFFC71FFFF99FF8E64C
C7FAFF00FEFDFF039FDF7F3FFEFF06EFD909933264C8F6FF04EF3FF3F7DFFAFF0CC218
60FFC21864F99FFCE64CE7FAFF00FEFDFF039FDF7F3FFEFF06EFD98993326409F6FF04
EF3FF3F7DFFAFF0CC893267FC89323F99FFCE64CE7FAFF00FEFDFF039FDF7F3FFEFF06
EFD9C9933264F9F6FF04EF3FF3F7DFFAFF0CCD93267FCD9827FC1FFCF060E7FAFF00FE
FDFF039FDF7F3FFEFF06EFD9C9933264C9F6FF04EF3FF3F7DFFAFF0CCF93267FCF9327
FF9FFCFE7CE7FAFF00FEFDFF039FDF7F3FFEFF06EFD9CC13320E19F6FF04EF3FF3F7DF
FAFF0CCF932667CF9327FF39FCFCF9E7FAFF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04
EF3FF3F7DFFAFF0CCF986667CF9827FC79FCF1E3E7FAFF00FEFDFF039FDF7F3FFEFF01
EFDFF1FF04EF3FF3F7DFF7FF00CFFDFF00F3F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1
FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FE
FDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EF
DFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF06EFDC3FFFE7FE67FCFF003FFC
FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF06EFD99FFFE7FE7FFCFF003FFCFF04
EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0DEFD99330C30C26183F0070C9330FFDFF
04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0DEFD99326666664C99F3326472667FD
FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0DEFD99326670664C99F33304F0F3F
FDFF04EF3FF3F7DFF8FF08CF9FFFFC3FFCF0E1E7F8FF00FEFDFF039FDF7F3FFEFF0DEF
D99326666664C99F33264F0FCFFDFF04EF3FF3F7DFF8FF08C71FFFF99FF8E64CC7F8FF
00FEFDFF039FDF7F3FFEFF0DEFD91326666664C99F33264F2667FDFF04EF3FF3F7DFF8
FF08C21864F99FFCE64CE7F8FF00FEFDFF039FDF7F3FFEFF0DEFDC3830F30726199F33
304F330FFDFF04EF3FF3F7DFF8FF08C89323F99FFCE64CE7F8FF00FEFDFF039FDF7F3F
FEFF02EFDFDFF2FF04EF3FF3F7DFF8FF08CD9827FC1FFCF060E7F8FF00FEFDFF039FDF
7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08CF9327FF9FFCFE7CE7F8FF00FEFDFF039F
DF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08CF9327FF39FCFCF9E7F8FF00FEFDFF03
9FDF7F3FFEFF01EFCAF1AA04AF3FF3F7DFF8FF08CF9827FC79FCF1E3E7F8FF00FEFDFF
039FDF7F3FFEFF01EFD0F100040F3FF3F7DFF4FF00F3F4FF00FEFDFF039FDF7F3FFEFF
01EFC0F100042F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFD6FD0001C018F70004
0F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFC6FD0001C018F700042F3FF3F7DFE6
FF00FEFDFF039FDF7F3FFEFF08EFD60F3E3E07CF3CF0F800040F3FF3F7DFE6FF00FEFD
FF039FDF7F3FFEFF08EFC619B3660CD99998F800042F3FF3F7DFE6FF00FEFDFF039FDF
7F3FFEFF08EFD619B3660CCF99F8F800040F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF
08EFC619B3660CD99980F800042F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF08EFD619
B3660CD99998F800040F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF08EFC7CF333E07CF
8CF0F800042F3FF3F7DFF8FF08CF9FFFFC3FFCF0E1E7F8FF00FEFDFF039FDF7F3FFEFF
04EFD0000006F400040F3FF3F7DFF8FF08C71FFFF99FF8E64CC7F8FF00FEFDFF039FDF
7F3FFEFF04EFC000003CF400042F3FF3F7DFF8FF08C21864F99FFCE64CE7F8FF00FEFD
FF039FDF7F3FFEFF01EFD5F155044F3FF3F7DFF8FF08C89323F99FFCE64CE7F8FF00FE
FDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08CD9827FC1FFCF060E7F8FF00
FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08CF9327FF9FFCFE7CE7F8FF
00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08CF9327FF39FCFCF9E7F8
FF00FEFDFF039FDF7F3FFEFF08EFDC19FFFFCFFCFF9FF8FF04EF3FF3F7DFF8FF08CF98
27FC79FCF1E3E7F8FF00FEFDFF039FDF7F3FFEFF08EFD9C9FFFFCFFCFF9FF8FF04EF3F
F3F7DFF4FF00F3F4FF00FEFDFF039FDF7F3FFEFF09EFD9F8386487E0C30C3FF9FF04EF
3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF09EFDC199323CFCC99999FF9FF04EF3FF3F7
DFE6FF00FEFDFF039FDF7F3FFEFF09EFDFC99327CFCCC1981FF9FF04EF3FF3F7DFE6FF
00FEFDFF039FDF7F3FFEFF08EFDFC99327CFCC9999F8FF04EF3FF3F7DFE6FF00FEFDFF
039FDF7F3FFEFF09EFD9C99327CFCC99999FF9FF04EF3FF3F7DFE6FF00FEFDFF039FDF
7F3FFEFF09EFDC199867E7E0C1CC3FF9FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFE
FF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7
DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08F3E7FFFFF3E7FF
FF0FF8FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08F1C7FFFFF1C7
FFFE67F8FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08F086183FF0
86193E67F8FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08F224C99F
F224C8FE67F8FF00FEFDFF039FDF7F3FFEFF02EFD813F2FF04EF3FF3F7DFF8FF08F364
C99FF36609FF07F8FF00FEFDFF039FDF7F3FFEFF02EFDE7FF2FF04EF3FF3F7DFF8FF08
F3E4C99FF3E4C9FFE7F8FF00FEFDFF039FDF7F3FFEFF04EFDE7200E1F4FF04EF3FF3F7
DFF8FF08F3E4C999F3E4C9FFCFF8FF00FEFDFF039FDF7F3FFEFF04EFDE72664CF4FF04
EF3FF3F7DFF8FF08F3E61999F3E609FF1FF8FF00FEFDFF039FDF7F3FFEFF04EFDE7266
40F4FF04EF3FF3F7DFF5FF00F3F3FF00FEFDFF039FDF7F3FFEFF04EFDE72664FF4FF04
EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF04EFDE72664CF4FF04EF3FF3F7DFE6FF00
FEFDFF039FDF7F3FFEFF04EFDE726661F4FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3F
FEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3
F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF
7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF
3FF3F7DFE6FF00FEFDFF019FDF
017F3FFEFF01EFDFF1FF04EF3FF3F7DFF6FF04F3E7FFFF0FF6FF00FEFDFF039FDF7F3F
FEFF01EFDFF1FF04EF3FF3F7DFF6FF04F1C7FFFE67F6FF00FEFDFF039FDF7F3FFEFF01
EFDFF1FF04EF3FF3F7DFF6FF04F086193E67F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1
FF04EF3FF3F7DFF6FF04F224C8FE67F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF
3FF3F7DFF6FF04F36609FF07F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7
DFF6FF04F3E4C9FFE7F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF6FF
04F3E4C9FFCFF6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF6FF04F3E6
09FF1FF6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039F
DF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04
EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF0003F7DFE6FF00FEFDFF
039FDF7F3FFEFF01EFDFF1FF04EF2AABF7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1
FF04EF0003F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FE
FDFF039FDF7F3FFEFF01EFDFF1FF04EF5FE3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EF
DFF1FF04EF1FEBF7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF4FD3F7DFF7FF
069F3FFFFCF0E1E7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF2FCBF7DFF7FF06
8E3FFFF8E64CC7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5793F7DFF7FF0684
30C9FCE64CE7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF27ABF7DFF7FF069126
47FCE64CE7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5353F7DFF7FF069B304F
FCF060E7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF2B2BF7DFF7FF069F264FFC
FE7CE7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5453F7DFF7FF069F264FFCFC
F9E7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF28ABF7DFF7FF069F304FFCF1E3
E7F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5553F7DFE6FF00FEFDFF039FDF7F
3FFEFF01EFC0F100040F0003F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6
FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFED
FF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3F
FEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF
039FDF7F3FFEFF00E0ED000107C0E500FDFF039FDF7F3FC7FF039FDF7F3FC7FF039FDF
7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3CC80004079FDF7F3FC7FF039F
DF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039F
DF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FF2FF00E0FD000007F2FF00
F0FD000001F1FF039FDF7F3FF2FF00EFFDFF00F7F2FF00F7FDFF00FDF1FF039FDF7F3F
F2FF00EFFDFF00F7F2FF00F7FDFF00FDF1FF039FDF7F3FF2FF00EFFDFF00F7F2FF00F7
FDFF00FDF1FF039FDF7F3FF2FF00EFFDFF00F7F2FF00F7FDFF00FDF1FF039FDF7F3FF2
FF05EF83E4CFFFF7F2FF05F7E19FFFFFFDF1FF039FDF7F3FF2FF05EF9FE7CFFFF7F2FF
05F7CC9FFFFFFDF1FF039FDF7F3FF2FF05EF9F0487FFF7F2FF05F7CF9870E1FDF1FF03
9FDF7F3FF2FF05EF8664CFFFF7F2FF05F7CF93264CFDF1FF039FDF7F3FF2FF05EF9E64
CFFFF7F2FF05F7CF9333C0FDF1FF039FDF7F3FF2FF05EF9E64CFFFF7F2FF05F7CF933C
CFFDF1FF039FDF7F3FF2FF05EF9E64CC93F7F2FF05F7CC93264CFDF1FF039FDF7F3FF2
FF05EF8304E493F7F2FF05F7E19870E1FDF1FF039FDF7F3FF2FF00EFFDFF00F7F2FF00
F7FDFF00FDF1FF039FDF7F3FF2FF01EF81FEFF00F7F2FF05F7C07FFFFFFDF1FF039FDF
7F3FF2FF00EFFDFF00F7F2FF00F7FDFF00FDF1FF039FDF7F3FF2FF00EFFDFF00F7F2FF
00F7FDFF00FDF1FF039FDF7F3FF2FF00E0FD000007F2FF00F0FD000001F1FF039FDF7F
3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F
3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F
3FC7FF029FC07FC600021FDF7FC600021FDF7FC5FF01DF7FC5FF01DF7FC5FF01C07FC5
FF01DF7FC5FF01DF7FC5FF01DF7FC5FF00DFC300
%%Trailer
end

%%EndDocument
FMENDEPSF
197.67 142.98 516 204.98 R
V
0 10 Q
0 X
(Figure) 197.67 198.32 T
(8-) 231.01 198.32 T
(1) 239.9 198.32 T
4 F
(International Formats) 248.24 198.32 T
(International formats include variations in how numbers, times,) 197.67 184.32 T
-0.25 (currencies, etc. are displayed in various countries. These formats may) 197.67 172.32 P
(be set in the International section of the Preferences desk tool.) 197.67 160.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 432 288 144 90 378 216.98 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 432 288
%%Creator: dump.geo
%%DocumentFonts: 
%%Title: 
%%EndComments

64 dict begin	% It is recommended that we have our own dictionary...
% Screen pixels are run-length encoded exactly as received from the kernel,
% decoded by the procedure readrlestring, which returns a single packet of
% pixels and translated to whatever format is appropriate for the type of
% image being displayed (4-color, 4-bit greyscale, etc.) by some other
% procedure that comes after readrlestring.

/rlestr1 1 string def % single-element string for reading initial packet byte
/rlestr 129 string def
/readrlestring {
  currentfile rlestr1 readhexstring pop  0 get
  dup 127 le {
    currentfile rlestr 0
    4 3 roll 		% stack now (file rlestr 0 #)
    1 add 		% # is string index and we need length
    getinterval
    readhexstring
    pop			% discard eof status
  } {
    257 exch sub 	% figure number of repetitions
    dup			% save for after the loop
    currentfile rlestr1 readhexstring	% read the byte to duplicate
    pop			% discard eof status
    0 get		% fetch the byte from rlestr1
    exch 		% bring count to the top
    0 exch		% push initial loop value under count
    1 exch		% push increment value under count
    1 sub		% set terminate value. count is 1-origin, though
    { rlestr exch 2 index put } % given index, fetch byte and store in rlestr
    for
    pop 		% discard replicated byte. original count still there
    rlestr exch 0 exch getinterval
 } ifelse
} bind def
%%EndProlog
%%Page: 1 1
6.0 72 mul 4.0 72 mul scale
491 266 1
[ 491 0 0 -266 0 266 ]
{ readrlestring }
image
C400011F7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7F
C5FF01DF7FC600021FDF7FC600031FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF03
9FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF03
9FDF7F3FC7FF039FDF7F3FC7FF049FDF7F3FFEFA000201FFCFFDFF06833FFFFF99FF93
FDFF020FFCCFFEFF0AF93FFFFF87FFFFE7FFFC7FFEFF03CFFFE36FF9FF049FDF7F3FFE
FAFF02FDFFCFFDFF0039FEFF02F9FF9FFEFF02FE67FCFDFF04F93FFFFF33FDFF00F9FD
FF02CFFFCFF8FF089FDF7F3FFEFFFF807FFEFF2AFDFFCF8706183F3F30FC0190FC130E
1C307E64184C3070C1F9064C3F320C18660C30E19200E1861F86649FFAFF369FDF7F3F
FEF1FEE03FFFCEFFFDFFCF3264C99F83267CCC99F99264C9933E64CCC993264CF93239
9F32679324C999CC8E664CCCCFCE647FFAFF359FDF7F3FFEE004707FFF00007DFFCF02
64099FF9207CCC99F9920678133E64CCC993204CF932781F02673024C819CC9E6660CC
0FCE64F9FF359FDF7F3FFEC001B0FE7F00007DFFCF3E64F99FF927FCCC99F9927F99F3
3E64CCC99327CCF93279FF326673E4C9F9CC9E664CCCFFCE64F9FF359FDF7F3FFEF80F
773C200002FDFFCF3264C99F39267CCC99F99264C9933E64CCC993264CF932799F3264
F324C999CC9E664CCCCFCE64F9FF359FDF7F3FFEF80C7FF8000006FDFFC18706199F83
30FCCC9CFC130E1C333F0C1E4C3330CCF9327C3F326418660C39E19E6660E61FCF04F9
FF0C9FDF7F3FFEF8007FFD000003FDFEFF00E7F4FF00FCF4FF00CFF0FF0C9FDF7F3FFE
F8007FFA000001FDFEFF000FF4FF00FCF5FF01FE1FF0FF0C9FDF7F3FFEE0007FD00000
03FDD0FF0C9FDF7F3FFEE001FFE0000006FDD0FF139FDF7F3FFEE007FFCE400006FDFF
C0FF33E41FF9FEFF02E7CDB3FDFF03903FCF9FFDFF103F6CFFF27F9FFFE07FFFFFE7FF
FE3FFFCFFAFF139FDF7F3FFEE00FFFDF80000AFDFFFCFFF3E4CFF9FEFF02E7CFF3FDFF
039F3FCF9FFDFF103FFCFFF3FF9FFFFE7FFFFFE7FFFCFFFFCFFAFF369FDF7F3FFEF03F
FFC7E00007FDFFF9C321CCCC3099007FE7CC30649907073E70C19860FCC8383F0C1832
618387FCCCCC386661F870E187FAFF369FDF7F3FFEF3BFFF80000007FDFFF39933CCC9
9999333FE6C993239932673CE64C93267CC9933E64C9924C9933F9CCC99324CCFCE64C
CFFAFF369FDF7F3FFEF3DFFF00110003FDFFE781339CCC1999333FE44C132799326679
F04C90267CC9933F04C9924F9903F3CCC813E1C0FCE067CFFAFF369FDF7F3FFEF2FFFF
0000400FFDFFCF9F339CC99999333FE109932799326673E64C93E67CC9933E64C9924F
993FE7CCC9F3E1CFFCE7F9CFFAFF369FDF7F3FFEF9FFFE0008E11FFDFFCF99333CC999
993333E3899327993264F3E64C93267CC9933E64C9924C9933E7CCC99324CCFCE64CCC
FAFF369FDF7F3FFEFEFFFE0003F39DFDFFC0C3393C1C1CC13333E7CC1327C13304F030
4C98667E09983F04C992619987E0601C386661FCF0E1E4FAFF0C9FDF7F3FFEFF47FF00
01F7FCFDF8FF00E7FBFF00E7E1FF0C9FDF7F3FFEFF81FF8003FFBAFDF1FF000FE1FF0C
9FDF7F3FFEFF80FFF003FFB7FDD0FF0C9FDF7F3FFEFF807FF807FF94BDD0FF0C9FDF7F
3FFEFF801FFC07FFDDCDD0FF0C9FDF7F3FFEFF801FFC0FFFF1CDD0FF0C9FDF7F3FFEFF
C03FFC0FFFFFFDD0FF0C9FDF7F3FFEFFE03FFC0BFFFF1DD0FF049FDF7F3FFEFA000001
D0FF0C9FDF7F3FFFFFF07FFC1FFFF00FD0FF0C9FDF7F3FFFFFF07FFE3FFFF00FD0FF0C
9FDF7F3FFFFFF0FFFE7FFFF00FD0FF069FDF7F3FFFFFF0FDFF01E61FD0FF069FDF7F3F
FFFFF1FCFF003FD0FF069FDF7F3FFFFFF9FCFF007FD0FF069FDF7F3FFFFFF9CAFF079F
DF7F3FFFFFFD7FCBFF069FDF7F3FFFFFFECAFF039FDF7F3FC7FF039FDF7F3FC7FF039F
DF7F3FC7FF039FDF7F3FC7FF059FDF7F3FCFF9FEFF04F99FFFFF9FD1FF059FDF7F3FCF
F9FEFF00F9FEFF009FD1FF0D9FDF7F3FC830C3241C309860E19FD1FF0D9FDF7F3FC999
991CCF9993267C9FD1FF0D9FDF7F3FC999813CCC199326609FD1FF0D9FDF7F3FC9999F
3CC99993264C9FD1FF0D9FDF7F3FC99CC33CCC1C9866609FD1FF039FDF7F3FC7FF039F
DF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039F
DF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FFDFF079F3FCFF3FFFFF83F
FEFF04E7FFFC999FFEFF000FF5FF05E0FF9FFFCFF3F1FF039FDF7F3FFDFF069F3FCFF3
FFFFF9FDFF03E7FFFCF9FEFF01FE67F5FF01E67FFEFF00F3F1FF039FDF7F3FFDFF139F
30CC3070E1F9F0C90070C3F0E0909864C307E7F5FF06E6619860CC330FF2FF039FDF7F
3FFDFF139B264993264CF86647332667E64C9993239933CFF5FF06E0CC9326499267F2
FF039FDF7F3FFEFF16E1912049F32067F9E64F333067E04C99902781339E07C0F70006
664099E6481206F600FDFF039FDF7F3FFEFF16EF8427C9F327F9F9E64F332667E7CC99
93E79F339FF7DFF7FF06E64F9E6649F27FF7FF00FEFDFF039FDF7F3FFEFF16EF8E2649
93264CF9E64F332667E64C9993279933FFF7DFF7FF06E64C9326499267F7FF00FEFDFF
039FDF7F3FFEFF16EF9F30CC3330E1F9F0CF333073F0E09C9867C3339FF7DFF7FF06E0
E19860CC330FF7FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFF4FF00E7F4FF00FEFD
FF039FDF7F3FFEFF00EFEDFF01F7DFF4FF00E7F4FF00FEFDFF039FDF7F3FFEFF00EFED
FF01F7DFE6FF00FEFDFF019FDF
017F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00
FEFDFF039FDF7F3FFEFF01EFC0F100040F0003F7DFE6FF00FEFDFF039FDF7F3FFEFF01
EFDFF1FF04EF2AABF7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5453F7DFFC
FF10FCF9FFFE7FFFFFC3FE7CDBFFFFCF0E1E7FFCFF00FEFDFF039FDF7F3FFEFF01EFDF
F1FF04EF28ABF7DFFCFF09FC71FFFE7FFFFF99FE38FEFF038E64CC7FFCFF00FEFDFF03
9FDF7F3FFEFF03EFD9F36CF3FF04EF5353F7DFFCFF10FC21860C30E0FF99FE10C3241F
CE64CE7FFCFF00FEFDFF039FDF7F3FFEFF03EFD9F3FCF3FF04EF2B2BF7DFFCFF10FC89
3266664CFF99FE44991F9FCE64CE7FFCFF00FEFDFF039FDF7F3FFEFF07EFD9F30C1926
41C1F7FF04EF5793F7DFFCFF10FCD93266704CFFC1FE6CC13F3FCF060E7FFCFF00FEFD
FF039FDF7F3FFEFF07EFD9B264C8E64C99F7FF04EF27ABF7DFFCFF10FCF93266664CFF
F9FE7C993E7FCFE7CE7FFCFF00FEFDFF039FDF7F3FFEFF07EFD91304C9E64C99F7FF04
EF4FD3F7DFFCFF10FCF93266664CCFF33E7C993CFFCFCF9E7FFCFF00FEFDFF039FDF7F
3FFEFF07EFD84264C9E64C99F7FF04EF2FCBF7DFFCFF10FCF986673060CFC73E7CC13C
1FCF1E3E7FFCFF00FEFDFF039FDF7F3FFEFF07EFD8E264C9E64C99F7FF04EF5FE3F7DF
F7FF01FC9FF2FF00FEFDFF039FDF7F3FFEFF07EFD9F304C9F04CC1F7FF04EF1FEBF7DF
F7FF00E1F1FF00FEFDFF039FDF7F3FFEFF01EFDFFCFF00F9F7FF04EF3FF3F7DFE6FF00
FEFDFF039FDF7F3FFEFF01EFDFFCFF00C3F7FF04EF0003F7DFE6FF00FEFDFF039FDF7F
3FFEFF01EFDFF1FF04EF5553F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF00
03F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039F
DF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF04EFD81FE7CF
F4FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF04EFDF9FE7CFF4FF04EF3FF3F7DF
FAFF0CF9F3FFFFE1F9F36FFFCF0E1E7FFAFF00FEFDFF039FDF7F3FFEFF06EFDF3860CC
307FF6FF04EF3FF3F7DFFAFF0CF8E3FFFFCCF8E3FFFF8E64CC7FFAFF00FEFDFF039FDF
7F3FFEFF06EFDE732649933FF6FF04EF3FF3F7DFFAFF0CF8430FFFCCF8430C9FCE64CE
7FFAFF00FEFDFF039FDF7F3FFEFF06EFDCF82648133FF6FF04EF3FF3F7DFFAFF0CF912
67FFCCF912647FCE64CE7FFAFF00FEFDFF039FDF7F3FFEFF06EFD9F32649F33FF6FF04
EF3FF3F7DFFAFF0CF9B267FFE0F9B304FFCF060E7FFAFF00FEFDFF039FDF7F3FFEFF06
EFD9F32649933FF6FF04EF3FF3F7DFFAFF0CF9F267FFFCF9F264FFCFE7CE7FFAFF00FE
FDFF039FDF7F3FFEFF06EFD818264C333FF6FF04EF3FF3F7DFFAFF0CF9F267E7F9F9F2
64FFCFCF9E7FFAFF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFFAFF0CF9F3
0FE7E3F9F304FFCF1E3E7FFAFF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DF
F7FF00CFF1FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF03
9FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF
04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFD
FF039FDF7F3FFEFF05EFDC3FF8DB3FFCFF02FCFF3FFDFF04EF3FF3F7DFE6FF00FEFDFF
039FDF7F3FFEFF05EFD99FF3FF3FFAFF003FFDFF04EF3FF3F7DFE6FF00FEFDFF039FDF
7F3FFEFF16EFD99061990649907061830CC3070C1FFFFFEF3FF3F7DFE6FF00FEFDFF03
9FDF7F3FFEFF16EFD9933399323993264CF264993264CFFFFFEF3FF3F7DFE6FF00FEFD
FF039FDF7F3FFEFF16EFD81333993279932667E6049F3204CFFFFFEF3FF3F7DFF8FF08
0FF9F36FFFFF3C3879F8FF00FEFDFF039FDF7F3FFEFF16EFD99333993279932679CE7C
9F327CCFFFFFEF3FF3F7DFF9FF09FE67F8E3FFFFFE399331F8FF00FEFDFF039FDF7F3F
FEFF16EFD9933399327993264C9E64993264CFFFFFEF3FF3F7DFF9FF09FE67F8430C90
7F399339F8FF00FEFDFF039FDF7F3FFEFF16EFD99333C1327C133061830CC3330CCFFF
FFEF3FF3F7DFF9FF09FE67F912647E7F399339F8FF00FEFDFF039FDF7F3FFEFF01EFDF
FBFF01FE7FF9FF04EF3FF3F7DFF8FF0807F9B304FCFF3C1839F8FF00FEFDFF039FDF7F
3FFEFF01EFDFFBFF00F0F8FF04EF3FF3F7DFF8FF08E7F9F264F9FF3F9F39F8FF00FEFD
FF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF8FF08CCF9F264F3FF3F3E79F8FF00FE
FDFF039FDF7F3FFEFF01EFCAF1AA04AF3FF3F7DFF8FF081CF9F304F07F3C78F9F8FF00
FEFDFF039FDF7F3FFEFF01EFD0F100040F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01
EFC0F100042F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFD6FC00023E0060F90004
0F3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFC6FC0002330060F900042F3FF3F7DF
E6FF00FEFDFF039FDF7F3FFEFF0BEFD60F3E3E78F0333CF66FF8FB00040F3FF3F7DFE6
FF00FEFDFF039FDF7F3FFEFF0BEFC619B366CD983366666CCCFB00042F3FF3F7DFE6FF
00FEFDFF039FDF7F3FFEFF0BEFD60FB366FCC0333E666CCCFB00040F3FF3F7DFE6FF00
FEFDFF039FDF7F3FFEFF0BEFC619B366C0303366666CCCFB00042F3FF3F7DFE6FF00FE
FDFF039FDF7F3FFEFF0BEFD619B366CD983366666CCCFB00040F3FF3F7DFE6FF00FEFD
FF039FDF7F3FFEFF0BEFC7CFB33E78F03E3E33ECCCFB00042F3FF3F7DFF8FF08E1FF3E
6DFFF9E1C3CFF8FF00FEFDFF039FDF7F3FFEFF04EFD0000006F400040F3FF3F7DFF8FF
08CCFF1C7FFFF1CC998FF8FF00FEFDFF039FDF7F3FFEFF04EFC000003CF400042F3FF3
F7DFF8FF08CCFF086193F9CC99CFF8FF00FEFDFF039FDF7F3FFEFF01EFD5F155044F3F
F3F7DFF8FF08CCFF224C8FF9CC99CFF8FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF
3FF3F7DFF8FF08E0FF36609FF9E0C1CFF8FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04
EF3FF3F7DFF8FF08FCFF3E4C9FF9FCF9CFF8FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF
04EF3FF3F7DFF8FF08F99F3E4C9FF9F9F3CFF8FF00FEFDFF039FDF7F3FFEFF02EFD9CF
FDFF02C1FF9FF9FF04EF3FF3F7DFF8FF08E39F3E609FF9E3C7CFF8FF00FEFDFF039FDF
7F3FFEFF02EFD99FFDFF02CCFF9FF9FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF
0BEFD9399241870FCCC3099007FBFF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0B
EFD87991F93267CC99999333FBFF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0BEF
D87993F3033FCCC1999333FBFF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0BEFD9
3993E73FCFCC99999333FBFF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0BEFD999
93CF3267CC99999333FBFF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF0BEFD9CC13
C1870FC1C1CC1333FBFF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04
EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF
039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFFAFF0AFCF9FFFE7FFFFFC3FE7CDBF8FF00
FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFFAFF09FC71FFFE7FFFFF99FE38F7
FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFFAFF0CFC21860C30E0FF99FE
10C3241FFAFF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFFAFF0CFC893266
664CFF99FE44991F9FFAFF00FEFDFF039FDF7F3FFEFF04EFD81FE67FF4FF04EF3FF3F7
DFFAFF0CFCD93266704CFFC1FE6CC13F3FFAFF00FEFDFF039FDF7F3FFEFF04EFDF9FFE
7FF4FF04EF3FF3F7DFFAFF0CFCF93266664CFFF9FE7C993E7FFAFF00FEFDFF039FDF7F
3FFEFF04EFDF38643FF4FF04EF3FF3F7DFFAFF0BFCF93266664CCFF33E7C993CF9FF00
FEFDFF039FDF7F3FFEFF04EFDE73267FF4FF04EF3FF3F7DFFAFF0CFCF986673060CFC7
3E7CC13C1FFAFF00FEFDFF039FDF7F3FFEFF04EFDCF0267FF4FF04EF3FF3F7DFF5FF01
FC9FF4FF00FEFDFF039FDF7F3FFEFF04EFD9F3E67FF4FF04EF3FF3F7DFF5FF00E1F3FF
00FEFDFF039FDF7F3FFEFF04EFD9F3267FF4FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F
3FFEFF04EFD818673FF4FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF
04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFD
FF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDF
F1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00
FEFDFF019FDF
017F3FFEFF01EFDFF1FF04EF3FF3F7DFF6FF030FF9F36FF5FF00FEFDFF039FDF7F3FFE
FF01EFDFF1FF04EF3FF3F7DFF7FF03FE67F8E3F4FF00FEFDFF039FDF7F3FFEFF01EFDF
F1FF04EF3FF3F7DFF7FF06FE67F8430C907FF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1
FF04EF3FF3F7DFF7FF06FE67F912647E7FF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF
04EF3FF3F7DFF6FF0407F9B304FCF6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3F
F3F7DFF6FF04E7F9F264F9F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DF
F6FF04CCF9F264F3F6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFF6FF05
1CF9F304F07FF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFD
FF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDF
F1FF04EF3FF3F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF0003F7DFE6FF00
FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF2AABF7DFE6FF00FEFDFF039FDF7F3FFEFF01
EFDFF1FF04EF0003F7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF3FF3F7DFE6
FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5FE3F7DFE6FF00FEFDFF039FDF7F3FFE
FF01EFDFF1FF04EF1FEBF7DFE6FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF4FD3F7
DFF8FF07FCF9B7FFFF9E1C3CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF2FCBF7
DFF8FF01FC71FEFF021CC998F7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5793F7
DFF8FF07FC2186483F9CC99CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF27ABF7
DFF8FF07FC89323F3F9CC99CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5353F7
DFF8FF07FCD9827E7F9E0C1CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF2B2BF7
DFF8FF07FCF9327CFF9FCF9CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5453F7
DFF8FF07FCF93279FF9F9F3CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF28ABF7
DFF8FF07FCF982783F9E3C7CF7FF00FEFDFF039FDF7F3FFEFF01EFDFF1FF04EF5553F7
DFE6FF00FEFDFF039FDF7F3FFEFF01EFC0F100040F0003F7DFE6FF00FEFDFF039FDF7F
3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFD
FF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DF
E6FF00FEFDFF039FDF7F3FFEFF00EFEDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00EF
EDFF01F7DFE6FF00FEFDFF039FDF7F3FFEFF00E0ED000107C0E500FDFF039FDF7F3FC7
FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3CC8
0004079FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3F
C7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3F
F4FFF800F4FF00F0F900003FF4FF039FDF7F3FF4FF007FFAFF00FEF4FF00F7F9FF00BF
F4FF039FDF7F3FF4FF007FFAFF00FEF4FF00F7F9FF00BFF4FF039FDF7F3FF4FF007FFA
FF00FEF4FF00F7F9FF00BFF4FF039FDF7F3FF4FF007FFAFF00FEF4FF00F7F9FF00BFF4
FF039FDF7F3FF4FF037C1F2667FDFF00FEF4FF09F7E0FF9F27FE0FFFFFBFF4FF039FDF
7F3FF4FF037CFF3E7FFDFF00FEF4FF09F7CE7F9F3FFCE7FFFFBFF4FF039FDF7F3FF4FF
087CF824261930C1FFFEF4FF09F7CFE183261CE6183FBFF4FF039FDF7F3FF4FF087C33
2664C8E64CFFFEF4FF09F7E0CC9924CC8CC99FBFF4FF039FDF7F3FF4FF087CF3266409
E04CFFFEF4FF09F7FE4F99240CE4099FBFF4FF039FDF7F3FF4FF087CF32664F9E7CCFF
FEF4FF09F7FE4F9924FCE4F99FBFF4FF039FDF7F3FF4FF087CF32664C9E64C927EF4FF
09F7CE4C9924CCE4C99FBFF4FF039FDF7F3FF4FF087C18272619F0CC927EF4FF09F7E0
E19926188E199FBFF4FF039FDF7F3FF4FF007FFAFF00FEF4FF00F7F9FF00BFF4FF039F
DF7F3FF4FF017C0FFBFF00FEF4FF03F7FFC07FFCFF00BFF4FF039FDF7F3FF4FF007FFA
FF00FEF4FF00F7F9FF00BFF4FF039FDF7F3FF4FF007FFAFF00FEF4FF00F7F9FF00BFF4
FF039FDF7F3FF4FFF800F4FF00F0F900003FF4FF039FDF7F3FC7FF039FDF7F3FC7FF03
9FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FC07F3FC7FF03
9FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF039FDF7F3FC7FF029FC07FC600021F
C07FC600021FDF7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01DF7FC5FF01CF7FC5FF
01CF7FC5FF00CFC400000F
%%Trailer
end

%%EndDocument
FMENDEPSF
0 0 0 576 432 144 90 378 321.98 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 576 432
%%Creator: dump.geo
%%DocumentFonts: 
%%Title: 
%%EndComments

64 dict begin	% It is recommended that we have our own dictionary...
% Screen pixels are run-length encoded exactly as received from the kernel,
% decoded by the procedure readrlestring, which returns a single packet of
% pixels and translated to whatever format is appropriate for the type of
% image being displayed (4-color, 4-bit greyscale, etc.) by some other
% procedure that comes after readrlestring.

/rlestr1 1 string def % single-element string for reading initial packet byte
/rlestr 129 string def
/readrlestring {
  currentfile rlestr1 readhexstring pop  0 get
  dup 127 le {
    currentfile rlestr 0
    4 3 roll 		% stack now (file rlestr 0 #)
    1 add 		% # is string index and we need length
    getinterval
    readhexstring
    pop			% discard eof status
  } {
    257 exch sub 	% figure number of repetitions
    dup			% save for after the loop
    currentfile rlestr1 readhexstring	% read the byte to duplicate
    pop			% discard eof status
    0 get		% fetch the byte from rlestr1
    exch 		% bring count to the top
    0 exch		% push initial loop value under count
    1 exch		% push increment value under count
    1 sub		% set terminate value. count is 1-origin, though
    { rlestr exch 2 index put } % given index, fetch byte and store in rlestr
    for
    pop 		% discard replicated byte. original count still there
    rlestr exch 0 exch getinterval
 } ifelse
} bind def
%%EndProlog
%%Page: 1 1
8.0 72 mul 6.0 72 mul scale
615 346 1
[ 615 0 0 -346 0 346 ]
{ readrlestring }
image
B50001017FB6FF01FD7FB6FF01FD7FB6FF01FD7FB6FF01FD7FB6FF01FD7FB6FF01FD7F
B6FF01FD7FB7000201FD7FB7000301FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03
F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03
F9FD7F3FB8FF03F9FD7F3FB8FF04F9FD7F3FFEFA000001C1FF04F9FD7F3FFEFAFF00FD
C1FF08F9FD7F3FFEFFFF807FFEFF05FDFFE79CF333F6FF01F3CFF4FF02FE6784F9FF00
87FCFF00F3FEFF0533FFF0E13FFCFBFF11F9FD7F3FFEF1FEE03FFFCEFFFDFFE79CFF3F
F6FF00F3F3FF02FE7F3FF9FF003FFCFF00F3FEFF0533FFE7CFFFFCFBFF7FF9FD7F3FFE
E004707FFF00007DFFE798333381F0F01FF83E1F03FF8791E0CF0F23E07FC8FC3CF323
FE461F87E2660CF0F23FE79E1F03FE0F0F239187C0E0E07FF13B81C1833C1C8F81F13C
3FFFF9FD7F3FFEC001B0FE7F00007DFFE79CF3333CE67F9FF39CCE79FF338CF3CE6719
CF3FC6799CF319FE30CF33CC673CE6719FE77F9CCE79FF3E67198C339E73CF3FE6373C
E7CF39CC673CE6399FFFF9FD7F3FFEF80F773C200002FDFFE79CF3333FCF3F3FE7F9E6
7FFE799E73CCF33CCFFFCF33CCF33FFE79E6799E673CCF33FFE799E67FFF3CF33F9E79
FE73CFFFCF3FFCE7CF33FCF3FCCF33CFFFF9FD7F3FFEF80C7FF8000006FDFFE79CF333
81C03E7FE7F8077F03FE799E73CCF33CE07FCF33CCF33FFE79E6799E673CC033FFE799
E703FF3CF33F9E79C073E07FCF3F80E7CF33FCF380CF300FFFF9FD7F3FFEF8007FFD00
0003FDFFE79CF333FCCFFCFFE7F9FFF9FE799E73CCF33CFF3FCF33CCF33FFE79E6799E
673CCFF3FFE799E7F9FF3CF33F9E799E73FF3FCF3F3CE7CF33FCF33CCF33FF7FFFF9FD
7F3FFEF8007FFA000001FDFFE79CF333FCCFF9FFE7F9FFF9FE799E73CCF33CFF3FCF33
CCF33FFE79E6799E673CCFF3FFF339E7F9FF3CF33F9E799E73FF3FCF3F3CE7CF33FCF3
3CCF33FFFFF9FD7F3FFEE0007FD0000003FDFFF33CF3333CE733FFF39CE679FF338CF3
CE673CCF3FC6799E633FFE79E733CC673CE733FF74F87CCE79FF3E673F9E799C73CF3F
E63F38E7CF39CCF338E639CFFFF9FD7F3FFEE001FFE0000006FDFFF87E333381F0701F
F83E0F03FF8791F8CF0F3CE07FC8FC3F133FFE79E787E2673CF073FFFCFE1F03FF3F0F
3F9E79C278E07FF13F84E7CF3C1CF384F13C1FFFF9FD7F3FFEE007FFCE400006FDF2FF
009FFBFF00CFDBFF0F3FFFFFF9FD7F3FFEE00FFFDF80000AFDF2FF009FFBFF00CFDBFF
0F3FFFFFF9FD7F3FFEF03FFFC7E00007FDF2FF009FFBFF00CFDCFF10E67FFFFFF9FD7F
3FFEF3BFFF80000007FDF2FF009FFBFF00CFDCFF00F0FEFF0CF9FD7F3FFEF3DFFF0011
0003FDC1FF0CF9FD7F3FFEF2FFFF0000400FFDC1FF0CF9FD7F3FFEF9FFFE0008E11FFD
C1FF0CF9FD7F3FFEFEFFFE0003F39DFDC1FF14F9FD7F3FFEFF47FF0001F7FCFDFFFF9F
FFFFE7FFCFFEFF02E7FE7FFAFF003FF9FF00F3FEFF02E7FFF9FBFF00F9FCFF06FE7FFF
99FFFFFCF9FF14F9FD7F3FFEFF81FF8003FFBAFDFFFF9FFFFFE7FFCFFEFF02E7FE7FFA
FF003FF5FF02E7FFF9FBFF00F9FCFF06FE7FFF99FFFFFCF9FF48F9FD7F3FFEFF80FFF0
03FFB7FDFFF89E1FFE270383C3FFC3C1FE47E1E7991F0FFFF13C3FF230FC3C8F23E073
C3FFC3C1FF89E1FF91F87918791E47C3FFFC3C1FF89DC0E798323E1F03FDFF48F9FD7F
3FFEFF807FF807FF94BDFFF31CCFFCC679CF99FF99E7FE33CCE798CE67FFE6399FF186
799C6719CF3399FF99E7FF31CCFF8CF338C338CE3399FFF99E7FF31B9E679CF19CCE79
FDFF48F9FD7F3FFEFF801FFC07FFDDCDFFE799E7F9E7F9CF3CFF3CE7FE799E6799FCF3
FFCF33CFF3CF33CCF33CFF333CFF3CE7FE799E7F9E6799E799E67F3CFFF3CE7FE79FFE
679CF3F9E67FFDFF48F9FD7F3FFEFF801FFC0FFFF1CDFFE79807F9E701CF00FF00E7FE
79806799FC03FFCF300FF3CF33CCF33CE03300FF00E7FE79807F9E6799E799E67F00FF
F00E7FE79FC0679CF3F80703FDFF48F9FD7F3FFEFFC03FFC0FFFFFFDFFE799FFF9E679
CF3FFF3FE7FE799FE799FCFFFFCF33FFF3CF33CCF33CCF333FFF3FE7FE799FFF9E6799
E799E67F3FFFF3FE7FE79F9E679CF3F9FFF9FDFF48F9FD7F3FFEFFE03FFC0BFFFF1DFF
E799FFF9E679CF3FFF3FE7FE799FE799FCFFFFCF33FFF3CF33CCF33CCF333FFF3FE7FE
799FFF9E6799E799E67F3FFFF3FE7FE79F9E679CF3F9FFF9FDFF04F9FD7F3FFEFA003C
01FFF31CE7FCC671CF9CFF9CE7FE79CE7319FE733FE639CFF3CF399CF33CCE339CFF9C
E7FF31CE7F9E7339E798CE7F9CCFF9CE7FF31F9C731CF3FCE679FDFF48F9FD7F3FFFFF
F07FFC1FFFF00FFFF89E0FFE2709E3C1FFC1F1FE79E0F899FF073FF13C1FF3CF3C3CF3
3CE133C1FFC1F1FF89E0FF9E7879E7991E7FC1CFFC1F1FF89FC2789E33FE0F03FDFF0C
F9FD7F3FFFFFF07FFE3FFFF00FEEFF00BFE6FF00EFF1FF0CF9FD7F3FFFFFF0FFFE7FFF
F00FEEFF007FE6FF00DFF1FF06F9FD7F3FFFFFF0FDFF01E61FC1FF06F9FD7F3FFFFFF1
FCFF003FC1FF06F9FD7F3FFFFFF9FCFF007FC1FF06F9FD7F3FFFFFF9BBFF07F9FD7F3F
FFFFFD7FBCFF06F9FD7F3FFFFFFEF3FF00FDF6FF00BFD6FF03F9FD7F3FF1FF01F9FEF7
FF059F7F87FFFFE7DAFF03F9FD7F3FF1FF00F9F6FF059FFF3FFFFFE7DAFF03F9FD7F3F
F7FF17F83C0E4781F07078791F0F81FF23E0723FF89E1E0E073CC1DAFF03F9FD7F3FF7
FF17F399E6333CE739F338CE673CFF19CF319FF31CCF3CF33CE7DAFF05F9FD7F3FCFF9
FEFF1CF99FFFFF9FE7FFE67FFCCFF9E799FCF33FFF3CFF33FFE799E73FF33CE7DAFF05
F9FD7F3FCFF9FEFF00F9FEFF189FE7FC067F80CFF9E019FC0381FF3CE033FFE798073E
033CE7DAFF25F9FD7F3FC830C3241C309860E19FE7F9E67F3CCFF9E7F9FCFFFCFF3CCF
33FFE799FF3CF33CE7DAFF25F9FD7F3FC999991CCF9993267C9FE7F9E67F3CCFF9E7F9
FCFFFCFF3CCF33FFE799FF3CF33CE7DAFF26F9FD7F3FC999813CCC199326609FF399C6
7F38E739F399FE733CFF19CE33FFF31CE73CE398E79FDBFF26F9FD7F3FC9999F3CC999
93264C9FF83C267F84F07C7839FF0781FF23E133FFF89E0F3E13C4F19FDBFF0DF9FD7F
3FC99CC33CCC1C9866609FF4FF003FD0FF03F9FD7F3FEAFF003FD0FF03F9FD7F3FEAFF
003FD0FF03F9FD7F3FEAFF003FD0FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8
FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8
FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8
FF03F9FD7F3FB8FF03F9FD7F3FB8FF01F9FD
017F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9
FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9
FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FF2FF02F7FFFBCAFF03F9FD7F3FFBFF01FC07
FCFF07F9FFFBFFF7FF99CFE8FF01F01FFCFF00F3EEFF03F9FD7F3FFBFF00FCFBFF00F9
FCFF019FCFE8FF00F3FBFF00F3EEFF03F9FD7F3FFBFF10FCFF8791C8C3E0707FC0FFE1
F89983C3C8EAFF0AF3F9F3C3C8C3C8F3C3E07FF1FF03F9FD7F3FFBFF11FCFF338CC619
CF39FF9E7FCCF319CF99C67FEBFF0AF3FCE799C619C67399CF3FF1FF03F9FD7F3FFBFF
10FC0E799FCF3CFF39FFFE7F9E6799CF3CCFEAFF09F03E4F3CCF3CCF333CCFF0FF04F9
FD7F3FC0FC00111CFE799FCF3CE039FFC07F806799CF00CFE0FC000103E0F2000A33FF
1F00CF3CCF3300E070F2000507F9FD7F3FDFFCFF10FCFE799FCF3CCF39FF9E7F9FE799
CF3FCFFBFF01FBEFF2FF0AF3FF1F3FCF3CCF333FFF3FF2FF05F7F9FD7F3FDFFCFF10FC
FE799FCF3CCF39FF9E7F9FE799CF3FCFFBFF01FBEFF2FF0AF3FE4F3FCF3CCF333FFF3F
F2FF05F7F9FD7F3FDFFCFF10FCFF339FCF3CCE39FF9C7FCE7319CF9CCFFBFF01FBEFF2
FF0AF3FCE79CCF3CC6739CCF3FF2FF05F7F9FD7F3FDFFCFF10FCFF879FCF3CE13C7FC2
7FE0F899E3C1CFFBFF01FBEFF2FF0AF019F3C1CF3CC8F3C1E07FF2FF05F7F9FD7F3FDF
E5FF01FBEFECFF00CFEEFF05F7F9FD7F3FDFE5FF01FBEFECFF00CFEEFF05F7F9FD7F3F
DFE5FF01FBEFECFF00CFEEFF05F7F9FD7F3FDFE5FF01FBEFECFF00CFEEFF05F7F9FD7F
3FDFE5FF01FBEFD8FF05F7F9FD7F3FDFE5FF01FBEFD8FF05F7F9FD7F3FDFE5FF01FBEF
D8FF06F7F9FD7F3FDF80E90004078001FBEFD8FF05F7F9FD7F3FDFE8AA04A7AAA9FBEF
D8FF06F7F9FD7F3FDF80E90004179455FBEFD8FF06F7F9FD7F3FDFA0E9000407AA29FB
EFD8FF06F7F9FD7F3FDF80E90004179595FBEFEFFF05F87FE1F8780FF0FF06F7F9FD7F
3FDFA0E9000407A9A9FBEFEFFF04F33FCCF339EFFF07F7F9FD7F3FDF8603FC000030F0
00041793D5FBEFEFFF04E79F9E6799EFFF07F7F9FD7F3FDFA707EA000407ABC9FBEFEF
FF04E79F9E6799EFFF0EF7F9FD7F3FDF878F0F0DC3707E30F0F100041797E5FBEFF0FF
06E0679F9E67981FF0FF0EF7F9FD7F3FDFA6DB198E6398C33198F1000407A7E9FBEFF0
FF05E0679FCC7319EFFF0EF7F9FD7F3FDF867330CC330C03330CF10004178FF5FBEFEF
FF04E79FE27899EFFF0EF7F9FD7F3FDFA62330CC330C7F33FCF1000407AFF1FBEFEFFF
04E79FFE7F99EFFF0DF7F9FD7F3FDF860330CC330CC333F00004179FF9FBEFEFFF04F3
39FCFF39EFFF0DF7F9FD7F3FDFA60330CC330CC333F00004078001FBEFEFFF04F879E1
F879EFFF0EF7F9FD7F3FDF8603198C330CC7318CF10004179555FBEFD8FF0EF7F9FD7F
3FDFA6030F0C330C7B30F8F10004078001FBEFD8FF06F7F9FD7F3FDF80E90004179FF9
FBEFD8FF06F7F9FD7F3FDFA0E90004079FF9FBEFD8FF06F7F9FD7F3FDF80E90004179F
F9FBEFD8FF06F7F9FD7F3FDFA0E90004079FF9FBEFD8FF06F7F9FD7F3FDF95E9550457
9FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04
F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF
04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF07F7F9FD7F3FDFB9F3
FEFF00CFEEFF04F79FF9FBEFD8FF07F7F9FD7F3FDFB8F3FEFF00CFEEFF04F79FF9FBEF
D8FF0EF7F9FD7F3FDFB873C3C8C3C8F23E1FF1FF04F79FF9FBEFD8FF0EF7F9FD7F3FDF
B93399C619C6719CCFF1FF04F79FF9FBEFD8FF0EF7F9FD7F3FDFB9933CCF3CCF33F9E7
F1FF04F79FF9FBEFD8FF0EF7F9FD7F3FDFB9C33CCF3CCF33F807F1FF04F79FF9FBEFD8
FF0DF7F9FD7F3FDFB9E33CCF3CCF33F9F0FF04F79FF9FBEFD8FF0DF7F9FD7F3FDFB9F3
3CCF3CCF33F9F0FF04F79FF9FBEFD8FF0EF7F9FD7F3FDFB9F399CF3CC673FCE7F1FF04
F79FF9FBEFD8FF0EF7F9FD7F3FDFB9F3C3CF3CC8F3FE0FF1FF04F79FF9FBEFD8FF06F7
F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06
F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF
06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8
FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEF
D8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FB
EFD8FF0AF7F9FD7F3FDFBE0FFF999FFDFF00CFF2FF04F79FF9FBEFD8FF0AF7F9FD7F3F
DFBCE7FFF99FFDFF00CFF2FF04F79FF9FBEFD8FF10F7F9FD7F3FDFB9FE79999E1E461F
878381F3FF04F79FF9FBEFD8FF10F7F9FD7F3FDFB9FE79999CCE30CF33CF3CF3FF04F7
9FF9FBEFD8FF10F7F9FD7F3FDFB9C6799999E679E679CF3FF3FF04F79FF9FBEFD8FF10
F7F9FD7F3FDFB9E67999980679E601CF81F3FF04F79FF9FBEFD8FF10F7F9FD7F3FDFB9
E6799999FE79E67FCFFCF3FF04F79FF9FBEFD8FF10F7F9FD7F3FDFB9E6799999FE79E6
7FCFFCF3FF04F79FF9FBEFD8FF10F7F9FD7F3FDFBCE731999CE679E739CF3CF3FF04F7
9FF9FBEFD8FF10F7F9FD7F3FDFBE0F89999E0E79E783E381F3FF04F79FF9FBEFD8FF06
F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF02F7F9FD
037F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7
F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06
F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF
06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8
FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF0CF7F9FD7F3FDFB81FFFCFFFFF3FEFFF
04F79FF9FBEFD8FF0CF7F9FD7F3FDFB9CFFFCFFFFF3FEFFF04F79FF9FBEFD8FF12F7F9
FD7F3FDFB9E70383C3FF3FE1E47E2679E1F5FF04F79FF9FBEFD8FF12F7F9FD7F3FDFB9
E679CF99FF3FCCE33CC679CCF5FF04F79FF9FBEFD8FF13F7F9FD7F3FDFB9E7F9CF3CFF
3F9E6799E6799E7FF6FF04F79FF9FBEFD8FF13F7F9FD7F3FDFB9E701CF00FF3F9E6799
E679807FF6FF04F79FF9FBEFD8FF12F7F9FD7F3FDFB9E679CF3FFF3F9E6799E6799FF5
FF04F79FF9FBEFD8FF12F7F9FD7F3FDFB9E679CF3FFF3F9E6799E6799FF5FF04F79FF9
FBEFD8FF13F7F9FD7F3FDFB9CE71CF9CFF3FCCE79CC731CE7FF6FF04F79FF9FBEFD8FF
12F7F9FD7F3FDFB81F09E3C1FF01E1E79E2789E0F5FF04F79FF9FBEFD8FF06F7F9FD7F
3FDFBFF8FF00E7F3FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFF8FF00E7F3FF04F79FF9
FBEFD8FF06F7F9FD7F3FDFBFF9FF01FCCFF3FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBF
F9FF01FE1FF3FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7
F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06
F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF
06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF0CF7F9FD7F3FDFB81FFFCFFFFFC1FDFF00
3FF4FF04F79FF9FBEFD8FF0CF7F9FD7F3FDFB9CFFFCFFFFF9CFDFF003FF4FF04F79FF9
FBEFD8FF12F7F9FD7F3FDFB9E70383C3FF3FF0F3CC8E0F0FF5FF04F79FF9FBEFD8FF12
F7F9FD7F3FDFB9E679CF99FF3FE673CC673E67F5FF04F79FF9FBEFD8FF12F7F9FD7F3F
DFB9E7F9CF3CFF3FCF33CCFF3CF3F5FF04F79FF9FBEFD8FF12F7F9FD7F3FDFB9E701CF
00FF3FCF33CCFF3C03F5FF04F79FF9FBEFD8FF11F7F9FD7F3FDFB9E679CF3FFF3FCF33
CCFF3CF4FF04F79FF9FBEFD8FF11F7F9FD7F3FDFB9E679CF3FFF3FCF33CCFF3CF4FF04
F79FF9FBEFD8FF12F7F9FD7F3FDFB9CE71CF9CFF9CE6798CFF3E73F5FF04F79FF9FBEF
D8FF12F7F9FD7F3FDFB81F09E3C1FFC1F0FC4CFF8F07F5FF04F79FF9FBEFD8FF06F7F9
FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7
F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06
F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF
06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8
FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEF
D8FF07F7F9FD7F3FDFB9E7EAFF04F79FF9FBEFD8FF07F7F9FD7F3FDFB9E7EAFF04F79F
F9FBEFD8FF0CF7F9FD7F3FDFB9E7879E647C3FEFFF04F79FF9FBEFD8FF0CF7F9FD7F3F
DFB9E7339E63399FEFFF04F79FF9FBEFD8FF0CF7F9FD7F3FDFB806799E67F3CFEFFF04
F79FF9FBEFD8FF0CF7F9FD7F3FDFB9E6019E67F00FEFFF04F79FF9FBEFD8FF0BF7F9FD
7F3FDFB9E67F9E67F3EEFF04F79FF9FBEFD8FF0BF7F9FD7F3FDFB9E67F9E67F3EEFF04
F79FF9FBEFD8FF0CF7F9FD7F3FDFB9E739CC67F9CFEFFF04F79FF9FBEFD8FF0CF7F9FD
7F3FDFB9E783E267FC1FEFFF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FB
EFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9
FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79F
F9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7
9FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04
F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF
04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9
FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBF
E9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDF
BFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3F
DFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F
3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD
7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9
FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7
F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF02
F7F9FD
037F3FDFBFE9FF04F79FF9FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF06F7
F9FD7F3FDFBFE9FF04F78001FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7AAA9FBEFD8FF06
F7F9FD7F3FDFBFE9FF04F78001FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79FF9FBEFD8FF
06F7F9FD7F3FDFBFE9FF04F78FF5FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7AFF1FBEFD8
FF06F7F9FD7F3FDFBFE9FF04F797E5FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7A7E9FBEF
D8FF06F7F9FD7F3FDFBFE9FF04F793D5FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7ABC9FB
EFD8FF06F7F9FD7F3FDFBFE9FF04F79595FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7A9A9
FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79455FBEFD8FF06F7F9FD7F3FDFBFE9FF04F7AA
29FBEFD8FF06F7F9FD7F3FDFBFE9FF04F79555FBEFD8FF06F7F9FD7F3FDF80E9000407
8001FBEFD8FF05F7F9FD7F3FDFE5FF01FBE0D8000507F9FD7F3FDFE5FF00FBD6FF04F9
FD7F3FDFE5FF00FBD6FF04F9FD7F3FDFE5FF00FBD6FF04F9FD7F3FDFE5FF00FBD6FF04
F9FD7F3FDFE5FF00FBD6FF04F9FD7F3FC0E5000003D6FF03F9FD7F3FB8FF03F9FD7F3F
B8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3CB8000379FD7F3F
B8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FC7F3FB8FF03F9FC7F3F
B8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FF0FF00FEF800EF
FF00E0F9000003EFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD
7F3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF
00EFF9FF00FBEFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD7F
3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF00
EFF9FF00FBEFFF03F9FD7F3FF0FF04FEFC07F99CFDFF00FEEFFF02EFC07FFBFF00FBEF
FF03F9FD7F3FF0FF04FEFCFFF9FCFDFF00FEEFFF01EFCFFAFF00FBEFFF03F9FD7F3FF0
FF09FEFCFF89983C3C8FFFFEEFFF09EFCFF8791C8C3F0F23FBEFFF03F9FD7F3FF0FF09
FEFCFF319CF99C67FFFEEFFF09EFCFF338CC619E6719FBEFFF03F9FD7F3FF0FF09FEFC
0E799CF3CCFFFFFEEFFF09EFC0E799FCF3CCF33FFBEFFF03F9FD7F3FF0FF09FEFCFE79
9CF00CFFFFFEEFFF09EFCFE019FCF3CC033FFBEFFF03F9FD7F3FF0FF09FEFCFE799CF3
FCFFFFFEEFFF09EFCFE7F9FCF3CCFF3FFBEFFF03F9FD7F3FF0FF09FEFCFE799CF3FCFF
FFFEEFFF09EFCFE7F9FCF3CCFF3FFBEFFF03F9FD7F3FF0FF09FEFCFF319CF9CCFE667E
EFFF09EFCFF399FCF3CE733FFBEFFF03F9FD7F3FF0FF09FEFC07899E3C1CFE667EEFFF
09EFCFF839FCF3CF073FFBEFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEF
FF03F9FD7F3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD7F3FF0FF02FEF803
FBFF00FEEFFF02EF803FFBFF00FBEFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF00EFF9FF
00FBEFFF03F9FD7F3FF0FF00FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD7F3FF0FF00
FEF9FF00FEEFFF00EFF9FF00FBEFFF03F9FD7F3FF0FF00FEF800EFFF00E0F9000003EF
FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8
FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8FF03F9FD7F3FB8
FF03F9FD7F3FB8FF02F9FD7FB7000201FD7FB7000201FC7FB6FF01FD7FB6FF01FD7FB6
FF01FD7FB6FF01FD7FB6FF01FC7FB6FF01FD7FB6FF00FCB5000001
%%Trailer
end

%%EndDocument
FMENDEPSF
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "336" 2
%%Page: "337" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(How To Use Localization) 393.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(337) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(8.2) 142.54 632 T
0 24 Q
(How T) 180 632 T
(o Use Localization) 250.22 632 T
1 10 Q
(Y) 180 606.33 T
(our localization workload will vary depending on whether you plan to) 185.93 606.33 T
-0.07 (release your software in other countries. If you don\325) 180 593.33 P
-0.07 (t plan on exporting your) 416.88 593.33 P
(software, your only contact with localization will come when you use the) 180 580.33 T
(common functions that are localized. If you plan on international) 180 567.33 T
(distribution, you\325ll be using localization both when writing your geodes and) 180 554.33 T
(later on, during the translation process, in the following steps:) 180 541.33 T
2 F
(u) 180 521.33 T
1 F
(Use provided routines.) 198 521.33 T
-0.49 (Several) 198 509.33 P
1 9 Q
-0.44 (GEOS) 235.11 509.33 P
1 10 Q
-0.49 ( functions have been localized to handle foreign variations,) 261.29 509.33 P
-0.15 (and you should use these whether you plan international release or not.) 198 497.33 P
(Most of these functions are concerned with \322International formats\323 and) 198 485.33 T
(character sets.) 198 473.33 T
2 F
(u) 180 454.33 T
1 F
(Plan ahead for) 198 454.33 T
3 F
(ResEdit) 268.57 454.33 T
1 F
(.) 309.68 454.33 T
(Y) 198 442.33 T
(ou\325ll probably use the) 203.93 442.33 T
3 F
(ResEdit) 305.62 442.33 T
1 F
( tool if you translate your software into) 346.73 442.33 T
(other languages. Y) 198 430.33 T
(ou\325ll have to be careful about how you write your) 283.57 430.33 T
(programs if) 198 418.33 T
3 F
(ResEdit) 254.11 418.33 T
1 F
( is to work with them properly) 295.22 418.33 T
(. Any text in your) 434.31 418.33 T
(geode that the user may see will have to be translated.) 198 406.33 T
3 F
(ResEdit) 453.24 406.33 T
1 F
( looks) 494.35 406.33 T
-0.31 (only at chunk is in localizable resources. Y) 198 394.33 P
-0.31 (ou should also be prepared for) 391.02 394.33 P
(the translations of any string to be longer than the original. Y) 198 382.33 T
(ou may) 482.49 382.33 T
(want to provide instructions for translators. Y) 198 370.33 T
(ou may include these) 409.68 370.33 T
-0.4 (instructions within the body of your source code, close to the strings that) 198 358.33 P
(will be translated.) 198 346.33 T
2 F
(u) 180 327.33 T
1 F
(Use) 198 327.33 T
3 F
(ResEdit) 218.56 327.33 T
1 F
(.) 259.67 327.33 T
(The) 198 315.33 T
3 F
(ResEdit) 218.56 315.33 T
1 F
( tool makes translation easy) 259.67 315.33 T
(. It goes through an) 388.78 315.33 T
(application\325) 198 303.33 T
(s resources and checks all objects for strings and bitmaps,) 251.16 303.33 T
-0.02 (asking the translator to make any \336tting changes. The translator never) 198 291.33 P
(needs to see the source code and doesn\325) 198 279.33 T
(t have to know how to program.) 378.01 279.33 T
0 14 Q
(8.3) 142.54 228 T
0 24 Q
(Preparing for ResEdit) 180 228 T
3 10 Q
(ResEdit) 180 202.33 T
1 F
( is a) 221.11 202.33 T
1 9 Q
(GEOS) 242.79 202.33 T
1 10 Q
( program which speeds geode translations. This section) 268.96 202.33 T
-0.39 (won\325) 180 189.33 P
-0.39 (t tell you how to use the) 200.75 189.33 P
3 F
-0.41 (ResEdit) 311.54 189.33 P
1 F
-0.39 ( tool but will explain how to write your) 352.65 189.33 P
(code if you want) 180 176.33 T
3 F
(ResEdit) 257.6 176.33 T
1 F
( to work with it correctly.) 298.71 176.33 T
0 0 0 1 0 0 0 K
81 144 171 253.66 C
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(W) 81 200.66 T
(arning) 89.16 200.66 T
1 F
-0.56 (Be sure to put all text) 81 184.66 P
(into localizable) 81 173.66 T
(resources.) 81 162.66 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 X
90 450 13.5 13.5 101.25 229.53 G
4 H
0 Z
90 450 13.5 13.5 101.25 229.53 A
0 0 0 1 0 0 0 K
81 209.42 121.5 249.92 R
1 H
0 X
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "337" 3
%%Page: "338" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(338) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The important thing to remember is to put all text and bitmaps to be) 180 641.33 T
(localized in localizable resources.) 180 628.33 T
3 F
(ResEdit) 335.38 628.33 T
1 F
( looks for localizable objects only) 376.49 628.33 T
-0.3 (in non-code resources. The string or bitmap itself must be stored in a chunk,) 180 615.33 P
(which you may insure by using either the) 180 602.33 T
3 F
(@chunk) 374.46 602.33 T
1 F
( or) 414.71 602.33 T
3 F
(@visMoniker) 429.71 602.33 T
1 F
(keywords. Thus, your application icons are probably stored in the following) 180 589.33 T
(way:) 180 576.33 T
81 144 531 648 C
189 144 531 531 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 144 531 531 R
7 X
0 0 0 1 0 0 0 K
V
193.99 147.96 350.16 314.96 R
V
0 10 Q
0 X
(Figure) 193.99 308.29 T
(8-) 227.33 308.29 T
(2) 236.22 308.29 T
4 F
(Localizing Strings) 244.56 308.29 T
(Some strings may get when) 193.99 294.29 T
(translated. If your strings are too) 193.99 282.29 T
(large, UI gadgets may extend) 193.99 270.29 T
(beyond screen boundaries, as) 193.99 258.29 T
(shown in the above screen dump,) 193.99 246.29 T
-0.47 (where a dialog box has become too) 193.99 234.29 P
-0.75 (wide. If you set an absolute size for) 193.99 222.29 P
(your UI gadgets, strings may not) 193.99 210.29 T
-0.7 (\336t inside them and instead may be) 193.99 198.29 P
(truncated, as in the buttons) 193.99 186.29 T
(pictured to the right.) 193.99 174.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 576 432 259 195 222 325.96 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 576 432
%%Creator: dump.geo
%%DocumentFonts: 
%%Title: 
%%EndComments

64 dict begin	% It is recommended that we have our own dictionary...
% Screen pixels are run-length encoded exactly as received from the kernel,
% decoded by the procedure readrlestring, which returns a single packet of
% pixels and translated to whatever format is appropriate for the type of
% image being displayed (4-color, 4-bit greyscale, etc.) by some other
% procedure that comes after readrlestring.

/rlestr1 1 string def % single-element string for reading initial packet byte
/rlestr 129 string def
/readrlestring {
  currentfile rlestr1 readhexstring pop  0 get
  dup 127 le {
    currentfile rlestr 0
    4 3 roll 		% stack now (file rlestr 0 #)
    1 add 		% # is string index and we need length
    getinterval
    readhexstring
    pop			% discard eof status
  } {
    257 exch sub 	% figure number of repetitions
    dup			% save for after the loop
    currentfile rlestr1 readhexstring	% read the byte to duplicate
    pop			% discard eof status
    0 get		% fetch the byte from rlestr1
    exch 		% bring count to the top
    0 exch		% push initial loop value under count
    1 exch		% push increment value under count
    1 sub		% set terminate value. count is 1-origin, though
    { rlestr exch 2 index put } % given index, fetch byte and store in rlestr
    for
    pop 		% discard replicated byte. original count still there
    rlestr exch 0 exch getinterval
 } ifelse
} bind def
%%EndProlog
%%Page: 1 1
8.0 72 mul 6.0 72 mul scale
640 480 1
[ 640 0 0 -480 0 480 ]
{ readrlestring }
image
B20004017FFFFFFEBAFF00FBFEFF04FA7FFFFFFEBAFF00FBFEFF04F97FFFFFFEBAFF00
FBFEFF04FA7FFFFFFEBAFF00FBFEFF01F978B300047A7BFFFFFEFEFF0080C1000307FF
FFFDFEFF04797BFFFFFEFEFF0080C1000307FFFFFDFEFF087A7BFFFFFEFFF80380C100
0F07FFFFFDE0000F797BFFFFFEFFF80380C1000F07FFFFFDEFFFEF7A7BFFFFFEF80607
80C1000F07FFFFFDEFFFEF797BFFFFFEFFF0FF80C1000F07FFFFFDEFFFEF7A7BC0003E
FFE01F80F400071F00000180C00630FE00070301800C600000FCFD0002030C60FD0001
03F8FC0000C0F4000F07FF0FFDEFFFEF797BDFFFBEE0183F80F400073180000180C000
30FE00070301800060000186FD0002030060FD0001030CFD000101C0F4000F07FF6FFD
EFFFEF7A7BC0003EFFC07F80F40025600781E180CDC67C3C000003019B8CF87801803F
1B83F007CCF9B83C0000030C7E0EC3C000C0F4000F07FF6FFDEFFFEF797BFFFFFEFF83
FF80F40025600CC33180CE663066000003019CCC60CC0180619CC618030C61CC660000
030CC319C66000C0F4000F07FF0FFDEFFFEF7A7BFFFFFE80678F80F400256398661988
CC0630C300FC0311980C618600FC01986600030C6180C300FC03F80330CC3000C0F400
0F07FFFFFDEFFFEF797BFFFFFEFF001F80F40025619FE6199CCC0630FF00FC0339980C
61FE00063F9863F0030C6180FF00FC03007F30CFF000C0F4000F07FFFFFDEFFFEF7A7B
FFFFFEFE003F80F4002561980619B6CC0630C00000036D980C6180000661986018030C
6180C000000300C330CC0000C0F4000F07FFFFFDEFFFEF797BFFFFFEFE007F80F40025
61980619E3CC0630C0000003C7980C6180000661986018030C6180C000000300C330CC
0000C0F4000B07FFFFFDE0000F7A7BFFFFFEFEFF0080F40025318C6331C1CC06306300
000383980C60C6018663986618030C61806300000300C719C63000C0F4000307FFFFFD
FEFF04797BFFFFFEFEFF0080F400251F07C1E180CC061C3E00000301980C387C00FC3D
9863F001CC39803E000003007B0EC3E000C0F4000307FFFFFDFEFF047A7BFFFFFEFEFF
0080D20000C0F1000307FFFFFDFEFF04797BFFFFFEFEFF0080D20000C0F1000307FFFF
FDFEFF047A7BFFFFFEFEFF0080D300011980F1000307FFFFFDFEFF04797BFFFFFEFEFF
0080D300000FF0000307FFFFFDFEFF007AB20001017BB3FF017A7BB3FF01797BB3FF01
7A7BB3FF01797BB3FF017A7BBAFF009FFBFF07797BFE033FFCFF3FFEFF04F80FF339E7
FDFF019E7FFEFF04FE0FFFE79FFCFF0080FAFF01FC1FFDFF07FCFFFFFC03FFCCCFFDFF
0381E7FFE7FDFF0080FEFF016F9FFCFF057A7BFE7FFFFCFCFF03F9FFF3F9FCFF019E7F
FEFF03FCE7FFE7FBFF019E7FFBFF01F9CFFDFF00FCFEFF039FFFFCCFFDFF033CE7FFE7
FDFF009FFDFF009FFCFF4C797BFE7F3C1C8F3C3C8FFFF9FF1330678791FFFF9E679E1F
FFF9F323C19E1E47C0FFFF9E70391E07C4FFFFF3FE0723C0F8383FFFFF9F81CCCF0F81
FFFF3FC19E6787C0FFFF9FF0F23F0F0647C3FEFF317A7BFE7F39CC67399C67FFF9FE63
39E7338CFFFF9E679CCFFFF9F319E79CCE339E7FFF9E6798CCF398FFFFF3FCF3199E73
9CFEFF179F3CCCCE673CFFFF3FE79E67339E7FFF9FE6719E679E3399FEFF31797BFE07
33FCF333CCFFFFF81CF339E6799E7FFF9E6799E7FFF9F33CE799E6799FFFFF80FF99FF
F33CFFFFF3FFF33FFE67FCFEFF179FFCCCCCF33FFFFF81E79E66799FFFFF81CF33CCF3
9E7F3CFEFF317A7BFE7F33FCF3300CFFFFF9FCF339E6799E7FFF9E679807FFF9F33CE7
99E679C0FFFF9FF019FE033CFFFFF3FE033FC067FCFEFF179F80CCCC0381FFFFFCE79E
6601C0FFFF9FC033CC039E7F00FEFF31797BFE7F33FCF333FCFFFFF9FCF339E6799E7F
FF9E6799FFFFF9F33CE799E679FE7FFF9FE799FCF33CFFFFF3FCF33F9E67FCFEFF179F
3CCCCCFFFCFFFFFCE79E667FFE7FFF9FCFF3CCFF9E7F3FFEFF317A7BFE7F33FCF333FC
FFFFF9FCF339E6799E7FFFCCE799FFFFF9F33CE799E679FE7FFF9FE799FCF33CFFFFF3
FCF33F9E67FCFEFF179F3CCCCCFFFCFFFFFCE79E667FFE7FFF9FCFF3CCFF9E7F3FFEFF
4C797BFE7F39CCF339CCFFFFF9FE6339E7339E7FFFE1F31CE7FFFCE719E79CCE799E7F
FF9FE719FCE398CFFFF9CCE33F9C739CF3FFFF9F38CCCE733CFFFF3CE7CC67399E7FFF
9FE733CE739E7F9CFEFF4C7A7BFE7F3C1CF33C1CFFFFF80F133C67879E7FFFF3F89E0F
FFFE0F23F19E1E79C0FFFF9FF099FE13C4CFFFFC1E133FC2783E33FFFF9F84CCCF0781
FFFF81F1E26783C0FFFF9FF073CF07C67FC1FEFF01797BE8FF003FF5FF00FCEBFF01FE
7FF2FF017A7BE8FF003FF5FF00FCEBFF01FE7FF2FF03797BFC01FAFF01F007FAFF0100
3FFEFF02F0013FFAFF01003FFEFF0499FFFFE007FAFF01F801FBFF03FE007FCCFAFF01
E007FAFF017A7BE8FF003FF5FF00C3EBFF00E1F1FF01797BB3FF017A7BB3FF017978B3
00017A78B300017978B300017A78B4FF02FC7978B4FF02FC7A78B4FF02FC7978B4FF03
FC7A78F0B500033C7978F7B5FF03BC7A78F7FBFF00FBFEFF03BFFFFFFDFEFF03DFFFFF
FDFEFF03EFFFFFFEFEFF00EFFEFF037FFFFFF7FEFF037FFFFFFBFEFF03BFFFFFFDFEFF
03DFFFFFFDFEFF03EFFFFFFEFEFF00EFFEFF057FFFBC7978F7FBFF49FB0FFFFFB9FFFF
FD87FFFFD03FFFFDE7FFFFE81FFFFEE7FFFFE81FFFFF61FFFFF61FFFFF73C3FFFB9F3F
FFB9E1FFFDCE07FFDCFCFFFDCE07FFEE7CFFFEE703FFEE787FFF73C3BC7A78F7FBFF49
FA67FFFFB1FFFFFD33FFFFDE7FFFFDC7FFFFE9FFFFFECFFFFFEF9FFFFF4CFFFFF4CFFF
FF6399FFFB1E3FFFB1CCFFFD8FCFFFD8F8FFFD8E7FFFEC79FFFEC7F3FFEC733FFF6399
BC7978F7FBFF49FA67FFFFB9FFFFFDF3FFFFDCFFFFFDA7FFFFE83FFFFE9FFFFFEF3FFF
FF4CFFFFF4CFFFFF7399FFFB9F3FFFB9FCFFFDCF9FFFDCF4FFFDCE0FFFEE73FFFEE7E7
FFEE733FFF7399BC7A78F7FBFF49FA67EFFFB9FF7FFDE7F7FFD87F7FFD67FBFFEF9FBF
FE83FBFFEF3FDFFF61FDFFF60FDFFF7398FFFB9F2FFFB9F8FFFDCF07FFDCEC7FFDCFE7
FFEE703FFEE7E3FFEE783FFF73C1BC7978F7FBFF49FA67EFFFB9FF7FFDCFF7FFDF3F7F
FD03FBFFEF9FBFFE99FBFFEE7FDFFF4CFDFFF7CFDFFF7398FFFB9F2FFFB9F2FFFDCFE7
FFDCE07FFDCFE7FFEE733FFEE7CBFFEE733FFF73F9BC7A78F7FBFF49FA67EFFFB9FF7F
FD9FF7FFD33F7FFDE7FBFFE99FBFFE99FBFFEE7FDFFF4CFDFFF79FDFFF7398FFFB9F2F
FFB9E6FFFDCE67FFDCFC7FFDCE67FFEE733FFEE7CBFFEE733FFF73F1BC7978F7FBFF49
FB0FEFFFB9FF7FFD03F7FFD87F7FFDE7FBFFEC3FBFFEC3FBFFEE7FDFFF61FDFFF63FDF
FF73C2FFFB9F2FFFB9C0FFFDCF07FFDCFC7FFDCF07FFEE783FFEE7CBFFEE783FFF73C5
BC7A78F7FBFF49FB6D6DB6B6DB5B6DADB6D6DB6B6DB5B6DADB6D6DB6B6DB5B6DADB6D6
DB6B6DB5B6DADB6D6DB6D6DB6B6DB5B6DADB6D6DB6B6DB5B6DADB6D6DB6B6DB5B6DADB
6D6DB6B6DB5B6DBC7978F0B500033C7A78F7FBFF00FBFEFF03BFFFFFFDFEFF03DFFFFF
FDFEFF03EFFFFFFEFEFF00EFFEFF037FFFFFF7FEFF037FFFFFFBFEFF03BFFFFFFBFEFF
03DFFFFFFDFEFF00EFF5FF03BC7978F7FBFF00F9FEFF031FFFFFF8FEFF038FFFFFF8FE
FF15C7FFFFFC7FFFFFC7FFFFFE3FFFFFE3FFFFFE3FFFFFF1FEFF031FFFFFF1FEFF038F
FFFFF8FEFF03C7FFFFFBF8FF03BC7A78F7FBFF00F8FEFF03BFFFFFFDFEFF03DFFFFFFD
FEFF03EFFFFFFEFEFF00EFFEFF037FFFFFF7FEFF037FFFFFFBFEFF03BFFFFFFBFEFF03
DFFFFFFDFEFF03EFFFFFF3F8FF03BC7978F7FBFF07F87FFFFFBFFFFFFDFEFF03DFFFFF
FDFEFF03EFFFFFFEFEFF00EFFEFF037FFFFFF7FEFF037FFFFFFBFEFF03BFFFFFFBFEFF
03DFFFFFFDFEFF03EFFFFFE3F8FF03BC7A78F7FBFF07F83FFFFFBFFFFFFDFEFF03DFFF
FFFDFEFF03EFFFFFFEFEFF00EFFEFF037FFFFFF7FEFF037FFFFFFBFEFF03BFFFFFFBFE
FF03DFFFFFFDFEFF03EFFFFFC3F8FF03BC7978F7BFFF0083F8FF03BC7A78F7FBFF01F8
3FC7FF00C3F8FF03BC7978F7FBFF01F87FC7FF00E3F8FF03BC7A78F7FBFF00F8C6FF00
F3F8FF03BC7978F7FBFF00F9C6FF00FBF8FF03BC7A78F7FBFF00FBBCFF03BC7978F0B5
00033C7A78F0B500033C7978F7B5FF04BC7A78F7FDFAFF00DFFDFF07FBFFFEFFFFBFFF
EFCAFF04BC7978F7FBFAFF00EFFDFF07F1FFFC7FFF1FFFC7FEFF0AFEFFDFFBFF7FEFFD
FFBFF7FEFF07FEFFDFFBFF7FEFFDE3FF06BC7A78F7F5FF83FEFF02FCFFD7FDFF07E0FF
F83FFE0FFF83FEFF0ADEC3DFFB877FEF0DFFB037FEFF07DEC0DFFB037FEC0DE3FF0CBC
7978F7EBFF99FFFFF9F8FFEBFDFF07FBFFFEFFFFBFFFEFFEFF0ACEFFDFFBFF7FEFFDFF
BFF7FEFF07CEFFDFFBFF7FEFFDE3FF0CBC7A78F7D57F99870619FCFF55FDFF07FBFFFE
FFFFBFFFEFFEFF0A06C0DFFB037FEC0DFFB037FEFF0706C0DFFBFF7FEFFDE3FF0CBC79
78F7EABF83F264CFFCFEABFDFF07FBFFFEFFFFBFFFEFFEFF0A06FFDFFBFF7FEFFDFFBF
F7FEFF0706FFDFFB037FEFFDE3FF0CBC7A78F7F5FF9F82640FFCFFD7FDFF07FBFFFEFF
FFBFFFEFFEFF0ACEC7DFFB877FEF8DFFB037FEFF07CEFFDFFBFF7FEFFDE3FF0CBC7978
F7FBFF9F3264F9FCFFEFFDFF07FBFFFEFFFFBFFFEFFEFF0ADEFFDFFBFF7FEFFDFFBFF7
FEFF07DEFFDFFBFF7FEC0DE3FF0CBC7A78F7FDFF9F830619FCFFDFFDFF07FBFFFEFFFF
BFFFD7FEFF0AFEC0DFFB037FEC0DFFB037FEFF07FEFFDFFBFF7FEFFDE3FF03BC7978F7
FDFF00E7F9FF07F8FFF8FFFE0FFFBBCAFF03BC7A78F7FDFF000FBAFF03BC7978F7B5FF
03BC7A78F0B500023C7978B4FF01FC7A
0078B4FF02FC7978B4FF02FC7A78B4FF02FC7978B4FF03FC7A78F0B70005F0003C7978
F7B8FF06FEF5553C7A78F7FBFF00F5C555FBFF06FEF28ABC7978F7FBFF00FBC6FF00FE
FBFF06FEF5453C7A78F7FBFF00F3BFFF06FEF2B2BC7978F7FBFF00FBC6FF00FEFBFF06
FEF5353C7A78F7FBFF00F3BFFF06FEF27ABC7978F7FBFF00FBC6FF00FEFBFF06FEF579
3C7A78F7FBFF00F3BFFF06FEF2FCBC7978F7FBFF00FBC6FF00FEFBFF06FEF4FD3C7A78
F7FBFF00F3BFFF06FEF1FEBC7978F7FBFF00FBC6FF00FEFBFF06FEF5FE3C7A78F7FBFF
00F3BFFF06FEF3FF3C7978F7FBFF00FBC6FF00FEFBFF06FEF0003C7A78F7FBFF00F3BF
FF06FEF2AABC7978F7BFFF00FEFBFF06FEF5553C7A78F7FBFF00F7BFFF06FEF2AABC79
78F7BFFF00FEFBFF06FEF5553C7A78F7FBFF00F7BFFF06FEF2AABC7978F7BFFF00FEFB
FF06FEF5553C7A78F7FBFF00F7BFFF06FEF2AABC7978F7BFFF00FEFBFF06FEF5553C7A
78F7FBFF00F7BFFF06FEF2AABC7978F7BFFF00FEFBFF06FEF5553C7A78F7FBFF00F7BF
FF06FEF2AABC7978F7BFFF00FEFBFF06FEF5553C7A78F7FBFF00F7BFFF06FEF2AABC79
78F7BFFF00FEFBFF06FEF5553C7A78F7FBFF00F7BFFF06FEF2AABC7978F7BFFF00FEFB
FF06FEF5553C7A78F7FBFF00F7BFFF04FEF2AABC79B10000FEB20000FEB20000FEB200
00FEB20000FEB20000FEB200003EE100011FC0FC000530000C0000FEDF0000BEE20001
3818FB000530000C0000C3DF00003EE20011261803C371B9E0FC7C00EC3C00C31F83B0
F0E30000FEE200112198066399CF318630019C6600C330C67198E30000FEE20011107F
8C330186180630030CC300FE00CC330CE30000FEE2001110180C33018618FE30030CFF
00C01FCC33FCE30000FEE2001008060C330186198630030CC000C030CC33E20000FEE2
001008010C330186198630030CC000C030CC33E20000FEE20011040106630186198E30
019C6300C031C6718CE30000FEE20011040E03C3018618F61C00EC3E00C01EC3B0F8E3
0000FEE200010204F3000030E20000FEE200010222F3000030E20000FEE200010131F4
00010660E20000FEE20002012880F5000103C0C10001C440D400E0FF01FE7F80FF80FF
89FF00F0DD00023C000FF7FF00C0F300F2FF00F7DDFF02BD554FF7FF00DFF4FF00FEF2
FF00F7DDFF02BCA2AFF7FF00DFF4FF00FEF2FF00F7DDFF02BD514FF7FF00DFF4FF02FE
F000F4FF00F7DDFF02BCACAFF7FF00DFF4FF02FEF2AAF4FF00F7DDFF02BD4D4FF7FF00
DFF4FF02FEF545FCFF02E7FE03FCFF04F73FFFF3E7FEFF02CF381FE7FF03BC9EAFCFF8
FF02DF87F9F6FF02FEF28AFCFF02E7FE79FCFF04F73FFFF3E7FEFF02CF33CFE7FF03BD
5E4FCFF8FF02DF33F1F6FF19FEF5351E47230F81C1FE79C0F89E1FFFF73FE1E0C191F0
FFCF33E6FF13BCBF2FCFF0391F13C3CF323FFFDE79F9FFE0E461FAFF19FEF2B2CE3318
673CE7FE799E731CCFFFF73FCCF3E78CE67FCF33E6FF13BD3F4FCFE798CE6399CF319F
FFDFF9F9FFCE630CFAFF1AFEF579E67F3CF3FCE7FE03FE6799E67FF73F9E73E79FCF3F
CF381FE7FF14BC7FAFCFFF99FCF33CCF33F9FFDFF3F9FF9FE79E7FFBFF1AFEF27AE67F
3CF380E7FE7FC06798067FF73F8073E79FC03FCF3FCFE7FF14BD7F8FCFF019FCF300CF
33F9FFDFE7F9FF9FE79E7FFBFF1AFEF4FDE67F3CF33CE7FE7F9E6799FFFFF73F9FF3E7
9FCFFFCF3FCFE7FF14BCFFCFCFE799FCF33FCF33FFFFDFCFF9FF9FE79E7FFBFF1AFEF2
FCE67F3CF33CE7FE7F9E6799FFFFF73F9FF3E79FCFFFCF3FCFE7FF14BC000FCFE799FC
F33FCF33FFFFDF9FF9FF9FE79E7FFBFF1AFEF5FECE7F3CF338E7FE7F9C731CE67FF73F
CE73E79FE73FE673CFE7FF14BCAAAFCFE719FE639CE633F9FFDF3FF9FFCE679E7FFBFF
1AFEF1FE1E7F3CF384F1FE7FC2789E0E7FF701E0F8F19FF07FF0F81FE7FF14BC000FC0
7099FF13C1F133F9FFDF01F9FFE0E79E7FFBFF01FEF3F6FF039FFFFFF7DDFF02BCFFCF
FDFF00F3FCFF00DFF4FF02FEF000F7FF039FFFFFF7DDFF02BCFFCFFDFF00F3FCFF00DF
F4FF02FEF555F8FF04F33FFFFFF7DDFF02BCFFCFFEFF01FE67FCFF00DFF4FF02FEF000
F8FF04F87FFFFFF7DDFF02BCFFCFFDFF000FFCFF00DFF4FF00FEF2FF00F7DDFF02BCFF
CFF7FF00DFF4FF00FEF2FF00F7DDFF02BCFFCFF7FF00C0F300F2FF00F7DDFF02BCFFCF
D9FF00F7DDFF02BCFFCFD9FF00F7DDFF02BCFFCFD9FF00F7DDFF02BCFFCFD9FF04F73C
E07FCFFDFF009FE6FF02BCFFCFD9FF04F73CCF3FCFFDFF009FE6FF02BC000FF7FF00C0
F300F2FF09F73CCFFFCFF87E27039FE6FF02BCAAAFF7FF00DFF4FF00FEF2FF09F73CCF
FFCFF33CC6799FE6FF02BD554FF7FF00DFF4FF00FEF2FF09F73CE07FCFE799E7F99FE6
FF02BCAAAFF7FF00DFF4FF02FEF000F4FF09F73CFF3FCFE019E7019FE6FF02BD554FF7
FF00DFF4FF02FEF555F4FF09F73CFF3FCFE7F9E6799FE6FF02BCAAAFF7FF00DFF4FF02
FEF28AF4FF09F73CFF3FCFE7F9E6799FE6FF07BD554FE79FFFFFCFFCFF04DF87E1FE01
F8FF02FEF545
F4FF09F799CF3FCFF39CC6719FE6FF07BCAAAFE79FFFFFCFFCFF04DF33CCFFF9F8FF02
FEF2B2F4FF09F7C3E07FC0783E27099FE6FF15BD554FE79C0E7983C3CF323FFFDE799E
7FF3FF839187FCFF02FEF535F4FF00F7FBFF00E7E4FF15BCAAAFE799E679CF99CF319F
FFDFF99E7FF3FF398C33FCFF02FEF27AF4FF00F7FBFF00E7E4FF15BD554FE01FE679CF
3CCF33F9FFDFF39E7FE7FE7F9E79FCFF02FEF579F4FF00F7FCFF01FCCFE4FF15BCAAAF
E79C0679CF00CF33F9FFDFE7CC7FE7FE7F9E79FCFF02FEF2FCF4FF00F7FCFF01FE1FE4
FF15BD554FE799E679CF3FCF33FFFFDFCFE27FCFFE7F9E79FCFF02FEF4FDF4FF00F7DD
FF15BCAAAFE799E679CF3FCF33FFFFDF9FFE7FCFFE7F9E79FCFF02FEF1FEF4FF00F7DD
FF15BD554FE799C731CF9CE633F9FFDF3FFCE7CFFF399E79FCFF02FEF5FEF4FF00F7DD
FF15BCAAAFE79C2789E3C1F133F9FFDF01E1E7CFFF839E79FCFF01FEF3F3FF00F7DDFF
02BD554FF7FF03DFFFFFF7F7FF02FEF000F4FF00F7DDFF02BCAAAFF7FF03DFFFFFEFF7
FF02FEF2AAF4FF00F7DDFF02BD554FF7FF00DFF4FF02FEF000F4FF07F700FFF3FCFFED
FCE4FF02BCAAAFF7FF00DFF4FF00FEF2FF07F7E7FFF3FCFFFFFCE4FF02BD554FF7FF00
DFF4FF00FEF2FF07F7E7E0723CF0F3C4E4FF02BCAAAFF7FF00C0F300F2FF07F7E7CF31
9CE67398E4FF02BD554FD9FF07F7E7FF33CCCF333CE4FF02BCAAAFD9FF07F7E7E033CC
CF333CE4FF02BD554FD9FF07F7E7CF33CCCF333CE4FF02BCAAAFD9FF07F7E7CF33CCCF
333CE4FF02BD554FD9FF07F7E7CE319CE67398E4FF02BCAAAFD9FF07F7E7E1323CF0F3
C4E4FF02BD554FD9FF00F7DDFF02BCAAAFD9FF00F7DDFF02BD554FD9FF00F7DDFF02BC
AAAFD9FF00F7DDFF02BD554FD9FF00F7DDFF02BCAAAFD9FF00F5DD55023D554FD9FF00
F0DD0002BCAAAFD9FF00F4DD00023D554FD9FF00F0F7000001F0000001FA0002BCAAAF
D9FF00F4F7000003F000010180FB00023D554FD9FF04F0C0000C18FE00061F8060060F
00C0FB000401E07807F8FD0000C0FB0002BCAAAFD9FF04F4C0000C18FE000630C0E006
1981C0FB00040330CC0018FD0000C0FB00023D554FD9FF1EF0C01E1F3E6E0F0030C1E0
0C30C0C003E373C00C18061986003001F1B9E060FB0002BCAAAFD9FF1EF4C0330C1873
198030C3600C00C0C006339E60063000198600300319CF3060FB00023D554FD9FF1EF0
C0618C186030C03FC6600C0180C00C030C30036000318600600601861860FB0002BCAA
AFD9FF1EF4C07F8C18603FC030CC600C0300C00C030C3001C00060CE00600601861860
FB00023D554FD9FF1EF0C0600C1860300030D8600C0600C00C030C3001C000C07600C0
0601861860FB0002BCAAAFD9FF1EF4C0600C1860300030DFF00C0C00C00C030C300360
01800600C00601861860FB00023D554FD9FF1EF0C0318C186018C030C060061800C006
330C30063003000C60C003198618C0FB0002BCAAAFD9FF1EF4FE1F070E600F8030C060
061FC0C003E30C300C1803F87860C001F18618C0FB00023D554FD9FF00F0F7000003F5
000020FD00010180FB0002BCAAAFD9FF00F4F7000001F5000040FD000001FA00023D55
4FD9FF00F0DD0002BCAAAFD9FF00F4DD00023D554FD9FF00F2DDAA02BCAAAFD9FF00F7
DDFF02BD554FD9FF00F7DDFF02BCAAAFD9FF00F7DDFF02BD554FD9FF00F7F7FF00FEEE
FF00FBFCFF02BCAAAFD9FF00F7F7FF00FCEEFF00F9FCFF02BD554FD9FF04F73FFFF3E7
FEFF07C0700FF9FCFC3FF0FAFF04F87807E01FFEFF00FCFCFF02BCAAAFD9FF04F73FFF
F3E7FEFF08CF33FFF9F8F99FE67FFBFF04F339FFFF9FFEFF00FCFCFF02BD554FD9FF20
F73FE1E0C191F0FFCF33FFF3FCF3CFCF3FF07230FFCF9FE799FFFF3FF839187E7FFDFF
02BC000FD9FF20F73FCCF3E78CE67FCF303FF3FCF99FFF3FE731867FE73FFF981FFF3F
F398C33E7FFDFF02BCFFCFD9FF20F73F9E73E79FCF3FC07F9FF3FCFC3FFE7FCFF3CF3F
F27FFF3FCFFE7FE7F9E79E7FFDFF02BC7FAFD9FF20F73F8073E79FC03FCF3FCFF3FCF9
9FFCFFCFF3CF3FF8FFFE7FE7FE7FE7F9E79E7FFDFF02BD7F8FD9FF20F73F9FF3E79FCF
FFCF3FCFF3FCF3CFF9FFCFF3CF3FF8FFFCFFE7FCFFE7F9E79E7FFDFF02BCBF2FD9FF20
F73F9FF3E79FCFFFCF3FCFF3FCF3CFF3FFCFF3CF3FF27FF9FFE7FCFFE7F9E79E7FFDFF
02BD3F4FD9FF1FF73FCE73E79FE73FCF339FF9FCF99CE7FFE733CF3FE73FF3F9CE7CFF
F399E79CFCFF02BC9EAFD9FF1FF701E0F8F19FF07FC0783FF9FCFC3CE03FF073CF3FCF
9FF01C1E7CFFF839E79CFCFF02BD5E4FD9FF00F7F7FF03FCFFFFFEF6FF007FFDFF00F9
FCFF02BCACAFD9FF00F7F7FF03FEFFFFFDF7FF00FEFCFF00FBFCFF02BD4D4FD9FF00F7
DDFF02BCA2AFD9FF00F7DDFF02BD514FD9FF00F7DDFF02BCAAAFD9FF00F0DD00023C00
0F80FF80FF80FF80FF80FFD4FF00BFFAFF00FDF4FF00BFFAFF00DFD0FF003FFAFF00FC
F4FF003FFAFF00CFE6FF063FFFFF9FFFCF3FFDFF0BC7FC07FFFFF3FFFFF9CFFE73FEFF
00E7FEFF07FE7FFE3FE73FFF33FCFF01FE73FAFF00E7E3FF029FFFCFFCFF0539FCF3FF
FFF3FEFF02CFFE73FEFF00E7FEFF07FE7FF9CFE73FFF3FFCFF01FE73FAFF00E7E7FF35
473C3C8F0703833C3C8FFFFEC6FCF3C3C8E0C8F03983FCF23E073CC1E1E7991F3FF7F7
E60E0733C3C8F23F0FFCF381C8F89E1E7991F3E7FF3533399C679E79CF399C67FFFD83
7CF399C673C66799CFFCF19CF33CE7CCE798CF3FEFFBE73CF33399C6719E67FCF33CC6
731CCE798CF3E7FF357F33CCF39FF9CF33CCF33FFD017C073CCFF3CFFF99CFFCF3CFF3
3CE79E6799FF3FEFFBE73FF3333CCF33CCF3FCF3FCCFE799E6799FF3E7FF357F300CF3
9F01CF33CCF33FFD017CFF3CCFF3CFF019CFFCF3CE033CE7806799FF3FEFFBE73E0333
00CF33CC03FCF380CFE79806799FF3E7FF357F33FCF39E79CF33CCF3FFFD837CFF3CCF
F3CFE799CFFCF3CCF33CE79FE799FF3FEFFBE73CF3333FCF33CCFFFCF33CCFE799FE79
9FF3E7FF357F33FCF39E79CF33CCF3FFFEC6FCFF3CCFF3CFE799CFFCF3CCF33CE79FE7
99FF3FF7F7E73CF3333FCF33CCFFFCF33CCFE799FE799FF3E7FF357F39CCF39E71CF39
9CF33FFF39FCFF99CFF3CFE719CFFE73CCE398E7CE7319FE7FF9CFE73CE3339CCF33CE
73FE7338CFF31CE7319FE7E7FF357F3C1CF3C709E33C3CF33FFFC7FCFFC3CFF8CFF099
E3FE73CE13C4F1E0F899FE7FFE3FE78E1333C1CF33CF07FE7384CFF89E0F899FE7D0FF
003FFAFF00FCF4FF003FFEFF009FFEFF00CFD0FF00BFFAFF00FDF4FF00BFFEFF009FFE
FF00DFB7FF01F33FB3FF01F87F80FF80FFA5FF
80FFB9FFF3550057B2FF00FBC0FF007FA4FF04FBEAAAAAAFC4FF007FF3FF00DFB3FF04
FBFFBEAAAFECFF003FF9FF111FFF3FFF8FFE1FFFC7FC03FFE3FFF3FFFD5FF7FF06FDFF
FF7F5FF55FF6FF03DF7FFFDFECFF003FFAFF11FCE7FE3FFE73FCCFFF39FFE7FF9CFFE3
FFFBF6FF05FBFFFFFEEFEFF6FF04FBFEFFFFAFEDFF300F3C3C8F23F0F81FFFFB1BFF3F
FDFDF9E7FEFEFFCFFF7F7FC3FFFDFF5777F57D5F5F775FD7DDF57FFF7DF7F7FFFD7D5D
7FFAFF02DFDF7FECFF3067399C6719E673CFFFF60DFF3FFBFEFFE7FDFF7F9FFEFFBF93
FFFBFEFBBBEFBBEEEFBAEFBBEEFBFFFFFBEFEAFFFBBAEBBFFBFF04FBFFEFBFEFEDFF30
F333CCF33CCF33FCFFF405FF3FFBFEFFCFFDFF7FCFFEFFBF33FFFD5DFF7DFF77FDF77D
F77DDF7DF7FF7DF7FF7FF7FDF7DFFAFF03DDFFFF7FEDFF30F333CCF33CC0381CFFF405
FF3FFBFEFF9FFDFF7FE7FEFFBE73FFFBFEAFBEEABBFEABBEFBAAEFBBEFFFFBEFFFBFEF
FBEFBFFBFF04FBFBFFFEEFEDFF30F333CCF33CCFFFCFFFF60DFF3FFBFEFF3FFDFF7FF3
FEFFBCF3FFFDFFF77DDF77FDFF7DF77FDF7DFFFF7DF7FFDFF7FDF7DFFAFF02DFF7DFEC
FF30F333CCF33CCFFFCFFFFB1BFF3FFDFDFE7FFEFEFFF3FF7F7C01FFFBFFFBBEEFBBFE
FFBEFBBFEFBBFFFFFBEFFFBFEFFBEFBFFBFF04FBFFFBEFEFEDFF3067399CF33CE733CC
FFFCE7FF3FFE73FCFFFF39FCE7FF9CFFF3FFFDFDF75DDF7DDF777DF7DDDF7DF7FF7DDF
777FF7DDF7DFFAFF02D7FFFDECFF300F3C3CF33CF0781CFFFF1FFF3FFF8FFC07FFC7FE
0FFFE3FFF3FFFAAEAFABEBBEBFAFBEFBEBEFBEEFFFFEBEFAFFFABBEFBFFBFF04FBEFFF
FBEFD0FF007FF6FF027FFF7FF5FF02D555F7CFFF00BFF5FF00FEF5FF00FBFEFF00EFD0
FF007FF6FF007FF3FF03D555555FD0FF00BFE8FF00FBC0FF007FB2FFF3AA00AB80FF80
FFE0FFF3AA00ABB2FF00FDC0FF00BFA4FF04FDF5555557C4FF00BFF3FF00EFB3FF04FD
FFDF5557D6FF04FABFFFFFBFFBFF08FAAFFFFFBEFFFFBFAFF4FF03EFBFFFEFD6FF00F7
F6FF037FFFFFFDFEFF0077F5FF04FDFF7FFFD7D6FF18FBFBBFABBEAFABEBEFBBBFFEFE
AFABBABFFFBEFBFEAEBEAEBFF9FF02EFEFBFD5FF18F7FDDF7DDDF77DDDF7DDDFFF7D77
7DDDFFFFFDF7FD75DD75DFFAFF04FDFFF7DFF7D6FF18FABBEFFBBBFEFFBEEFBBFFFEFE
FFFBBEFBFFBEFBFEFBEEFBEFF9FF03EEFFFFBFD6FF18F7FDF755DD5F57D577DDFFFF7D
FF55DDF7FFFDF7FDF7DDF7DFFAFF04FDFDFFFF77D6FF0AFBFBEEFBBFEFFBBFEFBBFFFE
FE0AFBBEFFFFBEFBFEFBEEFBEFF9FF02EFFBEFD5FF18F7FDF77DDFF7FDDFF7DDFFFF7D
FF7DDDFFFFFDF7FDF7DDF7DFFAFF04FDFFFDF7F7D6FF0AFBFAEEFBBBEEFBEEFBBBFFFE
FE0AFBBEFBFFBEEFFEFBEEFBEFF9FF02EBFFFED5FF18F55D5F5DDD5F57F5FDDDFFFF7D
FF5DDF77FFFF5FFDF7DDF7DFFAFF04FDF7FFFDF7D5FF00FBF1FF00BFF3FF02EAAAFBD4
FF00FDE3FF00FDFEFF00F7D5FF00FBF1FF00BFF3FF03EAAAAAAFD5FF00FDE3FF00FDC0
FF00BFB2FF00D5F35580FF80FF80FF80FFA2FF00FDF7FF00F9C3FF0281CE7FFEFF00FB
FEFF08FC0FFFFFE73FFFF9E0FDFF009FC9FF023CCE7FFAFF01FCE7FEFF043FFFF3CE7F
FEFF009FD0FF24C0E47C4F0F81FF3CCC1E1E4723F0FC3E07FCF323E1E60F0FF39FF039
E78391F87FFFC7FCF9FDFF061FFC1FFF9FFF80FCFF05F9FFFF80673FFDFF02E3FE7CFD
FF048FFE0FFFCFFCFF249E63398E673CFF3CCE7CCE3319E6799CF3FCF319CCE73E67E7
9FE799E7398CF33FFF39FC79FEFF03FCE7F9CFFEFF019E7FFDFF05F9FFFFF3FF3FFDFF
029CFE3CFEFF03FE73FCE7FAFF4AFE67F3CCF33FFF00CE79E67F3CCF33CCFFFCF33F9E
673CF3E79C7F99E67F9E6799FEC6FC39E1E47FFBFBF3E6799FFF9E703E2787FF89E1FF
F3E60C8F87FFFF637E1CF0F23FFDFDF9F33CCFFCFF4AC067F3CC0381FF3CCE78067F3C
C0300E07FCF33F9E673C03CF9E7019E67F9E6019FD837C99CCE33FF7FDF3E6799FFF9E
679CC733FF31CCFFF3E73C6733FFFEC1BE4CE6719FFBFEF9F33CCFFCFF4A9E67F3CCFF
FCFF3CCE79FE7F3CCFF3FFF3FCF33F9E673CFFCF9E6799E67F9E67FFFD017CC99E679F
F7FDF3E6799FFF80FF99E679FE799E7FF3E73CFE799FFE80BE64CF33CFFBFEF9F33CCF
FCFF4A9E67F3CCFFFCFF3CCE79FE7F3CCFF3FFF3FCF33F9E673CFF9F9E6799E67F9E67
FFFD017CE19E679FF7FDF3E6799FFF9FF019E601FE79807FF3E73CFE019FFE80BE70CF
33CFFBFEF9F33CCFFCFF4A9C67F98E733CFF3CCE7CE67F3CE739CCF3FCE73FCCE73E73
9FCE671CC7399E7399FD837CF19E679FF7FDF3E6799FFF9FE799E67FFE799FFFF3E73C
FE7FFFFEC1BE78CF33CFFBFEF9F33CCFFCFF4AC267FC4F0781FF3CCF1E0E7F3CF07C1E
07FC0F3FE1E78F073FE0F09E27839E7839FEC6FCF99E679FFBFBF3E6799FFF9FE799E6
7FFE799FFFF3E73CFE7FFFFF637E7CCF33CFFDFDF9F33CCFF9FF00CFEDFF003FF8FF28
39FCF9CCE79FFCE7F9CF319FFF9FE71CC739FF31CE7FF3E73CFF399FFF9CFE7CE673CF
FE73FCE798CFF9FF00CFE3FF28C7FCF9E1E79FFF1FFC1F899FFF9FF09E2783FF89E0FF
F3E78CFF839FFFE3FE7CF0F3CFFF8FFE0FC4CFFAFF01F99FD3FF00E7E2FF01FC3FD3FF
00E7B3FF01FCCFB3FF01FE1F80FF80FF80FF80FFF8FF00F8F300001FF5FF00C0F300DC
FF00FBF3FF00DFF5FF00DFF4FF00FEDCFF00FBF3FF00DFF5FF00DFF4FF00FEDCFF00FB
F3FF00DEFE00007FF9FF00DFF4FF04FEF0000003E0FF00FBF3FF00DEFE55007FF9FF00
DFF4FF04FEF5555553E0FF00FBF3FF04DEA8A0007FF9FF00DFF4FF04FEF28A8003E8FF
00C1FDFF043FFFFFFBF0F4FF0EDE5157FE7FFE07FFFFF39FFFFFDF87F5FF04FEF5453F
F3E8FF009CFDFF053FFFFFFBE67FF5FF06DEA6ABFC7FFE73FEFF049FFFFFDF33F5FF04
FEF2B29FEBF0FF15C0E47C4F0F81FFFF3FE073CF0723F0FFFBCF3FF07230F8FF12DE56
53FD7FFE7991F0F30787FFDE79FF839187F9FF04FEF5355FE3F0FF169E63398E673CFF
FF3FCF33CE7319E67FFBFF3FE731867FF9FF12DEAF29FA7FFE798CE6739F33FFDFF9FF
398C33F9FF04FEF27AAFCBF0FF16FE67F3CCF33FCFFF38FF33CCFF3CCF3FFBFE7FCFF3
CF3FF9FF12DE4F55F97FFE799FCF339E79FFDFF3FE7F9E79F9FF04FEF5794FD3F0FF16
C067F3CC0381CFFF3CE033CCFF3CC03FFBFCFFCFF3CF3FF9FF12DE9FAAF27FFE799FCF
339E01FFDFE7FE7F9E79F9FF04FEF2FCA7ABF0FF169E67F3CCFFFCFFFF3CCF33CCFF3C
CFFFFBF9FFCFF3CF3FF9FF12DE5F94F57FFE799FCF339E7FFFDFCFFE7F9E79F9FF04FE
F4FD5793F0FF169E67F3CCFFFCFFFF3CCF33CCFF3CCFFFFBF3FFCFF3CF3FF9FF12DEBF
CA6A7FFE799FCF339E7FFFDF9FFE7F9E79F9FF04FEF1FEAB2BF0FF169C67F98E733CCF
FF9CCE398E733CE73FFBE7FFE733CF3FF9FF12DE3FD5657FFE739FE6739F39FFDF3FFF
399E79F9FF04FEF5FE5353F0FF16C267FC4F0781CFFFC1E13C4F073CF07FFBE03FF073
CF3FF9FF12DE7FEA8A7FFE079FF0F3C783FFDF01FF839E79F9FF04FEF3FF28ABEDFF00
CFF5FF00FBF3FF04DE0005157FF9FF00DFF4FF04FEF0005453F0FF
FEFF00CFF5FF00FBF3FF00DEFEAA007FF9FF00DFF4FF04FEF2AAAAABEEFF01F99FF5FF
00FBF3FF00DEFE00007FF9FF00DFF4FF04FEF0000003EEFF01FC3FF5FF00FBF3FF00DF
F5FF00DFF4FF00FEDCFF00FBF3FF00DFF5FF00DFF4FF00FEDCFF00F8F300001FF5FF00
C0F30080FF80FF80FFCFFF00F8F300001FF5FF00C0F300DCFF00FBF3FF00DFF5FF00DF
F4FF00FEDCFF00FBF3FF00DFF5FF00DFF4FF00FEDCFF00FBF3FF00DEFE00007FF9FF00
DFF4FF04FEF0000003E0FF00FBF3FF00DEFEAA007FF9FF00DFF4FF04FEF2AAAAABE0FF
00FBF3FF04DE5150007FF9FF00DFF4FF04FEF5450003E6FF07FE79FFFFFCFFFBF0F4FF
04DEA8A7FE7FFEFF01E03FFEFF01DF87F5FF04FEF28ABFF3E6FF08FE79FFFFFCFFFBE6
7FF5FF04DE5653FD7FFEFF01E79FFEFF01DF33F5FF04FEF5355FE3E6FF0BFE79C0E798
3FFBCF3FF07230F8FF04DEA6ABFC7FFEFF0AE79C0F03FFDE79FF839187F9FF04FEF2B2
9FEBE6FF0CFE799E679CFFFBFF3FE731867FF9FF04DE4F55F97FFEFF0AE799E679FFDF
F9FF398C33F9FF04FEF5794FD3E6FF0CFE01FE679CFFFBFE7FCFF3CF3FF9FF04DEAF29
FA7FFEFF0AE03FE67FFFDFF3FE7F9E79F9FF04FEF27AAFCBE6FF0CFE79C0679CFFFBFC
FFCFF3CF3FF9FF04DE5F94F57FFEFF0AE79C0703FFDFE7FE7F9E79F9FF04FEF4FD5793
E6FF0CFE799E679CFFFBF9FFCFF3CF3FF9FF04DE9FAAF27FFEFF0AE799E7F9FFDFCFFE
7F9E79F9FF04FEF2FCA7ABE6FF0CFE799E679CFFFBF3FFCFF3CF3FF9FF04DE3FD5657F
FEFF0AE799E7F9FFDF9FFE7F9E79F9FF04FEF5FE5353E6FF0CFE799C731CFFFBE7FFE7
33CF3FF9FF04DEBFCA6A7FFEFF0AE799C679FFDF3FFF399E79F9FF04FEF1FEAB2BE6FF
0CFE79C2789E3FFBE03FF073CF3FF9FF04DE7FE5157FFEFF0AE03C2703FFDF01FF839E
79F9FF04FEF3FF5453E0FF00FBF3FF04DE000A8A7FF9FF00DFF4FF04FEF00028ABE0FF
00FBF3FF00DEFE55007FF9FF00DFF4FF04FEF5555553E0FF00FBF3FF00DEFE00007FF9
FF00DFF4FF04FEF0000003E0FF00FBF3FF00DFF5FF00DFF4FF00FEDCFF00FBF3FF00DF
F5FF00DFF4FF00FEDCFF00F8F300001FF5FF00C0F30080FF80FF80FF80FF80FFA1FFB1
0080FF80FF80FF90FF00F8FC00003FB8FF00FBFCFF00BFB8FF00FBFCFF00BFB8FF01FB
E0FE00010FBFEBFF00C0F9000007D8FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF01
FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF
01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8
FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF06FBEFF079E7EFBFEBFF01DFC0FDFF03
9FFFFFF7D8FF06FBEFE739CFEFBFEBFF02DF9E7FFEFF039FFFFFF7D8FF06FBEFCF999F
EFBFEBFF09DF9E64791E799E1E47F7D8FF06FBEFCF993FEFBFEBFF09DF9E6338CE799C
CE33F7D8FF06FBEFCF987FEFBFEBFF09DF806799E67999E67FF7D8FF06FBEFCF987FEF
BFEBFF09DF9E6799E67998067FF7D8FF06FBEFCF993FEFBFEBFF09DF9E6799E67999FE
7FF7D8FF06FBEFCF999FEFBFEBFF09DF9E6799E67999FE7FF7D8FF06FBEFE739CFEFBF
EBFF09DF9E6799E7319CE67FF7D8FF06FBEFF079E7EFBFEBFF09DF9E6799E7899E0E7F
F7D8FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF01FBEFFEFF01EFBFEBFF00DFF9FF
00F7D8FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF01FBEFFEFF01EFBFEBFF00DFF9
FF00F7D8FF01FBEFFEFF01EFBFEBFF00DFF9FF00F7D8FF01FBEFFEFF01EFBFEBFF00DF
F9FF00F7D8FF01FBE0FE00010FBFEBFF00C0F9000007D8FF00FBFCFF00BFB8FF00FBFC
FF00BFB8FF00F8FC00003F80FF80FF80FFBFFFB100B155B1AAB155B1AAB155B1AAB155
B1AAB155B1AAB155B1AA
%%Trailer
end

%%EndDocument
FMENDEPSF
220.5 326.71 480.25 522.46 R
0.5 H
0 Z
N
370 154.58 520 313.33 R
N
0 0 0 1 0 0 0 K
0 0 0 144 144 144 144 375 164.32 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 144 144
%%Creator: dump.geo
%%DocumentFonts: 
%%Title: 
%%EndComments

64 dict begin	% It is recommended that we have our own dictionary...
% Screen pixels are run-length encoded exactly as received from the kernel,
% decoded by the procedure readrlestring, which returns a single packet of
% pixels and translated to whatever format is appropriate for the type of
% image being displayed (4-color, 4-bit greyscale, etc.) by some other
% procedure that comes after readrlestring.

/rlestr1 1 string def % single-element string for reading initial packet byte
/rlestr 129 string def
/readrlestring {
  currentfile rlestr1 readhexstring pop  0 get
  dup 127 le {
    currentfile rlestr 0
    4 3 roll 		% stack now (file rlestr 0 #)
    1 add 		% # is string index and we need length
    getinterval
    readhexstring
    pop			% discard eof status
  } {
    257 exch sub 	% figure number of repetitions
    dup			% save for after the loop
    currentfile rlestr1 readhexstring	% read the byte to duplicate
    pop			% discard eof status
    0 get		% fetch the byte from rlestr1
    exch 		% bring count to the top
    0 exch		% push initial loop value under count
    1 exch		% push increment value under count
    1 sub		% set terminate value. count is 1-origin, though
    { rlestr exch 2 index put } % given index, fetch byte and store in rlestr
    for
    pop 		% discard replicated byte. original count still there
    rlestr exch 0 exch getinterval
 } ifelse
} bind def
%%EndProlog
%%Page: 1 1
2.0 72 mul 2.0 72 mul scale
107 107 1
[ 107 0 0 -107 0 107 ]
{ readrlestring }
image
03F5495FBFFEFF00E3FDFF05BDE000949FBFFEFF00F7FDFF05BDE8FD495FBFF9FF05BD
E3FC949FBFF9FF05BDEBFD495FBFF9FF08BDE3FC949FBC1FFFE7FCFF06BDEBFD495FBC
CFFAFF4BBDE3FC949FBCCC3326199820FFFFBDEBFD495FBC199324C993E67FFFBDE0FC
9499BC381324C998667FFFBDEAFD49587C99F864C99F26493FBDE5FC949C1CCC3CE61C
1060C93FBDEAFD495C07FCFF08E7FFFFBDE5FC949E01FCFF09E7FFFFBDEAFD495E007F
FAFF06BDE5FC949F007FFAFF06BDEAFD495F0380FA00053DE5FC949F81F9FF05FDEAFD
495F88F9FF06FDE5FC949FCC40FA00063DEAFD495FCE3FFAFF09BDE5FC949FBF1FFFFE
3FFDFF09BDEAFD495FBF9FFFFC0FFDFF09BDE5FC949FBFFFFFFA07FDFF09BDEAFD495F
BFFFFFFB83FDFF09BDE5FC949FBFFFFFF7E3FDFF09BDE0FD495FBFFFFFF7FCFDFF0ABD
E3FC949FBFFFFFEFFF3FFEFF0ABDE3FD495FBFFFFFEFFFCFFEFF0ABDE3FC949FBFFFFF
DFFFF3FEFF0ABDEBFD495FBFFFFFDE7FFDFEFF0ABDE3FC949FBFFFFFCDBFFDFEFF0ABD
EBFD495FBFFFFFE03FFBFEFF0ABDE0FC949FBFFFFFC079FBFEFF0ABDE8FD495FBFFFFF
8036F7FEFF0ABDE0FC949FBFFFFFBFC6F3FEFF0ABDE8FD495FBFFFFFB92DEBFEFF0ABD
E0FC949FBFFFFFBFFCEBFEFF0ABDE8FD495FBFFFFFBA921BFEFF0ABDE0FC949FBFFFFF
BFFFFBFEFF0ABDE8FD495FBFFFFFB926FBFEFF0ABDE0FC949FBFFFFFBFFFFBFEFF0ABD
E8FD495FBFFFFFBFFFFBFEFF0ABDE0FC949FBFFFFFBFFFFBFEFF07BDE8FD495FBFFFC1
FBFF07BDE0FC949FBFFFCFFBFF4BBDE8FD495FBFFFCF3320E199FFFFBDE0FC949FBFFF
C333267C99FFFFBDE8FD495FBFFFCF33266099FFFFBDE0FC949FBFFFCF33264C99FFFF
BDE8FD495FBFFFC1806660C1FFFFBDE3FC949FBFFCFF08F9FFFFBDEBFD495FBFFCFF08
C3FFFFBDE3FC949F80F900043DEBFD495FF8FF04FDE3FC949FF8FF05FDEBFD495F80F9
00053DE0FC949FBFF9FF08BDEAFD495FBFFFFFF1FCFF08BDE5FC949FBFFFFFEEFCFF09
BDEAFD495FBFFFFFDF7FFDFF7FBDE5FC949FBFFFFFBFBFFC1FFFFFBDEAFD495FBFFFFF
79DF019FFFFFBDE5FC949FBFFFFFF6E8FD9FFFFFBDEAFD495FBFFFFFEF67FD9FFFFFBD
E5FC949FBFFFFFDF9FFD9FFFFFBDEAFD495FBFFFFFBBBC3D9FFFFFBDE5FC949FBFFFFF
7773DD9FFFFFBDEAFD495FBFFFFFDECB1D9FFFFFBDE5FC949FBFFFFFADBDBA1FFFFFBD
EA16FD495FBFFFFF4E7C779FFFFFBDE5FC949FBFFFFF1BFBCFFEFF0ABDEAFD495FBFFF
FFF5E837FEFF0ABDE5FC949FBFFFFFE9DFBBFEFF0ABDE0FD495FBFFFFF637FDDFEFF0A
BDE3FC949FBFFFFFBEBDEEFEFF0ABDE3FD495FBFFFFFDD3BF6FEFF0ABDE3FC949FBFFF
FFEC6FEEFEFF0ABDEBFD495FBFFFFFF7D7DDFEFF0ABDE3FC949FBFFFFFFBA7BBFEFF0A
BDEBFD495FBFFFFFFD8F77FEFF05BDE0FC949FBFF9FF07BDE8FD495FBCFF3FFEFF0AFE
7FFFBDE0FC949FBCFF3FFEFF6AFE7FFFBDE8FD495FBCC33304CC333E7FFFBDE0FC949F
BC992664CF933E7FFFBDE8FD495FBC9F0E64CC133E7FFFBDE0FC949FBC992664C9933E
493FBDE8FD495FBCC333060C183E493FBDE0FC949FBFFFFFE7FFFF3FFFFFBDE8FD495F
BFFFFFE7FFF87FFFFFBDE0FC949FBFF9FF05BDE8FD495FBFF9FF05BDE0FC949F80F900
043DE8FD495FF8FF04FDE0FC949FF8FF04FDE8FD495FF8AA04BDE0FC949FF8FF07FDE8
FD495FBFFFFFFEAAFEFF04BDE3FC949FFEFF0B7FFFFD7FFFFFFDEBFD495FBFFDFF08FE
BFFFFFBDE3FC949FFEFF0B7FFFFD5FFFFFFDEBFD495FBFFDFF08FEBFFFFFBDE3FC949F
FEFF187FFFFD5FFFFFFDEBFD495FBFFFFFBFFFFEBFFFFFBDE0FC949FFEFF15FD575F5F
FFFFFDEAFD495FBFFFFFBBEBBEBFFFFFBDE5
%%Trailer
end

%%EndDocument
FMENDEPSF
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "338" 4
%%Page: "339" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Preparing for ResEdit) 414.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(339) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(@start APPSCMONIKERRESOURCE, data) 216 641.33 T
(/* Application moniker: */) 216 627.33 T
(@visMoniker MyAppSCMoniker = { /* \311 */}) 216 613.33 T
(@end APPSCMONIKERRESOURCE) 216 599.33 T
1 F
(At \336rst it might seem surprising that bitmaps should be localized, since) 180 578.33 T
(pictures are supposed to be a sort of universal language. However) 180 565.33 T
(, this) 482.8 565.33 T
(attitude may seem less strange when you try to distribute software to a) 180 552.33 T
(culture that \336nds pictures of yellow arrows offensive.) 180 539.33 T
(Y) 180 519.33 T
(our application could keep its strings in a resource in the style illustrated) 185.93 519.33 T
(in Code Display) 180 506.33 T
(8-) 255.94 506.33 T
(1.) 264.83 506.33 T
81 473.98 531 486 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 473.98 531 486 R
7 X
0 0 0 1 0 0 0 K
V
76.5 481.23 617.5 484.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 467.31 T
(8-) 147.13 467.31 T
(1 Storing Strings in Localizable Resources) 156.02 467.31 T
5 9 Q
(@start ErrorStrings, data;) 81 452.98 T
(@chunk char NoMonkeyError[] =) 81 434.98 T
(\322FTPOOMM failed: No monkey present. Acquire a monkey and try again.\323;) 125 423.98 T
(@chunk char NoPeanutError[] =) 81 405.98 T
(\322FTPOOMM failed: No peanuts present. Please insert peanuts and try again.\323;) 125 394.98 T
(@end ErrorStrings;) 81 376.98 T
81 352.95 531 364.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 352.95 531 364.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 360.2 617.5 363.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.43 (When working with assembly language, this means that any object stored in) 180 335.29 P
(a) 180 322.29 T
3 F
(code) 188.34 322.29 T
1 F
( resource,) 212.42 322.29 T
3 F
(idata) 259.82 322.29 T
1 F
(, or) 286.67 322.29 T
3 F
(udata) 304.45 322.29 T
1 F
( will be passed over in the search for) 334.45 322.29 T
(localizable resources, and thus will not be localizable.) 180 309.29 T
(When you know you are storing your strings such that they are localizable,) 180 289.29 T
-0.62 (you can provide information which will be visible to the translator when they) 180 276.29 P
-0.03 (use the) 180 263.29 P
3 F
-0.03 (ResEdit) 216.23 263.29 P
1 F
-0.03 ( tool. Use the) 257.34 263.29 P
3 F
-0.03 (@localize) 320.93 263.29 P
1 F
-0.03 ( keyword \050) 368.03 263.29 P
3 F
-0.03 (localize) 416.11 263.29 P
1 F
-0.03 ( in assembly\051 to) 455.74 263.29 P
(set up this help text. The) 180 250.29 T
3 F
(@localize) 298.54 250.29 T
1 F
( directive should directly follow the) 345.64 250.29 T
(chunk it applies to.) 180 237.29 T
(Remember the) 180 217.29 T
3 F
(@localize) 250.56 217.29 T
1 F
( syntax:) 297.66 217.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "339" 5
%%Page: "340" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(340) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
( @localize { <string> <min>-<max> };) 216 641.33 T
( @localize { <string> <length> };) 216 627.33 T
( @localize { <string> };) 216 613.33 T
( @localize <string>;) 216 599.33 T
( @localize not;) 216 585.33 T
81 551.98 531 564 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 551.98 531 564 R
7 X
0 0 0 1 0 0 0 K
V
76.5 559.23 617.5 562.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 545.31 T
(8-) 147.13 545.31 T
(2 Storing Strings in Localizable Resources) 156.02 545.31 T
5 9 Q
(@start ErrorStrings, data) 81 530.98 T
(@chunk char NoMonkeyError[] =) 81 512.98 T
(\322FTPOOMM failed: No monkey present. Acquire a monkey and try again\323;) 125 501.98 T
(@localize \322The phrase \134\323acquire a monkey\134\323 appears in another string. Both should \134) 81 483.98 T
(be translated in the same way.\323;) 81 472.98 T
(@end ErrorStrings) 81 454.98 T
(@object GenGlyphClass BossMon = {) 81 436.98 T
( GI_visMoniker = \322Boss\323;) 125 425.98 T
( @localize { \322This means hide the game because a boss is coming\323 3-6 }; }) 125 414.98 T
81 390.95 531 402.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 390.95 531 402.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 398.2 617.5 401.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(Another thing to keep in mind is that when strings are translated, they are) 180 373.29 T
(likely to grow 33% to 50%. Y) 180 360.29 T
(ou have to remember to leave room for larger) 310.41 360.29 T
-0.04 (strings, both in memory and in) 180 347.29 P
1 9 Q
-0.04 (UI) 325.5 347.29 P
1 10 Q
-0.04 (. If you use the usual generic) 336.49 347.29 P
1 9 Q
-0.04 (UI) 472.12 347.29 P
1 10 Q
-0.04 ( gadgetry) 483.12 347.29 P
-0.04 (,) 525.48 347.29 P
(the geometry manager should stretch the various gadgets to \336t any larger) 180 334.29 T
(names. Y) 180 321.29 T
(ou should be careful that it doesn\325) 221.68 321.29 T
(t have to stretch so far that) 377.63 321.29 T
-0.6 (components get lost off the edge of the screen. If you decide to get around this) 180 308.29 P
(problem by constraining the size of some gadgetry) 180 295.29 T
(, keep in mind that if you) 410.2 295.29 T
(don\325) 180 282.29 T
(t allow it to stretch, your new strings may not \336t. See Figure) 198.71 282.29 T
(8-) 481.16 282.29 T
(2 for) 490.05 282.29 T
(illustrations of these problems.) 180 269.29 T
0 14 Q
(8.4) 142.54 216.95 T
0 24 Q
(International Formats) 180 216.95 T
1 10 Q
(\322International Formats\323 generally refers to formats which differ from) 180 191.29 T
-0.45 (country to country) 180 178.29 P
-0.45 (. In) 263.16 178.29 P
1 9 Q
-0.4 (GEOS) 280.78 178.29 P
1 10 Q
-0.45 (, it signi\336es those formats which the user can set) 306.95 178.29 P
(in the International section of the Preferences desk tool.) 180 165.29 T
1 9 Q
(GEOS) 442.05 165.29 T
1 10 Q
( provides) 468.22 165.29 T
(functions to work with International Formats.) 180 152.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "340" 6
%%Page: "341" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(International Formats) 414.86 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(341) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(8.4.1) 130.86 636 T
0 18 Q
(Number and Measure) 180 636 T
5 10 Q
(LocalGetNumericFormat\050\051, LocalSetNumericFormat\050\051) 180 612.33 T
(LocalGetMeasurementType\050\051, LocalSetMeasurementType\050\051,) 180 599.33 T
(LocalAsciiToFixed\050\051, LocalFixedToAscii\050\051,) 180 586.33 T
(LocalDistanceToAscii\050\051, LocalDistanceFromAscii\050\051) 180 573.33 T
1 F
(In the) 180 553.33 T
1 9 Q
(USA) 210.74 553.33 T
1 10 Q
(, 3.142 is a little more than three. In some other countries, it\325) 230.24 553.33 T
(s a) 511.59 553.33 T
(little over three thousand. This discrepancy arises from the fact that the) 180 540.33 T
-0.06 (decimal and thousands separators are interchanged\321in some countries the) 180 527.33 P
(\322.\323 symbol takes the place of the \322,\323 symbol when expressing numbers. T) 180 514.33 T
(o) 510.62 514.33 T
(allow for local number formats,) 180 501.33 T
1 9 Q
(GEOS) 327.24 501.33 T
1 10 Q
( provides functions for retrieving and) 353.41 501.33 T
(setting the user) 180 488.33 T
(\325) 253.33 488.33 T
(s preferences.) 255 488.33 T
-0.63 (The number format includes the thousands separator) 180 468.33 P
-0.63 (, decimal separator) 422.55 468.33 P
-0.63 (, list) 509.09 468.33 P
-0.74 (separator) 180 455.33 P
-0.74 (, and number of decimal digits, as shown in Figure) 223.52 455.33 P
-0.74 (8-) 453.76 455.33 P
-0.74 (3. The number) 462.65 455.33 P
-0.22 (format also contains a record,) 180 442.33 P
3 F
-0.22 (NumberFormatFlags) 318.55 442.33 P
1 F
-0.22 (, which holds one \337ag,) 427.26 442.33 P
1 9 Q
(NFF_LEADING_ZERO) 180 429.33 T
1 10 Q
(. This \337ag is on if the user wants a leading zero.) 277.84 429.33 T
(There is no overall automatic formatting command for numbers.) 180 409.33 T
1 9 Q
(GEOS) 479.84 409.33 T
1 10 Q
(supports many internal numeric formats such as \336xed point and \337oating) 180 396.33 T
(point. If the corresponding math library doesn\325) 180 383.33 T
(t contain a formatting) 395.38 383.33 T
-0.28 (command for the number format you\325re using, you will need to work directly) 180 370.33 P
(with the localization functions.) 180 357.33 T
(The) 180 337.33 T
3 F
(LocalGetNumericFormat\050\051) 200.56 337.33 T
1 F
( routine returns the numeric format so) 338.71 337.33 T
(you may use it to do your own formatting.) 180 324.33 T
3 F
( LocalSetNumericFormat\050\051) 373.17 324.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "341" 7
%%Page: "342" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(342) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(allows you to reset the user) 180 641.33 T
(\325) 307.23 641.33 T
(s preferences, though this is inadvisable as it) 308.9 641.33 T
(overrides and erases the user) 180 628.33 T
(\325) 316.29 628.33 T
(s original settings.) 317.96 628.33 T
(These routines use the) 180 434.85 T
3 F
(LocalNumericFormat) 287.6 434.85 T
1 F
( structure to store the) 399.64 434.85 T
(number format data.) 180 421.85 T
(The) 180 401.85 T
3 F
(LocalGetMeasurementT) 200.56 401.85 T
(ype\050\051) 325.03 401.85 T
1 F
( and) 351.33 401.85 T
3 F
(LocalSetMeasurementT) 374.3 401.85 T
(ype\050\051) 497.11 401.85 T
1 F
(routines work with the enumerated type) 180 388.85 T
3 F
(MeasurementT) 369.83 388.85 T
(ype) 447.45 388.85 T
1 F
(, of which) 465.97 388.85 T
(there are two:) 180 375.85 T
1 9 Q
(MEASURE_US) 247.23 375.85 T
1 10 Q
( and) 312.23 375.85 T
1 9 Q
(MEASURE_METRIC) 335.2 375.85 T
1 10 Q
(.) 424.85 375.85 T
3 F
(LocalGetMeasurementT) 180 362.85 T
(ype\050\051) 304.47 362.85 T
1 F
( retrieves the user) 330.77 362.85 T
(\325) 415.76 362.85 T
(s current preferred) 417.43 362.85 T
(measurement type;) 180 349.85 T
3 F
(LocalSetMeasurementT) 271.86 349.85 T
(ype\050\051) 394.67 349.85 T
1 F
( sets the user) 420.97 349.85 T
(\325) 483.19 349.85 T
(s) 484.86 349.85 T
-0.03 (preference to the passed value. As with any command that resets the user) 180 336.85 P
-0.03 (\325) 521.94 336.85 P
-0.03 (s) 523.61 336.85 P
(preference,) 180 323.85 T
3 F
(LocalSetMeasurementT) 234.06 323.85 T
(ype\050\051) 356.87 323.85 T
1 F
( should never be used by most) 383.17 323.85 T
(geodes.) 180 310.85 T
(The) 180 290.85 T
3 F
(LocalAsciiT) 200.56 290.85 T
(oFixed\050\051) 260.93 290.85 T
1 F
( routine converts an ascii string \050e.g. \32212.7\323\051 to a) 304.26 290.85 T
(\336xed point number) 180 277.85 T
(.) 267.04 277.85 T
3 F
( LocalFixedT) 269.82 277.85 T
(oAscii\050\051) 336.95 277.85 T
1 F
( performs the reverse.) 376.39 277.85 T
(T) 180 257.85 T
(o convert between a string like \32272 pt\323 and a number representing a) 185.75 257.85 T
(distance, use the) 180 244.85 T
3 F
(LocalDistanceFromAscii\050\051) 260.38 244.85 T
1 F
( routine.) 395.93 244.85 T
3 F
(LocalDistanceT) 180 231.85 T
(oAscii\050\051) 260.37 231.85 T
1 F
( goes the other way) 299.81 231.85 T
(, constructing the string) 387.97 231.85 T
(corresponding to a given distance. These routines use the) 180 218.85 T
3 F
(DistanceUnit) 447.42 218.85 T
1 F
-0.41 (enumerated type to specify the measurement units which are used as shown) 180 205.85 P
(in the table below) 180 192.85 T
(.) 261.33 192.85 T
(When allocating strings to use as the targets for Local\311T) 180 172.85 T
(oAscii\050\051 routines,) 445.59 172.85 T
-0.44 (allocating a buffer of size) 180 159.85 P
1 9 Q
-0.4 (LOCAL_DIST) 296.31 159.85 P
-0.4 (ANCE_BUFFER_SIZE) 354.66 159.85 P
1 10 Q
-0.44 ( will be suf\336cient.) 450.65 159.85 P
81 144 531 648 C
180 451.52 531 625 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 451.52 531 625 R
7 X
0 0 0 1 0 0 0 K
V
182.5 455.5 525.99 469.5 R
V
0 10 Q
0 X
(Figure) 182.5 462.83 T
(8-) 215.84 462.83 T
(3) 224.73 462.83 T
4 F
(Parts of a Number Format) 233.07 462.83 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
(decimal digits \0503\051) 403.5 536.66 T
(thousands separator) 352.5 570.97 T
(decimal separator) 379.15 492.19 T
(leading zero) 288.5 496.36 T
(list separator) 209.13 562.2 T
6 12 Q
(SUM\05012.32; .55; 1,356.00\051) 213 584.99 T
(0.246 m) 351.52 515.76 T
267.88 578.26 279 582.79 271.97 573.06 269.93 575.66 4 Y
V
264 571 269.93 575.66 2 L
7 X
V
0.5 H
2 Z
0 X
N
344.3 572.89 339.25 583.78 349.3 577.22 346.8 575.06 4 Y
V
346.8 575.06 347.75 573.96 2 L
7 X
V
0 X
N
341.27 510.15 351 517.18 346.47 506.07 343.87 508.11 4 Y
V
339.75 502.86 343.88 508.11 2 L
7 X
V
0 X
N
371.05 503.24 365.74 514.01 375.94 507.68 373.49 505.46 4 Y
V
378 500.5 373.5 505.46 2 L
7 X
V
0 X
N
393.2 530.36 405 532.57 396.16 524.45 394.68 527.41 4 Y
V
387.5 523.81 394.68 527.4 2 L
7 X
V
0 X
N
184.17 486.58 505 608.5 R
0 Z
3 X
N
415 514.61 404 519.42 415.87 521.17 415.43 517.89 4 Y
0 X
V
434 515.42 415.43 517.89 2 L
2 Z
N
4 10 Q
(metric units) 436.67 512.92 T
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "342" 8
%%Page: "343" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(International Formats) 414.86 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(343) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
(T) 81 641.33 T
(able) 86.37 641.33 T
(8-) 109.16 641.33 T
(1) 118.05 641.33 T
4 F
(DistanceUnit types) 126.39 641.33 T
81 620.02 531 625 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.02 531 625 R
7 X
0 0 0 1 0 0 0 K
V
53 622.98 656 622.98 2 L
V
0.5 H
2 Z
0 X
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(DistanceUnit value) 81 628.33 T
(# of Points) 189 628.33 T
(Display Format) 261 628.33 T
(Entry Format\050s\051) 369 628.33 T
1 9 Q
(DU_POINTS) 81 611.36 T
1 10 Q
(1.000) 197.34 611.36 T
(###.### pt) 261 611.36 T
(###.### pt) 369 611.36 T
1 9 Q
(DU_INCHES) 81 597.36 T
1 10 Q
(72.000) 189 597.36 T
(###.### in) 261 597.36 T
(###.### in) 369 597.36 T
(###.###\323) 441 597.36 T
1 9 Q
(DU_CENTIMETERS) 81 583.36 T
1 10 Q
(28.346) 189 583.36 T
(###.### cm) 261 583.36 T
(###.###cm) 369 583.36 T
1 9 Q
(DU_MILLIMETERS) 81 569.36 T
1 10 Q
(2.835) 197.34 569.36 T
(###.### mm) 261 569.36 T
(###.###mm) 369 569.36 T
1 9 Q
(DU_PICAS) 81 555.36 T
1 10 Q
(12.000) 189 555.36 T
(###.### pi) 261 555.36 T
(###.### pi) 369 555.36 T
1 9 Q
(DU_EUR_POINTS) 81 541.36 T
1 10 Q
(1.065) 197.34 541.36 T
(###.### ep) 261 541.36 T
(###.### ep) 369 541.36 T
1 9 Q
(DU_CICEROS) 81 527.36 T
1 10 Q
(12.787) 189 527.36 T
(###,### ci) 261 527.36 T
(###.### ci) 369 527.36 T
1 9 Q
(DU_POINTS_OR_MILLIMETERS) 81 513.36 T
1 10 Q
( and) 225.5 513.36 T
1 9 Q
(DU_INCHES_OR_CENTIMETERS) 248.47 513.36 T
1 10 Q
(: special cases) 396.63 513.36 T
0 14 Q
(8.4.2) 130.86 472.02 T
0 18 Q
(Currency) 180 472.02 T
5 10 Q
(LocalGetCurrencyFormat\050\051, LocalSetCurrencyFormat\050\051) 180 448.36 T
1 F
-0.43 (These functions allow you to work with the currency format \050see Figure) 180 428.36 P
-0.43 (8-) 508.09 428.36 P
-0.43 (4\051.) 516.98 428.36 P
-0.66 (This format consists of the currency symbol string, number of currency digits) 180 415.36 P
-0.79 (\050which may be different from the number of digits for ordinary numbers\051, and) 180 402.36 P
(the) 180 389.36 T
3 F
(CurrencyFormatFlags) 197.78 389.36 T
1 F
( record. The \337ags in this structure determine) 313.53 389.36 T
(whether the currency format includes space around the symbol, a negative) 180 376.36 T
-0.16 (sign, or a leading zero. There are \337ags to determine the relative order of the) 180 363.36 P
(negative sign, currency symbol, and number) 180 350.36 T
(. The currency symbol string) 383.9 350.36 T
(may be of up to length) 180 337.36 T
1 9 Q
(CURRENCY_SYMBOL_LENGTH) 285.76 337.36 T
1 10 Q
( including the null) 428.6 337.36 T
(terminator) 180 324.36 T
(.) 229.63 324.36 T
3 F
(LocalGetCurrencyFormat\050\051) 235.19 324.36 T
1 F
( also returns the separator) 377.61 324.36 T
-0.75 (characters from the numeric formats, eliminating the need for a separate call) 180 311.36 P
(to) 180 298.36 T
3 F
(LocalGetNumericFormat\050\051) 191.67 298.36 T
1 F
(.) 329.82 298.36 T
3 F
(LocalSetCurrencyFormat\050\051) 335.38 298.36 T
1 F
( allows the) 476.14 298.36 T
-0.45 (changing of the set preferences. Most parts of the currency format are stored) 180 285.36 P
-0.42 (in a) 180 272.36 P
3 F
-0.43 (LocalCurrencyFormat) 199.55 272.36 P
1 F
-0.42 ( structure when passed to or returned by these) 315.86 272.36 P
(functions.) 180 259.36 T
0 14 Q
(8.4.3) 130.86 217.02 T
0 18 Q
(Quotation Marks) 180 217.02 T
5 10 Q
(LocalGetQuotes\050\051, LocalSetQuotes\050\051) 180 193.36 T
1 F
(In different countries, people use different types of quotation marks.) 180 173.36 T
(Germans, for example, might use the \310 and \307 characters. Although) 180 160.36 T
(traditionally) 180 147.36 T
(, the only computer) 237.05 147.36 T
(-generated quotation marks available are \322) 326.13 147.36 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "343" 9
%%Page: "344" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(344) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(and \323,) 180 448.33 T
1 9 Q
(GEOS) 209.64 448.33 T
1 10 Q
( allows all geodes to use native quotation marks without) 235.81 448.33 T
(extraordinary effort.) 180 435.33 T
(If a user types in a quotation mark, the keyboard knows which character to) 180 415.33 T
(print; thus, if you\325re using) 180 402.33 T
3 F
(ResEdit) 303.34 402.33 T
1 F
( on a string, it\325) 344.45 402.33 T
(s easy to have your) 411.32 402.33 T
(translator type in the correct character) 180 389.33 T
(. In these cases your geode will have) 359.62 389.33 T
(no use for) 180 376.33 T
3 F
(LocalGetQuotes\050\051) 227.96 376.33 T
1 F
( or) 318.88 376.33 T
3 F
(LocalSetQuotes\050\051) 333.88 376.33 T
1 F
(. On the other hand, if) 423.14 376.33 T
-0.29 (your program is going to construct a string which contains quotation marks,) 180 363.33 P
(use the) 180 350.33 T
3 F
(LocalGetQuotes\050\051) 216.3 350.33 T
1 F
( routine; it will return the correct characters to) 307.22 350.33 T
-0.41 (use. If you want to reset the preferences, use the) 180 337.33 P
3 F
-0.43 (LocalSetQuotes\050\051) 402.89 337.33 P
1 F
-0.41 ( routine.) 492.15 337.33 P
(These routines work with the) 180 317.33 T
3 F
(LocalQuotes) 318.72 317.33 T
1 F
( structure, which simply holds) 383.53 317.33 T
(four characters to use as the four kinds of quotation mark.) 180 304.33 T
0 14 Q
(8.4.4) 130.86 262 T
0 18 Q
(Dates and T) 180 262 T
(imes) 281.7 262 T
5 10 Q
(LocalFormatDateTime\050\051, LocalParseDateTime\050\051,) 180 238.33 T
(LocalGetDateTimeFormat\050\051, LocalSetDateTimeFormat\050\051,) 180 225.33 T
(LocalCustomFormatDateTime\050\051, LocalCustomParseDateTime\050\051,) 180 212.33 T
(LocalCalcDaysInMonth\050\051, LocalFormatFileDateTime\050\051) 180 199.33 T
3 F
-0.03 (LocalFormatDateT) 180 179.33 P
-0.03 (ime\050\051) 278.45 179.33 P
1 F
-0.03 ( and) 305.3 179.33 P
3 F
-0.03 (LocalParseDateT) 328.21 179.33 P
-0.03 (ime\050\051) 417.77 179.33 P
1 F
-0.03 ( allow display and) 444.62 179.33 P
(parsing of date and time strings in a variety of formats. Passed the) 180 166.33 T
(appropriate data,) 180 153.33 T
3 F
(LocalFormatDateT) 263.35 153.33 T
(ime\050\051) 361.8 153.33 T
1 F
( will return a string with the) 388.65 153.33 T
81 144 531 648 C
180 455 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 455 531 648 R
7 X
0 0 0 1 0 0 0 K
V
181.99 458.83 516.99 472.83 R
V
0 10 Q
0 X
(Figure) 181.99 466.17 T
(8-) 215.33 466.17 T
(4) 224.22 466.17 T
4 F
(Parts of the Currency Format) 232.56 466.17 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
(currency symbol) 185.83 616.3 T
(currency digits \0502\051) 266.83 589.3 T
7 14 Q
($ -199.00) 188.16 587.92 T
201.95 603.51 193.83 594.67 196.03 606.46 198.99 604.98 4 Y
V
198.99 604.98 202.83 612.67 2 L
7 X
V
0.5 H
2 Z
0 X
N
221.62 580.41 232.83 584.69 225.6 575.12 223.61 577.76 4 Y
V
223.61 577.76 212.83 569.67 2 L
7 X
V
0 X
N
4 10 Q
(decimal separator \050from number formats\051) 185.83 562.71 T
(currency symbol) 413.71 541.47 T
(currency digits \0500\051) 333.83 516.47 T
7 14 Q
(285 \243) 435.42 512.67 T
464.96 538.16 465.34 526.17 458.67 536.14 461.82 537.15 4 Y
V
461.81 537.15 461.09 539.42 2 L
7 X
V
0 X
N
4 10 Q
(space around symbol) 413.09 493.44 T
444.32 505.13 455.08 510.45 448.77 500.24 446.55 502.69 4 Y
V
444.09 500.44 446.55 502.68 2 L
7 X
V
0 X
N
183.25 484.71 519.08 631.62 R
0 Z
3 X
N
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "344" 10
%%Page: "345" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(International Formats) 414.86 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(345) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(data appropriately formatted.) 180 641.33 T
3 F
(LocalParseDateT) 320.39 641.33 T
(ime\050\051) 409.95 641.33 T
1 F
( performs the) 436.8 641.33 T
-0.87 (reverse function, reading a string and attempting to extract information from) 180 628.33 P
-0.41 (it. The strings these functions use should be long enough to hold a formatted) 180 615.33 P
(date or time. The prede\336ned constant) 180 602.33 T
1 9 Q
(DA) 356.31 602.33 T
(TE_TIME_BUFFER_SIZE) 369.32 602.33 T
1 10 Q
( is the) 480.14 602.33 T
(minimum recommended number of characters for one of these strings.) 180 589.33 T
-0.09 (Localization functions use) 180 569.33 P
3 F
-0.09 (DateT) 303.07 569.33 P
-0.09 (imeFormat) 334.48 569.33 P
1 F
-0.09 (s to keep track of what sort of) 392.07 569.33 P
(format is desired. If told to parse \3225:28\323 as hours and minutes,) 180 556.33 T
3 F
(LocalParseDateT) 180 543.33 T
(ime\050\051) 269.56 543.33 T
1 F
( will \050depending on the user) 296.41 543.33 T
(\325) 425.67 543.33 T
(s time format) 427.34 543.33 T
(preferences\051 return 5 in the hours place and 28 in the minutes place. If told) 180 530.33 T
-0.69 (to parse \3225/28\323 as hours and minutes,) 180 517.33 P
3 F
-0.71 (LocalParseDateT) 350.56 517.33 P
-0.71 (ime\050\051) 440.12 517.33 P
1 F
-0.69 ( would return) 466.97 517.33 P
(an error) 180 504.33 T
(. There are a variety of) 217.03 504.33 T
3 F
(DateT) 325.38 504.33 T
(imeFormats\050\051) 356.79 504.33 T
1 F
( to choose from) 427.16 504.33 T
(T) 180 491.33 T
(able) 186.05 491.33 T
(8-) 208.1 491.33 T
(2, and you should decide which format to use based on what) 216.99 491.33 T
(information you want your application to display or read.) 180 478.33 T
180 144 531 457.2 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 457.2 R
7 X
0 0 0 1 0 0 0 K
V
181 80.2 518 450.82 R
V
0 10 Q
0 X
(T) 181 444.15 T
(able) 186.37 444.15 T
(8-) 209.16 444.15 T
(2) 218.05 444.15 T
4 F
(DateT) 226.39 444.15 T
(imeFormat T) 254.01 444.15 T
(ypes) 313.67 444.15 T
181 422.84 518 427.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
181 422.84 518 427.82 R
7 X
0 0 0 1 0 0 0 K
V
153 425.8 756 425.8 2 L
V
0.5 H
2 Z
0 X
N
180 144 531 457.2 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Format) 181 431.15 T
(Sample Output) 397 431.15 T
1 9 Q
(DTF_LONG) 181 414.17 T
1 10 Q
(Sunday, March 5th, 1990) 397 414.17 T
1 9 Q
(DTF_LONG_CONDENSED) 181 402.17 T
1 10 Q
(Sun, Mar 5, 1990) 397 402.17 T
1 9 Q
(DTF_LONG_NO_WEEKDA) 181 390.17 T
(Y) 296.69 390.17 T
1 10 Q
(March 5th, 1990) 397 390.17 T
1 9 Q
(DTF_LONG_NO_WEEKDA) 181 378.17 T
(Y_CONDENSED) 296.69 378.17 T
1 10 Q
(Mar 5, 1990) 397 378.17 T
1 9 Q
(DTF_SHORT) 181 366.17 T
1 10 Q
(3/5/90) 397 366.17 T
1 9 Q
(DTF_ZERO_P) 181 354.17 T
(ADDED_SHORT) 239.84 354.17 T
1 10 Q
(03/05/90) 397 354.17 T
1 9 Q
(DTF_MD_LONG) 181 342.17 T
1 10 Q
(Sunday, March 5th) 397 342.17 T
1 9 Q
(DTF_MD_LONG_NO_WEEKDA) 181 330.17 T
(Y) 316.68 330.17 T
1 10 Q
(March 5th) 397 330.17 T
1 9 Q
(DTF_MD_SHORT) 181 318.17 T
1 10 Q
(3/5) 397 318.17 T
1 9 Q
(DTF_MY_LONG) 181 306.17 T
1 10 Q
(March 1990) 397 306.17 T
1 9 Q
(DTF_MY_SHORT) 181 294.17 T
1 10 Q
(3/90) 397 294.17 T
1 9 Q
(DTF_MONTH) 181 282.17 T
1 10 Q
(March) 397 282.17 T
1 9 Q
(DTF_WEEKDA) 181 270.17 T
(Y) 246.01 270.17 T
1 10 Q
(Wednesday) 397 270.17 T
1 9 Q
(DTF_HMS) 181 256.17 T
1 10 Q
(1:05:31) 397 256.17 T
1 9 Q
(PM) 433.14 256.17 T
(DTF_HM) 181 244.17 T
1 10 Q
(1:05) 397 244.17 T
1 9 Q
(PM) 419.24 244.17 T
(DTF_H) 181 232.17 T
1 10 Q
(1) 397 232.17 T
1 9 Q
(PM) 405.34 232.17 T
(DTF_MS) 181 220.17 T
1 10 Q
(5:31) 397 220.17 T
1 9 Q
(DTF_HMS_24HOUR) 181 208.17 T
1 10 Q
(13:05:31) 397 208.17 T
1 9 Q
(DTF_HM_24HOUR) 181 196.17 T
1 10 Q
(13:05) 397 196.17 T
4 F
(DateT) 181 182.17 T
(imeFormats with sample strings. Note that these samples only) 208.62 182.17 T
(illustrate what the U.S. version could produce. The actual output might) 181 170.17 T
(not look like the samples.) 181 158.17 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "345" 11
%%Page: "346" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(346) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Each) 180 641.33 T
3 F
(DateT) 206.11 641.33 T
(imeFormat) 237.52 641.33 T
1 F
( has a string associated with it that contains) 295.11 641.33 T
-0.03 (formatting information. This string consists of the characters of the format,) 180 628.33 P
-0.24 (with place-holding tokens for the \336elds of the date or time. These tokens are) 180 615.33 P
(delimited by the special character \322|\323. For example, the date/time format) 180 602.33 T
(string \322|) 180 589.33 T
1 9 Q
(HH) 220.32 589.33 T
1 10 Q
(|:|mm|) 235.31 589.33 T
(|ap|\323 would correspond to the formatted string) 276.83 589.33 T
-0.81 (\32210:37) 180 576.33 P
-0.81 (am\323. The string for each) 211.69 576.33 P
3 F
-0.84 (DateT) 321.88 576.33 P
-0.84 (imeFormat) 353.29 576.33 P
1 F
-0.81 ( can be accessed or altered) 410.88 576.33 P
-0.37 (with the) 180 563.33 P
3 F
-0.38 (LocalGetDateT) 220.75 563.33 P
-0.38 (imeFormat\050\051) 299.01 563.33 P
1 F
-0.37 ( and) 364.38 563.33 P
3 F
-0.38 (LocalSetDateT) 386.62 563.33 P
-0.38 (imeFormat\050\051) 463.22 563.33 P
1 F
-0.06 (commands. The recommended minimum size of a date/time format string is) 180 550.33 P
(the constant) 180 537.33 T
1 9 Q
(DA) 240.19 537.33 T
(TE_TIME_FORMA) 253.2 537.33 T
(T_SIZE) 333.36 537.33 T
1 10 Q
(.) 365.19 537.33 T
(If you don\325) 180 517.33 T
(t wish to work through one of the standard) 228.15 517.33 T
3 F
(DateT) 428.91 517.33 T
(imeFormat) 460.32 517.33 T
1 F
-0.71 (values, you can construct a string containing some date/time tokens and pass) 180 504.33 P
(it as an argument to) 180 491.33 T
3 F
(LocalCustomFormatDateT) 277.06 491.33 T
(ime\050\051) 415.14 491.33 T
1 F
(, along with the) 441.99 491.33 T
-0.17 (appropriate date and time information. T) 180 478.33 P
-0.17 (o parse a date/time using a custom) 369 478.33 P
(format, use) 180 465.33 T
3 F
(LocalCustomParseDateT) 235.19 465.33 T
(ime\050\051) 364.38 465.33 T
1 F
(.) 391.23 465.33 T
-0.75 (The) 180 445.33 P
3 F
-0.77 (LocalFormatFileDateT) 199.81 445.33 P
-0.77 (ime\050\051) 318.44 445.33 P
1 F
-0.75 ( utility routine works in the same way as) 345.29 445.33 P
3 F
-0.52 (LocalFormatDateT) 180 432.33 P
-0.52 (ime\050\051) 278.45 432.33 P
1 F
-0.5 (, except it takes a) 305.3 432.33 P
3 F
-0.52 (FileDateAndT) 386.52 432.33 P
-0.52 (ime) 459.22 432.33 P
1 F
-0.5 ( argument.) 478.29 432.33 P
(It is normally used to format the information returned by) 180 419.33 T
3 F
(FileGetDateAndT) 180 406.33 T
(ime\050\051) 271.03 406.33 T
1 F
(.) 297.88 406.33 T
(The) 180 386.33 T
3 F
(LocalCalcDaysInMonth\050\051) 200.56 386.33 T
1 F
( utility routine takes a month number and) 330.55 386.33 T
(returns the number of days in that month.) 180 373.33 T
-0.3 (A number of constants have been set up to aid in the computation of the size) 180 353.33 P
(of string necessary to hold a date/time or a date/time format string. These) 180 340.33 T
(constants are) 180 327.33 T
1 9 Q
(DA) 244.82 327.33 T
(TE_TIME_BUFFER_SIZE) 257.83 327.33 T
1 10 Q
(,) 368.65 327.33 T
1 9 Q
(DA) 374.21 327.33 T
(TE_TIME_FORMA) 387.22 327.33 T
(T_SIZE) 467.38 327.33 T
1 10 Q
(,) 499.21 327.33 T
1 9 Q
(MAX_MONTH_LENGTH) 180 314.33 T
1 10 Q
(,) 287 314.33 T
1 9 Q
(MAX_DA) 292.56 314.33 T
(Y_LENGTH) 331.06 314.33 T
1 10 Q
(,) 382.24 314.33 T
1 9 Q
(MAX_YEAR_LENGTH) 387.8 314.33 T
1 10 Q
(,) 484.3 314.33 T
1 9 Q
(MAX_WEEKDA) 180 301.33 T
(Y_LENGTH) 247.33 301.33 T
1 10 Q
(,) 298.5 301.33 T
1 9 Q
(MAX_SEP) 304.06 301.33 T
(ARA) 347.4 301.33 T
(TOR_LENGTH) 366.4 301.33 T
1 10 Q
(, and) 430.74 301.33 T
1 9 Q
(TOKEN_LENGTH) 180 288.33 T
1 10 Q
(.) 258.68 288.33 T
0 14 Q
(8.4.5) 130.86 246 T
0 18 Q
(Filters for Formats) 180 246 T
5 10 Q
(LocalIsDateChar\050\051, LocalIsTimeChar\050\051, LocalIsNumChar\050\051) 180 222.33 T
1 F
(The generic) 180 202.33 T
1 9 Q
(UI) 236.85 202.33 T
1 10 Q
( allows for \336lters on text objects to keep users from typing) 247.85 202.33 T
-0.41 (inappropriate characters. For example, if the user were expected to type in a) 180 189.33 P
-0.02 (number) 180 176.33 P
-0.02 (, the \322~\323 character would be ignored as that isn\325) 215.37 176.33 P
-0.02 (t part of the number) 434.24 176.33 P
(format. If you want to use generic text objects, you can give them hints to) 180 163.33 T
(accept only characters from certain formats. If you want to use the \336ltering) 180 150.33 T
0 0 0 1 0 0 0 K
81 530 171 647.45 C
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(Advanced T) 81 594.45 T
(opic) 131.35 594.45 T
1 F
-0.84 (Y) 81 578.45 P
-0.84 (ou probably won\325) 86.34 578.45 P
-0.84 (t be) 154.67 578.45 P
(working with DTF) 81 567.45 T
(Strings unless you) 81 556.45 T
-0.97 (make up your own DT) 81 545.45 P
(Formats.) 81 534.45 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 X
90 450 13.5 13.5 101.25 623.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 623.33 A
0 0 0 1 0 0 0 K
81 603.21 121.5 643.71 R
1 H
0 X
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "346" 12
%%Page: "347" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(International Formats) 414.86 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(347) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.09 (functions for your own purposes, they are available globally) 180 641.33 P
-0.09 (. When passed a) 453.57 641.33 P
(character) 180 628.33 T
(, these functions will tell whether the character is a legal part of a) 223.14 628.33 T
-0.27 (format.) 180 615.33 P
3 F
-0.28 (LocalIsDateChar\050\051) 216.4 615.33 P
1 F
-0.27 ( returns) 312.51 615.33 P
1 9 Q
-0.24 (TRUE) 352.16 615.33 P
1 10 Q
-0.27 ( if the passed character is part of) 378.49 615.33 P
(the short date format,) 180 602.33 T
1 9 Q
(DTF_SHORT) 284.27 602.33 T
1 10 Q
(.) 339.53 602.33 T
3 F
(LocalIsT) 345.09 602.33 T
(imeChar\050\051) 390.02 602.33 T
1 F
( returns) 442.8 602.33 T
1 9 Q
(TRUE) 482.98 602.33 T
1 10 Q
(when passed a number or time separator character) 180 589.33 T
(.) 415.2 589.33 T
3 F
(LocalIsNumChar\050\051) 420.76 589.33 T
1 F
-0.66 (returns) 180 576.33 P
1 9 Q
-0.59 (TRUE) 216.74 576.33 P
1 10 Q
-0.66 ( when passed a number character) 243.08 576.33 P
-0.66 (, a separator) 394.81 576.33 P
-0.66 (, or negative sign.) 450.92 576.33 P
189 144 531 486 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 144 531 486 R
7 X
0 0 0 1 0 0 0 K
V
190 -3.34 527 476.27 R
V
0 10 Q
0 X
(T) 190 469.6 T
(able) 195.37 469.6 T
(8-) 218.16 469.6 T
(3) 227.05 469.6 T
4 F
(DateT) 235.39 469.6 T
(imeFormat String T) 263.01 469.6 T
(okens) 354.89 469.6 T
190 448.29 527 453.27 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
190 448.29 527 453.27 R
7 X
0 0 0 1 0 0 0 K
V
162 451.25 765 451.25 2 L
V
0.5 H
2 Z
0 X
N
189 144 531 486 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Token) 190 456.6 T
(Constant) 262 456.6 T
(Example) 442 456.6 T
1 F
(|) 190 439.63 T
1 9 Q
(DD) 196.06 439.63 T
1 10 Q
(|) 210.06 439.63 T
1 9 Q
(TOKEN_TOKEN_DELIMITER) 262 439.63 T
1 10 Q
(|) 442 439.63 T
(|) 190 425.63 T
1 9 Q
(L) 196.06 425.63 T
(W) 201.4 425.63 T
1 10 Q
(|) 210.23 425.63 T
1 9 Q
(TOKEN_LONG_WEEKDA) 262 425.63 T
(Y) 373.68 425.63 T
1 10 Q
(Wednesday) 442 425.63 T
(|) 190 413.63 T
1 9 Q
(SW) 196.06 413.63 T
1 10 Q
(|) 210.56 413.63 T
1 9 Q
(TOKEN_SHORT_WEEKDA) 262 413.63 T
(Y) 379.01 413.63 T
1 10 Q
(Wed) 442 413.63 T
(|) 190 399.63 T
1 9 Q
(SM) 196.06 399.63 T
1 10 Q
(|) 210.23 399.63 T
1 9 Q
(TOKEN_SHORT_MONTH) 262 399.63 T
1 10 Q
(Jun) 442 399.63 T
(|) 190 387.63 T
1 9 Q
(NM) 196.06 387.63 T
1 10 Q
(|) 211.89 387.63 T
1 9 Q
(TOKEN_NUMERIC_MONTH) 262 387.63 T
1 10 Q
(6) 442 387.63 T
(|) 190 375.63 T
1 9 Q
(ZM) 196.06 375.63 T
1 10 Q
(|) 210.05 375.63 T
1 9 Q
(TOKEN_ZERO_P) 262 375.63 T
(ADDED_MONTH) 335.67 375.63 T
1 10 Q
(06) 442 375.63 T
(|) 190 361.63 T
1 9 Q
(LD) 196.06 361.63 T
1 10 Q
(|) 209.07 361.63 T
1 9 Q
(TOKEN_LONG_DA) 262 361.63 T
(TE) 345.19 361.63 T
1 10 Q
(9th) 442 361.63 T
(|) 190 349.63 T
1 9 Q
(SD) 196.06 349.63 T
1 10 Q
(|) 208.73 349.63 T
1 9 Q
(TOKEN_SHORT_DA) 262 349.63 T
(TE) 350.52 349.63 T
1 10 Q
(9) 442 349.63 T
(|) 190 337.63 T
1 9 Q
(PD) 196.06 337.63 T
1 10 Q
(|) 209.07 337.63 T
1 9 Q
(TOKEN_SP) 262 337.63 T
(ACE_P) 311.35 337.63 T
(ADDED_DA) 340.68 337.63 T
(TE) 392.18 337.63 T
1 10 Q
( 9) 442 337.63 T
(|) 190 323.63 T
1 9 Q
(L) 196.06 323.63 T
(Y) 201.24 323.63 T
1 10 Q
(|) 207.57 323.63 T
1 9 Q
(TOKEN_LONG_YEAR) 262 323.63 T
1 10 Q
(1991) 442 323.63 T
(|) 190 311.63 T
1 9 Q
(SY) 196.06 311.63 T
1 10 Q
(|) 208.07 311.63 T
1 9 Q
(TOKEN_SHORT_YEAR) 262 311.63 T
1 10 Q
(91) 442 311.63 T
(|) 190 297.63 T
1 9 Q
(HH) 196.06 297.63 T
1 10 Q
(|) 211.05 297.63 T
1 9 Q
(TOKEN_12HOUR) 262 297.63 T
1 10 Q
(6) 442 297.63 T
(|hh|) 190 283.63 T
1 9 Q
(TOKEN_24HOUR) 262 283.63 T
1 10 Q
(18) 442 283.63 T
(|Zh|) 190 271.63 T
1 9 Q
(TOKEN_ZERO_P) 262 271.63 T
(ADDED_24HOUR) 335.67 271.63 T
1 10 Q
(04) 442 271.63 T
(|mm|) 190 257.63 T
1 9 Q
(TOKEN_MINUTE) 262 257.63 T
1 10 Q
(5) 442 257.63 T
(|Zm|) 190 245.63 T
1 9 Q
(TOKEN_ZERO_P) 262 245.63 T
(ADDED_MINUTE) 335.67 245.63 T
1 10 Q
(05) 442 245.63 T
(|Pm|) 190 233.63 T
1 9 Q
(TOKEN_SP) 262 233.63 T
(ACE_P) 311.35 233.63 T
(ADDED_MINUTE) 340.68 233.63 T
1 10 Q
( 5) 442 233.63 T
(|ss|) 190 219.63 T
1 9 Q
(TOKEN_SECOND) 262 219.63 T
1 10 Q
(3) 442 219.63 T
(|ap|) 190 205.63 T
1 9 Q
(TOKEN_AM_PM) 262 205.63 T
1 10 Q
(pm) 442 205.63 T
(|Ap|) 190 193.63 T
1 9 Q
(TOKEN_AM_PM_CAP) 262 193.63 T
1 10 Q
(Pm) 442 193.63 T
(|) 190 181.63 T
1 9 Q
(AP) 196.06 181.63 T
1 10 Q
(|) 208.56 181.63 T
1 9 Q
(TOKEN_AM_PM_ALL_CAPS) 262 181.63 T
(PM) 442 181.63 T
4 10 Q
-0.39 (Examples show what U.S. version could produce. Actual output might not) 190 167.63 P
(look like samples.) 190 155.63 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "347" 13
%%Page: "348" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(348) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(8.5) 142.54 632 T
0 24 Q
(Lexical Functions) 180 632 T
1 10 Q
(Since different languages have different alphabets,) 180 606.33 T
1 9 Q
(GEOS) 418.54 606.33 T
1 10 Q
( has to allow for) 444.71 606.33 T
(characters not in the standard English character set. Thus, many standard) 180 593.33 T
(procedures have been localized. Most of these functions have to do with the) 180 580.33 T
(lexical value of characters, their place in a lexical, or alphabetic, ordering.) 180 567.33 T
(These lexical values take the place of) 180 554.33 T
1 9 Q
(ASCII) 354.11 554.33 T
1 10 Q
( standard character values that) 380.1 554.33 T
(you may be used to.) 180 541.33 T
0 14 Q
(8.5.1) 130.86 499 T
0 18 Q
(Comparing Strings) 180 499 T
5 10 Q
(LocalCmpStrings\050\051, LocalCmpStringsNoCase\050\051,) 180 475.33 T
(LocalCmpStringsNoSpace\050\051, LocalCmpStringsNoSpaceCase\050\051,) 180 462.33 T
(LocalGetLanguage\050\051, LocalCmpChars\050\051, LocalCmpCharsNoCase\050\051) 180 449.33 T
3 F
(LocalCmpStrings\050\051) 180 429.33 T
1 F
( takes two strings as arguments and says which, if) 278.16 429.33 T
(either) 180 416.33 T
(, comes \336rst alphabetically) 206.85 416.33 T
(.) 329.28 416.33 T
3 F
(LocalCmpStringsNoCase\050\051) 334.84 416.33 T
1 F
( does the) 472.07 416.33 T
(same thing but is not case sensitive.) 180 403.33 T
3 F
(LocalCmpStrings\050\051) 349.85 403.33 T
1 F
( does a better job) 448.01 403.33 T
(of ordering strings than assembly language instructions such as) 180 390.33 T
3 F
(cmps) 478.54 390.33 T
1 F
( that) 505.4 390.33 T
-0.02 (just compare) 180 377.33 P
1 9 Q
-0.02 (ASCII) 242.18 377.33 P
1 10 Q
-0.02 ( values. Since the) 268.17 377.33 P
1 9 Q
-0.02 (ASCII) 351.81 377.33 P
1 10 Q
-0.02 ( value of \322a\323 places it after \322Z\323, it) 377.81 377.33 P
(is advisable to use) 180 364.33 T
3 F
(LocalCmpStrings\050\051) 267.25 364.33 T
1 F
(, which uses the localized lexical) 365.41 364.33 T
-0.18 (values. When comparing two strings for equality) 180 351.33 P
-0.18 (, assembly instructions like) 402.26 351.33 P
3 F
(cmps) 180 338.33 T
1 F
( may be used safely) 206.86 338.33 T
(.) 295.77 338.33 T
(The) 180 318.33 T
3 F
(LocalCmpStringsNoSpace\050\051) 200.56 318.33 T
1 F
( and) 343.91 318.33 T
3 F
(LocalCmpStringsNoSpaceCase\050\051) 180 305.33 T
1 F
( routines are like the) 347.98 305.33 T
3 F
(LocalCmpStrings\050\051) 180 292.33 T
1 F
( and) 278.16 292.33 T
3 F
(LocalCmpStringsNoCase\050\051) 301.13 292.33 T
1 F
( routines, except) 438.36 292.33 T
(that spaces and punctuation marks are ignored. Note that if you are) 180 279.33 T
-0.18 (comparing only a certain number of characters that spaces and punctuation) 180 266.33 P
(marks will not be included in this number) 180 253.33 T
(.) 373.55 253.33 T
-0.13 (The sort order of the strings will depend on the language used when sorting) 180 233.33 P
(them. T) 180 220.33 T
(o \336nd out the current language used for sorting, call) 215.2 220.33 T
3 F
(LocalGetLanguage\050\051) 180 207.33 T
1 F
(.) 285.73 207.33 T
(There are two assembly routines) 180 187.33 T
3 F
(LocalCmpChars\050\051) 333.91 187.33 T
1 F
( and) 425.22 187.33 T
3 F
-0.08 (LocalCmpCharsNoCase\050\051) 180 174.33 P
1 F
-0.08 ( which allow for the quick lexical comparison of) 310.38 174.33 P
(two characters.) 180 161.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "348" 14
%%Page: "349" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Lexical Functions) 439.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(349) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.5) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(8.5.2) 130.86 636 T
0 18 Q
(String Length and Size) 180 636 T
5 10 Q
(LocalStringLength\050\051, LocalStringSize\050\051) 180 612.33 T
1 F
(There are two routines which determine how long a string is.) 180 592.33 T
3 F
(LocalStringLength\050\051) 180 579.33 T
1 F
( returns the number of characters making up the) 286.11 579.33 T
-0.19 (string, not including the null terminator) 180 566.33 P
-0.19 (, if any) 364.81 566.33 P
-0.19 (.) 395.18 566.33 P
3 F
-0.19 ( LocalStringSize\050\051) 397.96 566.33 P
1 F
-0.19 ( returns) 491.2 566.33 P
(the number of bytes in a string, again not counting any null terminators.) 180 553.33 T
-0.71 (Normally these two values will be the same, but any applications which want) 180 540.33 P
(to support double byte character support will need separate functions to) 180 527.33 T
(handle those characters that take more than one byte to represent.) 180 514.33 T
0 14 Q
(8.5.3) 130.86 472 T
0 18 Q
(Casing) 180 472 T
5 10 Q
(LocalUpcaseChar\050\051, LocalDowncaseChar\050\051,) 180 448.33 T
(LocalUpcaseString\050\051, LocalDowncaseString\050\051) 180 435.33 T
1 F
(These functions take a character or string and, if possible, transform it to) 180 415.33 T
(upper or lower case. They work only on alphabetic characters; other) 180 402.33 T
(characters will be returned unchanged. These functions can deal with all) 180 389.33 T
-0.62 (languages, understanding \322) 180 376.33 P
1 9 Q
-0.56 (\351) 305.81 376.33 P
1 10 Q
-0.62 (\323 is the upper case for \322\217\323. If you\325re used to using) 312.31 376.33 P
1 9 Q
(ASCII) 180 363.33 T
1 10 Q
(, you might be tempted to write your own version of these casing) 205.99 363.33 T
(functions by doing arithmetic operations with the lexical or) 180 350.33 T
1 9 Q
(ASCII) 456.32 350.33 T
1 10 Q
( values of) 482.31 350.33 T
-0.62 (characters, but chances are these will not work with other character sets and) 180 337.33 P
(should be avoided.) 180 324.33 T
0 14 Q
(8.5.4) 130.86 282 T
0 18 Q
(Character Categories) 180 282 T
5 10 Q
(LocalIsUpper\050\051, LocalIsLower\050\051, LocalIsAlpha\050\051,) 180 258.33 T
(LocalIsPunctuation\050\051, LocalIsSpace\050\051, LocalIsSymbol\050\051,) 180 245.33 T
(LocalIsControl\050\051, LocalIsDigit\050\051, LocalIsHexDigit\050\051,) 180 232.33 T
(LocalIsAlphaNumeric\050\051 LocalIsPrintable\050\051, LocalIsGraphic\050\051) 180 219.33 T
1 9 Q
-0.2 (GEOS) 180 199.33 P
1 10 Q
-0.22 ( assembly provides some commonly used character predicates.) 206.17 199.33 P
1 9 Q
-0.2 (C) 494.58 199.33 P
1 10 Q
-0.22 ( users) 501.08 199.33 P
-0.08 (may use the standard) 180 186.33 P
1 9 Q
-0.08 (C) 283.01 186.33 P
1 10 Q
-0.08 (functions) 291.94 186.33 P
3 F
-0.09 (isupper\050\051) 337.4 186.33 P
1 F
-0.08 (,) 385 186.33 P
3 F
-0.09 (islower\050\051) 390.48 186.33 P
1 F
-0.08 (, etc. to access these) 436.41 186.33 P
(predicates. Passed a character) 180 173.33 T
(, each of these functions tells whether that) 319.64 173.33 T
(character falls into a certain category) 180 160.33 T
(.) 351.86 160.33 T
3 F
(LocalIsUpper\050\051) 357.42 160.33 T
1 F
( returns) 435.76 160.33 T
4 F
(true) 475.94 160.33 T
1 F
( if the) 494.45 160.33 T
(character is an uppercase alphabetic character;) 180 147.33 T
3 F
(LocalIsLower\050\051) 401.49 147.33 T
1 F
( returns) 480.38 147.33 T
0 0 0 1 0 0 0 K
81 303.8 171 421.45 C
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(W) 81 368.45 T
(arning) 89.16 368.45 T
1 F
-0.61 (Programmers used to) 81 352.45 P
-0.92 (using ASCII values to) 81 341.45 P
(change a character) 81 330.45 T
(\325) 160.33 330.45 T
(s) 161.83 330.45 T
(case should use our) 81 319.45 T
(functions instead.) 81 308.45 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 X
90 450 13.5 13.5 101.25 397.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 397.33 A
0 0 0 1 0 0 0 K
81 377.21 121.5 417.71 R
1 H
0 X
N
0 0 0 0 1 1 1 K
0 36 Q
7 X
0 0 0 0 1 1 1 K
(!) 95.26 385.27 T
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "349" 15
%%Page: "350" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(350) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 10 Q
0 X
-0.2 (true) 180 641.33 P
1 F
-0.2 ( if the character is lower case.) 198.51 641.33 P
3 F
-0.2 (LocalIsAlpha\050\051) 337.51 641.33 P
1 F
-0.2 ( approves any alphabetic) 413.99 641.33 P
(character) 180 628.33 T
(.) 223.14 628.33 T
3 F
(LocalIsPunctuation\050\051) 228.7 628.33 T
1 F
( checks for punctuation marks.) 339.43 628.33 T
3 F
(LocalIsSpace\050\051) 180 615.33 T
1 F
( looks for white space \050including spaces, tabs, and carriage) 256.49 615.33 T
(returns\051, and) 180 602.33 T
3 F
(LocalIsSymbol\050\051) 243.7 602.33 T
1 F
( catches just about everything else.) 327.96 602.33 T
3 F
(LocalIsControl\050\051) 180 589.33 T
1 F
( detects control characters \050e.g. Control-A\051.) 265.56 589.33 T
3 F
-0.97 (LocalIsDigit\050\051) 180 576.33 P
1 F
-0.94 ( returns) 251.84 576.33 P
4 F
-0.94 (true) 290.15 576.33 P
1 F
-0.94 ( for decimal digits.) 308.66 576.33 P
3 F
-0.97 (LocalIsHexDigit\050\051) 393.44 576.33 P
1 F
-0.94 ( approves) 485.83 576.33 P
(hexadecimal digits \050including the characters a-f, A-F\051.) 180 563.33 T
3 F
-0.18 (LocalIsAlphaNumeric\050\051) 180 550.33 P
1 F
-0.18 ( detects alphabetic characters and decimal digits.) 301.48 550.33 P
3 F
-0.43 (LocalIsPrintable\050\051) 180 537.33 P
1 F
-0.41 ( returns true when passed a character which takes up a) 275.18 537.33 P
(space when printed, corresponding to the standard C function) 180 524.33 T
3 F
(isprint\050\051) 468.33 524.33 T
1 F
(.) 511.48 524.33 T
3 F
(LocalIsGraphic\050\051) 180 511.33 T
1 F
( checks for displayable characters, in the manner of the) 268.15 511.33 T
(standard) 180 498.33 T
1 9 Q
(C) 224.45 498.33 T
1 10 Q
( function) 230.95 498.33 T
3 F
(isgraphic\050\051) 274.65 498.33 T
1 F
(.) 331.32 498.33 T
0 14 Q
(8.5.5) 130.86 456 T
0 18 Q
(Lexical V) 180 456 T
(alues) 257.06 456 T
5 10 Q
(LocalLexicalValue\050\051, LocalLexicalValueNoCase\050\051) 180 432.33 T
1 F
(If for some reason you want to get the lexical value of a character) 180 412.33 T
(, these) 480.58 412.33 T
(functions will return it.) 180 399.33 T
3 F
(LocalLexicalV) 290.93 399.33 T
(alue\050\051) 364.08 399.33 T
1 F
(, passed a character) 394.08 399.33 T
(, returns) 485.2 399.33 T
(its lexical value.) 180 386.33 T
3 F
(LocalLexicalV) 257.8 386.33 T
(alueNoCase\050\051) 330.95 386.33 T
1 F
( does the same thing but) 400.02 386.33 T
-0.47 (ignores case. If the lexical value for one character is lower than another) 180 373.33 P
-0.47 (, that) 504.15 373.33 P
(character comes \336rst alphabetically) 180 360.33 T
(. For instance, \322a\323 would have a lower) 343.53 360.33 T
(lexical value than \322z.\323 This ordering will be valid in any language using the) 180 347.33 T
(same character set.) 180 334.33 T
0 14 Q
(8.5.6) 130.86 292 T
0 18 Q
(DOS T) 180 292 T
(ext & Code Pages) 233.68 292 T
5 10 Q
(LocalDosToGeos\050\051, LocalGeosToDos\050\051, LocalDosToGeosChar\050\051,) 180 268.33 T
(LocalGeosToDosChar\050\051, LocalCmpStringsDosToGeos\050\051,) 180 255.33 T
(LocalIsDosChar\050\051, LocalCodePageToGeos\050\051,) 180 242.33 T
(LocalGeosToCodePage\050\051, LocalCodePageToGeosChar\050\051,) 180 229.33 T
(LocalGeosToCodePageChar\050\051, LocalGetCodePage\050\051,) 180 216.33 T
(LocalIsCodePageSupported\050\051) 180 203.33 T
1 F
-0.01 (There are several functions which work with) 180 183.33 P
1 9 Q
-0.01 ( DOS) 386.45 183.33 P
1 10 Q
-0.01 (-format text, converting it) 408.62 183.33 P
(to and from) 180 170.33 T
1 9 Q
(GEOS) 236.3 170.33 T
1 10 Q
( format. Normally) 262.47 170.33 T
(, converting) 344.52 170.33 T
1 9 Q
(DOS) 401.74 170.33 T
1 10 Q
( text \336les to GeoW) 421.42 170.33 T
(rite) 505.51 170.33 T
(documents is handled by Import/Export routines; for those occasions where) 180 157.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "350" 16
%%Page: "351" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Lexical Functions) 439.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(351) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(8.5) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(your code needs to convert) 180 641.33 T
1 9 Q
(DOS) 304.62 641.33 T
1 10 Q
( text to) 324.29 641.33 T
1 9 Q
(GEOS) 359.67 641.33 T
1 10 Q
( format or vice versa, however) 385.85 641.33 T
(,) 524 641.33 T
(these functions should be suf\336cient. They are localized because) 180 628.33 T
1 9 Q
(DOS) 473.72 628.33 T
1 10 Q
( has its) 493.39 628.33 T
(own version of localization which it implements as \322code pages.\323 Each code) 180 615.33 T
(page is a table of characters. Countries or regions with unusual characters) 180 602.33 T
(have different code pages. If you haven\325) 180 589.33 T
(t worked with code pages up to this) 361.86 589.33 T
-0.19 (point, you probably won\325) 180 576.33 P
-0.19 (t have to start now but can just rely on) 292.05 576.33 P
1 9 Q
-0.17 (GEOS) 472.42 576.33 P
1 10 Q
-0.19 ( to use) 498.59 576.33 P
-0.44 (the native code page correctly) 180 563.33 P
-0.44 (. If your geode is going to allow computers from) 314.33 563.33 P
(one country to communicate with those of another) 180 550.33 T
(, you might need to use) 410.56 550.33 T
(specialized functions.) 180 537.33 T
(Assuming you want to use the code page native to the user) 180 517.33 T
(\325) 451.69 517.33 T
(s machine, you) 453.36 517.33 T
-0.77 (can use) 180 504.33 P
3 F
-0.8 (LocalDosT) 215.86 504.33 P
-0.8 (oGeos\050\051) 270.12 504.33 P
1 F
-0.77 ( and) 309.19 504.33 P
3 F
-0.8 (LocalGeosT) 330.62 504.33 P
-0.8 (oDos\050\051) 390.62 504.33 P
1 F
-0.77 ( to convert strings from) 423.95 504.33 P
(one text format to the other) 180 491.33 T
(.) 306.86 491.33 T
3 F
(LocalDosT) 312.42 491.33 T
(oGeosChar\050\051) 366.68 491.33 T
1 F
( and) 431.68 491.33 T
3 F
(LocalGeosT) 180 478.33 T
(oDosChar\050\051) 240 478.33 T
1 F
( work similarly) 299.26 478.33 T
(, converting a single character) 368.35 478.33 T
(.) 507.24 478.33 T
3 F
-0.2 (LocalCmpStringsDosT) 182.58 458.33 P
-0.2 (oGeos\050\051) 298.7 458.33 P
1 F
-0.2 ( takes two strings, converts one or both of) 337.77 458.33 P
-0.63 (them to) 180 445.33 P
1 9 Q
-0.57 (GEOS) 217.08 445.33 P
1 10 Q
-0.63 ( format, then compares them, returning the same values as the) 243.26 445.33 P
(regular string comparing functions. Pass a) 180 432.33 T
3 F
(LocalCmpStringsDosT) 180 419.33 T
(oGeosFlags) 296.12 419.33 T
1 F
( to specify which strings to convert) 355.37 419.33 T
(before comparing.) 180 406.33 T
(Each of these functions also takes a character as an argument. When a) 180 386.33 T
(character in one format has no corresponding character in the format it\325) 180 373.33 T
(s) 511.48 373.33 T
-0.15 (being converted to, the character argument will be substituted. At the same) 180 360.33 P
-0.58 (time a \337ag will be set to let your geode know that there were some characters) 180 347.33 P
(that couldn\325) 180 334.33 T
(t be converted nicely) 234.64 334.33 T
(.) 328.53 334.33 T
3 F
(LocalIsDosChar\050\051) 334.09 334.33 T
1 F
( checks a) 425.2 334.33 T
1 9 Q
(GEOS) 469.65 334.33 T
1 10 Q
(character to see if it maps into a) 180 321.33 T
1 9 Q
(DOS) 331.69 321.33 T
1 10 Q
( character) 351.36 321.33 T
(. The) 397.28 321.33 T
1 9 Q
(MIN_MAP_CHAR) 423.4 321.33 T
1 10 Q
-0.45 (constant is the smallest value which may need to be mapped. If a character) 180 308.33 P
-0.45 (\325) 522.37 308.33 P
-0.45 (s) 524.04 308.33 P
(value is below this constant, then it will be the same under any code page.) 180 295.33 T
(If your geode is interested in which code page it\325) 180 275.33 T
(s using, the) 401.49 275.33 T
3 F
-0.88 (LocalGetCodePage\050\051) 180 262.33 P
1 F
-0.86 ( instruction will tell you what the default code page is.) 286.48 262.33 P
(If you want to use a code page other than the native one, the) 180 249.33 T
3 F
(LocalCodePageT) 180 236.33 T
(oGeos\050\051) 266.67 236.33 T
1 F
(,) 305.74 236.33 T
3 F
(LocalGeosT) 311.3 236.33 T
(oCodePage\050\051) 371.3 236.33 T
1 F
(,) 437.04 236.33 T
3 F
(LocalCodePageT) 180 223.33 T
(oGeosChar\050\051) 266.67 223.33 T
1 F
(, and) 331.67 223.33 T
3 F
(LocalGeosT) 357.42 223.33 T
(oCodePageChar\050\051) 417.42 223.33 T
1 F
-0.17 (behave as their default code page equivalents, except that each takes a code) 180 210.33 P
-0.73 (page as an argument to be used in conversion. A number of support code page) 180 197.33 P
(values are enumerated in the) 180 184.33 T
3 F
(DosCodePage) 318.72 184.33 T
1 F
( type. T) 390.01 184.33 T
(o \336nd out whether the) 424.1 184.33 T
(user) 180 171.33 T
(\325) 200.73 171.33 T
(s environment supports a speci\336c code page, call) 202.4 171.33 T
3 F
(LocalIsCodePageSupported\050\051) 180 158.33 T
1 F
(.) 332.42 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "351" 17
%%Page: "352" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Localization) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(352) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(8.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "352" 18
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 18
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%+ Courier
%%+ Courier-Bold
%%+ Helvetica
%%EOF
