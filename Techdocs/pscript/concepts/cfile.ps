%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 19 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Italic FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /NewCenturySchlbk-Bold FMFONTDEFINE
6 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "611" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Design Philosophy) 431.97 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(611) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
(Every operating system needs a way to interact with \336les. Files are used to) 180 598.33 T
(hold both data and executable code. They are also the simplest way of) 180 585.33 T
(transferring data from one computer to another) 180 572.33 T
(.) 399.44 572.33 T
1 9 Q
(GEOS) 180 552.33 T
1 10 Q
( provides powerful \336le-management functionality) 206.17 552.33 T
(. It runs on top of a) 433.03 552.33 T
-0.23 (disk-operating system, and uses that) 180 539.33 P
1 9 Q
-0.21 (DOS) 352.2 539.33 P
1 10 Q
-0.23 ( to read \336les from different media.) 371.87 539.33 P
(Applications which run under) 180 526.33 T
1 9 Q
(GEOS) 320.55 526.33 T
1 10 Q
( need only interact with the) 346.72 526.33 T
1 9 Q
(GEOS) 477.29 526.33 T
1 10 Q
(\336le-management system; they are insulated from the differences between) 180 513.33 T
(versions of) 180 500.33 T
1 9 Q
(DOS) 232.22 500.33 T
1 10 Q
(. They are also insulated from the differences between) 251.89 500.33 T
(various \336le-storage media:) 180 487.33 T
1 9 Q
(CD-ROM) 305.2 487.33 T
1 10 Q
( drives, network \336le servers, and \337oppy) 343.69 487.33 T
(and hard disks all present the same interface.) 180 474.33 T
(The) 180 454.33 T
1 9 Q
(GEOS) 200.56 454.33 T
1 10 Q
( \336le system provides functionality that many versions of) 226.73 454.33 T
1 9 Q
(DOS) 488.79 454.33 T
1 10 Q
( do) 508.47 454.33 T
-0.63 (not have. It allows the use of virtual directories, so \050for example\051 the system\325) 180 441.33 P
-0.63 (s) 524.22 441.33 P
1 9 Q
(FONT) 180 428.33 T
1 10 Q
( directory could actually comprise several physical directories.) 206.34 428.33 T
1 9 Q
(GEOS) 495.97 428.33 T
1 10 Q
(\336les have functionality which) 180 415.33 T
1 9 Q
(DOS) 318.9 415.33 T
1 10 Q
( \336les lack. For example,) 338.57 415.33 T
1 9 Q
(GEOS) 450.82 415.33 T
1 10 Q
( provides) 477 415.33 T
(support for \336le-sharing and data-access synchronization across networks.) 180 402.33 T
(Nevertheless,) 180 389.33 T
1 9 Q
(GEOS) 245.93 389.33 T
1 10 Q
( lets applications access standard) 272.1 389.33 T
1 9 Q
(DOS) 429.16 389.33 T
1 10 Q
( \336les and) 448.84 389.33 T
(directories when desired.) 180 376.33 T
(Y) 180 356.33 T
(ou may not need to use much of the \336le system directly) 185.93 356.33 T
(. The document) 438.54 356.33 T
(control and \336le-selector objects can let the user select and open \336les) 180 343.33 T
(transparently to the application. Many applications will never need to) 180 330.33 T
(negotiate the directory structure.) 180 317.33 T
(Before reading this section, you should have read \322System Architecture,\323) 180 297.33 T
(Chapter) 180 284.33 T
(3, and \322First Steps: Hello W) 220.74 284.33 T
(orld,\323 Chapter) 349.29 284.33 T
(4. Y) 417.81 284.33 T
(ou should also be) 434.86 284.33 T
(familiar with) 180 271.33 T
1 9 Q
(GEOS) 243.72 271.33 T
1 10 Q
( handles \050discussed in \322Handles,\323 Chapter) 269.89 271.33 T
(14\051.) 466.57 271.33 T
0 14 Q
(17.1) 134.76 219 T
0 24 Q
(Design Philosophy) 180 219 T
1 10 Q
(The) 180 193.33 T
1 9 Q
(GEOS) 200.56 193.33 T
1 10 Q
( \336le system was designed to meet two goals. First, the \336le system) 226.73 193.33 T
(should insulate geodes from differences in hardware, making them device) 180 180.33 T
(independent; and second, it should give geodes all the functionality they) 180 167.33 T
(might plausibly want without being cumbersome.) 180 154.33 T
81 144 531 648 C
235.5 630 376.5 638 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.5 630 376.5 638 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
81 257.13 171 303.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 X
0 0 0 1 0 0 0 K
90 450 13.5 13.5 101.25 279.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 279.33 A
0 0 0 1 0 0 0 K
81 259.21 121.5 299.71 R
1 H
0 X
N
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "611" 1
%%Page: "612" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(612) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(One of the hallmarks of) 180 641.33 T
1 9 Q
(GEOS) 291.87 641.33 T
1 10 Q
( is its ability to insulate applications from) 318.04 641.33 T
(differences in hardware. The) 180 628.33 T
1 9 Q
(GEOS) 315.74 628.33 T
1 10 Q
( \336le system plays a large role in this.) 341.91 628.33 T
(Geodes which need access to \336les make their requests to the) 180 615.33 T
1 9 Q
(GEOS) 460.77 615.33 T
1 10 Q
( \336le) 486.94 615.33 T
(system, which accesses the actual storage media. The virtues of this) 180 602.33 T
(approach are several:) 180 589.33 T
2 F
(u) 180 569.33 T
1 F
(Geodes can rely on a consistent) 198 569.33 T
1 9 Q
(API) 345.42 569.33 T
1 10 Q
( for accessing media. When an) 361.58 569.33 T
(application needs to open a \336le, it uses exactly the same techniques) 198 557.33 T
-0.68 (whether the \336le resides on a hard or \337oppy disk, a network drive, or some) 198 545.33 P
(other medium.) 198 533.33 T
2 F
(u) 180 514.33 T
1 9 Q
(GEOS) 198 514.33 T
1 10 Q
( can easily expand to make use of new technologies. T) 224.17 514.33 T
(o support a) 471.07 514.33 T
(new storage medium,) 198 502.33 T
1 9 Q
(GEOS) 299.68 502.33 T
1 10 Q
( just needs a new device driver; all existing) 325.85 502.33 T
(application binaries will automatically work with the new device.) 198 490.33 T
2 F
(u) 180 471.33 T
1 F
(Applications need not worry about what) 198 471.33 T
1 9 Q
(DOS) 385.8 471.33 T
1 10 Q
( the system might be) 405.47 471.33 T
(running under) 198 459.33 T
(. The) 264.84 459.33 T
1 9 Q
(GEOS) 290.96 459.33 T
1 10 Q
( \336le system does all interaction with the) 317.13 459.33 T
1 9 Q
(DOS) 504.94 459.33 T
1 10 Q
(and automatically takes advantages of each) 198 447.33 T
1 9 Q
(DOS) 403.05 447.33 T
1 10 Q
(\325 strengths. T) 422.72 447.33 T
(o support) 482.92 447.33 T
(new versions of) 198 435.33 T
1 9 Q
(DOS) 271.89 435.33 T
1 10 Q
(,) 291.56 435.33 T
1 9 Q
(GEOS) 297.12 435.33 T
1 10 Q
( just needs new drivers.) 323.3 435.33 T
1 9 Q
-0.3 (GEOS) 180 416.33 P
1 10 Q
-0.34 ( is also \337exible. Flexibility means more than just being able to use new) 206.17 416.33 P
(technology in the same old ways; it means providing functionality to serve) 180 403.33 T
(unforeseen purposes.) 180 390.33 T
1 9 Q
(GEOS) 280.36 390.33 T
1 10 Q
( provides this:) 306.53 390.33 T
2 F
(u) 180 370.33 T
1 F
-0.05 (The \336le system allows such advanced functionality as virtual paths and) 198 370.33 P
(directories. Files can thus be distributed across various media \050for) 198 358.33 T
(example, templates and fonts on) 198 346.33 T
1 9 Q
(CD-ROM) 350.62 346.33 T
1 10 Q
( drives, company \336les on a) 389.11 346.33 T
(network drive, other documents on local hard disks\051 transparently to) 198 334.33 T
(both user and application.) 198 322.33 T
2 F
(u) 180 303.33 T
1 F
(Other functionality can be added. For example, all) 198 303.33 T
1 9 Q
(GEOS) 433.41 303.33 T
1 10 Q
( \336les can have) 459.58 303.33 T
(names up to 32 characters long, regardless of strictures on individual) 198 291.33 T
(media. The \336le system maps the) 198 279.33 T
1 9 Q
(GEOS) 350.07 279.33 T
1 10 Q
( \322virtual names\323 to) 376.24 279.33 T
(device-dependent \322native names\323 transparently to the user and) 198 267.33 T
(application.) 198 255.33 T
(While) 180 236.33 T
1 9 Q
(GEOS) 210 236.33 T
1 10 Q
( provides this advanced functionality) 236.17 236.33 T
(, it still lets geodes access) 405.81 236.33 T
(the raw \336les. If a geode wants to access any \336le as a sequence of bytes \050the) 180 223.33 T
1 9 Q
(DOS) 180 210.33 T
1 10 Q
( model\051, it may do so. Similarly) 199.67 210.33 T
(, geodes may work with physical) 342.3 210.33 T
1 9 Q
(DOS) 494.55 210.33 T
1 10 Q
(directories if they wish to.) 180 197.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "612" 2
%%Page: "613" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System Overview) 414.04 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(613) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.2) 134.76 632 T
0 24 Q
(File System Overview) 180 632 T
1 10 Q
(The) 180 606.33 T
1 9 Q
(GEOS) 200.56 606.33 T
1 10 Q
( \336le system manages all access to \336les on any type of storage.) 226.73 606.33 T
(Whenever a geode needs to access a data \336le, it calls a \336le system routine.) 180 593.33 T
-0.44 (The \336le system makes any necessary calls to the computer) 180 580.33 P
-0.44 (\325) 446.6 580.33 P
-0.44 (s) 448.27 580.33 P
1 9 Q
-0.4 (DOS) 455.23 580.33 P
1 10 Q
-0.44 (. Like much) 474.91 580.33 P
-0.24 (of the) 180 567.33 P
1 9 Q
-0.22 (GEOS) 208.4 567.33 P
1 10 Q
-0.24 ( system, it is driver) 234.58 567.33 P
-0.24 (-based; this makes it easy to expand) 322.7 567.33 P
1 9 Q
-0.22 (GEOS) 490.86 567.33 P
1 10 Q
-0.24 ( to) 517.03 567.33 P
(accommodate new technologies.) 180 554.33 T
-0.48 (When a geode needs to access a \336le, it makes a call to the \336le system. The \336le) 180 534.33 P
(system sends requests through the appropriate driver) 180 521.33 T
(. For example, if the) 428.15 521.33 T
-0.65 (geode needs access to a \336le on a local hard or \337oppy disk drive, the \336le system) 180 508.33 P
(will send commands through a) 180 495.33 T
1 9 Q
(DOS) 324.46 495.33 T
1 10 Q
( driver) 344.13 495.33 T
(, which will in turn issue) 374.31 495.33 T
(appropriate commands to the) 180 482.33 T
1 9 Q
(DOS) 318.53 482.33 T
1 10 Q
( itself. Similarly) 338.2 482.33 T
(, if the \336le resides on a) 411.74 482.33 T
(network drive, the \336le system will send commands through an appropriate) 180 469.33 T
(network driver) 180 456.33 T
(, which will translate them into corresponding commands to) 248.33 456.33 T
(the network server) 180 443.33 T
(. \050See Figure) 266.85 443.33 T
(17-) 328.34 443.33 T
(1 below) 342.79 443.33 T
(.\051) 376.7 443.33 T
81 144 531 648 C
180 144 531 419.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
262.83 396.17 298.67 412.83 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
0 Z
0 X
N
0 10 Q
(Figure) 180 189.81 T
(17-) 213.34 189.81 T
(1) 227.79 189.81 T
3 F
(Accessing Files Through the File System) 236.13 189.81 T
-0.1 (The application interacts only with the \336le system or a library built on top of) 180 175.81 P
(it \050such as the VM library\051. Everything below that is transparent to both) 180 163.81 T
(application and user) 180 151.81 T
(. Arrows depict the \337ow of commands and data.) 273.68 151.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
(Geode) 266.86 400.82 T
394.17 396.17 430 412.83 R
7 X
V
0 X
N
(Geode) 398.2 400.82 T
182.67 358.33 521.83 358.33 2 L
7 X
V
1 H
2 Z
10 X
N
246.92 350 314.58 366.67 R
7 X
V
0.5 H
0 Z
0 X
N
(VM Library) 253.53 354.65 T
378.25 350 445.92 366.67 R
7 X
V
0 X
N
(File System) 385.33 354.65 T
277.75 390.97 280.75 396.17 283.75 390.97 280.75 390.97 4 Y
V
283.75 372.7 280.75 367.5 277.75 372.7 280.75 372.7 4 Y
V
280.75 390.97 280.75 372.7 2 L
7 X
V
1 H
0 X
N
409.08 390.97 412.08 396.17 415.08 390.97 412.08 390.97 4 Y
V
415.08 371.03 412.08 365.83 409.08 371.03 412.08 371.03 4 Y
V
412.08 390.97 412.08 371.03 2 L
7 X
V
0 X
N
277.75 343.97 280.75 349.17 283.75 343.97 280.75 343.97 4 Y
V
385.5 344.8 388.5 350 391.5 344.8 388.5 344.8 4 Y
V
280.75 343.97 280.75 333.33 388.5 333.33 388.5 344.8 4 L
N
234.59 287 302.25 303.67 R
7 X
V
0.5 H
0 X
N
3 9 Q
(DOS) 242.21 291.65 T
3 10 Q
( Driver) 262.22 291.65 T
0 0 0 1 0 0 0 K
197.92 234.58 267.92 252.91 R
1 H
N
0 0 0 1 0 0 0 K
267.92 240.41 197.92 240.41 2 L
2 Z
N
197.92 242.08 267.08 242.08 2 L
N
0 0 0 1 0 0 0 K
200.42 247.91 207.92 250.41 R
0 Z
N
0 0 0 1 0 0 0 K
(Hard Drive) 206.63 225.22 T
0 0 0 1 0 0 0 K
284.67 237.08 323.83 252.91 R
N
0 0 0 1 0 0 0 K
290.39 245 318.11 245 2 L
2 Z
N
301.54 240.43 306.96 249.57 R
7 X
V
0 Z
0 X
N
(Floppy) 287.12 227.7 T
(Drive) 291.66 217.7 T
253.83 281.8 256.83 287 259.83 281.8 256.83 281.8 4 Y
V
236.5 258.11 233.5 252.91 230.5 258.11 233.5 258.11 4 Y
V
256.83 281.8 256.83 272.81 233.5 272.81 233.5 258.11 4 L
N
265.5 281.8 268.5 287 271.5 281.8 268.5 281.8 4 Y
V
306.5 258.53 303.5 253.33 300.5 258.53 303.5 258.53 4 Y
V
268.5 281.8 268.5 272.81 303.5 272.81 303.5 258.53 4 L
N
400.5 344.8 403.5 350 406.5 344.8 403.5 344.8 4 Y
V
272.33 309.36 269.33 304.17 266.33 309.36 269.33 309.36 4 Y
V
403.5 344.8 403.5 323.33 269.33 323.33 269.33 309.36 4 L
N
408.42 287 486.92 303.67 R
7 X
V
0.5 H
0 X
N
3 9 Q
(Network) 413.97 291.65 T
3 10 Q
( Driver) 448.97 291.65 T
444.67 281.8 447.67 287 450.67 281.8 447.67 281.8 4 Y
V
450.67 259.36 447.67 254.17 444.67 259.36 447.67 259.36 4 Y
V
447.67 281.8 447.67 259.36 2 L
7 X
V
1 H
0 X
N
411.33 344.8 414.33 350 417.33 344.8 414.33 344.8 4 Y
V
451.42 308.53 448.42 303.33 445.42 308.53 448.42 308.53 4 Y
V
414.33 344.8 414.33 323.33 448.42 323.33 448.42 308.53 4 L
N
398.5 233.33 496.83 233.33 2 L
2 Z
N
398.5 230.33 496.83 230.33 2 L
N
421.83 225.41 473.5 252.91 R
7 X
V
0 Z
0 X
N
425.17 245.73 432.43 248.48 R
7 X
V
0 X
N
432.43 245.73 439.7 248.48 R
7 X
V
0 X
N
439.7 245.73 446.97 248.48 R
7 X
V
0 X
N
446.97 245.73 454.23 248.48 R
7 X
V
0 X
N
454.23 245.73 461.5 248.48 R
7 X
V
0 X
N
421.83 235.83 473.5 235.83 2 L
7 X
V
0.5 H
2 Z
0 X
N
421.83 233.83 473.5 233.83 2 L
7 X
V
0 X
N
421.83 231.83 473.5 231.83 2 L
7 X
V
0 X
N
(Network) 428.92 214.38 T
(Server) 434.94 204.38 T
427.83 223.75 433.67 225.41 R
7 X
V
0 Z
0 X
N
461.67 223.75 467.5 225.41 R
7 X
V
0 X
N
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "613" 3
%%Page: "614" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(614) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Every storage device is known as a) 180 641.33 T
3 F
(drive.) 343.91 641.33 T
1 F
( A drive can be either \336xed-media) 370.2 641.33 T
(or movable-media. Fixed media drives are always associated with a speci\336c) 180 628.33 T
-0.16 (storage medium; in effect, the drive is the same as the storage. The primary) 180 615.33 P
(example of this is the conventional hard disk. Movable-media drives use a) 180 602.33 T
(potentially unlimited number of storage objects. Examples include \337oppy) 180 589.33 T
(disk drives,) 180 576.33 T
1 9 Q
(CD-ROM) 236.12 576.33 T
1 10 Q
( drives, and cartridge hard drives.) 274.61 576.33 T
(One way of organizing storage objects is to divide them into) 180 556.33 T
3 F
(volumes) 457.81 556.33 T
1 F
(.) 495.21 556.33 T
-0.77 (Ordinarily) 180 543.33 P
-0.77 (, every disk \050\337oppy or hard\051 is a single volume; however) 227.78 543.33 P
-0.77 (, hard disks) 476.25 543.33 P
(are sometimes divided into several volumes. Network storage devices are) 180 530.33 T
(frequently divided into several volumes. If a single drive is partitioned into) 180 517.33 T
(several volumes,) 180 504.33 T
1 9 Q
(DOS) 259.64 504.33 T
1 10 Q
( and) 279.31 504.33 T
1 9 Q
(GEOS) 302.28 504.33 T
1 10 Q
( treat each volume as a separate drive. In) 328.46 504.33 T
(this chapter) 180 491.33 T
(, the words) 235 491.33 T
3 F
(volume) 288.71 491.33 T
1 F
( and) 321.67 491.33 T
3 F
(disk) 344.64 491.33 T
1 F
( will be used interchangeably) 364.08 491.33 T
(.) 498.18 491.33 T
(Individual volumes are organized with) 180 471.33 T
3 F
(directories.) 361.31 471.33 T
1 F
( A directory may contain) 412.02 471.33 T
(several different \336les or directories. There is not usually a limit on the) 180 458.33 T
(number of \336les a directory may contain; however) 180 445.33 T
(, no two \336les or directories) 404.64 445.33 T
(belonging to a given directory may have the same name.) 180 432.33 T
-0.71 (Every volume is organized in a) 180 412.33 P
3 F
-0.71 (directory tree) 321.14 412.33 P
1 F
-0.71 (. The topmost directory is known) 380.78 412.33 P
(as the) 180 399.33 T
3 F
(root) 210.75 399.33 T
1 F
(; it is unnamed, since every volume contains exactly one root) 228.71 399.33 T
(directory) 180 386.33 T
(. The root may contain \336les or directories. Those directories may) 220.36 386.33 T
-0.37 (themselves contain \336les or directories, and so on. The total number of \336les is) 180 373.33 P
(usually limited only by the size of the storage device.) 180 360.33 T
-0.28 (T) 180 340.33 P
-0.28 (o specify a \336le, you need to specify three things: The volume the \336le resides) 185.75 340.33 P
(on, the directory to which the \336le belongs, and the \336le\325) 180 327.33 T
(s name. In most) 429.84 327.33 T
1 9 Q
(DOS) 506.52 327.33 T
1 10 Q
(environments, a volume is generally speci\336ed with a letter followed by a) 180 314.33 T
(colon \050for example, the \336rst hard disk is generally speci\336ed as \322) 180 301.33 T
1 9 Q
(C) 472.06 301.33 T
1 10 Q
(:\323\051. For) 478.56 301.33 T
-0.31 (non-\336xed media \050e.g. \337oppy disks\051, the letter actually speci\336es the drive; the) 180 288.33 P
(volume is presumed to be in that drive. In) 180 275.33 T
1 9 Q
(GEOS) 376.69 275.33 T
1 10 Q
(, volumes and drives have) 402.86 275.33 T
(different identifying systems. Every drive is identi\336ed by a) 180 262.33 T
3 F
(drive number) 454.46 262.33 T
1 F
(.) 515.56 262.33 T
(This is a positive integer; the \336rst drive has a number of zero, the second is) 180 249.33 T
-0.16 (drive one, and so on. Every volume is identi\336ed by a token \050the) 180 236.33 P
3 F
-0.16 (disk handle) 470.98 236.33 P
1 F
-0.16 (\051.) 524.89 236.33 P
(Specifying the directory is a little trickier) 180 216.33 T
(. There may be many directories) 370.38 216.33 T
(with the same name on a given volume. For this reason, the directory is) 180 203.33 T
(speci\336ed with a) 180 190.33 T
3 F
(path.) 254.64 190.33 T
1 F
( The path begins with the root directory; the root is) 278.53 190.33 T
(followed by the name of one of the directories belonging to the root; that) 180 177.33 T
-0.35 (directory is followed by the name of one of its subdirectories; and so on, until) 180 164.33 P
-0.55 (the desired directory is reached. Since all the directories belonging to a given) 180 151.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "614" 4
%%Page: "615" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System Overview) 414.04 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(615) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(directory must have unique names, the path is guaranteed to uniquely) 180 641.33 T
(specify a directory on a volume. For example, you might specify a directory) 180 628.33 T
(as \322\134) 180 615.33 T
1 9 Q
(GEOWORKS) 202.92 615.33 T
1 10 Q
(\134) 258.42 615.33 T
1 9 Q
(DOCUMENT) 264.48 615.33 T
1 10 Q
(\134) 320.65 615.33 T
1 9 Q
(MEMOS) 326.71 615.33 T
1 10 Q
(\323; this would indicate d directory) 362.87 615.33 T
(named \322) 180 602.33 T
1 9 Q
(MEMOS) 217.97 602.33 T
1 10 Q
(,\323 which belongs to a directory named \322) 254.13 602.33 T
1 9 Q
(DOCUMENT) 433.78 602.33 T
1 10 Q
(,\323 which) 489.03 602.33 T
(in turn belonged to a directory named \322) 180 589.33 T
1 9 Q
(GEOWORKS) 361.31 589.33 T
1 10 Q
(,\323 which was at the root) 416.81 589.33 T
(level.) 180 576.33 T
-0.17 (The \336le itself is identi\336ed by its name. Since its directory has been uniquely) 180 556.33 P
-0.16 (speci\336ed by the volume and path, the name is guaranteed to specify at most) 180 543.33 P
-0.75 (one \336le in that directory) 180 530.33 P
-0.75 (. Each disk-operating system has its own conventions) 287.55 530.33 P
-0.79 (about how \336le names can be formed; for example,) 180 517.33 P
1 9 Q
-0.71 (MS-DOS) 403.44 517.33 P
1 10 Q
-0.79 ( requires \336le names) 440.28 517.33 P
-0.03 (to have a \322name\323 portion of at most eight letters, followed by an \322extension\323) 180 504.33 P
(of at most three letters \050known as the \322) 180 491.33 T
1 9 Q
(FILENAME.EXT) 360.21 491.33 T
1 10 Q
(\323 convention\051. \050See) 432.54 491.33 T
(Figure) 180 478.33 T
(17-) 213.52 478.33 T
(2.\051) 227.97 478.33 T
(For convenience, most operating systems let you specify a \322working) 180 458.33 T
(directory) 180 445.33 T
(.\323 This is a combination of a volume and a path. If you have a) 220.36 445.33 T
(working directory) 180 432.33 T
(, you can omit either the volume or the path from a \336le) 260.92 432.33 T
(speci\336cation, and the volume and/or path of the working directory will be) 180 419.33 T
-0.7 (used. This is called a \322relative path,\323 i.e. a path that is relative to the working) 180 406.33 P
-0.31 (directory instead of the root directory) 180 393.33 P
-0.31 (. \050Note that if you specify a disk handle) 349.9 393.33 P
-0.54 (for any operation, you must pass an absolute path which begins at the root of) 180 380.33 P
(that disk or standard path.\051) 180 367.33 T
1 9 Q
(GEOS) 311.32 367.33 T
1 10 Q
( allows every thread to have its own) 337.49 367.33 T
(working directory; each thread can also save paths on a stack, letting the) 180 354.33 T
81 144 531 648 C
180 144 531 325.64 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
480.24 233.58 489.33 228.33 480.24 223.08 480.24 228.33 4 Y
5 X
0 0 0 1 0 0 0 K
V
187.67 241.36 250.17 241.36 250.17 263.33 336.83 263.33 336.83 245 431.83 245 431.83 228.33
 480.24 228.33 8 L
3 H
2 Z
N
3 10 Q
0 X
(root) 187.67 241.36 T
(SLEEPY) 273.15 258.19 T
(SNEEZY) 273.15 289.79 T
(SLEAZY) 273.15 226.58 T
(GRUMPY) 273.15 194.97 T
(HUEY) 356.88 290.32 T
(DEWEY) 356.88 266.35 T
(LOUIE) 356.88 242.38 T
(DONALD) 356.88 218.41 T
(SCROOGE.UNC) 356.88 194.45 T
(GOOFY) 459.67 257.05 T
(CHIP) 459.67 242.38 T
(DALE) 459.67 227.72 T
209.33 244.17 247.67 244.17 247.67 292.5 247.67 197.5 4 L
0.5 H
0 Z
N
264.97 295.5 270.17 292.5 264.97 289.5 264.97 292.5 4 Y
V
247.67 292.5 264.97 292.5 2 L
N
264.97 264.17 270.17 261.17 264.97 258.17 264.97 261.17 4 Y
V
247.67 261.17 264.97 261.17 2 L
N
264.97 233.67 270.17 230.67 264.97 227.67 264.97 230.67 4 Y
V
247.67 230.67 264.97 230.67 2 L
N
265.01 200.48 270.2 197.48 265.01 194.48 265.01 197.48 4 Y
V
247.67 197.48 265.01 197.48 2 L
N
316.83 261.66 336.83 261.66 2 L
2 Z
N
336.83 196.66 336.83 293.33 2 L
0 Z
N
348.3 296.33 353.5 293.33 348.3 290.33 348.3 293.33 4 Y
V
336.83 293.33 348.3 293.33 2 L
N
348.3 272.5 353.5 269.5 348.3 266.5 348.3 269.5 4 Y
V
336.83 269.5 348.3 269.5 2 L
N
348.3 248.66 353.5 245.66 348.3 242.67 348.3 245.66 4 Y
V
336.83 245.66 348.3 245.66 2 L
N
348.3 224.83 353.5 221.83 348.3 218.83 348.3 221.83 4 Y
V
336.83 221.83 348.3 221.83 2 L
N
348.24 199.69 353.44 196.69 348.24 193.69 348.24 196.69 4 Y
V
336.8 196.69 348.24 196.69 2 L
N
396.83 245 431.83 245 2 L
2 Z
N
431.83 228.33 431.83 260 2 L
0 Z
N
449.97 263 455.17 260 449.97 257 449.97 260 4 Y
V
431.83 260 449.97 260 2 L
N
449.97 248.33 455.17 245.33 449.97 242.33 449.97 245.33 4 Y
V
431.83 245.33 449.97 245.33 2 L
N
449.98 231.3 455.17 228.3 449.98 225.3 449.98 228.3 4 Y
V
431.84 228.3 449.98 228.3 2 L
N
0 F
(Figure) 180 178.48 T
(17-) 213.34 178.48 T
(2) 227.79 178.48 T
3 F
(A Path Through a Directory T) 236.13 178.48 T
(ree) 373.19 178.48 T
(In MS-DOS, the highlighted path would be described as) 180 164.48 T
(\322\134SLEEPY\134LOUIE\134DALE\323.) 180 152.48 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "615" 5
%%Page: "616" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(616) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.11 (thread switch directories easily) 180 641.33 P
-0.11 (. For more details, see section 17.4.2 on page) 323.39 641.33 P
(636.) 180 628.33 T
-0.45 (Some disk-operating systems, such as) 180 608.33 P
1 9 Q
-0.41 (MS-DOS) 355.18 608.33 P
1 10 Q
-0.45 (, allow a working directory for) 392.02 608.33 P
(each drive.) 180 595.33 T
1 9 Q
(GEOS) 233.15 595.33 T
1 10 Q
( does not allow this; you may have only one working) 259.32 595.33 T
(directory at a time, regardless of how many drives you have. If you need to) 180 582.33 T
-0.74 (switch back and forth between directories on different drives, you can use the) 180 569.33 P
(directory stack \050see section 17.4.2 on page 636\051.) 180 556.33 T
0 14 Q
(17.3) 134.76 504 T
0 24 Q
(Disks and Drives) 180 504 T
1 9 Q
-0.75 (GEOS) 180 478.33 P
1 10 Q
-0.83 ( provides an easy interface to storage devices. Every drive \050or analogous) 206.17 478.33 P
(storage device\051 is identi\336ed by a token. Every volume is also identi\336ed by a) 180 465.33 T
(token. This enables you to easily move from one volume to another) 180 452.33 T
(.) 486.9 452.33 T
-0.21 (Y) 180 432.33 P
-0.21 (ou generally need only worry about disks and drives when you are opening) 185.93 432.33 P
(a \336le. Once you have a \336le open, you can access the \336le by its \336le handle) 180 419.33 T
-0.18 (without paying attention to the disk it resides on. The) 180 406.33 P
1 9 Q
-0.16 (GEOS) 430.51 406.33 P
1 10 Q
-0.18 ( \336le system will) 456.68 406.33 P
(automatically prompt the user to change disks whenever necessary) 180 393.33 T
(.) 489.28 393.33 T
(Note that if you use the document control object to open \336les, you will) 180 373.33 T
-0.03 (probably never have to worry about disks and drives. The document control) 180 360.33 P
-0.37 (automatically presents a File Selector dialog box to the user) 180 347.33 P
-0.37 (, letting the user) 452.84 347.33 P
(navigate among disks and directories; when the user selects a \336le, the) 180 334.33 T
-0.69 (document control will automatically open the \336le and return its handle to the) 180 321.33 P
(application.) 180 308.33 T
0 14 Q
(17.3.1) 123.08 266 T
0 18 Q
(Accessing Drives) 180 266 T
4 10 Q
(DriveGetStatus\050\051, DriveGetExtStatus\050\051,) 180 242.33 T
(DriveGetDefaultMedia\050\051, DriveTestMediaSupport\050\051,) 180 229.33 T
(DriveGetName\050\051, DriveStatus, DriveType, MediaType) 180 216.33 T
1 F
(Most systems running) 180 196.33 T
1 9 Q
(GEOS) 285.74 196.33 T
1 10 Q
( have access to a number of different drives.) 311.91 196.33 T
(W) 180 183.33 T
(ith the exception of network drives, the drives available will usually not) 189.44 183.33 T
-0.02 (change during an execution of) 180 170.33 P
1 9 Q
-0.01 (GEOS) 321.4 170.33 P
1 10 Q
-0.02 (, although the volumes mounted on the) 347.57 170.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "616" 6
%%Page: "617" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(617) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.29 (drives can change. Every drive is accessed by its) 180 641.33 P
3 F
-0.29 (drive number) 403.17 641.33 P
1 F
-0.29 (. This token is) 463.98 641.33 P
(a byte-length integer value.) 180 628.33 T
-0.33 (When you wish to open a \336le, you must specify its volume, not its drive. This) 180 608.33 P
-0.68 (is because the volume mounted on a drive can change frequently and without) 180 595.33 P
(warning.) 180 582.33 T
1 9 Q
(GEOS) 180 562.33 T
1 10 Q
( provides routines to get information about a drive. T) 206.17 562.33 T
(o get general) 450.28 562.33 T
(information about a drive, call the routine) 180 549.33 T
5 F
(DriveGetStatus\050\051) 377.25 549.33 T
1 F
(. This routine) 465.58 549.33 T
-0.12 (takes the drive number and returns a word-length set of) 180 536.33 P
5 F
-0.12 (DriveStatus) 441.79 536.33 P
1 F
-0.12 ( \337ags) 504.01 536.33 P
(\050de\336ned in) 180 523.33 T
5 F
(drive.h) 231.85 523.33 T
1 F
(\051. If an error condition exists, such as the drive you) 268.89 523.33 T
(request not existing, it returns zero. The following \337ags may be returned:) 180 510.33 T
1 9 Q
(DS_PRESENT) 180 490.33 T
1 10 Q
(This \337ag is set if the physical drive exists, regardless of) 243 478.33 T
(whether the drive contains a disk.) 243 466.33 T
1 9 Q
(DS_MEDIA_REMOV) 180 447.33 T
(ABLE) 267.82 447.33 T
1 10 Q
(This \337ag is set if the disk can be removed from the drive.) 243 435.33 T
1 9 Q
(DS_NETWORK) 180 416.33 T
1 10 Q
(This \337ag is set if the drive is accessed over a network \050or via) 243 404.33 T
-0.72 (network protocols\051, which means the drive cannot be formatted) 243 392.33 P
(or copied.) 243 380.33 T
1 9 Q
(DS_TYPE) 180 361.33 T
1 10 Q
(This is a mask for the lowest four bits of the \336eld. These bits) 243 361.33 T
(contain a member of the) 243 349.33 T
5 F
(DriveT) 357.83 349.33 T
(ype) 393.6 349.33 T
1 F
( enumerated type.) 412.12 349.33 T
(The lowest four bits of the word contains a member of the) 180 330.33 T
5 F
(DriveT) 448.55 330.33 T
(ype) 484.32 330.33 T
1 F
-0.67 (enumerated type. The \336eld can be accessed by masking out all the bits except) 180 317.33 P
(for those set in) 180 304.33 T
1 9 Q
(DS_TYPE) 251.3 304.33 T
1 10 Q
(.) 293.31 304.33 T
5 F
(DriveT) 298.87 304.33 T
(ype) 334.64 304.33 T
1 F
( comprises the following values:) 353.16 304.33 T
1 9 Q
(DRIVE_5_25) 180 284.33 T
1 10 Q
(Drive uses 5.25-inch \337oppy disks.) 243 284.33 T
1 9 Q
(DRIVE_3_5) 180 265.33 T
1 10 Q
(Drive uses 3.5-inch \337oppy disks.) 243 265.33 T
1 9 Q
(DRIVE_FIXED) 180 246.33 T
1 10 Q
(Drive uses some kind of \336xed disk \050e.g. a hard drive\051.) 243 234.33 T
1 9 Q
(DRIVE_RAM) 180 215.33 T
1 10 Q
(Drive is chip-based \050either) 243 215.33 T
1 9 Q
(RAM) 367.82 215.33 T
1 10 Q
( or) 389.31 215.33 T
1 9 Q
(ROM) 404.31 215.33 T
1 10 Q
(\051.) 426.31 215.33 T
1 9 Q
(DRIVE_CD_ROM) 180 196.33 T
1 10 Q
(Drive uses read-only optical disks.) 243 184.33 T
1 9 Q
(DRIVE_8) 180 165.33 T
1 10 Q
(Drive uses 8-inch \337oppy disks.) 243 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "617" 7
%%Page: "618" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(618) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(DRIVE_UNKNOWN) 180 641.33 T
1 10 Q
(Drive type is unknown.) 243 629.33 T
5 F
-0.61 (DriveGetStatus\050\051) 180 610.33 P
1 F
-0.59 ( returns the information most often needed about a drive.) 268.33 610.33 P
(However) 180 597.33 T
(, you may sometimes need more obscure information. For this) 220.18 597.33 T
(reason,) 180 584.33 T
1 9 Q
(GEOS) 216.3 584.33 T
1 10 Q
( provides the routine) 242.47 584.33 T
5 F
(DriveGetExtStatus\050\051) 341.36 584.33 T
1 F
(. Like) 447.65 584.33 T
5 F
-0.44 (DriveGetStatus\050\051) 180 571.33 P
1 F
-0.43 (, it takes the drive number as an argument and returns a) 268.33 571.33 P
(word of \337ags; however) 180 558.33 T
(, it returns additional \337ags. The \337ags returned by) 282.04 558.33 T
5 F
(DriveGetStatus\050\051) 180 545.33 T
1 F
( are set in the lower byte of the returned word; special) 268.33 545.33 T
(additional \337ags are set in the upper byte. Like) 180 532.33 T
5 F
(DriveGetStatus\050\051) 396.9 532.33 T
1 F
(,) 485.23 532.33 T
5 F
(DriveGetExtStatus\050\051) 180 519.33 T
1 F
( returns zero if the drive speci\336ed is invalid. The) 286.29 519.33 T
(following \337ags are de\336ned for the upper byte:) 180 506.33 T
1 9 Q
(DES_LOCAL_ONL) 180 486.33 T
(Y) 259.69 486.33 T
1 10 Q
(This \337ag is set if the device cannot be viewed over a network.) 243 474.33 T
1 9 Q
(DES_READ_ONL) 180 455.33 T
(Y) 254.18 455.33 T
1 10 Q
-0.46 (This \337ag is set if the device is read only) 243 443.33 P
-0.46 (, i.e. no data can ever be) 419.96 443.33 P
(written to a volume mounted on it \050e.g., a) 243 431.33 T
1 9 Q
(CD-ROM) 436.74 431.33 T
1 10 Q
( drive\051.) 475.23 431.33 T
1 9 Q
(DES_FORMA) 180 412.33 T
(TT) 237.67 412.33 T
(ABLE) 249.18 412.33 T
1 10 Q
(This \337ag is set if disks can be formatted in the drive.) 243 400.33 T
1 9 Q
(DES_ALIAS) 180 381.33 T
1 10 Q
(This \337ag is set if the drive is actually an alias for a path on) 243 381.33 T
(another drive.) 243 369.33 T
1 9 Q
(DES_BUSY) 180 350.33 T
1 10 Q
(This \337ag is set if the drive will be busy for an extended period) 243 350.33 T
(of time \050e.g., if a disk is being formatted\051.) 243 338.33 T
(Many disk drives can take a variety of disks. For example, high-density) 180 319.33 T
-0.67 (3.5-inch drives can read and write to either 720K disks or 1.44M disks. Every) 180 306.33 P
-0.79 (drive has a \322default\323 media type. When you format a disk in that drive, it will,) 180 293.33 P
-0.28 (by default, be formatted to the default size. T) 180 280.33 P
-0.28 (o \336nd out the default disk type,) 385.55 280.33 P
(call the routine) 180 267.33 T
5 F
(DriveGetDefaultMedia\050\051) 253.34 267.33 T
1 F
(. This routine takes one) 379.25 267.33 T
-0.66 (argument, namely the drive number) 180 254.33 P
-0.66 (. It returns a member of the) 344.77 254.33 P
5 F
-0.68 (MediaT) 471.63 254.33 P
-0.68 (ype) 510.36 254.33 P
1 F
(enumerated type.) 180 241.33 T
5 F
(MediaT) 264.08 241.33 T
(ype) 302.81 241.33 T
1 F
( has the following possible values:) 321.33 241.33 T
1 9 Q
(MEDIA_160K, MEDIA_180K, MEDIA_320K, MEDIA_360K) 180 221.33 T
1 10 Q
(These are all sizes used by 5.25-inch disks.) 243 209.33 T
1 9 Q
(MEDIA_720K) 180 190.33 T
1 10 Q
(This is the size of a regular 3.5-inch disk.) 243 178.33 T
1 9 Q
(MEDIA_1M2) 180 159.33 T
1 10 Q
(This is the size of a high-density 5.25-inch disk.) 243 147.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "618" 8
%%Page: "619" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(619) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(MEDIA_1M44) 180 641.33 T
1 10 Q
(This is the size of a high-density 3.5-inch disk.) 243 629.33 T
(MEDIA_2M88) 180 610.33 T
(This is the size of an ultra-high-density 3.5-inch disk.) 243 598.33 T
1 9 Q
(MEDIA_FIXED_DISK) 180 579.33 T
1 10 Q
(This is returned for all \336xed disks.) 243 567.33 T
1 9 Q
(MEDIA_CUSTOM) 180 548.33 T
1 10 Q
-0.14 (This is returned if none of the other values is appropriate. For) 243 536.33 P
(example, it is returned for) 243 524.33 T
1 9 Q
(CD-ROM) 366.71 524.33 T
1 10 Q
( drives.) 405.2 524.33 T
1 9 Q
(MEDIA_NONEXISTENT) 180 505.33 T
1 10 Q
(This is returned if the drive speci\336ed does not contain a disk.) 243 493.33 T
(This value is de\336ned to be equal to zero.) 243 481.33 T
-0.32 (If you want to \336nd out if a drive can accommodate a certain kind of disk, call) 180 462.33 P
(the routine) 180 449.33 T
5 F
(DriveT) 234.26 449.33 T
(estMediaSupport\050\051) 269.63 449.33 T
1 F
(. This Boolean routine takes two) 366.86 449.33 T
(arguments: a drive number and a member of the) 180 436.33 T
5 F
(MediaT) 407.25 436.33 T
(ype) 445.98 436.33 T
1 F
( enumerated) 464.5 436.33 T
(type. If the drive supports that medium, the routine returns) 180 423.33 T
3 F
(true) 460.19 423.33 T
1 F
( \050i.e.) 478.7 423.33 T
(non-zero\051; otherwise, it returns) 180 410.33 T
3 F
(false) 326.47 410.33 T
1 F
( \050i.e. zero\051.) 347.75 410.33 T
-0.26 (T) 180 390.33 P
-0.26 (o \336nd out the name of a given drive, call) 185.75 390.33 P
5 F
-0.27 (DriveGetName\050\051) 371.12 390.33 P
1 F
-0.26 (. This routine is) 456.11 390.33 P
-0.42 (passed three arguments: a drive number) 180 377.33 P
-0.42 (, a pointer to a character buffer) 364.93 377.33 P
-0.42 (, and) 506.1 377.33 P
(the size of that buffer) 180 364.33 T
(.) 278.52 364.33 T
5 F
(DriveGetName\050\051) 284.08 364.33 T
1 F
( writes the drive\325) 369.07 364.33 T
(s name to the) 446.67 364.33 T
-0.55 (buffer as a null-terminated string; it returns a pointer to that trailing null. If) 180 351.33 P
-0.21 (the buffer was not large enough, or the drive does not exist, it returns a null) 180 338.33 P
(pointer) 180 325.33 T
(.) 212.59 325.33 T
0 14 Q
(17.3.2) 123.08 283 T
0 18 Q
(Accessing Disks) 180 283 T
1 10 Q
-0.73 (Applications will work with disks more than they will work with drives. Once) 180 259.33 P
(a geode knows a disk\325) 180 246.33 T
(s handle, it can ignore such questions as whether the) 278.92 246.33 T
(disk is in a drive; it need merely provide the disk\325) 180 233.33 T
(s handle. If necessary) 407.63 233.33 T
(, the) 506.52 233.33 T
(system will prompt the user to insert the disk in the appropriate drive.) 180 220.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "619" 9
%%Page: "620" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(620) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.3.2.1) 111.4 638.67 T
(Registering Disks) 180 638.67 T
4 10 Q
(DiskRegisterDisk\050\051, DiskRegisterDiskSilently\050\051) 180 616.33 T
1 9 Q
(GEOS) 180 596.33 T
1 10 Q
( automatically keeps track of all disks used. The \336rst time a disk is) 206.17 596.33 T
(accessed in a session, it is) 180 583.33 T
3 F
(registered) 301.69 583.33 T
1 F
(. This means that it is assigned a) 346.66 583.33 T
3 F
(disk) 502.45 583.33 T
(handle) 180 570.33 T
1 F
(.) 211.84 570.33 T
-0.52 (The disk handle records certain information, such as the disk\325) 180 550.33 P
-0.52 (s volume name) 460.52 550.33 P
(and whether the disk is writable. It also notes in which drive the disk was) 180 537.33 T
-0.58 (last inserted; if the system prompts the user to reinsert the disk, it will insist) 180 524.33 P
(on that drive. A disk is automatically reregistered when certain actions are) 180 511.33 T
-0.65 (performed which might invalidate a disk\325) 180 498.33 P
-0.65 (s handle-table entry; for example, it) 366.57 498.33 P
(is reregistered if it is formatted. It is also reregistered if someone tries to) 180 485.33 T
(write a \336le to a disk which is marked read-only; the user may have ejected) 180 472.33 T
(the disk and removed its write-protect tab. Note that reregistering a disk) 180 459.33 T
-0.06 (does not change its handle; it just brings) 180 446.33 P
1 9 Q
-0.05 (GEOS) 369.73 446.33 P
1 10 Q
-0.06 (\325) 395.9 446.33 P
-0.06 (s information about the disk) 397.57 446.33 P
(up-to-date.) 180 433.33 T
-0.15 (Note that the disk handle is not a reference to the global handle table; thus,) 180 413.33 P
-0.62 (Swat commands like) 180 400.33 P
5 F
-0.64 (phandle) 276.51 400.33 P
1 F
-0.62 ( will not work with disk handles. Disk handles) 318.92 400.33 P
(should always be treated as opaque 16-bit tokens.) 180 387.33 T
(Y) 180 367.33 T
(ou can speci\336cally instruct the system to register a disk by calling the) 185.93 367.33 T
(routine) 180 354.33 T
5 F
(DiskRegisterDisk\050\051) 216.48 354.33 T
1 F
(. The routine is passed a single argument,) 315.55 354.33 T
(namely the drive number) 180 341.33 T
(. If the disk has an entry in the disk table, the) 296.49 341.33 T
-0.58 (routine will not reregister the disk; it will just return the disk\325) 180 328.33 P
-0.58 (s handle. If the) 460.71 328.33 P
(disk has no entry in the table, the system will create an entry and register) 180 315.33 T
(the disk. In this case, also, the routine will return the \050new\051 disk handle. If) 180 302.33 T
-0.01 (the routine fails \050for example, because there is no valid disk in the speci\336ed) 180 289.33 P
(drive, or the drive itself does not exist\051, it returns a null handle.) 180 276.33 T
(When a disk is registered, the system notes the volume label. This label is) 180 256.33 T
-0.61 (used when the system has to prompt the user to insert a disk. If an unlabeled) 180 243.33 P
-0.55 (disk is inserted, the system will choose an arbitrary label for the volume \050e.g.) 180 230.33 P
-0.22 (\322) 180 217.33 P
1 9 Q
-0.2 (UNNAMED1) 183.89 217.33 P
1 10 Q
-0.22 (\323\051. The system does not actually write this label to the disk; the) 239.39 217.33 P
-0.38 (label is used by the system and discarded when the session ends. Ordinarily) 180 204.33 P
-0.38 (,) 525.82 204.33 P
-0.1 (the system will present an alert box to inform the user about the temporary) 180 191.33 P
(label. Y) 180 178.33 T
(ou can suppress this noti\336cation by calling the system routine) 213.91 178.33 T
5 F
(DiskRegisterDiskSilently\050\051) 180 165.33 T
1 F
(. This routine has the same arguments and) 319.44 165.33 T
(return values as) 180 152.33 T
5 F
(DiskRegisterDisk\050\051) 258.34 152.33 T
1 F
(.) 357.41 152.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "620" 10
%%Page: "621" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(621) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.3.2.2) 111.4 638.67 T
(Getting Information about a Disk) 180 638.67 T
4 10 Q
(DiskGetVolumeInfo\050\051, DiskGetVolumeFreeSpace\050\051,) 180 616.33 T
(DiskGetDrive\050\051, DiskGetVolumeName\050\051, DiskFind\050\051,) 180 603.33 T
-1 (DiskCheckWritable\050\051, DiskCheckInUse\050\051, DiskCheckUnnamed\050\051,) 180 590.33 P
(DiskForEach\050\051, DiskInfoStruct, DiskFindResult) 180 577.33 T
1 9 Q
(GEOS) 180 557.33 T
1 10 Q
( provides many routines to get information about disks. If geodes call) 206.17 557.33 T
-0.2 (disk routines at all, they are most likely to call these. Most of these routines) 180 544.33 P
(are passed the handle of the disk. If you know the disk\325) 180 531.33 T
(s volume label and) 433.93 531.33 T
-0.22 (need to \336nd out its handle, call the routine) 180 518.33 P
5 F
-0.23 (DiskFind\050\051) 377.83 518.33 P
1 F
-0.22 ( \050described below\051. If) 433.74 518.33 P
-0.29 (you know the disk is currently in a drive and you need to \336nd out its handle,) 180 505.33 P
-0.65 (register the disk \050see \322Registering Disks\323 on page 620\051. Note that any routine) 180 492.33 P
-0.67 (which is passed a disk handle can be passed a standard path constant; in this) 180 479.33 P
(case, the routine will give you information about the disk containing the) 180 466.33 T
5 F
(geos.ini) 180 453.33 T
1 F
( \336le.) 219.99 453.33 T
(The basic disk-information routine is) 180 433.33 T
5 F
(DiskGetV) 353.91 433.33 T
(olumeInfo\050\051) 402.61 433.33 T
1 F
(. This returns) 463.53 433.33 T
-0.59 (information about the size of the disk and the amount of free space available.) 180 420.33 P
(The routine is passed two arguments: the disk handle and a pointer to a) 180 407.33 T
5 F
-0.81 (DiskInfoStruct) 180 394.33 P
1 F
-0.78 ( structure \050shown below\051. The routine \336lls in the \336elds of the) 257.78 394.33 P
5 F
-0.39 (DiskInfoStruct) 180 381.33 P
1 F
-0.38 ( structure and returns zero if it was successful. If it fails for) 257.78 381.33 P
-0.52 (any reason, it returns an error value and sets the thread\325) 180 368.33 P
-0.52 (s error value \050which) 437.92 368.33 P
-0.07 (can be recovered with) 180 355.33 P
5 F
-0.07 (ThreadGetError\050\051) 282.88 355.33 P
1 F
-0.07 (\051. The usual error value returned) 376.04 355.33 P
(is the constant) 180 342.33 T
1 9 Q
(ERROR_INV) 250.75 342.33 T
(ALID_VOLUME) 304.74 342.33 T
1 10 Q
(.) 374.24 342.33 T
81 309.98 531 322 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.98 531 322 R
7 X
0 0 0 1 0 0 0 K
V
76.5 317.23 617.5 320.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 303.31 T
(17-) 147.13 303.31 T
(1 The DiskInfoStruct Structure) 161.58 303.31 T
4 9 Q
(typedef struct {) 81 288.98 T
(word) 125 277.98 T
(DIS_blockSize;) 212.5 277.98 T
(/* # of bytes in a block; smallest size) 301 277.98 T
( * file system can allocate at once */) 301 266.98 T
(sdword) 125 255.98 T
(DIS_freeSpace;) 212.5 255.98 T
(/* # of bytes free on disk */) 301 255.98 T
(sdword) 125 244.98 T
(DIS_totalSpace;) 212.5 244.98 T
(/* Total size of the disk in bytes */) 301 244.98 T
(char) 125 233.98 T
(DIS_name[VOLUME_BUFFER_SIZE];) 212.5 233.98 T
(/* Volume name; if disk is unnamed, this) 301 222.98 T
( * is the temporary name. String is) 301 211.98 T
( * null-terminated. */) 301 200.98 T
(} DiskInfoStruct;) 81 189.98 T
81 165.95 531 177.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 165.95 531 177.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 173.2 617.5 176.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "621" 11
%%Page: "622" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(622) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(If you just want to know a disk\325) 180 641.33 T
(s name, call) 324.66 641.33 T
5 F
(DiskGetV) 382.27 641.33 T
(olumeName\050\051) 430.97 641.33 T
1 F
(. This) 500.41 641.33 T
-0.41 (routine takes two arguments: the disk handle and the address of a character) 180 628.33 P
-0.33 (buffer) 180 615.33 P
-0.33 (. \050The buffer must be at least) 207.03 615.33 P
1 9 Q
-0.3 (VOLUME_NAME_LENGTH_ZT) 341.59 615.33 P
1 10 Q
-0.33 ( characters) 477.59 615.33 P
(long.\051 It writes the volume name to the buffer as a null-terminated string,) 180 602.33 T
(and it returns the buffer) 180 589.33 T
(\325) 293.51 589.33 T
(s address. If the volume is unnamed,) 295.18 589.33 T
5 F
(DiskGetV) 180 576.33 T
(olumeName\050\051) 228.7 576.33 T
1 F
( writes the temporary volume name.) 298.14 576.33 T
(Note that all the routines which return a volume\325) 180 556.33 T
(s name will return the) 407.25 556.33 T
(temporary name if the volume is unnamed. For this reason, if you want to) 180 543.33 T
(\336nd out if a volume is unnamed, you must use a special purpose routine,) 180 530.33 T
(namely) 180 517.33 T
5 F
(DiskCheckUnnamed\050\051) 216.86 517.33 T
1 F
(. This Boolean routine is passed the disk\325) 331.12 517.33 T
(s) 519.86 517.33 T
(handle. If the volume does not have a permanent label, the routine returns) 180 504.33 T
3 F
(true) 180 491.33 T
1 F
(; otherwise, it returns) 198.51 491.33 T
3 F
(false) 301.85 491.33 T
1 F
(.) 323.13 491.33 T
(If you want to know how much free space is available on a disk, call the) 180 471.33 T
(routine) 180 458.33 T
5 F
(DiskGetV) 216.48 458.33 T
(olumeFreeSpace\050\051) 265.18 458.33 T
1 F
(. The routine is passed the disk) 359.45 458.33 T
(handle; it returns \050as a dword\051 the number of free bytes available. If the) 180 445.33 T
(volume is currently read-only \050e.g. a \337oppy disk with the write-protect tab) 180 432.33 T
(set\051, it returns the amount of space that would be available if the volume) 180 419.33 T
(were made read/write. If the volume is, by its nature, not writable \050e.g. a) 180 406.33 T
1 9 Q
-0.42 (CD-ROM) 180 393.33 P
1 10 Q
-0.46 ( disk\051, the routine will return zero. It will also return zero if an error) 218.49 393.33 P
(condition occurs; in this case, it will also set the thread\325) 180 380.33 T
(s error value.) 435.22 380.33 T
(If you want to know what drive a volume is associated with, call) 180 360.33 T
5 F
(DiskGetDrive\050\051) 180 347.33 T
1 F
(. This routine takes one argument, namely the volume\325) 258.88 347.33 T
(s) 511.7 347.33 T
(disk handle. It returns the number of the drive which had that disk. Note) 180 334.33 T
(that it will return this value even if that drive is no longer usable.) 180 321.33 T
-0.24 (If you know the label of a volume which has been registered and you need to) 180 301.33 P
(\336nd out its handle, call the routine) 180 288.33 T
5 F
(DiskFind\050\051) 343.54 288.33 T
1 F
(. The routine takes two) 399.46 288.33 T
(arguments: the address of a null-terminated string containing the volume) 180 275.33 T
(name and a pointer to a variable of the) 180 262.33 T
5 F
(DiskFindResult) 362.45 262.33 T
1 F
( enumerated type.) 444.11 262.33 T
(It will return the disk\325) 180 249.33 T
(s handle; if no disk with the speci\336ed name has been) 282.42 249.33 T
(registered, it will return a null handle.) 180 236.33 T
5 F
(DiskFindResult) 361.69 236.33 T
1 F
( has the following) 443.35 236.33 T
(possible values:) 180 223.33 T
1 9 Q
(DFR_UNIQUE) 180 203.33 T
1 10 Q
(Exactly one volume with the speci\336ed name has been) 243 191.33 T
(registered. The handle of that volume was returned.) 243 179.33 T
1 9 Q
(DFR_NOT_UNIQUE) 180 160.33 T
1 10 Q
(T) 243 148.33 T
(wo or more volumes with the speci\336ed label have been) 248.96 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "622" 12
%%Page: "623" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(623) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.82 (registered. The handle of an arbitrary one of these volumes was) 243 641.33 P
(returned. If you want to \336nd the handles of all of these disks,) 243 629.33 T
(call) 243 617.33 T
5 F
(DiskForEach\050\051) 262.08 617.33 T
1 F
(, described below) 338.19 617.33 T
(.) 415.8 617.33 T
1 9 Q
(DFR_NOT_FOUND) 180 598.33 T
1 10 Q
(No disk with the speci\336ed label has been registered. A null) 243 586.33 T
(handle was returned.) 243 574.33 T
(T) 180 555.33 T
(o check if a volume is writable, call the Boolean routine) 185.75 555.33 T
5 F
-0.12 (DiskCheckW) 180 542.33 P
-0.12 (ritable\050\051) 245.56 542.33 P
1 F
-0.12 (. The routine takes one argument, the disk\325) 288.34 542.33 P
-0.12 (s handle.) 486.6 542.33 P
(If the disk is writable, the routine returns) 180 529.33 T
3 F
(true) 376.5 529.33 T
1 F
( \050i.e. non-zero\051. If the disk is) 395.01 529.33 T
(non-writable, the routine returns) 180 516.33 T
3 F
(false) 336.3 516.33 T
1 F
( \050i.e. zero\051.) 357.58 516.33 T
(T) 180 496.33 T
(o see if a disk is being used by any threads, call) 185.75 496.33 T
5 F
(DiskCheckInUse\050\051) 407.1 496.33 T
1 F
(. The) 501.54 496.33 T
-0.15 (routine takes one argument: the disk\325) 180 483.33 P
-0.15 (s handle. It returns) 352.24 483.33 P
3 F
-0.15 (true) 444.43 483.33 P
1 F
-0.15 ( \050i.e. non-zero\051) 462.94 483.33 P
-0.2 (if a \336le on the disk is open or if any thread has a directory on that disk in its) 180 470.33 P
-0.11 (directory stack \050see section 17.4.2 on page 636\051. If neither condition applies,) 180 457.33 P
(the routine returns) 180 444.33 T
3 F
(false) 271.66 444.33 T
1 F
( \050i.e. zero\051.) 292.94 444.33 T
(If you want to perform an action on every disk, call) 180 424.33 T
5 F
(DiskForEach\050\051) 418.17 424.33 T
1 F
(. This) 494.28 424.33 T
(routine takes one argument, a pointer to a Boolean callback routine. The) 180 411.33 T
(callback routine should take a single argument, the handle of a disk.) 180 398.33 T
5 F
(DiskForEach\050\051) 180 385.33 T
1 F
( calls the callback routine once for every registered disk. It) 256.11 385.33 T
(passes the disk handle to the callback routine, which can take any action it) 180 372.33 T
(wants; for example, it could call one of the other disk-information routines.) 180 359.33 T
(The callback routine can make) 180 346.33 T
5 F
(DiskForEach\050\051) 324.66 346.33 T
1 F
( halt prematurely by) 400.77 346.33 T
(returning a non-zero value. If the callback routine forced an early halt,) 180 333.33 T
5 F
(DiskForEach\050\051) 180 320.33 T
1 F
( returns the last disk handle which had been passed to the) 256.11 320.33 T
(callback routine; otherwise it returns a null handle. This routine is) 180 307.33 T
(commonly called to look for a speci\336c disk. T) 180 294.33 T
(o do this, simply have the) 383.92 294.33 T
(callback routine check each disk to see if it is the one sought; if it is, simply) 180 281.33 T
(return) 180 268.33 T
3 F
(true) 212.77 268.33 T
1 F
(, and) 231.28 268.33 T
5 F
(DiskForEach\050\051) 257.03 268.33 T
1 F
( will return that disk\325) 333.14 268.33 T
(s handle.) 432.05 268.33 T
5 F
-0.67 (DiskForEach\050\051) 180 248.33 P
1 F
-0.65 ( does not need to examine the actual disks; it works from the) 256.11 248.33 P
-0.77 (information the \336le-system stores about all registered disks. This means that) 180 235.33 P
5 F
(DiskForEach\050\051) 180 222.33 T
1 F
( will not have to prompt the user to insert any disks. Of) 256.11 222.33 T
-0.7 (course, the callback routine may need to examine the disks, in which case the) 180 209.33 P
(user will be prompted when necessary) 180 196.33 T
(.) 355.38 196.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "623" 13
%%Page: "624" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(624) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.3.2.3) 111.4 638.67 T
(Saving and Restoring a Disk Handle) 180 638.67 T
4 10 Q
(DiskSave\050\051, DiskRestore\050\051, DiskRestoreError) 180 616.33 T
1 F
-0.75 (A disk does not necessarily have the same handle from one execution of) 180 596.33 P
1 9 Q
-0.68 (GEOS) 502.8 596.33 P
1 10 Q
(to another) 180 583.33 T
(. This can pose a problem for an application which is restarting) 227.04 583.33 T
-0.16 (from a state \336le. In order to reopen a \336le, it has to know the \336le\325) 180 570.33 P
-0.16 (s location. If) 472.04 570.33 P
(it knows the \336le\325) 180 557.33 T
(s location relative to a standard path, there is no problem,) 255.76 557.33 T
-0.76 (since the application can use the standard path constant in the place of a disk) 180 544.33 P
(handle. If the \336le is not in a standard path, the application will need some) 180 531.33 T
(way of \336guring out the disk\325) 180 518.33 T
(s handle on restart.) 308.72 518.33 T
(For this reason,) 180 498.33 T
1 9 Q
(GEOS) 255.75 498.33 T
1 10 Q
( provides) 281.92 498.33 T
5 F
(DiskSave\050\051) 326.55 498.33 T
1 F
( and) 382.66 498.33 T
5 F
(DiskRestore\050\051) 405.63 498.33 T
1 F
(.) 477.3 498.33 T
5 F
(DiskSave\050\051) 180 485.33 T
1 F
( saves information about a disk in an opaque data structure.) 236.11 485.33 T
5 F
(DiskRestore\050\051) 180 472.33 T
1 F
( reads such a data buffer and returns the handle of the disk) 251.67 472.33 T
(described; it even arranges to prompt the user if the disk has not been) 180 459.33 T
(registered yet.) 180 446.33 T
-0.19 (T) 180 426.33 P
-0.19 (o save a disk handle, call) 185.75 426.33 P
5 F
-0.19 (DiskSave\050\051) 302.64 426.33 P
1 F
-0.19 (. This routine takes three arguments:) 358.75 426.33 P
2 F
(u) 180 406.33 T
1 F
(The disk handle.) 198 406.33 T
(This may be a standard path.) 198 394.33 T
2 F
(u) 180 375.33 T
1 F
(A pointer to a buffer) 198 375.33 T
(.) 291.15 375.33 T
5 F
(DiskSave\050\051) 198 363.33 T
1 F
( will write opaque data to that buffer; you will need to pass) 254.11 363.33 T
(that data to) 198 351.33 T
5 F
(DiskRestore\050\051) 255.43 351.33 T
1 F
( to restore the handle.) 327.1 351.33 T
2 F
(u) 180 332.33 T
1 F
(A pointer to an integer) 198 332.33 T
(.) 302.45 332.33 T
(When you call) 198 320.33 T
5 F
(DiskSave\050\051) 266.15 320.33 T
1 F
(, that integer should contain the size of the) 322.26 320.33 T
(buffer \050in bytes\051. When) 198 308.33 T
5 F
(DiskSave\050\051) 307.07 308.33 T
1 F
( exits, the integer will contain the) 363.18 308.33 T
(size of the buffer needed or used \050as described below\051.) 198 296.33 T
-0.43 (If) 180 277.33 P
5 F
-0.44 (DiskSave\050\051) 189.75 277.33 P
1 F
-0.43 ( was successful, it will return) 245.86 277.33 P
3 F
-0.43 (true) 381.46 277.33 P
1 F
-0.43 (. The integer parameter will) 399.97 277.33 P
(contain the size of the buffer actually needed; for example, if the buffer had) 180 264.33 T
-0.14 (been 100 bytes long and) 180 251.33 P
5 F
-0.15 (DiskSave\050\051) 293.02 251.33 P
1 F
-0.14 ( returns 60, you can safely free the last) 349.13 251.33 P
(40 bytes in the buffer) 180 238.33 T
(. If) 277.98 238.33 T
5 F
(DiskSave\050\051) 293.72 238.33 T
1 F
( failed, it will return) 349.83 238.33 T
3 F
(false) 446.7 238.33 T
1 F
(. If it failed) 467.98 238.33 T
-0.64 (because the buffer was too small, it will write the size needed into the integer) 180 225.33 P
(passed; simply call) 180 212.33 T
5 F
(DiskSave\050\051) 269.65 212.33 T
1 F
( again with a large enough buffer) 325.76 212.33 T
(. If) 478.93 212.33 T
5 F
(DiskSave\050\051) 180 199.33 T
1 F
( failed for some other reason \050e.g. the disk belongs to a drive) 236.11 199.33 T
(which no longer exists\051, it will write a zero value to the integer) 180 186.33 T
(.) 468.55 186.33 T
(T) 180 166.33 T
(o restore a disk, call) 185.75 166.33 T
5 F
(DiskRestore\050\051) 281.14 166.33 T
1 F
(. This routine takes two arguments:) 352.81 166.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "624" 14
%%Page: "625" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(625) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(A pointer to the opaque data structure written by) 198 641.33 T
5 F
(DiskSave\050\051) 429.32 641.33 T
1 F
(.) 485.43 641.33 T
2 F
(u) 180 622.33 T
1 F
-0.07 (A pointer to a callback routine. The callback routine is called if the user) 198 622.33 P
(must be prompted to insert the disk. If you pass a null function pointer) 198 610.33 T
(,) 525.25 610.33 T
5 F
(DiskRestore\050\051) 198 598.33 T
1 F
( will fail in this situation) 269.67 598.33 T
1 9 Q
(.) 384.52 598.33 T
1 10 Q
-0.55 (If the disk in question has already been registered or is currently in its drive,) 180 579.33 P
5 F
-0.32 (DiskRestore\050\051) 180 566.33 P
1 F
-0.31 ( will return its handle. If the disk is not registered and is not) 251.67 566.33 P
(in any drive,) 180 553.33 T
5 F
(DiskRestore\050\051) 241.12 553.33 T
1 F
( will call the callback routine. The callback) 312.79 553.33 T
(routine should accept the following four arguments:) 180 540.33 T
2 F
(u) 180 520.33 T
1 F
-0.86 (A pointer to a null-terminated string containing the drive name, speci\336ed) 198 520.33 P
(according to the) 198 508.33 T
1 9 Q
(DOS) 274.48 508.33 T
1 10 Q
( convention \050e.g. \322) 294.15 508.33 T
1 9 Q
(C) 375.82 508.33 T
1 10 Q
(:\323\051.) 382.32 508.33 T
2 F
(u) 180 489.33 T
1 F
(A pointer to a null-terminated string containing the disk volume label.) 198 489.33 T
2 F
(u) 180 470.33 T
1 F
(The) 198 470.33 T
5 F
(DiskRestoreError) 218.56 470.33 T
1 F
( \050see below\051 which would be returned if the) 311.72 470.33 T
(callback routine hadn\325) 198 458.33 T
(t been called.) 300.43 458.33 T
2 F
(u) 180 439.33 T
1 F
-0.82 (A pointer to a pointer to the opaque data structure. If the callback routine) 198 439.33 P
-0.32 (causes the data structure to move, it should \336x up the pointer to point to) 198 427.33 P
-0.27 (the new location. Note that the two strings \050the drive name and the disk) 198 415.33 P
(label\051 are located within this data structure; thus, if you cause this) 198 403.33 T
(structure to move, both of those pointers will be invalidated.) 198 391.33 T
(If the callback routine believes the user inserted the correct disk, it should) 180 372.33 T
(return) 180 359.33 T
1 9 Q
(DRE_DISK_IN_DRIVE) 212.77 359.33 T
1 10 Q
(. Otherwise, it should return a) 310.76 359.33 T
5 F
(DiskRestoreError) 180 346.33 T
1 F
( constant. In this case,) 273.16 346.33 T
5 F
(DiskRestore\050\051) 379.84 346.33 T
1 F
( will fail and set) 451.51 346.33 T
(the thread\325) 180 333.33 T
(s error value to the constant speci\336ed. If the callback routine) 230.19 333.33 T
(returns an error) 180 320.33 T
(, that error will generally be) 254.43 320.33 T
1 9 Q
(DRE_USER_CANCELLED_RESTORE) 180 307.33 T
1 10 Q
(.) 343 307.33 T
(If) 180 287.33 T
5 F
(DiskRestore\050\051) 190.18 287.33 T
1 F
( is successful, it will return the disk handle; this may be) 261.85 287.33 T
-0.25 (different from the disk\325) 180 274.33 P
-0.25 (s handle in the previous execution. Y) 285.35 274.33 P
-0.25 (ou may now free) 453.3 274.33 P
-0.73 (the data buffer) 180 261.33 P
-0.73 (, if you like. If) 246.88 261.33 P
5 F
-0.75 (DiskRestore\050\051) 310.3 261.33 P
1 F
-0.73 ( fails, it will return a null handle) 381.97 261.33 P
(and set the thread\325) 180 248.33 T
(s error value. There are several different) 266.68 248.33 T
5 F
(DiskRestoreError) 180 235.33 T
1 F
( values; they are listed below) 273.16 235.33 T
(.) 406.16 235.33 T
1 9 Q
(DRE_DRIVE_NO_LONGER_EXISTS) 180 215.33 T
1 10 Q
(The disk had last been used in a drive which is no longer) 243 203.33 T
-0.42 (attached to the system \050or the appropriate \336le-system driver is) 243 191.33 P
(no longer present\051.) 243 179.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "625" 15
%%Page: "626" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(626) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(DRE_REMOV) 180 641.33 T
(ABLE_DRIVE_DOESNT_HOLD_DISK) 238.49 641.33 T
1 10 Q
(The disk was in a removable-media drive, and that drive) 243 629.33 T
(doesn\325) 243 617.33 T
(t contain the disk.) 271.34 617.33 T
1 9 Q
(DRE_USER_CANCELLED_RESTORE) 180 598.33 T
1 10 Q
(A callback routine was called and returned this value to) 243 586.33 T
5 F
(DiskRestore\050\051) 243 574.33 T
1 F
(.) 314.67 574.33 T
1 9 Q
(DRE_COULDNT_CREA) 180 555.33 T
(TE_NEW_DISK_HANDLE) 281.67 555.33 T
5 10 Q
(DiskRestore\050\051) 243 543.33 T
1 F
( found the disk in the drive but was for some) 314.67 543.33 T
(reason unable to create the disk handle.) 243 531.33 T
1 9 Q
(DRE_REMOV) 180 512.33 T
(ABLE_DRIVE_IS_BUSY) 238.49 512.33 T
1 10 Q
(The appropriate drive exists but is unavailable due to some) 243 500.33 T
(time-consuming operation \050e.g. a disk format\051.) 243 488.33 T
0 14 Q
(17.3.2.4) 111.4 455.67 T
(Other Disk Utilities) 180 455.67 T
4 10 Q
-2.25 (DiskSetVolumeName\050\051, DiskFormat\050\051, DiskCopy\050\051, FormatError,) 180 433.33 P
(DiskCopyCallback, DiskCopyError) 180 420.33 T
1 9 Q
-0.05 (GEOS) 180 400.33 P
1 10 Q
-0.05 ( provides several utilities for working with disks. These utilities allow) 206.17 400.33 P
(geodes to copy disks, format them, and change their volume names. Most) 180 387.33 T
-0.18 (applications will never need to use these utilities; they can rely on the users) 180 374.33 P
(to take care of disk formatting with an application like GeoManager) 180 361.33 T
(.) 493.76 361.33 T
-0.2 (However) 180 348.33 P
-0.2 (, some applications will want to make use of them. For example, an) 220.18 348.33 P
-0.03 (archiving program might automatically format storage disks and give them) 180 335.33 P
(appropriate labels.) 180 322.33 T
0 12 Q
(Changing a V) 180 296 T
(olume Name) 255.79 296 T
1 10 Q
(If you want to set or change a volume\325) 180 274.33 T
(s name, you should call) 354.65 274.33 T
5 F
(DiskSetV) 180 261.33 T
(olumeName\050\051) 227.04 261.33 T
1 F
(. This routine takes two arguments: the volume\325) 296.48 261.33 T
(s) 517.63 261.33 T
(handle and the address of a null-terminated string \050containing the new) 180 248.33 T
(volume name\051. If it is able to change the volume\325) 180 235.33 T
(s name, it returns zero;) 403.37 235.33 T
(otherwise, it returns an error code. It sets or clears the thread\325) 180 222.33 T
(s error value) 468.15 222.33 T
(appropriately) 180 209.33 T
(. The following error codes may be returned:) 241.67 209.33 T
1 9 Q
(ERROR_INV) 180 189.33 T
(ALID_VOLUME) 233.99 189.33 T
1 10 Q
(An invalid disk handle was passed to the routine.) 243 177.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "626" 16
%%Page: "627" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(627) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(ERROR_ACCESS_DENIED) 180 641.33 T
1 10 Q
-0.3 (For some reason, the volume\325) 243 629.33 P
-0.3 (s name could not be changed. For) 376.25 629.33 P
(example, the volume might not be writable.) 243 617.33 T
1 9 Q
(ERROR_DISK_ST) 180 598.33 T
(ALE) 256.51 598.33 T
1 10 Q
(The drive containing that disk has been deleted. This usually) 243 586.33 T
(only happens with network drives.) 243 574.33 T
0 12 Q
(Formatting a Disk) 180 549 T
1 10 Q
-0.37 (If a geode needs to format a disk, it can call the routine) 180 527.33 P
5 F
-0.38 (DiskFormat\050\051) 432.84 527.33 P
1 F
-0.37 (. This) 502.84 527.33 P
-0.69 (routine can do either low-level or high-level \050\322soft\323\051 formats. The routine does) 180 514.33 P
-0.67 (not interact with the user interface; instead, it calls a callback routine, which) 180 501.33 P
(can arrange any such interaction.) 180 488.33 T
5 F
(DiskFormat\050\051) 338.34 488.33 T
1 F
( takes seven arguments:) 408.34 488.33 T
2 F
(u) 180 468.33 T
1 F
(The number of the drive containing the disk to be formatted.) 198 468.33 T
2 F
(u) 180 449.33 T
1 F
-0.74 (The address of a null-terminated string containing the disk\325) 198 449.33 P
-0.74 (s new volume) 467.84 449.33 P
(name.) 198 437.33 T
2 F
(u) 180 418.33 T
1 F
(A member of the) 198 418.33 T
5 F
(MediaT) 277.45 418.33 T
(ype) 316.18 418.33 T
1 F
( enumerated type \050see page 618\051.) 334.7 418.33 T
2 F
(u) 180 399.33 T
1 F
(Flags indicating how the format should be done. The following \337ags are) 198 399.33 T
(available:) 198 387.33 T
1 9 Q
(DFF_CALLBACK_PERCENT_DONE) 191.12 368.33 T
1 10 Q
(A callback routine will be called periodically) 243 356.33 T
(. The callback) 446 356.33 T
(routine will be passed a single argument, namely the) 243 344.33 T
-0.47 (percentage of the format which has been done, expressed as an) 243 332.33 P
(integer) 243 320.33 T
(.) 275.22 320.33 T
1 9 Q
(DFF_CALLBACK_CYL_HEAD) 191.12 301.33 T
1 10 Q
(A callback routine will be called periodically) 243 289.33 T
(. The callback) 446 289.33 T
-0.02 (routine will be passed a single argument, namely the cylinder) 243 277.33 P
(head being formatted. If both) 243 265.33 T
1 9 Q
(DFF_CALLBACK_PERCENT_DONE) 243 253.33 T
1 10 Q
( and) 400.18 253.33 T
1 9 Q
-0.16 (DFF_CALLBACK_CYL_HEAD) 243 241.33 P
1 10 Q
-0.17 ( are passed, results are unde\336ned.) 373.34 241.33 P
1 9 Q
(DFF_FORCE_ERASE) 191.12 222.33 T
1 10 Q
(A \322hard format\323 should be done; that is, the sectors should be) 243 210.33 T
(rewritten and initialized to zeros. If this \337ag is not set,) 243 198.33 T
5 F
(DiskFormat\050\051) 243 186.33 T
1 F
( will do a \322soft format\323 if possible; it will check) 313 186.33 T
-0.67 (the sectors and write a blank \336le allocation table, but it will not) 243 174.33 P
(necessarily erase the data from the disk.) 243 162.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "627" 17
%%Page: "628" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(628) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.28 (A pointer to an unsigned integer variable; the number of good sectors on) 198 641.33 P
(the disk will be written here.) 198 629.33 T
2 F
(u) 180 610.33 T
1 F
(A pointer to an unsigned integer variable; the number of bad sectors on) 198 610.33 T
(the disk will be written here.) 198 598.33 T
2 F
(u) 180 579.33 T
1 F
(The address of a Boolean callback routine, as described above. The) 198 579.33 T
(routine should be passed either the current cylinder and head or the) 198 567.33 T
-0.59 (percentage formatted, depending on the \337ag passed to) 198 555.33 P
5 F
-0.61 (DiskFormat\050\051) 445.88 555.33 P
1 F
-0.59 (. It) 515.88 555.33 P
-0.53 (should return) 198 543.33 P
3 F
-0.53 (true) 263.24 543.33 P
1 F
-0.53 ( to abort the format, or) 281.75 543.33 P
3 F
-0.53 (false) 386.94 543.33 P
1 F
-0.53 ( \050i.e. zero\051 to continue with) 408.22 543.33 P
(the format. If neither) 198 531.33 T
1 9 Q
(DFF_CALLBACK_PERCENT_DONE) 299.11 531.33 T
1 10 Q
( nor) 456.29 531.33 T
1 9 Q
-0.44 (DFF_CALLBACK_CYL_HEAD) 198 519.33 P
1 10 Q
-0.49 ( is passed, the callback routine will never be) 328.34 519.33 P
(called, so this argument may be a null pointer) 198 507.33 T
(.) 409.89 507.33 T
5 F
-0.19 (DiskFormat\050\051) 180 488.33 P
1 F
-0.19 ( returns a member of the) 250 488.33 P
5 F
-0.19 (FormatError) 366.84 488.33 P
1 F
-0.19 (enumerated type. If) 437.3 488.33 P
(the format was successful, it will return the constant) 180 475.33 T
1 9 Q
(FMT_DONE) 427.24 475.33 T
1 10 Q
( \050which is) 480.08 475.33 T
(guaranteed to equal zero\051. Otherwise, it will return one of the following) 180 462.33 T
(constants:) 180 449.33 T
4 F
(FMT_DRIVE_NOT_READY) 216 433.33 T
(FMT_ERROR_WRITING_BOOT) 216 419.33 T
(FMT_ERROR_WRITING_ROOT_DIR) 216 405.33 T
(FMT_ERROR_WRITING_FAT) 216 391.33 T
(FMT_ABORTED) 216 377.33 T
(FMT_SET_VOLUME_NAME_ERROR) 216 363.33 T
(FMT_CANNOT_FORMAT_FIXED_DISKS_IN_CUR_RELEASE) 216 349.33 T
(FMT_BAD_PARTITION_TABLE,) 216 335.33 T
(FMT_ERR_READING_PARTITION_TABLE,) 216 321.33 T
(FMT_ERR_NO_PARTITION_FOUND,) 216 307.33 T
(FMT_ERR_MULTIPLE_PRIMARY_PARTITIONS,) 216 293.33 T
(FMT_ERR_NO_EXTENDED_PARTITION_FOUND) 216 279.33 T
(FMT_ERR_CANNOT_ALLOC_SECTOR_BUFFER) 216 265.33 T
(FMT_ERR_DISK_IS_IN_USE) 216 251.33 T
(FMT_ERR_WRITE_PROTECTED) 216 237.33 T
(FMT_ERR_DRIVE_CANNOT_SUPPORT_GIVEN_FORMAT) 216 223.33 T
(FMT_ERR_INVALID_DRIVE_SPECIFIED) 216 209.33 T
(FMT_ERR_DRIVE_CANNOT_BE_FORMATTED) 216 195.33 T
(FMT_ERR_DISK_UNAVAILABLE) 216 181.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "628" 18
%%Page: "629" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Disks and Drives) 445.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(629) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 12 Q
0 X
(Copying Disks) 180 640 T
1 9 Q
(GEOS) 180 618.33 T
1 10 Q
( provides a routine for copying disks. This routine,) 206.17 618.33 T
5 F
(DiskCopy\050\051) 441.37 618.33 T
1 F
(,) 499.52 618.33 T
(maintains a balance between the two goals of limiting memory usage and) 180 605.33 T
-0.4 (minimizing disk swapping. It will reformat the destination disk if necessary) 180 592.33 P
-0.4 (.) 525.84 592.33 P
-0.85 (The routine does a sector) 180 579.33 P
-0.85 (-for) 292.34 579.33 P
-0.85 (-sector copy; therefore, the destination disk must) 308.26 579.33 P
-0.16 (either be of exactly the same type as the source disk \050i.e., same medium and) 180 566.33 P
-0.32 (size\051, or it must be reformatable to be the same size. For this reason, neither) 180 553.33 P
(the source nor the destination may be a \336xed disk.) 180 540.33 T
5 F
(DiskCopy\050\051) 180 520.33 T
1 F
( does not interact with the user directly) 238.15 520.33 T
(, even though the user) 419.64 520.33 T
(may have to swap disks. Instead, it calls a callback routine whenever) 180 507.33 T
(interaction with the user may be necessary) 180 494.33 T
(. The routine takes the following) 377.98 494.33 T
(arguments:) 180 481.33 T
2 F
(u) 180 461.33 T
1 F
(The drive number of the source drive.) 198 461.33 T
2 F
(u) 180 442.33 T
1 F
-0.05 (The drive number of the destination drive. This may be the same as the) 198 442.33 P
(source drive.) 198 430.33 T
2 F
(u) 180 411.33 T
1 F
(The address of a Boolean callback routine. The routine must take three) 198 411.33 T
(arguments: a member of the) 198 399.33 T
5 F
(DiskCopyCallback) 331.35 399.33 T
1 F
( enumerated type) 427.47 399.33 T
-0.86 (\050described below\051, a disk handle, and a word-sized parameter holding any) 198 387.33 P
(other appropriate information. The routine should return non-zero to) 198 375.33 T
(abort the copy; otherwise, it should return zero.) 198 363.33 T
(The callback routine is called under a variety of circumstances. When it is) 180 344.33 T
(called, the \336rst argument passed is a member of the) 180 331.33 T
5 F
(DiskCopyCallback) 422.81 331.33 T
1 F
(enumerated type, which speci\336es both why the callback routine was called) 180 318.33 T
(and what the other arguments signify) 180 305.33 T
(.) 354.09 305.33 T
5 F
(DiskCopyCallback) 359.65 305.33 T
1 F
( contains the) 455.77 305.33 T
(following types:) 180 292.33 T
1 9 Q
(CALLBACK_GET_SOURCE_DISK) 180 272.33 T
1 10 Q
(The callback routine should prompt the user to insert the) 243 260.33 T
-0.07 (source disk. The second argument is meaningless for this call.) 243 248.33 P
(The third argument is the number identifying the drive.) 243 236.33 T
1 9 Q
(CALLBACK_GET_DEST_DISK) 180 217.33 T
1 10 Q
(The callback routine should prompt the user to insert the) 243 205.33 T
-0.16 (destination disk. The second argument is meaningless for this) 243 193.33 P
(call. The third argument is the number identifying the drive.) 243 181.33 T
1 9 Q
(CALLBACK_REPORT_NUM_SW) 180 162.33 T
(APS) 320.34 162.33 T
1 10 Q
(The second argument is meaningless for this call. The third) 243 150.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "629" 19
%%Page: "630" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(630) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.59 (argument is the number of disk swaps that will be necessary to) 243 641.33 P
(copy the disk. The callback routine may wish to report this) 243 629.33 T
(number to the user and ask for con\336rmation.) 243 617.33 T
1 9 Q
(CALLBACK_VERIFY_DEST_DESTRUCTION) 180 598.33 T
1 10 Q
-0.8 (If the destination disk has already been formatted, the callback) 243 586.33 P
-0.69 (routine will be called with this parameter) 243 574.33 P
-0.69 (. The callback routine) 430.58 574.33 P
(may wish to remind the user that the destination disk will be) 243 562.33 T
(erased. The second argument is the handle of the destination) 243 550.33 T
-0.44 (disk; this is useful if, for example, you want to report the disk\325) 243 538.33 P
-0.44 (s) 524.03 538.33 P
(name. The third argument is the destination drive\325) 243 526.33 T
(s number) 477.66 526.33 T
(.) 520.44 526.33 T
-0.51 (As in the other cases, the callback routine can abort the format) 243 514.33 P
(by returning non-zero.) 243 502.33 T
1 9 Q
(CALLBACK_REPORT_FORMA) 180 483.33 T
(T_PERCT) 313 483.33 T
1 10 Q
-0.37 (If the destination disk needs to be formatted,) 243 471.33 P
5 F
-0.38 (DiskCopy\050\051) 450.8 471.33 P
1 F
-0.37 ( will) 508.95 471.33 P
(periodically call the callback routine with this parameter) 243 459.33 T
(. In) 505.63 459.33 T
(this case, the second argument will be meaningless; the third) 243 447.33 T
-0.43 (parameter will be the percentage of the destination disk which) 243 435.33 P
(has been formatted.) 243 423.33 T
1 9 Q
(CALLBACK_REPORT_COPY_PERCT) 180 404.33 T
1 10 Q
(While the copy is taking place,) 243 392.33 T
5 F
(DiskCopy\050\051) 386.91 392.33 T
1 F
( will periodically) 445.06 392.33 T
-0 (call the callback routine with this parameter) 243 380.33 P
-0 (. In this case, the) 448.95 380.33 P
(second parameter will be meaningless; the third parameter) 243 368.33 T
(will be the percentage of the copy which has been completed.) 243 356.33 T
-0.43 (If the copy was successful,) 180 337.33 P
5 F
-0.44 (DiskCopy\050\051) 301.94 337.33 P
1 F
-0.43 ( returns zero. Otherwise, it returns a) 360.09 337.33 P
(member of the) 180 324.33 T
5 F
(DiskCopyError) 249.45 324.33 T
1 F
( enumerated type, which has the following) 329.09 324.33 T
(members:) 180 311.33 T
1 9 Q
(ERR_DISKCOPY_INSUFFICIENT_MEM) 180 291.33 T
1 10 Q
(This is returned if the routine was unable to get adequate) 243 279.33 T
(memory) 243 267.33 T
(.) 279.48 267.33 T
(ERR_CANT_COPY_FIXED_DISKS) 180 248.33 T
(ERR_CANT_READ_FROM_SOURCE) 180 229.33 T
(ERR_CANT_WRITE_TO_DEST) 180 210.33 T
(ERR_INCOMP) 180 191.33 T
(A) 249.25 191.33 T
(TIBLE_FORMA) 255.92 191.33 T
(TS) 330.55 191.33 T
1 9 Q
(ERR_OPERA) 180 172.33 T
(TION_CANCELLED) 236 172.33 T
1 10 Q
(This is returned if the callback routine ever returned a) 243 160.33 T
(non-zero value, thus aborting the copy) 243 148.33 T
(.) 418.93 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "630" 20
%%Page: "631" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Directories and Paths) 414.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(631) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(ERR_CANT_FORMA) 180 641.33 T
(T_DEST) 278.7 641.33 T
0 14 Q
(17.4) 134.76 590 T
0 24 Q
(Directories and Paths) 180 590 T
1 10 Q
-0.71 (Information, whether code or data, is always stored in \336les. However) 180 564.33 P
-0.71 (, storage) 490.18 564.33 P
(volumes are not simply collections of \336les. Rather) 180 551.33 T
(, they are organized into) 407.98 551.33 T
(directories. There are two main reasons for this organization.) 180 538.33 T
-0.82 (First, a large storage device can easily contain hundreds or thousands of \336les.) 180 518.33 P
(Computer users need to be able to \336nd a speci\336c \336le quickly) 180 505.33 T
(. If they were) 455.03 505.33 T
(confronted with a list of all the \336les on a storage device, they would have a) 180 492.33 T
(hard time \336nding the one they want. The directory structure solves this) 180 479.33 T
-0.65 (problem; users can navigate through the directory tree until they \336nd the \336le) 180 466.33 P
(they want.) 180 453.33 T
-0.19 (The other reason for the directory structure is to expand the name-space for) 180 433.33 P
-0.74 (\336les. If every \336le on a volume were forced to have a unique name, users would) 180 420.33 P
-0.62 (\336nd themselves severely restricted. Directories allow more \337exibility; since a) 180 407.33 P
(\336le is identi\336ed by both its name and its location, its name need only be) 180 394.33 T
(unique within its directory) 180 381.33 T
(.) 302.6 381.33 T
-0.62 (A \336le can be uniquely speci\336ed by a) 180 361.33 P
3 F
-0.62 (full path) 342.27 361.33 P
1 F
-0.62 (. A full path speci\336es the volume) 381.64 361.33 P
(containing the \336le as well as all the directories containing the \336le, starting) 180 348.33 T
(with the root directory) 180 335.33 T
(. The volume speci\336cation can usually be omitted,) 282.96 335.33 T
(indicating that the \336le is on the same volume as the current working) 180 322.33 T
(directory) 180 309.33 T
(. Alternatively) 220.36 309.33 T
(, the \336le can be speci\336ed with a) 286.11 309.33 T
3 F
(relative path) 433.36 309.33 T
1 F
(. A) 491.68 309.33 T
(relative path speci\336es the \336le\325) 180 296.33 T
(s position relative to the current working) 317.61 296.33 T
(directory) 180 283.33 T
(, instead of starting with the root.) 220.36 283.33 T
(In most implementations of) 180 263.33 T
1 9 Q
(DOS) 310.2 263.33 T
1 10 Q
(, there is a standard way of describing a) 329.87 263.33 T
-0.1 (path. These conventions are used in) 180 250.33 P
1 9 Q
-0.09 (GEOS) 348.11 250.33 P
1 10 Q
-0.1 ( as well. A full path begins with a) 374.28 250.33 P
(backslash, which represents the root directory) 180 237.33 T
(. This may be followed by one) 392.41 237.33 T
-0.85 (or more directory speci\336cations, separated by backslashes. The \336rst directory) 180 224.33 P
-0.82 (listed would be a member of the root directory; each following directory would) 180 211.33 P
(be a member of the preceding directory) 180 198.33 T
(. A relative path is the same, except) 359.26 198.33 T
(that it does not begin with a backslash. In either a full or a relative path,) 180 185.33 T
(their are two special directory names. A single period \050\322.\323\051 speci\336es the) 180 172.33 T
-0.83 (current directory; that is, the path \322.\323 indicates the current working directory) 180 159.33 P
-0.83 (,) 526.27 159.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "631" 21
%%Page: "632" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(632) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(and the path \322) 180 641.33 T
1 9 Q
(\134GEOWORKS\134DOCUMENT) 245.94 641.33 T
1 10 Q
(\323 is the same as the paths) 368.52 641.33 T
(\322) 180 628.33 T
1 9 Q
(\134GEOWORKS\134DOCUMENT\134.) 183.89 628.33 T
1 10 Q
(\323 and \322) 314.43 628.33 T
1 9 Q
(\134GEOWORKS\134.\134DOCUMENT) 345.18 628.33 T
1 10 Q
(\323. A double) 475.71 628.33 T
(period \050\322..\323\051 indicates the parent of the current directory; thus,) 180 615.33 T
(\322) 180 602.33 T
1 9 Q
(\134GEOWORKS\134DOCUMENT\134..) 183.89 602.33 T
1 10 Q
(\323 is equivalent to \322) 316.93 602.33 T
1 9 Q
(\134GEOWORKS) 401.4 602.33 T
1 10 Q
(\323.) 462.36 602.33 T
(The) 180 582.33 T
1 9 Q
(GEOS) 200.56 582.33 T
1 10 Q
( \336le management system allows each thread to have a working) 226.73 582.33 T
(directory) 180 569.33 T
(. Whenever a thread needs to open a \336le, it can rely on its working) 220.36 569.33 T
-0.59 (directory instead of passing a full path.) 180 556.33 P
1 9 Q
-0.53 (GEOS) 359.79 556.33 P
1 10 Q
-0.59 ( provides an added mechanism:) 385.96 556.33 P
(it de\336nes certain system) 180 543.33 T
3 F
(standard paths) 295.75 543.33 T
1 F
( which can be reached with simple) 366.29 543.33 T
(system commands. These paths provide a way to standardize directory) 180 530.33 T
(usage; an application might, for example, keep a certain data \336le in the) 180 517.33 T
(standard) 180 504.33 T
1 9 Q
(PRIVDA) 224.45 504.33 T
(T) 260.12 504.33 T
(A) 265.62 504.33 T
1 10 Q
( directory) 272.12 504.33 T
(, leaving the user to decide where that) 315.26 504.33 T
1 9 Q
-0.38 (PRIVDA) 180 491.33 P
-0.38 (T) 215.67 491.33 P
-0.38 (A) 221.18 491.33 P
1 10 Q
-0.42 ( directory may be. This is covered in detail in the following section.) 227.67 491.33 P
0 14 Q
(17.4.1) 123.08 449 T
0 18 Q
(Standard Paths) 180 449 T
1 10 Q
(The) 180 425.33 T
1 9 Q
(GEOS) 200.56 425.33 T
1 10 Q
( system is designed to run on a wide variety of architectures. For) 226.73 425.33 T
-0.04 (example, it can be stored on a hard disk, recorded in) 180 412.33 P
1 9 Q
-0.04 (ROM) 423.81 412.33 P
1 10 Q
-0.04 ( chips, or resident) 445.8 412.33 P
(on a network server and run by members of the network. This presents a) 180 399.33 T
(dif\336culty) 180 386.33 T
(. The system uses many \336les, storing both code \050such as libraries\051) 220.18 386.33 T
(and data \050such as fonts\051. It can\325) 180 373.33 T
(t assume that they are in any speci\336c place.) 324.65 373.33 T
-0.03 (For example, a user might be running) 180 360.33 P
1 9 Q
-0.03 (GEOS) 357.97 360.33 P
1 10 Q
-0.03 ( from a network server) 384.15 360.33 P
-0.03 (, but she) 488.66 360.33 P
-0.1 (might have several fonts for personal use on her own hard disk. The system) 180 347.33 P
(has to be able to look in all the right places. Applications have a similar) 180 334.33 T
(dilemma. An application needs to be able to choose an appropriate place to) 180 321.33 T
(create data \336les, and needs to be able to \336nd them later) 180 308.33 T
(.) 435.98 308.33 T
-0.6 (The solution to this is to use) 180 288.33 P
3 F
-0.6 (standard paths) 309.15 288.33 P
1 F
-0.6 (. There are a number of standard) 379.08 288.33 P
(directories) 180 275.33 T
1 9 Q
(GEOS) 231.66 275.33 T
1 10 Q
( uses. Each one of these has a constant associated with it.) 257.83 275.33 T
(The constants are treated as special disk handles. For example, the routine) 180 262.33 T
5 F
(FileSetCurrentPath\050\051) 180 249.33 T
1 F
( \050described in section 17.4.2 on page 636\051 takes two) 291.3 249.33 T
-0.16 (arguments, a disk handle and a path string. If the disk handle passed is the) 180 236.33 P
-0.01 (constant) 180 223.33 P
1 9 Q
-0.01 (SP_DOCUMENT) 222.4 223.33 P
1 10 Q
-0.01 ( and the string passed is \322Memos\323, the routine will) 294.74 223.33 P
(look in the standard document path for a directory called \322Memos\323 and will) 180 210.33 T
(open it.) 180 197.33 T
(There are two advantages to standard paths. The \336rst is that they give the) 180 177.33 T
-0.64 (system and the applications points of reference. An application does not need) 180 164.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "632" 22
%%Page: "633" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Directories and Paths) 414.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(633) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(to worry where to write its internal data \336les; it can simply install them in) 180 641.33 T
(the standard) 180 628.33 T
1 9 Q
(PRIVDA) 242.23 628.33 T
(T) 277.9 628.33 T
(A) 283.4 628.33 T
1 10 Q
( directory) 289.9 628.33 T
(.) 333.04 628.33 T
(The second advantage is that the standard paths do not need to correspond) 180 608.33 T
-0.85 (to any one speci\336c directory) 180 595.33 P
-0.85 (. A standard path can actually be several different) 303.63 595.33 P
1 9 Q
(DOS) 180 582.33 T
1 10 Q
( directories. For example, the) 199.67 582.33 T
1 9 Q
(GEOS) 337.83 582.33 T
1 10 Q
( kernel looks for font \336les in the) 364.01 582.33 T
(standard path) 180 569.33 T
1 9 Q
(SP_FONT) 248.53 569.33 T
1 10 Q
(. The user may de\336ne this path to be several) 290.13 569.33 T
(directories; it might comprise a local directory for the most commonly used) 180 556.33 T
(fonts, a network directory for some decorative fonts, etc. The \336le system) 180 543.33 T
(would automatically locate all of these fonts. Similarly) 180 530.33 T
(, the) 430.61 530.33 T
1 9 Q
(SP_DOCUMENT) 453.95 530.33 T
1 10 Q
-0.76 (directory might comprise a directory on a) 180 517.33 P
1 9 Q
-0.68 (ROM) 368.01 517.33 P
1 10 Q
-0.76 ( disk for read-only \336les, as well) 390 517.33 P
(as a directory on a hard disk where \336les are written. A standard path is) 180 504.33 T
-0.18 (considered \322read-only\323 if and only if all of the directories which make up the) 180 491.33 P
(standard path are read-only) 180 478.33 T
(. When you create a \336le directly in a standard) 308.9 478.33 T
-0.38 (path \050as opposed to in a subdirectory of a standard path\051, the \336le system will) 180 465.33 P
(write it to the directory on the disk containing the) 180 452.33 T
5 F
(geos.ini) 413.91 452.33 T
1 F
( \336le.) 453.9 452.33 T
-0.83 (The standard paths have a default hierarchy) 180 432.33 P
-0.83 (. For example, the standard path) 380.96 432.33 P
1 9 Q
(SP_VIDEO_DRIVERS) 180 419.33 T
1 10 Q
( usually refers to a directory named) 273.66 419.33 T
1 9 Q
(VIDEO) 441.26 419.33 T
1 10 Q
( which) 471.93 419.33 T
(belongs to the standard path) 180 406.33 T
1 9 Q
(SP_SYSTEM) 315.58 406.33 T
1 10 Q
(. However) 370.43 406.33 T
(, the user is allowed to) 416.17 406.33 T
(de\336ne each standard path however he or she wishes. For this reason, the) 180 393.33 T
(programmer may not make any assumptions about where each standard) 180 380.33 T
(path is located.) 180 367.33 T
(Below is a list of standard paths currently implemented. The paths are) 180 347.33 T
(described as if they were single directories; remember) 180 334.33 T
(, however) 427.97 334.33 T
(, that each) 471.49 334.33 T
-0.03 (one of these may comprise several directories. Each path is accompanied by) 180 321.33 P
-0.32 (notes on how it is used and where it might commonly be found. The user can) 180 308.33 P
-0.71 (decide where each of these directories is, so make no assumptions about their) 180 295.33 P
-0.82 (locations. These paths will always be supported; future versions of) 180 282.33 P
1 9 Q
-0.74 (GEOS) 481.09 282.33 P
1 10 Q
-0.82 ( may) 507.26 282.33 P
(add new paths.) 180 269.33 T
1 9 Q
(SP_TOP) 180 249.33 T
1 10 Q
(The top level directory) 243 249.33 T
(. This is the directory which contains) 345.78 249.33 T
1 9 Q
(GEOS.INI) 243 237.33 T
1 10 Q
(. This is often) 286.33 237.33 T
1 9 Q
(C:\134GEOWORKS) 351.9 237.33 T
1 10 Q
(.) 421.86 237.33 T
1 9 Q
(SP_APPLICA) 180 218.33 T
(TION) 236.84 218.33 T
1 10 Q
-0.24 (All non-system applications are in this directory or a directory) 243 206.33 P
-0.14 (belonging to it. This is often a) 243 194.33 P
1 9 Q
-0.13 (WORLD) 382.21 194.33 P
1 10 Q
-0.14 ( directory under) 417.55 194.33 P
1 9 Q
-0.13 (SP_TOP) 494.33 194.33 P
1 10 Q
-0.14 (.) 528.22 194.33 P
1 9 Q
(SP_DOCUMENT) 180 175.33 T
1 10 Q
(All document \336les should go here. This is commonly a) 243 163.33 T
1 9 Q
(DOCUMENT) 243 151.33 T
1 10 Q
( directory under) 299.17 151.33 T
1 9 Q
(SP_TOP) 376.38 151.33 T
1 10 Q
(.) 410.27 151.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "633" 23
%%Page: "634" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(634) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(SP_SYSTEM) 180 641.33 T
1 10 Q
(All libraries and drivers belong to this directory) 243 641.33 T
(. All libraries) 462.46 641.33 T
(must go in this directory) 243 629.33 T
(, not in a subdirectory) 355.41 629.33 T
(. Drivers are) 455.79 629.33 T
-0.51 (further grouped into subdirectories, one for each type of driver) 243 617.33 P
-0.51 (.) 525.95 617.33 P
(This is commonly a) 243 605.33 T
1 9 Q
(SYSTEM) 334.87 605.33 T
1 10 Q
( directory under) 373.54 605.33 T
1 9 Q
(SP_TOP) 450.75 605.33 T
1 10 Q
(. Geodes) 484.64 605.33 T
(should never need to directly access this directory) 243 593.33 T
(, other than) 471.88 593.33 T
(for installing drivers to it.) 243 581.33 T
1 9 Q
(SP_PRIV) 180 562.33 T
(A) 217.84 562.33 T
(TE_DA) 223.84 562.33 T
(T) 253.85 562.33 T
(A) 259.35 562.33 T
1 10 Q
-0.32 (This contains data \336les which should not be accessed by users.) 243 550.33 P
-0.04 (By convention, each geode creates a subdirectory with its own) 243 538.33 P
-0.34 (data \336les. For example, the application) 243 526.33 P
1 9 Q
-0.31 (HELLO.GEO) 424.15 526.33 P
1 10 Q
-0.34 ( would use) 480.16 526.33 P
(a directory called) 243 514.33 T
1 9 Q
(HELLO) 325.41 514.33 T
1 10 Q
( in) 358.41 514.33 T
1 9 Q
(SP_PRIV) 373.23 514.33 T
(A) 411.07 514.33 T
(TE_DA) 417.07 514.33 T
(T) 447.08 514.33 T
(A) 452.59 514.33 T
1 10 Q
(. This is) 459.08 514.33 T
(commonly a) 243 502.33 T
1 9 Q
(PRIVDA) 300.97 502.33 T
(T) 336.64 502.33 T
(A) 342.14 502.33 T
1 10 Q
( directory under) 348.64 502.33 T
1 9 Q
(SP_TOP) 425.85 502.33 T
1 10 Q
(.) 459.74 502.33 T
1 9 Q
(SP_DOS_ROOM) 180 483.33 T
1 10 Q
(This directory contains the) 243 471.33 T
1 9 Q
(DOS) 370.04 471.33 T
1 10 Q
(-room launchers. It is) 389.71 471.33 T
(commonly a) 243 459.33 T
1 9 Q
(DOSROOM) 300.97 459.33 T
1 10 Q
( directory under) 349.64 459.33 T
1 9 Q
(SP_TOP) 426.85 459.33 T
1 10 Q
(.) 460.74 459.33 T
1 9 Q
(SP_ST) 180 440.33 T
(A) 207.35 440.33 T
(TE) 213.35 440.33 T
1 10 Q
(This directory contains all state \336les. It is commonly a) 243 440.33 T
1 9 Q
(ST) 496.37 440.33 T
(A) 507.55 440.33 T
(TE) 513.55 440.33 T
1 10 Q
(directory under) 243 428.33 T
1 9 Q
(PRIVDA) 317.43 428.33 T
(T) 353.1 428.33 T
(A) 358.61 428.33 T
1 10 Q
(.) 365.1 428.33 T
(SP_USER_DA) 180 409.33 T
(T) 246.31 409.33 T
(A) 252.43 409.33 T
-0.45 (This directory holds data \336les that the user may add to, delete,) 243 397.33 P
-0.15 (upgrade, or otherwise change. Each data \336le type should have) 243 385.33 P
-0.66 (its own subdirectory) 243 373.33 P
-0.66 (. This is commonly a USERDA) 334.46 373.33 P
-0.66 (T) 471.95 373.33 P
-0.66 (A directory) 478.07 373.33 P
(under SP_TOP) 243 361.33 T
(.) 310.98 361.33 T
1 9 Q
(SP_FONT) 180 342.33 T
1 10 Q
(This directory contains all font data \336les, no matter what) 243 342.33 T
(format they are. It is often) 243 330.33 T
1 9 Q
(USERDA) 368.01 330.33 T
(T) 407.02 330.33 T
(A\134FONT) 412.52 330.33 T
1 10 Q
(.) 449.9 330.33 T
1 9 Q
(SP_SPOOL) 180 311.33 T
1 10 Q
(This directory contains all application spooler \336les. It is) 243 311.33 T
(commonly) 243 299.33 T
1 9 Q
(USERDA) 292.63 299.33 T
(T) 331.64 299.33 T
(A\134SPOOL) 337.14 299.33 T
1 10 Q
(.) 380.78 299.33 T
1 9 Q
(SP_SYS_APPLICA) 180 280.33 T
(TION) 259.02 280.33 T
1 10 Q
-0.64 (This directory contains all system applications. For example, it) 243 268.33 P
(contains the Geoworks Pro \322W) 243 256.33 T
(elcome\323 application. These) 382.83 256.33 T
(applications should not be launched by the user from the) 243 244.33 T
(desktop. This directory is commonly) 243 232.33 T
1 9 Q
(SYSTEM\134SYSAPPL) 412.27 232.33 T
1 10 Q
(.) 498.58 232.33 T
1 9 Q
(SP_MOUSE_DRIVERS) 180 213.33 T
1 10 Q
(This directory contains all mouse drivers. It is commonly) 243 201.33 T
1 9 Q
(SYSTEM\134MOUSE) 243 189.33 T
1 10 Q
(.) 322.13 189.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "634" 24
%%Page: "635" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Directories and Paths) 414.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(635) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(SP_PRINTER_DRIVERS) 180 641.33 T
1 10 Q
(This contains all printer drivers. It is commonly) 243 629.33 T
1 9 Q
(SYSTEM\134PRINTER) 243 617.33 T
1 10 Q
(.) 329.62 617.33 T
1 9 Q
(SP_FILE_SYSTEM_DRIVERS) 180 598.33 T
1 10 Q
-0.69 (This directory contains drivers for \336le systems. It has both) 243 586.33 P
1 9 Q
-0.62 (DOS) 509.24 586.33 P
1 10 Q
(and network drivers. It is commonly) 243 574.33 T
1 9 Q
(SYSTEM\134FS) 413.38 574.33 T
1 10 Q
(.) 469.18 574.33 T
1 9 Q
(SP_VIDEO_DRIVERS) 180 555.33 T
1 10 Q
(This directory contains video drivers. It is commonly) 243 543.33 T
1 9 Q
(SYSTEM\134VIDEO) 243 531.33 T
1 10 Q
(.) 317.79 531.33 T
1 9 Q
(SP_SW) 180 512.33 T
(AP_DRIVERS) 209.84 512.33 T
1 10 Q
(This directory has all of the swap drivers. It is commonly) 243 500.33 T
1 9 Q
(SYSTEM\134SW) 243 488.33 T
(AP) 300.8 488.33 T
1 10 Q
(.) 312.01 488.33 T
1 9 Q
(SP_KEYBOARD_DRIVERS) 180 469.33 T
1 10 Q
(This directory has all of the keyboard drivers. It is commonly) 243 457.33 T
1 9 Q
(SYSTEM\134KEYBOARD) 243 445.33 T
1 10 Q
(.) 340.46 445.33 T
1 9 Q
(SP_FONT_DRIVERS) 180 426.33 T
1 10 Q
(This directory has all of the font drivers. It is commonly) 243 414.33 T
1 9 Q
(SYSTEM\134FONT) 243 402.33 T
1 10 Q
(.) 312.55 402.33 T
1 9 Q
(SP_IMPORT_EXPORT_DRIVERS) 180 383.33 T
1 10 Q
(This directory has all of the import/export libraries. It is) 243 371.33 T
(commonly) 243 359.33 T
1 9 Q
(SYSTEM\134IMPEX) 292.63 359.33 T
1 10 Q
(.) 367.75 359.33 T
1 9 Q
(SP_T) 180 340.33 T
(ASK_SWITCH_DRIVERS) 201.68 340.33 T
1 10 Q
(This directory contains all task-switching drivers. It is) 243 328.33 T
(commonly) 243 316.33 T
1 9 Q
(SYSTEM\134T) 292.63 316.33 T
(ASK) 342.27 316.33 T
1 10 Q
(.) 361.43 316.33 T
1 9 Q
(SP_HELP_FILES) 180 297.33 T
1 10 Q
(This directory contains all help \336les. It is commonly) 243 285.33 T
1 9 Q
(USERDA) 243 273.33 T
(T) 282.01 273.33 T
(A\134HELP) 287.51 273.33 T
1 10 Q
(.) 324.18 273.33 T
1 9 Q
(SP_TEMPLA) 180 254.33 T
(TE) 235.18 254.33 T
1 10 Q
(This directory contains document templates. It is commonly) 243 242.33 T
1 9 Q
(DOCUMENT\134TEMPLA) 243 230.33 T
(TE) 343.63 230.33 T
1 10 Q
(.) 356.13 230.33 T
1 9 Q
(SP_POWER_DRIVERS) 180 211.33 T
1 10 Q
(This directory contains power) 243 199.33 T
(-management drivers. It is) 380.04 199.33 T
(commonly) 243 187.33 T
1 9 Q
(SYSTEM\134POWER) 292.63 187.33 T
1 10 Q
(.) 371.59 187.33 T
1 9 Q
(SP_HWR) 180 168.33 T
1 10 Q
(This directory contains the handwriting recognition libraries.) 243 168.33 T
(It is commonly) 243 156.33 T
1 9 Q
(SYSTEM) 313.93 156.33 T
1 10 Q
(\134) 352.6 156.33 T
1 9 Q
(HWR.) 358.66 156.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "635" 25
%%Page: "636" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(636) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(SP_W) 180 641.33 T
(ASTE_BASKET) 204.17 641.33 T
1 10 Q
(This directory contains \336les that have been dragged to the) 243 629.33 T
(waste basket but have not yet been thrown out. All non-open) 243 617.33 T
(\336les and directories in this path are periodically deleted.) 243 605.33 T
-0.69 (T) 243 593.33 P
-0.69 (emporary \336les should usually be created here; they will not be) 248.75 593.33 P
(deleted until after they have been closed. This directory is) 243 581.33 T
(commonly) 243 569.33 T
1 9 Q
(PRIVDA) 292.63 569.33 T
(T) 328.3 569.33 T
(A\134W) 333.8 569.33 T
(ASTE) 353.76 569.33 T
1 10 Q
(.) 378.43 569.33 T
1 9 Q
(SP_BACKUP) 180 550.33 T
1 10 Q
(This directory contains backup \336les made by the document) 243 550.33 T
(control. It is commonly) 243 538.33 T
1 9 Q
(\134PRIVDA) 351.52 538.33 T
(T) 392.64 538.33 T
(A\134BACKUP) 398.15 538.33 T
1 10 Q
(.) 448.64 538.33 T
0 14 Q
(17.4.2) 123.08 497 T
0 18 Q
(Current Path and Directory Stack) 180 497 T
4 10 Q
(FileSetCurrentPath\050\051, FileGetCurrentPath\050\051,) 180 473.33 T
(FileConstructFullPath\050\051, FileParseStandardPath\050\051,) 180 460.33 T
(FileResolveStandardPath\050\051, FilePushDir\050\051, FilePopDir\050\051,) 180 447.33 T
(FileResolveStandardPathFlags) 180 434.33 T
1 F
(Every thread has a) 180 414.33 T
3 F
(current path) 271.12 414.33 T
1 F
(. When the thread opens a \336le, it can pass) 328.51 414.33 T
-0.49 (just the name of the \336le; the \336le system combines this name with the current) 180 401.33 P
(path to \336nd the \336le. The path is a combination of a disk handle and a) 180 388.33 T
(directory sequence. T) 180 375.33 T
(o set the thread\325) 277.41 375.33 T
(s current path, call the routine) 351.68 375.33 T
5 F
(FileSetCurrentPath\050\051) 180 362.33 T
1 F
(, which takes two arguments: a disk handle and a) 291.3 362.33 T
-0.01 (pointer to a null-terminated string. The string should contain a sequence of) 180 349.33 P
-0.05 (directories speci\336ed in the normal) 180 336.33 P
1 9 Q
-0.04 (DOS) 339.77 336.33 P
1 10 Q
-0.05 ( convention. T) 359.44 336.33 P
-0.05 (o change to a standard) 423.62 336.33 P
(path, pass the path constant as the disk handle and a null string \050i.e. a) 180 323.33 T
(pointer to a null byte\051. T) 180 310.33 T
(o change to a subdirectory of a standard path, pass) 291.88 310.33 T
(the path constant as the disk handle and a pointer to a relative or absolute) 180 297.33 T
(path speci\336cation; for example, to change to the) 180 284.33 T
1 9 Q
(HELLO) 403.17 284.33 T
1 10 Q
( directory in) 436.17 284.33 T
1 9 Q
-0.6 (PRIVDA) 180 271.33 P
-0.6 (T) 215.67 271.33 P
-0.6 (A) 221.18 271.33 P
1 10 Q
-0.67 (, pass the disk handle constant) 227.67 271.33 P
1 9 Q
-0.6 (SP_PRIV) 369.42 271.33 P
-0.6 (A) 407.25 271.33 P
-0.6 (TE_DA) 413.25 271.33 P
-0.6 (T) 443.26 271.33 P
-0.6 (A) 448.77 271.33 P
1 10 Q
-0.67 ( and a pointer to) 455.27 271.33 P
-0.11 (the string \322) 180 258.33 P
1 9 Q
-0.1 (HELLO) 231.82 258.33 P
1 10 Q
-0.11 (\323.) 264.82 258.33 P
5 F
-0.11 (FileSetCurrentPath\050\051) 274.16 258.33 P
1 F
-0.11 ( returns the handle of the disk.) 385.46 258.33 P
-0.22 (If you change to a standard path, it returns the path constant; if you change) 180 245.33 P
(to a directory within a standard path, it returns the constant of the closest) 180 232.33 T
(standard path. In the event of error) 180 219.33 T
(, it returns a null handle and sets the) 343.89 219.33 T
(thread\325) 180 206.33 T
(s error value. The error most commonly returned is) 212.41 206.33 T
1 9 Q
-0.25 (ERROR_P) 180 193.33 P
-0.25 (A) 222.83 193.33 P
-0.25 (TH_NOT_FOUND) 228.83 193.33 P
1 10 Q
-0.28 (, indicating that the speci\336ed directory could not) 306.35 193.33 P
(be found or does not exist.) 180 180.33 T
(T) 180 160.33 T
(o \336nd out the current path, call the routine) 185.75 160.33 T
5 F
(FileGetCurrentPath\050\051) 387.24 160.33 T
1 F
(. This) 500.2 160.33 T
(routine takes two arguments: the address of a character buffer and the size) 180 147.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "636" 26
%%Page: "637" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Directories and Paths) 414.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(637) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(of the buffer) 180 641.33 T
(. It returns the handle of the current path\325) 235.92 641.33 T
(s disk and writes the) 430.92 641.33 T
(path \050without drive speci\336er\051 to the buffer) 180 628.33 T
(, truncating the path if the buffer) 373.7 628.33 T
(is too small. If the directory is a standard path or a subdirectory of one,) 180 615.33 T
5 F
(FileGetCurrentPath\050\051) 180 602.33 T
1 F
( will return the disk-handle constant for that path) 292.96 602.33 T
(and will write an absolute path to the buffer) 180 589.33 T
(. If you want a full path, use) 383.93 589.33 T
5 F
(FileConstructFullPath\050\051) 180 576.33 T
1 F
( below) 305.74 576.33 T
(.) 334.09 576.33 T
-0.86 (T) 180 556.33 P
-0.86 (o translate a standard path into a full path, call) 185.75 556.33 P
5 F
-0.89 (FileConstructFullPath\050\051) 400.56 556.33 P
1 F
-0.86 (,) 526.3 556.33 P
(which takes \336ve arguments:) 180 543.33 T
2 F
(u) 180 523.33 T
1 F
-0.56 (A Boolean value indicating whether the drive name should be prepended) 198 523.33 P
(to the path string returned.) 198 511.33 T
2 F
(u) 180 492.33 T
1 F
(The handle of a disk. A null argument indicates that the path string) 198 492.33 T
-0.19 (passed is relative to the current working directory) 198 480.33 P
-0.19 (. The handle may be a) 427.26 480.33 P
-0.69 (standard path constant, indicating that the path string passed is relative) 198 468.33 P
(to that standard path.) 198 456.33 T
2 F
(u) 180 437.33 T
1 F
-0 (A pointer to a string containing a path relative to the location indicated) 198 437.33 P
(by the previous argument. This may be an empty string.) 198 425.33 T
2 F
(u) 180 406.33 T
1 F
(A pointer to a pointer to a character buffer) 198 406.33 T
(. The path will be written to) 393.93 406.33 T
-0.48 (this buffer) 198 394.33 P
-0.48 (. The routine will update this to be a pointer to a pointer to the) 245.11 394.33 P
(null terminator) 198 382.33 T
(.) 268.93 382.33 T
2 F
(u) 180 363.33 T
1 F
(The length of that buffer) 198 363.33 T
(.) 311.34 363.33 T
-0.21 (The routine writes the full path to the buffer and returns the disk handle. If) 180 344.33 P
(it is unable to construct a full path, it returns a null handle.) 180 331.33 T
(T) 180 311.33 T
(o \336nd the standard path to a given location, call the routine) 185.75 311.33 T
5 F
(FileParseStandardPath\050\051) 180 298.33 T
1 F
(. This routine is passed two arguments:) 310.93 298.33 T
2 F
(u) 180 278.33 T
1 F
-0.69 (The handle of the disk. Passing a null disk handle indicates that the path) 198 278.33 P
(string contains a drive speci\336er) 198 266.33 T
(.) 342.63 266.33 T
2 F
(u) 180 247.33 T
1 F
-0.41 (A pointer to a pointer to a path string. This path should begin at the root) 198 247.33 P
(of the disk speci\336ed.) 198 235.33 T
5 F
(FileParseStandardPath\050\051) 180 216.33 T
1 F
( returns the standard path constant. It also) 310.93 216.33 T
(updates the pointer to point to the remaining portion of the path. For) 180 203.33 T
(example, if you pass a pointer to a pointer to the string) 180 190.33 T
-0.24 (\322\134) 180 177.33 P
1 9 Q
-0.21 (GEOWORKS) 189.95 177.33 P
1 10 Q
-0.24 (\134) 245.45 177.33 P
1 9 Q
-0.21 (DOCUMENT) 251.51 177.33 P
1 10 Q
-0.24 (\134) 307.68 177.33 P
1 9 Q
-0.21 (MEMOS) 313.74 177.33 P
1 10 Q
-0.24 (\134) 349.9 177.33 P
1 9 Q
-0.21 (APRIL) 355.96 177.33 P
1 10 Q
-0.24 (\323, the pointer would be updated) 384.63 177.33 P
(to point to the \322\134) 180 164.33 T
1 9 Q
(MEMOS) 257.74 164.33 T
1 10 Q
(\134) 293.9 164.33 T
1 9 Q
(APRIL) 299.96 164.33 T
1 10 Q
(\323 portion, and the handle) 328.63 164.33 T
1 9 Q
(SP_DOCUMENT) 446.61 164.33 T
1 10 Q
-0.55 (would be returned. If the path passed does not belong to a standard path, the) 180 151.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "637" 27
%%Page: "638" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(638) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(constant) 180 641.33 T
1 9 Q
(SP_NOT_ST) 222.41 641.33 T
(ANDARD_P) 274.6 641.33 T
(A) 325.27 641.33 T
(TH) 331.27 641.33 T
1 10 Q
( will be returned, and the pointers will) 344.77 641.33 T
(not be changed.) 180 628.33 T
(Because each standard path is made up of one or more directories \050possibly) 180 608.33 T
(on different devices\051, it can be hard to know just where a \336le is. For that) 180 595.33 T
(reason,) 180 582.33 T
1 9 Q
(GEOS) 216.3 582.33 T
1 10 Q
( provides) 242.47 582.33 T
5 F
(FileResolveStandardPath\050\051) 287.1 582.33 T
1 F
(. This routine is) 428.77 582.33 T
(passed a relative path to a \336le; it then constructs the full path of the \336le,) 180 569.33 T
(starting from the root of the disk \050) 180 556.33 T
3 F
(not) 337.6 556.33 T
1 F
( from a standard path\051; it also returns) 352.23 556.33 T
(the handle of the actual disk containing the \336le.) 180 543.33 T
5 F
(FileResolveStandardPath\050\051) 180 530.33 T
1 F
( is passed four arguments:) 321.67 530.33 T
2 F
(u) 180 510.33 T
1 F
-0.14 (A pointer to a pointer to a character buffer) 198 510.33 P
-0.14 (. The full path will be written) 392.84 510.33 P
(to that buffer) 198 498.33 T
(, and the pointer will be updated to point to the null) 258.93 498.33 T
(terminator) 198 486.33 T
(.) 247.63 486.33 T
2 F
(u) 180 467.33 T
1 F
(The length of the buffer) 198 467.33 T
(, in bytes.) 306.89 467.33 T
2 F
(u) 180 448.33 T
1 F
(A pointer to a relative path string. This path is relative to the current) 198 448.33 T
(working directory) 198 436.33 T
(, which is usually a standard path.) 278.92 436.33 T
2 F
(u) 180 417.33 T
1 F
(A set of) 198 417.33 T
5 F
(FileResolveStandardPathFlags) 235.41 417.33 T
1 F
(.) 397.26 417.33 T
5 F
(FileResolveStandardPath\050\051) 180 398.33 T
1 F
( writes the full, absolute path to the buffer) 321.67 398.33 T
(speci\336ed. It also returns the handle of the disk containing that \336le. If it) 180 385.33 T
(cannot \336nd the \336le speci\336ed, it returns a null handle. There are two) 180 372.33 T
5 F
(FileResolveStandardPathFlags) 180 359.33 T
1 F
( available:) 341.85 359.33 T
1 9 Q
(FRSPF_ADD_DRIVE_NAME) 180 339.33 T
1 10 Q
(The path string written to the buffer should begin with the) 243 327.33 T
(drive name \050e.g., \322C:\134) 243 315.33 T
1 9 Q
(GEOWORKS) 342.59 315.33 T
1 10 Q
(\134) 398.09 315.33 T
1 9 Q
(DOCUMENT) 404.15 315.33 T
1 10 Q
(\134) 460.32 315.33 T
1 9 Q
(MEMOS) 466.38 315.33 T
1 10 Q
(\323\051.) 502.54 315.33 T
1 9 Q
(FRSPF_RETURN_FIRST_DIR) 180 296.33 T
5 10 Q
(FileResolveStandardPath\050\051) 243 284.33 T
1 F
( should not check whether the) 384.67 284.33 T
-0.3 (passed path actually exists; instead, it should assume that the) 243 272.33 P
-0.42 (path exists in the \336rst directory comprising the standard path,) 243 260.33 P
(and return accordingly) 243 248.33 T
(.) 347.62 248.33 T
-0.27 (In addition to having a current path, every thread has a) 180 229.33 P
3 F
-0.27 (directory stack) 438.5 229.33 P
1 F
-0.27 (. The) 505.43 229.33 P
(stack is used for switching paths quickly) 180 216.33 T
(. Y) 366.32 216.33 T
(ou can at any time push the) 377.81 216.33 T
(current path onto the stack by calling) 180 203.33 T
5 F
(FilePushDir\050\051) 356.5 203.33 T
1 F
(. This routine pushes) 427.97 203.33 T
-0.38 (the directory on the directory stack and returns nothing. Y) 180 190.33 P
-0.38 (ou can change the) 446.59 190.33 P
-0.63 (current path to the one on top of the directory stack by calling) 180 177.33 P
5 F
-0.65 (FilePopDir\050\051) 460.52 177.33 P
1 F
-0.63 (.) 526.07 177.33 P
-0.69 (This pops the top directory off the stack and makes it the current path. \050If the) 180 164.33 P
(directory stack is empty) 180 151.33 T
(, the result is unde\336ned.\051 These routines are very) 289.82 151.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "638" 28
%%Page: "639" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Directories and Paths) 414.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(639) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(useful when you write subroutines which may need to change the current) 180 641.33 T
-0.23 (working directory; they can push the old directory at the start of the routine) 180 628.33 P
(and pop it at the end.) 180 615.33 T
-0.41 (Files are often speci\336ed \322by their paths.\323 This simply means specifying them) 180 595.33 P
(with a string containing the directory path and ending with the \336le name.) 180 582.33 T
(This path may be either relative or absolute.) 180 569.33 T
0 14 Q
(17.4.3) 123.08 527 T
0 18 Q
(Creating and Deleting Directories) 180 527 T
4 10 Q
(FileCreateDir\050\051, FileDeleteDir\050\051) 180 503.33 T
1 F
-0.28 (Y) 180 483.33 P
-0.28 (ou can create directories with) 185.93 483.33 P
5 F
-0.29 (FileCreateDir\050\051) 323.78 483.33 P
1 F
-0.28 (. The routine takes a single) 403.78 483.33 P
-0.23 (argument, namely the address of a character string. If the string is simply a) 180 470.33 P
(directory name, it will attempt to create that directory at the current) 180 457.33 T
-0.37 (location. If the string is a relative path, it will create the directory at the end) 180 444.33 P
-0.47 (of the path, if possible. For example, passing the string \322Memos\134September\323) 180 431.33 P
(will cause it to check if there is a directory called \322Memos\323 at the current) 180 418.33 T
(location. If there is, it will create the directory \322September\323 inside the) 180 405.33 T
-0.21 (directory \322Memos\323. If the string is an absolute path \050i.e. there is a backslash) 180 392.33 P
-0.32 (before the \336rst directory name\051, it will behave the same way) 180 379.33 P
-0.32 (, but it will start) 453.68 379.33 P
-0.44 (with the root directory) 180 366.33 P
-0.44 (. The routine returns zero if it was successful. If it was) 281.64 366.33 P
(unsuccessful, it will return one of the following members of the) 180 353.33 T
5 F
(FileError) 473.53 353.33 T
1 F
(type:) 180 340.33 T
1 9 Q
(ERROR_INV) 180 320.33 T
(ALID_NAME) 233.99 320.33 T
1 10 Q
(The name passed was inappropriate for directories on that) 243 308.33 T
(device.) 243 296.33 T
1 9 Q
(ERROR_P) 180 277.33 T
(A) 222.83 277.33 T
(TH_TOO_LONG) 228.83 277.33 T
1 10 Q
-0.57 (The path string was longer than is permitted by the \336le system) 243 265.33 P
(for that device.) 243 253.33 T
1 9 Q
(ERROR_FILE_EXISTS) 180 234.33 T
1 10 Q
-0.42 (A \336le or directory with the speci\336ed name already exists at the) 243 222.33 P
(speci\336ed location.) 243 210.33 T
1 9 Q
(ERROR_P) 180 191.33 T
(A) 222.83 191.33 T
(TH_NOT_FOUND) 228.83 191.33 T
1 10 Q
-0.43 (The path string was in some way invalid; for example, it might) 243 179.33 P
-0.64 (have instructed) 243 167.33 P
5 F
-0.67 (FileCreateDir\050\051) 316.71 167.33 P
1 F
-0.64 ( to create the directory inside) 396.71 167.33 P
(of a directory which does not exist.) 243 155.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "639" 29
%%Page: "640" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(640) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(ERROR_ACCESS_DENIED) 180 641.33 T
1 10 Q
(The thread is not able to create directories in the speci\336ed) 243 629.33 T
(location.) 243 617.33 T
1 9 Q
(ERROR_DISK_ST) 180 598.33 T
(ALE) 256.51 598.33 T
1 10 Q
(The drive that disk was on has been removed.) 243 586.33 T
1 9 Q
(ERROR_DISK_UNA) 180 567.33 T
(V) 265.5 567.33 T
(AILABLE) 271 567.33 T
1 10 Q
-0.53 (The validation of the disk in that drive was aborted by the user) 243 555.33 P
-0.53 (.) 528.22 555.33 P
-0.16 (Note that the directory name can be any acceptable) 180 536.33 P
1 9 Q
-0.15 (GEOS) 419.13 536.33 P
1 10 Q
-0.16 ( \336le name; that is,) 445.3 536.33 P
-0.5 (it may be up to 32 characters long and can contain any characters other than) 180 523.33 P
(backslashes, colons, asterisks, or question marks. For further information) 180 510.33 T
(about) 180 497.33 T
1 9 Q
(GEOS) 208.9 497.33 T
1 10 Q
( \336le names, see section 17.5.1 on page 641.) 235.07 497.33 T
-0.35 (Y) 180 477.33 P
-0.35 (ou can delete directories with) 185.93 477.33 P
5 F
-0.36 (FileDeleteDir\050\051) 322.89 477.33 P
1 F
-0.35 (. This routine takes a single) 401.4 477.33 P
(argument, namely the address of a character string. This string can specify) 180 464.33 T
(a relative or absolute path, as with) 180 451.33 T
5 F
(FileCreateDir\050\051) 344.12 451.33 T
1 F
(. It attempts to delete) 424.12 451.33 T
-0.22 (the directory speci\336ed. \050Note that you are not allowed to delete your current) 180 438.33 P
-0.64 (directory or a non-empty directory) 180 425.33 P
-0.64 (.\051 If it successfully removes the directory) 334.83 425.33 P
-0.64 (, it) 516.9 425.33 P
(returns zero. Otherwise, it returns one of the following members of the) 180 412.33 T
5 F
(FileError) 180 399.33 T
1 F
( type:) 229.45 399.33 T
1 9 Q
(ERROR_P) 180 379.33 T
(A) 222.83 379.33 T
(TH_NOT_FOUND) 228.83 379.33 T
1 10 Q
(The directory speci\336ed could not be found or does not exist.) 243 367.33 T
1 9 Q
(ERROR_IS_CURRENT_DIRECTOR) 180 348.33 T
(Y) 331.82 348.33 T
1 10 Q
-0.54 (This directory is some thread\325) 243 336.33 P
-0.54 (s current directory) 377.71 336.33 P
-0.54 (, or else it is on) 461.61 336.33 P
-0.68 (some thread\325) 243 324.33 P
-0.68 (s directory stack. Note that you cannot delete your) 301.03 324.33 P
(own working directory) 243 312.33 T
(.) 345.59 312.33 T
1 9 Q
(ERROR_ACCESS_DENIED) 180 293.33 T
1 10 Q
(The calling thread does not have permission to delete the) 243 281.33 T
(directory) 243 269.33 T
(. This is also returned if the directory was on a) 283.36 269.33 T
(read-only device.) 243 257.33 T
1 9 Q
(ERROR_DIRECTOR) 180 238.33 T
(Y_NOT_EMPTY) 266.82 238.33 T
1 10 Q
(The directory speci\336ed is not empty) 243 226.33 T
(. Delete all the \336les before) 406.52 226.33 T
(you attempt to delete the directory) 243 214.33 T
(.) 402.27 214.33 T
1 9 Q
(ERROR_DISK_ST) 180 195.33 T
(ALE) 256.51 195.33 T
1 10 Q
(The drive that disk was on has been removed.) 243 183.33 T
1 9 Q
(ERROR_DISK_UNA) 180 164.33 T
(V) 265.5 164.33 T
(AILABLE) 271 164.33 T
1 10 Q
-0.53 (The validation of the disk in that drive was aborted by the user) 243 152.33 P
-0.53 (.) 528.22 152.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "640" 30
%%Page: "641" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(641) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.5) 134.76 632 T
0 24 Q
(Files) 180 632 T
1 10 Q
(When data is not actually in a computer) 180 606.33 T
(\325) 366.13 606.33 T
(s memory) 367.8 606.33 T
(, it needs to be grouped) 411.69 606.33 T
(together in a manageable form. Most storage devices group data together) 180 593.33 T
(into) 180 580.33 T
3 F
(\336les) 200.93 580.33 T
1 F
(. A \336le is a collection of information. It may be a program, either in) 219.25 580.33 T
(machine language or in a higher) 180 567.33 T
(-level language \050as with batch \336les\051; or it) 329.65 567.33 T
(may be data.) 180 554.33 T
-0.05 (When an application is accessing a data \336le, it is said to have that \336le) 180 534.33 P
3 F
-0.05 (open) 504.2 534.33 P
1 F
-0.05 (.) 525.49 534.33 P
-0.33 (It may be open for read and write access, just for reading, or just for writing.) 180 521.33 P
(If a \336le is open, it can not be moved or deleted \050although it can be copied\051.) 180 508.33 T
(Y) 180 488.33 T
(ou will probably not have to read all of this section. \322Bytewise File) 185.93 488.33 T
-0.57 (Operations\323 \050section 17.5.6\051 is important only if you will be using) 180 475.33 P
1 9 Q
-0.51 (DOS) 476.37 475.33 P
1 10 Q
-0.57 ( \336les or) 496.04 475.33 P
1 9 Q
-0.62 (GEOS) 180 462.33 P
1 10 Q
-0.69 ( byte \336les. Most applications will work with) 206.17 462.33 P
1 9 Q
-0.62 (GEOS) 404.73 462.33 P
3 10 Q
-0.69 (V) 432.99 462.33 P
-0.69 (irtual Memory) 439.41 462.33 P
1 F
-0.69 ( \050) 505.17 462.33 P
1 9 Q
-0.62 (VM) 510.59 462.33 P
1 10 Q
-0.69 (\051) 525.58 462.33 P
(\336les.) 180 449.33 T
0 14 Q
(17.5.1) 123.08 407 T
0 18 Q
(DOS Files and GEOS Files) 180 407 T
1 10 Q
(Most \336le systems have a simple convention of what a \336le is. Applications) 180 383.33 T
-0.79 (treat \336les as if they were a sequence of bytes. They can read the bytes in order) 180 370.33 P
-0.69 (from the \336le, copying a sequence of bytes into memory) 180 357.33 P
-0.69 (. They have a \322position\323) 422.55 357.33 P
(in the \336le, indicating the next byte to be read. An application can copy data) 180 344.33 T
(from memory to a \336le, replacing the data there.) 180 331.33 T
1 9 Q
(GEOS) 180 311.33 T
1 10 Q
( allows geodes to access any type of) 206.17 311.33 T
1 9 Q
(DOS) 371.38 311.33 T
1 10 Q
( \336le using the normal) 391.06 311.33 T
1 9 Q
(DOS) 492.74 311.33 T
1 10 Q
(conventions. However) 180 298.33 T
(, it also provides its own \336le format, the) 280.55 298.33 T
1 9 Q
(GEOS) 466.51 298.33 T
1 10 Q
( \336le.) 492.68 298.33 T
1 9 Q
-0.02 (GEOS) 180 285.33 P
1 10 Q
-0.02 ( \336les are stored on the disk as normal) 206.17 285.33 P
1 9 Q
-0.02 (DOS) 382.52 285.33 P
1 10 Q
-0.02 ( \336les. This means that they) 402.19 285.33 P
(can be copied from one disk to another by any normal) 180 272.33 T
1 9 Q
(DOS) 429.66 272.33 T
1 10 Q
( procedure; they) 449.33 272.33 T
(can be uploaded or downloaded, compressed, archived, or transferred to) 180 259.33 T
(different devices exactly as if they were ordinary) 180 246.33 T
1 9 Q
(DOS) 407.41 246.33 T
1 10 Q
( \336les. Nevertheless,) 427.08 246.33 T
(when a system is running) 180 233.33 T
1 9 Q
(GEOS) 302.05 233.33 T
1 10 Q
(, the \336les have added functionality) 328.22 233.33 T
(.) 486.76 233.33 T
1 9 Q
(GEOS) 492.32 233.33 T
1 10 Q
-0.67 (data \336les have special) 180 220.33 P
3 F
-0.67 (extended attributes) 281.81 220.33 P
1 F
-0.67 (, which keep track of such things as) 368.71 220.33 P
-0.62 (the \336le\325) 180 207.33 P
-0.62 (s tokens, protocol numbers, etc. For more information about extended) 213.09 207.33 P
(attributes, see section 17.5.3 on page 643.) 180 194.33 T
(Most) 180 174.33 T
1 9 Q
(GEOS) 205.74 174.33 T
1 10 Q
( data \336les are) 231.91 174.33 T
3 F
(V) 297.67 174.33 T
(irtual Memory) 304.09 174.33 T
1 F
( \336les.) 370.55 174.33 T
1 9 Q
( VM) 395 174.33 T
1 10 Q
(\336les can automatically) 415 174.33 T
-0.68 (back up data; they allow their users to insert data at any point in the \336le, and) 180 161.33 P
(when the \336le\325) 180 148.33 T
(s user needs access to data the) 241.49 148.33 T
1 9 Q
(VM) 385.58 148.33 T
1 10 Q
( manager automatically) 400.57 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "641" 31
%%Page: "642" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(642) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(allocates memory and swaps the data into it. These \336les are created and) 180 641.33 T
(accessed using special) 180 628.33 T
1 9 Q
(VM) 284.82 628.33 T
1 10 Q
( routines; for more information, see \322V) 299.81 628.33 T
(irtual) 476.41 628.33 T
(Memory) 180 615.33 T
(,\323 Chapter) 217.03 615.33 T
(18. Note that you can have a) 267.22 615.33 T
1 9 Q
(GEOS) 402.26 615.33 T
1 10 Q
( \336le hold raw data) 428.43 615.33 T
(instead of having) 180 602.33 T
1 9 Q
(VM) 262.42 602.33 T
1 10 Q
( capability) 277.41 602.33 T
(. Such a \336le is known as a \322byte\323 \336le since it) 324.65 602.33 T
-0.42 (is treated as a sequence of bytes with no structure except what is speci\336cally) 180 589.33 P
-0.07 (added by the \336le\325) 180 576.33 P
-0.07 (s creator) 257.76 576.33 P
-0.07 (. All of the routines for working with) 297.12 576.33 P
1 9 Q
-0.07 (DOS) 468.21 576.33 P
1 10 Q
-0.07 ( \336les can) 487.88 576.33 P
(be used with) 180 563.33 T
1 9 Q
(GEOS) 241.31 563.33 T
1 10 Q
( byte \336les.) 267.48 563.33 T
(One basic difference between) 180 543.33 T
1 9 Q
(GEOS) 317.23 543.33 T
1 10 Q
( \336les and) 343.4 543.33 T
1 9 Q
(DOS) 388.04 543.33 T
1 10 Q
( \336les is in naming) 407.72 543.33 T
(conventions. Each \336le system and disk-operating system has its own) 180 530.33 T
-0.32 (convention for how \336les may be named. By far) 180 517.33 P
-0.32 (, the most common convention) 390.02 517.33 P
(is the one used by) 180 504.33 T
1 9 Q
(MS-DOS) 265.2 504.33 T
1 10 Q
(: each \336le is identi\336ed by a name of up to eight) 302.04 504.33 T
-0.69 (characters, followed by an optional extension of up to three characters. There) 180 491.33 P
(are further restrictions on which characters may be part of a name; for) 180 478.33 T
(example, none of the characters may be a period.) 180 465.33 T
1 9 Q
(GEOS) 180 445.33 T
1 10 Q
( provides more versatility) 206.17 445.33 T
(. Each \336le has two different names. It has a) 323.4 445.33 T
3 F
(native) 180 432.33 T
1 F
( name; this is the name used by the device holding the \336le and must) 208.33 432.33 T
(meet all of its restrictions. For example, if the \336le is kept on a usual) 180 419.33 T
1 9 Q
(DOS) 180 406.33 T
1 10 Q
(-compatible disk, the native name would be in the) 199.67 406.33 T
1 9 Q
(FILENAME.EXT) 432.87 406.33 T
1 10 Q
-0.21 (format. The other name is the) 180 393.33 P
3 F
-0.21 (virtual) 319.87 393.33 P
1 F
-0.21 ( \336le name. This may contain a number) 351.53 393.33 P
(of characters equal to) 180 380.33 T
1 9 Q
(FILE_LONGNAME_LENGTH) 282.23 380.33 T
1 10 Q
( and may contain any) 409.9 380.33 T
(characters other than backslashes \050\322\134\323\051, colons \050\322:\323\051, asterisks \050\322*\323\051, and) 180 367.33 T
(question marks \050\322?\323\051. Any time a \336le\325) 180 354.33 T
(s name is needed, either the virtual or) 348.36 354.33 T
-0.56 (the native \336le name may be used. When a \336le is created,) 180 341.33 P
1 9 Q
-0.5 (GEOS) 436.67 341.33 P
1 10 Q
-0.56 ( automatically) 462.84 341.33 P
(maps its virtual name into an appropriate native name.) 180 328.33 T
(Special) 180 308.33 T
1 9 Q
(GEOS) 216.12 308.33 T
1 10 Q
( information, such as the \336le\325) 242.29 308.33 T
(s virtual name and extended) 376.01 308.33 T
(attributes, is stored in the body of the \336le itself. Thus, while applications) 180 295.33 T
(should not access this information directly) 180 282.33 T
(, they can still be assured that it) 374.82 282.33 T
-0.45 (will be preserved when the \336le is copied by any normal) 180 269.33 P
1 9 Q
-0.41 (DOS) 431 269.33 P
1 10 Q
-0.45 ( techniques. This) 450.67 269.33 P
(information is stored in a special header which is transparent to geodes. If) 180 256.33 T
(you use one of the bytewise \336le operations, you will not be able to affect the) 180 243.33 T
(header) 180 230.33 T
(.) 211.11 230.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "642" 32
%%Page: "643" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(643) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.5.2) 123.08 636 T
0 18 Q
(Files and File Handles) 180 636 T
4 10 Q
(FileDuplicateHandle\050\051) 180 612.33 T
1 F
(In order to read or change a \336le, you must) 180 592.33 T
3 F
(open) 376.86 592.33 T
1 F
( it with an appropriate) 398.15 592.33 T
(routine. When you open a \336le, the \336le system sees to it that the \336le will not) 180 579.33 T
-0.41 (be erased or moved until you close it. When a geode exits, all \336les it has open) 180 566.33 P
(are automatically closed. When) 180 553.33 T
1 9 Q
(GEOS) 327.61 553.33 T
1 10 Q
( exits, all \336les are closed. If an) 353.78 553.33 T
(application restarts from a saved state, it will have to reopen all \336les.) 180 540.33 T
(When you open a \336le, the) 180 520.33 T
1 9 Q
(GEOS) 299.64 520.33 T
1 10 Q
( \336le system returns a) 325.81 520.33 T
3 F
(\336le handle) 426.56 520.33 T
1 F
(. This is a) 475.06 520.33 T
(global handle associated with that \336le. Whenever you need to perform an) 180 507.33 T
(action on a \336le you have opened, you specify the \336le by passing its handle.) 180 494.33 T
(Note that there may be several handles which all refer to the same \336le. If) 180 481.33 T
(more than one thread will need to use the same handle, they may) 180 468.33 T
(synchronize their access by using) 180 455.33 T
5 F
(HandleP\050\051) 336.66 455.33 T
1 F
( and) 389.62 455.33 T
5 F
(HandleV\050\051) 412.59 455.33 T
1 F
(; for details,) 465.55 455.33 T
(see section 15.3.6 of chapter 15. The V) 180 442.33 T
(irtual Memory routines include) 356.08 442.33 T
(data-access synchronization routines for use with) 180 429.33 T
1 9 Q
(VM) 411.11 429.33 T
1 10 Q
(\336les; for details, see) 428.61 429.33 T
(\322V) 180 416.33 T
(irtual Memory) 190.67 416.33 T
(,\323 Chapter) 256.78 416.33 T
(18.) 306.97 416.33 T
-0.45 (It is sometimes useful to have two different handles which indicate the same) 180 396.33 P
-0.37 (\336le.) 180 383.33 P
1 9 Q
-0.33 (GEOS) 199.45 383.33 P
1 10 Q
-0.37 ( provides the routine) 225.62 383.33 P
5 F
-0.38 (FileDuplicateHandle\050\051) 323.02 383.33 P
1 F
-0.37 (. This routine takes) 439.32 383.33 P
(one argument, namely the handle of an open \336le. It creates and returns) 180 370.33 T
(another handle which indicates the same \336le. Y) 180 357.33 T
(ou will have to close both) 398.55 357.33 T
(handles to close the \336le.) 180 344.33 T
5 F
(FileDuplicateHandle\050\051) 293.35 344.33 T
1 F
( works on any type of \336le) 409.64 344.33 T
-0.3 (handle; that is, it can be used on the handles of) 180 331.33 P
1 9 Q
-0.27 (DOS) 397.67 331.33 P
1 10 Q
-0.3 ( \336les,) 417.35 331.33 P
1 9 Q
-0.27 (GEOS) 443.98 331.33 P
1 10 Q
-0.3 ( byte \336les, or) 470.15 331.33 P
1 9 Q
(VM) 180 318.33 T
1 10 Q
( \336les. Note that the duplicate handle will have the same read/write) 194.99 318.33 T
(position as the original.) 180 305.33 T
0 14 Q
(17.5.3) 123.08 263 T
0 18 Q
(GEOS Extended Attributes) 180 263 T
4 10 Q
(FileGetHandleExtAttributes\050\051, FileGetPathExtAttributes\050\051,) 180 239.33 T
(FileSetHandleExtAttributes\050\051, FileSetPathExtAttributes\050\051,) 180 226.33 T
(FileExtAttrDesc, FileDateAndTime, FileAttrs) 180 213.33 T
1 F
(All) 180 193.33 T
1 9 Q
(GEOS) 196.3 193.33 T
1 10 Q
( \336les, whether they contain code or data, have special) 222.47 193.33 T
3 F
(extended) 471.76 193.33 T
(attributes) 180 180.33 T
1 F
(. Geodes cannot look at these directly; instead, they make calls to) 224.62 180.33 T
(the \336le system when they want to examine or change the attributes. There) 180 167.33 T
(are many different extended attributes; however) 180 154.33 T
(, they are all accessed and) 403.53 154.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "643" 33
%%Page: "644" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(644) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(changed in a uniform way) 180 641.33 T
(. Some of the extended attributes are also) 298.9 641.33 T
(supported for non-) 180 628.33 T
1 9 Q
(GEOS) 265.17 628.33 T
1 10 Q
( \336les. The following extended attributes are) 291.34 628.33 T
(currently available:) 180 615.33 T
4 F
(FEA_MODIFICATION) 216 599.33 T
(FEA_FILE_ATTR) 216 585.33 T
(FEA_SIZE) 216 571.33 T
(FEA_FILE_TYPE) 216 557.33 T
(FEA_FLAGS) 216 543.33 T
(FEA_RELEASE) 216 529.33 T
(FEA_PROTOCOL) 216 515.33 T
(FEA_TOKEN) 216 501.33 T
(FEA_CREATOR) 216 487.33 T
(FEA_USER_NOTES) 216 473.33 T
(FEA_NOTICE) 216 459.33 T
(FEA_CREATION) 216 445.33 T
(FEA_PASSWORD) 216 431.33 T
(FEA_CUSTOM) 216 417.33 T
(FEA_NAME) 216 403.33 T
(FEA_GEODE_ATTR) 216 389.33 T
(FEA_PATH_INFO) 216 375.33 T
(FEA_FILE_ID) 216 361.33 T
(FEA_DESKTOP_INFO) 216 347.33 T
(FEA_DRIVE_STATUS) 216 333.33 T
(FEA_DISK) 216 319.33 T
(FEA_DOS_NAME) 216 305.33 T
(FEA_OWNER) 216 291.33 T
(FEA_RIGHTS) 216 277.33 T
1 F
(There are also two special constants,) 180 256.33 T
1 9 Q
(FEA_MUL) 352.62 256.33 T
(TIPLE) 397.46 256.33 T
1 10 Q
( and) 425.63 256.33 T
1 9 Q
(FEA_END_OF_LIST) 180 243.33 T
1 10 Q
(. These are also described below) 266.76 243.33 T
(.) 413.46 243.33 T
(There are two different routines to read a \336le\325) 180 223.33 T
(s extended attributes:) 390.57 223.33 T
5 F
(FileGetHandleExtAttributes\050\051) 180 210.33 T
1 F
( and) 335.17 210.33 T
5 F
(FileGetPathExtAttributes\050\051) 358.14 210.33 T
1 F
(.) 500.53 210.33 T
-0.53 (These routines are the same except in the way the \336le is speci\336ed: in one, the) 180 197.33 P
(handle of an open \336le is passed, whereas in the other) 180 184.33 T
(, the address of a path) 423.92 184.33 T
(string is passed.) 180 171.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "644" 34
%%Page: "645" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(645) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(FileGetHandleExtAttributes\050\051) 180 641.33 T
1 F
( takes four arguments. The \336rst is the) 335.17 641.33 T
-0.05 (handle of the \336le whose attributes are desired; this may be a) 180 628.33 P
1 9 Q
-0.04 (VM) 461.88 628.33 P
1 10 Q
-0.05 ( \336le handle) 476.87 628.33 P
(or a byte-\336le handle. The second is a constant specifying the attribute) 180 615.33 T
(desired. All extended attributes which are currently supported are listed) 180 602.33 T
(above; more may be added later) 180 589.33 T
(. The third is a pointer to a buffer; the) 325.96 589.33 T
-0.18 (attribute\325) 180 576.33 P
-0.18 (s value will be written into that buffer) 223.16 576.33 P
-0.18 (. The fourth argument is the) 397.83 576.33 P
(size of the buffer \050in bytes\051. Before it returns,) 180 563.33 T
5 F
(FileGetHandleExtAttributes\050\051) 180 550.33 T
1 F
( will write the value of the attribute into) 335.17 550.33 T
-0.66 (the buffer) 180 537.33 P
-0.66 (. If successful, it will return zero; otherwise, it will return one of the) 224.15 537.33 P
(following error codes:) 180 524.33 T
1 9 Q
(ERROR_A) 180 504.33 T
(TTR_NOT_SUPPORTED) 223.5 504.33 T
1 10 Q
(The \336le system does not recognize the attribute constant) 243 492.33 T
(passed.) 243 480.33 T
1 9 Q
(ERROR_A) 180 461.33 T
(TTR_SIZE_MISMA) 223.5 461.33 T
(TCH) 304.66 461.33 T
1 10 Q
(The buffer passed was too small for the attribute requested.) 243 449.33 T
1 9 Q
(ERROR_A) 180 430.33 T
(TTR_NOT_FOUND) 223.5 430.33 T
1 10 Q
(The \336le does not have a value set for that attribute. This is) 243 418.33 T
(returned if you try to get certain extended attributes of a) 243 406.33 T
(non-) 243 394.33 T
1 9 Q
(GEOS) 263.55 394.33 T
1 10 Q
( \336le.) 289.72 394.33 T
1 9 Q
(ERROR_ACCESS_DENIED) 180 375.33 T
1 10 Q
(Y) 243 363.33 T
(ou do not have read-access to the \336le.) 248.93 363.33 T
5 F
(FileGetHandleExtAttrs\050\051) 180 344.33 T
1 F
( can also fetch several attributes at once. For) 308.14 344.33 T
(details on this, see the section on) 180 331.33 T
1 9 Q
(FEA_MUL) 335.21 331.33 T
(TIPLE) 380.05 331.33 T
1 10 Q
( \050page 646\051.) 408.22 331.33 T
(Y) 180 311.33 T
(ou can get a \336le\325) 185.93 311.33 T
(s extended attributes without having it open by calling) 260.02 311.33 T
5 F
(FileGetPathExtAttributes\050\051) 180 298.33 T
1 F
(. This routine takes a pointer to a) 322.39 298.33 T
(null-terminated path string instead of a \336le handle. This makes it suitable) 180 285.33 T
-0.01 (for examining the attributes of an executable \336le or directory) 180 272.33 P
-0.01 (. Note that the) 460.66 272.33 P
-0.33 (\336le system will still have to open the \336le in order to get the attributes. If any) 180 259.33 P
-0.13 (geode \050including the caller\051 has the \336le open with \322deny-read\323 exclusive, the) 180 246.33 P
-0.82 (call will fail with error condition) 180 233.33 P
1 9 Q
-0.74 (ERROR_ACCESS_DENIED) 327.31 233.33 P
1 10 Q
-0.82 (. If it could not \336nd) 444.63 233.33 P
(the \336le speci\336ed, it will return) 180 220.33 T
1 9 Q
(ERROR_FILE_NOT_FOUND) 322.79 220.33 T
1 10 Q
(.) 446.47 220.33 T
(T) 180 200.33 T
(o change one of a \336le\325) 185.75 200.33 T
(s extended attributes, make a call either to) 283.17 200.33 T
5 F
-0.94 (FileSetHandleExtAttributes\050\051) 180 187.33 P
1 F
-0.91 ( or to) 333.51 187.33 P
5 F
-0.94 (FileSetPathExtAttributes) 357.46 187.33 P
1 F
-0.91 (\050\051. These) 490.41 187.33 P
(routines take the same arguments as the) 180 174.33 T
5 F
(FileGet\311\050\051) 372.44 174.33 T
1 F
( routines above;) 428.73 174.33 T
-0.54 (however) 180 161.33 P
-0.54 (, they copy the data from the buffer into the attribute, instead of vice) 217.96 161.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "645" 35
%%Page: "646" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(646) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.5 (versa. These routines return zero if the operation was successful. Otherwise,) 180 641.33 P
(they return one of the following error codes:) 180 628.33 T
1 9 Q
(ERROR_A) 180 608.33 T
(TTR_NOT_SUPPORTED) 223.5 608.33 T
1 10 Q
(The \336le system does not recognize the attribute constant) 243 596.33 T
-0.22 (passed. This is returned if you try to set an extended attribute) 243 584.33 P
(for a non-) 243 572.33 T
1 9 Q
(GEOS) 287.44 572.33 T
1 10 Q
( \336le.) 313.61 572.33 T
1 9 Q
(ERROR_A) 180 553.33 T
(TTR_SIZE_MISMA) 223.5 553.33 T
(TCH) 304.66 553.33 T
1 10 Q
(The buffer passed was the wrong size for the attribute) 243 541.33 T
(speci\336ed.) 243 529.33 T
1 9 Q
(ERROR_ACCESS_DENIED) 180 510.33 T
5 10 Q
-0.73 (FileSetHandleExtAttributes\050\051) 243 498.33 P
1 F
-0.71 ( returns this if the caller does) 396.51 498.33 P
-0.92 (not have write-access to the \336le.) 243 486.33 P
5 F
-0.95 (FileSetPathExtAttributes\050\051) 388.41 486.33 P
1 F
-0.46 (returns this if any geode \050including the caller\051 has the \336le open) 243 474.33 P
-0.13 (with \322deny-write\323 exclusive access, or if the \336le is not writable.) 243 462.33 P
1 9 Q
(ERROR_CANNOT_BE_SET) 180 443.33 T
1 10 Q
-0.02 (The extended attribute cannot be changed. Such attributes as) 243 431.33 P
1 9 Q
(FEA_SIZE) 243 419.33 T
1 10 Q
( and) 287.83 419.33 T
1 9 Q
(FEA_NAME) 310.8 419.33 T
1 10 Q
( cannot be changed with the) 363.12 419.33 T
5 F
(FileSet\311\050\051) 243 407.33 T
1 F
( routines.) 297.63 407.33 T
0 12 Q
(FEA_MUL) 180 382 T
(TIPLE) 235.78 382 T
1 10 Q
(By passing this extended attribute, you can get or set several extended) 180 360.33 T
(attributes at once. This is also the only way to get, set, or create a custom) 180 347.33 T
(attribute. If you pass this, the other arguments are slightly different. The) 180 334.33 T
(\336rst argument is still the \336le speci\336er \050handle or path\051, and the second) 180 321.33 T
(argument is) 180 308.33 T
1 9 Q
(FEA_MUL) 238.71 308.33 T
(TIPLE) 283.55 308.33 T
1 10 Q
(. However) 311.72 308.33 T
(, the third argument is the base) 357.46 308.33 T
(address of an array of) 180 295.33 T
5 F
(FileExtAttrDesc) 283.34 295.33 T
1 F
( structures, and the fourth) 367.41 295.33 T
(argument is the number of these structures in the array) 180 282.33 T
(. The array has one) 438.34 282.33 T
(element for each attribute you wish to get or set. Each) 180 269.33 T
5 F
(FileExtAttrDesc) 433.36 269.33 T
1 F
(structure has the following \336elds:) 180 256.33 T
3 9 Q
(FEAD) 180 236.33 T
3 10 Q
(_attr) 205.84 236.33 T
1 F
(This is the numerical constant for the attribute to be read or) 243 236.33 T
(set. If a custom attribute is being set, this should be) 243 224.33 T
1 9 Q
(FEA_CUSTOM) 243 212.33 T
1 10 Q
(.) 307.5 212.33 T
3 9 Q
(FEAD) 180 193.33 T
3 10 Q
(_value) 205.84 193.33 T
1 F
-0.75 (If the attribute is being set, this is the address of the new value.) 243 193.33 P
(If the attribute is being read, this is the address of the buffer) 243 181.33 T
(into which to copy the value.) 243 169.33 T
3 9 Q
(FEAD) 180 150.33 T
3 10 Q
(_size) 205.84 150.33 T
1 F
-0.41 (This is the size of the buffer or value pointed to by) 243 150.33 P
3 9 Q
-0.37 (FEAD) 472.57 150.33 P
3 10 Q
-0.41 (_value) 498.41 150.33 P
1 F
-0.41 (.) 528.22 150.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "646" 36
%%Page: "647" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(647) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 9 Q
0 X
(FEAD) 180 641.33 T
3 10 Q
(_name) 205.84 641.33 T
1 F
(If) 243 641.33 T
3 9 Q
(FEAD) 253.18 641.33 T
3 10 Q
(_attr) 279.02 641.33 T
1 F
( is set to) 301.24 641.33 T
1 9 Q
(FEA_CUSTOM) 342.55 641.33 T
1 10 Q
(, this is the address of a) 407.05 641.33 T
-0.79 (null-terminated string containing the custom attribute\325) 243 629.33 P
-0.79 (s name.) 494.06 629.33 P
(If) 243 617.33 T
3 9 Q
(FEAD) 253.18 617.33 T
3 10 Q
(_attr) 279.02 617.33 T
1 F
( is set to anything else, this \336eld is ignored.) 301.24 617.33 T
0 12 Q
(FEA_CUST) 180 592 T
(OM) 243.12 592 T
1 10 Q
(In addition to the system-de\336ned extended attributes, any) 180 570.33 T
1 9 Q
(GEOS) 451.88 570.33 T
1 10 Q
( \336le may) 478.05 570.33 T
-0.3 (have any number of custom attributes. Each custom attribute is named by a) 180 557.33 P
(null-terminated) 180 544.33 T
1 9 Q
(ASCII) 256.3 544.33 T
1 10 Q
( string. T) 282.29 544.33 T
(o create a custom attribute, call one of the) 323.97 544.33 T
5 F
-0.23 (FileSet\311\050\051) 180 531.33 P
1 F
-0.22 ( routines, specifying the new attribute with a) 234.63 531.33 P
5 F
-0.23 (FileExtAttrDesc) 444.37 531.33 P
1 F
(structure \050as described immediately above\051. If you try to read a custom) 180 518.33 T
(attribute which has not been de\336ned for that \336le, the routine will fail with) 180 505.33 T
(error condition) 180 492.33 T
1 9 Q
(ERROR_A) 251.47 492.33 T
(TTR_NOT_FOUND.) 294.97 492.33 T
1 10 Q
-0.24 (Note that not all \336le systems support the use of custom extended attributes;) 180 472.33 P
(therefore, you should write your applications so they can perform correctly) 180 459.33 T
(without using them.) 180 446.33 T
0 12 Q
(FEA_MODIFICA) 180 420 T
(TION) 269.11 420 T
1 10 Q
-0.74 (Every \336le has a \322last modi\336ed\323 time. This is automatically updated whenever) 180 398.33 P
-0.01 (the \336le is written to. T) 180 385.33 P
-0.01 (o \336nd the modi\336cation time of a \336le, get the extended) 282.57 385.33 P
-0.4 (attribute) 180 372.33 P
1 9 Q
-0.36 (FEA_MODIFICA) 223.87 372.33 P
-0.36 (TION) 295.7 372.33 P
1 10 Q
-0.4 (. The modi\336cation time is returned as a 32-bit) 319.71 372.33 P
5 F
-0.01 (FileDateAndT) 180 359.33 P
-0.01 (ime) 252.7 359.33 P
1 F
-0.01 ( value. The value has the following \336elds, each of which) 271.77 359.33 P
(is small enough to \336t in a signed-byte variable:) 180 346.33 T
1 9 Q
(FDA) 180 326.33 T
(T_YEAR) 199.01 326.33 T
1 10 Q
(This \336eld records the year) 243 326.33 T
(, counting from a base year of 1980.) 363 326.33 T
-0.37 (\050The constant) 243 314.33 P
1 9 Q
-0.33 (FDA) 308.56 314.33 P
-0.33 (T_BASE_YEAR) 327.57 314.33 P
1 10 Q
-0.37 ( is de\336ned as 1980.\051 This \336eld) 393.56 314.33 P
(is at an offset of) 243 302.33 T
1 9 Q
(FDA) 319.31 302.33 T
(T_YEAR_OFFSET) 338.32 302.33 T
1 10 Q
( bits from the low end of) 416.33 302.33 T
(the value.) 243 290.33 T
1 9 Q
(FDA) 180 271.33 T
(T_MONTH) 199.01 271.33 T
1 10 Q
-0.32 (This \336eld records the month as an integer) 243 259.33 P
-0.32 (, with January being) 433.55 259.33 P
(one. It is located at an offset of) 243 247.33 T
1 9 Q
(FDA) 387.28 247.33 T
(T_MONTH_OFFSET) 406.29 247.33 T
1 10 Q
(.) 493.88 247.33 T
1 9 Q
(FDA) 180 228.33 T
(T_DA) 199.01 228.33 T
(Y) 222.18 228.33 T
1 10 Q
-0.56 (This \336eld records the day of the month. It is located at an offset) 243 228.33 P
(of) 243 216.33 T
1 9 Q
(FDA) 254.11 216.33 T
(T_DA) 273.12 216.33 T
(Y_OFFSET) 296.29 216.33 T
1 10 Q
(.) 343.39 216.33 T
1 9 Q
(FDA) 180 197.33 T
(T_HOUR) 199.01 197.33 T
1 10 Q
-0.01 (This \336eld records the hour on a 24-hour clock, with zero being) 243 197.33 P
(the hour after midnight. It is located at an offset of) 243 185.33 T
1 9 Q
(FDA) 243 173.33 T
(T_HOUR_OFFSET) 262.01 173.33 T
1 10 Q
(.) 341.6 173.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "647" 37
%%Page: "648" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(648) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(FDA) 180 641.33 T
(T_MINUTE) 199.01 641.33 T
1 10 Q
(This \336eld records the minute. It is located at an offset of) 243 629.33 T
1 9 Q
(FDA) 243 617.33 T
(T_MINUTE_OFFSET) 262.01 617.33 T
1 10 Q
(.) 352.6 617.33 T
1 9 Q
(FDA) 180 598.33 T
(T_2SECOND) 199.01 598.33 T
1 10 Q
(This \336eld records the second, divided by two; that is, a \336eld) 243 586.33 T
(value of 15 indicates the 30th second. \050It is represented this) 243 574.33 T
-0.66 (way to let the second \336t into 5 bits, thus letting the entire value) 243 562.33 P
(\336t into 32 bits.\051 It is located at an offset of) 243 550.33 T
1 9 Q
(FDA) 243 538.33 T
(T_2SECOND_OFFSET) 262.01 538.33 T
1 10 Q
(.) 358.28 538.33 T
(The macros) 180 519.33 T
5 F
(FDA) 236.3 519.33 T
(TExtractY) 258.89 519.33 T
(ear\050\051) 311.3 519.33 T
1 F
(,) 336.12 519.33 T
5 F
(\311Month\050\051) 341.68 519.33 T
1 F
(,) 393.34 519.33 T
5 F
(\311Day\050\051) 398.9 519.33 T
1 F
(,) 437.23 519.33 T
5 F
(\311Hour\050\051) 442.79 519.33 T
1 F
(,) 487.42 519.33 T
5 F
(\311Minute\050\051) 180 506.33 T
1 F
(, and) 234.99 506.33 T
5 F
(\3112Second\050\051) 260.74 506.33 T
1 F
( all extract the speci\336ed \336eld from a) 321.86 506.33 T
5 F
-0.12 (FileDateAndT) 180 493.33 P
-0.12 (ime) 252.7 493.33 P
1 F
-0.11 ( value. The macro) 271.77 493.33 P
5 F
-0.12 (FDA) 356.51 493.33 P
-0.12 (TExtractSecond\050\051) 379.1 493.33 P
1 F
-0.11 ( extracts the) 470.78 493.33 P
1 9 Q
(FDA) 180 480.33 T
(T_2SECOND) 199.01 480.33 T
1 10 Q
( \336eld and doubles it before returning it. The) 254.52 480.33 T
5 F
-0.55 (FDA) 180 467.33 P
-0.55 (TExtractY) 202.59 467.33 P
-0.55 (earAD\050\051) 255 467.33 P
1 F
-0.54 ( extracts the year \336eld and adds the base year) 295.74 467.33 P
-0.54 (, thus) 502.99 467.33 P
(producing a word-sized year value.) 180 454.33 T
0 12 Q
(FEA_FILE_A) 180 428 T
(TTR) 251.12 428 T
1 10 Q
(There are certain attributes which all \336les have. These attributes specify) 180 406.33 T
-0.55 (such things as whether the \336le is hidden, whether it is read-only) 180 393.33 P
-0.55 (, and several) 470.98 393.33 P
-0.28 (other things. T) 180 380.33 P
-0.28 (o get these attributes, call an extended attribute routine with) 247.24 380.33 P
-0.24 (argument) 180 367.33 P
1 9 Q
-0.21 (FEA_FILE_A) 227.91 367.33 P
-0.21 (TTRIBUTES) 284.08 367.33 P
1 10 Q
-0.24 (. The attributes are passed or returned in) 338.25 367.33 P
(a) 180 354.33 T
5 F
(FileAttrs) 188.34 354.33 T
1 F
( record. This record has the following \336elds:) 234.82 354.33 T
1 9 Q
(F) 180 334.33 T
(A_ARCHIVE) 185.34 334.33 T
1 10 Q
(This \337ag is set if the \336le requires backup. Backup programs) 243 322.33 T
(typically clear this \337ag.) 243 310.33 T
1 9 Q
(F) 180 291.33 T
(A_SUBDIR) 185.34 291.33 T
1 10 Q
(This \337ag is set if the \322\336le\323 is actually a directory) 243 291.33 T
(. Geodes may) 464.15 291.33 T
(not change this \337ag.) 243 279.33 T
1 9 Q
(F) 180 260.33 T
(A_VOLUME) 185.34 260.33 T
1 10 Q
-0.69 (This \337ag is set if the \322\336le\323 is actually the volume label. This \337ag) 243 248.33 P
(will be) 243 236.33 T
3 F
(off) 276.35 236.33 T
1 F
( for all \336les a geode will ever see. Geodes may not) 288.01 236.33 T
(change this \337ag.) 243 224.33 T
1 9 Q
(F) 180 205.33 T
(A_SYSTEM) 185.34 205.33 T
1 10 Q
(This \337ag is set if the \336le is a system \336le. Geodes should not) 243 205.33 T
(change this \337ag.) 243 193.33 T
1 9 Q
(F) 180 174.33 T
(A_HIDDEN) 185.34 174.33 T
1 10 Q
(This \337ag is set if the \336le is hidden from normal directory) 243 174.33 T
-0.08 (searches. For example, a GenFileSelector) 243 162.33 P
-0.08 (, by default, does not) 432.88 162.33 P
(list \336les that have this \337ag set.) 243 150.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "648" 38
%%Page: "649" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(649) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(F) 180 641.33 T
(A_RDONL) 185.34 641.33 T
(Y) 229.35 641.33 T
1 10 Q
(This \337ag is set if the \336le is read-only) 243 641.33 T
(.) 410.25 641.33 T
(Many \336le systems \050including) 180 622.33 T
1 9 Q
(DOS) 315.56 622.33 T
1 10 Q
(\051 require that \336les be closed when you set) 335.23 622.33 T
(these attributes. For that reason, you cannot change these attributes with) 180 609.33 T
5 F
(FileSetHandleExtAttributes\050\051) 180 596.33 T
1 F
(. Y) 333.51 596.33 T
(ou must use either) 345 596.33 T
5 F
(FileSetPathExtAttributes\050\051) 180 583.33 T
1 F
( or) 320.73 583.33 T
5 F
(FileSetAttributes\050\051) 335.73 583.33 T
1 F
( \050described below in) 433.69 583.33 T
(section 17.5.6.3\051. If you try to set this \336eld with) 180 570.33 T
5 F
(FileSetHandleExtAttributes\050\051) 180 557.33 T
1 F
(, you will be returned) 333.51 557.33 T
1 9 Q
(ERROR_A) 180 544.33 T
(TTR_CANNOT_BE_SET) 223.5 544.33 T
1 10 Q
(.) 326.42 544.33 T
0 12 Q
(FEA_SIZE) 180 518 T
1 10 Q
-0.79 (This attribute is simply the size of the \336le in bytes. It is dword-sized \050allowing) 180 496.33 P
-0.23 (for \336les as large as) 180 483.33 P
-0.23 ( bytes, or 4096 megabytes\051. The attribute can be read,) 281.78 483.33 P
(but not directly changed.) 180 470.33 T
0 12 Q
(FEA_FILE_TYPE) 180 444 T
1 10 Q
(This attribute is a member of the) 180 422.33 T
5 F
(GeosFileT) 335.96 422.33 T
(ype) 388.02 422.33 T
1 F
( enumerated type and) 406.54 422.33 T
(should not be altered. The type has the following values:) 180 409.33 T
1 9 Q
(GFT_NOT_GEOS_FILE) 180 389.33 T
1 10 Q
(The \336le is not a) 243 377.33 T
1 9 Q
(GEOS) 317.28 377.33 T
1 10 Q
( \336le. This constant is guaranteed to be) 343.45 377.33 T
(equal to zero.) 243 365.33 T
1 9 Q
(GFT_EXECUT) 180 346.33 T
(ABLE) 242.18 346.33 T
1 10 Q
(The \336le is executable; in other words, it is some kind of geode.) 243 334.33 T
1 9 Q
(GFT_VM) 180 315.33 T
1 10 Q
(The \336le is a) 243 315.33 T
1 9 Q
(VM) 299.5 315.33 T
1 10 Q
( \336le.) 314.49 315.33 T
1 9 Q
(GFT_DA) 180 296.33 T
(T) 216.51 296.33 T
(A) 222.02 296.33 T
1 10 Q
(The \336le is a) 243 296.33 T
1 9 Q
(GEOS) 299.5 296.33 T
1 10 Q
( byte \336le \050see below\051.) 325.67 296.33 T
1 9 Q
(GFT_DIRECTOR) 180 277.33 T
(Y) 252.84 277.33 T
1 10 Q
(The \336le is a) 243 265.33 T
1 9 Q
(GEOS) 299.5 265.33 T
1 10 Q
( directory) 325.67 265.33 T
(.) 368.81 265.33 T
1 9 Q
(GFT_LINK) 180 246.33 T
1 10 Q
(The \336le is a symbolic link \050not yet implemented\051.) 243 246.33 T
0 12 Q
(FEA_FLAGS) 180 221 T
1 10 Q
-0.5 (This attribute is a word-sized \337ag \336eld, named) 180 199.33 P
5 F
-0.51 (GeosFileHeaderFlags) 394.4 199.33 P
1 F
-0.5 (. The) 505.87 199.33 P
(following \337ags are implemented:) 180 186.33 T
1 9 Q
(GFHF_TEMPLA) 180 166.33 T
(TE) 250.01 166.33 T
1 10 Q
(The \336le is a document template.) 243 154.33 T
268.3 480.38 281.78 493.6 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 9 Q
0 X
0 0 0 1 0 0 0 K
(2) 268.56 483.33 T
6 7 Q
(3) 273.51 486.1 T
(2) 277.01 486.1 T
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "649" 39
%%Page: "650" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(650) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(GFHF_SHARED_SINGLE) 180 641.33 T
1 10 Q
(The \336le can be opened for shared-single access.) 243 629.33 T
1 9 Q
(GFHF_SHARED_MUL) 180 610.33 T
(TIPLE) 276.51 610.33 T
1 10 Q
(The \336le can be opened for shared-multiple access.) 243 598.33 T
(Shared-single and shared-multiple access are described in the) 180 579.33 T
1 9 Q
(VM) 469.09 579.33 T
1 10 Q
( chapter) 484.08 579.33 T
(.) 521.3 579.33 T
(For more details, see \322V) 180 566.33 T
(irtual Memory) 289.76 566.33 T
(,\323 Chapter) 355.87 566.33 T
(18.) 406.06 566.33 T
0 12 Q
(FEA_RELEASE) 180 540 T
1 10 Q
(This attribute is a) 180 518.33 T
5 F
(ReleaseNumber) 266.51 518.33 T
1 F
( structure. Generally) 348.73 518.33 T
(, only geodes have) 444.47 518.33 T
(release numbers. The structure has the following \336elds:) 180 505.33 T
3 9 Q
(RN) 180 485.33 T
3 10 Q
(_major) 194 485.33 T
1 F
(The \336le\325) 243 485.33 T
(s major release number) 279.49 485.33 T
(. An increase in the major) 387.46 485.33 T
(release number generally indicates a change which is not) 243 473.33 T
(downward-compatible.) 243 461.33 T
3 9 Q
(RN) 180 442.33 T
3 10 Q
(_minor) 194 442.33 T
1 F
(The \336le\325) 243 442.33 T
(s minor release number) 279.49 442.33 T
(. An increase in the minor) 388.2 442.33 T
(release number generally indicates that the new version is) 243 430.33 T
(compatible with previous versions.) 243 418.33 T
3 9 Q
(RN) 180 399.33 T
3 10 Q
(_change) 194 399.33 T
1 F
(A \336eld for use by individual manufacturers.) 243 399.33 T
3 9 Q
(RN) 180 380.33 T
3 10 Q
(_engineering) 194 380.33 T
1 F
(A \336eld for use by individual manufacturers.) 243 368.33 T
0 12 Q
(FEA_PROT) 180 343 T
(OCOL) 243.79 343 T
1 10 Q
(This attribute contains the \336le\325) 180 321.33 T
(s protocol numbers. A) 322.99 321.33 T
5 F
(ProtocolNumber) 426.14 321.33 T
1 F
(structure is returned. For a discussion of \336le protocols, see section 13.4.1 of) 180 308.33 T
(\322GenDocument,\323 Chapter) 180 295.33 T
(13 of the Object Reference Book.) 300.19 295.33 T
0 12 Q
(FEA_T) 180 269 T
(OKEN) 217.79 269 T
1 10 Q
-0.28 (This attribute is the \336le\325) 180 247.33 P
-0.28 (s token. It consists of a) 290.75 247.33 P
5 F
-0.29 (GeodeT) 397.41 247.33 P
-0.29 (oken) 436.3 247.33 P
1 F
-0.28 ( structure. For) 461.67 247.33 P
(more information about tokens, see \322Applications and Geodes,\323 Chapter) 180 234.33 T
(6.) 513.93 234.33 T
0 12 Q
(FEA_CREA) 180 208 T
(T) 243.78 208 T
(OR) 250.9 208 T
1 10 Q
(This attribute is the token of the document\325) 180 186.33 T
(s creator) 380.4 186.33 T
(. It consists of a) 419.84 186.33 T
5 F
(GeodeT) 180 173.33 T
(oken) 218.89 173.33 T
1 F
( structure. For more information about tokens, see) 244.26 173.33 T
(\322Applications and Geodes,\323 Chapter) 180 160.33 T
(6.) 347.98 160.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "650" 40
%%Page: "651" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(651) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 12 Q
0 X
(FEA_USER_NOTES) 180 640 T
1 10 Q
(This attribute is a null-terminated string. It is displayed in the \336le\325) 180 618.33 T
(s \322Info\323) 489.87 618.33 T
(box. Users can edit this string with GeoManager) 180 605.33 T
(.) 403.73 605.33 T
0 12 Q
(FEA_NOTICE) 180 579 T
1 10 Q
(This attribute contains the \336le\325) 180 557.33 T
(s copyright notice.) 322.99 557.33 T
0 12 Q
(FEA_CREA) 180 531 T
(TION) 243.78 531 T
1 10 Q
-0.02 (This attribute is a) 180 509.33 P
5 F
-0.02 (FileDateAndT) 266.42 509.33 P
-0.02 (ime) 339.12 509.33 P
1 F
-0.02 ( structure. It contains the time when) 358.19 509.33 P
(the \336le was created.) 180 496.33 T
0 12 Q
(FEA_P) 180 470 T
(ASSWORD) 217.79 470 T
1 10 Q
(This attribute contains the \336le\325) 180 448.33 T
(s encrypted password, if any) 322.99 448.33 T
(.) 453.18 448.33 T
0 12 Q
(FEA_NAME) 180 422 T
1 10 Q
(This attribute contains the \336le\325) 180 400.33 T
(s virtual name. It is a null-terminated) 322.99 400.33 T
(character string.) 180 387.33 T
0 12 Q
(FEA_GEODE_A) 180 361 T
(TTR) 268.46 361 T
1 10 Q
-0.53 (This attribute contains information about the geode. If the \336le is not a geode,) 180 339.33 P
(this \336eld\325) 180 326.33 T
(s value will be zero. If it is a geode, it will contain a record of) 222.23 326.33 T
5 F
(GeodeAttrs) 180 313.33 T
1 F
(. This record has the following \336elds:) 238.89 313.33 T
1 9 Q
(GA_PROCESS) 180 293.33 T
1 10 Q
(This geode has a process thread.) 244.34 293.33 T
1 9 Q
(GA_LIBRAR) 180 274.33 T
(Y) 233.32 274.33 T
1 10 Q
(This geode is a library) 243 274.33 T
(.) 344.69 274.33 T
1 9 Q
(GA_DRIVER) 180 255.33 T
1 10 Q
(This geode is a driver) 243 255.33 T
(.) 341.53 255.33 T
1 9 Q
(GA_KEEP_FILE_OPEN) 180 236.33 T
1 10 Q
(The) 243 224.33 T
1 9 Q
(GEOS) 263.56 224.33 T
1 10 Q
( kernel keeps this \336le open while) 289.73 224.33 T
1 9 Q
(GEOS) 444.2 224.33 T
1 10 Q
( is running.) 470.37 224.33 T
1 9 Q
(GA_SYSTEM) 180 205.33 T
1 10 Q
(This \336le is part of the kernel.) 243 205.33 T
1 9 Q
(GA_MUL) 180 186.33 T
(TI_LAUNCHABLE) 219.34 186.33 T
1 10 Q
(This geode can be loaded more than once simultaneously) 243 174.33 T
(.) 503.96 174.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "651" 41
%%Page: "652" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(652) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(GA_DRIVER_INITIALIZED) 180 641.33 T
1 10 Q
(The geode is a driver which has been opened, loaded and) 243 629.33 T
(initialized.) 243 617.33 T
1 9 Q
(GA_LIBRAR) 180 598.33 T
(Y_INITIALIZED) 233.32 598.33 T
1 10 Q
-0.02 (The geode is a library which has been opened and loaded, and) 243 586.33 P
(whose entry point has been called.) 243 574.33 T
1 9 Q
(GA_GEODE_INITIALIZED) 180 555.33 T
1 10 Q
(The geode has been opened and completely initialized.) 243 543.33 T
1 9 Q
(GA_USES_COPROC) 180 524.33 T
1 10 Q
(The geode uses a math coprocessor) 243 512.33 T
(, if one is available.) 403.19 512.33 T
1 9 Q
(GA_REQUIRES_COPROC) 180 493.33 T
1 10 Q
(The geode can only run if a math coprocessor or emulator is) 243 481.33 T
(present.) 243 469.33 T
1 9 Q
(GA_HAS_GENERAL_CONSUMER_MODE) 180 450.33 T
1 10 Q
(The geode is an application which can be run in) 243 438.33 T
1 9 Q
(GCM) 465.81 438.33 T
1 10 Q
( mode.) 487.81 438.33 T
1 9 Q
(GA_HAS_ENTR) 180 419.33 T
(Y_POINTS_IN_C) 248.17 419.33 T
1 10 Q
(This geode is a library or driver which can be called from C) 243 407.33 T
(code.) 243 395.33 T
0 12 Q
(FEA_P) 180 370 T
(A) 217.79 370 T
(TH_INFO) 225.56 370 T
1 10 Q
-0.03 (This \336eld contains information about the \336le\325) 180 348.33 P
-0.03 (s path. It is for internal use by) 387.66 348.33 P
(the kernel.) 180 335.33 T
0 12 Q
(FEA_FILE_ID) 180 309 T
1 10 Q
(This \336eld is for internal use by the kernel.) 180 287.33 T
0 12 Q
(FEA_DESKT) 180 261 T
(OP_INFO) 251.12 261 T
1 10 Q
(This \336eld is for use by the desktop manager) 180 239.33 T
(.) 381.14 239.33 T
0 12 Q
(FEA_DRIVE_ST) 180 213 T
(A) 268.46 213 T
(TUS) 276.24 213 T
1 10 Q
(This attribute contains the) 180 191.33 T
5 F
(DriveExtendedStatus) 307.06 191.33 T
1 F
( word for the drive) 418.91 191.33 T
-0.55 (containing the \336le. The) 180 178.33 P
5 F
-0.57 (DriveExtendedStatus) 287.63 178.33 P
1 F
-0.55 ( value is described in section) 399.48 178.33 P
(17.3.1 on page 616.) 180 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "652" 42
%%Page: "653" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(653) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.5.4) 123.08 636 T
0 18 Q
(File Utilities) 180 636 T
4 10 Q
(FileDelete\050\051, FileRename\050\051, FileCopy\050\051,) 180 612.33 T
(FileMove\050\051,FileGetDiskHandle\050\051) 180 599.33 T
1 F
(Most of the time, such actions as copying, deleting, and renaming \336les are) 180 579.33 T
(handled by desktop management programs like GeoManager) 180 566.33 T
(. However) 461.15 566.33 T
(,) 506.89 566.33 T
-0.07 (other geodes may need to perform these actions themselves. For example, if) 180 553.33 P
(you use a temporary \336le, you may wish to delete it when you\325re done. The) 180 540.33 T
1 9 Q
(GEOS) 180 527.33 T
1 10 Q
( \336le system provides routines for these situations. One \336le utility) 206.17 527.33 T
(,) 505.09 527.33 T
5 F
-0.47 (FileEnum\050\051) 180 514.33 P
1 F
-0.45 (, is elaborate enough to be treated in its own section; for details,) 238.88 514.33 P
(see section 17.5.5 on page 655.) 180 501.33 T
-0.12 (T) 180 481.33 P
-0.12 (o delete a \336le, call) 185.75 481.33 P
5 F
-0.13 (FileDelete\050\051) 270.72 481.33 P
1 F
-0.12 (. This routine takes one argument, namely) 332.01 481.33 P
-0.73 (the address of a path string. If it can delete the \336le, it returns zero; otherwise,) 180 468.33 P
(it returns an error code. Common error conditions include the following:) 180 455.33 T
1 9 Q
(ERROR_FILE_NOT_FOUND) 180 435.33 T
1 10 Q
(No such \336le exists in the speci\336ed directory) 243 423.33 T
(.) 442.26 423.33 T
1 9 Q
(ERROR_P) 180 404.33 T
(A) 222.83 404.33 T
(TH_NOT_FOUND) 228.83 404.33 T
1 10 Q
(An invalid path string was passed.) 243 392.33 T
1 9 Q
(ERROR_ACCESS_DENIED) 180 373.33 T
1 10 Q
(Y) 243 361.33 T
(ou do not have permission to delete that \336le, or it exists on a) 248.93 361.33 T
(read-only volume.) 243 349.33 T
1 9 Q
(ERROR_FILE_IN_USE) 180 330.33 T
1 10 Q
(Some geode has that \336le open.) 243 318.33 T
(T) 180 299.33 T
(o change a \336le\325) 185.75 299.33 T
(s name, call) 253.17 299.33 T
5 F
(FileRename\050\051) 310.78 299.33 T
1 F
(. This routine takes two) 380.96 299.33 T
-0.28 (arguments: a pointer to the path string specifying the \336le, and a pointer to a) 180 286.33 P
(string specifying the new name for the \336le. If successful,) 180 273.33 T
5 F
(FileRename\050\051) 442.59 273.33 T
1 F
(returns zero; otherwise, it returns one of the above error codes.) 180 260.33 T
-0.41 (T) 180 240.33 P
-0.41 (o make a copy of a \336le, call) 185.75 240.33 P
5 F
-0.42 (FileCopy\050\051) 308.44 240.33 P
1 F
-0.41 (. This routine takes four arguments:) 363.07 240.33 P
-0.7 (the handles of the source and destination disks \050which may be the same\051, and) 180 227.33 P
(the addresses of source and destination path strings. Passing a disk handle) 180 214.33 T
-0.44 (of zero indicates the current path\325) 180 201.33 P
-0.44 (s disk. Each string speci\336es a path relative) 333.36 201.33 P
-0.02 (to the location speci\336ed by the corresponding disk handle. If the handle is a) 180 188.33 P
(disk handle, the path is relative to that disk\325) 180 175.33 T
(s root. If the disk handle is a) 385.24 175.33 T
(standard path constant, the path string is relative to that standard path. If) 180 162.33 T
-0.14 (the disk handle is null, the path is relative to the current working directory) 180 149.33 P
-0.14 (.) 525.58 149.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "653" 43
%%Page: "654" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(654) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(FileCopy\050\051) 180 641.33 T
1 F
( will make a copy of the \336le in the speci\336ed location with the) 234.63 641.33 T
-0.32 (speci\336ed name. If a \336le with that name and location already exists, it will be) 180 628.33 P
-0.34 (overwritten.) 180 615.33 P
5 F
-0.35 (FileCopy\050\051) 239.29 615.33 P
1 F
-0.34 ( returns zero if successful. Otherwise it returns one) 293.92 615.33 P
(of the following error codes:) 180 602.33 T
1 9 Q
(ERROR_FILE_NOT_FOUND) 180 582.33 T
1 10 Q
(No such source \336le exists in the speci\336ed directory) 243 570.33 T
(.) 474.66 570.33 T
1 9 Q
(ERROR_P) 180 551.33 T
(A) 222.83 551.33 T
(TH_NOT_FOUND) 228.83 551.33 T
1 10 Q
(An invalid source or destination path string was passed.) 243 539.33 T
1 9 Q
(ERROR_ACCESS_DENIED) 180 520.33 T
1 10 Q
(Y) 243 508.33 T
(ou do not have permission to delete the existing copy of the) 248.93 508.33 T
(destination \336le, or the destination disk or directory is not) 243 496.33 T
(writable.) 243 484.33 T
1 9 Q
(ERROR_FILE_IN_USE) 180 465.33 T
1 10 Q
(Some geode has the existing destination \336le open.) 243 453.33 T
1 9 Q
(ERROR_SHORT_READ_WRITE) 180 434.33 T
1 10 Q
(There was not enough room on the destination disk. The) 243 422.33 T
-0.73 (destination disk will be left unchanged \050i.e. a partial copy of the) 243 410.33 P
(\336le will not be made\051.) 243 398.33 T
(T) 180 379.33 T
(o move a \336le from one directory to another) 185.75 379.33 T
(, either on the same disk or on) 380.57 379.33 T
(different disks, call) 180 366.33 T
5 F
(FileMove\050\051) 271.49 366.33 T
1 F
(. This routine takes four arguments: the) 327.22 366.33 T
(handles of the source and destination disks \050which may be the same\051, and) 180 353.33 T
(pointers to source and destination path strings. Passing a null disk handle) 180 340.33 T
-0.33 (indicates the current working directory) 180 327.33 P
-0.33 (. Each string speci\336es a path relative) 359.04 327.33 P
-0.02 (to the location speci\336ed by the corresponding disk handle. If the handle is a) 180 314.33 P
(disk handle, the path is relative to that disk\325) 180 301.33 T
(s root. If the disk handle is a) 385.24 301.33 T
(standard path constant, the path string is relative to that standard path. If) 180 288.33 T
-0.14 (the disk handle is null, the path is relative to the current working directory) 180 275.33 P
-0.14 (.) 525.58 275.33 P
(If the copy is successful,) 180 262.33 T
5 F
(FileMove\050\051) 293.88 262.33 T
1 F
( will return zero; otherwise, it will) 349.61 262.33 T
(return one of the above error codes.) 180 249.33 T
(If you want to \336nd out the handle of the disk containing an open \336le, call) 180 229.33 T
5 F
-0.34 (FileGetDiskHandle\050\051) 180 216.33 P
1 F
-0.33 (. This routine is passed the \336le handle; it returns the) 287.58 216.33 P
-0.15 (disk handle. This is useful if the geode has to prepare for a shutdown; it can) 180 203.33 P
-0.45 (get the disk handle with) 180 190.33 P
5 F
-0.47 (FileGetDiskHandle\050\051) 292.95 190.33 P
1 F
-0.45 (, then save that handle with) 400.53 190.33 P
5 F
(DiskSave\050\051) 180 177.33 T
1 F
( \050see \322Saving and Restoring a Disk Handle\323 on page 624\051. W) 236.11 177.33 T
(ith) 512.46 177.33 T
-0.16 (this information \050and the \336le name\051, the geode will be able to reopen the \336le) 180 164.33 P
(when it restarts.) 180 151.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "654" 44
%%Page: "655" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(655) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.5.5) 123.08 636 T
0 18 Q
(FileEnum\050\051) 180 636 T
4 10 Q
(FileEnum\050\051, FileEnumLocateAttr\050\051, FileEnumWildcard\050\051,) 180 612.33 T
(FileEnumAttrs, FileEnumSearchFlags,) 180 599.33 T
(FileEnumStandardReturnType, FEDosInfo, FENameAndAttr,) 180 586.33 T
(FileEnumCallbackData) 180 573.33 T
1 F
(Y) 180 553.33 T
(ou may sometimes need to perform an action on every \336le that matches) 185.93 553.33 T
(certain criteria. For these situations, the \336le system provides the routine) 180 540.33 T
5 F
(FileEnum\050\051) 180 527.33 T
1 F
(.) 238.88 527.33 T
5 F
(FileEnum\050\051) 244.44 527.33 T
1 F
( can be called in two ways. The usual way is to) 303.32 527.33 T
-0.37 (have) 180 514.33 P
5 F
-0.38 (FileEnum\050\051) 204.46 514.33 P
1 F
-0.37 ( provide certain information about every \336le in a directory) 263.33 514.33 P
-0.37 (\050or every \336le of a given type\051; when called,) 180 501.33 P
5 F
-0.38 (FileEnum\050\051) 373.74 501.33 P
1 F
-0.37 ( will allocate a buffer) 432.62 501.33 P
(and \336ll it with data structures, one for each matching \336le. Less commonly) 180 488.33 T
(,) 519.48 488.33 T
-0.79 (you can have) 180 475.33 P
5 F
-0.82 (FileEnum\050\051) 240.59 475.33 P
1 F
-0.79 ( call a callback routine for every \336le which matches) 299.47 475.33 P
(certain criteria; this callback routine can take a broader range of actions.) 180 462.33 T
-0.51 (Y) 180 442.33 P
-0.51 (ou should not often need to use the) 185.93 442.33 P
5 F
-0.52 (FileEnum\050\051) 345.76 442.33 P
1 F
-0.51 ( routine. The most common) 404.64 442.33 P
(time that applications would need this functionality is when they present a) 180 429.33 T
-0.37 (list of the \336les in a directory to the user) 180 416.33 P
-0.37 (. The GenFileSelector object provides) 358.38 416.33 P
(this functionality) 180 403.33 T
(, making all necessary calls to) 258.71 403.33 T
5 F
(FileEnum\050\051) 400.04 403.33 T
1 F
( transparently) 458.92 403.33 T
(to both the user and the geode. Note that the document control objects) 180 390.33 T
(automatically create and manipulate a \336le selector when appropriate. For) 180 377.33 T
(further information, see \322GenFile Selector) 180 364.33 T
(,\323 Chapter) 373.71 364.33 T
(14 of the Object) 423.9 364.33 T
(Reference Book and \322GenDocument,\323 Chapter) 180 351.33 T
(13 of the Object Reference) 394.63 351.33 T
(Book.) 180 338.33 T
5 F
(FileEnum\050\051) 180 318.33 T
1 F
( takes the following arguments:) 238.88 318.33 T
2 F
(u) 180 298.33 T
1 F
-0.43 (A pointer to a) 198 298.33 P
5 F
-0.44 (FileEnumParams) 262.4 298.33 P
1 F
-0.43 ( structure \050see below\051. The data in this) 353.13 298.33 P
(structure will tell) 198 286.33 T
5 F
(FileEnum\050\051) 281.71 286.33 T
1 F
( what to do.) 340.59 286.33 T
2 F
(u) 180 267.33 T
1 F
-0.49 (A pointer to a MemHandle variable.) 198 267.33 P
5 F
-0.5 (FileEnum\050\051) 364.54 267.33 P
1 F
-0.49 ( will allocate a memory) 423.42 267.33 P
-0.73 (block to hold information about the \336les, and will write the block\325) 198 255.33 P
-0.73 (s handle) 490.6 255.33 P
(to this location.) 198 243.33 T
2 F
(u) 180 224.33 T
1 F
-0.84 (A pointer to a word variable. If) 198 224.33 P
5 F
-0.87 (FileEnum\050\051) 337.51 224.33 P
1 F
-0.84 ( was unable to \336t information) 396.38 224.33 P
(about all the \336les into the block passed, it will write the number of \336les) 198 212.33 T
(not handled into this variable.) 198 200.33 T
5 F
(FileEnum\050\051) 180 181.33 T
1 F
( returns the number of \336les which were returned in the buffer) 238.88 181.33 T
(.) 524.24 181.33 T
81 449.8 171 559.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(Advanced T) 81 506.45 T
(opic) 131.35 506.45 T
1 F
-0.5 (V) 81 490.45 P
-0.5 (ery few applications) 86.67 490.45 P
(will need to use) 81 479.45 T
5 F
(FileEnum\050\051) 81 468.45 T
1 F
( directly) 133.99 468.45 T
(.) 167.16 468.45 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 X
90 450 13.5 13.5 101.25 535.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 535.33 A
0 0 0 1 0 0 0 K
81 515.21 121.5 555.71 R
1 H
0 X
N
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "655" 45
%%Page: "656" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(656) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The) 180 641.33 T
5 F
(FileEnumParams) 200.56 641.33 T
1 F
( structure speci\336es how) 291.29 641.33 T
5 F
(FileEnum\050\051) 402.95 641.33 T
1 F
( should) 461.83 641.33 T
(perform. The structure is de\336ned as follows. A summary of each \336eld\325) 180 628.33 T
(s role) 499.64 628.33 T
(follows; for full details, see the reference entry for) 180 615.33 T
5 F
(FileEnum\050\051) 412.22 615.33 T
1 F
(.) 471.1 615.33 T
4 F
(typedef struct _FileEnumParams {) 216 599.33 T
(FileEnumSearchFlags) 252 585.33 T
(FEP_searchFlags;) 396 585.33 T
(FileExtAttrDesc *) 252 571.33 T
(FEP_returnAttrs;) 396 571.33 T
(word) 252 557.33 T
(FEP_returnSize;) 396 557.33 T
(FileExtAttrDesc *) 252 543.33 T
(FEP_matchAttrs;) 396 543.33 T
(word) 252 529.33 T
(FEP_bufSize;) 396 529.33 T
(word) 252 515.33 T
(FEP_skipCount;) 396 515.33 T
(word _pascal \050*FEP_callback\051) 252 501.33 T
(\050struct _FileEnumParams *) 288 487.33 T
(params,) 468 487.33 T
( FileEnumCallbackData *) 288 473.33 T
(fecd,) 468 473.33 T
( word) 288 459.33 T
(frame\051;) 468 459.33 T
(FileExtAttrDesc *) 252 445.33 T
(FEP_callbackAttrs;) 396 445.33 T
(dword) 252 431.33 T
(FEP_cbData1;) 396 431.33 T
(dword) 252 417.33 T
(FEP_cbData2;) 396 417.33 T
(word) 252 403.33 T
(FEP_headerSize;) 396 403.33 T
(} FileEnumParams;) 216 389.33 T
3 9 Q
(FEP) 180 368.33 T
3 10 Q
(_searchFlags) 198.5 368.33 T
1 F
(This is a byte-length \337ag \336eld. The \337ags are of type) 243 356.33 T
5 F
-0.73 (FileEnumSearchFlags) 243 344.33 P
1 F
-0.7 ( \050described below\051. These \337ags specify) 358.18 344.33 P
(which \336les at the current location will be examined by) 243 332.33 T
5 F
(FileEnum\050\051) 243 320.33 T
1 F
(. They also specify such things as whether a) 301.88 320.33 T
(callback routine should be used.) 243 308.33 T
3 9 Q
(FEP) 180 289.33 T
3 10 Q
(_returnAttrs) 198.5 289.33 T
1 F
-0.17 (This \336eld speci\336es what information is wanted about the \336les.) 243 277.33 P
-0.1 (It is a pointer to an array of) 243 265.33 P
5 F
-0.1 (FileExtAttrDesc) 373.35 265.33 P
1 F
-0.1 ( structures \050see) 457.41 265.33 P
(page 646\051. The attributes will be written to the return buffer;) 243 253.33 T
(each \336le will have an entry) 243 241.33 T
(, containing all the attributes) 366.91 241.33 T
(requested for that \336le. Y) 243 229.33 T
(ou can also request certain return) 354.68 229.33 T
(values by setting) 243 217.33 T
3 9 Q
(FEP) 324.13 217.33 T
3 10 Q
(_returnAttrs) 342.63 217.33 T
1 F
( to equal a member of the) 399.65 217.33 T
5 F
(FileEnumStandardReturnT) 243 205.33 T
(ype) 386.37 205.33 T
1 F
( \050again, by casting the) 404.89 205.33 T
5 F
(FileEnumStandardReturnT) 243 193.33 T
(ype) 386.37 193.33 T
1 F
( value to type) 404.89 193.33 T
5 F
(void *) 470.09 193.33 T
1 F
(\051. The) 500.55 193.33 T
5 F
(FileEnumStandardReturnT) 243 181.33 T
(ype) 386.37 181.33 T
1 F
( enumerated type is) 404.89 181.33 T
(described later in this section.) 243 169.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "656" 46
%%Page: "657" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(657) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 9 Q
0 X
(FEP) 180 641.33 T
3 10 Q
(_returnSize) 198.5 641.33 T
1 F
(This is the size of each entry in the returned buffer) 243 629.33 T
(. If a) 478 629.33 T
(standard return type or an array of) 243 617.33 T
5 F
(FileExtAttrDesc) 408.93 617.33 T
1 F
(structures was passed, each entry in the returned buffer will) 243 605.33 T
(contain all the extended attribute information requested for) 243 593.33 T
(that \336le.) 243 581.33 T
3 9 Q
(FEP) 180 562.33 T
3 10 Q
(_matchAttrs) 198.5 562.33 T
1 F
(This \336eld speci\336es which \336les should be enumerated by) 243 550.33 T
5 F
(FileEnum\050\051) 243 538.33 T
1 F
(. It is a pointer to an array of) 301.88 538.33 T
5 F
(FileExtAttrDesc) 438.57 538.33 T
1 F
(structures \050see page 646\051. These structures specify values for) 243 526.33 T
(certain extended attributes. Only those \336les whose extended) 243 514.33 T
-0.14 (attributes match these will be enumerated. If you do not want) 243 502.33 P
-0.28 (to \336lter out any \336les in the working directory) 243 490.33 P
-0.28 (, or if you will use) 447.83 490.33 P
-0.6 (the callback routine to \336lter the \336les, pass a null pointer in this) 243 478.33 P
(\336eld.) 243 466.33 T
3 9 Q
(FEP) 180 447.33 T
3 10 Q
(_bufsize) 198.5 447.33 T
1 F
(This \336eld speci\336es the maximum number of entries to be) 243 447.33 T
-0.67 (returned in the buffer) 243 435.33 P
-0.67 (. If you do not want to set a limit, pass the) 341.36 435.33 P
-0.08 (constant) 243 423.33 P
1 9 Q
-0.07 (FEP_BUFSIZE_UNLIMITED) 285.33 423.33 P
1 10 Q
-0.08 (. The buffer will be grown) 409.99 423.33 P
(as necessary) 243 411.33 T
(.) 300.04 411.33 T
3 9 Q
(FEP_) 180 392.33 T
3 10 Q
(skipCount) 203 392.33 T
1 F
(This \336eld contains the number of matching \336les to be ignored) 243 380.33 T
-0.18 (before the \336rst one is processed. It is often used in conjunction) 243 368.33 P
-0.03 (with) 243 356.33 P
3 9 Q
-0.03 (FEP) 266.68 356.33 P
3 10 Q
-0.03 (_bufSize) 285.18 356.33 P
1 F
-0.03 ( to examine many \336les a few at a time. Each) 324.25 356.33 P
(time) 243 344.33 T
5 F
(FileEnum\050\051) 266.71 344.33 T
1 F
( is called, you can enumerate a certain) 325.59 344.33 T
-0.28 (number of \336les; by adjusting the skip count each time, you can) 243 332.33 P
(start each enumeration where the previous one ended. In this) 243 320.33 T
(way you could walk through all the matching \336les in the) 243 308.33 T
(directory) 243 296.33 T
(. Note that if the) 283.36 296.33 T
5 F
(FileEnumSearchFlags) 363.01 296.33 T
1 F
( bit) 478.19 296.33 T
1 9 Q
(FESF_REAL_SKIP) 243 284.33 T
1 10 Q
( is set \050in) 324.01 284.33 T
3 9 Q
(FEP) 369.02 284.33 T
3 10 Q
(_searchFlags) 387.52 284.33 T
1 9 Q
(\051) 447.68 284.33 T
1 10 Q
(, the \336rst \336les in) 450.68 284.33 T
-0.73 (the directory will be skipped) 243 272.33 P
3 F
-0.73 (before) 373.46 272.33 P
1 F
-0.73 ( they are tested to see if they) 400.67 272.33 P
(match. This is faster) 243 260.33 T
(, since the match condition won\325) 337.46 260.33 T
(t have to) 484.7 260.33 T
(be checked for the \336rst \336les in the directory) 243 248.33 T
(.) 442.81 248.33 T
3 9 Q
(FEP) 180 229.33 T
3 10 Q
(_callback) 198.5 229.33 T
1 F
(This \336eld holds a pointer to a Boolean callback routine. The) 243 217.33 T
-0.38 (callback routine can check to see if the \336le matches some other) 243 205.33 P
(arbitrary criteria. The callback routine is called for any \336les) 243 193.33 T
-0.17 (which match all the above criteria. It can then decide whether) 243 181.33 P
(to enumerate the \336le however it wishes. The callback routine) 243 169.33 T
(should be declared) 243 157.33 T
5 F
(_pascal) 331.71 157.33 T
1 F
(. If the \336le should be accepted by) 369.68 157.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "657" 47
%%Page: "658" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(658) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(FileEnum\050\051) 243 641.33 T
1 F
(, the callback should return) 301.88 641.33 T
3 F
(true) 432.08 641.33 T
1 F
(; otherwise it) 450.59 641.33 T
(should return) 243 629.33 T
3 F
(false) 309.29 629.33 T
1 F
(. Y) 330.57 629.33 T
(ou can also instruct) 342.06 629.33 T
5 F
(FileEnum\050\051) 435.4 629.33 T
1 F
( to use) 494.28 629.33 T
(one of the standard callback routines by passing a member of) 243 617.33 T
(the) 243 605.33 T
5 F
(FileEnumStandardCallback) 260.78 605.33 T
1 F
( enumerated type. In this) 406.16 605.33 T
(case,) 243 593.33 T
3 9 Q
(FEP) 268.19 593.33 T
3 10 Q
(_callbackAttrs) 286.69 593.33 T
1 F
( is ignored;) 352.79 593.33 T
5 F
(FileEnum\050\051) 406.5 593.33 T
1 F
( will) 465.38 593.33 T
-0.51 (automatically pass the appropriate information to the callback) 243 581.33 P
(routine. \050Note that if the) 243 569.33 T
1 9 Q
(FESF_CALLBACK) 359.68 569.33 T
1 10 Q
( bit of the) 439.85 569.33 T
3 9 Q
(FEP_) 243 557.33 T
3 10 Q
(searchFlags) 266 557.33 T
1 F
( \336eld is not set, the) 321.16 557.33 T
3 9 Q
(FEP) 411.92 557.33 T
3 10 Q
(_callback) 430.43 557.33 T
1 F
( \336eld is) 473.57 557.33 T
-0.41 (ignored.\051 The callback routine may not call any routines which) 243 545.33 P
(are in movable memory at the time) 243 533.33 T
5 F
(FileEnum\050\051) 408.22 533.33 T
1 F
( is called,) 467.1 533.33 T
(except for routines which are in the same resource as the) 243 521.33 T
(callback routine.) 243 509.33 T
3 9 Q
(FEP) 180 490.33 T
3 10 Q
(_callbackAttrs) 198.5 490.33 T
1 F
(This \336eld speci\336es what additional attributes should be read) 243 478.33 T
(for the callback routine. This \336eld is a pointer to an array of) 243 466.33 T
5 F
-0.23 (FileExtAttrDesc) 243 454.33 P
1 F
-0.23 ( structures \050see page 646\051. The array will be) 327.07 454.33 P
(\336lled in with the appropriate information for each \336le before) 243 442.33 T
-0.7 (the callback routine is called. Note that if the) 243 430.33 P
1 9 Q
-0.63 (FESF_CALLBACK) 448.75 430.33 P
1 10 Q
-0.04 (bit of the) 243 418.33 P
3 9 Q
-0.03 (FEP_) 287.16 418.33 P
3 10 Q
-0.04 (searchFlags) 310.17 418.33 P
1 F
-0.04 (is not set, the) 368.07 418.33 P
3 9 Q
-0.03 (FEP) 433.13 418.33 P
3 10 Q
-0.04 (_callbackAttrs) 451.63 418.33 P
1 F
-0.04 (is) 520.48 418.33 P
(ignored. If you do not need any attributes passed to the) 243 406.33 T
(callback routine, set this \336eld to be a null pointer) 243 394.33 T
(.) 469.71 394.33 T
3 9 Q
(FEP_) 180 375.33 T
3 10 Q
(cbData1) 203 375.33 T
1 F
(,) 241.34 375.33 T
3 9 Q
(FEP_) 246.9 375.33 T
3 10 Q
(cbData2) 269.91 375.33 T
1 F
(These are dword-length \336elds. Their contents are ignored by) 243 363.33 T
5 F
-0.42 (FileEnum\050\051) 243 351.33 P
1 F
-0.41 (; they are used to pass information to the callback) 301.88 351.33 P
-0.46 (routine. If you do not call a standard callback routine, you may) 243 339.33 P
(use these \336elds any way you wish.) 243 327.33 T
3 9 Q
(FEP_) 180 308.33 T
3 10 Q
(headerSize) 203 308.33 T
1 F
-0.6 (If the \337ag) 243 296.33 P
1 9 Q
-0.54 (FESF_LEA) 288.98 296.33 P
-0.54 (VE_HEADER) 335.66 296.33 P
1 10 Q
-0.6 ( is set,) 393.64 296.33 P
5 F
-0.62 (FileEnum\050\051) 424.27 296.33 P
1 F
-0.6 ( will leave) 483.15 296.33 P
(an empty header space at the beginning of the return buffer) 243 284.33 T
(.) 519.31 284.33 T
(The size of the header is speci\336ed by this \336eld. If the \337ag) 243 272.33 T
1 9 Q
(FESF_LEA) 243 260.33 T
(VE_HEADER) 289.67 260.33 T
1 10 Q
( is clear) 347.66 260.33 T
(, this \336eld is ignored.) 382.85 260.33 T
(The \336rst \336eld of the) 180 241.33 T
5 F
(FileEnumParams) 274.08 241.33 T
1 F
( structure,) 364.81 241.33 T
3 9 Q
(FEP) 416.1 241.33 T
3 10 Q
(_searchFlags) 434.6 241.33 T
1 F
(, is a) 494.76 241.33 T
-0.25 (word-length record containing) 180 228.33 P
5 F
-0.26 (FileEnumSearchFlags) 321.45 228.33 P
1 F
-0.25 (. The following \337ags) 436.63 228.33 P
(are available:) 180 215.33 T
1 9 Q
(FESF_DIRS) 180 195.33 T
1 10 Q
(Directories should be examined by) 243 195.33 T
5 F
(FileEnum\050\051) 404.87 195.33 T
1 F
(.) 463.75 195.33 T
1 9 Q
(FESF_NON_GEOS) 180 176.33 T
1 10 Q
(Non-) 243 164.33 T
1 9 Q
(GEOS) 265.59 164.33 T
1 10 Q
( \336les should be examined by) 291.76 164.33 T
5 F
(FileEnum\050\051) 424.38 164.33 T
1 F
(.) 483.26 164.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "658" 48
%%Page: "659" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(659) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(FESF_GEOS_EXECS) 180 641.33 T
(GEOS) 243 629.33 T
1 10 Q
( executable \336les should be examined by) 269.17 629.33 T
5 F
(FileEnum\050\051) 453.65 629.33 T
1 F
(.) 512.53 629.33 T
1 9 Q
(FESF_GEOS_NON_EXECS) 180 610.33 T
(GEOS) 243 598.33 T
1 10 Q
( non-executable \336les \050e.g.,) 269.17 598.33 T
1 9 Q
(VM) 390.85 598.33 T
1 10 Q
( \336les\051 should be examined) 405.85 598.33 T
(by) 243 586.33 T
5 F
(FileEnum\050\051) 256.71 586.33 T
1 F
(.) 315.59 586.33 T
1 9 Q
(FESF_REAL_SKIP) 180 567.33 T
1 10 Q
(If a skip count of) 243 555.33 T
3 F
(n) 323.19 555.33 T
1 F
( is speci\336ed, the \336rst) 329.3 555.33 T
3 F
(n) 427.64 555.33 T
1 F
( \336les will be skipped) 433.75 555.33 T
(regardless of whether they matched the attributes passed. In) 243 543.33 T
(this case,) 243 531.33 T
5 F
(FileEnum\050\051) 288.75 531.33 T
1 F
( will return the number of \336les passed) 347.63 531.33 T
-0.51 (through in order to get enough \336les to \336ll the buffer; the return) 243 519.33 P
(value can thus be the real-skip count for the next pass.) 243 507.33 T
1 9 Q
(FESF_CALLBACK) 180 488.33 T
5 10 Q
(FileEnum\050\051) 243 476.33 T
1 F
( should call a callback routine to determine) 301.88 476.33 T
(whether a \336le should be accepted.) 243 464.33 T
1 9 Q
(FESF_LOCK_CB_DA) 180 445.33 T
(T) 270.18 445.33 T
(A) 275.69 445.33 T
1 10 Q
(This \337ag indicates that the) 243 433.33 T
5 F
(FileEnumParams) 370.62 433.33 T
1 F
( \336elds) 461.35 433.33 T
3 9 Q
(FEP) 243 421.33 T
3 10 Q
(_callback1) 261.5 421.33 T
1 F
( and) 310.2 421.33 T
3 9 Q
(FEP) 333.17 421.33 T
3 10 Q
(_callback2) 351.68 421.33 T
1 F
( are far pointers to movable) 400.38 421.33 T
(memory that must be locked before) 243 409.33 T
5 F
(FileEnum\050\051) 408.39 409.33 T
1 F
( is called.) 467.27 409.33 T
1 9 Q
(FESF_LEA) 180 390.33 T
(VE_HEADER) 226.67 390.33 T
1 10 Q
-0.2 (If set,) 243 378.33 P
5 F
-0.21 (FileEnum\050\051) 271.86 378.33 P
1 F
-0.2 ( should leave an empty header space at the) 330.74 378.33 P
-0.11 (start of the return buffer) 243 366.33 P
-0.11 (. The size of this buffer is speci\336ed by) 356.43 366.33 P
(the) 243 354.33 T
3 9 Q
(FEP) 260.78 354.33 T
3 10 Q
(_headerSize) 279.28 354.33 T
1 F
( \336eld.) 334.63 354.33 T
(Y) 180 335.33 T
(ou can specify precisely which data you want about each \336le and in which) 185.93 335.33 T
-0.3 (arrangement it should be returned. However) 180 322.33 P
-0.3 (, for most purposes, you can get) 384.78 322.33 P
(enough information by requesting one of the standard return types. If you) 180 309.33 T
(pass a member of) 180 296.33 T
5 F
(FileEnumStandardReturnT) 263.35 296.33 T
(ype) 406.72 296.33 T
1 F
( in) 425.24 296.33 T
3 9 Q
(FEP) 440.06 296.33 T
3 10 Q
(_returnAttrs) 458.56 296.33 T
1 F
(,) 515.58 296.33 T
5 F
(FileEnum\050\051) 180 283.33 T
1 F
( will write an array of structures to the return buffer; each \336le) 238.88 283.33 T
(will have one such structure. The structures are shown below in Code) 180 270.33 T
(Display) 180 257.33 T
(17-) 218.16 257.33 T
(2 on page) 232.61 257.33 T
2 F
(l) 279.29 257.33 T
1 F
(660.) 289.98 257.33 T
5 F
(FileEnumStandardReturnT) 312.22 257.33 T
(ype) 455.59 257.33 T
1 F
( has the) 474.11 257.33 T
(following values:) 180 244.33 T
1 9 Q
(FESRT_COUNT_ONL) 180 224.33 T
(Y) 273.36 224.33 T
5 10 Q
-0.78 (FileEnum\050\051) 243 212.33 P
1 F
-0.76 ( will not allocate any memory or return data about) 301.88 212.33 P
(\336les; instead, it will simply return the number of \336les which) 243 200.33 T
(match the speci\336ed criteria.) 243 188.33 T
1 9 Q
(FESRT_DOS_INFO) 180 169.33 T
5 10 Q
(FileEnum\050\051) 243 157.33 T
1 F
( will return an array of) 301.88 157.33 T
5 F
(FEDosInfo) 411.15 157.33 T
1 F
( structures.) 466.69 157.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "659" 49
%%Page: "660" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(660) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(These structures contain basic information about the \336le: its) 243 641.33 T
-0.52 (virtual name, size, modi\336cation date,) 243 629.33 P
1 9 Q
-0.47 (DOS) 414.68 629.33 P
1 10 Q
-0.52 ( attributes, and path) 434.36 629.33 P
(information \050as a) 243 617.33 T
5 F
(DirPathInfo) 325.05 617.33 T
1 F
( record\051.) 388.37 617.33 T
1 9 Q
(FESRT_NAME) 180 598.33 T
5 10 Q
(FileEnum\050\051) 243 586.33 T
1 F
( will return an array of) 301.88 586.33 T
5 F
(FileLongName) 411.15 586.33 T
1 F
( strings,) 487.43 586.33 T
(each one of which is) 243 574.33 T
1 9 Q
(FILE_LONGNAME_BUFFER_SIZE) 337.82 574.33 T
1 10 Q
(characters long; every one of these will contain a \336le\325) 243 562.33 T
(s virtual) 486.17 562.33 T
(name followed by a null terminator) 243 550.33 T
(.) 405.25 550.33 T
1 9 Q
(FESRT_NAME_AND_A) 180 531.33 T
(TTR) 279.84 531.33 T
5 10 Q
(FileEnum\050\051) 243 519.33 T
1 F
( will return an array of) 301.88 519.33 T
5 F
(FENameAndAttr) 411.15 519.33 T
1 F
(structures, each one of which contains a \336le\325) 243 507.33 T
(s) 446.34 507.33 T
1 9 Q
(DOS) 453.75 507.33 T
1 10 Q
( attributes) 473.42 507.33 T
(and virtual name.) 243 495.33 T
-0.08 (The) 180 476.33 P
5 F
-0.09 (FEDosInfo) 200.48 476.33 P
1 F
-0.08 ( structure includes a word-sized record which describes the) 256.02 476.33 P
(\336le\325) 180 463.33 T
(s position relative to the standard paths. It contains the following \336elds:) 195.93 463.33 T
1 9 Q
(DPI_EXISTS_LOCALL) 180 443.33 T
(Y) 276.69 443.33 T
1 10 Q
-0.29 (This bit is set if the \336le exists in a directory under the primary) 243 431.33 P
(tree.) 243 419.33 T
1 9 Q
(DPI_ENTR) 180 400.33 T
(Y_NUMBER_IN_P) 227.17 400.33 T
(A) 306 400.33 T
(TH) 312 400.33 T
1 10 Q
(This is the mask for a seven-bit \336eld whose offset is) 243 388.33 T
1 9 Q
(DPI_ENTR) 243 376.33 T
(Y_NUMBER_IN_P) 290.17 376.33 T
(A) 369 376.33 T
(TH_OFFSET) 375 376.33 T
1 10 Q
(.) 429.26 376.33 T
1 9 Q
(DPI_STD_P) 180 357.33 T
(A) 229.68 357.33 T
(TH) 235.68 357.33 T
1 10 Q
(This is the mask for an eight-bit \336eld whose offset is) 243 345.33 T
1 9 Q
(DPI_STD_P) 243 333.33 T
(A) 292.68 333.33 T
(TH_OFFSET) 298.68 333.33 T
1 10 Q
(. If the \336le is in a standard path, this) 352.94 333.33 T
(\336eld will contain a) 243 321.33 T
5 F
(StandardPath) 331.17 321.33 T
1 F
( constant for a standard) 404.51 321.33 T
-0.73 (path containing the \336le. This need not be the \322closest\323 standard) 243 309.33 P
(path; for example, if the \336le is in the \322W) 243 297.33 T
(orld\323 directory) 427.29 297.33 T
(, this) 492.65 297.33 T
(constant might nevertheless be) 243 285.33 T
1 9 Q
(SP_TOP) 390.05 285.33 T
1 10 Q
(.) 423.94 285.33 T
81 253.98 531 266 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 253.98 531 266 R
7 X
0 0 0 1 0 0 0 K
V
76.5 261.23 617.5 264.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 247.31 T
(17-) 147.13 247.31 T
(2 Standard FileEnum\050\051 Return Structures) 161.58 247.31 T
4 9 Q
(/* These structures are the standard FileEnum\050\051 return types. You can also) 81 232.98 T
( * instruct FileEnum\050\051 to return any arbitrary extended attribute information.) 81 221.98 T
( */) 81 210.98 T
(typedef struct {) 81 192.98 T
(/* These are returned if you specify FESRT_DOS_INFO */) 212.5 192.98 T
(FileAttrs) 102.6 181.98 T
(FEDI_attributes;) 168.98 181.98 T
(/* File\325s DOS attributes;) 301 181.98 T
( * see section 17.5.6.3 on page 668 */) 301 170.98 T
(FileDateAndTime) 102.6 159.98 T
(FEDI_modTimeDate) 189 159.98 T
(/* Last modification time; see page 647 */) 301 159.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "660" 50
%%Page: "661" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(661) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(dword) 102.6 642 T
(FEDI_fileSize;) 168.98 642 T
(/* Size of file \050in bytes\051 */) 301 642 T
(FileLongName) 102.6 631 T
(FEDI_name;) 168.98 631 T
(/* File\325s virtual name; null-terminated */) 301 631 T
(DirPathInfo) 102.6 620 T
(FEDI_pathInfo;) 168.98 620 T
(/* PathInfo structure, described above */) 301 620 T
(} FEDosInfo;) 81 609 T
(typedef struct{) 81 591 T
(/* These are returned if you specify FESRT_NAME_AND_ATTR) 212.5 591 T
(*/) 81 580 T
(FileAttrs) 102.6 569 T
(FENAA_attributes;) 168.98 569 T
(/* File\325s DOS attributes;) 301 569 T
( * see section 17.5.6.3 on page 668 */) 301 558 T
(FileLongName) 102.6 547 T
(FENAA_name;) 172.8 547 T
(/* File\325s virtual name; null-terminated */) 301 547 T
(} FENameAndAttr;) 81 536 T
81 511.98 531 524 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 511.98 531 524 R
7 X
0 0 0 1 0 0 0 K
V
76.5 519.23 617.5 522.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(There is currently one standard callback routine provided. This routine,) 180 494.31 T
5 F
-0.23 (FileEnumW) 180 481.31 P
-0.23 (ildcard\050\051) 240.54 481.31 P
1 F
-0.22 (, rejects all \336les whose names don\325) 285.74 481.31 P
-0.22 (t match a wildcard) 442.42 481.31 P
(string. T) 180 468.31 T
(o call this routine, set) 218.9 468.31 T
3 9 Q
(FEP) 321.88 468.31 T
3 10 Q
(_callback) 340.38 468.31 T
1 F
( as follows:) 383.52 468.31 T
4 F
(enumParams.FEP_callback = \050void *\051 FESC_WILDCARD;) 216 452.31 T
3 9 Q
-0.76 (FEP_) 180 431.31 P
3 10 Q
-0.85 (cbData1) 203 431.31 P
1 F
-0.85 ( should be a pointer to a null-terminated wildcard string. In this) 241.34 431.31 P
(string, \322*\323 denotes a sequence of zero or more of any character) 180 418.31 T
(, and \322?\323) 465.37 418.31 T
(denotes any one character; all other characters represent themselves. If a) 180 405.31 T
(\336le\325) 180 392.31 T
(s virtual name matches the wildcard string, information about it will be) 195.93 392.31 T
-0.24 (returned by) 180 379.31 P
5 F
-0.25 (FileEnum\050\051) 236.74 379.31 P
1 F
-0.24 (. If the lowest byte of) 295.62 379.31 P
3 9 Q
-0.22 (FEP) 393.64 379.31 P
3 10 Q
-0.24 (_cbData2) 412.14 379.31 P
1 F
-0.24 ( is non-zero, the) 455.48 379.31 P
-0.39 (comparison will be case-insensitive; otherwise, it will be case-sensitive. \050The) 180 366.31 P
-0.72 (other bytes of) 180 353.31 P
3 9 Q
-0.65 (FEP) 243.39 353.31 P
3 10 Q
-0.72 (_cbData2) 261.89 353.31 P
1 F
-0.72 ( are ignored.\051 This is different from standard) 305.23 353.31 P
1 9 Q
-0.65 (DOS) 509.27 353.31 P
1 10 Q
-0.45 (wildcarding; for example, the name \322doc*.\323 matches any \336le that begins with) 180 340.31 P
(the letters \322doc\323 and ends with a period, whereas a) 180 327.31 T
1 9 Q
(DOS) 417.07 327.31 T
1 10 Q
( wildcard string) 436.74 327.31 T
-0.08 (\322doc*.\323 would match only those \336les whose name start with \322doc\323 and which) 180 314.31 P
(have no extension.) 180 301.31 T
0 14 Q
(17.5.6) 123.08 258.98 T
0 18 Q
(Bytewise File Operations) 180 258.98 T
1 10 Q
-0.83 (There are several routines designed for working with \336les as a string of bytes.) 180 235.31 P
(These routines may be used to work with) 180 222.31 T
1 9 Q
(DOS) 372.81 222.31 T
1 10 Q
( \336les or with) 392.48 222.31 T
1 9 Q
(GEOS) 452.86 222.31 T
1 10 Q
( byte \336les.) 479.04 222.31 T
-0.26 (Y) 180 209.31 P
-0.26 (ou can open any \336le \050including an executable \336le or a) 185.93 209.31 P
1 9 Q
-0.23 (VM) 430.73 209.31 P
1 10 Q
-0.26 ( \336le\051 for byte-level) 445.73 209.31 P
(access. This may be useful for such things as \336le-compression routines;) 180 196.31 T
(however) 180 183.31 T
(, be aware that if you make any changes to such \336les, you could) 217.96 183.31 T
(invalidate them. For this reason, if you open a) 180 170.31 T
1 9 Q
(VM) 396.15 170.31 T
1 10 Q
( or executable \336le for) 411.14 170.31 T
(byte-level access, you should open it for read-only use.) 180 157.31 T
81 182.64 171 241.43 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(Advanced T) 81 188.43 T
(opic) 131.35 188.43 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 X
90 450 13.5 13.5 101.25 217.31 G
4 H
0 Z
90 450 13.5 13.5 101.25 217.31 A
0 0 0 1 0 0 0 K
81 197.19 121.5 237.69 R
1 H
0 X
N
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "661" 51
%%Page: "662" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(662) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(17.5.6.1) 111.4 638.67 T
(Opening and Closing Files) 180 638.67 T
4 10 Q
(FileOpen\050\051, FileCreate\050\051, FileCreateTempFile\050\051,) 180 616.33 T
(FileClose\050\051, FileAccessFlags) 180 603.33 T
1 9 Q
-0.55 (The GEOS) 180 583.33 P
1 10 Q
-0.61 ( \336le system provides several routines for opening \336les for byte-level) 224.13 583.33 P
(access. If you are working with) 180 570.33 T
1 9 Q
(GEOS) 325.75 570.33 T
1 10 Q
( V) 351.92 570.33 T
(irtual Memory \336les, you should use) 361.48 570.33 T
-0.82 (the appropriate) 180 557.33 P
1 9 Q
-0.74 (VM) 253.19 557.33 P
1 10 Q
-0.82 ( routines to open and close the \336les \050see \322V) 268.18 557.33 P
-0.82 (irtual Memory) 457.07 557.33 P
-0.82 (,\323) 522.37 557.33 P
(Chapter) 180 544.33 T
(18\051. Y) 220.74 544.33 T
(ou should use the byte-level routines only if you are working) 246.68 544.33 T
(with) 180 531.33 T
1 9 Q
(DOS) 203.71 531.33 T
1 10 Q
( \336les or with) 223.38 531.33 T
1 9 Q
(GEOS) 283.76 531.33 T
1 10 Q
( byte \336les. Y) 309.94 531.33 T
(ou may occasionally want to read a) 365.7 531.33 T
1 9 Q
(VM) 180 518.33 T
1 10 Q
( \336le or an executable \336le as a string of bytes. In this rare case, you must) 194.99 518.33 T
(use the routines in this section. Note, however) 180 505.33 T
(, that you should not change) 393.35 505.33 T
-0.02 (the) 180 492.33 P
1 9 Q
-0.02 (VM) 197.76 492.33 P
1 10 Q
-0.02 ( \336le with these routines; it is safe only to open it for read-only access.) 212.75 492.33 P
(T) 180 472.33 T
(o open a \336le, call) 185.75 472.33 T
5 F
(FileOpen\050\051) 265.4 472.33 T
1 F
(. This routine takes two arguments: a set of) 320.95 472.33 T
5 F
(FileAccessFlags) 180 459.33 T
1 F
( and a pointer to a null-terminated string. The string) 262.59 459.33 T
(should specify the name of the \336le \050either the virtual name or the native) 180 446.33 T
(name may be used\051. It may simply be a \336le name, or it may be a relative or) 180 433.33 T
-0.09 (absolute path. The) 180 420.33 P
5 F
-0.09 (FileAccessFlags) 268.83 420.33 P
1 F
-0.09 ( record speci\336es two things: what kind) 351.42 420.33 P
(of access the caller wants, and what type of access is permitted to other) 180 407.33 T
(geodes. A set of) 180 394.33 T
5 F
(FileAccessFlags) 253.71 394.33 T
1 F
( is thus a bit-wise) 336.3 394.33 T
1 9 Q
(OR) 420.77 394.33 T
1 10 Q
( of two different) 434.27 394.33 T
-0.79 (values. The \336rst speci\336es what kind of access the calling geode wants and has) 180 381.33 P
(the following values:) 180 368.33 T
1 9 Q
(FILE_ACCESS_R) 180 348.33 T
1 10 Q
(The geode will only be reading from the \336le.) 243 336.33 T
1 9 Q
(FILE_ACCESS_W) 180 317.33 T
1 10 Q
(The geode will write to the \336le but will not read from it.) 243 305.33 T
1 9 Q
(FILE_ACCESS_R) 180 286.33 T
(W) 254.66 286.33 T
1 10 Q
(The geode will read from and write to the \336le.) 243 274.33 T
(The second part speci\336es what kind of access other geodes may have. Note) 180 255.33 T
-0.31 (that if you try to deny a permission which has already been given to another) 180 242.33 P
(geode \050e.g. you open a \336le with) 180 229.33 T
1 9 Q
(FILE_DENY_W) 323.91 229.33 T
1 10 Q
( when another geode has the) 391.08 229.33 T
-0.37 (\336le open for write-access\051, the call will fail. The following permissions can be) 180 216.33 P
(used:) 180 203.33 T
1 9 Q
(FILE_DENY_R) 180 183.33 T
(W) 244.5 183.33 T
1 10 Q
-0.82 (No geode may open the \336le for any kind of access, whether read,) 243 171.33 P
(write, or read/write.) 243 159.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "662" 52
%%Page: "663" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(663) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(FILE_DENY_R) 180 641.33 T
1 10 Q
(No geode may open the \336le for read or read/write access.) 243 629.33 T
1 9 Q
(FILE_DENY_W) 180 610.33 T
1 10 Q
(No geode may open the \336le for write or read/write access.) 243 598.33 T
1 9 Q
(FILE_DENY_NONE) 180 579.33 T
1 10 Q
(Other geodes may open the \336le for any kind of access.) 243 567.33 T
(T) 180 548.33 T
(wo \337ags, one from each of these sets of values, are combined to make up a) 185.96 548.33 T
(proper) 180 535.33 T
5 F
(FileAccessFlags) 213.14 535.33 T
1 F
( value. For example, to open the \336le for read-only) 295.73 535.33 T
-0.55 (access while prohibiting other geodes from writing to the \336le, you would pass) 180 522.33 P
(the \337ags) 180 509.33 T
1 9 Q
(FILE_ACCESS_R) 222.23 509.33 T
1 10 Q
(and) 299.73 509.33 T
1 9 Q
( FILE_DENY_W) 317.14 509.33 T
1 10 Q
( as follows:) 386.81 509.33 T
4 F
(myHandle = FileOpen\050"MyFile",) 216 493.33 T
(\050FILE_ACCESS_R | FILE_DENY_W\051\051;) 288 479.33 T
1 F
(If successful,) 180 458.33 T
5 F
(FileOpen\050\051) 242.21 458.33 T
1 F
( returns the \336le\325) 297.76 458.33 T
(s handle. If it is unsuccessful, it) 371.65 458.33 T
(returns a null handle and sets the thread\325) 180 445.33 T
(s error value. The following error) 372.8 445.33 T
(values are commonly returned:) 180 432.33 T
1 9 Q
(ERROR_FILE_NOT_FOUND) 180 412.33 T
1 10 Q
(No \336le with the speci\336ed name could be found in the) 243 400.33 T
(appropriate directory) 243 388.33 T
(.) 340.4 388.33 T
1 9 Q
(ERROR_P) 180 369.33 T
(A) 222.83 369.33 T
(TH_NOT_FOUND) 228.83 369.33 T
1 10 Q
(A relative or absolute path had been passed, and the path) 243 357.33 T
(included a directory which did not exist.) 243 345.33 T
1 9 Q
(ERROR_TOO_MANY_OPEN_FILES) 180 326.33 T
1 10 Q
(There is a limit to how many \336les may be open at once. If this) 243 314.33 T
(limit is reached,) 243 302.33 T
5 F
(FileOpen\050\051) 320.42 302.33 T
1 F
( will fail until a \336le is closed.) 375.97 302.33 T
1 9 Q
(ERROR_ACCESS_DENIED) 180 283.33 T
1 10 Q
(Either the caller requested access which could not be granted) 243 271.33 T
-0.39 (\050e.g. it requested write access when another geode had already) 243 259.33 P
-0.19 (opened the \336le with) 243 247.33 P
1 9 Q
-0.18 (FILE_DENY_W) 336.12 247.33 P
1 10 Q
-0.19 (\051, or the caller tried to deny) 403.29 247.33 P
(access when that access had already been granted to another) 243 235.33 T
(geode \050e.g. it tried to open the \336le with) 243 223.33 T
1 9 Q
(FILE_DENY_W) 423.58 223.33 T
1 10 Q
( when) 490.75 223.33 T
(another geode already had it open for write-access\051.) 243 211.33 T
1 9 Q
(ERROR_WRITE_PROTECTED) 180 192.33 T
1 10 Q
(The caller requested write or read-write access to a \336le in a) 243 180.33 T
(write-protected volume.) 243 168.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "663" 53
%%Page: "664" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(664) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Note that if you use the document control objects, they automatically make) 180 641.33 T
(all appropriate calls to) 180 628.33 T
5 F
(FileOpen\050\051) 287.06 628.33 T
1 F
( when the user requests it; you will) 342.61 628.33 T
(automatically be passed the \336le\325) 180 615.33 T
(s handle.) 327.63 615.33 T
5 F
(FileOpen\050\051) 180 595.33 T
1 F
( can only be called if the \336le already exists. In order to create a) 235.55 595.33 T
-0.3 (byte \336le, you must call) 180 582.33 P
5 F
-0.31 (FileCreate\050\051) 285.55 582.33 P
1 F
-0.3 (.) 348.33 582.33 P
5 F
-0.31 (FileCreate\050\051) 353.59 582.33 P
1 F
-0.3 ( takes four arguments: a) 416.37 582.33 P
-0.4 (set of) 180 569.33 P
5 F
-0.41 (FileCreateFlags) 206.62 569.33 P
1 F
-0.4 (, a set of) 289.58 569.33 P
5 F
-0.41 (FileAccessFlags) 329.3 569.33 P
1 F
-0.4 (, a set of) 411.89 569.33 P
5 F
-0.41 (FileAttrs) 451.62 569.33 P
1 F
-0.4 (, and a) 498.1 569.33 P
(pointer to a string containing a name for the \336le. As with) 180 556.33 T
5 F
(FileOpen\050\051) 446.33 556.33 T
1 F
(, the) 501.88 556.33 T
(name may be a name alone or a relative or absolute path. The) 180 543.33 T
5 F
(FileCreateFlags) 180 530.33 T
1 F
( speci\336es whether the \336le should be created if it already) 262.96 530.33 T
(exists. The following \337ags are available:) 180 517.33 T
1 9 Q
(FILE_CREA) 180 497.33 T
(TE_TRUNCA) 232.16 497.33 T
(TE) 288.84 497.33 T
1 10 Q
(If a \336le with the given name exists, it should be opened and) 243 485.33 T
(truncated; that is, all data should be deleted.) 243 473.33 T
1 9 Q
(FILE_CREA) 180 454.33 T
(TE_NO_TRUNCA) 232.16 454.33 T
(TE) 307.67 454.33 T
1 10 Q
(If the \336le exists, it should be opened without being truncated.) 243 442.33 T
1 9 Q
(FILE_CREA) 180 423.33 T
(TE_ONL) 232.16 423.33 T
(Y) 268.68 423.33 T
1 10 Q
(If the \336le exists, the routine should fail and set the thread\325) 243 411.33 T
(s) 512.66 411.33 T
(error value to) 243 399.33 T
1 9 Q
(ERROR_FILE_EXISTS) 308.74 399.33 T
1 10 Q
(.) 406.74 399.33 T
1 9 Q
(FCF_NA) 180 380.33 T
(TIVE) 216.34 380.33 T
1 10 Q
(This \337ag is combined with one of the above \337ags if the \336le) 243 368.33 T
-0.26 (should be created in the device\325) 243 356.33 P
-0.26 (s native format; e.g. if it should) 385.59 356.33 P
-0.06 (be a) 243 344.33 P
1 9 Q
-0.06 (DOS) 264.55 344.33 P
1 10 Q
-0.06 ( \336le instead of a) 284.23 344.33 P
1 9 Q
-0.06 (GEOS) 360.05 344.33 P
1 10 Q
-0.06 ( \336le. The name passed must be) 386.22 344.33 P
-0.51 (an acceptable native \336le name. If a) 243 332.33 P
1 9 Q
-0.46 (GEOS) 403.5 332.33 P
1 10 Q
-0.51 ( \336le with the speci\336ed) 429.68 332.33 P
(name already exists,) 243 320.33 T
5 F
(FileCreate\050\051) 341.17 320.33 T
1 F
( will fail with error) 403.95 320.33 T
(condition) 243 308.33 T
1 9 Q
(ERROR_FILE_FORMA) 288.37 308.33 T
(T_MISMA) 386.53 308.33 T
(TCH) 429.36 308.33 T
1 10 Q
(.) 449.36 308.33 T
-0.71 (The \336rst three \337ags \050) 180 289.33 P
1 9 Q
-0.64 (FILE_CREA) 274.57 289.33 P
-0.64 (TE_) 326.73 289.33 P
1 10 Q
-0.71 (\311\051 are mutually exclusive; exactly one of) 343.73 289.33 P
-0.67 (them must be passed to) 180 276.33 P
5 F
-0.7 (FileCreate\050\051) 288.69 276.33 P
1 F
-0.67 (. That \337ag may or may not be combined) 351.47 276.33 P
(with) 180 263.33 T
1 9 Q
(FCF_NA) 203.71 263.33 T
(TIVE) 240.05 263.33 T
1 10 Q
(.) 262.71 263.33 T
(The) 180 243.33 T
5 F
(FileAccessFlags) 200.56 243.33 T
1 F
( are the same as described in) 283.15 243.33 T
5 F
(FileOpen\050\051) 419.84 243.33 T
1 F
(. Note,) 475.39 243.33 T
-0.72 (however) 180 230.33 P
-0.72 (, that you must request either write access or read/write access when) 217.96 230.33 P
(you use) 180 217.33 T
5 F
(FileCreate\050\051) 217.78 217.33 T
1 F
(.) 280.56 217.33 T
-0.32 (Every \336le has a set of attributes. These record certain information about the) 180 197.33 P
(\336le. If you create a \336le, you will need to specify values for these attributes.) 180 184.33 T
(The attributes are described above in the section on \322FEA_FILE_A) 180 171.33 T
(TTR\323 on) 488 171.33 T
(page 648.) 180 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "664" 54
%%Page: "665" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(665) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.08 (If) 180 641.33 P
5 F
-0.09 (FileCreate\050\051) 190.1 641.33 P
1 F
-0.08 ( is successful, it will open the \336le and return its handle. If it) 252.88 641.33 P
(fails, it will return a null handle and set the thread\325) 180 628.33 T
(s error value. It may) 418.75 628.33 T
-0.24 (return any of the) 180 615.33 P
5 F
-0.25 (FileOpen\050\051) 260.52 615.33 P
1 F
-0.24 ( errors. It may also return the following errors:) 316.07 615.33 P
1 9 Q
(ERROR_FILE_EXISTS) 180 595.33 T
1 10 Q
-0.74 (Returned if) 243 583.33 P
5 F
-0.76 (FileCreate\050\051) 297.07 583.33 P
1 F
-0.74 ( was called with) 359.85 583.33 P
1 9 Q
-0.67 (FILE_CREA) 433.95 583.33 P
-0.67 (TE_ONL) 486.11 583.33 P
-0.67 (Y) 522.62 583.33 P
1 10 Q
(and a \336le with the speci\336ed name already exists.) 243 571.33 T
1 9 Q
(ERROR_FORMA) 180 552.33 T
(T_MISMA) 251.5 552.33 T
(TCH) 294.33 552.33 T
1 10 Q
(Returned if) 243 540.33 T
5 F
(FileCreate\050\051) 298.55 540.33 T
1 F
( was called with) 361.33 540.33 T
1 9 Q
(FILE_CREA) 243 528.33 T
(TE_TRUNCA) 295.16 528.33 T
(TE) 351.84 528.33 T
1 10 Q
( or) 364.34 528.33 T
1 9 Q
(FILE_CREA) 379.34 528.33 T
(TE_NO_TRUNCA) 431.5 528.33 T
(TE) 507.01 528.33 T
1 10 Q
(and a \336le exists in a different format than desired; i.e. you) 243 516.33 T
(passed) 243 504.33 T
1 9 Q
(FCF_NA) 277.08 504.33 T
(TIVE) 313.42 504.33 T
1 10 Q
( and the \336le already exists in the) 336.08 504.33 T
1 9 Q
(GEOS) 490.74 504.33 T
1 10 Q
(format, or vice versa.) 243 492.33 T
-0.12 (It is often useful to create temporary \336les which are not seen by the user) 180 473.33 P
-0.12 (. In) 512.73 473.33 P
-0.57 (these cases, you generally don\325) 180 460.33 P
-0.57 (t care about the \336le\325) 318.86 460.33 P
-0.57 (s name since you will most) 408.09 460.33 P
(likely be deleting the \336le on exit. For these situations) 180 447.33 T
1 9 Q
(GEOS) 428.94 447.33 T
1 10 Q
( provides the) 455.11 447.33 T
(routine) 180 434.33 T
5 F
(FileCreateT) 216.48 434.33 T
(empFile\050\051) 277.78 434.33 T
1 F
(.) 327.78 434.33 T
5 F
(FileCreateT) 333.34 434.33 T
(empFile\050\051) 394.64 434.33 T
1 F
( is passed a) 444.64 434.33 T
(directory; it chooses a unique name for the \336le. This routine takes two) 180 421.33 T
(arguments:) 180 408.33 T
2 F
(u) 180 388.33 T
1 F
(A set of) 198 388.33 T
5 F
(FileAttrs) 235.41 388.33 T
1 F
(, as described above.) 281.89 388.33 T
2 F
(u) 180 369.33 T
1 F
(A pointer to a null-terminated string specifying the path for the) 198 369.33 T
(temporary \336le. This path may be relative or absolute. T) 198 357.33 T
(o create the) 453.06 357.33 T
(temporary \336le in the current directory) 198 345.33 T
(, pass the string \322.\323 This string) 373.54 345.33 T
(should contain fourteen extra null bytes at the end, as) 198 333.33 T
5 F
-0.12 (FileCreateT) 198 321.33 P
-0.12 (empFile\050\051) 259.3 321.33 P
1 F
-0.12 ( will write the name of the temporary \336le at the) 309.3 321.33 P
(end of the string. T) 198 309.33 T
(emporary \336les are typically created in) 285.42 309.33 T
1 9 Q
(SP_W) 198 297.33 T
(ASTE_BASKET) 222.17 297.33 T
1 10 Q
(.) 288.59 297.33 T
-0.88 (If successful,) 180 278.33 P
5 F
-0.91 (FileCreateT) 240.45 278.33 P
-0.91 (empFile\050\051) 301.75 278.33 P
1 F
-0.88 ( will open the temporary \336le and return) 351.75 278.33 P
(its handle. It will also write the \336le\325) 180 265.33 T
(s name to the end of the string passed.) 344.3 265.33 T
(Y) 180 252.33 T
(ou will need to know the name to delete the \336le. The name is also useful if) 185.93 252.33 T
1 9 Q
-0.39 (GEOS) 180 239.33 P
1 10 Q
-0.44 ( shuts down while a temporary \336le is open; the geode will need to know) 206.17 239.33 P
(the temporary \336le\325) 180 226.33 T
(s name in order to reopen it.) 264.82 226.33 T
-0.82 (When you are done with a \336le, you should close it by calling) 180 206.33 P
5 F
-0.85 (FileClose\050\051) 447.64 206.33 P
1 F
-0.82 (. This) 503.75 206.33 P
(releases any restrictions you may have placed on the \336le and allows the \336le) 180 193.33 T
(to be moved or deleted. It is passed two arguments: the \336le handle and a) 180 180.33 T
(Boolean value which should be set to) 180 167.33 T
3 F
(true) 352.99 167.33 T
1 F
( \050i.e. non-zero\051 if the geode cannot) 371.5 167.33 T
(handle error messages; it will cause) 180 154.33 T
5 F
(FileClose\050\051) 348.17 154.33 T
1 F
( to fatal-error if it cannot) 404.28 154.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "665" 55
%%Page: "666" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(666) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.46 (successfully close the \336le. \050This should only be used during development; the) 180 641.33 P
-0.25 (\337ag should never be passed in a \336nished program.\051 The routine returns zero) 180 628.33 P
(if successful; otherwise, it returns a) 180 615.33 T
5 F
(FileError) 347.41 615.33 T
1 F
( value.) 396.86 615.33 T
0 14 Q
(17.5.6.2) 111.4 581.67 T
(Reading From and W) 180 581.67 T
(riting T) 319.76 581.67 T
(o Files) 366.17 581.67 T
4 10 Q
(FileRead\050\051, FileWrite\050\051, FilePos\050\051, FileCommit\050\051) 180 559.33 T
1 F
(There are a few speci\336c operations you are allowed to perform on data in a) 180 539.33 T
-0.69 (byte-\336le. Y) 180 526.33 P
-0.69 (ou can copy data from the \336le into memory; you can copy data from) 228.21 526.33 P
-0.59 (memory into the \336le, overwriting the \336le\325) 180 513.33 P
-0.59 (s contents; you can write data to the) 365.53 513.33 P
(end of a \336le; and you can cut data from the end of the \336le. If you want to) 180 500.33 T
-0.4 (perform more elaborate manipulations on a byte-\336le, you may wish to create) 180 487.33 P
(a temporary) 180 474.33 T
1 9 Q
(VM) 239.45 474.33 T
1 10 Q
( \336le and copy the data there \050see \322V) 254.44 474.33 T
(irtual Memory) 417.72 474.33 T
(,\323) 483.83 474.33 T
(Chapter) 180 461.33 T
(18\051.) 220.74 461.33 T
(Every \336le handle has a) 180 441.33 T
3 F
(\336le position) 289.09 441.33 T
1 F
( associated with it. All read and write) 342.22 441.33 T
-0.74 (operations begin at that position; they may also change the position. The \336rst) 180 428.33 P
-0.44 (byte in a \336le is considered to be at position zero. If the \336le is a) 180 415.33 P
1 9 Q
-0.4 (GEOS) 460.95 415.33 P
1 10 Q
-0.44 ( byte \336le,) 487.12 415.33 P
-0.28 (position zero is immediately after the) 180 402.33 P
1 9 Q
-0.25 (GEOS) 353.71 402.33 P
1 10 Q
-0.28 ( header; thus, the header cannot) 379.89 402.33 P
(be accessed or altered via the read and write operations.) 180 389.33 T
-0.48 (T) 180 369.33 P
-0.48 (o read data from a \336le, call) 185.75 369.33 P
5 F
-0.5 (FileRead\050\051) 308.88 369.33 P
1 F
-0.48 (. This routine takes four arguments.) 363.51 369.33 P
-0.12 (The \336rst is the \336le\325) 180 356.33 P
-0.12 (s handle. The second is a Boolean indicating whether the) 266.21 356.33 P
(caller can handle errors. \050This is) 180 343.33 T
3 F
(true) 332.6 343.33 T
1 F
( if the geode cannot handle error) 351.11 343.33 T
(messages; it will cause) 180 330.33 T
5 F
(FileRead\050\051) 287.62 330.33 T
1 F
( to fatal-error if it cannot successfully) 342.25 330.33 T
-0.21 (read the data. This should only be used during development; the \337ag should) 180 317.33 P
(never be passed in a \336nished program.\051 The third is the number of bytes to) 180 304.33 T
(read. The fourth is the address of a buffer) 180 291.33 T
(.) 371.86 291.33 T
5 F
(FileRead\050\051) 377.42 291.33 T
1 F
( will copy the) 432.05 291.33 T
(requested number of bytes from the \336le to the buffer) 180 278.33 T
(. It will return the) 421.12 278.33 T
-0.31 (number of bytes actually read. This may be less than the number requested,) 180 265.33 P
-0.39 (if the end of \336le is reached; in this case, the thread\325) 180 252.33 P
-0.39 (s error value will be set to) 410.93 252.33 P
1 9 Q
(ERROR_SHORT_READ_WRITE) 180 239.33 T
1 10 Q
(. If) 317.15 239.33 T
5 F
(FileRead\050\051) 332.89 239.33 T
1 F
( was unable to gain access to) 387.52 239.33 T
(the \336le, it will return -1 and set the thread\325) 180 226.33 T
(s error value to) 378.55 226.33 T
1 9 Q
-0.34 (ERROR_ACCESS_DENIED) 180 213.33 P
1 10 Q
-0.38 (. In any event, the \336le position will be incremented) 297.32 213.33 P
-0.41 (by the number of bytes read; thus, it will point to the \336rst byte after the data) 180 200.33 P
(read.) 180 187.33 T
(T) 180 167.33 T
(o write data to a \336le, call) 185.75 167.33 T
5 F
(FileW) 303.01 167.33 T
(rite\050\051) 332.45 167.33 T
1 F
(. This routine takes four arguments.) 359.12 167.33 T
-0.12 (The \336rst is the \336le\325) 180 154.33 P
-0.12 (s handle. The second is a Boolean indicating whether the) 266.21 154.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "666" 56
%%Page: "667" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(667) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.69 (caller can handle errors. The third is the number of bytes to write. The fourth) 180 641.33 P
(is the address of a buffer in memory) 180 628.33 T
(.) 345.38 628.33 T
5 F
(FileW) 350.94 628.33 T
(rite\050\051) 380.38 628.33 T
1 F
( will copy the speci\336ed) 407.05 628.33 T
(number of bytes from the buffer to the \336le, starting at the current position) 180 615.33 T
(and expanding the \336le as necessary) 180 602.33 T
(. It will also increment the current) 342.98 602.33 T
(position by the number of bytes written. If the current position is not at the) 180 589.33 T
-0.74 (end of the \336le,) 180 576.33 P
5 F
-0.76 (FileW) 245.39 576.33 P
-0.76 (rite\050\051) 274.83 576.33 P
1 F
-0.74 ( will overwrite the \336le\325) 301.5 576.33 P
-0.74 (s existing data.) 401.89 576.33 P
5 F
-0.76 (FileW) 472.85 576.33 P
-0.76 (rite\050\051) 502.29 576.33 P
1 F
(returns the number of bytes written. This may be less than the number) 180 563.33 T
(requested, if the disk ran out of space; in this case, the thread\325) 180 550.33 T
(s error value) 466.89 550.33 T
(will be set to) 180 537.33 T
1 9 Q
(ERROR_SHORT_READ_WRITE) 241.32 537.33 T
1 10 Q
(. If) 378.47 537.33 T
5 F
(FileW) 394.21 537.33 T
(rite\050\051) 423.65 537.33 T
1 F
( could not get) 450.32 537.33 T
-0.78 (access to the \336le \050as, for example, if the geode had read-only access to the \336le\051,) 180 524.33 P
-0.5 (it will return -1 and set the thread\325) 180 511.33 P
-0.5 (s error value to) 337.46 511.33 P
1 9 Q
-0.45 (ERROR_ACCESS_DENIED) 408.61 511.33 P
1 10 Q
-0.5 (.) 525.94 511.33 P
(If a \336le is on a removable disk, the kernel will make sure that the disk is in) 180 491.33 T
-0.48 (the appropriate drive before reading from or writing to it. If the disk is not in) 180 478.33 P
-0.24 (the drive, the kernel will prompt the user to insert it. The user will have the) 180 465.33 P
(option of aborting the operation; this will result in the \336le-access routine) 180 452.33 T
(failing with error condition) 180 439.33 T
1 9 Q
(ERROR_DISK_UNA) 307.78 439.33 T
(V) 393.28 439.33 T
(AILABLE) 398.78 439.33 T
1 10 Q
(.) 440.44 439.33 T
(When you write changes to a \336le, either the) 180 419.33 T
1 9 Q
(GEOS) 384.09 419.33 T
1 10 Q
( \336le system or the) 410.26 419.33 T
(underlying) 180 406.33 T
1 9 Q
(DOS) 233.33 406.33 T
1 10 Q
( may choose to cache those changes to save time. All cached) 253 406.33 T
-0.11 (changes will be written to the disk when the \336le is closed. However) 180 393.33 P
-0.11 (, you can) 487.62 393.33 P
(force the cached changes to be written immediately by calling) 180 380.33 T
5 F
(FileCommit\050\051) 180 367.33 T
1 F
(. This routine takes two arguments. The \336rst is the \336le\325) 249.07 367.33 T
(s) 503.93 367.33 T
(handle. The second is a Boolean indicating whether the caller can handle) 180 354.33 T
-0.26 (errors. The routine returns zero if the operation was successful; otherwise it) 180 341.33 P
(returns an error code.) 180 328.33 T
(T) 180 308.33 T
(o change the current \336le position, call) 185.75 308.33 T
5 F
(FilePos\050\051) 362.24 308.33 T
1 F
(. This routine takes three) 408.9 308.33 T
(arguments. The \336rst is the \336le handle. The second is a member of the) 180 295.33 T
5 F
-0.67 (FilePosMode) 180 282.33 P
1 F
-0.65 ( enumerated type; this value indicates how the new position is) 247.21 282.33 P
(speci\336ed. The third argument is a number of bytes; it speci\336es how far the) 180 269.33 T
(\336le position will be moved.) 180 256.33 T
5 F
(FilePosMode) 305.4 256.33 T
1 F
( has the following possible values:) 372.61 256.33 T
1 9 Q
(FILE_POS_ST) 180 236.33 T
(ART) 241.02 236.33 T
1 10 Q
(The \336le position is set to a speci\336ed number of bytes after the) 243 224.33 T
-0.6 (start of the \336le. Passing this mode with an offset of zero will set) 243 212.33 P
-0.77 (the \336le position to the start of the \336le \050i.e. immediately after the) 243 200.33 P
(header information\051.) 243 188.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "667" 57
%%Page: "668" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(668) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(FILE_POS_RELA) 180 641.33 T
(TIVE) 254.84 641.33 T
1 10 Q
(The \336le position is incremented or decremented by a speci\336ed) 243 629.33 T
(number of bytes.) 243 617.33 T
1 9 Q
(FILE_POS_END) 180 598.33 T
1 10 Q
-0.36 (The \336le position is set to a speci\336ed number of bytes before the) 243 586.33 P
-0.2 (end of the \336le. Passing this mode with an offset of zero will set) 243 574.33 P
(the \336le position to the end of the \336le.) 243 562.33 T
5 F
(FilePos\050\051) 180 543.33 T
1 F
( returns a 32-bit integer) 226.66 543.33 T
(. This integer speci\336es the \336le position) 337.23 543.33 T
(after the move \050relative to the start of the \336le\051. T) 180 530.33 T
(o \336nd out the current \336le) 403.92 530.33 T
-0.52 (position without changing it, call) 180 517.33 P
5 F
-0.54 (FilePos\050\051) 332.24 517.33 P
1 F
-0.52 ( with mode) 378.9 517.33 P
1 9 Q
-0.47 (FILE_POS_RELA) 431.23 517.33 P
-0.47 (TIVE) 506.08 517.33 P
1 10 Q
(and offset zero.) 180 504.33 T
0 14 Q
(17.5.6.3) 111.4 470.67 T
(Getting and Setting Information about a Byte File) 180 470.67 T
4 10 Q
(FileGetDateAndTime\050\051, FileSetDateAndTime\050\051,) 180 448.33 T
(FileGetAttributes\050\051, FileSetAttributes\050\051) 180 435.33 T
1 9 Q
(GEOS) 180 415.33 T
1 10 Q
( provides several routines to get information about \336les. T) 206.17 415.33 T
(o get) 473.06 415.33 T
-0.16 (information about a) 180 402.33 P
1 9 Q
-0.14 (GEOS) 274.17 402.33 P
1 10 Q
-0.16 ( \336le, you would ordinarily use one of the extended) 300.35 402.33 P
(attributes routines \050see section 17.5.3 on page 643\051. These routines are) 180 389.33 T
-0.64 (ordinarily used for non-) 180 376.33 P
1 9 Q
-0.58 (GEOS) 287.33 376.33 P
1 10 Q
-0.64 ( \336les. Nevertheless, all of the following routines) 313.5 376.33 P
(can be used on) 180 363.33 T
1 9 Q
(GEOS) 250.38 363.33 T
1 10 Q
( \336les.) 276.55 363.33 T
5 F
(FileGetDateAndT) 180 343.33 T
(ime\050\051) 271.03 343.33 T
1 F
( and) 297.88 343.33 T
5 F
(FileSetDateAndT) 320.85 343.33 T
(ime\050\051) 410.22 343.33 T
1 F
( are used to get and) 437.07 343.33 T
-0.3 (set the \336le\325) 180 330.33 P
-0.3 (s modi\336cation time. T) 229.4 330.33 P
-0.3 (o access a) 327.96 330.33 P
1 9 Q
-0.27 (GEOS) 374.65 330.33 P
1 10 Q
-0.3 ( \336le\325) 400.83 330.33 P
-0.3 (s modi\336cation time, you) 419.23 330.33 P
(would ordinarily call an extended attribute routine, passing) 180 317.33 T
1 9 Q
(FEA_MODIFICA) 180 304.33 T
(TION) 251.83 304.33 T
1 10 Q
(. However) 275.83 304.33 T
(, special-purpose routines are provided) 321.57 304.33 T
(speci\336cally for changing a \336le\325) 180 291.33 T
(s modi\336cation time. Note that these routines) 318.34 291.33 T
(may be used for) 180 278.33 T
1 9 Q
(GEOS) 255.75 278.33 T
1 10 Q
( or non-) 281.92 278.33 T
1 9 Q
(GEOS) 317.47 278.33 T
1 10 Q
( \336les. Similarly) 343.64 278.33 T
(, you can change the) 412.92 278.33 T
1 9 Q
(FEA_MODIFICA) 180 265.33 T
(TION) 251.83 265.33 T
1 10 Q
( attribute even for non-) 275.83 265.33 T
1 9 Q
(GEOS) 383.24 265.33 T
1 10 Q
( \336les. T) 409.41 265.33 T
(o \336nd out the) 442.39 265.33 T
-0.01 (modi\336cation time, call) 180 252.33 P
5 F
-0.01 (FileGetDateAndT) 285.37 252.33 P
-0.01 (ime\050\051) 376.4 252.33 P
1 F
-0.01 (. This routine is passed the) 403.25 252.33 P
-0.11 (\336le\325) 180 239.33 P
-0.11 (s handle and returns a) 195.93 239.33 P
5 F
-0.11 (FileDateAndT) 303.18 239.33 P
-0.11 (ime) 375.88 239.33 P
1 F
-0.11 ( value \050as described above on) 394.95 239.33 P
(page 647\051. T) 180 226.33 T
(o change the modi\336cation time, call) 235.77 226.33 T
5 F
(FileSetDateAndT) 402.09 226.33 T
(ime\050\051) 491.46 226.33 T
1 F
(.) 518.31 226.33 T
(This routine is passed the \336le\325) 180 213.33 T
(s handle and a) 318.17 213.33 T
5 F
(FileDateAndT) 388.56 213.33 T
(ime) 461.26 213.33 T
1 F
( value. If) 480.33 213.33 T
-0.62 (successful, it returns zero; otherwise, it returns an error code. Y) 180 200.33 P
-0.62 (ou must have) 467.85 200.33 P
(write permission to change the modi\336cation time; otherwise,) 180 187.33 T
5 F
(FileSetDateAndT) 180 174.33 T
(ime\050\051) 269.37 174.33 T
1 F
( will fail with condition) 296.22 174.33 T
1 9 Q
(ERROR_ACCESS_DENIED.) 406.06 174.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "668" 58
%%Page: "669" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Files) 526.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(669) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(17.5) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.12 (T) 180 641.33 P
-0.12 (o \336nd out a) 185.75 641.33 P
1 9 Q
-0.11 (DOS) 239.89 641.33 P
1 10 Q
-0.12 ( \336le\325) 259.56 641.33 P
-0.12 (s attributes, call) 278.15 641.33 P
5 F
-0.13 (FileGetAttributes\050\051) 355.94 641.33 P
1 F
-0.12 (. This routine is) 455.56 641.33 P
(passed a \336le\325) 180 628.33 T
(s path. It returns the \336le\325) 238.35 628.33 T
(s) 354.47 628.33 T
5 F
(FileAttrs) 361.88 628.33 T
1 F
( record \050as described on) 408.36 628.33 T
(page 648\051. T) 180 615.33 T
(o change the \336le\325) 235.77 615.33 T
(s attributes, call) 312.63 615.33 T
5 F
(FileSetAttributes\050\051) 390.8 615.33 T
1 F
(. This) 488.76 615.33 T
(routine takes two arguments: the address of a null-terminated path string) 180 602.33 T
(and a) 180 589.33 T
5 F
(FileAttrs) 208.53 589.33 T
1 F
( record. It returns zero if it was successful; otherwise, it) 255.01 589.33 T
-0.03 (returns an error condition. Note that a \336le\325) 180 576.33 P
-0.03 (s attributes cannot be changed if) 377.24 576.33 P
(the \336le is open.) 180 563.33 T
0 14 Q
(17.5.6.4) 111.4 529.67 T
(Data-Access Synchronization) 180 529.67 T
4 10 Q
(FileLockRecord\050\051, FileUnlockRecord\050\051) 180 507.33 T
1 9 Q
(GEOS) 180 487.33 T
1 10 Q
( provides routines to help threads synchronize \336le access. This) 206.17 487.33 T
-0.32 (functionality is very elaborate for) 180 474.33 P
1 9 Q
-0.29 (VM) 335.45 474.33 P
1 10 Q
-0.32 ( \336les. For byte \336les it is less so. Several) 350.45 474.33 P
-0.26 (threads can synchronize their access to a single handle by using) 180 461.33 P
5 F
-0.27 (HandleP\050\051) 475.52 461.33 P
1 F
-0.51 (and) 180 448.33 P
5 F
-0.53 (HandleV\050\051) 199.68 448.33 P
1 F
-0.51 (, described in section 15.3.6 of chapter 15. If they want to use) 252.64 448.33 P
(the \336le at the same time, they should use) 180 435.33 T
5 F
(FileLockRecord\050\051) 373.37 435.33 T
1 F
( and) 464.31 435.33 T
5 F
(FileUnlockRecord\050\051) 180 422.33 T
1 F
(.) 282.42 422.33 T
5 F
(FileLockRecord\050\051) 180 402.33 T
1 F
( takes three arguments: the \336le handle, a dword) 270.94 402.33 T
(specifying the start of the region to be locked, and a dword specifying the) 180 389.33 T
(length \050in bytes\051 of the region to be locked. If there are no locks on any part) 180 376.33 T
(of that region,) 180 363.33 T
5 F
(FileLockRecord\050\051) 247.97 363.33 T
1 F
( returns zero; otherwise, it returns the) 338.91 363.33 T
(error code) 180 350.33 T
1 9 Q
(ERROR_ALREADY_LOCKED) 229.06 350.33 T
1 10 Q
(. Note that there is nothing to stop) 356.39 350.33 T
(another thread or geode from reading or writing to that region. The lock) 180 337.33 T
(simply prevents anyone from) 180 324.33 T
3 F
(locking) 317.04 324.33 T
1 F
( that region with) 350.18 324.33 T
5 F
(FileLockRecord\050\051) 430.75 324.33 T
1 F
(.) 521.69 324.33 T
-0.35 (The \336le\325) 180 311.33 P
-0.35 (s users have to remember to lock any part of the \336le before accessing) 216.13 311.33 P
(it.) 180 298.33 T
(T) 180 278.33 T
(o release a lock on a part of a \336le, call) 185.75 278.33 T
5 F
(FileUnlockRecord\050\051) 361.72 278.33 T
1 F
(. This routine) 464.14 278.33 T
(takes the same arguments as) 180 265.33 T
5 F
(FileLockRecord\050\051) 318.18 265.33 T
1 F
(.) 409.12 265.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "669" 59
%%Page: "670" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(File System) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(670) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(17.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "670" 60
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 60
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Italic
%%+ Courier
%%+ NewCenturySchlbk-Bold
%%+ Times-Roman
%%EOF
