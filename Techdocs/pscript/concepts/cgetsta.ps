%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /NewCenturySchlbk-Italic FMFONTDEFINE
5 0 /Times-Roman FMFONTDEFINE
6 0 /Courier FMFONTDEFINE
7 0 /Courier-BoldOblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "107" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Application Structure) 415.65 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(107) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
-0.12 (This chapter provides you with an application shell to which you can add as) 180 610.3 P
(you learn more about) 180 597.3 T
1 9 Q
(GEOS) 281.31 597.3 T
1 10 Q
( programming. It describes each portion of the) 307.48 597.3 T
(introductory \050and compulsory\051 \322Hello W) 180 584.3 T
(orld\323 sample program. All) 363.32 584.3 T
-0.74 (programmers new to) 180 571.3 P
1 9 Q
-0.67 (GEOS) 276.3 571.3 P
1 10 Q
-0.74 ( should read this chapter for a \336rm understanding) 302.47 571.3 P
-0.11 (of the basics of a) 180 558.3 P
1 9 Q
-0.1 (GEOS) 258.53 558.3 P
1 10 Q
-0.11 ( application. The source code for Hello W) 284.7 558.3 P
-0.11 (orld is given) 471.89 558.3 P
-0.47 (in this chapter in pieces. It is also available as the Hello3 sample application.) 180 545.3 P
0 14 Q
(4.1) 142.54 492.97 T
0 24 Q
(Application Structure) 180 492.97 T
1 10 Q
(Every) 180 467.3 T
1 9 Q
(GEOS) 210.18 467.3 T
1 10 Q
( application and library will have at least two \336les: The Geode) 236.35 467.3 T
(Parameters \336le provides the Glue linker with necessary information about) 180 454.3 T
-0.76 (the geode being compiled and linked. The source \336le contains the source code.) 180 441.3 P
(Source code \336les may be split up into modules of source and de\336nition) 180 428.3 T
(\336les\321this allows the programmer to keep large applications in a series of) 180 415.3 T
(smaller \336les for easy organization and easier debugging.) 180 402.3 T
(Essentially there are four different types of \336les your application may use:) 180 382.3 T
2 F
(u) 180 362.3 T
1 F
(Parameters File \050) 198 362.3 T
3 F
(.gp) 278.94 362.3 T
1 F
(\051) 294.5 362.3 T
(The Parameters \336le, as stated above, provides the Glue linker with) 198 350.3 T
-0.81 (necessary information. It details speci\336cs about the geode being compiled) 198 338.3 P
(that will be necessary for dynamically linking at runtime. Each geode) 198 326.3 T
-0.02 (may have only one Parameters \336le. The Parameters \336le for Hello W) 198 314.3 P
-0.02 (orld) 509.91 314.3 P
-0.17 (is detailed in section 4.3 on page 1) 198 302.3 P
-0.17 (14. Full reference information for this) 354.43 302.3 P
(\336le type can be found in the Routines reference book.) 198 290.3 T
2 F
(u) 180 271.3 T
1 F
(Source File \050) 198 271.3 T
3 F
(.goc) 256.15 271.3 T
1 F
(\051) 276.71 271.3 T
(The Source \336le contains a combination of) 198 259.3 T
1 9 Q
(GEOS) 390.43 259.3 T
(UI) 419.38 259.3 T
1 10 Q
( code and standard) 430.38 259.3 T
1 9 Q
(C) 520.76 259.3 T
1 10 Q
-0.23 (code. Many source code \336les can be used for a single geode; this can help) 198 247.3 P
(you organize your application\325) 198 235.3 T
(s functionality into manageable groups of) 336.34 235.3 T
(routines and objects. An introduction to the basics of the source \336le is) 198 223.3 T
(given in section 4.4 on page 1) 198 211.3 T
(16.) 332.85 211.3 T
2 F
(u) 180 192.3 T
1 F
(C Header File \050) 198 192.3 T
3 F
(.h) 268.93 192.3 T
1 F
(\051) 278.56 192.3 T
-0.56 (C Header \336les may be used to hold de\336nitions of data structures, classes,) 198 180.3 P
(macros, routines, and other items. There are several standard) 198 168.3 T
1 9 Q
(GEOS) 487.1 168.3 T
81 144 531 648 C
235.51 643.97 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.97 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "107" 1
%%Page: "108" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(108) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(header \336les you must include in your geode for it to compile properly) 198 641.33 T
(.) 513.93 641.33 T
(These are outlined in section 4.4 on page 1) 198 629.33 T
(16.) 393.97 629.33 T
2 F
(u) 180 610.33 T
1 9 Q
(GEOS) 198 610.33 T
1 10 Q
( Header File \050) 224.17 610.33 T
3 F
(.goh) 287.88 610.33 T
1 F
(\051) 309.73 610.33 T
-0.04 (This \336le is essentially the same as the) 198 598.33 P
1 9 Q
-0.04 (C) 376.41 598.33 P
1 10 Q
-0.04 ( header \336les described above. It) 382.91 598.33 P
(can contain class and routine de\336nitions as well as constants and) 198 586.33 T
(variables. The primary difference between these \336les and the) 198 574.33 T
1 9 Q
(C) 483.4 574.33 T
1 10 Q
( header) 489.9 574.33 T
(\336les is that) 198 562.33 T
3 F
(.goh) 252.46 562.33 T
1 F
( \336les must be included before the geode is run through) 274.31 562.33 T
(the Goc preprocessor) 198 550.33 T
(.) 293.54 550.33 T
1 9 Q
(C) 299.1 550.33 T
1 10 Q
( header \336les do not have to go through the Goc) 305.6 550.33 T
(preprocessor) 198 538.33 T
(. Simple geodes might have none of their own header \336les.) 255.76 538.33 T
(These \336les are also described in section 4.4 on page 1) 198 526.33 T
(16.) 442.31 526.33 T
0 14 Q
(4.2) 142.54 475 T
0 24 Q
(Hello W) 180 475 T
(orld) 267.58 475 T
1 10 Q
(The Hello W) 180 449.33 T
(orld sample application \050Hello3\051 is very simple and yet) 237.23 449.33 T
(accomplishes a great deal. W) 180 436.33 T
(ith just a few simple steps, this program does) 313.35 436.33 T
(the following:) 180 423.33 T
2 F
(u) 180 403.33 T
1 F
(Creates a complete primary window) 198 403.33 T
2 F
(u) 180 384.33 T
1 F
(Creates a scrollable window and scroller objects) 198 384.33 T
2 F
(u) 180 365.33 T
1 F
(Draws 48-point text into the scrollable window and redraws the text) 198 365.33 T
(when the user changes a parameter) 198 353.33 T
2 F
(u) 180 334.33 T
1 F
(Handles scrolling and window resizes) 198 334.33 T
2 F
(u) 180 315.33 T
1 F
(Uses a pinnable menu to bring up a dialog box) 198 315.33 T
2 F
(u) 180 296.33 T
1 F
(Uses a dialog box to allow the user to change colors of the text) 198 296.33 T
2 F
(u) 180 277.33 T
1 F
(Uses keyboard mnemonics for both the menu and dialog box commands) 198 277.33 T
-0.41 (The Hello W) 180 258.33 P
-0.41 (orld program uses some concepts and constructs with which you) 236.41 258.33 P
(may not be familiar yet. This section will describe each of those constructs) 180 245.33 T
(and will refer to other sections of the documentation for complete) 180 232.33 T
(information.) 180 219.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "108" 2
%%Page: "109" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Hello World) 480.22 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(109) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(4.2.1) 130.86 636 T
0 18 Q
(Features of Hello W) 180 636 T
(orld) 347.71 636 T
1 10 Q
-0.17 (T) 180 612.33 P
-0.17 (o the user) 185.75 612.33 P
-0.17 (, the Hello W) 230.41 612.33 P
-0.17 (orld program is very simple. It consists of a primary) 289.91 612.33 P
(window with a single menu and a scrollable window within the primary) 180 599.33 T
(. In) 510.43 599.33 T
(the scrollable window is a phrase of text: \322W) 180 586.33 T
(elcome to) 384.11 586.33 T
1 9 Q
(GEOS) 430.04 586.33 T
1 10 Q
(!\323) 456.21 586.33 T
(The menu has a single item, \322Color) 180 566.33 T
(,\323 which brings up a dialog box with two) 341.51 566.33 T
(buttons in it. One button is labeled \322Blue\323 and turns the text blue, and the) 180 553.33 T
-0.13 (other is labeled \322Gold\323 and turns the text yellow) 180 540.33 P
-0.13 (. The menu is pinnable, like) 400.28 540.33 P
(all) 180 527.33 T
1 9 Q
(GEOS) 194.64 527.33 T
1 10 Q
( menus, and the dialog box may be moved around the screen and) 220.81 527.33 T
(closed like any other independently-displayable dialog box. See Figure) 180 514.33 T
(4-) 507.46 514.33 T
(1) 516.35 514.33 T
(for an illustration of the application on the screen.) 180 501.33 T
0 14 Q
(4.2.2) 130.86 226.83 T
0 18 Q
(Strategy and Internals) 180 226.83 T
1 10 Q
(The code for Hello W) 180 203.17 T
(orld, as you will see, is quite simple. It consists mainly) 275.74 203.17 T
(of User Interface gadgetry and uses just a few message handlers.) 180 190.17 T
(The main component of the application is the Process object, an instance of) 180 170.17 T
3 F
(HelloProcessClass) 180 157.17 T
1 F
( \050a subclass of) 275.19 157.17 T
3 F
(GenProcessClass) 342.24 157.17 T
1 F
(\051. This object makes) 430.76 157.17 T
81 144 531 648 C
180 265.83 531 498 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 265.83 531 498 R
7 X
0 0 0 1 0 0 0 K
V
0 X
%%BeginBinary:  14640    
538 319 224 142.17 0 181.67 342
/red <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFFFFFF55555555AAAAAAAA00000000
> store
/green <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFF5555FFFF5555AA550000AAAA0000
> store
/blue <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FF55FF55FF55FF55AA00AA00AA00AA00
> store
 BEGINBITMAPCOLORc
z"
Y?F0F77z#z#z
>F8F7F0X,F8F7F0>F8


;z"
Y5F7F0<z"z"z"z
9F0F79F0F7WAF0F79F0=z8z8z8z
8F88F8W@F78F8Jz"
Y$0F0FFJrJz
O"F4WJ/F8J"<"J#8#>&C&J#C%F&F#8#
O!F4FFQ2F0F0F0F0F0F0F7F0F0F0F0F0F0F0;F0F0F0F0F0F0F0F0F7F0F0F0F0F0F0JU"P"J(J'H#J#
FF4F8R#F0F0F7F7F7F0F0HF0F0F7F7F0F0F7F74F7F7Js)J%?%A#8%8t8&<%C&8&;#8%9%8"8%8%8&
FF8F4F4FFF8F8F8F8F8Q;F0F0F0F0F0F0F0F0F7F7F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F7F0F0F0F0F0F0F0F0F0F0F0Az"H"8%J#9'=';'8'9#8%9%:'D%9%=08":'9%
/F0FFF4F4F4F4FFQ7F0F0F0F0F7F7F0F0F0F0F7F7F0F0F7F0F0F0F0F0F0F0F7F7F0F0F7F7F7F7F0F0F7F7F0F0F0F0F7F7F0F0F7F7F0F0F7F7F0F0F0F0F7F7F0F0F7F0F0F7F7F0F0F7F7F7F0F0F7F7F0F0F7F7F0F0By@V9#J#;#J,J#?#J(
F8FFF8Q7F7F7F0F05F7F7F7F7F0F0F7F7F0F0F0:F0F0F0F0;F7F7F7F7F0F0F0AZ@s(J%J%J%=#J%
/F8F4F4F4FFFFFFF8Q?F7F7F7F7:F0F0F7F7:F7F7F7F7F7F7>F0F0F7F7AzF"8%J#H#J#J#
0F8F4FFF8F8F8QBF0F0F0F0FF0F0DF0F0JWr"J'=';-F%:'D%9%=,:$:'
AF4FFQ;F7F0F0F0F0F7F7F0F0F0F0F7F7F0F0F0F0F0F7F7F7F0F0F0F0F0F0F7F7F0F0F0F0F7F0F0F0F7F0F0F0F7F7F0F0F0F0F7F7F7F0F0F0F7F0F0F7F0F0F0F0F7Jt$<#J#8#8%8&8%=&9s8#8#9$8#8%<#8#9$:$8&8%9&9&8%8#8#JZ
AF8F4F4F4FFF8Q4F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7Q50JT"Jz
JF8WL1F8JtJ#J#;#
JF8RAF7F7:F7F7F7F7<zJz
O'F7WA9F77%J&
F7F7F7F7Y5F7F7F7F7F77&z'
F0F0F0F0F7Y3F0F7F0F0F0F0F07%Jz8%
F8F8F8F8O!X3F8F8F8F8F8J"
O%F7?z"
IF8F7
C#;#
FFFFFFFFE"9"
FFFFF$;%8P8#8#
FFF8FFFFFFFFFFFFFFFFFFE&9'9%
F8FFFFFFF8FFFFF8F8FFFFF8F8FFFFF$<#
F8FFF8FFFFG"=%
F8F8F8F8F8J#
;FFFFJ'>%
7F8FFFFFFFFF8F8FFFFFFC#;#8%8#8#8&
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8CU
>z
JF7="
F7<"zz
F7O<F0WDF7<#z"z
F8F0O;F8F7WDF8?z
O9F0J"
OAF7Az"
O5F8F7J$JZ:y
AFFFFFFO W.F7J"=$Jz=-
DFFFFFFFFCW-F0F8F7F8F7F8F7F8F7F8F7F8F0J"J-
KFFX+F8F7F8F7F8F0F7F7F8F7F8F7J$S#J&8&
AF0F0F0F0F0X)F7F8F7F8F7F8F7F8F7F8J%r#J-
AFFFFFFFFF0FFFFX)F8F7F8F7F0F8F8F7F8F7F8F7Jx:RJ%:%
4F0X+F7F8F7F8F7F8F7F8JWJ&8&
5X6F8F7F8F0F8F8F7F7F8F7JxJ$<$
4F8X6F7F8F7F8F7F8J%:%
Y)F8F7F0F8F8F7F8F7E#J'J#>#
FFFF4F8F8F8F8F8F8X,F7F8F7F8J"J$<$
KF8X+F8F0F8F8F7F7E#I"=$J"@"
F8F8F8F8F8F8X(F7F8J$J#>#
AF8F8F8X3F0F8F8F7@zJu
O6F7W8F7?"J,
F7XMF8F7F8F7F8F7F8F7F8F7F8?zJv
O9F8W5F0Ju
Y*F8

F%?#
FFFFFFFFFFFFE'
FFFFF8F8FFFFI#8%<%8&
F8F8FFFFFFFFFFFFFFFFFFFFF8FFFFJ':'9$
6FFFFF8F8FFFFFFFFF8F8FFFFFFF8F8J"
IF8
I#J)
FFFF8FFFFF8FFFFF8FFFFE.:'
F8FFFFFFFFF8F8F8FFFFFFFFF8F8FFFFFFFFF8F%9%8#8%8#:s
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8ER
Er
F8

=z
O<F7=%z
F8F8F8FFO9F0















































Jv
Y)F7J,
Y*F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J#J-
P7FEFEV>F8F7F8F7F8F7F8F7F8F7F8F7Jw9w>tJ$JzJu;#A%Cu<"<zFtJ'<"B$J-
JFEFEFE:FEFEFEQB0FE7FEFEFEFEFEFEFEFEFE9FEFE6FEFEFEFEFEFEFEFEFEFE5F7F8F7F8F7F8F7F8F7F8F7F8J$J$H#@&F"@$@'J"B$?$G#<$8"B"9"J-
P1FEFEFER'FEFEFEFEFEFEFEFEFEFEF0FEFEFEFEFEFEFEFEFE@FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE4F8F7F8F7F8F7F8F7F8F7F8F7J#=$9#=$>$:#J$J$<':$C#:'I"C";rD$<xE":r:"E":&8#J-
JF0F0F0F0F0F0F0F0F0F0F0F0F0F0F07F0F0F0QEF0F0F0F0F0F0F0F0F0FEFEFEFEFEF0F0F0F0F0F0FEFEF0F0F0F0F0FEF0FEFEF0F0F0F0F0FEFEFF7F8F7F8F7F8F7F8F7F8F7F8J"D"J"J"J"A#;"@#:#<$J#:#=#E"H"B#9#=#9#B"9#;#J-
LF0F07F0<F0QGF0F0F0FEFEFEF0F0F0F0F0<FEFEF0F0F0F0F0F0FEFEF0F0F0F0FEFEFEF0F0F0F0HF8F7F8F7F8F7F8F7F8F7F8F7J"J"J";">":#A"H"=";"A#J":"A":"D"?"9"J-
O.F0QLFEO.F0FEFEF0F0F0F0FEF0F0F0LFEF0F0FEF0F0FECF7F8F7F8F7F8F7F8F7F8F7F8J"J"E"J"B":"D"J";"D"J"?":"C":"?"D"J-
MF04FEF0RFF0FEF0F08FEF0F0@F0FEF0F0FEFEF0FF8F7F8F7F8F7F8F7F8F7F8F7J"?"G"J"J":"J"E"F"J"E"J-
O%FEF0FEQ8FEO1F0FEHFEF0F0MF0F0O5F7F8F7F8F7F8F7F8F7F8F7F8J"J"J":"F"J":"J"J"J"J-
O F0R*FEO=FEF0F06FEF0O,FE9FE8F0EF8F7F8F7F8F7F8F7F8F7F8F7J"D"C"J"H"D"J$J#;":"G"F"J"9"J-
O&FEFEF0S)F0F0F0>F0FEFE=F0F0FEF0F0FE8F0F04F7F8F7F8F7F8F7F8F7F8F7F8J"D"E"J"J"J"J":"J"J-
O!F0F0FEP"FEO4FEO=FELFEF0OHFEO/F8F7F8F7F8F7F8F7F8F7F8F7J"A"J#J"J"?"J#J"J"A#J-
O6FEF0OLFEFEO4FEP)F0FECF0F0;FEO#FEF0F0CF7F8F7F8F7F8F7F8F7F8F7F8J">"JrJ'ErA#>&='ErI";&@rJ"J"J":"I"A";#J-
O'FEFE?FE=FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEO(F05F0OCFEF0F0F0FEFEO F8F7F8F7F8F7F8F7F8F7F8F7J"J"D#=#J#<#@$=#=#>#;":#<"B#=#F"H$=#J":"9"J";":"J"J"D"J-
O"F0<FEFEFEFEFE9FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFEF0FEFF0FEF0O#FEFFEFEMF7F8F7F8F7F8F7F8F7F8F7F8J"<"="?"@#8&:"J#8%:">"9&:#:">(9"8':"?#8&:"E$:&<"9&:#J"J"=#J-
O(FEFEFEF0FEFEF0F0F0F0F0FE6FEFEF0F0F0F0FEFEF0F0F0F0F0FEFEFEFEFEF0F0F0F0F0FEFEFEF0F0F0F0FEFEFEF0F0F0F0F0FEF0F0F0F0F0F0F0F0FEF0F0F0F0F0FEFEQ&FEO!F0FEFEKF8F7F8F7F8F7F8F7F8F7F8F7J"D"A"B"8#;":"J"9":"A"8#;#:"9$;$@$:":"="8#;":"J"8#;#:"J":"J"JvJ">#J-
O#F0F0FEFEF0F0F0FE4FEF0F0FEF0F0F0F0FEF0F0F0FEFEF0FEF0F0F0FEFEF0F0F0FE?FEF0F0F0F0FEBFEF0GFEO&FEO#F0FEFEIF7F8F7F8F7F8F7F8F7F8F7F8J"<"J"J"9"@";"8"?":";";"<"9">"J"J"8"?":"J#:"JwJ"?"J-
O1F0FE=F07FEF0FEFEF0F0FEF0F0F0FEF06F0BFEF0F0FE?FEFEF0O8FEO:F0FEHF8F7F8F7F8F7F8F7F8F7F8F7J":":"B"?"8"C"J"F"J"B"H"8"C"J"Jr;"J"JvJ#>#J-
O)FEFEF0F0FEF0FE5F0FE=F0F0FEF0FE<FEKFEF0LF0O#F0O%F0F0FEFEFF7F8F7F8F7F8F7F8F7F8F7F8J"J"9"EuJ"A"A"A"JuJ"A"J#J$=#J"J#>"J-
O$F04FEFEFE6FEF0F0F0O#FEDF0F0FF0F0O:F0F0F0F0F06F0O&F0F0FEEF8F7F8F7F8F7F8F7F8F7F8F7J";"J"J"F"J"J"J"J"JuJ"J";"J"J#="B$J-
O*FEF08FEFF0FE4FEHFEMFE4FE7F0KFEAF0F09F0O'F0F0FEF0FEF05F7F8F7F8F7F8F7F8F7F8F7F8J"="<"@"CzF"C%J"JzJ"J"="J-
O%F0FEF0F0/F0FEF0F0F0F04F0O"/F0LF0R2F0FECF8F7F8F7F8F7F8F7F8F7F8F7J"@$J"J#J-
O/F0FEF0FET!F0P;F0F0IF7F8F7F8F7F8F7F8F7F8F7F8J#>">"J"J"J"="J"I";"J-
O+FEFEF0F0S-FELFEO$F0F0=F0F0FEBF8F7F8F7F8F7F8F7F8F7F8F7J"J"J"J"A"J"I"@"J-
O&F04FES+F0@FEF0O6FEFEFEO(F7F8F7F8F7F8F7F8F7F8F7F8J"="J"J"J"J"C"F"J-
O.F0F06FEP9FEQ#F0P1FEF0F06F8F7F8F7F8F7F8F7F8F7F8F7J"J"I"J"J"J"J":"J":"J#9"J":"J-
O=F0>FEFE4FEO>FE>FEO.F0FEGF0FEO'FEFEF06FEF0O/F7F8F7F8F7F8F7F8F7F8F7F8J";"J":"B#J#8"J"J":"B#J"J"J":"J"J"?"J-
O'F0F0;F0FEFEF0@FEFEF04F0HF0FEFEF0:F04F0O7FEFEODFE5F0FEO&F8F7F8F7F8F7F8F7F8F7F8F7J":"J"G":#?$="A"J"J"A"J":"H"J":"J$:":"E"J$J-
O7F0F0=FEF0FEFEFEFEF0FEFEO/FEAFEFEO"F0FEFE4F0FEO%FEFEF0F0FEFEKFEFEFE5F7F8F7F8F7F8F7F8F7F8F7F8J"J"?$J"=$:"H"J"?$J"H"J":"F$="B":"J">":"C":"A"F"?"9"J-
O(F0FFEFEFEF07FEFEFEF0F0F0O!FEFEFEF0<F0F0O F0FEFEFEF0F0F0FEO#FEF0FEFEF0FEF0FEFE4F8F7F8F7F8F7F8F7F8F7F8F7J"A"G";#;%H"<s"@"?"8"J";#;%J"="?"8"J":"C%J":#J"@":"A":"?"9"@"9"J-
O,F0F0F0FEFEFEFEFEF0F0FEF0FEFEF0KF0FEFEFEFEFEF0:FEFEFEF0O"F0FEFEFEFEF06F0FEFEO FEF0FEFEF0F0FEFEF0CF7F8F7F8F7F8F7F8F7F8F7F8J"<&8"J"J":#;#8"J"<&8"J"9#9":#;#8"J";"J":$>#8";"H";#?#J#B":#=#:"E#<#9"J-
OKF0FEFEFEFEFEF04F04F0FEFEFEFEF0MF0FEFEFEFEFEF06FEFEF0F0FEFEFEFEF04FEFE7F0FEFEFEFEFEF0FEF0FEFEFEFE?FEFEF0FEFEFEFEF0FEFEFEFEF0DF8F7F8F7F8F7F8F7F8F7F8F7J"G"F"A"?":"="@#>#:&9">":"=":"=":"="A"I":%;#:&9"H$=%J#;s8#J#;t:$>";w;"?#:r:#H':"J-
O)F0F0F0F0FEFEF0F0F0F0F0FEFEFEFEFEF0FEFEFEFEFEFEF0F0F0FEFEFEF0F0F0FEFEFEFEFEF0FEFEFEFEFEFEFE4F0F0FEF0F0:F0F0FEF0F0F0FEFEF0F0F0FEF0F0FEFEFEFEFEFEF0EF7F8F7F8F7F8F7F8F7F8F7F8J"C"I#=#=$<$;#="B#>#<$<#9#<#9#<$;#=#J";">#>#J$?$A"H$A%>$J$?$E&>#C"9"J-
O+F0F0F0F0F0F0FEFEFEFEFEFEF0F0F0F0F0F0F0FEFEFEFEFEFEFEFEFEFEFEFEFEFEF0F0F0F05F0F0F0F0F0F0O)F0F0F0F0F0F0F0F0F0F0F0F0F0F0FEFEFECF0F0F0F0F0F0F0F0F0F0F0F0F0F0F04F8F7F8F7F8F7F8F7F8F7F8F7J"E"Jr?w=rEs>v9u9v=rJ&AsJyJtJvBzEtG";sF$J-
O*F0F04F0F0F0F0F0F0F0F08F0F0F0F0F0F05F09F0DF0:F0F0F0F0F0F0F05F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U7FEQ?F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U:F0Q<F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U6FEQ@F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U9F0Q=F8F7F8F7F8F7F8F7F8F7F8F7J$J-
U6F0F0F0Q>F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8Jv"
Y)F0F7Ju
Y*F8J#>"
Y)F8F0F7J"@"
Y)F7F8J$<$
Y)F8F7F0F7F8F7J#>#
Y)F7F8F7F8J%:%
Y)F8F7F8F0F7F7F8F7J$<$
Y)F7F8F7F8F7F8J&8&
Y)F8F7F8F7F0F7F8F7F8F7J%:%
Y)F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F0F7F7F8F7F8F7J&8&
Y)F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F77%<Z;x<%
F7F7F7F7XFF0F7F7F7F77%;z:y;%
F0F0F0F0XHF8F8F0F0F0F07%J%
F8F8F8F8Y6F8F8F8F8

@z
XHF7B.z5
F8F7F8F7F8F7F8F7F8F7F0F0F8VEF0OBF8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F0F0F8F7F8F7F8F7F8F7F8F7F8F0A0z5
F8F7F8F7F8F7F8F7F8F0F0F8F7F7F0VDF8OAF7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F0F8F0F0F7F8F7F8F7F8F7F8F7A,8"J58,
F7F8F7F8F7F8F7F0F0F8F8F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F0F0F8F7F8F7F8F7F8A*:"J5:*
F8F7F8F7F8F0F0F8F8F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F8F0F0F7F8F7F8F7A(<"J5<(
F7F8F7F0F0F8F8F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F0F0F8F7F8A&>"J5>&
F8F0F0F8F8F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F8F0F0F7A$@"J5@$
F7F7F7F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8A&>"J5>&
F8F7F8F7F7F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7A(<"J5<(
F7F8F7F8F7F7F7F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8A*:"J5:*
F8F7F8F7F8F7F8F7F7F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8F7A,8"J58,
F7F8F7F8F7F8F7F8F7F7F7F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8F7F8F7F8A0z5
F8F7F8F7F8F7F8F7F8F7F8F7F7F7F0VEF7O@F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8F7F8F7F8F7@z
XGF0;&Jz
F0F0F0F0F0XH6F0;z#z#z
:F8F7F0X,F8F7F0:F8


z
Y?F7
ENDBITMAP
%%EndBinary
180 268.5 531 320.33 R
7 X
V
0 10 Q
0 X
(Figure) 180 313.67 T
(4-) 213.34 313.67 T
(1) 222.23 313.67 T
4 F
(The Hello W) 230.57 313.67 T
(orld Sample Application) 286.48 313.67 T
-0.46 (The Hello W) 180 299.67 P
-0.46 (orld application draws text in a scrolling V) 234.99 299.67 P
-0.46 (iew and has one menu) 428.5 299.67 P
-0.4 (and one dialog box. The Blue trigger changes the text to blue; the Gold trigger) 180 287.67 P
(changes the text to yellow) 180 275.67 T
(.) 295.35 275.67 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  2615     
65 57 42.5 37.83 0 433.5 360.83
/red <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFFFFFF55555555AAAAAAAA00000000
> store
/green <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFF5555FFFF5555AA550000AAAA0000
> store
/blue <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FF55FF55FF55FF55AA00AA00AA00AA00
> store
 BEGINBITMAPCOLORc
z"
O2F0F7J"J"
:F7DF78z8z
8F8CF7

J%?#
?F0F0F0F0F0F0J'
>F0F0F7F7F0F0J#8%<%8&
BF7F7F0F0F0F0F0F0F0F0F0F0F7F0F0<z"E':'9$
/F0FFF0F0F7F7F0F0F0F0F7F7F0F0F0F7F7=yJ"
F8CF7<Z
/<zB#
0F8F0F0J.:'
>F7F0F0F0F0F7F7F7F0F0F0F0F7F7F0F0F0F0F7J%9%8#8%8#
?F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7

7z
;F7
7z
O1F88z
DF0J"
EF7:5
AF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8F8F7;z
=F8;"J"
FF;FF;"8P8#F"
F8FFFFF8;":%I"
FFF8F8FFFFFF;"B#8#8%9"
F8FFFFFFFFFFFFFFFFF8;":%A'8"
FFFFFFFFF8FFFFF8F8FFFFFF;":%C#:"
F8F8F8FFFFFFFFF8;"J%8"
FF5F8F8F8F8FF;"J#8"
F87FFFFF8;":%:%9'8"
FFFFFFFFF8F8FFFFFFF8FFFFFFFFF8FF;"8&8#8&8%9"
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8;"8RH"
FFFF;#8&83
F8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF89z
AF78"
F78z
DF0J"
EF7:z"
@F8F7

?%?#;#
FFFFFFFFFFFFFFFF>'
FFFFF8F8FFFFB#8%<$
F8F8FFFFFFFFFFFFFFE':%
FFFFF8F8FFFFFFFFF8F8A$
FFFFFFA"
F8
>%9':%
F8FFFFFFF8FFFFFFFFF8F8FFFFFF?&8%8#8&
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8>R
>r
F89z
AF78"
F78z
DF8z
O2F7
ENDBITMAP
%%EndBinary
-18.5 384.83 183.67 413.5 R
7 X
V
0.5 H
2 Z
4 X
N
194.33 398.33 391.84 430.83 R
7 X
V
N
5 24 Q
0 X
(W) 198.33 405.54 T
(elcome to GEOS!) 219.07 405.54 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "109" 3
%%Page: "110" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(110) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(all drawing and color changes by handling messages sent from the window) 180 641.33 T
(manager and the triggers in the dialog box. The Process object basically) 180 628.33 T
-0.15 (manages the application, keeping track of the relevant data and interacting) 180 615.33 P
(with the) 180 602.33 T
1 9 Q
(UI) 221.49 602.33 T
1 10 Q
( gadgetry) 232.49 602.33 T
(. \050See Figure) 274.9 602.33 T
(4-) 336.39 602.33 T
(2 for an illustration of the Hello W) 345.28 602.33 T
(orld) 504.19 602.33 T
(application\325) 180 589.33 T
(s structure.\051) 233.16 589.33 T
(The Process object is event-driven, meaning it has no) 180 569.33 T
3 F
(main\050\051) 428.17 569.33 T
1 F
( routine run) 462.24 569.33 T
(when the program is launched. Instead, the program does nothing until an) 180 556.33 T
-0.12 (event occurs \050such as the view window sending) 180 543.33 P
1 9 Q
-0.11 (MSG_MET) 398.5 543.33 P
-0.11 (A_EXPOSED) 444.67 543.33 P
1 10 Q
-0.12 ( when) 500.68 543.33 P
(\336rst opened\051. When the event \050message\051 is received, the Process object) 180 530.33 T
-0.62 (responds to it and then waits until the next event occurs. Note, however) 180 517.33 P
-0.62 (, that) 504.45 517.33 P
81 144 531 648 C
180 144 531 504.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 504.5 R
7 X
0 0 0 1 0 0 0 K
V
424.58 302.28 418.66 291.84 418.15 303.83 421.36 303.06 4 Y
0 X
V
448.17 414.34 421.37 303.05 2 L
7 X
V
1 H
2 Z
0 X
N
346.85 304.32 346.17 292.34 340.39 302.86 343.62 303.59 4 Y
V
327.17 376.34 343.62 303.59 2 L
7 X
V
0 X
N
277.85 303.82 277.17 291.84 271.39 302.36 274.62 303.09 4 Y
V
258.17 375.84 274.62 303.09 2 L
7 X
V
0 X
N
419.4 410.16 488.23 424.77 7.31 RR
V
0.5 H
0 Z
N
223.12 374.6 291.95 389.22 7.31 RR
V
N
301.4 374.62 370.23 389.24 7.31 RR
V
N
262.65 410.23 331.48 424.85 7.31 RR
V
N
312.65 437.69 348.48 452.31 7.31 RR
V
N
336.32 462.46 414.65 477.08 7.31 RR
V
N
181.67 148.34 531 210.17 R
7 X
V
0 10 Q
0 X
(Figure) 181.67 203.51 T
(4-) 215.01 203.51 T
(2) 223.9 203.51 T
4 F
(Structure of Hello W) 232.24 203.51 T
(orld) 325.55 203.51 T
-0.27 (The Process object contains message handlers \050methods\051 for messages sent to) 181.67 189.51 P
(it by the) 181.67 177.51 T
4 9 Q
(UI) 221.49 177.51 T
4 10 Q
( triggers and V) 232.49 177.51 T
(iew) 300.55 177.51 T
(. The other) 315.73 177.51 T
4 9 Q
(UI) 367.76 177.51 T
4 10 Q
( gadgets operate completely) 378.76 177.51 T
(independently of the application\325) 181.67 165.51 T
(s code; all of their functionality is) 330.89 165.51 T
(implemented within the) 181.67 153.51 T
4 9 Q
(UI) 293.5 153.51 T
4 10 Q
(.) 304.49 153.51 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
244.64 220.17 449.64 291.84 R
N
215.2 365.6 501.04 482.84 R
N
4 12 Q
(UI Gadgetry) 441.18 354.85 T
(Process Object) 185.33 295.5 T
335.32 461.54 413.65 476.15 7.31 RR
7 X
V
0 X
N
4 9 Q
(Primary W) 339.32 467.3 T
(indow) 384.15 467.3 T
418.65 409.7 487.48 424.31 7.31 RR
7 X
V
0 X
N
(V) 425.35 415.46 T
(iew W) 431.12 415.46 T
(indow) 455.29 415.46 T
311.65 436.77 347.48 451.39 7.31 RR
7 X
V
0 X
N
(Menu) 317.82 442.54 T
261.65 409.54 330.48 424.16 7.31 RR
7 X
V
0 X
N
(Dialog Box) 273.32 415.31 T
222.65 374.16 291.48 388.78 7.31 RR
7 X
V
0 X
N
(Blue T) 231.31 379.93 T
(rigger) 258.17 379.93 T
300.65 374.16 369.48 388.78 7.31 RR
7 X
V
0 X
N
(Gold T) 308.81 379.93 T
(rigger) 336.67 379.93 T
259.39 226.25 305.89 285.75 R
N
(Message) 265.4 272.75 T
(Handler) 265.31 263.75 T
(Change) 266.89 243.25 T
(T) 266.96 234.25 T
(o Blue) 272.32 234.25 T
323.89 226.25 370.39 285.75 R
N
(Message) 329.9 272.75 T
(Handler) 329.81 263.75 T
(Change) 331.39 243.25 T
(T) 330.95 234.25 T
(o Gold) 336.32 234.25 T
388.39 226.25 434.89 285.75 R
N
(Message) 394.4 272.75 T
(Handler) 394.31 263.75 T
(Draw) 400.05 243.25 T
(The T) 394.04 234.25 T
(ext) 417.57 234.25 T
263.07 388.78 296.07 409.54 2 L
2 Z
N
329.07 388.78 296.07 409.54 2 L
N
389.04 461.52 444.29 424.37 2 L
N
303.29 424.37 327.53 436.6 2 L
N
332.79 451.36 360.54 461.29 2 L
N
4 8 Q
(MSG_HELLO_CHANGE_TO_BLUE) 183.17 313.58 T
(MSG_HELLO_CHANGE_TO_GOLD) 288.67 338.92 T
(MSG_MET) 427.67 317.08 T
(A_EXPOSED) 469.44 317.08 T
4 12 Q
(UI Gadgetry) 185.33 487.81 T
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "110" 4
%%Page: "111" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Hello World) 480.22 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(111) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(the vast majority of events a Process object will receive and handle are not) 180 641.33 T
(generated by your code but by the kernel and the) 180 628.33 T
1 9 Q
(UI) 409.47 628.33 T
1 10 Q
(.) 420.47 628.33 T
0 14 Q
(4.2.2.1) 119.19 594.67 T
(The Menu and Dialog Box) 180 594.67 T
1 10 Q
-0.39 (Both the menu and the dialog box, once de\336ned in the source code as objects,) 180 572.33 P
-0.65 (are implemented automatically by the system software. The application does) 180 559.33 P
(not have to draw or otherwise manage these objects; they will interact) 180 546.33 T
(directly with the) 180 533.33 T
1 9 Q
(UI) 259.45 533.33 T
1 10 Q
( to do the proper thing.) 270.45 533.33 T
-0.57 (The triggers within the dialog, however) 180 513.33 P
-0.57 (, request actions that must be carried) 359.03 513.33 P
(out by the application \050changing the color to blue and gold, respectively\051.) 180 500.33 T
(Although the application does not have to instantiate, draw) 180 487.33 T
(, or otherwise) 454.31 487.33 T
(modify the trigger objects, it must handle messages sent out by them when) 180 474.33 T
(they are pressed by the user) 180 461.33 T
(. This is discussed below) 309.82 461.33 T
(, under \322Changing the) 421.7 461.33 T
(T) 180 448.33 T
(ext Color) 185.75 448.33 T
(.\323) 226.86 448.33 T
0 14 Q
(4.2.2.2) 119.19 414.67 T
(The Scrolling V) 180 414.67 T
(iew and Drawing the T) 281.67 414.67 T
(ext) 428.44 414.67 T
1 10 Q
(Almost everything is handled automatically by the User Interface for the) 180 392.33 T
-0.22 (Hello W) 180 379.33 P
-0.22 (orld application. This includes implementation of the system menus) 216.45 379.33 P
-0.38 (for the primary window and the scrolling functionality of the scrollable V) 180 366.33 P
-0.38 (iew) 512.66 366.33 P
(window) 180 353.33 T
(.) 214.64 353.33 T
(The view object \050of) 180 333.33 T
3 F
(GenV) 268.71 333.33 T
(iewClass) 296.78 333.33 T
1 F
(\051 is powerful and provides a lot of what) 342.52 333.33 T
(most applications need. It automatically handles all window resizes and) 180 320.33 T
(scrolls, and it will cause proper redrawing when another object \050such as a) 180 307.33 T
(pinned menu\051 is moved across it. The only thing it does not do is actually) 180 294.33 T
(draw the application\325) 180 281.33 T
(s images.) 277.24 281.33 T
(When the view senses that some portion of its window has become invalid) 180 261.33 T
(\050through scrolling or when the view window is \336rst opened, for example\051, it) 180 248.33 T
(will send a) 180 235.33 T
1 9 Q
(MSG_MET) 232.61 235.33 T
(A_EXPOSED) 278.78 235.33 T
1 10 Q
( message to the Hello W) 334.79 235.33 T
(orld application\325) 445.55 235.33 T
(s) 519.82 235.33 T
(Process object. The Process object will respond by drawing the text) 180 222.33 T
-0.43 (appropriately\321it does not, however) 180 209.33 P
-0.43 (, have to worry about what portion of the) 342.98 209.33 P
(text is visible or what portion of the screen the view window occupies. The) 180 196.33 T
(view will automatically clip the text properly and display it within the) 180 183.33 T
(window\325) 180 170.33 T
(s bounds.) 217.23 170.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "111" 5
%%Page: "112" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(112) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(4.2.2.3) 119.19 638.67 T
(Changing the T) 180 638.67 T
(ext Color) 280.86 638.67 T
1 10 Q
(In all, the Process object can handle six events speci\336c to this application:) 180 616.33 T
1 9 Q
(MSG_MET) 180 603.33 T
(A_CONTENT_VIEW_WIN_OPENED) 226.17 603.33 T
1 10 Q
( \050sent by the view when it \336rst) 382.99 603.33 T
-0.71 (creates its window\051,) 180 590.33 P
1 9 Q
-0.64 (MSG_MET) 272.51 590.33 P
-0.64 (A_CONTENT_VIEW_WIN_CLOSED) 318.68 590.33 P
1 10 Q
-0.71 ( \050sent by the) 473.84 590.33 P
-0.07 (view when its window is being destroyed\051,) 180 577.33 P
1 9 Q
-0.06 (MSG_MET) 376.38 577.33 P
-0.06 (A_EXPOSED) 422.55 577.33 P
1 10 Q
-0.07 ( \050described) 478.55 577.33 P
(above\051,) 180 564.33 T
1 9 Q
(MSG_HELLO_CHANGE_TO_BLUE) 215.38 564.33 T
1 10 Q
( \050sent by the Blue trigger\051,) 368.22 564.33 T
1 9 Q
(MSG_HELLO_CHANGE_TO_GOLD) 180 551.33 T
1 10 Q
( \050sent by the Gold trigger\051, and) 333.51 551.33 T
1 9 Q
(MSG_HELLO_REDRA) 180 538.33 T
(W_DOCUMENT) 275.34 538.33 T
1 10 Q
( \050sent by the Process object to itself\051.) 344.83 538.33 T
-0.66 (The Process object maintains two global variables:) 180 518.33 P
3 F
-0.68 (helloT) 411.01 518.33 P
-0.68 (extColor) 443.05 518.33 P
1 F
-0.66 ( contains) 487.86 518.33 P
-0.47 (the current color of the text, and) 180 505.33 P
3 F
-0.49 (winHan) 329.29 505.33 P
1 F
-0.47 ( contains the window handle of the) 370.39 505.33 P
(view\325) 180 492.33 T
(s window) 202.97 492.33 T
(. When it draws the text, the Process object checks) 245.02 492.33 T
3 F
(helloT) 180 479.33 T
(extColor) 212.04 479.33 T
1 F
( before drawing. Therefore, the handlers for the) 256.86 479.33 T
(change-color messages change the value of) 180 466.33 T
3 F
(helloT) 379.45 466.33 T
(extColor) 411.49 466.33 T
1 F
(.) 455.57 466.33 T
(However) 180 446.33 T
(, changing the text\325) 220.18 446.33 T
(s color is not quite that easy) 308.34 446.33 T
(. Because the view) 437.07 446.33 T
(window does not have any way of knowing that the Process object has) 180 433.33 T
(changed the text, the application must inform the) 180 420.33 T
1 9 Q
(UI) 412.43 420.33 T
1 10 Q
( of the change.) 423.43 420.33 T
(Otherwise, the change will be made in the document but will not appear on) 180 407.33 T
(the screen until the view window is moved or resized by the user) 180 394.33 T
(.) 477.61 394.33 T
(Therefore, we must force a window invalidation when we change the color) 180 374.33 T
(.) 520.58 374.33 T
(This will cause the V) 180 361.33 T
(iew window to generate a new) 276.43 361.33 T
1 9 Q
(MSG_MET) 418.31 361.33 T
(A_EXPOSED) 464.48 361.33 T
1 10 Q
-0.39 (that will force the redrawing of the text in the new color) 180 348.33 P
-0.39 (. The window handle) 433.66 348.33 P
(is cached in) 180 335.33 T
3 F
(winHan) 236.67 335.33 T
1 F
( for just this purpose; when the text color changes, we) 277.77 335.33 T
-0.47 (must invalidate the window so the) 180 322.33 P
1 9 Q
-0.43 (UI) 339.22 322.33 P
1 10 Q
-0.47 ( will redraw its contents. W) 350.22 322.33 P
-0.47 (e invalidate) 474.71 322.33 P
(the window by calling the special graphics routine) 180 309.33 T
3 F
(GrInvalRect\050\051) 414.47 309.33 T
1 F
(, passing) 486.51 309.33 T
-0.04 (the window\325) 180 296.33 P
-0.04 (s handle. W) 234.97 296.33 P
-0.04 (e get the window handle when the view \336rst creates) 288.79 296.33 P
-0.16 (the window\321it will send out a) 180 283.33 P
1 9 Q
-0.14 (MSG_MET) 322.6 283.33 P
-0.14 (A_CONTENT_VIEW_WIN_OPENED) 368.77 283.33 P
1 10 Q
-0.16 (.) 525.6 283.33 P
(When the window closes, the view will send) 180 270.33 T
1 9 Q
(MSG_MET) 180 257.33 T
(A_CONTENT_VIEW_WIN_CLOSED) 226.17 257.33 T
1 10 Q
( in which Hello W) 381.33 257.33 T
(orld destroys) 463.19 257.33 T
(the cached window handle.) 180 244.33 T
0 14 Q
(4.2.3) 130.86 202 T
0 18 Q
(Naming Conventions) 180 202 T
1 10 Q
(Y) 180 178.33 T
(ou might have noticed some of the names of variables, messages, and) 185.93 178.33 T
(routines and seen a pattern of naming. Geoworks has developed a few) 180 165.33 T
-0.51 (naming conventions for various different items in the system. Y) 180 152.33 P
-0.51 (ou don\325) 468.43 152.33 P
-0.51 (t have) 500.52 152.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "112" 6
%%Page: "113" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Hello World) 480.22 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(113) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.63 (to follow these conventions, of course; it may help, however) 180 641.33 P
-0.63 (, if you keep to our) 446.23 641.33 P
-0.27 (conventions until you\325re familiar with most of the system. Some of the items) 180 628.33 P
(that have special naming conventions are) 180 615.33 T
3 F
(V) 180 595.33 T
(ariables) 186.67 595.33 T
1 F
(T) 243 595.33 T
(ypically) 249.15 595.33 T
(, variables begin with a lower case letter and have) 283.97 595.33 T
(each subword in the name capitalized. The variable) 243 583.33 T
3 F
(helloT) 243 571.33 T
(extColor) 275.04 571.33 T
1 F
( is a good example. V) 319.86 571.33 T
(ariables with just one) 416 571.33 T
(word in the name are all lower case.) 243 559.33 T
3 F
(Classes) 180 540.33 T
1 F
(Class names should always have the suf\336x) 243 540.33 T
3 F
(Class) 443.22 540.33 T
1 F
(. T) 470.63 540.33 T
(ypically) 482.34 540.33 T
(,) 517.16 540.33 T
(the \336rst portion of a class\325 name will describe the particular) 243 528.33 T
-0.56 (application, library) 243 516.33 P
-0.56 (, or module it is associated with. The second) 330.05 516.33 P
(portion of the name should re\337ect the class\325 superclass. Each) 243 504.33 T
(portion of the class name should be capitalized. Thus,) 243 492.33 T
3 F
(HelloProcessClass) 243 480.33 T
1 F
( conforms because it begins with the) 338.19 480.33 T
(application\325) 243 468.33 T
(s name \050Hello\051, then has the superclass\325 name) 296.16 468.33 T
(\050Process\051, and \336nally has the suf\336x Class.) 243 456.33 T
3 F
(Constants) 180 437.33 T
1 F
(Constants are typically all upper case with underscores to) 243 437.33 T
-0.28 (delineate the portions of the name.) 243 425.33 P
1 9 Q
-0.25 (C_BLUE) 405.23 425.33 P
1 10 Q
-0.28 ( is a good example;) 442.56 425.33 P
-0.7 (it is a set value that does not change. The structure of the name) 243 413.33 P
(should re\337ect the use of the constant. \050In this case, the) 243 401.33 T
(enumerated type) 243 389.33 T
3 F
(Color) 324.3 389.33 T
1 F
( is re\337ected in the) 353.01 389.33 T
1 9 Q
(C_) 438.57 389.33 T
1 10 Q
( portion of the) 449.57 389.33 T
(constant\325) 243 377.33 T
(s name.\051) 284.3 377.33 T
3 F
(Routines) 180 358.33 T
1 F
-0.31 (Kernel and) 243 358.33 P
1 9 Q
-0.28 (UI) 296.83 358.33 P
1 10 Q
-0.31 ( routines, as well as method names, should have) 307.83 358.33 P
(each portion capitalized. They should begin with some) 243 346.33 T
(abbreviation relating to the module they belong to. For) 243 334.33 T
-0.15 (example,) 243 322.33 P
3 F
-0.15 (GrCreateState\050\051) 287.12 322.33 P
1 F
-0.15 ( is a graphics system routine, as is) 370.28 322.33 P
3 F
(GrInvalRect\050\051) 243 310.33 T
1 F
(.) 315.04 310.33 T
3 F
(Messages) 180 291.33 T
1 F
-0.14 (Message names should be all uppercase and begin with) 243 291.33 P
1 9 Q
-0.13 (MSG_) 499.91 291.33 P
1 10 Q
-0.14 (.) 525.58 291.33 P
(Each portion of the name should be separated with) 243 279.33 T
-0.54 (underscores, and the \336rst portion after) 243 267.33 P
1 9 Q
-0.49 (MSG_) 421.77 267.33 P
1 10 Q
-0.54 ( should re\337ect the) 447.43 267.33 P
(class in which the message is de\336ned. For example,) 243 255.33 T
1 9 Q
-0.47 (MSG_HELLO_CHANGE_TO_BLUE) 243 243.33 P
1 10 Q
-0.52 ( follows all these conventions.) 395.84 243.33 P
3 F
(Objects) 180 224.33 T
1 F
(Object names are typically capitalized in the same manner as) 243 224.33 T
-0.2 (routines and classes. The object\325) 243 212.33 P
-0.2 (s name should re\337ect both the) 390.17 212.33 P
(object\325) 243 200.33 T
(s module and its class \050or its function if not its class\051.) 271.52 200.33 T
(HelloV) 243 188.33 T
(iew is a good example.) 274.41 188.33 T
3 F
(Instance Data) 180 169.33 T
1 F
(Instance data \336elds typically have as their \336rst portion an) 243 157.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "113" 7
%%Page: "114" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(114) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(all-caps acronym for the class name with an) 243 641.33 T
1 9 Q
(I) 448.95 641.33 T
1 10 Q
( tacked on for) 452.61 641.33 T
-0.29 (\322instance.\323 The second portion is like a variable name, and the) 243 629.33 P
(two portions are separated by an underscore. For example,) 243 617.33 T
4 9 Q
(GI) 243 605.33 T
4 10 Q
(_visMoniker) 253.66 605.33 T
1 F
( is a \336eld of) 309.95 605.33 T
3 F
(GenClass) 365.52 605.33 T
1 F
( \050hence the) 413.85 605.33 T
4 9 Q
(GI_) 467.17 605.33 T
1 10 Q
(\051, and) 482.34 605.33 T
4 F
(visMoniker) 243 593.33 T
1 F
( is the variable name of the \336eld.) 294.28 593.33 T
0 14 Q
(4.3) 142.54 542 T
0 24 Q
(Geode Parameters File) 180 542 T
1 10 Q
-0.12 (Code Display) 180 516.33 P
-0.12 (4-) 243.79 516.33 P
-0.12 (1 shows the Geode Parameters \050) 252.68 516.33 P
3 F
-0.12 (hello3.gp) 400.64 516.33 P
1 F
-0.12 (\051 \336le for the Hello) 447.68 516.33 P
(W) 180 503.33 T
(orld sample application. Each of the components of the parameters \336le is) 189.26 503.33 T
(described in detail in the reference-style entries in the Routines book.) 180 490.33 T
81 457.98 531 470 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 457.98 531 470 R
7 X
0 0 0 1 0 0 0 K
V
76.5 465.23 617.5 468.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 451.31 T
(4-) 147.13 451.31 T
(1 The Hello W) 156.02 451.31 T
(orld Parameters File) 221.41 451.31 T
6 9 Q
(##############################################################################) 81 436.98 T
(#) 81 425.98 T
(#) 81 414.98 T
(Copyright \050c\051 GeoWorks 1991, 1993-- All Rights Reserved) 152 414.98 T
(#) 81 403.98 T
(# PROJECT:) 81 392.98 T
(GEOS V2.0) 168.98 392.98 T
(# MODULE:) 81 381.98 T
(Hello World \050Sample GEOS application\051) 168.98 381.98 T
(# FILE:) 81 370.98 T
(hello3.gp \050Hello World Application Geode Parameters File\051) 168.98 370.98 T
(#) 81 359.98 T
(# DESCRIPTION:) 81 348.98 T
(This file contains Geode definitions for the \322Hello World\323 sample) 168.98 348.98 T
(#) 81 337.98 T
(application. This file is read by the Glue linker to) 168.98 337.98 T
(#) 81 326.98 T
(build this application.) 168.98 326.98 T
(#) 81 315.98 T
(##############################################################################) 81 304.98 T
(#) 81 286.98 T
(#) 81 275.98 T
(Permanent name: This is required by Glue to set the permanent name) 125 275.98 T
(#) 81 264.98 T
(and extension of the geode. The permanent name of a library is what) 125 264.98 T
(#) 81 253.98 T
(goes in the imported library table of a client geode \050along with the) 125 253.98 T
(#) 81 242.98 T
(protocol number\051. It is also what Swat uses to name the patient.) 125 242.98 T
(#) 81 231.98 T
(name hello3.app) 81 220.98 T
(#) 81 202.98 T
(#) 81 191.98 T
(Long filename: This name can be displayed by GeoManager.) 125 191.98 T
(#) 81 180.98 T
(longname \322Hello World\323) 81 169.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "114" 8
%%Page: "115" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Geode Parameters File) 406.27 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(115) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(#) 81 642 T
(#) 81 631 T
(Specify geode type: This geode is an application, will have its own) 125 631 T
(#) 81 620 T
(process \050thread\051, and is not multi-launchable.) 125 620 T
(#) 81 609 T
(type) 81 598 T
(appl, process, single) 125 598 T
(#) 81 580 T
(#) 81 569 T
(Specify the class name of the application Process object: Messages) 125 569 T
(#) 81 558 T
(sent to the application\325s Process object will be handled by) 125 558 T
(#) 81 547 T
(HelloProcessClass, which is defined in hello3.goc.) 125 547 T
(#) 81 536 T
(class) 81 525 T
(HelloProcessClass) 125 525 T
(#) 81 507 T
(#) 81 496 T
(Specify the application object: This is the object in the) 125 496 T
(#) 81 485 T
(application\325s generic UI tree which serves as the top-level) 125 485 T
(#) 81 474 T
(UI object for the application. See hello3.goc.) 125 474 T
(#) 81 463 T
(appobj) 81 452 T
(HelloApp) 125 452 T
(#) 81 434 T
(#) 81 423 T
(Token: This four-letter name is used by GeoManager to locate the) 125 423 T
(#) 81 412 T
(icon for this application in the token database. The tokenid) 125 412 T
(#) 81 401 T
(number corresponds to the manufacturer ID of the program\325s author) 125 401 T
(#) 81 390 T
(for uniqueness of the token. Eight is Geoworks\325 manufacturer ID for) 125 390 T
(#) 81 379 T
(sample applications.) 125 379 T
(#) 81 368 T
(tokenchars \322HELO\323) 81 357 T
(tokenid 8) 81 346 T
(#) 81 328 T
(#) 81 317 T
(stack: This field designates the number of bytes to set aside for) 125 317 T
(#) 81 306 T
(the process\325 stack. \050The type of the geode must be process, above.\051) 125 306 T
(#) 81 295 T
(The default stack size is 2000 bytes.) 125 295 T
(#) 81 284 T
(stack 1500) 81 273 T
(#) 81 255 T
(# Heapspace: This is roughly the non-discardable memory usage \050in words\051) 81 244 T
(# of the application and any transient libraries that it depends on,) 81 233 T
(# plus an additional amount for thread activity. To find the heapspace) 81 222 T
(# for an application, use the Swat \322heapspace\323 command.) 81 211 T
(#) 81 200 T
(heapspace 3644) 81 189 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "115" 9
%%Page: "116" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(116) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(#) 81 642 T
(#) 81 631 T
(Resources: List all resource blocks which are used by the application.) 125 631 T
(#) 81 620 T
(\050Standard discardable code resources do not need to be mentioned.\051) 125 620 T
(#) 81 609 T
(resource APPRESOURCE ui-object) 81 598 T
(resource INTERFACE ui-object) 81 587 T
(resource MENURESOURCE ui-object) 81 576 T
(#) 81 558 T
(#) 81 547 T
(Libraries: List which libraries are used by the application.) 125 547 T
(#) 81 536 T
(library) 81 525 T
(geos) 125 525 T
(library) 81 514 T
(ui) 125 514 T
(#) 81 496 T
(#) 81 485 T
(User Notes: This field allows the geode to fill its usernotes field) 125 485 T
(#) 81 474 T
(\050available to the user through GeoManager\325s File/Get Info function\051) 125 474 T
(#) 81 463 T
(with meaningful text.) 125 463 T
(#) 81 452 T
(usernotes \322Sample application for GEOS version 2.0.\323) 81 441 T
81 416.98 531 429 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 416.98 531 429 R
7 X
0 0 0 1 0 0 0 K
V
76.5 424.23 617.5 427.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4) 142.54 366.98 T
0 24 Q
(The Source File and Source) 180 366.98 T
(Code) 180 338.98 T
1 10 Q
(The Hello W) 180 313.31 T
(orld program\325) 237.23 313.31 T
(s source code resides in a single \336le,) 299.45 313.31 T
3 F
(hello3.goc) 467.98 313.31 T
1 F
(.) 520.02 313.31 T
(Portions of this \336le are presented throughout this section.) 180 300.31 T
-0.09 (This sample application demonstrates the basics of all) 180 280.31 P
1 9 Q
-0.08 (GEOS) 432.49 280.31 P
1 10 Q
-0.09 ( programs, and) 458.67 280.31 P
(it\325) 180 267.31 T
(s likely you will refer to it often until you become pro\336cient with both the) 188.71 267.31 T
(system and the reference documentation. Among the concepts and) 180 254.31 T
(implementations it demonstrates are the following:) 180 241.31 T
2 F
(u) 180 221.31 T
1 F
(Declaration and use of resources) 198 221.31 T
2 F
(u) 180 202.31 T
1 F
(Standard inclusion \336les) 198 202.31 T
2 F
(u) 180 183.31 T
1 F
(Basic) 198 183.31 T
1 9 Q
(UI) 225.78 183.31 T
1 10 Q
( construction) 236.78 183.31 T
2 F
(u) 180 164.31 T
1 F
(Creation of the Primary window) 198 164.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "116" 10
%%Page: "117" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(117) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(Creation of a scrolling view and drawing to the view) 198 641.33 T
2 F
(u) 180 622.33 T
1 F
(Creation of a menu) 198 622.33 T
2 F
(u) 180 603.33 T
1 F
(Creation of a simple dialog box) 198 603.33 T
2 F
(u) 180 584.33 T
1 F
(Declaration of subclasses and messages) 198 584.33 T
2 F
(u) 180 565.33 T
1 F
(De\336nition of message handlers) 198 565.33 T
2 F
(u) 180 546.33 T
1 F
(Sending messages to another object) 198 546.33 T
(This discussion assumes you have a solid understanding of general) 180 527.33 T
(programming concepts and) 180 514.33 T
1 9 Q
(C) 307.96 514.33 T
1 10 Q
( constructions. If you don\325) 314.46 514.33 T
(t, you should most) 432.79 514.33 T
(likely get to know the) 180 501.33 T
1 9 Q
(C) 282.62 501.33 T
1 10 Q
( programming language before continuing.) 289.12 501.33 T
0 14 Q
(4.4.1) 130.86 459 T
0 18 Q
(Inclusions and Global V) 180 459 T
(ariables) 383.08 459 T
1 10 Q
-0.16 (As Code Display) 180 435.33 P
-0.16 (4-) 258.2 435.33 P
-0.16 (2 shows, the \336rst thing in a) 267.09 435.33 P
3 F
-0.17 (.goc) 395.42 435.33 P
1 F
-0.16 ( \336le is a list of other \336les) 415.98 435.33 P
-0.19 (and libraries that must be included. These are designated in the standard) 180 422.33 P
1 9 Q
-0.17 (C) 521.91 422.33 P
1 10 Q
(protocol, with one exception \050described below\051. All the inclusions and) 180 409.33 T
-0.22 (libraries a basic application will need are shown in the sample, and only the) 180 396.33 P
(following inclusions is required of every) 180 383.33 T
1 9 Q
(GEOS) 365.93 383.33 T
1 10 Q
( application:) 392.1 383.33 T
6 F
(@include <stdapp.goh>) 216 367.33 T
1 F
(Other inclusions may be required for more complex applications and) 180 346.33 T
(libraries, and these inclusions will be listed in the topics that require them.) 180 333.33 T
(Goc accepts both the standard) 180 320.33 T
1 9 Q
(C) 322.05 320.33 T
3 10 Q
(#include) 331.33 320.33 T
1 F
( for) 375.96 320.33 T
3 F
(.h) 394.29 320.33 T
1 F
( \336les and the) 403.92 320.33 T
1 9 Q
(GEOS) 466.34 320.33 T
3 10 Q
-0.49 (@include) 180 307.33 P
1 F
-0.48 ( for) 226.36 307.33 P
3 F
-0.49 (.goh) 243.73 307.33 P
1 F
-0.48 ( \336les. The difference between them is that) 265.58 307.33 P
3 F
-0.49 (.h) 458.45 307.33 P
1 F
-0.48 ( \336les may not) 468.08 307.33 P
(include Goc constructs \050e.g.) 180 294.33 T
3 F
(@object) 308.88 294.33 T
1 F
(\051 whereas) 348.02 294.33 T
3 F
(.goh) 395.43 294.33 T
1 F
( \336les can.) 417.28 294.33 T
-0.03 (After the inclusions are listed, you should declare any global variables used) 180 274.33 P
(throughout your application. Be aware that global variables, though) 180 261.33 T
-0.51 (accessible by any object, are owned by the application\325) 180 248.33 P
-0.51 (s Process object and by) 425.03 248.33 P
(the application\325) 180 235.33 T
(s primary thread. Objects running in other threads \050such as) 250.94 235.33 T
1 9 Q
-0.21 (UI) 180 222.33 P
1 10 Q
-0.23 ( objects\051 should not access these global variables directly because this can) 191 222.33 P
(cause synchronization problems between threads.) 180 209.33 T
-0.59 (Whenever possible, you should avoid using too many global variables. Global) 180 189.33 P
-0.73 (variables are typically put in a \336xed-block resource, and having too many can) 180 176.33 P
(bog down a low-memory machine.) 180 163.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "117" 11
%%Page: "118" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(118) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The Hello W) 180 641.33 T
(orld application uses only two global variables. The \336rst,) 237.23 641.33 T
3 F
-0.22 (helloT) 180 628.33 P
-0.22 (extColor) 212.04 628.33 P
1 F
-0.22 (, holds the value of the currently-displayed text color and is) 256.12 628.33 P
(initialized to the value) 180 615.33 T
1 9 Q
(C_BLUE) 287.06 615.33 T
1 10 Q
( \050dark blue\051. The second,) 324.39 615.33 T
3 F
(winHan) 440.7 615.33 T
1 F
(, contains) 481.8 615.33 T
(the window handle of the scrollable view into which we draw our text. How) 180 602.33 T
(these variables are used will be shown later) 180 589.33 T
(.) 381.71 589.33 T
81 556.98 531 569 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 556.98 531 569 R
7 X
0 0 0 1 0 0 0 K
V
76.5 564.23 617.5 567.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 550.31 T
(4-) 147.13 550.31 T
(2 Inclusion Files and Global V) 156.02 550.31 T
(ariables) 297.19 550.31 T
4 F
(This is the \336rst portion of the hello3.goc \336le.) 81 535.31 T
6 9 Q
(/***********************************************************************) 81 521.98 T
( *) 81 510.98 T
(Copyright \050c\051 GeoWorks 1991, 1993-- All Rights Reserved) 152 510.98 T
( *) 81 499.98 T
( * PROJECT:) 81 488.98 T
(GEOS) 168.98 488.98 T
( * MODULE:) 81 477.98 T
(Hello World \050Sample GEOS application\051) 168.98 477.98 T
( * FILE:) 81 466.98 T
(hello3.goc \050Code file for Hello World Sample Application\051) 168.98 466.98 T
( *) 81 455.98 T
( * DESCRIPTION:) 81 444.98 T
( *) 81 433.98 T
(This file contains the source code for the Hello World application.) 125 433.98 T
( *) 81 422.98 T
(This code will be processed by the goc C preprocessor and then) 125 422.98 T
( *) 81 411.98 T
(compiled by a C compiler. After compilation, it will be linked) 125 411.98 T
( *) 81 400.98 T
(by the Glue linker to produce a runnable .geo application file.) 125 400.98 T
( *) 81 389.98 T
( ***********************************************************************/) 81 378.98 T
(/***************************************************************************) 81 360.98 T
( * Include files) 81 349.98 T
( *) 81 338.98 T
(These files are the standard inclusion files to use the basics of) 125 338.98 T
( *) 81 327.98 T
(the GEOS system and libraries. All applications should include) 125 327.98 T
( *) 81 316.98 T
(at least the following files. Note that all inclusion files) 125 316.98 T
( *) 81 305.98 T
(have the suffix .h or .goh indicating they are header files.) 125 305.98 T
( ***************************************************************************/) 81 294.98 T
(@include <stdapp.goh>) 81 276.98 T
(/* Standard GEOS inclusion file */) 256.5 276.98 T
(/***********************************************************************) 81 258.98 T
( * Global Variables) 81 247.98 T
( ***********************************************************************/) 81 236.98 T
(word) 81 218.98 T
(helloTextColor = C_BLUE;) 168.98 218.98 T
(WindowHandle) 81 207.98 T
(winHan;) 168.98 207.98 T
81 183.95 531 195.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 183.95 531 195.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 191.2 617.5 194.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "118" 12
%%Page: "119" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(119) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(4.4.2) 130.86 636 T
0 18 Q
(The Process Object) 180 636 T
1 10 Q
-0.51 (Every) 180 612.33 P
1 9 Q
-0.46 (GEOS) 209.66 612.33 P
1 10 Q
-0.51 ( application has an object called the Process object. This object is) 235.84 612.33 P
(run by the application\325) 180 599.33 T
(s primary thread and is an instance of a subclass of) 284.09 599.33 T
3 F
-0.9 (GenProcessClass) 180 586.33 P
1 F
-0.87 (. Because the Process is an event-driven object, there is no) 268.52 586.33 P
3 F
-0.25 (main\050\051) 180 573.33 P
1 F
-0.24 ( routine that is executed when the program is launched. Instead, the) 214.07 573.33 P
(object will wait until it receives messages \050events\051, at which time it will) 180 560.33 T
(execute the proper methods.) 180 547.33 T
(Applications can be of two basic models: The procedural model puts the) 180 527.33 T
(entire functionality of the application within the Process object, not using) 180 514.33 T
(any other objects in the application\325) 180 501.33 T
(s thread \050) 344.28 501.33 T
1 9 Q
(UI) 388.54 501.33 T
1 10 Q
( objects are run by the) 399.54 501.33 T
1 9 Q
(UI) 505.29 501.33 T
1 10 Q
(thread\051. All messages sent to the application are handled by the Process) 180 488.33 T
-0.69 (object, and most) 180 475.33 P
1 9 Q
-0.62 (OOP) 255.71 475.33 P
1 10 Q
-0.69 ( issues can be avoided. The object-oriented model allows) 275.72 475.33 P
-0.12 (for other objects to be run by the application\325) 180 462.33 P
-0.12 (s primary thread; each of these) 385.2 462.33 P
(objects will have its own instance data and be located in an object block \050a) 180 449.33 T
(resource\051 associated with its own message queue.) 180 436.33 T
-0.3 (There is no command or directive that determines which model is used\321the) 180 416.33 P
-0.05 (distinction is inherent within the format of message handlers and therefore) 180 403.33 P
(can be virtually ignored. Hello W) 180 390.33 T
(orld, for example, is simple enough to use) 332.24 390.33 T
(the procedural model, handling all functionality with the Process object.) 180 377.33 T
(The Process object of Hello W) 180 357.33 T
(orld is shown in Code Display) 315.56 357.33 T
(4-) 455.58 357.33 T
(3.) 464.47 357.33 T
81 324.98 531 337 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 324.98 531 337 R
7 X
0 0 0 1 0 0 0 K
V
76.5 332.23 617.5 335.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 318.31 T
(4-) 147.13 318.31 T
(3 Hello W) 156.02 318.31 T
(orld\325) 200.85 318.31 T
(s Process Object) 222.15 318.31 T
4 F
(This code display is part of hello3.goc and follows the previous display directly) 81 303.31 T
(. */) 440.35 303.31 T
6 9 Q
(/***********************************************************************) 81 289.98 T
( *) 81 278.98 T
(Class & Method Definitions) 212.5 278.98 T
( * This section contains the definition of the application\325s Process) 81 267.98 T
( * class and its methods. Other classes can also be defined here,) 81 256.98 T
( * along with the message each handles.) 81 245.98 T
( ***********************************************************************/) 81 234.98 T
(/*) 81 216.98 T
( * Here we define \322HelloProcessClass\323 as a subclass of the system-provided) 81 205.98 T
( * \322GenProcessClass\323. As this application is launched, an instance of this class) 81 194.98 T
( * will be created automatically to handle application-related events \050messages\051.) 81 183.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "119" 13
%%Page: "120" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(120) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
( * The application thread will be responsible for running this object,) 81 642 T
( * meaning that whenever this object handles a message, it will be executing) 81 631 T
( * in the application\325s thread.) 81 620 T
( */) 81 609 T
(/* You will find no object in this file declared to be of this class. Instead,) 81 591 T
( * this class is bound to the application thread in hello3.gp.) 81 580 T
(@class HelloProcessClass, GenProcessClass;) 81 562 T
(/* The messages HelloProcessClass objects can handle that are not) 81 544 T
( * system-defined are enumerated here. Each of these messages is sent) 81 533 T
( * by one of the triggers in the dialog box. This is where class-) 81 522 T
( * specific messages for this application \050not system-defined messages\051) 81 511 T
( * are defined. */) 81 500 T
(@message void MSG_HELLO_CHANGE_TO_BLUE\050\051; /* sent by Blue trigger */) 81 482 T
(@message void MSG_HELLO_CHANGE_TO_GOLD\050\051; /* sent by Gold trigger */) 81 471 T
(@message void MSG_HELLO_REDRAW_DOCUMENT\050\051; /* sent by Process to itself */) 81 460 T
(@endc /* signifies end of class definition */) 81 442 T
(/* Because this class definition must be stored in memory at runtime,) 81 424 T
( * we must declare it here along with a flag indicating how it should) 81 413 T
( * be loaded. The \322neverSaved\323 flag is used because Process classes) 81 402 T
( * are never saved to state files and therefore no relocation tables) 81 391 T
( * need be built. */) 81 380 T
(@classdecl HelloProcessClass, neverSaved;) 81 369 T
81 344.98 531 357 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.98 531 357 R
7 X
0 0 0 1 0 0 0 K
V
76.5 352.23 617.5 355.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.3) 130.86 304.98 T
0 18 Q
(UI Objects) 180 304.98 T
1 10 Q
(As stated earlier) 180 281.31 T
(, the bulk of the Hello W) 256.12 281.31 T
(orld application consists of User) 368.55 281.31 T
(Interface objects. These objects are de\336ned just after the Process object in) 180 268.31 T
(your application\325) 180 255.31 T
(s code, and they are given certain attributes and instance) 256.86 255.31 T
(data. Once they have been de\336ned, in general you will not have to bother) 180 242.31 T
(with them again.) 180 229.31 T
1 9 Q
(UI) 180 209.31 T
1 10 Q
( objects are organized into a hierarchy) 191 209.31 T
(. The hierarchy for Hello W) 366.56 209.31 T
(orld is) 492.3 209.31 T
-0.04 (shown in Figure) 180 196.31 P
-0.04 (4-) 257.88 196.31 P
-0.04 (3, and the objects required for all applications are boxed.) 266.77 196.31 P
1 9 Q
-0.63 (UI) 180 183.31 P
1 10 Q
-0.7 ( objects are also arranged into resources. Each resource is allocated a block) 191 183.31 P
-0.86 (on the global heap when the program is launched; therefore, resources should) 180 170.31 P
(be kept to reasonable sizes whenever possible.) 180 157.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "120" 14
%%Page: "121" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(121) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The application object resides within its own resource so the application) 180 641.33 T
-0.01 (takes up very little memory when iconi\336ed \050minimized\051. Menus for complex) 180 628.33 P
(applications are usually put in a menu resource. Most other) 180 615.33 T
1 9 Q
(UI) 458.91 615.33 T
1 10 Q
( gadgetry is) 469.91 615.33 T
(put in a resource called \322Interface\323 \050though this name is not required\051.) 180 602.33 T
0 14 Q
(4.4.3.1) 119.19 568.67 T
(The Application Object) 180 568.67 T
1 10 Q
(Every application must have an application object, an instance of the class) 180 546.33 T
3 F
(GenApplicationClass) 180 533.33 T
1 F
(. The application object handles and manages many) 289.07 533.33 T
(application-related things such as dispatching input sent by the input) 180 520.33 T
(manager to the application. The application object must be the top-level) 180 507.33 T
-0.41 (generic object in every application. The name of the application object is also) 180 494.33 P
(stated in the geode parameters \336le line) 180 481.33 T
3 F
(appobj) 363.36 481.33 T
1 F
( \050see Code Display) 398.92 481.33 T
(4-) 486.34 481.33 T
(1 on) 495.23 481.33 T
(page) 180 468.33 T
2 F
(l) 204.45 468.33 T
1 F
(1) 215.14 468.33 T
(14\051.) 220.15 468.33 T
(Code Display) 180 448.33 T
(4-) 243.9 448.33 T
(4 shows Hello W) 252.79 448.33 T
(orld\325) 328.73 448.33 T
(s application object de\336nition. The) 348.73 448.33 T
(comments in the code are extensive and explain the purpose of each line.) 180 435.33 T
81 144 531 648 C
180 144 531 424.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 424.47 R
7 X
0 0 0 1 0 0 0 K
V
308.4 342.19 427.27 419.41 R
0.5 H
0 Z
4 X
N
418.47 304.08 496.16 323.04 9.48 RR
0 X
V
N
196.47 211.09 274.16 229.14 9.02 RR
V
N
284.82 211.09 362.51 229.14 9.02 RR
V
N
240.94 255.36 318.63 273.4 9.02 RR
V
N
328.56 350.22 409.94 369.18 9.48 RR
V
N
324.47 395.19 412.88 414.15 9.48 RR
V
N
180 145.84 531 196.83 R
7 X
V
0 10 Q
0 X
(Figure) 180 190.17 T
(4-) 213.34 190.17 T
(3) 222.23 190.17 T
4 F
(Generic T) 230.57 190.17 T
(ree of Hello W) 274.29 190.17 T
(orld) 337.23 190.17 T
(Seven objects make up the generic tree of the Hello W) 180 176.17 T
(orld application. Those) 420.51 176.17 T
(outlined by the box are required of all applications; the others are speci\336c to) 180 164.17 T
(Hello W) 180 152.17 T
(orld.) 215.73 152.17 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
323.34 396.38 411.75 415.35 9.48 RR
7 X
V
0 X
N
4 9 Q
(HelloApp) 348.22 402.37 T
417.62 304.68 495.31 323.64 9.48 RR
7 X
V
0 X
N
(HelloV) 435.59 310.66 T
(iew) 463.35 310.66 T
326.29 351.42 407.67 370.38 9.48 RR
7 X
V
0 X
N
(HelloPrimary) 338.65 357.4 T
239.82 256.21 317.5 274.26 9.02 RR
7 X
V
0 X
N
(HelloColorBox) 248.67 261.79 T
195.94 211.64 273.63 229.69 9.02 RR
7 X
V
0 X
N
(HelloBlueT) 199.29 217.22 T
(rigger) 245.63 217.22 T
283.97 211.67 361.66 229.71 9.02 RR
7 X
V
0 X
N
(HelloGoldT) 286.82 217.25 T
(rigger) 334.17 217.25 T
241.41 229.71 278.66 255.36 2 L
7 X
V
2 Z
0 X
N
315.9 229.71 278.66 255.36 2 L
7 X
V
0 X
N
240.8 304.08 318.49 323.04 9.48 RR
V
0 Z
N
239.96 304.68 317.64 323.64 9.48 RR
7 X
V
0 X
N
(HelloMenu) 256.06 310.66 T
368.11 395.32 368.11 370.58 2 L
7 X
V
2 Z
0 X
N
368.11 350.22 293.11 323.64 2 L
7 X
V
0 X
N
368.11 350.22 443.11 323.64 2 L
7 X
V
0 X
N
279.22 304.13 279.22 274.8 2 L
7 X
V
0 X
N
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "121" 15
%%Page: "122" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(122) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(4-) 147.13 629.31 T
(4 Hello W) 156.02 629.31 T
(orld\325) 200.85 629.31 T
(s Application Object) 222.15 629.31 T
4 F
(This display is part of hello3.goc and follows the previous display directly) 81 614.31 T
(.) 417.58 614.31 T
6 9 Q
(/*) 81 600.98 T
( *) 81 589.98 T
(Application Object) 212.5 589.98 T
( * The very top-level generic object of an application MUST be a GenApplication) 81 578.98 T
( * object. The hello3.gp file contains an \322appobj\323 statement which indicates) 81 567.98 T
( * that this \322HelloApp\323 object is in fact the top-level UI object.) 81 556.98 T
( * This object should be in its own resource so it takes up very little memory) 81 545.98 T
( * when minimized. Note that the name of the resource may be whatever you choose;) 81 534.98 T
( * it does not have to be AppResource.) 81 523.98 T
( */) 81 512.98 T
(@start) 81 494.98 T
(AppResource;) 125 494.98 T
(/* Begin definition of objects in AppResource. */) 256.5 494.98 T
(@object GenApplicationClass HelloApp = {) 81 476.98 T
(GI_comp = @HelloPrimary;) 102.6 465.98 T
(/* The GI_comp attribute lists the generic children) 212.5 454.98 T
( * of the object. The HelloApp object has just one) 212.5 443.98 T
( * child, the primary window of the application. */) 212.5 432.98 T
(gcnList\050MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS\051 = @HelloPrimary;) 102.6 414.98 T
(/* This GCN list determines which of the application\325s) 212.5 403.98 T
( * window objects must be made visible when the) 212.5 392.98 T
( * application first starts up. */) 212.5 381.98 T
(}) 81 370.98 T
(@end) 81 352.98 T
(AppResource) 125 352.98 T
(/* End definition of objects in AppResource. */) 256.5 352.98 T
81 328.95 531 340.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.95 531 340.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 336.2 617.5 339.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.3.2) 119.19 297.62 T
(The Primary W) 180 297.62 T
(indow and the V) 277.9 297.62 T
(iew W) 385 297.62 T
(indow) 424.55 297.62 T
1 10 Q
(Every application must have a primary window object of class) 180 275.28 T
3 F
-0.17 (GenPrimaryClass) 180 262.28 P
1 F
-0.16 (. This object will draw and manage the primary window) 271.85 262.28 P
(and will work with the) 180 249.28 T
1 9 Q
(UI) 287.62 249.28 T
1 10 Q
( and the geometry manager to arrange all the) 298.62 249.28 T
(children of the window properly) 180 236.28 T
(. It will also automatically put up the) 325.92 236.28 T
(system-controlled gadgets \050such as the system window menu, the) 180 223.29 T
(minimize/maximize buttons, and the Express menu\051.) 180 210.29 T
(The Hello W) 180 190.29 T
(orld primary window has only two children, one of which is a) 237.23 190.29 T
(menu. The other is the view object, which occupies the remaining space) 180 177.29 T
-0.4 (within the primary) 180 164.29 P
-0.4 (. The view object, as stated earlier) 266.42 164.29 P
-0.4 (, automatically handles) 421.07 164.29 P
-0.29 (all scrolling and clipping of documents. Its scrollable area is eight and a half) 180 151.29 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "122" 16
%%Page: "123" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(123) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.63 (inches by eleven inches. A description of what the view window does and how) 180 641.33 P
-0.46 (it interacts with the Process object to draw the text is given in section 4.2.2.2) 180 628.33 P
(on page 1) 180 615.33 T
(1) 223.35 615.33 T
(1.) 228.36 615.33 T
(Code Display) 180 595.33 T
(4-) 243.9 595.33 T
(5 shows the de\336nition and attributes of each of these two) 252.79 595.33 T
(objects. See Figure) 180 582.33 T
(4-) 269.64 582.33 T
(4 for a diagram of the two objects implemented under) 278.53 582.33 T
(the) 180 569.33 T
1 9 Q
(OSF/) 197.78 569.33 T
1 10 Q
(Motif speci\336cation.) 218.96 569.33 T
81 536.98 531 549 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 536.98 531 549 R
7 X
0 0 0 1 0 0 0 K
V
76.5 544.23 617.5 547.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 530.31 T
(4-) 147.13 530.31 T
(5 Hello W) 156.02 530.31 T
(orld\325) 200.85 530.31 T
(s Primary and V) 222.15 530.31 T
(iew Objects) 297.56 530.31 T
4 F
(This display is part of hello3.goc and directly follows the previous display) 81 515.31 T
(.) 417.58 515.31 T
6 9 Q
(@start) 81 501.98 T
(Interface;) 125 501.98 T
(/* This resource is for miscellaneous UI objects. */) 212.5 501.98 T
(@object GenPrimaryClass HelloPrimary = {) 81 483.98 T
(GI_visMoniker = \322Hello World Sample Application\323;) 102.6 472.98 T
(/* This title will appear at the top of the primary) 212.5 461.98 T
( * window as the name of the application. */) 212.5 450.98 T
(GI_comp = @HelloView, @HelloMenu;) 102.6 432.98 T
(/* This window has two children, the GenView object) 212.5 421.98 T
( * and the GenInteraction menu object. */) 212.5 410.98 T
81 144 531 648 C
180 144 531 395.67 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 395.67 R
7 X
0 0 0 1 0 0 0 K
V
182.5 140.82 531 205.99 R
V
0 10 Q
0 X
(Figure) 182.5 199.33 T
(4-) 215.84 199.33 T
(4) 224.73 199.33 T
4 F
(Hello Primary and V) 233.07 199.33 T
(iew W) 328.73 199.33 T
(indows) 355.58 199.33 T
-0.08 (The Primary window groups other) 182.5 185.33 P
4 9 Q
-0.07 (UI) 342.63 185.33 P
4 10 Q
-0.08 ( objects and automatically is given the) 353.62 185.33 P
-0.83 (system window menu, the Express menu, and the maximize button. The menu) 182.5 173.33 P
(bar is also created automatically) 182.5 161.33 T
(. The V) 331.91 161.33 T
(iew object is automatically given) 364.07 161.33 T
(scrollers and a window for painting by the application.) 182.5 149.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  14182    
538 319 228.83 139.83 0 182 223.17
/red <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFFFFFF55555555AAAAAAAA00000000
> store
/green <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFF5555FFFF5555AA550000AAAA0000
> store
/blue <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FF55FF55FF55FF55AA00AA00AA00AA00
> store
 BEGINBITMAPCOLORc
z"
Y?F0F77z#z#z
>F8F7F0X,F8F7F0>F8


;z"
Y5F7F0<z"z"z"z
9F0F79F0F7WAF0F79F0=z8z8z8z
8F88F8W@F78F8Jz"
Y$0F0FFJrJz
O"F4WJ/F8J"<"J#8#>&C&J#C%F&F#8#
O!F4FFQ2F0F0F0F0F0F0F7F0F0F0F0F0F0F0;F0F0F0F0F0F0F0F0F7F0F0F0F0F0F0JU"P"J(J'H#J#
FF4F8R#F0F0F7F7F7F0F0HF0F0F7F7F0F0F7F74F7F7Js)J%?%A#8%8t8&<%C&8&;#8%9%8"8%8%8&
FF8F4F4FFF8F8F8F8F8Q;F0F0F0F0F0F0F0F0F7F7F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F7F0F0F0F0F0F0F0F0F0F0F0Az"H"8%J#9'=';'8'9#8%9%:'D%9%=08":'9%
/F0FFF4F4F4F4FFQ7F0F0F0F0F7F7F0F0F0F0F7F7F0F0F7F0F0F0F0F0F0F0F7F7F0F0F7F7F7F7F0F0F7F7F0F0F0F0F7F7F0F0F7F7F0F0F7F7F0F0F0F0F7F7F0F0F7F0F0F7F7F0F0F7F7F7F0F0F7F7F0F0F7F7F0F0By@V9#J#;#J,J#?#J(
F8FFF8Q7F7F7F0F05F7F7F7F7F0F0F7F7F0F0F0:F0F0F0F0;F7F7F7F7F0F0F0AZ@s(J%J%J%=#J%
/F8F4F4F4FFFFFFF8Q?F7F7F7F7:F0F0F7F7:F7F7F7F7F7F7>F0F0F7F7AzF"8%J#H#J#J#
0F8F4FFF8F8F8QBF0F0F0F0FF0F0DF0F0JWr"J'=';-F%:'D%9%=,:$:'
AF4FFQ;F7F0F0F0F0F7F7F0F0F0F0F7F7F0F0F0F0F0F7F7F7F0F0F0F0F0F0F7F7F0F0F0F0F7F0F0F0F7F0F0F0F7F7F0F0F0F0F7F7F7F0F0F0F7F0F0F7F0F0F0F0F7Jt$<#J#8#8%8&8%=&9s8#8#9$8#8%<#8#9$:$8&8%9&9&8%8#8#JZ
AF8F4F4F4FFF8Q4F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7Q50JT"Jz
JF8WL1F8JtJ#J#;#
JF8RAF7F7:F7F7F7F7<zJz
O'F7WA9F77%J&
F7F7F7F7Y5F7F7F7F7F77&z'
F0F0F0F0F7Y3F0F7F0F0F0F0F07%8z8%
F8F8F8F8Y2F8F8F8F8F8


C#;#
FFFFFFFFE"9"
FFFFF$;%8P8#8#
FFF8FFFFFFFFFFFFFFFFFFE&9'9%
F8FFFFFFF8FFFFF8F8FFFFF8F8FFFFF$<#
F8FFF8FFFFG"=%
F8F8F8F8F8J#
;FFFFJ'>%
7F8FFFFFFFFF8F8FFFFFFC#;#8%8#8#8&
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8CU
Cu
F8
<z
Y3F7<z
Y4F8


@Z:y
XHF7Az=-
XFF0F8F7F8F7F8F7F8F7F8F7F8F0J-
Y)F8F7F8F7F8F0F7F7F8F7F8F7J&8&
Y)F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F0F8F8F7F8F7F8F7J%:%
Y)F7F8F7F8F7F8F7F8J&8&
Y)F8F7F8F0F8F8F7F7F8F7J$<$
Y)F7F8F7F8F7F8J%:%
Y)F8F7F0F8F8F7F8F7J#>#
Y)F7F8F7F8J$<$
Y)F8F0F8F8F7F7J"@"
Y)F7F8J#>#
Y)F0F8F8F7Ju
Y*F7J,
Y)F8F7F8F7F8F7F8F7F8F7F8Jv
Y)F0Ju
Y*F8
































































Jv
Y)F7J,
Y*F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J#J-
P7FEFEV>F8F7F8F7F8F7F8F7F8F7F8F7Jw9w>tJ$JzJu;#A%Cu<"<zFtJ'<"B$J-
JFEFEFE:FEFEFEQB0FE7FEFEFEFEFEFEFEFEFE9FEFE6FEFEFEFEFEFEFEFEFEFE5F7F8F7F8F7F8F7F8F7F8F7F8J$J$H#@&F"@$@'J"B$?$G#<$8"B"9"J-
P1FEFEFER'FEFEFEFEFEFEFEFEFEFEF0FEFEFEFEFEFEFEFEFE@FEFEFEFEFEFEFEFEFEFEFEFEFEFEFE4F8F7F8F7F8F7F8F7F8F7F8F7J#=$9#=$>$:#J$J$<':$C#:'I"C";rD$<xE":r:"E":&8#J-
JF0F0F0F0F0F0F0F0F0F0F0F0F0F0F07F0F0F0QEF0F0F0F0F0F0F0F0F0FEFEFEFEFEF0F0F0F0F0F0FEFEF0F0F0F0F0FEF0FEFEF0F0F0F0F0FEFEFF7F8F7F8F7F8F7F8F7F8F7F8J"D"J"J"J"A#;"@#:#<$J#:#=#E"H"B#9#=#9#B"9#;#J-
LF0F07F0<F0QGF0F0F0FEFEFEF0F0F0F0F0<FEFEF0F0F0F0F0F0FEFEF0F0F0F0FEFEFEF0F0F0F0HF8F7F8F7F8F7F8F7F8F7F8F7J"J"J";">":#A"H"=";"A#J":"A":"D"?"9"J-
O.F0QLFEO.F0FEFEF0F0F0F0FEF0F0F0LFEF0F0FEF0F0FECF7F8F7F8F7F8F7F8F7F8F7F8J"J"E"J"B":"D"J";"D"J"?":"C":"?"D"J-
MF04FEF0RFF0FEF0F08FEF0F0@F0FEF0F0FEFEF0FF8F7F8F7F8F7F8F7F8F7F8F7J"?"G"J"J":"J"E"F"J"E"J-
O%FEF0FEQ8FEO1F0FEHFEF0F0MF0F0O5F7F8F7F8F7F8F7F8F7F8F7F8J"J"J":"F"J":"J"J"J"J-
O F0R*FEO=FEF0F06FEF0O,FE9FE8F0EF8F7F8F7F8F7F8F7F8F7F8F7J"D"C"J"H"D"J$J#;":"G"F"J"9"J-
O&FEFEF0S)F0F0F0>F0FEFE=F0F0FEF0F0FE8F0F04F7F8F7F8F7F8F7F8F7F8F7F8J"D"E"J"J"J"J":"J"J-
O!F0F0FEP"FEO4FEO=FELFEF0OHFEO/F8F7F8F7F8F7F8F7F8F7F8F7J"A"J#J"J"?"J#J"J"A#J-
O6FEF0OLFEFEO4FEP)F0FECF0F0;FEO#FEF0F0CF7F8F7F8F7F8F7F8F7F8F7F8J">"JrJ'ErA#>&='ErI";&@rJ"J"J":"I"A";#J-
O'FEFE?FE=FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEO(F05F0OCFEF0F0F0FEFEO F8F7F8F7F8F7F8F7F8F7F8F7J"J"D#=#J#<#@$=#=#>#;":#<"B#=#F"H$=#J":"9"J";":"J"J"D"J-
O"F0<FEFEFEFEFE9FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFEF0FEFF0FEF0O#FEFFEFEMF7F8F7F8F7F8F7F8F7F8F7F8J"<"="?"@#8&:"J#8%:">"9&:#:">(9"8':"?#8&:"E$:&<"9&:#J"J"=#J-
O(FEFEFEF0FEFEF0F0F0F0F0FE6FEFEF0F0F0F0FEFEF0F0F0F0F0FEFEFEFEFEF0F0F0F0F0FEFEFEF0F0F0F0FEFEFEF0F0F0F0F0FEF0F0F0F0F0F0F0F0FEF0F0F0F0F0FEFEQ&FEO!F0FEFEKF8F7F8F7F8F7F8F7F8F7F8F7J"D"A"B"8#;":"J"9":"A"8#;#:"9$;$@$:":"="8#;":"J"8#;#:"J":"J"JvJ">#J-
O#F0F0FEFEF0F0F0FE4FEF0F0FEF0F0F0F0FEF0F0F0FEFEF0FEF0F0F0FEFEF0F0F0FE?FEF0F0F0F0FEBFEF0GFEO&FEO#F0FEFEIF7F8F7F8F7F8F7F8F7F8F7F8J"<"J"J"9"@";"8"?":";";"<"9">"J"J"8"?":"J#:"JwJ"?"J-
O1F0FE=F07FEF0FEFEF0F0FEF0F0F0FEF06F0BFEF0F0FE?FEFEF0O8FEO:F0FEHF8F7F8F7F8F7F8F7F8F7F8F7J":":"B"?"8"C"J"F"J"B"H"8"C"J"Jr;"J"JvJ#>#J-
O)FEFEF0F0FEF0FE5F0FE=F0F0FEF0FE<FEKFEF0LF0O#F0O%F0F0FEFEFF7F8F7F8F7F8F7F8F7F8F7F8J"J"9"EuJ"A"A"A"JuJ"A"J#J$=#J"J#>"J-
O$F04FEFEFE6FEF0F0F0O#FEDF0F0FF0F0O:F0F0F0F0F06F0O&F0F0FEEF8F7F8F7F8F7F8F7F8F7F8F7J";"J"J"F"J"J"J"J"JuJ"J";"J"J#="B$J-
O*FEF08FEFF0FE4FEHFEMFE4FE7F0KFEAF0F09F0O'F0F0FEF0FEF05F7F8F7F8F7F8F7F8F7F8F7F8J"="<"@"CzF"C%J"JzJ"J"="J-
O%F0FEF0F0/F0FEF0F0F0F04F0O"/F0LF0R2F0FECF8F7F8F7F8F7F8F7F8F7F8F7J"@$J"J#J-
O/F0FEF0FET!F0P;F0F0IF7F8F7F8F7F8F7F8F7F8F7F8J#>">"J"J"J"="J"I";"J-
O+FEFEF0F0S-FELFEO$F0F0=F0F0FEBF8F7F8F7F8F7F8F7F8F7F8F7J"J"J"J"A"J"I"@"J-
O&F04FES+F0@FEF0O6FEFEFEO(F7F8F7F8F7F8F7F8F7F8F7F8J"="J"J"J"J"C"F"J-
O.F0F06FEP9FEQ#F0P1FEF0F06F8F7F8F7F8F7F8F7F8F7F8F7J"J"I"J"J"J"J":"J":"J#9"J":"J-
O=F0>FEFE4FEO>FE>FEO.F0FEGF0FEO'FEFEF06FEF0O/F7F8F7F8F7F8F7F8F7F8F7F8J";"J":"B#J#8"J"J":"B#J"J"J":"J"J"?"J-
O'F0F0;F0FEFEF0@FEFEF04F0HF0FEFEF0:F04F0O7FEFEODFE5F0FEO&F8F7F8F7F8F7F8F7F8F7F8F7J":"J"G":#?$="A"J"J"A"J":"H"J":"J$:":"E"J$J-
O7F0F0=FEF0FEFEFEFEF0FEFEO/FEAFEFEO"F0FEFE4F0FEO%FEFEF0F0FEFEKFEFEFE5F7F8F7F8F7F8F7F8F7F8F7F8J"J"?$J"=$:"H"J"?$J"H"J":"F$="B":"J">":"C":"A"F"?"9"J-
O(F0FFEFEFEF07FEFEFEF0F0F0O!FEFEFEF0<F0F0O F0FEFEFEF0F0F0FEO#FEF0FEFEF0FEF0FEFE4F8F7F8F7F8F7F8F7F8F7F8F7J"A"G";#;%H"<s"@"?"8"J";#;%J"="?"8"J":"C%J":#J"@":"A":"?"9"@"9"J-
O,F0F0F0FEFEFEFEFEF0F0FEF0FEFEF0KF0FEFEFEFEFEF0:FEFEFEF0O"F0FEFEFEFEF06F0FEFEO FEF0FEFEF0F0FEFEF0CF7F8F7F8F7F8F7F8F7F8F7F8J"<&8"J"J":#;#8"J"<&8"J"9#9":#;#8"J";"J":$>#8";"H";#?#J#B":#=#:"E#<#9"J-
OKF0FEFEFEFEFEF04F04F0FEFEFEFEF0MF0FEFEFEFEFEF06FEFEF0F0FEFEFEFEF04FEFE7F0FEFEFEFEFEF0FEF0FEFEFEFE?FEFEF0FEFEFEFEF0FEFEFEFEF0DF8F7F8F7F8F7F8F7F8F7F8F7J"G"F"A"?":"="@#>#:&9">":"=":"=":"="A"I":%;#:&9"H$=%J#;s8#J#;t:$>";w;"?#:r:#H':"J-
O)F0F0F0F0FEFEF0F0F0F0F0FEFEFEFEFEF0FEFEFEFEFEFEF0F0F0FEFEFEF0F0F0FEFEFEFEFEF0FEFEFEFEFEFEFE4F0F0FEF0F0:F0F0FEF0F0F0FEFEF0F0F0FEF0F0FEFEFEFEFEFEF0EF7F8F7F8F7F8F7F8F7F8F7F8J"C"I#=#=$<$;#="B#>#<$<#9#<#9#<$;#=#J";">#>#J$?$A"H$A%>$J$?$E&>#C"9"J-
O+F0F0F0F0F0F0FEFEFEFEFEFEF0F0F0F0F0F0F0FEFEFEFEFEFEFEFEFEFEFEFEFEFEF0F0F0F05F0F0F0F0F0F0O)F0F0F0F0F0F0F0F0F0F0F0F0F0F0FEFEFECF0F0F0F0F0F0F0F0F0F0F0F0F0F0F04F8F7F8F7F8F7F8F7F8F7F8F7J"E"Jr?w=rEs>v9u9v=rJ&AsJyJtJvBzEtG";sF$J-
O*F0F04F0F0F0F0F0F0F0F08F0F0F0F0F0F05F09F0DF0:F0F0F0F0F0F0F05F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U7FEQ?F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U:F0Q<F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U6FEQ@F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J"J-
U9F0Q=F8F7F8F7F8F7F8F7F8F7F8F7J$J-
U6F0F0F0Q>F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F7J-
Y)F7F8F7F8F7F8F7F8F7F8F7F8Jv"
Y)F0F7Ju
Y*F8J#>"
Y)F8F0F7J"@"
Y)F7F8J$<$
Y)F8F7F0F7F8F7J#>#
Y)F7F8F7F8J%:%
Y)F8F7F8F0F7F7F8F7J$<$
Y)F7F8F7F8F7F8J&8&
Y)F8F7F8F7F0F7F8F7F8F7J%:%
Y)F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F0F7F7F8F7F8F7J&8&
Y)F7F8F7F8F7F8F7F8F7F8J-
Y)F8F7F8F7F8F7F8F7F8F7F8F77%<Z;x<%
F7F7F7F7XFF0F7F7F7F77%;z:y;%
F0F0F0F0XHF8F8F0F0F0F07%J%
F8F8F8F8Y6F8F8F8F8

@z
XHF7B.z5
F8F7F8F7F8F7F8F7F8F7F0F0F8VEF0OBF8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F0F0F8F7F8F7F8F7F8F7F8F7F8F0A0z5
F8F7F8F7F8F7F8F7F8F0F0F8F7F7F0VDF8OAF7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F0F8F0F0F7F8F7F8F7F8F7F8F7A,8"J58,
F7F8F7F8F7F8F7F0F0F8F8F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F0F0F8F7F8F7F8F7F8A*:"J5:*
F8F7F8F7F8F0F0F8F8F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F8F0F0F7F8F7F8F7A(<"J5<(
F7F8F7F0F0F8F8F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F0F0F8F7F8A&>"J5>&
F8F0F0F8F8F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F8F8F0F0F7A$@"J5@$
F7F7F7F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8A&>"J5>&
F8F7F8F7F7F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7A(<"J5<(
F7F8F7F8F7F7F7F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8A*:"J5:*
F8F7F8F7F8F7F8F7F7F7VFO3F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8F7A,8"J58,
F7F8F7F8F7F8F7F8F7F7F7F8VFO3F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8F7F8F7F8A0z5
F8F7F8F7F8F7F8F7F8F7F8F7F7F7F0VEF7O@F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F8F7F7F7F8F7F8F7F8F7F8F7F8F7@z
XGF0;&Jz
F0F0F0F0F0XH6F0;z#z#z
:F8F7F0X,F8F7F0:F8


z
Y?F7
ENDBITMAP
%%EndBinary
355.98 368.63 345.47 362.85 351.32 373.33 353.65 370.98 4 Y
V
353.66 370.98 357.22 374.52 422.68 374.52 3 L
0.5 H
2 Z
N
390.11 334.55 379.65 328.67 385.41 339.2 387.76 336.87 4 Y
V
387.77 336.87 389.55 338.67 423.34 338.67 3 L
N
4 12 Q
(Primary W) 425.5 372.49 T
(indow) 485.27 372.49 T
(V) 423 336.49 T
(iew W) 430.7 336.49 T
(indow) 462.92 336.49 T
193.5 276.66 396 315.83 R
7 X
V
N
5 24 Q
0 X
(W) 201.15 282.92 T
(elcome to GEOS!) 221.88 282.92 T
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "123" 17
%%Page: "124" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(124) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(/* For simplicity, this application is not given an icon. Therefore, we must) 102.6 642 T
( * prevent the user from being able to minimize the application. This is) 102.6 631 T
( * done by applying the following attribute to the GenPrimary object. Note that) 102.6 620 T
( * GenPrimaryClass is a subclass of GenDisplayClass, in which this attribute) 102.6 609 T
( * is actually defined. */) 102.6 598 T
(ATTR_GEN_DISPLAY_NOT_MINIMIZABLE;) 102.6 580 T
(/* The following hint allows the primary window object to size itself) 102.6 562 T
( * according to its children \050the view object\051. */) 102.6 551 T
(HINT_SIZE_WINDOW_AS_DESIRED;) 102.6 540 T
( /*) 91.8 522 T
( * When the specific UI permits, let\325s not show the menu bar on) 97.2 511 T
( * startup. Some applications would find the extra space this leaves) 97.2 500 T
( * helpful, in particular on the small screens of pen-based devices,) 97.2 489 T
( * though for this simple application it doesn\325t really matter.) 97.2 478 T
( */) 97.2 467 T
(ATTR_GEN_DISPLAY_MENU_BAR_POPPED_OUT;) 102.6 456 T
(HINT_DISPLAY_MENU_BAR_HIDDEN_ON_STARTUP;) 102.6 445 T
(}) 81 434 T
(/*) 81 416 T
(GenView object) 168.98 416 T
( * This GenView object creates a window where the application can display portions) 81 405 T
( * of a document as necessary. We want it to be scrollable, so the specific UI) 81 394 T
( * \050OSF/Motif\051 will create scroll bars which the user can interact with. Whenever a) 81 383 T
( * portion of the window needs to be redrawn, the GenView object will invalidate) 81 372 T
( * a portion of the window, causing a MSG_META_EXPOSED to be sent to the) 81 361 T
( * application. The application will draw the document into the window. The) 81 350 T
( * window keeps track of a mask which is used to clip the application\325s) 81 339 T
( * drawing operations so only the invalid portion of the window is drawn. */) 81 328 T
(@object GenViewClass HelloView = {) 81 310 T
(GVI_horizAttrs = @default | GVDA_SCROLLABLE | GVDA_NO_LARGER_THAN_CONTENT;) 102.6 299 T
(/* This makes the View scrollable in the) 256.5 288 T
( * horizontal dimension and keeps it from) 256.5 277 T
( * growing larger than our document. */) 256.5 266 T
(GVI_vertAttrs = @default | GVDA_SCROLLABLE | GVDA_NO_LARGER_THAN_CONTENT;) 102.6 248 T
(/* This makes the View scrollable in the) 256.5 237 T
( * vertical dimension and keeps it from) 256.5 226 T
( * growing larger than our document. */) 256.5 215 T
(GVI_docBounds = { 0, 0, 72*17/2, 72*11 };) 102.6 197 T
(/* This sets the document size \050scrollable) 256.5 186 T
( * bounds\051 of the GenView. */) 256.5 175 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "124" 18
%%Page: "125" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(125) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(GVI_content = process;) 102.6 642 T
(/* This sets the output of the View--where it will) 256.5 642 T
( * send its MSG_META_EXPOSEDs--to be the) 256.5 631 T
( * application\325s Process object. */) 256.5 620 T
( /*) 81 602 T
(* This view will not take text input, so specify that no floating) 91.8 591 T
(* keyboard should come up. Otherwise, we would get a floating) 91.8 580 T
(* keyboard by default on pen-based systems.) 91.8 569 T
(*/) 91.8 558 T
( ATTR_GEN_VIEW_DOES_NOT_ACCEPT_TEXT_INPUT;) 81 547 T
(}) 81 536 T
(@end) 81 518 T
(Interface) 125 518 T
(/* End definition of objects in this resource. */) 212.5 518 T
81 493.98 531 506 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 493.98 531 506 R
7 X
0 0 0 1 0 0 0 K
V
76.5 501.23 617.5 504.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.3.3) 119.19 462.64 T
(The Hello W) 180 462.64 T
(orld Menu) 259.87 462.64 T
1 10 Q
(The Hello W) 180 440.31 T
(orld program has one menu, called \322Menu\323 and located in the) 237.23 440.31 T
-0.3 (primary window\325) 180 427.31 P
-0.3 (s menu bar) 257.3 427.31 P
-0.3 (. Menus are instances of) 307.81 427.31 P
3 F
-0.31 (GenInteractionClass) 421.12 427.31 P
1 F
(with the) 180 414.31 T
1 9 Q
(GIV_POPUP) 221.49 414.31 T
1 10 Q
( attribute set in the) 275.5 414.31 T
4 9 Q
(GII) 368.67 414.31 T
4 10 Q
(_visibility) 383 414.31 T
1 F
( \336eld. The moniker of) 428.36 414.31 T
(the menu object appears on the menu bar \050see Code Display) 180 401.31 T
(4-) 459.29 401.31 T
(6 for the) 468.18 401.31 T
(de\336nition of Hello W) 180 388.31 T
(orld\325) 274.82 388.31 T
(s menu\051.) 294.82 388.31 T
-0.21 (The menu should have one child for each entry in the menu. In Hello W) 180 368.31 P
-0.21 (orld,) 507.32 368.31 P
(the only child is the dialog box, whose moniker appears as the text of the) 180 355.31 T
(menu item that brings up the box.) 180 342.31 T
81 309.95 531 321.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.95 531 321.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 317.2 617.5 320.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 303.29 T
(4-) 147.13 303.29 T
(6 The Hello W) 156.02 303.29 T
(orld Menu) 221.41 303.29 T
4 F
(/This display is part of hello3.goc and follows the previous display directly) 81 288.29 T
(.) 423.64 288.29 T
6 9 Q
(/*) 81 274.95 T
(HelloMenu Menu) 212.5 274.95 T
( * Menus are of GenInteractionClass. The moniker of a menu is used to show the menu) 81 263.95 T
( * on the primary\325s menu bar \050thus, \322Menu\323 will show up in Hello World\325s menu bar\051.) 81 252.95 T
( * Each of the menu\325s children \050in the GI_comp field\051 will be an entry or a) 81 241.95 T
( * collection of entries in the menu. To separate a menu from a dialog) 81 230.95 T
( * box GenInteraction, you must apply the visibility GIV_POPUP. A dialog box will) 81 219.95 T
( * have the visibility GIV_DIALOG. */) 81 208.95 T
(@object GenInteractionClass HelloMenu = {) 81 190.95 T
(GI_visMoniker = \325M\325, \322Menu\323;) 102.6 179.95 T
(/* The moniker of the menu is used in) 256.5 179.95 T
( * the primary window\325s menu bar. */) 256.5 168.95 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "125" 19
%%Page: "126" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(126) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(GI_comp = @HelloColorBox;) 102.6 642 T
(/* The only child of the menu \050the only) 256.5 642 T
( * item in the menu\051 is the dialog box. */) 256.5 631 T
(GII_visibility = GIV_POPUP;) 102.6 613 T
(/* This attribute designates the GenInteraction) 256.5 613 T
( * as a menu or a submenu. */) 256.5 602 T
(}) 81 591 T
81 566.98 531 579 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 566.98 531 579 R
7 X
0 0 0 1 0 0 0 K
V
76.5 574.23 617.5 577.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
83.4 565.08 81 565.08 2 L
0 X
0 0 0 1 0 0 0 K
V
0.4 H
0 Z
N
7 4 Q
(T) 81 564.31 T
0 14 Q
(4.4.3.4) 119.19 535.64 T
(The Dialog Box and Its T) 180 535.64 T
(riggers) 342.6 535.64 T
1 10 Q
(Code Display) 180 513.31 T
(4-) 243.9 513.31 T
(7 shows the code for the dialog box and its triggers.) 252.79 513.31 T
(Dialog boxes in) 180 493.31 T
1 9 Q
(GEOS) 253.17 493.31 T
1 10 Q
( may be of) 279.34 493.31 T
3 F
(GenInteractionClass) 329.17 493.31 T
1 F
(, or dialogs may be) 436.57 493.31 T
(called up and instantiated during execution with kernel routines. Hello) 180 480.31 T
-0.61 (W) 180 467.31 P
-0.61 (orld uses a GenInteraction in order to have a \322\337oating\323 dialog box that may) 189.26 467.31 P
(be retained and moved around the screen.) 180 454.31 T
(When a dialog box is brought up by a menu item, the moniker of the dialog) 180 434.31 T
(box object will be used as the text of the menu item. Thus, the word \322Color\323) 180 421.31 T
(will appear both at the top of the dialog box and in the menu.) 180 408.31 T
81 144 531 648 C
180 144 531 396.11 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 396.11 R
7 X
0 0 0 1 0 0 0 K
V
181.67 141.65 531 206.83 R
V
0 10 Q
0 X
(Figure) 181.67 200.16 T
(4-) 215.01 200.16 T
(5) 223.9 200.16 T
4 F
(Hello W) 232.24 200.16 T
(orld\325) 267.97 200.16 T
(s Menu and Dialog Box) 288.52 200.16 T
-0.03 (The menu consists of a GenInteraction object; its moniker will appear as the) 181.67 186.16 P
(menu\325) 181.67 174.16 T
(s title in the menu bar) 208.89 174.16 T
(. The dialog consists of another GenInteraction) 308.88 174.16 T
-0.58 (object; its moniker will appear as both the title of the dialog box and the name) 181.67 162.16 P
(of the menu item that brings the box up.) 181.67 150.16 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  521      
65 57 65 57 0 283.94 217.44 BEGINBITMAPBWc
c"
7F%
7FFFFFC0


9$
C1E00C9#
C330)
780007C303CCF360*
7BFFF7C3066D9B8000$:#
780007007F$
7FFFFF:"
369%
C1E3CCF39"`
C0>"
7F

%
00000000"R
7F
&
6000000003&
6AAAAAAABB&
6FFFFFFFFB"9"
6BBB&
6F067FFFFB#8"
6B32BB&
6F324CC3FB&
6B064C99BB&
6F324C81FB"8#
6B9FBB"8#
6F99FB&
6B0660C3BB&
6FFFFFFFFB#8"
6B01BB&
6D5555557B&
6FFFFFFFFB&
6000000003&
7FFFFFFFFF&
6000000003&
6FFFFFFFFB

7$
87FCF97"
337$
3F0CC17$
3E64997"
227"
32
7$
830CC17$
FFFFFF7"
017"
FF
&
6000000003&
7FFFFFFFFFc

ENDBITMAP
%%EndBinary
283.94 217.44 348.94 274.44 R
0.5 H
0 Z
N
%%BeginBinary:  385      
75 55 75 55 0 257.47 300.28 BEGINBITMAPBWc
d"
18+
7FFFFFFFFFF7FFFFFFE7


#
7E7C7"
387%
10C306677$
4499327#
6C817#
7C9F8"
998$
C33307&
7FFFFFFFFF$
7E007F$
7FFFFF
d"
18"S"
7FC7"c"
4047"S
5F
:":"
F158:$8"
F0FE3F47;"
FC;"
00
8$
FE0000
8$
FFFFF0
8"8"
CFFC;"
FE8&
FFFFF1FFFF:"
FF
"c
40"S"
7FC7


8$
E1FF3F8"
CC8%
CFC330C99$
992647;"
4F
8"9"
CC248%
E1C330CF8P
8#
C07F8#
FFFF

d"
07
ENDBITMAP
%%EndBinary
257.47 300.28 332.47 355.28 R
1 H
N
302.75 338.65 334.5 356.65 R
7 X
V
0.5 H
N
350.38 279.35 340.49 275.15 346.65 283.95 348.52 281.65 4 Y
0 X
V
348.52 281.65 348.52 281.65 380 281.65 3 L
2 Z
N
257.18 359.15 263 348.65 252.5 354.47 254.84 356.81 4 Y
V
254.84 356.81 253 358.65 238 358.65 3 L
N
329.04 305.84 317.5 309.15 329.04 312.46 329.04 309.15 4 Y
V
329.04 309.15 347.08 309.15 372.5 281.9 3 L
N
(Moniker of) 192.56 367.15 T
(Menu) 204.23 357.15 T
(Interaction) 191.92 347.15 T
(Moniker of) 376.63 288.15 T
(Dialog) 386.07 278.15 T
(Interaction) 375.99 268.15 T
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "126" 20
%%Page: "127" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(127) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.04 (Children of a dialog box are arranged by the geometry manager) 180 641.33 P
-0.04 (. In general,) 472.41 641.33 P
(children will be arranged top to bottom \050or left to right, depending on the) 180 628.33 T
-0.69 (speci\336c) 180 615.33 P
1 9 Q
-0.62 (UI) 215.6 615.33 P
1 10 Q
-0.69 (\051 as they are de\336ned. Thus, the two triggers will appear \322Blue\323 \336rst) 226.6 615.33 P
-0.61 (and \322Gold\323 second \050on bottom\051. The dialog box will automatically size itself to) 180 602.33 P
(\336t all its children properly) 180 589.33 T
(. Dialog boxes, unlike windows, are generally not) 300.56 589.33 T
(resizable.) 180 576.33 T
(Each of the triggers will appear as a simple button big enough to hold its) 180 556.33 T
-0.64 (moniker) 180 543.33 P
-0.64 (. Each trigger) 217.78 543.33 P
-0.64 (, when pressed, sends a speci\336ed message to a speci\336ed) 279.08 543.33 P
(object. The Blue trigger sends) 180 530.33 T
1 9 Q
(MSG_HELLO_CHANGE_TO_BLUE) 320.56 530.33 T
1 10 Q
( to the) 473.4 530.33 T
(application\325) 180 517.33 T
(s Process object, and the Gold trigger sends the message) 233.16 517.33 T
1 9 Q
(MSG_HELLO_CHANGE_TO_GOLD) 180 504.33 T
1 10 Q
( to the Process object. These messages are) 333.51 504.33 T
(placed in the Process object\325) 180 491.33 T
(s message queue and require no return values.) 308.34 491.33 T
81 458.98 531 471 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 458.98 531 471 R
7 X
0 0 0 1 0 0 0 K
V
76.5 466.23 617.5 469.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 452.31 T
(4-) 147.13 452.31 T
(7 The Hello W) 156.02 452.31 T
(orld Dialog Box and Its T) 221.41 452.31 T
(riggers) 338.66 452.31 T
4 F
(This display is part of hello3.goc and follows the previous display directly) 81 437.31 T
(.) 417.58 437.31 T
6 9 Q
(/*) 81 423.98 T
(HelloColorBox Dialog Box) 212.5 423.98 T
( * Dialog boxes are of GenInteractionClass. The moniker of the dialog box will) 81 412.98 T
( * appear at the top as the box\325s title. Additionally, if the GenInteraction) 81 401.98 T
( * is a child of a menu interaction, the moniker will also serve as the text that) 81 390.98 T
( * appears in the menu item that brings up the dialog box. The dialog will) 81 379.98 T
( * automatically size itself to be large enough to hold all its children. Thus,) 81 368.98 T
( * this dialog will be small \050with just two children, each a trigger with a short) 81 357.98 T
( * moniker\051. */) 81 346.98 T
(@object GenInteractionClass HelloColorBox = {) 81 328.98 T
(GI_visMoniker = \325C\325, \322Color\323;) 102.6 317.98 T
(/* The moniker will be displayed both as the) 259.2 317.98 T
( * dialog\325s title and as the menu item that) 256.5 306.98 T
( * brings the dialog up. */) 256.5 295.98 T
(GI_comp = @HelloBlueTrigger, @HelloGoldTrigger;) 102.6 277.98 T
(/* The two triggers are the only gadgets) 256.5 266.98 T
( * in the dialog box. */) 256.5 255.98 T
(GII_visibility = GIV_DIALOG;) 102.6 237.98 T
(/* In order for this interaction to be) 256.5 237.98 T
( * a dialog box, this attribute must be set. */) 256.5 226.98 T
(}) 81 215.98 T
(/*) 81 197.98 T
(GenTriggers) 212.5 197.98 T
( * Buttons are implemented by GenTriggerClass. When a trigger is pushed by the user) 81 186.98 T
( * \050clicked on with the mouse\051, it will send the specified message to the specified) 81 175.98 T
( * output object. In both cases below, the trigger will send an application-defined) 81 164.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "127" 21
%%Page: "128" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(128) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
( * message to the application\325s Process object. A trigger\325s moniker is displayed) 81 642 T
( * within the trigger. In this case, both are text, but any graphics could be used) 81 631 T
( * instead to create graphical triggers easily. \050E.g. a blue flag and a gold flag) 81 620 T
( * rather than the words \322Blue\323 and \322Gold.\323\051 */) 81 609 T
(@object GenTriggerClass HelloBlueTrigger = {) 81 591 T
(GI_visMoniker = \325B\325, \322Blue\323;) 102.6 580 T
(/* The \325B\325 indicates the keyboard navigation) 256.5 580 T
( * character for this trigger. */) 256.5 569 T
(GTI_destination = process;) 102.6 558 T
(/* Send the message to the Process object. */) 256.5 558 T
(GTI_actionMsg = MSG_HELLO_CHANGE_TO_BLUE;) 102.6 547 T
(/* Send this message. */) 324 547 T
(}) 81 536 T
(@object GenTriggerClass HelloGoldTrigger = {) 81 518 T
(GI_visMoniker = \325G\325, \322Gold\323;) 102.6 507 T
(/* The \325G\325 indicates the keyboard navigation) 256.5 507 T
( * character for this trigger. */) 256.5 496 T
(GTI_destination = process;) 102.6 485 T
(/* Send the message to the Process object. */) 256.5 485 T
(GTI_actionMsg = MSG_HELLO_CHANGE_TO_GOLD;) 102.6 474 T
(/* Send this message. */) 324 474 T
(}) 81 463 T
81 438.98 531 451 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 438.98 531 451 R
7 X
0 0 0 1 0 0 0 K
V
76.5 446.23 617.5 449.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.4) 130.86 398.98 T
0 18 Q
(Code and Message Handlers) 180 398.98 T
1 10 Q
(One of the \336rst things a) 180 375.31 T
1 9 Q
(C) 292.79 375.31 T
1 10 Q
( programmer might notice when looking at the) 299.29 375.31 T
(Hello W) 180 362.31 T
(orld program is that it has no) 216.67 362.31 T
3 F
(main\050\051) 355.58 362.31 T
1 F
( routine. This illustrates the) 389.65 362.31 T
(primary distinction between an object-oriented system and a system that) 180 349.31 T
(emulates object-orientedness.) 180 336.31 T
-0.57 (Applications in) 180 316.31 P
1 9 Q
-0.51 (GEOS) 251.46 316.31 P
1 10 Q
-0.57 ( consist of a Process object and, optionally) 277.63 316.31 P
-0.57 (, other objects) 465.68 316.31 P
(in the same or different threads. The Process object of an application is) 180 303.31 T
4 F
(event-driven) 180 290.31 T
1 F
(. This means that until it receives a message, it does nothing;) 236.65 290.31 T
-0.27 (when it receives a message, however) 180 277.31 P
-0.27 (, it will automatically be woken up with) 347 277.31 P
(the instruction pointer pointing at the proper routine\325) 180 264.31 T
(s entry point.) 427.41 264.31 T
3 F
(GenProcessClass) 180 244.31 T
1 F
(, the superclass of every Process object, handles many) 268.52 244.31 T
(messages that most applications may never need to know about. For) 180 231.31 T
-0.12 (example, when the program is \336rst launched, the Process object will receive) 180 218.31 P
-0.22 (a series of messages from the) 180 205.31 P
1 9 Q
-0.2 (UI) 316.45 205.31 P
1 10 Q
-0.22 ( and the kernel telling it how it should start) 327.45 205.31 P
(up. It automatically responds by setting up the proper message queues and) 180 192.31 T
(executing the proper code. These are things you, as the programmer) 180 179.31 T
(, do not) 493.71 179.31 T
(need to know about to create a working) 180 166.31 T
1 9 Q
(GEOS) 364.48 166.31 T
1 10 Q
( application \050though they are) 390.65 166.31 T
(documented in \322Applications and Geodes,\323 Chapter) 180 153.31 T
(6\051.) 418.72 153.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "128" 22
%%Page: "129" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(129) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Throughout the program\325) 180 641.33 T
(s life, then, the Process object will receive and) 296.48 641.33 T
(respond to messages as they are received. Each message has at most one) 180 628.33 T
(corresponding method; if no method exists for a message, the message is) 180 615.33 T
(ignored.) 180 602.33 T
(The Hello W) 180 582.33 T
(orld Process object can handle six different messages, each of) 237.23 582.33 T
(which is sent by a) 180 569.33 T
1 9 Q
(UI) 265.39 569.33 T
1 10 Q
( object. It also uses one routine de\336ned internally and) 276.39 569.33 T
(not available for use by other objects. Of the six messages it handles, three) 180 556.33 T
-0.41 (are speci\336c to Hello W) 180 543.33 P
-0.41 (orld and three are universal to all applications using a) 280.78 543.33 P
(GenV) 180 530.33 T
(iew object:) 205.67 530.33 T
1 9 Q
(MSG_MET) 256.79 530.33 T
(A_EXPOSED) 302.96 530.33 T
1 10 Q
(,) 358.97 530.33 T
1 9 Q
(MSG_MET) 180 517.33 T
(A_CONTENT_VIEW_WIN_OPENED) 226.17 517.33 T
1 10 Q
(, and) 382.99 517.33 T
1 9 Q
(MSG_MET) 180 504.33 T
(A_CONTENT_VIEW_WIN_CLOSED) 226.17 504.33 T
1 10 Q
( are sent by the view) 381.33 504.33 T
(, and) 476.17 504.33 T
1 9 Q
(MSG_HELLO_CHANGE_TO_BLUE) 180 491.33 T
1 10 Q
(,) 332.84 491.33 T
1 9 Q
(MSG_HELLO_CHANGE_TO_GOLD) 338.4 491.33 T
1 10 Q
(, and) 491.91 491.33 T
1 9 Q
(MSG_HELLO_REDRA) 180 478.33 T
(W_DOCUMENT) 275.34 478.33 T
1 10 Q
( are de\336ned speci\336c to) 344.83 478.33 T
3 F
(HelloProcessClass) 180 465.33 T
1 F
( and are sent by the triggers.) 275.19 465.33 T
(The function) 180 445.33 T
3 F
(HelloDrawT) 241.48 445.33 T
(ext\050\051) 303.89 445.33 T
1 F
( is internal to Hello W) 327.78 445.33 T
(orld and is called by) 429.65 445.33 T
-0.78 (the) 180 432.33 P
1 9 Q
-0.7 (MSG_MET) 197 432.33 P
-0.7 (A_EXPOSED) 243.17 432.33 P
1 10 Q
-0.78 ( handler) 299.17 432.33 P
-0.78 (. It is declared before the handler to satisfy) 336.54 432.33 P
(normal) 180 419.33 T
1 9 Q
(C) 215.93 419.33 T
1 10 Q
( constraints.) 222.43 419.33 T
(Additionally) 180 399.33 T
(, two constants are de\336ned to determine the document size.) 236.12 399.33 T
-0.64 (These constants, along with the declaration of) 180 386.33 P
3 F
-0.67 (HelloDrawT) 390.89 386.33 P
-0.67 (ext\050\051) 453.3 386.33 P
1 F
-0.64 (, are shown) 477.18 386.33 P
(in Code Display) 180 373.33 T
(4-) 255.94 373.33 T
(8.) 264.83 373.33 T
81 340.98 531 353 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 340.98 531 353 R
7 X
0 0 0 1 0 0 0 K
V
76.5 348.23 617.5 351.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 334.31 T
(4-) 147.13 334.31 T
(8 Constant and Routine De\336nition) 156.02 334.31 T
4 F
(This display is part of hello3.goc and follows the previous display directly) 81 319.31 T
(.) 417.58 319.31 T
6 9 Q
(/*************************************************************************) 81 305.98 T
( *) 81 294.98 T
(Code for HelloProcessClass) 212.5 294.98 T
( * Now that all the UI gadgetry has been defined, we must provide the) 81 283.98 T
( * methods and routines used by the application. For simplicity, all) 81 272.98 T
( * messages will be handled by the HelloProcessClass object.) 81 261.98 T
( *************************************************************************/) 81 250.98 T
(/* Define constants used by the color-setting methods. Each of these) 81 232.98 T
( * is a document size parameter in points. Therefore, the document is) 81 221.98 T
( * 8.5 inches wide by 11 inches tall \050one point is 1/72 of an inch\051. */) 81 210.98 T
(#define HORIZ_DOC_SIZE) 81 199.98 T
(\05072*17/2\051) 212.5 199.98 T
(#define VERT_DOC_SIZE) 81 188.98 T
(\05072*11\051) 212.5 188.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "129" 23
%%Page: "130" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(130) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(/* Declare that we will use the function HelloDrawText\050\051, and define its) 81 642 T
( * return and parameter values. It has no return value and has one parameter:) 81 631 T
( * a graphics state handle called \322gstate.\323 */) 81 620 T
(void HelloDrawText\050GStateHandle gstate\051;) 81 609 T
(/* The following constants are used by HelloDrawText\050\051. */) 81 591 T
(#define TEXT_POINT_SIZE) 81 573 T
( 48) 212.5 573 T
(/* point size */) 256.5 573 T
(#define TEXT_X_POSITION) 81 562 T
( 30) 212.5 562 T
(/* x position, in document coords. */) 256.5 562 T
(#define TEXT_Y_POSITION) 81 551 T
(100) 212.5 551 T
(/* y position, in document coords. */) 256.5 551 T
81 526.98 531 539 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 526.98 531 539 R
7 X
0 0 0 1 0 0 0 K
V
76.5 534.23 617.5 537.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.4.1) 119.19 495.64 T
(Handling the W) 180 495.64 T
(indow Messages) 281.77 495.64 T
1 10 Q
-0.57 (As stated earlier) 180 473.31 P
-0.57 (, the) 254.98 473.31 P
3 F
-0.59 (winHan) 277.18 473.31 P
1 F
-0.57 ( global variable contains the window handle of) 318.28 473.31 P
(the view\325) 180 460.31 T
(s window) 220.75 460.31 T
(. T) 262.8 460.31 T
(o set the variable, Hello W) 274.11 460.31 T
(orld must intercept and) 395.99 460.31 T
(handle the message) 180 447.31 T
1 9 Q
(MSG_MET) 274.09 447.31 T
(A_CONTENT_VIEW_WIN_OPENED) 320.26 447.31 T
1 10 Q
(. This) 477.08 447.31 T
-0.88 (message passes the window handle, which) 180 434.31 P
3 F
-0.91 (HelloProcessClass) 373.26 434.31 P
1 F
-0.88 ( simply stuffs) 468.45 434.31 P
(into its) 180 421.31 T
3 F
(winHan) 215.38 421.31 T
1 F
( variable.) 256.48 421.31 T
(When the view window is destroyed, the application must make sure it) 180 401.31 T
-0.08 (forgets its window handle. Otherwise, we could try to draw to a nonexistent) 180 388.31 P
-0.57 (window) 180 375.31 P
-0.57 (, which is an error) 214.64 375.31 P
-0.57 (. This will not be a problem for Hello W) 295.89 375.31 P
-0.57 (orld because) 471.94 375.31 P
-0.47 (the only time the view can be destroyed is when the application is being shut) 180 362.31 P
(down. For completeness, however) 180 349.31 T
(, Hello W) 334.08 349.31 T
(orld handles) 376.31 349.31 T
1 9 Q
(MSG_MET) 180 336.31 T
(A_CONTENT_VIEW_WIN_CLOSED) 226.17 336.31 T
1 10 Q
( and sets) 381.33 336.31 T
3 F
(winHan) 425.23 336.31 T
1 F
( to zero.) 466.33 336.31 T
(Both of the methods for the above messages are shown in Code Display) 180 316.31 T
(4-) 511.15 316.31 T
(9.) 520.04 316.31 T
81 283.95 531 295.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 283.95 531 295.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 291.2 617.5 294.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 277.29 T
(4-) 147.13 277.29 T
(9 Messages from the V) 156.02 277.29 T
(iew) 264.21 277.29 T
4 F
(This display is part of hello3.goc and follows the previous display directly) 81 262.29 T
(.) 417.58 262.29 T
6 9 Q
(/* NOTE:) 81 248.95 T
( * Because these are simple methods, the structure and syntax of methods are not) 81 237.95 T
( * handled here. See the handler for MSG_META_EXPOSED, later in this chapter. */) 81 226.95 T
(/***********************************************************************) 81 208.95 T
(* MSG_META_CONTENT_VIEW_WIN_OPENED for HelloProcessClass) 86.4 197.95 T
(***********************************************************************) 86.4 186.95 T
(* SYNOPSIS:) 86.4 175.95 T
(Record the handle of the view window when the view) 168.98 175.95 T
(*) 86.4 164.95 T
(creates it. This allows us to more-easily update the) 168.98 164.95 T
(*) 86.4 153.95 T
(document when the user changes the text color.) 168.98 153.95 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "130" 24
%%Page: "131" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(131) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(* PARAMETERS:) 86.4 642 T
(void \050) 168.98 642 T
(word viewWidth,) 212.5 642 T
(*) 86.4 631 T
(word viewHeight,) 212.5 631 T
(*) 86.4 620 T
(WindowHandle viewWin\051) 212.5 620 T
(* SIDE EFFECTS: winHan is set to viewWindow) 86.4 609 T
(***********************************************************************/) 86.4 598 T
(@method HelloProcessClass, MSG_META_CONTENT_VIEW_WIN_OPENED {) 81 580 T
(/* Get the window handle of the View. We need this handle in order to) 125 569 T
( * force a window invalidation, causing the View to send a MSG_META_EXPOSED) 125 558 T
( * to the Process object and thereby forcing a redraw of the window. */) 125 547 T
(winHan = viewWindow;) 102.6 536 T
(}) 81 525 T
(/***********************************************************************) 81 507 T
( * MSG_META_CONTENT_VIEW_WIN_CLOSED for HelloProcessClass) 81 496 T
( ***********************************************************************) 81 485 T
( * SYNOPSIS:) 81 474 T
(Take note that the view is now closed, so we don\325t) 168.98 474 T
( *) 81 463 T
(try and draw to it or invalidate it any more \050at) 168.98 463 T
( *) 81 452 T
(least until it reopens\051) 168.98 452 T
( * PARAMETERS:) 81 441 T
(void \050WindowHandle viewWindow\051) 168.98 441 T
( * SIDE EFFECTS:) 81 430 T
(winHan is set to 0) 168.98 430 T
( *) 81 419 T
(***********************************************************************/) 86.4 408 T
(@method HelloProcessClass, MSG_META_CONTENT_VIEW_WIN_CLOSED {) 81 390 T
(/* Set our window handle variable to zero. */) 125 379 T
(winHan = 0;) 102.6 368 T
(}) 81 357 T
81 332.98 531 345 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 332.98 531 345 R
7 X
0 0 0 1 0 0 0 K
V
76.5 340.23 617.5 343.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.4.2) 119.19 301.64 T
(Handling MSG_MET) 180 301.64 T
(A_EXPOSED) 311.98 301.64 T
1 10 Q
-0.11 (As discussed in our HelloV) 180 279.31 P
-0.11 (iew object declaration \050see Code Display) 302.83 279.31 P
-0.11 (4-) 490.09 279.31 P
-0.11 (5\051, the) 498.98 279.31 P
(view will send a) 180 266.31 T
1 9 Q
(MSG_MET) 256.69 266.31 T
(A_EXPOSED) 302.86 266.31 T
1 10 Q
( to the Hello W) 358.87 266.31 T
(orld Process object.) 427.77 266.31 T
-0.47 (Receipt of this message indicates that part of the scrollable view window has) 180 253.31 P
(become invalid and must be redrawn.) 180 240.31 T
-0.1 (Therefore, the class of the Hello W) 180 220.31 P
-0.1 (orld Process object \050) 338.46 220.31 P
3 F
-0.11 (HelloProcessClass) 429.8 220.31 P
1 F
-0.1 (\051) 524.99 220.31 P
-0.54 (must know how to draw the document in response to this message. Note that) 180 207.31 P
-0.57 (this message did not have to be de\336ned speci\336cally in the earlier de\336nition of) 180 194.31 P
3 F
(HelloProcessClass) 180 181.31 T
1 F
(\321this is because the message is already de\336ned for) 275.19 181.31 T
3 F
(MetaClass) 180 168.31 T
1 F
(, the superclass of all) 233.33 168.31 T
1 9 Q
(GEOS) 333.53 168.31 T
1 10 Q
( classes.) 359.7 168.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "131" 25
%%Page: "132" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(132) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.4 (Code Display) 180 641.33 P
-0.4 (4-) 243.5 641.33 P
-0.4 (10 shows the method that handles) 252.39 641.33 P
1 9 Q
-0.36 (MSG_MET) 411.3 641.33 P
-0.36 (A_EXPOSED) 457.47 641.33 P
1 10 Q
-0.4 ( for) 513.48 641.33 P
3 F
(HelloProcessClass) 180 628.33 T
1 F
(. Notice that the method calls the) 275.19 628.33 T
3 F
(HelloDrawT) 432.07 628.33 T
(ext\050\051) 494.48 628.33 T
1 F
(routine rather than drawing the text directly) 180 615.33 T
(. While this may appear) 386.86 615.33 T
-0.24 (inef\336cient at \336rst \050and is for such a small, simple application\051, there are two) 180 602.33 P
(main reasons why this is done:) 180 589.33 T
(First, it takes advantage of the) 180 569.33 T
1 9 Q
(GEOS) 325.78 569.33 T
1 10 Q
( single imaging model. The method) 351.95 569.33 T
-0.41 (simply creates the proper) 180 556.33 P
3 F
-0.42 (GState) 298.73 556.33 P
1 F
-0.41 ( for drawing to the view window) 334.1 556.33 P
-0.41 (, then calls) 479.07 556.33 P
-0.6 (the drawing routine. A similar message for printing \050i.e. when the user clicks) 180 543.33 P
(on a \322Print\323 trigger) 180 530.33 T
(, a print message may be sent to the Process object\051 can) 267.97 530.33 T
-0.57 (use the same drawing routine\321its handler would simply set up a) 180 517.33 P
3 F
-0.58 (GState) 478.43 517.33 P
1 F
-0.57 ( for) 513.8 517.33 P
-0.35 (drawing to a Spool \336le and then call the drawing routine. Thus, one function) 180 504.33 P
(is used for two purposes, cutting down code size.) 180 491.33 T
-0.01 (Second, it allows more modularity in the testing of your code. If you need to) 180 471.33 P
-0.43 (make sure, for example, that the message is being received and handled, but) 180 458.33 P
(you don\325) 180 445.33 T
(t \050yet\051 care if the drawing is done properly) 217.97 445.33 T
(, you can set up) 411.49 445.33 T
3 F
-0.43 (HelloDrawT) 180 432.33 P
-0.43 (ext\050\051) 242.41 432.33 P
1 F
-0.41 ( as a dummy function. This would allow you to ensure the) 266.3 432.33 P
(message is handled properly without having to debug all the drawing code.) 180 419.33 T
81 386.98 531 399 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 386.98 531 399 R
7 X
0 0 0 1 0 0 0 K
V
76.5 394.23 617.5 397.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 380.31 T
(4-) 147.13 380.31 T
(10 MSG_MET) 156.02 380.31 T
(A_EXPOSED Handler) 218.63 380.31 T
4 F
(This display is part of hello3.goc and follows the previous display directly) 81 365.31 T
(.) 417.58 365.31 T
6 9 Q
(/***********************************************************************) 81 351.98 T
( * MSG_META_EXPOSED for HelloProcessClass) 81 340.98 T
( ***********************************************************************) 81 329.98 T
( * SYNOPSIS:) 81 318.98 T
(Redraw the recently-exposed portion of the View) 168.98 318.98 T
( * PARAMETERS:) 81 307.98 T
(void \050WindowHandle win\051) 168.98 307.98 T
( * SIDE EFFECTS:) 81 296.98 T
(The invalid region of the window is cleared out) 168.98 296.98 T
( *) 81 285.98 T
( * STRATEGY:) 81 274.98 T
(This message is sent by the windowing system when a) 168.98 274.98 T
( *) 81 263.98 T
(portion of the GenView has become invalid, either) 168.98 263.98 T
( *) 81 252.98 T
(because a window that was obscuring it has been moved,) 168.98 252.98 T
( *) 81 241.98 T
(or because some called GrInvalRect.) 168.98 241.98 T
( *) 81 230.98 T
( *) 81 219.98 T
(We redraw the entire document, after telling the) 168.98 219.98 T
( *) 81 208.98 T
(graphics system we\325re drawing to the invalid portion) 168.98 208.98 T
( *) 81 197.98 T
(of the window.) 168.98 197.98 T
( *) 81 186.98 T
(***********************************************************************/) 86.4 175.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "132" 26
%%Page: "133" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(133) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(/* The method is declared with the goc keyword @method. This is followed by) 81 642 T
( * the name of the class that knows how to handle the message \050in this case,) 81 631 T
( * the class is HelloProcessClass\051. Finally, the name of the message that) 81 620 T
( * invokes this method is specified. Other items may also be specified \050such) 81 609 T
( * as a routine name that can be used instead of a message\051, but these are not) 81 598 T
( * required. */) 81 587 T
(@method HelloProcessClass, MSG_META_EXPOSED {) 81 576 T
(/* The local variable gstate will hold a GState handle. We will do) 102.6 558 T
(* our drawing to this gstate. */) 108 547 T
(GStateHandle gstate;) 102.6 536 T
(/* Get a new, default graphics state that we can use while drawing.) 102.6 518 T
(* We must allocate a new graphics state for the View window using) 108 507 T
(* the kernel routine GrCreateState\050\051. We pass the window handle of) 108 496 T
(* the View window, which we received in a parameter called \322win\323. */) 108 485 T
(gstate = GrCreateState\050win\051;) 102.6 467 T
(/* Next, start a window update. This tells the windowing system that) 102.6 449 T
(* we are in the process of drawing to this window. This is very) 108 438 T
(* important\321it ensures the window will be in a consistent state while) 108 427 T
(* we\325re drawing. Specifically, it locks in the invalidated region to) 108 416 T
(* which we\325ll be drawing; this makes sure that other threads drawing) 108 405 T
(* to this window will not have any effect on our GState. A window) 108 394 T
(* update is started by calling the kernel routine GrBeginUpdate\050\051) 108 383 T
(* with the GState handle. */) 108 372 T
(GrBeginUpdate\050gstate\051;) 102.6 354 T
(/* If we had background graphics to draw, we could call the appropriate) 102.6 336 T
(* graphics routines now. But we don\325t. */) 108 325 T
(/* Draw our text into the window \050pass the GState\051. This is done here) 102.6 307 T
(* by calling the function HelloDrawText\050\051, which knows how to draw) 108 296 T
(* the appropriate document. \050See below.\051 */) 108 285 T
(HelloDrawText\050gstate\051;) 102.6 267 T
(/* Special Hello World routine \050below\051. */) 256.5 267 T
(/* Now end the window update \050unlock the GState and its window\051) 102.6 249 T
(* with the routine GrEndUpdate\050\051, and free the GState handle by calling) 108 238 T
(* the kernel routine GrDestroyState\050\051. */) 108 227 T
(GrEndUpdate\050gstate\051;) 102.6 209 T
(/* Signal that we are done with) 256.5 209 T
( * the window update. */) 256.5 198 T
(GrDestroyState\050gstate\051;) 102.6 187 T
(/* Destroy the temporary GState. */) 256.5 187 T
(}) 81 176 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "133" 27
%%Page: "134" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(134) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(/***********************************************************************) 81 642 T
( * MSG_HELLO_REDRAW_DOCUMENT for HelloProcessClass) 81 631 T
( ***********************************************************************) 81 620 T
( * SYNOPSIS:) 81 609 T
(Force the document to be redrawn by marking the) 168.98 609 T
( *) 81 598 T
(entire document area in the view as invalid.) 168.98 598 T
( * PARAMETERS:) 81 587 T
(void \050void\051) 168.98 587 T
( * SIDE EFFECTS:) 81 576 T
(Any drawing to the document area between this) 168.98 576 T
( *) 81 565 T
(message and the MSG_META_EXPOSED that it generates) 168.98 565 T
( *) 81 554 T
(will not show up, as the entire window will be invalid.) 168.98 554 T
(*) 86.4 543 T
( ***********************************************************************/) 81 532 T
(@method HelloProcessClass, MSG_HELLO_REDRAW_DOCUMENT) 81 514 T
({) 81 503 T
(/* Now create a temporary GState to use for window invalidation) 102.6 485 T
( * if the window handle is valid, then redraw the window. */) 102.6 474 T
(if \050winHan != 0\051 {) 102.6 463 T
(GStateHandle gstate = GrCreateState\050winHan\051;) 125 452 T
(/* Call GrInvalRect using the GState. Invalidate the entire) 125 441 T
( * document. This will cause the View to redraw itself and send) 125 430 T
( * a MSG_META_EXPOSED to the Process object. */) 125 419 T
(GrInvalRect\050gstate, 0, 0, HORIZ_DOC_SIZE, VERT_DOC_SIZE\051;) 125 408 T
(GrDestroyState\050gstate\051;) 125 397 T
(/* Free the GState. */) 301 397 T
(}) 102.6 386 T
(}) 81 375 T
(/***********************************************************************) 81 357 T
( * HelloDrawText) 81 346 T
( ***********************************************************************) 81 335 T
( * SYNOPSIS:) 81 324 T
(Draw a single line of text onto the document. Note) 168.98 324 T
( *) 81 313 T
(that it has no concept of the screen or the view --) 168.98 313 T
( *) 81 302 T
(it is given a graphics state and draws through it.) 168.98 302 T
( * CALLED BY:) 81 291 T
(\050INTERNAL\051 HelloProcess::MSG_META_EXPOSED) 168.98 291 T
( * RETURN:) 81 280 T
(nothing) 168.98 280 T
( * SIDE EFFECTS:) 81 269 T
(attributes in the gstate are altered) 168.98 269 T
( *) 81 258 T
( * STRATEGY:) 81 247 T
(We separate the drawing from the exposure handler) 168.98 247 T
( *) 81 236 T
(so the same routine can be used for both window) 168.98 236 T
( *) 81 225 T
(refresh and for printing.) 168.98 225 T
( *) 81 214 T
( *) 81 203 T
(Set the font, point size and color, then draw the text.) 168.98 203 T
( *) 81 192 T
(***********************************************************************/) 86.4 181 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "134" 28
%%Page: "135" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Source File and Source Code) 334.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(135) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
(/* Functions are declared as they would be in C. Parameters are defined using) 81 642 T
( * the ANSI calling convention: The type of the parameter is given, followed) 81 631 T
( * by the parameter name. Multiple parameters are separated by commas. This) 81 620 T
( * function has a single parameter. */) 81 609 T
(void HelloDrawText\050GStateHandle gstate\051 {) 81 591 T
(/* First change some of the default GState values such as the font) 102.6 573 T
(* and point size. This is done with the routine GrSetFont\050\051. */) 108 562 T
(GrSetFont\050gstate, FID_DTC_URW_ROMAN, MakeWWFixed\050TEXT_POINT_SIZE\051\051;) 102.6 551 T
(/* Set the text color to the value in helloTextColor by calling the) 102.6 533 T
(* graphics routine GrSetTextColor\050\051. */) 108 522 T
(GrSetTextColor\050gstate, CF_INDEX, helloTextColor, 0, 0\051;) 102.6 511 T
(/* Draw the text onto the document by using the GrDrawText\050\051 routine. */) 102.6 493 T
(GrDrawText\050gstate, TEXT_X_POSITION, TEXT_Y_POSITION,) 102.6 482 T
(\322Welcome to GEOS!\323, 0\051;) 212.5 471 T
(}) 81 460 T
81 435.98 531 448 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 435.98 531 448 R
7 X
0 0 0 1 0 0 0 K
V
76.5 443.23 617.5 446.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.4.4.3) 119.19 404.64 T
(Handling Messages from the T) 180 404.64 T
(riggers) 382.27 404.64 T
1 10 Q
(When the user clicks on one of the two triggers in the Color dialog box, the) 180 382.31 T
(pressed trigger sends off a message to the Hello W) 180 369.31 T
(orld Process object. The) 412.05 369.31 T
(Blue trigger sends) 180 356.31 T
1 9 Q
(MSG_HELLO_CHANGE_TO_BLUE) 267.59 356.31 T
1 10 Q
(, and the Gold trigger) 420.43 356.31 T
(sends) 180 343.31 T
1 9 Q
(MSG_HELLO_CHANGE_TO_GOLD) 208.89 343.31 T
1 10 Q
(. The Process object must be able to) 362.4 343.31 T
(handle both of these messages.) 180 330.31 T
(The methods that handle these messages are similar) 180 310.31 T
(. Each sets the global) 423.19 310.31 T
(variable) 180 297.31 T
3 F
(helloT) 220.57 297.31 T
(extColor) 252.61 297.31 T
1 F
(, and each forces the view window to redraw itself) 296.69 297.31 T
(\050by sending) 180 284.31 T
1 9 Q
(MSG_HELLO_REDRA) 235.93 284.31 T
(W_DOCUMENT) 331.27 284.31 T
1 10 Q
( to the Process\051 so the color) 400.77 284.31 T
-0.24 (is changed on the screen as well as in our variable. Code Display) 180 271.31 P
-0.24 (4-) 478.3 271.31 P
-0.24 (1) 487.2 271.31 P
-0.24 (1 shows) 492.2 271.31 P
(the code and comments of both these methods.) 180 258.31 T
81 225.95 531 237.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 225.95 531 237.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 233.2 617.5 236.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 219.29 T
(4-) 147.13 219.29 T
(1) 156.02 219.29 T
(1 Handlers for MSG_HELLO_\311) 161.03 219.29 T
4 F
(This display is part of hello3.goc and follows the previous display directly) 81 204.29 T
(.) 417.58 204.29 T
6 9 Q
(/***********************************************************************) 81 190.95 T
( * MSG_HELLO_CHANGE_TO_BLUE for HelloProcessClass) 81 179.95 T
( ***********************************************************************) 81 168.95 T
( * SYNOPSIS:) 81 157.95 T
(Set the text color to dark blue and redraw the text.) 168.98 157.95 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "135" 29
%%Page: "136" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(136) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 9 Q
0 X
( * PARAMETERS:) 81 642 T
(void \050void\051) 168.98 642 T
( * SIDE EFFECTS:) 81 631 T
(helloTextColor is set to C_BLUE) 168.98 631 T
( *) 81 620 T
(***********************************************************************/) 86.4 609 T
(@method HelloProcessClass, MSG_HELLO_CHANGE_TO_BLUE {) 81 591 T
(helloTextColor = C_BLUE;) 102.6 580 T
(/* Set the helloTextColor variable to blue. */) 256.5 580 T
(@call self::MSG_HELLO_REDRAW_DOCUMENT\050\051;) 102.6 569 T
(}) 81 558 T
(/***********************************************************************) 81 540 T
( * MSG_HELLO_CHANGE_TO_GOLD for HelloProcessClass) 81 529 T
( ***********************************************************************) 81 518 T
( * SYNOPSIS:) 81 507 T
(Set the text color to yellow and redraw the text.) 168.98 507 T
( * PARAMETERS:) 81 496 T
(void \050void\051) 168.98 496 T
( * SIDE EFFECTS:) 81 485 T
(helloTextColor is set to C_YELLOW) 168.98 485 T
( *) 81 474 T
(***********************************************************************/) 86.4 463 T
(@method HelloProcessClass, MSG_HELLO_CHANGE_TO_GOLD) 81 445 T
({) 81 434 T
(helloTextColor = C_YELLOW; /* Set the helloTextColor variable to gold. */) 102.6 423 T
(@call self::MSG_HELLO_REDRAW_DOCUMENT\050\051;) 102.6 412 T
(}) 81 401 T
81 376.98 531 389 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 376.98 531 389 R
7 X
0 0 0 1 0 0 0 K
V
76.5 384.23 617.5 387.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(4.5) 142.54 326.98 T
0 24 Q
(Exercises and Suggestions) 180 326.98 T
1 10 Q
(After studying the Hello W) 180 301.31 T
(orld sample application and reading the System) 304.26 301.31 T
(Architecture chapter) 180 288.31 T
(, you may be ready to try some exercises before) 275.35 288.31 T
-0.4 (embarking on your application. It is strongly suggested that you spend some) 180 275.31 P
(time modifying the Hello W) 180 262.31 T
(orld program to get used to the programming) 307.05 262.31 T
-0.76 (environment and the Goc) 180 249.31 P
1 9 Q
-0.68 (UI) 296.79 249.31 P
1 10 Q
-0.76 ( de\336nition syntax. Some things you might try are) 307.79 249.31 P
-0.47 (outlined below\321some are extremely easy; some are more dif\336cult. Some will) 180 236.31 P
-0.27 (require you to read other chapters in this and the User Interface manual. In) 180 223.31 P
(any case, you should go on to read \322GEOS Programming,\323 Chapter) 180 210.31 T
(5, to) 489.85 210.31 T
(understand the various keywords and constructs of the Goc programming) 180 197.31 T
(language.) 180 184.31 T
-0.08 (Some simple) 180 164.31 P
1 9 Q
-0.07 (UI) 241.15 164.31 P
1 10 Q
-0.08 ( exercises you can incorporate into the Hello W) 252.15 164.31 P
-0.08 (orld program) 467.83 164.31 P
(include the following suggestions:) 180 151.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "136" 30
%%Page: "137" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Exercises and Suggestions) 375.93 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(137) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.5) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.05 (Add a new menu item that brings up a dialog box letting the user select) 198 641.33 P
(a point size for the text. In the dialog box you would use a GenV) 198 629.33 T
(alue) 492.49 629.33 T
-0.74 (object or perhaps a list of point sizes \050or even one or more triggers\051 to take) 198 617.33 P
-0.23 (the user) 198 605.33 P
-0.23 (\325) 236.28 605.33 P
-0.23 (s input. The GenV) 237.95 605.33 P
-0.23 (alue sends out a message with a new number) 320.98 605.33 P
-0.58 (when the user sets it, and your Process object would handle this message) 198 593.33 P
-0.02 (and set the point size. Y) 198 581.33 P
-0.02 (our) 307.94 581.33 P
3 F
-0.02 (HelloDrawT) 326.25 581.33 P
-0.02 (ext\050\051) 388.66 581.33 P
1 F
-0.02 ( routine would then have) 412.55 581.33 P
(to set the point size of the text as well as the color) 198 569.33 T
(.) 427.48 569.33 T
2 F
(u) 180 550.33 T
1 F
(Add a feature that lets the user set the position and/or rotation of the) 198 550.33 T
(text. This exercise will help you get used to the) 198 538.33 T
1 9 Q
(GEOS) 417.66 538.33 T
1 10 Q
( coordinate space.) 443.83 538.33 T
2 F
(u) 180 519.33 T
1 F
-0.79 (Make HelloV) 198 519.33 P
-0.79 (iew scalable. T) 257.33 519.33 P
-0.79 (o do this, you will create a new menu or dialog) 322.82 519.33 P
(box that lets the user specify the scale. Most likely you will create a) 198 507.33 T
(number of GenT) 198 495.33 T
(riggers that apply a pre-speci\336ed scale; each of these) 272.94 495.33 T
(triggers will send) 198 483.33 T
1 9 Q
(MSG_GEN_VIEW_SET_SCALE_F) 281.34 483.33 T
(ACTOR) 426.01 483.33 T
1 10 Q
( to HelloV) 458.51 483.33 T
(iew) 504.36 483.33 T
(.) 519.38 483.33 T
(Y) 198 471.33 T
(ou may even try using a) 203.93 471.33 T
3 F
(GenV) 317.65 471.33 T
(iewControlClass) 345.72 471.33 T
1 F
( object.) 431.28 471.33 T
2 F
(u) 180 452.33 T
1 F
-0.01 (Add background graphics to get used to the coordinate system. Perhaps) 198 452.33 P
(draw a colored rectangle behind the text that changes colors to be the) 198 440.33 T
(inverse of the text \050i.e. when the text turns blue, the rectangle turns) 198 428.33 T
(yellow\051.) 198 416.33 T
2 F
(u) 180 397.33 T
1 F
-0.75 (Add printing. This is not nearly as dif\336cult as you might think. T) 198 397.33 P
-0.75 (o do this,) 488.62 397.33 P
-0.32 (you should read \322The Spool Library) 198 385.33 P
-0.32 (,\323 Chapter) 359.2 385.33 P
-0.32 (17 of the Object Reference) 409.08 385.33 P
(Book, about the spooler and the spool control object. This exercise) 198 373.33 T
-0.26 (essentially consists of adding a trigger to invoke printing and a message) 198 361.33 P
(handler for the printing message. This handler will create a printing) 198 349.33 T
-0.28 (GState and call the drawing routine. Instead of drawing to the screen, it) 198 337.33 P
(draws to the Spooler) 198 325.33 T
(\325) 293.56 325.33 T
(s input.) 295.23 325.33 T
(Some of the exercises may have been implemented in the sample programs) 180 306.33 T
(provided. Y) 180 293.33 T
(ou should look through the samples for insight into how the) 231.67 293.33 T
(exercises may be completed. Y) 180 280.33 T
(ou are also encouraged to make up your own) 318.72 280.33 T
(exercises to build on Hello W) 180 267.33 T
(orld.) 313.16 267.33 T
-0.47 (If you are new to) 180 247.33 P
1 9 Q
-0.43 (GEOS) 258.19 247.33 P
1 10 Q
-0.47 ( programming, you should work through the T) 284.37 247.33 P
-0.47 (utorial;) 494.61 247.33 P
-0.58 (otherwise, you will likely be overwhelmed by the complexity and depth of the) 180 234.33 P
(system and not know where to begin.) 180 221.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "137" 31
%%Page: "138" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(First Steps: Hello World) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(138) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "138" 32
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 32
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%+ Times-Roman
%%+ Courier
%%+ Courier-BoldOblique
%%EOF
