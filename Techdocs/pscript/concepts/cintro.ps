%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 9 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "37" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Overview of The Documentation) 344.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(37) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
(Congratulations on taking the \336rst step towards programming for) 180 609.33 T
1 9 Q
(GEOS) 487.43 609.33 T
1 10 Q
(.) 513.6 609.33 T
(This system will most likely be unlike anything you have programmed for) 180 596.33 T
(before; among the main goals of the system design were to simplify) 180 583.33 T
(development of applications and to incorporate many common application) 180 570.33 T
(and User Interface features within the system software.) 180 557.33 T
0 14 Q
(1.1) 142.54 505 T
0 24 Q
(Overview of The) 180 505 T
(Documentation) 180 477 T
1 10 Q
(These manuals represent the initial non-Beta release of technical) 180 451.33 T
(documentation for the) 180 438.33 T
1 9 Q
(GEOS) 285 438.33 T
1 10 Q
( operating system. These manuals should) 311.17 438.33 T
(provide you with all the knowledge, both conceptual and reference, to write) 180 425.33 T
(programs for) 180 412.33 T
1 9 Q
(GEOS) 242.4 412.33 T
1 10 Q
(.) 268.57 412.33 T
0 14 Q
(1.1.1) 130.86 370 T
0 18 Q
(What Y) 180 370 T
(ou W) 239.67 370 T
(ill Learn) 283.5 370 T
1 10 Q
-0.2 (This documentation provides everything you need to write a complete) 180 346.33 P
1 9 Q
-0.18 (GEOS) 502.25 346.33 P
1 10 Q
(application. It includes in-depth conceptual and reference material about) 180 333.33 T
(every exported kernel routine and system object.) 180 320.33 T
(These books will teach you about) 180 300.33 T
1 9 Q
(GEOS) 335.04 300.33 T
1 10 Q
(\321how the operating system works,) 361.21 300.33 T
-0.5 (from \336le management to messaging to object creation and destruction. If you) 180 287.33 P
-0.02 (read everything in these books, you should be able to create the source code) 180 274.33 P
-0.18 (for not only simple applications but even applications of medium complexity) 180 261.33 P
-0.18 (.) 528.22 261.33 P
0 14 Q
(1.1.2) 130.86 219 T
0 18 Q
(What Y) 180 219 T
(ou Are Expected T) 239.67 219 T
(o Know) 396.38 219 T
1 10 Q
(This documentation relies heavily on the reader) 180 195.33 T
(\325) 402.05 195.33 T
(s knowledge of the) 403.72 195.33 T
1 9 Q
(C) 491.88 195.33 T
1 10 Q
(programming language and of Object-Oriented Programming \050) 180 182.33 T
1 9 Q
(OOP) 468.9 182.33 T
1 10 Q
(\051) 488.91 182.33 T
-0.59 (concepts. If you are unfamiliar with either of these topics, you should become) 180 169.33 P
(familiar with them before continuing.) 180 156.33 T
81 144 531 648 C
235.5 633 376.5 638 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.5 633 376.5 638 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
0 -208 1000 792 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 1
%%Page: "38" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(38) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Y) 180 641.33 T
(ou are also expected to have a working familiarity with Geoworks\250) 185.93 641.33 T
-0.07 (products. W) 180 628.33 P
-0.07 (orking familiarity with the software is important to understand) 234.74 628.33 P
(the features of the system from the user) 180 615.33 T
(\325) 365.55 615.33 T
(s perspective. In addition, many) 367.22 615.33 T
(User Interface concepts are illustrated with examples from the retail) 180 602.33 T
(products.) 180 589.33 T
0 14 Q
(1.1.3) 130.86 547 T
0 18 Q
(Roadmap to the Development Kit) 180 547 T
1 10 Q
(The developer kit documentation is separated into several books. Each of) 180 523.33 T
(these books has a primary purpose; together) 180 510.33 T
(, they should give you all the) 384.28 510.33 T
(information you need to know about) 180 497.33 T
1 9 Q
(GEOS) 349.47 497.33 T
1 10 Q
( and how to program for it. The) 375.64 497.33 T
(books are) 180 484.33 T
3 F
(T) 135 464.33 T
(utorial) 141.51 464.33 T
1 F
-0.03 (The T) 198 464.33 P
-0.03 (utorial describes how to set up your system, how to begin running) 224.49 464.33 P
(the tools, and how to get started programming) 198 452.33 T
1 9 Q
(GEOS) 415.25 452.33 T
1 10 Q
( applications. It) 441.42 452.33 T
(takes you step-by-step through modifying, compiling, and debugging a) 198 440.33 T
(sample program.) 198 428.33 T
3 F
(Concepts Book) 135 409.33 T
1 F
-0.59 (This is the Concepts Book. This book explains the structure and concepts) 198 397.33 P
(of creating a) 198 385.33 T
1 9 Q
(GEOS) 258.19 385.33 T
1 10 Q
( application. It will help you plan and create the) 284.36 385.33 T
(structure of your applications and libraries, and it details all the) 198 373.33 T
-0.06 (functions of the) 198 361.33 P
1 9 Q
-0.06 (GEOS) 272.24 361.33 P
1 10 Q
-0.06 ( kernel. It describes which system objects you will) 298.42 361.33 P
(want to use for various situations and to get various results.) 198 349.33 T
3 F
(Objects Book) 135 330.33 T
1 F
(The Objects Book contains C reference information and detailed,) 198 318.33 T
-0.45 (in-depth discussion of each of the system-provided objects. This book is a) 198 306.33 P
-0.68 (hybrid of the traditional reference and conceptual manuals; each chapter) 198 294.33 P
(contains both a detailed description of and a detailed reference for each) 198 282.33 T
-0.32 (object. In most cases, each object is given its own chapter) 198 270.33 P
-0.32 (. In some cases,) 457.63 270.33 P
(however) 198 258.33 T
(, several related objects share a single chapter) 235.96 258.33 T
(.) 448.76 258.33 T
3 F
(Esp Manual) 135 239.33 T
1 F
(The Esp manual describes Esp,) 198 227.33 T
1 9 Q
(GEOS) 345.61 227.33 T
1 10 Q
(\325) 371.78 227.33 T
(s) 373.45 227.33 T
1 9 Q
(OOP) 380.86 227.33 T
1 10 Q
( assembly language, the) 400.87 227.33 T
(language in which most of the) 198 215.33 T
1 9 Q
(GEOS) 339.5 215.33 T
1 10 Q
( kernel is written. Using Esp, you) 365.67 215.33 T
(will be able to write optimized routines and applications to handle your) 198 203.33 T
(most processing-intensive tasks.) 198 191.33 T
3 F
(C Reference Book) 135 172.33 T
1 F
(The Routines Book details the data structures, routines, and other) 198 160.33 T
(typical reference material you\325ll need. It focuses on the routines and) 198 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "38" 2
%%Page: "39" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Overview of The Documentation) 344.07 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(39) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(functions provided by the) 198 641.33 T
1 9 Q
(GEOS) 318 641.33 T
1 10 Q
( kernel including the Graphics System) 344.17 641.33 T
(and Memory Management.) 198 629.33 T
3 F
(Esp Reference Book) 135 610.33 T
1 F
(The Esp reference book provides Esp \050assembly-language\051 information) 198 598.33 T
-0.17 (for the structures and routines used by the) 198 586.33 P
1 9 Q
-0.16 (GEOS) 397.35 586.33 P
1 10 Q
-0.17 ( kernel and the system) 423.52 586.33 P
(libraries.) 198 574.33 T
3 F
(T) 135 555.33 T
(ools Manual) 141.3 555.33 T
1 F
(The T) 198 543.33 T
(ools manual describes all the tools included with the) 224.31 543.33 T
1 9 Q
(SDK) 468.98 543.33 T
1 10 Q
(. It) 488.65 543.33 T
(includes descriptions of the system setup, the Swat debugger) 198 531.33 T
(, the icon) 478.76 531.33 T
-0.73 (editor) 198 519.33 P
-0.73 (, the localization tools, the) 224.48 519.33 P
1 9 Q
-0.66 (GEOS) 344.92 519.33 P
1 10 Q
-0.73 ( initialization \336le, and all the other) 371.09 519.33 P
(tools in the system. In addition, it also details the T) 198 507.33 T
(ool Command) 435.47 507.33 T
-0.1 (Language, which allows you to extend Swat\325) 198 495.33 P
-0.1 (s functionality for your own) 401.14 495.33 P
(purposes.) 198 483.33 T
3 F
(Objects Quick-Reference Manual) 135 464.33 T
1 F
(The Quick-Reference manual is a handy booklet that has not text) 198 452.33 T
(information, but rather all the pass and return and de\336nition) 198 440.33 T
(information for all the object classes in) 198 428.33 T
1 9 Q
(GEOS) 379.87 428.33 T
1 10 Q
(. It should be used after) 406.04 428.33 T
(you\325ve become familiar with the concepts of the system.) 198 416.33 T
0 14 Q
(1.1.4) 130.86 375 T
0 18 Q
(T) 180 375 T
(ypographical Cues) 189.67 375 T
1 10 Q
-0.21 (Throughout these manuals, you will see several words in bold or italics, and) 180 351.33 P
-0.05 (you will read several code examples. For the most part, there are four types) 180 338.33 P
(of typographical cues that you will encounter:) 180 325.33 T
2 F
(u) 180 305.33 T
1 F
(Book Symbols) 198 305.33 T
(Each book in this developer kit documentation is designated a special) 198 293.33 T
-0.44 (shape to help you identify it quickly on the shelf. Wherever possible, this) 198 281.33 P
-0.22 (shape is used along with the book title \050in cross-references, for example\051.) 198 269.33 P
2 F
(u) 180 250.33 T
1 F
(Boldface T) 198 250.33 T
(ext) 245.97 250.33 T
(Boldface text is used to denote) 198 238.33 T
1 9 Q
(GEOS) 341.16 238.33 T
1 10 Q
( class names, routine and function) 367.33 238.33 T
(names, and data structures. It is also used for \336le names, as-typed) 198 226.33 T
(commands, and headers of many lists.) 198 214.33 T
2 F
(u) 180 195.33 T
1 F
(Italic T) 198 195.33 T
(ext) 230.79 195.33 T
(Italic text is used to denote terms that can be found in the glossary) 198 183.33 T
(,) 506 183.33 T
(parameters passed to routines and messages, and \337ags. V) 198 171.33 T
(ariables are) 463.97 171.33 T
(often also designated with italics. Note, however) 198 159.33 T
(, that \337ags that are all) 421 159.33 T
(capital letters are not in italics.) 198 147.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 3
%%Page: "40" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(40) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(Monospace Font) 198 641.33 T
(Monospace font is used for all code samples and illustrations of) 198 629.33 T
(commands. It is also used as a subheading for sections that describe) 198 617.33 T
(particular routines, messages, and data structures.) 198 605.33 T
0 14 Q
(1.2) 142.54 554 T
0 24 Q
(Chapters in the Books) 180 554 T
1 10 Q
-0.35 (This section of this chapter lists all the chapters in each of the main books of) 180 528.33 P
(this documentation.) 180 515.33 T
0 14 Q
(1.2.1) 130.86 473 T
0 18 Q
(The Concepts Book) 180 473 T
1 10 Q
(The Concepts Book describes not only the concepts of the) 180 449.33 T
1 9 Q
(GEOS) 445.56 449.33 T
1 10 Q
( system but) 471.73 449.33 T
(also the steps and components of applications. T) 180 436.33 T
(ypically) 402.29 436.33 T
(, a reader will read) 437.11 436.33 T
(straight through the \336rst six chapters and then choose whichever order of) 180 423.33 T
-0.4 (chapters suits her or him best after that. The book is designed for sequential) 180 410.33 P
(reading, however) 180 397.33 T
(.) 258.89 397.33 T
3 F
(1) 180 377.33 T
1 F
(Concepts Introduction) 198 377.33 T
-0.62 (This chapter describes the structure and components of the developer kit) 198 365.33 P
(documentation and of each book in it. Y) 198 353.33 T
(ou are reading the Concepts) 379.7 353.33 T
(Introduction now) 198 341.33 T
(.) 276.7 341.33 T
3 F
(2) 180 322.33 T
1 F
(Building an Application) 198 322.33 T
-0.29 (This gives a terse, feature-by-feature listing of chapters you will want to) 198 310.33 P
-0.21 (read for various topics. It is much like this section except it is by feature) 198 298.33 P
(rather than by sequence.) 198 286.33 T
3 F
(3) 180 267.33 T
1 F
(System Architecture) 198 267.33 T
(This describes the architecture of) 198 255.33 T
1 9 Q
(GEOS) 354.85 255.33 T
1 10 Q
( and the part that each of its) 381.02 255.33 T
-0.44 (components plays. It describes how applications and libraries \336t into the) 198 243.33 P
(scheme of) 198 231.33 T
1 9 Q
(GEOS) 245.96 231.33 T
1 10 Q
( as a whole, and it enumerates the mechanisms used) 272.13 231.33 T
(throughout the system.) 198 219.33 T
3 F
(4) 180 200.33 T
1 F
(First Steps: Hello W) 198 200.33 T
(orld) 291.35 200.33 T
(This is an in-depth look at the basics of a) 198 188.33 T
1 9 Q
(GEOS) 390.27 188.33 T
1 10 Q
( application through a) 416.44 188.33 T
(detailed example. It uses a program appropriately titled Hello W) 198 176.33 T
(orld;) 496.56 176.33 T
-0.64 (this program draws a primary window) 198 164.33 P
-0.64 (, creates a scrolling window) 371.86 164.33 P
-0.64 (, draws) 495.79 164.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 4
%%Page: "41" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Chapters in the Books) 409.42 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(41) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(text in the window) 198 641.33 T
(, and uses a menu and dialog box to allow the user to) 283.39 641.33 T
(change the color of the text.) 198 629.33 T
3 F
(5) 180 610.33 T
1 9 Q
(GEOS) 198 610.33 T
1 10 Q
( Programming) 224.17 610.33 T
-0.38 (This describes all the keywords available in the) 198 598.33 P
1 9 Q
-0.34 (GEOS) 417.44 598.33 P
1 10 Q
-0.38 ( Goc programming) 443.61 598.33 P
(language. It also discusses data types and the) 198 586.33 T
1 9 Q
(GEOS) 412.3 586.33 T
1 10 Q
( object system. It) 438.47 586.33 T
(describes how objects are created and destroyed and how classes are) 198 574.33 T
(used.) 198 562.33 T
3 F
(6) 180 543.33 T
1 F
(Applications and Geodes) 198 543.33 T
-0.5 (This details how an application and other geodes \050) 198 531.33 P
1 9 Q
-0.44 (GEOS) 425.93 531.33 P
1 10 Q
-0.5 ( executables\051 are) 452.1 531.33 P
(loaded and shut down. This chapter also discusses several things that) 198 519.33 T
(may be of importance to application programmers such as saving user) 198 507.33 T
(options and other system utilities.) 198 495.33 T
3 F
(7) 180 476.33 T
1 F
(The Clipboard) 198 476.33 T
(This is about the Clipboard and the quick-transfer data transfer) 198 464.33 T
-0.28 (mechanism. The Clipboard implements the cut, copy) 198 452.33 P
-0.28 (, and paste features) 438.02 452.33 P
(usually found in the Edit menu of an application. The quick-transfer) 198 440.33 T
(mechanism implements the \322drag-and-drop\323 functionality inherent in) 198 428.33 T
(text objects and available to applications for all data formats.) 198 416.33 T
3 F
(8) 180 397.33 T
1 F
(Localization) 198 397.33 T
(This discusses how developers can localize their applications for) 198 385.33 T
(international markets. It discusses not only the Localization Driver but) 198 373.33 T
(also how to plan ahead when writing your applications.) 198 361.33 T
3 F
(9) 180 342.33 T
1 F
(General Change Noti\336cation) 198 342.33 T
-0.38 (This discusses the General Change Noti\336cation \050) 198 330.33 P
1 9 Q
-0.34 (GCN) 421.12 330.33 P
1 10 Q
-0.38 (\051 mechanism of the) 441.95 330.33 P
-0.57 (kernel. This mechanism allows objects to register interest in a particular) 198 318.33 P
-0.7 (event so that whenever that event occurs, the object will be noti\336ed of the) 198 306.33 P
(change.) 198 294.33 T
3 F
(10) 180 275.33 T
1 F
(The) 198 275.33 T
1 9 Q
(GEOS) 218.56 275.33 T
1 10 Q
( User Interface) 244.73 275.33 T
(This describes in detail how the) 198 263.33 T
1 9 Q
(GEOS) 347.47 263.33 T
1 10 Q
( User Interface works. It gives a) 373.64 263.33 T
(sample application using visible objects \050objects that you use to draw) 198 251.33 T
-0.77 (graphics and to interact with the user\051. This chapter is the \322visible world\323) 198 239.33 P
(counterpart to the Hello W) 198 227.33 T
(orld application of chapter three.) 321.52 227.33 T
3 F
(1) 180 208.33 T
(1) 185.19 208.33 T
1 F
(The Input Manager) 198 208.33 T
-0.24 (This describes how) 198 196.33 P
1 9 Q
-0.22 (GEOS) 287.65 196.33 P
1 10 Q
-0.24 ( accepts, manages, and passes on input events.) 313.83 196.33 P
-0.51 (An input event can be motion of the mouse, use of a stylus, a press on the) 198 184.33 P
(keyboard, a click on a mouse button, or some other event.) 198 172.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 5
%%Page: "42" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(42) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 10 Q
0 X
(12) 180 641.33 T
1 F
(The Geometry Manager) 198 641.33 T
(This describes various ways you can manage the size, position, and) 198 629.33 T
-0.55 (geometry behavior of generic User Interface objects \050e.g. windows, dialog) 198 617.33 P
(boxes, and scrolling view windows\051.) 198 605.33 T
3 F
(13) 180 586.33 T
1 F
(Sound Library) 198 586.33 T
(This details how to use the) 198 574.33 T
1 9 Q
(GEOS) 324.88 574.33 T
1 10 Q
( sound library with different sound) 351.05 574.33 T
(generators.) 198 562.33 T
3 F
(14) 180 543.33 T
1 F
(Handles) 198 543.33 T
(This discusses in detail the concept, implementation, and use of) 198 531.33 T
1 9 Q
(GEOS) 495.26 531.33 T
1 10 Q
(handles. Handles are an integral part of the) 198 519.33 T
1 9 Q
(GEOS) 404.14 519.33 T
1 10 Q
( system for memory) 430.31 519.33 T
-0.27 (management, \336le management, graphics drawing, and message passing.) 198 507.33 P
3 F
(15) 180 488.33 T
1 F
(Memory Management) 198 488.33 T
(This details the) 198 476.33 T
1 9 Q
(GEOS) 273.02 476.33 T
1 10 Q
( memory model and how to allocate, use, and free) 299.19 476.33 T
(up memory for your application.) 198 464.33 T
3 F
(16) 180 445.33 T
1 F
(Local Memory) 198 445.33 T
(This describes how to use local memory) 198 433.33 T
(. Local memory is a mechanism) 379.13 433.33 T
-0.25 (used to store the instance data of objects as well as small chunks of data) 198 421.33 P
(such as strings, small graphics, and database items.) 198 409.33 T
3 F
(17) 180 390.33 T
1 F
(File Systems) 198 390.33 T
(This describes how) 198 378.33 T
1 9 Q
(GEOS) 288.38 378.33 T
1 10 Q
( interacts with the) 314.55 378.33 T
1 9 Q
(DOS) 402.71 378.33 T
1 10 Q
( or other \336le-access) 422.39 378.33 T
-0.82 (system in use. This chapter details how) 198 366.33 P
1 9 Q
-0.74 (GEOS) 377.63 366.33 P
1 10 Q
-0.82 ( applications can open, edit,) 403.8 366.33 P
(close, and manipulate all kinds of \336les. It also discusses how to access) 198 354.33 T
(disks and drives directly) 198 342.33 T
(.) 310.23 342.33 T
3 F
(18) 180 323.33 T
1 F
(V) 198 323.33 T
(irtual Memory) 204.78 323.33 T
-0.41 (This discusses the) 198 311.33 P
1 9 Q
-0.37 (GEOS) 283.62 311.33 P
1 10 Q
-0.41 ( V) 309.8 311.33 P
-0.41 (irtual Memory model. V) 318.94 311.33 P
-0.41 (irtual Memory is used) 427.83 311.33 P
-0.65 (not only to manage memory swapping but also for storing) 198 299.33 P
1 9 Q
-0.58 (GEOS) 460.27 299.33 P
1 10 Q
-0.65 ( data and) 486.44 299.33 P
-0.08 (object \336les. The V) 198 287.33 P
-0.08 (irtual Memory mechanism is an integral part of) 279.19 287.33 P
1 9 Q
-0.07 (GEOS) 502.12 287.33 P
1 10 Q
(and will be used by many applications and libraries.) 198 275.33 T
3 F
(19) 180 256.33 T
1 F
(Database) 198 256.33 T
(This details the Database Library provided with) 198 244.33 T
1 9 Q
(GEOS) 423.98 244.33 T
1 10 Q
(. The Database) 450.15 244.33 T
(Library provides the low-level routines to create, edit, free up, and) 198 232.33 T
(organize individual database items.) 198 220.33 T
3 F
(20) 180 201.33 T
1 F
(Parse Library) 198 201.33 T
(This details the Parse Library) 198 189.33 T
(. This library implements a special) 336.18 189.33 T
(mathematical description language.) 198 177.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 6
%%Page: "43" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Chapters in the Books) 409.42 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(43) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 10 Q
0 X
(21) 180 641.33 T
1 F
(Streams) 198 641.33 T
(This discusses the concept and use of streams, a data-transfer) 198 629.33 T
-0.64 (mechanism to pass data either through hardware ports or across threads) 198 617.33 P
(in) 198 605.33 T
1 9 Q
(GEOS) 210.04 605.33 T
1 10 Q
(. Included in this chapter are the Parallel Driver and Serial) 236.21 605.33 T
(Driver) 198 593.33 T
(, integral in accessing the) 227.44 593.33 T
1 9 Q
(PC) 348.38 593.33 T
1 10 Q
(\325) 360.88 593.33 T
(s communication ports.) 362.55 593.33 T
3 F
(22) 180 574.33 T
1 F
(Graphics Environment) 198 574.33 T
(This describes in detail the) 198 562.33 T
1 9 Q
(GEOS) 325.8 562.33 T
1 10 Q
( coordinate and graphics system. It) 351.97 562.33 T
(covers the coordinate space, how graphics are drawn, the drawing) 198 550.33 T
-0.06 (algorithms, and many other topics. Described herein are) 198 538.33 P
1 9 Q
-0.05 (GEOS) 460.69 538.33 P
1 10 Q
-0.06 ( \322graphic) 486.86 538.33 P
(states\323 and \322graphic strings,\323 both integral parts of) 198 526.33 T
1 9 Q
(GEOS) 436.55 526.33 T
1 10 Q
(.) 462.72 526.33 T
3 F
(23) 180 507.33 T
1 F
(PCCom Library) 198 507.33 T
-0.04 (This explains the use of the) 198 495.33 P
1 9 Q
-0.04 (PC) 327.78 495.33 P
1 10 Q
-0.04 ( communications library) 340.29 495.33 P
-0.04 (. It explains how) 451.7 495.33 P
(a geode may use the library to monitor a serial port, or to transfer \336les) 198 483.33 T
(and information to or from a remote machine.) 198 471.33 T
3 F
(24) 180 452.33 T
1 F
(Graphics) 198 452.33 T
-0.56 (This is an extension of the discussion of chapter twenty-one and explains) 198 440.33 P
(how to draw various shapes. It enumerates your options for drawing) 198 428.33 T
(graphics in) 198 416.33 T
1 9 Q
(GEOS) 252.26 416.33 T
1 10 Q
(, from simple graphics routines to complex graphical) 278.43 416.33 T
(objects provided in the Graphic Object Library) 198 404.33 T
(.) 411.53 404.33 T
-0.38 (The Concepts Book also has four appendixes: The \336rst gives a background of) 180 385.33 P
-0.06 (the) 180 372.33 P
1 9 Q
-0.06 (PC) 197.72 372.33 P
1 10 Q
-0.06 ( architecture. The second gives an in-depth discussion of threads and) 210.22 372.33 P
(thread management. The third describes how to create) 180 359.33 T
1 9 Q
(GEOS) 435.95 359.33 T
1 10 Q
( libraries. The) 462.12 359.33 T
(fourth describes the) 180 346.33 T
1 9 Q
(GEOS) 274.81 346.33 T
1 10 Q
( \337oating-point math library) 300.98 346.33 T
(.) 426.74 346.33 T
0 14 Q
(1.2.2) 130.86 304 T
0 18 Q
(The Object Reference Book) 180 304 T
1 10 Q
(The Object Reference Book is a hybrid of traditional conceptual and) 180 280.33 T
-0.66 (traditional reference books. Each chapter gives both in-depth conceptual and) 180 267.33 P
(usage information as well as speci\336c reference material for the subject) 180 254.33 T
(objects. It is assumed that you will read through a major portion of the) 180 241.33 T
(Concepts Book before embarking on the Object Reference chapters; the) 180 228.33 T
-0.09 (Concepts Book will direct you to the individual objects you will need to read) 180 215.33 P
(about in the Object Reference.) 180 202.33 T
3 F
(1) 180 182.33 T
1 F
(System Classes) 198 182.33 T
-0 (This details the three system classes that handle many of the messages) 198 170.33 P
(and provide much of the built-in functionality for most objects. These) 198 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 7
%%Page: "44" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(44) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(classes are) 198 641.33 T
3 F
(MetaClass) 250.6 641.33 T
1 F
(, the root of the) 303.93 641.33 T
1 9 Q
(GEOS) 377.27 641.33 T
1 10 Q
( class tree;) 403.44 641.33 T
3 F
(ProcessClass) 455.3 641.33 T
1 F
(,) 522.9 641.33 T
(the main class of an application\325) 198 629.33 T
(s process thread; and) 346.18 629.33 T
3 F
(GenProcessClass) 198 617.33 T
1 F
(, the superclass of) 286.52 617.33 T
3 F
(ProcessClass) 372.08 617.33 T
1 F
(.) 439.68 617.33 T
3 F
(2) 180 598.33 T
1 F
(GenClass) 198 598.33 T
(This details) 198 586.33 T
3 F
(GenClass) 255.24 586.33 T
1 F
( and much of the common functionality of all) 303.57 586.33 T
(generic objects. It describes generic object trees, messaging between) 198 574.33 T
-0.84 (generic objects, and using monikers with generic objects. It also discusses) 198 562.33 P
(input issues with respect to the generic hierarchies.) 198 550.33 T
3 F
(3) 180 531.33 T
1 F
(GenApplication) 198 531.33 T
(This covers) 198 519.33 T
3 F
(GenApplicationClass) 253 519.33 T
1 F
(, the class of all application objects.) 362.07 519.33 T
-0.64 (Every application will have an application object as the root of its generic) 198 507.33 P
-0.2 (object tree. This object has no visual representation but handles loading) 198 495.33 P
(and shutting down of the application geode.) 198 483.33 T
3 F
(4) 180 464.33 T
1 F
(GenDisplay/GenPrimary) 198 464.33 T
(This describes the window objects in) 198 452.33 T
1 9 Q
(GEOS) 369.13 452.33 T
1 10 Q
(. The GenPrimary object) 395.3 452.33 T
(provides an application\325) 198 440.33 T
(s primary window; the GenDisplay and Display) 307.46 440.33 T
(Control objects provide window objects for individual documents. W) 198 428.33 T
(ith) 510.04 428.33 T
(these objects, an application can provide multiple scrolling displays) 198 416.33 T
(within its primary window) 198 404.33 T
(.) 320.43 404.33 T
3 F
(5) 180 385.33 T
1 F
(GenT) 198 385.33 T
(rigger) 222.94 385.33 T
-0.24 (This covers) 198 373.33 P
3 F
-0.25 (GenT) 252.52 373.33 P
-0.25 (riggerClass) 280.04 373.33 P
1 F
-0.24 (, the class that implements basic triggers) 339.49 373.33 P
(and buttons in the User Interface.) 198 361.33 T
3 F
(6) 180 342.33 T
1 F
(GenGlyph) 198 342.33 T
(This covers the Glyph class, which allows an application to display a) 198 330.33 T
(small portion of text or graphics without the overhead of other) 198 318.33 T
(, more) 485.05 318.33 T
(complex objects.) 198 306.33 T
3 F
(7) 180 287.33 T
1 F
(GenInteraction) 198 287.33 T
-0.62 (This discusses) 198 275.33 P
3 F
-0.64 (GenInteractionClass) 265.83 275.33 P
1 F
-0.62 (, a versatile class that implements) 373.23 275.33 P
(both menus and dialog boxes.) 198 263.33 T
3 F
(8) 180 244.33 T
1 F
(GenV) 198 244.33 T
(alue) 223.19 244.33 T
(This discusses the GenV) 198 232.33 T
(alue object. This object allows the user to set a) 310.05 232.33 T
(value within a speci\336ed range.) 198 220.33 T
3 F
(9) 180 201.33 T
1 F
(GenV) 198 201.33 T
(iew) 223.67 201.33 T
(This covers the GenV) 198 189.33 T
(iew object. The GenV) 296.45 189.33 T
(iew provides a scrolling) 393.8 189.33 T
-0.23 (window for applications to draw graphics or otherwise display objects or) 198 177.33 P
(data in.) 198 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 8
%%Page: "45" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Chapters in the Books) 409.42 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(45) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 10 Q
0 X
(10) 180 641.33 T
1 F
(The T) 198 641.33 T
(ext Objects) 224.31 641.33 T
(This describes how text is used throughout) 198 629.33 T
1 9 Q
(GEOS) 398.94 629.33 T
1 10 Q
(. Any application that) 425.11 629.33 T
(expects to display text, accept text input, or provide text formatting) 198 617.33 T
(features will use one of the text objects provided by) 198 605.33 T
1 9 Q
(GEOS) 436.91 605.33 T
1 10 Q
(. This chapter) 463.08 605.33 T
(describes how and when to use each of these objects.) 198 593.33 T
3 F
(1) 180 574.33 T
(1) 185.19 574.33 T
1 F
(The List Objects) 198 574.33 T
(This details the different types of lists you can create with the various) 198 562.33 T
(list-related classes including GenBoolean, GenBooleanGroup, GenItem,) 198 550.33 T
(GenItemGroup, and GenDynamicList.) 198 538.33 T
3 F
(12) 180 519.33 T
1 F
(GenControl/GenT) 198 519.33 T
(oolControl) 279.12 519.33 T
(This details the controller and toolbox classes that allow an application) 198 507.33 T
(to use and create controllers. Controller objects automatically build) 198 495.33 T
-0.73 (menus and dialog boxes to manage a certain feature set of an application.) 198 483.33 P
-0.03 (The T) 198 471.33 P
-0.03 (ool Control object allows the user to con\336gure his or her system to) 224.28 471.33 P
(place certain tools either in a \337oating tool box or in various menus.) 198 459.33 T
3 F
(13) 180 440.33 T
1 F
(GenDocument) 198 440.33 T
(This describes the GenDocument and the document control objects.) 198 428.33 T
(These objects help applications manage data \336les \050documents\051 and) 198 416.33 T
(provide the common functionality of New) 198 404.33 T
(, Open, Close, Save, SaveAs,) 387.27 404.33 T
(and Revert.) 198 392.33 T
3 F
(14) 180 373.33 T
1 F
(GenFileSelector) 198 373.33 T
(This describes how and when to use a GenFileSelector object. The) 198 361.33 T
-0.48 (GenFileSelector provides the user interface that allows users to traverse) 198 349.33 P
-0.4 (their \336le systems and view their directories. It also lets them select a \336le) 198 337.33 P
(for opening or other operations.) 198 325.33 T
3 F
(15) 180 306.33 T
1 F
(Help Object Library) 198 306.33 T
(This details the Help Object Library) 198 294.33 T
(. The help object allows your) 364.51 294.33 T
(application to provide context-sensitive help text in a system-standard) 198 282.33 T
-0.45 (way) 198 270.33 P
-0.45 (. The help object will create the user interface and will automatically) 215.6 270.33 P
(provide text linking through your help documents.) 198 258.33 T
3 F
(16) 180 239.33 T
1 F
(Import/Export Library) 198 239.33 T
(This describes the import and export mechanism used by) 198 227.33 T
1 9 Q
(GEOS) 464.32 227.33 T
1 10 Q
(. The) 490.49 227.33 T
(Impex Library connects) 198 215.33 T
1 9 Q
(GEOS) 310.22 215.33 T
1 10 Q
( to individual translation libraries. This) 336.39 215.33 T
(chapter describes not only how to create new translation libraries but) 198 203.33 T
(also how to link them into) 198 191.33 T
1 9 Q
(GEOS) 321.18 191.33 T
1 10 Q
(.) 347.35 191.33 T
3 F
(17) 180 172.33 T
1 F
(Spool Object Library) 198 172.33 T
(This describes the Spool Object Library) 198 160.33 T
(. This library exports classes) 378.95 160.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 9
%%Page: "46" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(46) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(which allow applications to print and otherwise interact with the) 198 641.33 T
1 9 Q
(GEOS) 501.19 641.33 T
1 10 Q
(spooler) 198 629.33 T
(.) 230.22 629.33 T
3 F
(18) 180 610.33 T
1 F
(Graphic Object Library) 198 610.33 T
(This details the Graphic Object Library) 198 598.33 T
(. This library offers several) 379.51 598.33 T
(objects and classes that provide full graphic object editing and display) 198 586.33 T
-0.41 (features. Graphic objects include line, rectangle, ellipse, spline, polyline,) 198 574.33 P
(and polygon, among others.) 198 562.33 T
3 F
(19) 180 543.33 T
1 F
(Ruler Library) 198 543.33 T
(This details the Ruler Library; this library contains vertical and) 198 531.33 T
(horizontal ruler objects which can be connected to text, graphic, and) 198 519.33 T
(spreadsheet views.) 198 507.33 T
3 F
(20) 180 488.33 T
1 F
(Spreadsheet Object Library) 198 488.33 T
-0.26 (This covers the Spreadsheet Object Library) 198 476.33 P
-0.26 (. This library exports several) 396.17 476.33 P
(classes that can be used as the basis of a spreadsheet application when) 198 464.33 T
(used with the Cell, and Parse libraries.) 198 452.33 T
3 F
(21) 180 433.33 T
1 F
(Pen Object Library) 198 433.33 T
(This describes the built-in pen and Ink support of) 198 421.33 T
1 9 Q
(GEOS) 429.87 421.33 T
1 10 Q
(. Pen input can) 456.04 421.33 T
(be managed by a set of special objects that an application may interact) 198 409.33 T
(with.) 198 397.33 T
3 F
(22) 180 378.33 T
1 F
(V) 198 378.33 T
(isClass) 204.78 378.33 T
(This details) 198 366.33 T
3 F
(V) 255.24 366.33 T
(isClass) 262.39 366.33 T
1 F
(, the basic visible object class of) 298.5 366.33 T
1 9 Q
(GEOS) 446.68 366.33 T
1 10 Q
(.) 472.85 366.33 T
3 F
(V) 478.41 366.33 T
(isClass) 485.56 366.33 T
1 F
-0.38 (can be used to create objects that can draw themselves and accept input.) 198 354.33 P
3 F
-0.09 (V) 198 342.33 P
-0.09 (isClass) 205.15 342.33 P
1 F
-0.09 ( is also the ancestor class of many special objects in) 241.26 342.33 P
1 9 Q
-0.08 (GEOS) 480.18 342.33 P
1 10 Q
-0.09 ( \050e.g.) 506.35 342.33 P
(the Ruler Object, the Spreadsheet Object, etc.\051.) 198 330.33 T
3 F
(23) 180 311.33 T
1 F
(Con\336g Library) 198 311.33 T
(This discusses how to write Preferences modules. This is useful for) 198 299.33 T
(programmers who are de\336ning new \336elds in the) 198 287.33 T
1 9 Q
(GEOS.INI) 421.9 287.33 T
1 10 Q
( \336le.) 465.23 287.33 T
3 F
(24) 180 268.33 T
1 F
(V) 198 268.33 T
(isComp) 204.78 268.33 T
-0.56 (This details) 198 256.33 P
3 F
-0.58 (V) 254.12 256.33 P
-0.58 (isCompClass) 261.27 256.33 P
1 F
-0.56 (. This is a subclass of) 327.57 256.33 P
3 F
-0.58 (V) 424.6 256.33 P
-0.58 (isClass) 431.75 256.33 P
1 F
-0.56 ( and provides) 467.86 256.33 P
(additional features such as object tree manipulation and automatic) 198 244.33 T
(geometry management of a visible object\325) 198 232.33 T
(s children.) 387.66 232.33 T
3 F
(25) 180 213.33 T
1 F
(V) 198 213.33 T
(isContent) 204.78 213.33 T
(This details) 198 201.33 T
3 F
(V) 255.24 201.33 T
(isContentClass) 262.39 201.33 T
1 F
(, a subclass of) 340.35 201.33 T
3 F
(V) 406.85 201.33 T
(isCompClass) 414 201.33 T
1 F
(. The) 480.3 201.33 T
(V) 198 189.33 T
(isContent is used to display a visible object tree within a GenV) 204.78 189.33 T
(iew) 494.02 189.33 T
(graphic window and to manage the geometry of several visible objects) 198 177.33 T
(within the window) 198 165.33 T
(.) 283.39 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 10
%%Page: "47" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Chapters in the Books) 409.42 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(47) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 10 Q
0 X
(26) 180 641.33 T
1 F
(Generic System Classes) 198 641.33 T
(This covers several generic system classes that will not ever be used) 198 629.33 T
-0.89 (directly by application programmers. They are provided here, however) 198 617.33 P
-0.89 (, to) 515.54 617.33 P
-0.23 (give reference information about the messages that can be sent to them.) 198 605.33 P
(Included in this chapter are GenSystem, GenScreen, and GenField.) 198 593.33 T
0 14 Q
(1.2.3) 130.86 552 T
0 18 Q
(The T) 180 552 T
(ools Reference Manual) 226.67 552 T
1 10 Q
(The T) 180 528.33 T
(ools Reference manual describes many things about the tools and the) 206.31 528.33 T
(development station setup that you will need to know throughout your) 180 515.33 T
(development period. It contains the following chapters:) 180 502.33 T
3 F
(1) 180 482.33 T
1 F
(Introduction) 198 482.33 T
(This is an outline of the T) 198 470.33 T
(ools Reference Manual.) 316.18 470.33 T
3 F
(2) 180 451.33 T
1 F
(System Con\336guration) 198 451.33 T
-0.82 (This describes the host and target machine setups after the) 198 439.33 P
1 9 Q
-0.73 (SDK) 467.46 439.33 P
1 10 Q
-0.82 ( has been) 487.14 439.33 P
(installed and is working.) 198 427.33 T
3 F
(3) 180 408.33 T
1 F
(Swat Introduction) 198 408.33 T
(This introduces you to Swat, the powerful system debugger supplied in) 198 396.33 T
(the) 198 384.33 T
1 9 Q
(SDK) 215.78 384.33 T
1 10 Q
(. This chapter also gives you the most popular Swat commands) 235.45 384.33 T
(and explains how you can put them to use for you.) 198 372.33 T
3 F
(4) 180 353.33 T
1 F
(Swat Reference) 198 353.33 T
-0.05 (This gives detailed command reference entries for each Swat command.) 198 341.33 P
-0.42 (Y) 198 329.33 P
-0.42 (ou should use this section when you need to know the speci\336cs of one or) 203.93 329.33 P
(more Swat commands.) 198 317.33 T
3 F
(5) 180 298.33 T
1 F
(Debug) 198 298.33 T
-0.11 (This explains how to use the Debug tool, which allows you to simulate a) 198 286.33 P
(number of) 198 274.33 T
1 9 Q
(GEOS) 248 274.33 T
1 10 Q
( platforms and hardware con\336gurations.) 274.17 274.33 T
3 F
(6) 180 255.33 T
1 F
(T) 198 255.33 T
(ool Command Language) 203.75 255.33 T
(This describes T) 198 243.33 T
(cl, the T) 272.57 243.33 T
(ool Command Language that allows you to) 309.25 243.33 T
-0.48 (extend Swat\325) 198 231.33 P
-0.48 (s functionality) 256.61 231.33 P
-0.48 (. Nearly all Swat commands are programmed) 321.7 231.33 P
(in T) 198 219.33 T
(cl, and most are accessible as functions within other T) 215.9 219.33 T
(cl commands.) 465.12 219.33 T
-0.11 (By using T) 198 207.33 P
-0.11 (cl, you can write your own debugger commands or extend the) 247.17 207.33 P
(functionality of Swat\325) 198 195.33 T
(s provided commands.) 296.35 195.33 T
3 F
(7) 180 176.33 T
1 F
(Icon Editor) 198 176.33 T
(This describes how to use the) 198 164.33 T
1 9 Q
(GEOS) 336.35 164.33 T
1 10 Q
( icon editor tool.) 362.52 164.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 11
%%Page: "48" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(48) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
3 10 Q
0 X
(8) 180 641.33 T
1 F
(Resource Editor) 198 641.33 T
(This describes how to use the) 198 629.33 T
1 9 Q
(GEOS) 336.35 629.33 T
1 10 Q
( resource editor tool for localization.) 362.52 629.33 T
3 F
(9) 180 610.33 T
1 F
(The) 198 610.33 T
1 9 Q
(INI) 218.56 610.33 T
1 10 Q
( File) 233.22 610.33 T
-0.02 (This describes the various categories and keys of the) 198 598.33 P
1 9 Q
-0.02 (GEOS) 443.38 598.33 P
1 10 Q
-0.02 (.) 469.55 598.33 P
1 9 Q
-0.02 (INI) 472.33 598.33 P
1 10 Q
-0.02 ( \336le used) 486.99 598.33 P
(by) 198 586.33 T
1 9 Q
(GEOS) 211.71 586.33 T
1 10 Q
(.) 237.88 586.33 T
3 F
(10) 180 567.33 T
1 F
(Using T) 198 567.33 T
(ools) 233.94 567.33 T
(This details all the other tools in the system, including the) 198 555.33 T
(communications utilities, the make utilities,) 198 543.33 T
1 9 Q
(GOC) 405.45 543.33 T
1 10 Q
(, Glue, and others.) 425.95 543.33 T
0 14 Q
(1.2.4) 130.86 502 T
0 18 Q
(The Esp Book) 180 502 T
1 10 Q
(The Esp book describes how to use Esp, the) 180 478.33 T
1 9 Q
(GEOS) 383.36 478.33 T
1 10 Q
( object-oriented assembly) 409.53 478.33 T
(language. Y) 180 465.33 T
(ou can use this language to recode computation-intensive) 233.72 465.33 T
(routines, or to write optimized applications, libraries, or drivers.) 180 452.33 T
3 F
(1) 180 432.33 T
1 F
(Introduction) 198 432.33 T
(This chapter provides a brief introduction to Esp, and contains a) 198 420.33 T
(roadmap to the Esp book.) 198 408.33 T
3 F
(2) 180 389.33 T
1 F
(Esp Basics) 198 389.33 T
(This chapter describes the differences between Esp and other 80x86) 198 377.33 T
(assembly languages \050such as) 198 365.33 T
1 9 Q
(MASM) 333.58 365.33 T
1 10 Q
(\051. It also describes how to de\336ne) 362.74 365.33 T
(classes.) 198 353.33 T
3 F
(3) 180 334.33 T
1 F
(Routine W) 198 334.33 T
(riting) 246.52 334.33 T
(This chapter describes how to write routines and methods \050message) 198 322.33 T
(handlers\051. It also describes Esp\325) 198 310.33 T
(s special facilities for managing stack) 344.12 310.33 T
(frames and sending messages.) 198 298.33 T
3 F
(4) 180 279.33 T
1 F
(The User) 198 279.33 T
(-Interface Compiler) 240.6 279.33 T
(This chapter describes) 198 267.33 T
1 9 Q
(UIC) 304.67 267.33 T
1 10 Q
(, a tool for generating object-blocks for Esp) 322.17 267.33 T
(programs.) 198 255.33 T
0 14 Q
(1.3) 142.54 204 T
0 24 Q
(Suggestions for Study) 180 204 T
1 10 Q
(If you are unfamiliar with programming, you will most likely not be able to) 180 178.33 T
-0.79 (follow this documentation well. Y) 180 165.33 P
-0.79 (ou should have working familiarity with the) 329.83 165.33 P
1 9 Q
-0.14 (C) 180 152.33 P
1 10 Q
-0.16 ( programming language and with Object-Oriented Programming concepts.) 186.5 152.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 12
%%Page: "49" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Suggestions for Study) 408.65 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(49) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(1.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(This documentation will not attempt to teach those subjects. If you are not) 180 641.33 T
(familiar with these subjects, you may have trouble following some of the) 180 628.33 T
(discussions throughout.) 180 615.33 T
(For those ready to begin, it is suggested that you read the \336rst six chapters) 180 595.33 T
(of this book before branching out into different in-depth concepts. From) 180 582.33 T
(there, you should read about the Generic UI objects, with focus on) 180 569.33 T
-0.17 (GenInteraction, GenT) 180 556.33 P
-0.17 (rigger) 280.88 556.33 P
-0.17 (, GenPrimary) 307.91 556.33 P
-0.17 (, and GenV) 369.6 556.33 P
-0.17 (iew) 420.69 556.33 P
-0.17 (. These will build on) 435.7 556.33 P
(the introduction you gained from the \336rst chapters of the Concepts Book.) 180 543.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "49" 13
%%Page: "50" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Introduction) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(50) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(1.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "50" 14
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 14
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Bold
%%EOF
