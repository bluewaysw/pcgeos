%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 20 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Italic FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /NewCenturySchlbk-Bold FMFONTDEFINE
6 0 /Courier-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "299" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Overview) 495.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(299) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
-0.42 (For an application to survive in the) 180 594.33 P
1 9 Q
-0.38 (GUI) 343 594.33 P
1 10 Q
-0.42 ( world today) 361 594.33 P
-0.42 (, it must support at least) 416.28 594.33 P
-0.49 (the ever) 180 581.33 P
-0.49 (-present \322Cut, Copy) 216.92 581.33 P
-0.49 (, and Paste\323 functions to which users have grown) 305.75 581.33 P
(so attached.) 180 568.33 T
1 9 Q
(GEOS) 238.16 568.33 T
1 10 Q
( makes this very simple through the Clipboard and) 264.33 568.33 T
(Quick-T) 180 555.33 T
(ransfer mechanisms.) 216.79 555.33 T
(All applications should support and use these mechanisms in order to) 180 535.33 T
-0.53 (maintain consistency throughout the system. In addition, these mechanisms) 180 522.33 P
(provide certain functionality for data transfer that can be easily used.) 180 509.33 T
(To understand this chapter fully) 180 489.33 T
(, you should have a working knowledge of) 329.08 489.33 T
(V) 180 476.33 T
(irtual Memory management as well as some familiarity with the concepts) 186.78 476.33 T
(of mouse input. However) 180 463.33 T
(, the concepts of the Clipboard and quick-transfer) 294.26 463.33 T
(mechanisms are simple and may be understood without having read those) 180 450.33 T
(sections.) 180 437.33 T
0 14 Q
(7.1) 142.54 385 T
0 24 Q
(Overview) 180 385 T
1 10 Q
-0.02 (The user understands two ways to cut and paste information: The \336rst is to) 180 359.33 P
(use the Edit menu and the) 180 346.33 T
3 F
(Cut) 305.94 346.33 T
1 F
(,) 322.79 346.33 T
3 F
(Copy) 328.35 346.33 T
1 F
(, and) 350.2 346.33 T
3 F
(Paste) 375.95 346.33 T
1 F
( functions. The second is to) 400.76 346.33 T
(use the mouse by selecting and dragging text, graphics, or objects with the) 180 333.33 T
-0.37 (quick-copy and quick-move functions. For a full description of how these two) 180 320.33 P
(operations are accomplished, see the) 180 307.33 T
(user) 351.68 307.33 T
(\325) 372.41 307.33 T
(s guide provided in the Geoworks) 374.08 307.33 T
(retail products.) 180 294.33 T
(Both these functions use similar data structures; a single \337ag determines) 180 274.33 T
(whether the operation is a quick-transfer or a normal Clipboard operation.) 180 261.33 T
(However) 180 248.33 T
(, the procedures and rules of usage have signi\336cant differences.) 220.18 248.33 T
-0.14 (Y) 180 228.33 P
-0.14 (ou should be familiar with the features and uses of both the Clipboard and) 185.93 228.33 P
-0.5 (the quick-transfer mechanism. If you are, you can skip this section; however) 180 215.33 P
-0.5 (,) 525.94 215.33 P
(if you are not familiar with the features and rules governing the Edit menu) 180 202.33 T
(and the quick-transfer operations, you most likely will want to read this) 180 189.33 T
(section.) 180 176.33 T
81 144 531 648 C
235.5 618 376.5 626 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.5 618 376.5 626 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 0 1 0 0 0 K
81 447 171 495.45 C
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 X
0 0 0 1 0 0 0 K
90 450 13.5 13.5 101.25 471.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 471.33 A
0 0 0 1 0 0 0 K
81 451.21 121.5 491.71 R
1 H
0 X
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "299" 1
%%Page: "300" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(300) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(7.1.1) 130.86 636 T
0 18 Q
(Cut, Copy) 180 636 T
(, and Paste) 263.66 636 T
1 10 Q
(Even the simplest, text-using applications provide an Edit menu with the) 180 612.33 T
3 F
(Cut) 180 599.33 T
1 F
(,) 196.85 599.33 T
3 F
(Copy) 202.41 599.33 T
1 F
(, and) 224.26 599.33 T
3 F
(Paste) 250.01 599.33 T
1 F
( options. A sample Edit menu is shown in Figure) 274.82 599.33 T
(7-) 502.63 599.33 T
(1.) 511.52 599.33 T
(The Edit menu works with a hidden data area called the) 180 579.33 T
3 F
(Clipboard) 443.94 579.33 T
1 F
(. The) 490.41 579.33 T
-0.68 (Clipboard has no visual representation, and it can contain any format of data) 180 566.33 P
-0.14 (from text to graphics strings to custom formats de\336ned by applications. The) 180 553.33 P
(Clipboard\325) 180 540.33 T
(s structure and implementation are completely invisible to the) 227.23 540.33 T
(user beyond the functions) 180 527.33 T
3 F
(Cut) 301.85 527.33 T
1 F
(,) 318.7 527.33 T
3 F
(Copy) 324.26 527.33 T
1 F
(, and) 346.11 527.33 T
3 F
(Paste) 371.86 527.33 T
1 F
(.) 396.67 527.33 T
(The most common use of the Edit menu is within a word processor or draw) 180 507.33 T
-0.14 (program. For example, when a user wants to place a graphic from GeoDraw) 180 494.33 P
-0.7 (into GeoW) 180 481.33 P
-0.7 (rite, or when he wants to rearrange text in his NotePad, he can use) 227.27 481.33 P
(the cut, copy) 180 468.33 T
(, and paste operations.) 237.22 468.33 T
(When a user selects an item such as the word \322puddle,\323 the) 180 448.33 T
3 F
(Cut) 455.95 448.33 T
1 F
( option) 472.8 448.33 T
-0.29 (becomes enabled. This indicates that the user can remove the selection from) 180 435.33 P
-0.54 (the document and it will be placed on the Clipboard \050anything already on the) 180 422.33 P
-0.2 (Clipboard will be replaced with the selection\051. When nothing is selected, the) 180 409.33 P
3 F
(Cut) 180 396.33 T
1 F
( option is disabled.) 196.85 396.33 T
-0.38 (In order to enable the) 180 376.33 P
3 F
-0.38 (Copy) 281.07 376.33 P
1 F
-0.38 ( option, the user must select an item, just as with) 304.03 376.33 P
3 F
-0.08 (Cut) 180 363.33 P
1 F
-0.08 (. Copying, however) 196.85 363.33 P
-0.08 (, will not remove the selection from the document\321it) 283.73 363.33 P
(will simply create a copy of the selection and place it on the Clipboard,) 180 350.33 T
(removing whatever had previously been on the Clipboard.) 180 337.33 T
81 144 531 648 C
180 144 531 326.63 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 326.63 R
7 X
0 0 0 1 0 0 0 K
V
181.82 145.81 522 172.63 R
V
0 10 Q
0 X
(Figure) 181.82 165.97 T
(7-) 215.16 165.97 T
(1) 224.05 165.97 T
3 F
(The Edit Menu) 232.39 165.97 T
(The Edit menu of NotePad contains the Cut, Copy) 181.82 151.97 T
(, and Paste items.) 409.95 151.97 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  9105     
220 158 176 126.4 0 182.34 185.8
/red <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFFFFFF55555555AAAAAAAA00000000
> store
/green <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFF5555FFFF5555AA550000AAAA0000
> store
/blue <
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FF55FF55FF55FF55AA00AA00AA00AA00
> store
 BEGINBITMAPCOLORc
z"
RCF0F7
J"
RBF79z"
R>F8F7J$
9FFFFFFJ"=$
<FFFFFFFFJ"
CFFJ$S#
9F0F0F0F0F0J%r#
9FFFFFFFFF0FFFFBx:R
F0CW
Bx
F8
=#J'
FFFF4F8F8F8F8F8F8J"
CF8=#I"=$
F8F8F8F8F8F8J$
9F8F8F88z
R?F77"
F77Z
RB7z
RBF07z
RBF8


=";"?"9"="J"C"9"C"J$9"9"=&G"
FFFFFFFFFF5FFFFFFFFAFFF8FFFFFFFFF8FFF8FFFF=#9#?#8#<"J#C#8#B#J&8#8#<'E#
F8FFFFF8F8FFF8FFF84FFF8F8FFF8FFF8FF?FFF8F8F8FFF8FFF8FFF8FFF8F8F8FFFFF8=$8#9$9*9(9&;$9$=#8#8$;%8$J#8&8$;#8#8$;$8#9"9$9$;$9$;$
FFF8FFF8FFFFF8FFFFF8FFF8FFF8FFF8FFFFF8FFF8FFF8FFFFF8FFF8FFFFF8FFFFF8FFFFF8FFF8FFF8FFFFF8FFF8FFF8FF:F8FFF8FFF8FFF8FFF8FFFFF8FFF8FFF8FFFFF8FFF8FFFFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FF=(8&85;$8&<#8)9,J#8&8$;&8&9)8#8,9,9&
F8FFF8FFF8FFF8FFF8F8F8FF;F8FFF8F8F8FFF8F8F8FFF8FFF8F8F8FFF8F8F8FFF8FFF8F8F8FFF8F8FFF8FFF8F8F8FFF8FFF8FFF8FFF8F8F8FFFFF8F8F8FFF8FFF8F8F8FF9FFF8FFF8F8F8FFF8FFF8F8FFF8FFF8FFF8F8F8FFFFF8F8F8FFF8FFF8FFF8FFF8F8F8FFF8FFF8F8F8FFFFF8F8F8FFF8FFF8F8F8FFFFF8F8F8FF=+8#8#8#8)8&8#<#8#8#;#8&8&8&8#J*8#<&8*9(9#8%8#8)8"8'
FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFFFF8FFF8F8F8FFF8FFF8FFF8FFF8F8F8FFF8FF8F8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8F8F8F8FFF8FFF8F8FFF8F8F8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8=#8'8#8#8#8)8&8#<#8#8#;#8&8&8&8#J*8#<#8-;%;#9#8#8);&
F8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8FFF8F8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF88FFF8F8F8FFF8F8F8FFF8FFF8FFF8FFF8FFF8F8F8FFF8F8F8FFFFF8FFF8F8FFFFF8FFF8FFF8F8F8FFF8FFF8F8FFF8F8F8=#9&8#8#8#8)8&8#<#8#8#;#8&8&8&8#J#8&8#<#8&8&8"8%9"8#8#8&8&9%8"
FFF8F8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFFFF8FFF8F8F8FFF8FFF8FFF8FFF8F8F8FFF8FF8F8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFFFF8FFF8FFF8FFF8FFF8FFF8F8F8FFFFF8FFF8FF=#9)9#8#8)8#8&=#8&;*8*8&J#8&8#<&9,8&8&8.8,
F8FFFFF8F8F8FFF8FFF8F8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8F8FFF8FFF8FFF8F8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF88FFF8FFF8F8F8FFF8FFF8FFF8FFF8F8FFF8FFF8F8F8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8>"9"9$;"9"9$9"9"9%>"9$=r9"9&9$J"9"9"9"=$;$9$9"9"9$9&9&9$9$
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8FFF8F8F8F8F8F8F8F8F8F8F8F8F8F89F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8FFF8F8F8F8F8F8F8F8F8F8F8F8F8F8J%J(J#
O FFF8FFF86FFF8FFF8FFF8FFP%FFF8J$JrJ"
O F8F8F87F8P%F8
7Z
RB7z
RBF07z
RBF8


?$A"J&9";";"9"=&?"
FFF8FFFFP'FFF8FFF8FFFFFFFFFFFFF8FFF8FFFF>&?#J+;":#9#<'>#
FFF8F8F8FFFFF8P&FFF8F8F8F8F8FFF8FFF8F8FFF8F8FFF8FFF8F8F8FFF8FF=#9"8"9&J#:'9"9$9$;#8#8$9#
FFF8F8FFFFF8FFF8FFP&F8FFF8F8F8FFF8FFFFFFF8FFFFF8FFFFF8FFF8FFF8FFFFF8=#;#8'J%9&8#8$9$;#8)8#
F8FFFFF8FFF8F8F8FFF8P'F8FFF8FFFFF8F8F8FFF8FFF8FFF8F8FFF8F8FFF8FFF8FFF8F8F8FFF8FF=#;#8#8#J%8#8&8#:#<#8-
FFF8F8FFF8FFF8FFP(F8F8F8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8=#;#8#8#J&8&8#:#<#8%r"
F8FFFFF8FFF8FFF8P+F8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8FF=#8"8#8#8#J"9&8&8#:#<#8&9%
FFF8FFF8FFF8FFF8FFP'FFFFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFFFF8FFF8=&9&9#J&8#8&8#:#<&9)
F8FFF8FFF8F8FFF8FFF8F8FFP&F8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8F8FFF8FFF8F8F8FF>$;$;"J$9"9"9"9";"=$;$9"
F8F8F8F8F8F8F8P'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8J&
6FFF8FFF8FFJ&
6F8F8F8F8F8




?$J$;"?";"
FFF8FFP3FFF8FFFFFFFF>&J&9#>#;#
FFF8F8F8FFP1FFF8F8F8FFFFF8FFF8F8FF=#9"8$9&9"9"J#8"8$9$8#;#8$;$
FFF8F8FFF8FFFFF8FFF8FFFFFFOJF8FFF8FFF8FFFFF8FFF8FFFFF8FFF8FFFFF8FF=#;&8*8#J#;$8%8#;)9&
F8FFFFF8F8F8FFF8FFF8F8F8FFF8FFF8FFF8OJFFF8F8FFF8FFF8FFF8FFF8F8FFF8FFF8F8F8FFFFF8F8F8FF=#;#8&8&8#J#<#8$9#;&8#8#8"
FFF8F8FFF8FFF8FFF8FFF8F8F8FFF8FFOJF8FFF8FFF8FFF8F8FFFFF8F8F8FFF8FFF8FFF8=#;#8&8&8#J#<#8#:#;&8#9#
F8FFFFF8FFF8F8F8FFF8FFF8FFF8FFF8OJFFF8FFF8FFF8FFF8F8FFF8FFF8FFF8F8FF=#8"8#8&8&8#J#9"8#8#:#;&8%8#
FFF8FFF8FFF8FFF8FFF8FFF8F8F8FFF8FFOJF8FFFFF8FFF8FFF8FFFFF8F8F8FFF8FFF8FFF8FF=&9,9&J&9&:#;&8)
F8FFF8FFF8F8FFF8FFF8F8F8FFF8FFF8F8FFF8FFF8OKF8FFF8FFF8F8FFF8FFF8FFF8F8FFF8FFF8FFF8F8F8FFF8FFF8>$;$8%;%J$;$;"=$9"9$
F8F8F8F8F8F8FFF8F8F8F8F8F8FFOLF8F8F8F8F8F8F8F8F8F8F8F8F8F8>(<#=%
FFF8FFF8FFF8FFF8FFFFF8FFF8>r="=$
F8F8F8F8F8




=PG#JP8#;#9$8#<#
FFFFP FFFFFFFFFFFFFFFFFFFFFF?%J(>#8%
F8F8FFFFP1FFFFF8F8F8FFFFF8F8FFFFF8F8E%9%8"8"8%J#9$8%8"8"8">P9%
FFFFFFFFFFFFFFFFFFFFFFFFFFFFOKF8F8FFFFFFFFFFF8FFFFFFFFFFFFFFFFD08)J"P:%:"8"8"8"@,
FFFFF8F8FFFFF8FFFFF8F8FFFFF8F8F8F8FFFFF8F8FFFFOEF8F8F8FFFFF8F8F8F8F8F8FFFFF8FFFFF8F8FFFF?*9'>#J'J'
FFFFFFF8F8F8FFFFFFF8FFFFF8F8F8FFFFOHF8F8F8F8FFFFDF8FFFFF8F8F8?$8%:%?%J%
F8F8F8FFFFF8F8F8F8FFFFF8F8F8F8PCF8F8FFFFJ'@#J#J'
5FFFFF8F8FFFFFFFFOEFFFFIFFFFF8F8FFFFD%9'8+J"P"H$E'
F8FFFFFFF8FFFFFFFFF8F8FFFFF8F8FFFFFFFFF8OEF8F8F8FFFFF8FFFFFFFFF8=#<&8%:#8%J&8#8&8#;#;&8#8%
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8OGF8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8=S
=s
F8
7Z
RB7z
RBF07z
RBF8


=&?"A"J$A"
FFF8FFF8FFFFFFOKFFF8FFFF='>#?#J&?#
F8FFF8F8F8FFF8FFFFF8OJFFF8F8F8FFFFF8=#8#8$9#8$9$9$J#8#9$8#
FFF8FFF8FFF8FFFFF8FFF8FFFFF8FFFFF8FFODF8FFF8FFFFF8FFF8FF=#8)8)8$8&J#8#8)
F8FFF8FFF8FFF8F8F8FFF8FFF8FFF8F8F8FFF8FFF8FFF8F8F8FFOCFFF8FFF8FFF8F8F8FFF8FFF8=#848#8'J#8-
FFF8FFF8F8F8FFF8FFF8FFF8FFF8F8F8FFF8FFF8FFF8FFF8FFF8FFF8FFOBF8FFF8FFF8FFF8FFF8FFF8F8F8FF=#8%r)8#8'J#8)8#
F8FFF8FFF8FFF8FFF8FFF8F8F8F8F8FFF8FFF8F8F8F8F8OBFFF8FFF8F8F8FFF8F8F8FFF8=#8&9(9"8#8#9"J#8&8"8#
FFF8FFF8F8F8FFFFF8FFF8F8F8FFFFF8FFF8FFFFOBF8FFF8FFF8FFF8FFF8FF=&9)8&9#8&J-8#
F8FFF8FFF8F8FFF8FFF8F8F8FFF8FFF8FFF8F8FFF8FFF8FFF8OBFFF8FFF8FFF8F8F8FFF8FFF8FFF8>$;$9"9$;"9$J&9$9"
F8F8F8F8F8F8F8F8F8F8F8F8F8F8OCF8F8F8F8F8F8F8F8F8>(
FFF8FFF8FFF8FF>r
F8
7Z
RB7z
RBF07z
RBF8


>P?#F#=%8&J%9#>#>#
FFFFFFFFFFFFFFFFFFFFF8FFFFO1FFFFFFFFFFFFFFFFFFFF=(J'J'
FFFFF8F8F8FFFFBFFFFF8F8FFFFO6FFFFF8F8FFFFB#8%<%9%8"8"J%8(@$
F8F8FFFFFFFFFFFFFFFFFFFFFFFFFFFFOEF8F8F8FFFFF8FFFFF8FFFFFFFFF8="P8':08"J"8"9$
F8FFFFF8F8FFFFFFFFF8F8FFFFF8FFFFF8F8FFFFF8F8F8OHF8F8FFF8F8>'9#>#=#B#J"A$
F8F8F8F8FFFFFFFFFFFFF8F8FFFFOFF8FFFFF8G%<%I#
F8F8F8F8F8F8F8F8F8F8=#@#>#;#J#I$
FFFFFFFFFFFFFFFFOJFFFFFFFFF8="P):.8$J'8$
F8F8F8F8FFFFFFFFF8F8FFFFFFFFF8F8F8FFFFFFFFF8F8FFFFOAF8FFFFFFFFF8F8FFFF>&9%8#8%9%:#;#8sJ%:&:#;#
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8O1F8F8F8F8F8F8F8F8F8F8F8F8F8=T
=t
F8
7Z
RB7z
RBF07z
RBF8


=P$B#J#;PF#J%9#>#;P
F8FFFFFFFF7FFFFFFFFIFFFFFFFFFFFFFFFF?'J%J'J$
F8F8F8F8F8F8O F8F8FFFFO+FFFFF8F8FFFF5F8F8F8C$P9$>%8P9$E%8P<%9%9%J%8(
FFFFF8FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8F8F8F8FFFFF8FFFFF8FFFF?#=*='9*D'9%:5J"8"9$@#
FFFFF8F8FFFFF8FFFFF8F8FFFFF8F8FFFFF8F8FFFFF8FFFFF8F8FFFFF8F8FFFFF8F8FFFF4FFFFF8F8FFFFF8FFFFF8F8FFFFF8FFFFF8F8FFFF:F8F8FFF8F8FFFF?#J%J%9#C%=#9#J"B#
F8F87F8FFFFFF7FFFFFFF8FFFFF8FFFFFFF8F8FFFFCF8F8F8J%J":%A%B%
BFFFFF8F89F8F8F8F8F8FFFFF8F8F8F8F8F8J$<#J#;,D#
O/F8FFFFFFFF6FFFFFFFFF8FFFFF8FFFFF8FFFFFFFFJ%=%@%@+9%:%9.I'8$
7F8FFFFFFF8FFFFFFF8FFFFFFF8FFFFF8F8FFFFFFFFF8FFFFFFF8F8FFFFFFF8FFFFFFFFF8F8F8FFFFFFFFF8F8FFFFFFFFF8F8FFFF=#:&8#8&<s8#8&;#8#8%:$8#8&8%9%8sA%:&:#;#
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8=R
=rJ#
F8O-F8F8




>%8#I#@PF)JP"Q
FFFFFFFFFFFFFFFFFFFFF8FFFFF8FFFFO F8='J(J#Js
FFFFF8F8FFFFAFFFFF8F8F8FFFF5F8F8O"F8A#9$9%9%<#@$P9%>$P9P
F8F8FFFFFFFFFFFFFFFFFFFFFFFFFFF8F8F8FFFFFFFFFFFFF8F3:$;"P:,B*J#;$
F8F8FFFFF8FFFFF8F8FFFFF8FFFFF8F8FFFFFFFFF8F8F8F8FFFFF8FFFFF8F8FFFFF8F8FFFFF8FFFFF8F8DFFFFFFFFF8J#=#9$='@#J#
7FFFFF8F8FFFFF8F8F8F8F8FFFFFFFFO-F8F8J%J%J$
7F8F8F8F8DF8F8F8F8O1FFFFF8A#B#;#9$<#G#J)
FFFFFFFFFFFFF8FFFFFFFFFFFF8FFFFF8FFFFF8FFFF='>.:$;"P"9,G%
F8FFFFFFFFF8F8FFFFFFFFF8F8F8FFFFFFFFF8F8FFFFF8F8FFFFFFF8F8F8FFFFFFFFF8F8FFFFFF>%8#8#8%9%8#8#<&:$9%8v8#8$9sJ#<#
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F87F8F8F8F8DSJ&
O1FFFFFFFFF8DsJ#J%
F8@F8F8=F8F8F8F8
z
RCF7
ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "300" 2
%%Page: "301" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Overview) 495.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(301) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Pasting is allowed only when something in a compatible data format is) 180 641.33 T
(already sitting on the Clipboard. The) 180 628.33 T
3 F
(Paste) 353.92 628.33 T
1 F
( operation copies what is on the) 378.73 628.33 T
-0.22 (Clipboard into a document at the current insertion point \050in the case of text,) 180 615.33 P
-0.62 (this is where the cursor was last placed\051; if something is already selected, the) 180 602.33 P
-0.4 (selection will be replaced with the pasted material. If there is nothing on the) 180 589.33 P
(Clipboard, then there is nothing to paste; therefore, the option is disabled.) 180 576.33 T
0 14 Q
(7.1.2) 130.86 534 T
0 18 Q
(Quick-T) 180 534 T
(ransfer) 246.02 534 T
1 10 Q
-0.21 (The user can copy and move selected items without using the Edit menu; he) 180 510.33 P
-0.12 (simply drags the item using the quick-transfer button of his mouse, and the) 180 497.33 P
(item will be either copied or moved.) 180 484.33 T
-0.58 (There are several rules which govern whether a move or copy is taking place.) 180 464.33 P
(The user can override these rules with a certain set of keypresses to force) 180 451.33 T
(either a copy or move. Copy is equivalent to using the) 180 438.33 T
3 F
(Copy) 430.03 438.33 T
1 F
( and) 452.99 438.33 T
3 F
(Paste) 475.96 438.33 T
1 F
(functions in succession, and move is equivalent to using the) 180 425.33 T
3 F
(Cut) 458.36 425.33 T
1 F
( and) 475.21 425.33 T
3 F
(Paste) 498.18 425.33 T
1 F
(functions in succession.) 180 412.33 T
(The operation of a quick transfer \050move or copy\051, however) 180 392.33 T
(, depends on) 444.82 392.33 T
-0.48 (whether the transfer is across documents or internal to a single document. If) 180 379.33 P
-0.72 (the transfer is internal, it should become a move. If the transfer occurs across) 180 366.33 P
(documents, it should become a copy) 180 353.33 T
(. \050Note that, for the purposes of) 343.16 353.33 T
(quick-transfer) 180 340.33 T
(, the term) 245.18 340.33 T
3 F
(document) 293.52 340.33 T
1 F
( is used to refer to anything the user will) 338.14 340.33 T
(conceptually view as a single data holder\321for example, a GeoManager) 180 327.33 T
(\322document\323 consists of one disk.\051) 180 314.33 T
(Because not all documents will support a given transfer operation \050for) 180 294.33 T
(example, a text \336le editor can not receive a GeoDraw graphic\051, the user is) 180 281.33 T
-0.65 (provided with immediate feedback about the type and validity of the transfer) 180 268.33 P
-0.65 (.) 528.22 268.33 P
(For example, if a GeoDraw ellipse was selected and a quick-transfer was) 180 248.33 T
(begun, immediately the mouse pointer would show the transfer as a move) 180 235.33 T
-0.34 (operation. As the user moves the mouse outside the GeoDraw document and) 180 222.33 P
(into another GeoDraw document, the cursor changes to indicate a copy) 180 209.33 T
-0.49 (operation. If the user then moves the mouse over a text-only document, a \322no) 180 196.33 P
(operation,\323 or \322invalid,\323 cursor would be shown, indicating that the ellipse) 180 183.33 T
(could not be received.) 180 170.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "301" 3
%%Page: "302" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(302) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Some applications may implement an additional feature that provides) 180 641.33 T
(feedback to the user: modifying the source object as the type of transfer) 180 628.33 T
(changes. For example, a drawing program may wish to alter the shape or) 180 615.33 T
(color of an object while it is being quick-moved but leave it normal during a) 180 602.33 T
(quick-copy or no-operation transfer) 180 589.33 T
(.) 341.84 589.33 T
0 14 Q
(7.2) 142.54 537 T
0 24 Q
(T) 180 537 T
(ransfer Data Structures) 193.34 537 T
1 10 Q
-0.55 (Both the Clipboard and quick-transfer mechanisms use similar structures to) 180 511.33 P
-0.17 (accomplish data transfer) 180 498.33 P
-0.17 (. These data structures are owned and managed by) 293.75 498.33 P
(the) 180 485.33 T
1 9 Q
(GEOS) 197.78 485.33 T
1 10 Q
( User Interface; however) 223.95 485.33 T
(, they are accessible to all geodes in the) 337.09 485.33 T
(system through a number of routines and messages.) 180 472.33 T
-0.2 (The Clipboard consists of a) 180 452.33 P
1 9 Q
-0.18 (VM) 306.62 452.33 P
1 10 Q
-0.2 ( \336le known as the) 321.62 452.33 P
3 F
-0.2 (T) 404.91 452.33 P
-0.2 (ransfer) 410.87 452.33 P
3 9 Q
-0.18 (VM) 446.4 452.33 P
3 10 Q
-0.2 ( File) 461.23 452.33 P
1 F
-0.2 (, shown in) 481.58 452.33 P
(Figure) 180 439.33 T
(7-) 213.52 439.33 T
(2. The quick-transfer mechanism uses the same \336le for its data) 222.41 439.33 T
(transfer) 180 426.33 T
(. T) 216.66 426.33 T
(ypically) 228.37 426.33 T
(, this is a \336le designated and managed by the User) 263.19 426.33 T
(Interface.) 180 413.33 T
-0.48 (In addition, certain formats of data are supported automatically\321) 180 393.33 P
1 9 Q
-0.44 (GEOS) 482.09 393.33 P
1 10 Q
-0.48 ( text) 508.26 393.33 P
-0.8 (and graphics strings are special formats that are described below) 180 380.33 P
-0.8 (. Geodes can) 473.02 380.33 P
81 144 531 648 C
180 144 531 359.83 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 144 531 359.83 R
7 X
0 0 0 1 0 0 0 K
V
368.16 245.9 494.16 284.52 R
6 X
V
0.5 H
0 Z
0 X
N
182.65 146.15 518.2 185 R
7 X
V
0 10 Q
0 X
(Figure) 182.65 178.33 T
(7-) 215.99 178.33 T
(2) 224.88 178.33 T
3 F
(The T) 233.22 178.33 T
(ransfer VM File) 259.36 178.33 T
-0.23 (How the T) 182.65 164.33 P
-0.23 (ransfer) 228.88 164.33 P
3 9 Q
-0.21 (VM) 264.37 164.33 P
3 10 Q
-0.23 ( File is used by the Copy and Paste functions; its use) 279.2 164.33 P
(for quick-transfer is similar) 182.65 152.33 T
(.) 308.53 152.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
331.86 278.21 331.13 283.15 333.32 284.05 338.42 279.56 345.71 284.95 348.63 279.56 345.35 279.56
 344.62 274.62 341.7 276.87 339.88 271.92 10 Y
3 X
V
0 X
N
185.38 270.15 257.38 339.32 R
N
185.38 192 257.38 261.17 R
N
205.34 299.1 203.88 308.98 208.26 310.78 218.47 301.79 233.05 312.57 238.88 301.79 232.32 301.79
 230.86 291.91 225.03 296.4 221.38 286.52 10 Y
3 X
V
0 X
N
205.91 312.57 207.94 310.64 205.91 308.71 203.88 310.64 4 Y
V
N
236.86 312.57 238.88 310.64 236.86 308.71 234.83 310.64 4 Y
V
N
221.38 301.48 223.41 299.55 221.38 297.61 219.36 299.55 4 Y
V
N
236.86 290.39 238.88 288.46 236.86 286.52 234.83 288.46 4 Y
V
N
205.91 290.39 207.94 288.46 205.91 286.52 203.88 288.46 4 Y
V
N
357.71 278.29 368.16 272.4 356.17 271.86 356.94 275.08 4 Y
V
249.66 300.69 356.94 275.08 2 L
V
1 H
2 Z
N
272.36 239.16 271.63 244.1 273.82 245 278.92 240.51 286.21 245.9 289.13 240.51 285.85 240.51
 285.12 235.57 282.2 237.82 280.38 232.87 10 Y
3 X
V
0.5 H
0 Z
0 X
N
261.15 231.41 249.16 231.95 259.61 237.85 260.38 234.63 4 Y
V
260.38 234.63 367.66 260.25 2 L
3 X
V
1 H
2 Z
0 X
N
(Paste) 290.36 231.2 T
(Copy) 328.73 286.64 T
1 F
(Document A) 192.77 329.34 T
(Document B) 192.77 248.43 T
3 12 Q
(T) 368.76 286.59 T
(ransfer VM File) 375.91 286.59 T
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "302" 4
%%Page: "303" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Transfer Data Structures) 393.85 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(303) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(create their own speci\336c formats; for example, GeoManager uses a special) 180 641.33 T
(format for quick-transfer of \336les between disks and directories.) 180 628.33 T
0 14 Q
(7.2.1) 130.86 586 T
0 18 Q
(The T) 180 586 T
(ransfer VM File Format) 227.02 586 T
1 10 Q
(The T) 180 562.33 T
(ransfer) 206.61 562.33 T
1 9 Q
(VM) 242.9 562.33 T
1 10 Q
( File is a normal) 257.89 562.33 T
1 9 Q
(VM) 336.25 562.33 T
1 10 Q
( \336le, managed by the) 351.25 562.33 T
1 9 Q
(UI) 450.35 562.33 T
1 10 Q
(. It contains) 461.35 562.33 T
-0.09 (several components, each of which is accessed through special routines that) 180 549.33 P
-0.78 (take care of nearly all the synchronization issues involved with the Clipboard) 180 536.33 P
(and quick-transfer mechanisms. Because both the Clipboard and the) 180 523.33 T
(quick-transfer mechanism use this \336le and its data structures, these) 180 510.33 T
-0.45 (structures are detailed here; the following section \050\322Using The Clipboard\323 on) 180 497.33 P
(page 309\051 details how to use them for either the Clipboard or the) 180 484.33 T
(quick-transfer mechanism.) 180 471.33 T
(The T) 180 451.33 T
(ransfer) 206.61 451.33 T
1 9 Q
(VM) 242.9 451.33 T
1 10 Q
( File has one header block for the Clipboard transfer item) 257.89 451.33 T
(and another for the quick-transfer transfer item. These headers have the) 180 438.33 T
-0.32 (same structure, and they contain all the information necessary to work with) 180 425.33 P
(the \336le\325) 180 412.33 T
(s contents. They contain pointers to and information about each) 213.71 412.33 T
-0.75 (format available for both the Clipboard and the quick-transfer functions. The) 180 399.33 P
(transfer item\325) 180 386.33 T
(s header is shown in Code Display) 242.78 386.33 T
(7-) 403.73 386.33 T
(1.) 412.62 386.33 T
81 353.98 531 366 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 353.98 531 366 R
7 X
0 0 0 1 0 0 0 K
V
76.5 361.23 617.5 364.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 347.31 T
(7-) 147.13 347.31 T
(1 ClipboardItemHeader) 156.02 347.31 T
4 9 Q
(/* The ClipboardItemHeader structure details what formats, if any, exist in the) 81 332.98 T
( * Transfer VM File for both the Clipboard and quick-transfer mechanisms.*/) 81 321.98 T
(typedef struct {) 81 303.98 T
(/* The CIH_owner field is the optr of the object that put) 146.6 285.98 T
(* the current transfer item into the Transfer VM File. */) 152 274.98 T
(optr) 102.6 263.98 T
(CIH_owner;) 212.5 263.98 T
(/* The CIH_flags field determines whether the transfer item is used by) 146.6 245.98 T
(* the quick transfer mechanism or by the normal Clipboard. If this) 152 234.98 T
(* field is equal to the constant CIF_QUICK, then the transfer item) 152 223.98 T
(* belongs to the quick transfer mechanism. If it is any other value,) 152 212.98 T
(* the transfer item belongs to the normal Clipboard. */) 152 201.98 T
(ClipboardItemFlags) 102.6 190.98 T
(CIH_flags;) 212.5 190.98 T
(/* The ClipboardItemFlags type has one predefined value:) 125 179.98 T
( *) 125 168.98 T
(CIF_QUICK) 168.98 168.98 T
(0x4000) 256.5 168.98 T
( * If this flag does not apply, use TIF_NORMAL, which is 0x0000. */) 125 157.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "303" 5
%%Page: "304" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(304) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* The CIH_name field is a 33-character buffer that should contain a) 146.6 642 T
(* null-terminated character string representing the name of the given) 152 631 T
(* transfer item. */) 152 620 T
(ClipboardItemNameBuffer) 102.6 609 T
(CIH_name;) 232.2 609 T
(/* The CIH_formatCount field indicates the number of formats of the) 146.6 591 T
(* transfer item currently available. For example, this field would be) 152 580 T
(* 2 if CIF_TEXT and CIF_GRAPHICS_STRING formats were supported and) 152 569 T
(* available in the Transfer VM File. */) 152 558 T
(word) 102.6 547 T
(CIH_formatCount;) 212.5 547 T
(/* The CIH_sourceID field contains information about the source) 146.6 529 T
(* document of the transfer. Typically, this will be the optr of the) 152 518 T
(* parent GenDocument object. */) 152 507 T
(dword) 102.6 496 T
(CIH_sourceID;) 212.5 496 T
(/* The CIH_formats field is actually an array of ten) 146.6 478 T
(* ClipboardFormatInfo structures, each of which contains the) 152 467 T
(* important details about a specific format of the transfer item. */) 152 456 T
(FormatArray) 102.6 445 T
(CIH_formats;) 212.5 445 T
(/* This field is reserved and should not be used. */) 146.6 427 T
(dword) 102.6 416 T
(CIH_reserved;) 212.5 416 T
(} ClipboardItemHeader;) 81 405 T
(/* The FormatArray type is an array of ClipboardItemFormatInfo structures. The) 81 387 T
( * definition of this field is shown here: */) 81 376 T
(typedef) 81 358 T
(ClipboardItemFormatInfo) 125 358 T
(FormatArray[CLIPBOARD_MAX_FORMATS];) 256.5 358 T
(/* CLIPBOARD_MAX_FORMATS is a constant defining the maximum number of) 125 347 T
( * formats allowed for any given transfer item. It is defined as 10. */) 125 336 T
81 311.98 531 324 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 311.98 531 324 R
7 X
0 0 0 1 0 0 0 K
V
76.5 319.23 617.5 322.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(The rest of the T) 180 294.31 T
(ransfer) 256.24 294.31 T
1 9 Q
(VM) 292.53 294.31 T
1 10 Q
( File consists of) 307.52 294.31 T
1 9 Q
(VM) 381.42 294.31 T
1 10 Q
( blocks containing the data) 396.42 294.31 T
(that is to be transferred. Each format supported will have its own) 180 281.31 T
1 9 Q
(VM) 485.96 281.31 T
1 10 Q
( block) 500.95 281.31 T
(or series of) 180 268.31 T
1 9 Q
(VM) 232.96 268.31 T
1 10 Q
( blocks, pointed to by the) 247.95 268.31 T
5 F
(ClipboardItemFormatInfo) 365.57 268.31 T
1 F
(structure in the item\325) 180 255.31 T
(s header) 278.15 255.31 T
(.) 316.67 255.31 T
(The T) 180 235.31 T
(ransfer) 206.61 235.31 T
1 9 Q
(VM) 242.9 235.31 T
1 10 Q
( File actually contains two transfer items: One for the) 257.89 235.31 T
-0.14 (Clipboard and one for the quick-transfer mechanism \050see Figure) 180 222.31 P
-0.14 (7-) 478.13 222.31 P
-0.14 (3\051. When) 487.02 222.31 P
(calling) 180 209.31 T
5 F
(ClipboardQueryItem\050\051) 213.71 209.31 T
1 F
(, the requesting geode must specify which) 330.01 209.31 T
(item it wants. See section 7.3 on page 309 and section 7.4 on page 323.) 180 196.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "304" 6
%%Page: "305" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Transfer Data Structures) 393.85 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(305) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(7.2.2) 130.86 636 T
0 18 Q
(ClipboardItemFormatInfo) 180 636 T
1 10 Q
(This structure contains information about a speci\336c format of the transfer) 180 612.33 T
-0.06 (item. The T) 180 599.33 P
-0.06 (ransfer) 232.97 599.33 P
1 9 Q
-0.06 (VM) 269.2 599.33 P
1 10 Q
-0.06 ( File will support up to ten formats of a given item at) 284.19 599.33 P
(once \050for both the Clipboard and quick-transfer\051; each of these formats is) 180 586.33 T
-0.38 (stored in its own) 180 573.33 P
1 9 Q
-0.34 (VM) 258.12 573.33 P
1 10 Q
-0.38 ( block or) 273.12 573.33 P
1 9 Q
-0.34 (VM) 313.84 573.33 P
1 10 Q
-0.38 ( chain and is represented in the header by a) 328.84 573.33 P
5 F
(ClipboardItemFormatInfo) 180 560.33 T
1 F
( structure in the array) 316.11 560.33 T
3 9 Q
(CIH_) 422.59 560.33 T
3 10 Q
(formats) 444.75 560.33 T
1 F
(.) 480.11 560.33 T
(The) 180 540.33 T
5 F
(ClipboardItemFormatInfo) 200.56 540.33 T
1 F
( structure contains other information) 336.67 540.33 T
(about the speci\336c format as well as space for two extra words of data. The) 180 527.33 T
(structure is shown in Code Display) 180 514.33 T
(7-) 344.64 514.33 T
(2.) 353.53 514.33 T
(Each element in the) 180 494.33 T
3 9 Q
(CIH_) 275.75 494.33 T
3 10 Q
(formats) 297.91 494.33 T
1 F
( array contains two items: One word) 333.27 494.33 T
(represents the manufacturer) 180 481.33 T
1 9 Q
(ID) 316.1 481.33 T
1 10 Q
( of the geode responsible for the format) 326.77 481.33 T
(\050useful if a custom format is used within several applications from a single) 180 468.33 T
(manufacturer\051, and the other represents the actual format number) 180 455.33 T
(. T) 488.15 455.33 T
(o) 499.46 455.33 T
-0.12 (combine these words into a) 180 442.33 P
5 F
-0.13 (ClipboardItemFormatID) 307.36 442.33 P
1 F
-0.12 ( record, or to extract) 434.95 442.33 P
(either word from the record, use the macros shown after Code Display) 180 429.33 T
(7-) 506.3 429.33 T
(2.) 515.19 429.33 T
81 144 531 648 C
0 0 0 1 0 0 0 K
180 144 531 397.41 C
0 0 0 1 0 0 0 K
281.84 296.78 261.56 280.1 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
281.84 296.78 302.12 280.1 2 L
N
281.84 296.78 215.08 279.26 2 L
N
281.84 296.78 348.61 279.26 2 L
N
234.94 296.75 328.74 313.43 R
7 X
V
0 Z
0 X
N
3 9 Q
(ClipboardItemHeader) 236.44 301.68 T
277.86 335.14 428.81 376.84 R
6 X
V
0 X
N
182.65 146.2 527.38 196.73 R
7 X
V
0 10 Q
0 X
(Figure) 182.65 190.07 T
(7-) 215.99 190.07 T
(3) 224.88 190.07 T
3 F
(T) 233.22 190.07 T
(ransfer) 239.18 190.07 T
3 9 Q
(VM) 274.9 190.07 T
3 10 Q
( File Structure) 289.73 190.07 T
-0.25 (The T) 182.65 176.07 P
-0.25 (ransfer) 208.55 176.07 P
3 9 Q
-0.22 (VM) 244.02 176.07 P
3 10 Q
-0.25 ( File contains two transfer items, one for the clipboard and) 258.85 176.07 P
(one for the quick-transfer mechanism. Both can store multiple formats of) 182.65 164.07 T
(their transfer items; each format may consist of a) 182.65 152.07 T
3 9 Q
(VM) 410 152.07 T
3 10 Q
( chain.) 424.83 152.07 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
(T) 313.97 365.95 T
(ransfer VM File) 319.93 365.95 T
288.54 338.79 341.4 356.31 R
7 X
V
0 X
N
3 9 Q
(Clipboard) 294.06 344.47 T
349.88 338.79 418.12 356.31 R
7 X
V
0 X
N
(Quick-T) 352.75 344.47 T
(ransfer) 385.61 344.47 T
186.79 270.39 231.58 281.31 5.46 RR
7 X
V
0 X
N
3 8 Q
(Format 1) 192.15 273.19 T
235.23 270.39 280.02 281.31 5.46 RR
7 X
V
0 X
N
(Format 2) 240.58 273.19 T
283.67 270.39 328.46 281.31 5.46 RR
7 X
V
0 X
N
(Format 3) 289.02 273.19 T
332.1 270.39 376.89 281.31 5.46 RR
7 X
V
0 X
N
(Format 4) 337.46 273.19 T
431.62 237.9 410.98 221.22 2 L
7 X
V
2 Z
0 X
N
431.62 237.9 452.26 221.22 2 L
7 X
V
0 X
N
431.62 237.9 363.69 220.39 2 L
7 X
V
0 X
N
431.62 237.9 499.55 220.39 2 L
7 X
V
0 X
N
383.9 237.88 479.35 254.56 R
7 X
V
0 Z
0 X
N
3 9 Q
(ClipboardItemHeader) 386.22 242.81 T
334.9 211.52 380.48 222.44 5.46 RR
7 X
V
0 X
N
3 8 Q
(Format 1) 340.65 214.31 T
384.19 211.52 429.77 222.44 5.46 RR
7 X
V
0 X
N
(Format 2) 389.94 214.31 T
433.48 211.52 479.05 222.44 5.46 RR
7 X
V
0 X
N
(Format 3) 439.23 214.31 T
482.77 211.52 528.34 222.44 5.46 RR
7 X
V
0 X
N
(Format 4) 488.51 214.31 T
296.6 319.44 286.19 313.46 291.85 324.04 294.22 321.74 4 Y
V
312.88 340.98 294.23 321.74 2 L
7 X
V
2 Z
0 X
N
415.75 266.23 416.3 254.24 409.48 264.12 412.62 265.18 4 Y
V
387.11 340.98 412.62 265.18 2 L
7 X
V
0 X
N
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "305" 7
%%Page: "306" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(306) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(7-) 147.13 629.31 T
(2 ClipboardItemFormatInfo) 156.02 629.31 T
4 9 Q
(/* The ClipboardItemFormatInfo structure contains information about a given) 81 614.98 T
( * format of the transfer item. */) 81 603.98 T
(typedef struct {) 81 585.98 T
(/* CIFI_format contains a format ID as well as the) 168.98 574.98 T
( * manufacturer ID of the geode responsible for the format. */) 168.98 563.98 T
(ClipboardItemFormatID) 125 552.98 T
(CIFI_format;) 256.5 552.98 T
(/* CIFI_extra1 and CIFI_extra2 are extra words provided for) 168.98 534.98 T
( * format-specific use. */) 168.98 523.98 T
(word) 125 512.98 T
(CIFI_extra1;) 212.5 512.98 T
(word) 125 501.98 T
(CIFI_extra2;) 212.5 501.98 T
(/* CIFI_vmChain is a VM handle pointing to the first block in the) 168.98 483.98 T
( * specific format. */) 168.98 472.98 T
(VMChain) 125 461.98 T
(CIFI_vmChain;) 212.5 461.98 T
(/* CIFI_renderer contains the token of the geode that created) 168.98 443.98 T
( * the format. */) 168.98 432.98 T
(GeodeToken) 125 421.98 T
(CIFI_renderer;) 212.5 421.98 T
(} ClipboardItemFormatInfo;) 81 410.98 T
81 386.95 531 398.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 386.95 531 398.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 394.2 617.5 397.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(Below are the macros for use with a) 180 369.29 T
5 F
(ClipboardItemFormatID) 348.35 369.29 T
1 F
( structure.) 475.94 369.29 T
81 352.94 531 357.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 352.94 531 357.95 R
7 X
0 0 0 1 0 0 0 K
V
50 356.94 609.01 356.94 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 344.94 T
0 F
(FormatIDFromManufacturerAndT) 99 344.94 T
(ype) 287.45 344.94 T
6 10 Q
(ClipboardItemFormatID) 99 331.28 T
4 F
( FormatIDFromManufacturerAndType\050man, typ\051) 225 331.28 T
4 9 Q
(ManufacturerID) 153 320.94 T
(man;) 261 320.94 T
(word) 153 310.94 T
(typ;) 261 310.94 T
1 10 Q
-0.74 (This macro creates a) 180 293.28 P
5 F
-0.76 (ClipboardItemFormatID) 275.59 293.28 P
1 F
-0.74 ( dword value from the given) 403.18 293.28 P
(manufacturer) 180 280.28 T
1 9 Q
(ID) 246.66 280.28 T
1 10 Q
( and format) 257.33 280.28 T
1 9 Q
(ID) 314.18 280.28 T
1 10 Q
(.) 324.85 280.28 T
81 263.94 531 268.94 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.94 531 268.94 R
7 X
0 0 0 1 0 0 0 K
V
50 267.94 609.01 267.94 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.93 T
0 F
(ManufacturerFromFormatID) 99 255.93 T
6 10 Q
(ManufacturerID) 99 242.27 T
4 F
( ManufacturerFromFormatID\050type\051;) 183 242.27 T
4 9 Q
(ClipboardItemFormatID) 153 231.94 T
(type;) 279 231.94 T
1 10 Q
-0.35 (This macro extracts the manufacturer) 180 214.27 P
1 9 Q
-0.32 (ID) 357.13 214.27 P
1 10 Q
-0.35 ( from the given clipboard format) 367.79 214.27 P
1 9 Q
-0.32 (ID) 517.91 214.27 P
1 10 Q
(and manufacturer value.) 180 201.27 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "306" 8
%%Page: "307" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Transfer Data Structures) 393.85 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(307) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(T) 99 634.99 T
(ypeFromFormatID) 105.44 634.99 T
6 10 Q
(word) 99 621.33 T
4 F
(TypeFromFormatID\050type\051;) 153 621.33 T
4 9 Q
(ClipboardItemFormatID) 153 610.99 T
(type;) 279 610.99 T
1 10 Q
(This macro extracts the format) 180 593.33 T
1 9 Q
(ID) 326.12 593.33 T
1 10 Q
( from the given clipboard format) 336.79 593.33 T
1 9 Q
(ID) 489.02 593.33 T
1 10 Q
( and) 499.68 593.33 T
(manufacturer value.) 180 580.33 T
0 14 Q
(7.2.3) 130.86 537.99 T
0 18 Q
(T) 180 537.99 T
(ransfer Data Structures) 190.01 537.99 T
1 10 Q
-0.86 (T) 180 514.33 P
-0.86 (wo structures are used with speci\336c routines when dealing with the transfer) 185.96 514.33 P
(mechanisms. The) 180 501.33 T
5 F
(ClipboardQueryArgs) 263.53 501.33 T
1 F
( structure is returned by) 371.87 501.33 T
5 F
(ClipboardQueryItem\050\051) 180 488.33 T
1 F
(, and the) 296.3 488.33 T
5 F
(ClipboardRequestArgs) 339.83 488.33 T
1 F
( structure is) 458.17 488.33 T
(returned by) 180 475.33 T
5 F
(ClipboardRequestItemFormat\050\051) 237.22 475.33 T
1 F
(. Both routines are used) 402.04 475.33 T
-0.57 (during a Paste operation, and both structures are shown in Code Display) 180 462.33 P
-0.57 (7-) 513.77 462.33 P
-0.57 (3.) 522.66 462.33 P
(Note that the) 180 442.33 T
3 9 Q
(CQA) 244.83 442.33 T
3 10 Q
(_header) 264.67 442.33 T
1 F
( \336eld is of type) 300.95 442.33 T
5 F
(T) 370.96 442.33 T
(ransferBlock) 377.56 442.33 T
5 9 Q
(ID) 445.17 442.33 T
1 10 Q
(. This type is a) 456.66 442.33 T
(dword made up of two word-sized components: a) 180 429.33 T
1 9 Q
(VM) 405.75 429.33 T
1 10 Q
( \336le handle and a) 420.74 429.33 T
1 9 Q
(VM) 503.54 429.33 T
1 10 Q
(block handle. The three macros listed after Code Display) 180 416.33 T
(7-) 444.85 416.33 T
(3 can be used to) 453.74 416.33 T
-0.69 (create the) 180 403.33 P
5 F
-0.72 (T) 227.5 403.33 P
-0.72 (ransferBlock) 234.1 403.33 P
5 9 Q
-0.64 (ID) 301.71 403.33 P
1 10 Q
-0.69 ( argument and extract either of the components) 313.21 403.33 P
(from the whole.) 180 390.33 T
81 357.97 531 369.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 357.97 531 369.99 R
7 X
0 0 0 1 0 0 0 K
V
76.5 365.22 617.5 368.72 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 351.3 T
(7-) 147.13 351.3 T
(3 ClipboardQueryArgs and ClipboardRequestArgs) 156.02 351.3 T
4 9 Q
(/* ClipboardQueryArgs is filled by ClipboardQueryItem\050\051, which is called when) 81 336.97 T
( * determining whether a transfer item exists. */) 81 325.97 T
(typedef struct {) 81 314.97 T
(word) 102.6 303.97 T
(CQA_numFormats;) 168.98 303.97 T
(/* the total number of formats available */) 256.5 303.97 T
(optr) 102.6 292.97 T
(CQA_owner;) 168.98 292.97 T
(/* the optr of the originating object */) 256.5 292.97 T
(TransferBlockID CQA_header;) 102.6 281.97 T
(/* The combined VM file handle and VM block) 256.5 281.97 T
( * handle of the block containing the) 256.5 270.97 T
( * ClipboardItemHeader */) 256.5 259.97 T
(} ClipboardQueryArgs;) 81 248.97 T
(/* ClipboardRequestArgs is filled by ClipboardRequestItemFormat\050\051, which is called) 81 230.97 T
( * when the application wants to retrieve the current transfer item. */) 81 219.97 T
(typedef struct {) 81 208.97 T
(VMFileHandle) 102.6 197.97 T
(CRA_file;) 168.98 197.97 T
(/* The VM file handle of the transfer file */) 256.5 197.97 T
(VMChain) 102.6 186.97 T
(CRA_data;) 168.98 186.97 T
(/* The handle of the VM chain containing the) 256.5 186.97 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "307" 9
%%Page: "308" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(308) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
( * transfer item */) 256.5 642 T
(word) 102.6 631 T
(CRA_extra1;) 168.98 631 T
(/* an extra word of data */) 256.5 631 T
(word) 102.6 620 T
(CRA_extra2;) 168.98 620 T
(/* another extra word of data */) 256.5 620 T
(} ClipboardRequestArgs;) 81 609 T
81 584.98 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 584.98 531 597 R
7 X
0 0 0 1 0 0 0 K
V
76.5 592.23 617.5 595.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(Below are the macros for use with the) 180 567.31 T
5 F
(T) 357.79 567.31 T
(ransferBlockID) 364.39 567.31 T
1 F
( structure.) 444.77 567.31 T
81 550.97 531 555.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 550.97 531 555.98 R
7 X
0 0 0 1 0 0 0 K
V
50 554.97 609.01 554.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 542.97 T
0 F
(BlockIDFromFileAndBlock) 99 542.97 T
6 10 Q
(TransferBlockID) 99 529.3 T
4 F
( BlockIDFromFileAndBlock\050f, b\051;) 189 529.3 T
4 9 Q
(VMFileHandle) 153 518.97 T
(f;) 261 518.97 T
(VMBlockHandle) 153 508.97 T
(b;) 261 508.97 T
1 10 Q
(This macro creates a) 180 491.3 T
5 F
(T) 278.53 491.3 T
(ransferBlockID) 285.13 491.3 T
1 F
( value from the given \336le and block) 365.51 491.3 T
(handles.) 180 478.3 T
81 461.96 531 466.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.96 531 466.97 R
7 X
0 0 0 1 0 0 0 K
V
50 465.96 609.01 465.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.96 T
0 F
(FileFromT) 99 453.96 T
(ransferBlockID) 156.35 453.96 T
6 10 Q
(VMFileHandle) 99 440.29 T
4 F
( FileFromTransferBlockID\050id\051;) 171 440.29 T
4 9 Q
(TransferBlockID) 153 429.96 T
(id;) 261 429.96 T
1 10 Q
-0.05 (This macro extracts the \336le handle from the given) 180 412.29 P
5 F
-0.05 (T) 413.32 412.29 P
-0.05 (ransferBlockID) 419.92 412.29 P
1 F
-0.05 ( value.) 500.3 412.29 P
81 395.95 531 400.96 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 395.95 531 400.96 R
7 X
0 0 0 1 0 0 0 K
V
50 399.95 609.01 399.95 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 387.95 T
0 F
(BlockFromT) 99 387.95 T
(ransferBlockID) 168.35 387.95 T
6 10 Q
(VMBlockHandle) 99 374.29 T
4 F
( BlockFromTransferBlockID\050id\051;) 177 374.29 T
4 9 Q
(TransferBlockID) 153 363.95 T
(id;) 261 363.95 T
1 10 Q
(This macro extracts the block handle from the given) 180 346.29 T
5 F
(T) 423.54 346.29 T
(ransferBlockID) 430.14 346.29 T
1 F
(value.) 180 333.29 T
0 14 Q
(7.2.4) 130.86 290.95 T
0 18 Q
(Clipboard Item Formats) 180 290.95 T
1 10 Q
(There are several built-in transfer formats that many) 180 267.28 T
1 9 Q
(GEOS) 430.58 267.28 T
1 10 Q
( applications) 456.75 267.28 T
(may support; each of these types is an enumeration of) 180 254.28 T
5 F
(ClipboardItemFormat) 180 241.28 T
1 F
(. Additionally) 294.82 241.28 T
(, custom formats can be de\336ned to) 356.5 241.28 T
(allow special data structures to be cut, copied, pasted, or quick-transferred) 180 228.28 T
-0.01 (without translation into text or graphics strings. The T) 180 215.28 P
-0.01 (ransfer) 433.61 215.28 P
1 9 Q
-0.01 (VM) 469.9 215.28 P
1 10 Q
-0.01 ( File may) 484.89 215.28 P
-0.01 (contain up to ten formats of a given transfer item.) 180 202.28 P
5 F
-0.01 (ClipboardItemFormat) 413.41 202.28 P
1 F
(is shown below) 180 189.28 T
(.) 248.54 189.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "308" 10
%%Page: "309" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(309) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 10 Q
0 X
(typedef enum /* word */ {) 216 641.33 T
(CIF_TEXT,) 252 627.33 T
(CIF_GRAPHICS_STRING,) 252 613.33 T
(CIF_FILES,) 252 599.33 T
(CIF_SPREADSHEET,) 252 585.33 T
(CIF_INK,) 252 571.33 T
(CIF_GROBJ,) 252 557.33 T
(CIF_GEODEX,) 252 543.33 T
(CIF_BITMAP,) 252 529.33 T
(CIF_SOUND_SYNTH,) 252 515.33 T
(CIF_SOUND_SAMPLE) 252 501.33 T
(} ClipboardItemFormat;) 216 487.33 T
1 F
(A transfer item of) 180 466.33 T
1 9 Q
(CIF_TEXT) 265 466.33 T
1 10 Q
( format is headed by a) 310.5 466.33 T
5 F
(T) 180 453.33 T
(extT) 186.3 453.33 T
(ransferBlockHeader) 209.01 453.33 T
1 F
( structure. The text follows this header in the) 314.77 453.33 T
1 9 Q
(VM) 180 440.33 T
1 10 Q
( chain. A transfer item of) 194.99 440.33 T
1 9 Q
(CIF_GRAPHICS_STRING) 313.7 440.33 T
1 10 Q
( format is simply the) 424.37 440.33 T
(entire GString stored in the transfer) 180 427.33 T
1 9 Q
(VM) 351.67 427.33 T
1 10 Q
( \336le in the) 366.66 427.33 T
1 9 Q
(VM) 416.3 427.33 T
1 10 Q
( chain.) 431.3 427.33 T
(Because every format identi\336er has two components, it is highly unlikely) 180 407.33 T
(that two different designers will create overlapping custom formats.) 180 394.33 T
-0.71 (The format is de\336ned as a) 180 374.33 P
5 F
-0.73 (ClipboardItemFormatID) 298.56 374.33 P
1 F
-0.71 ( type, which is a dword) 426.15 374.33 P
-0.35 (composed of two word-sized pieces. The \336rst piece is a constant representing) 180 361.33 P
(the format) 180 348.33 T
1 9 Q
(ID) 231.67 348.33 T
1 10 Q
( number \050such as) 242.34 348.33 T
1 9 Q
(CIF_TEXT) 324.38 348.33 T
1 10 Q
( or) 369.88 348.33 T
1 9 Q
(CIF_GRAPHICS_STRING) 384.88 348.33 T
1 10 Q
(\051. The) 495.54 348.33 T
(second piece is a constant representing the Manufacturer) 180 335.33 T
1 9 Q
(ID) 447.77 335.33 T
1 10 Q
( number of the) 458.43 335.33 T
(manufacturer responsible for creating the format.) 180 322.33 T
-0.85 (T) 180 302.33 P
-0.85 (o create a custom format, simply de\336ne these two items as appropriate \050your) 185.75 302.33 P
-0.69 (Manufacturer) 180 289.33 P
1 9 Q
-0.62 (ID) 246.52 289.33 P
1 10 Q
-0.69 ( should be set already\051. Then de\336ne your format to \336t within) 257.19 289.33 P
(the structures used by the Clipboard \050shown above\051.) 180 276.33 T
0 14 Q
(7.3) 142.54 224 T
0 24 Q
(Using The Clipboard) 180 224 T
4 10 Q
(ClipboardQueryItem\050\051, ClipboardRegisterItem\050\051,) 180 198.33 T
(ClipboardDoneWithItem\050\051) 180 185.33 T
1 F
(T) 180 165.33 T
(o use the Clipboard, your application must have an Edit menu \050or a) 185.75 165.33 T
(GenEditControl object\051 and an object which can implement the Cut, Copy) 180 152.33 T
(,) 518.35 152.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "309" 11
%%Page: "310" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(310) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(and Paste operations. This object is often the application\325) 180 641.33 T
(s Process object or) 443.38 641.33 T
(some other coordinating object. This object must be able to do each of the) 180 628.33 T
(things in the following list:) 180 615.33 T
2 F
(u) 180 595.33 T
1 F
(Register with the Clipboard) 198 595.33 T
(In a multitasking, multithreaded system, another application could) 198 583.33 T
(change the Clipboard\325) 198 571.33 T
(s contents. By registering with the Clipboard on) 298.38 571.33 T
(application startup, the object will receive noti\336cation whenever the) 198 559.33 T
(Clipboard\325) 198 547.33 T
(s contents are changed \050including when your application) 245.23 547.33 T
-0.44 (perpetrates the change\051. Registration can be either with special routines) 198 535.33 P
(or with the) 198 523.33 T
1 9 Q
(GCN) 251.71 523.33 T
1 10 Q
( noti\336cation type) 272.55 523.33 T
1 9 Q
(GWNT_TRANSFER_NOTIFICA) 353.3 523.33 T
(TION) 488.64 523.33 T
1 10 Q
(.) 512.64 523.33 T
2 F
(u) 180 504.33 T
1 F
(Maintain the Edit Menu) 198 504.33 T
-0.24 (In order to provide the user with the) 198 492.33 P
3 F
-0.24 (Cut) 367.59 492.33 P
1 F
-0.24 (,) 384.44 492.33 P
3 F
-0.24 (Copy) 389.77 492.33 P
1 F
-0.24 (, and) 411.62 492.33 P
3 F
-0.24 (Paste) 436.9 492.33 P
1 F
-0.24 ( features, your) 461.71 492.33 P
(application must have an Edit menu. Most programmers will simply) 198 480.33 T
(include a GenEditControl object to create and maintain the Edit menu.) 198 468.33 T
(Y) 198 456.33 T
(our clipboard-management object must update the triggers properly) 203.93 456.33 T
(whenever the contents of the Clipboard are changed.) 198 444.33 T
2 F
(u) 180 425.33 T
1 F
(Handle) 198 425.33 T
1 9 Q
(MSG_MET) 234.67 425.33 T
(A_CLIPBOARD_COPY) 280.84 425.33 T
(,) 376.84 425.33 T
(MSG_MET) 382.12 425.33 T
(A_CLIPBOARD_CUT) 428.3 425.33 T
1 10 Q
-0.52 (When the user issues a Cut or Copy order) 198 413.33 P
-0.52 (, the object must put the proper) 385.9 413.33 P
(data into the Clipboard T) 198 401.33 T
(ransfer) 314.63 401.33 T
1 9 Q
(VM) 350.92 401.33 T
1 10 Q
( File.) 365.91 401.33 T
2 F
(u) 180 382.33 T
1 F
(Handle) 198 382.33 T
1 9 Q
(MSG_MET) 234.67 382.33 T
(A_CLIPBOARD_P) 280.84 382.33 T
(ASTE) 357.34 382.33 T
1 10 Q
-0.3 (When the user issues a Paste order) 198 370.33 P
-0.3 (, the object must query the Clipboard) 358.44 370.33 P
-0.81 (to ensure a proper format is available and then copy the information from) 198 358.33 P
(the Clipboard.) 198 346.33 T
2 F
(u) 180 327.33 T
1 F
(Check out when shutting down) 198 327.33 T
(Each object that registers with the Clipboard must unregister when) 198 315.33 T
(shutting down. Otherwise, the) 198 303.33 T
1 9 Q
(UI) 341.35 303.33 T
1 10 Q
( might try to send noti\336cation to a) 352.35 303.33 T
(defunct object or process, resulting in unpredictable behavior) 198 291.33 T
(.) 479.48 291.33 T
(Because the Clipboard is constantly in use by many different threads, you) 180 272.33 T
(must always gain exclusive access to the transfer) 180 259.33 T
1 9 Q
(VM) 410.21 259.33 T
1 10 Q
( \336le when you want to) 425.2 259.33 T
(use it. After you\325re done with the transfer \336le, you should relinquish) 180 246.33 T
(exclusive access so other threads can continue to use it.) 180 233.33 T
(For operations that involve changing the transfer item \050cut and copy) 180 213.33 T
(, for) 495.2 213.33 T
(example\051, you must register your new transfer item with) 180 200.33 T
5 F
(ClipboardRegisterItem\050\051) 180 187.33 T
1 F
(, which also allows other threads to use the \336le.) 307.97 187.33 T
-0.84 (For operations that involve looking at but not changing the transfer item, you) 180 174.33 P
-0.11 (should use) 180 161.33 P
5 F
-0.11 (ClipboardQueryItem\050\051) 231.83 161.33 P
1 F
-0.11 (. Since you have no changes to register) 348.13 161.33 P
-0.11 (,) 525.55 161.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "310" 12
%%Page: "311" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(311) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(you must later use) 180 641.33 T
5 F
(ClipboardDoneW) 268.9 641.33 T
(ithItem\050\051) 357.6 641.33 T
1 F
( to give up your exclusive) 404.26 641.33 T
(access to the transfer) 180 628.33 T
1 9 Q
(VM) 281.11 628.33 T
1 10 Q
( \336le.) 296.1 628.33 T
0 14 Q
(7.3.1) 130.86 586 T
0 18 Q
(Registering with the Clipboard) 180 586 T
4 10 Q
(ClipboardAddToNotif) 180 562.33 T
(icationList\050\051) 294 562.33 T
1 F
(Because the Clipboard is a system entity available to all geodes, another) 180 542.33 T
(thread may change it without your application noticing. The Clipboard) 180 529.33 T
-0.01 (therefore provides noti\336cation for this case. Because the Clipboard does not) 180 516.33 P
-0.7 (know which geodes are interested in its contents, however) 180 503.33 P
-0.7 (, applications must) 442.35 503.33 P
(register when they \336rst start up.) 180 490.33 T
(Calling) 180 470.33 T
5 F
(ClipboardAddT) 216.49 470.33 T
(oNoti\336cationList\050\051) 295.95 470.33 T
1 F
( allows an application to add) 391.86 470.33 T
-0.53 (an object to the list of those noti\336ed of changes to the Clipboard. This routine) 180 457.33 P
(should be called by whichever object is going to be handling the Cut, Copy) 180 444.33 T
(,) 520.41 444.33 T
(and Paste operations, typically in the object\325) 180 431.33 T
(s) 383.74 431.33 T
1 9 Q
(MSG_MET) 391.15 431.33 T
(A_INITIALIZE) 437.32 431.33 T
1 10 Q
(handler) 180 418.33 T
(. If the object handling the Clipboard operations is the application\325) 215.37 418.33 T
(s) 521.52 418.33 T
-0.53 (Process object, however) 180 405.33 P
-0.53 (, it may call) 286.91 405.33 P
5 F
-0.54 (ClipboardAddT) 341.86 405.33 P
-0.54 (oNoti\336cationList\050\051) 421.32 405.33 P
1 F
-0.53 ( in) 517.23 405.33 P
(its) 180 392.33 T
1 9 Q
(MSG_GEN_PROCESS_OPEN_APPLICA) 194.45 392.33 T
(TION) 365.8 392.33 T
1 10 Q
( handler) 389.8 392.33 T
(.) 427.95 392.33 T
0 14 Q
(7.3.2) 130.86 350 T
0 18 Q
(Managing the Edit Menu) 180 350 T
4 10 Q
(MSG_META_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_ITEM_CHANGED,) 180 326.33 T
(ClipboardTestItemFormat\050\051) 180 313.33 T
1 F
-0.8 (The Edit menu is simply a normal menu with several standard triggers. Most) 180 293.33 P
(applications will simply include a GenEditControl object in their) 180 280.33 T
1 9 Q
(UI) 480.96 280.33 T
1 10 Q
(, add a) 491.96 280.33 T
(menu GenInteraction of type) 180 267.33 T
1 9 Q
(GIGT_EDIT_MENU) 316.11 267.33 T
1 10 Q
(, and leave the Edit menu) 401.61 267.33 T
-0.27 (construction up to them \050see section 7.3.3 on page 314\051. Some, however) 180 254.33 P
-0.27 (, may) 503.38 254.33 P
-0.37 (want to create their own menu and triggers. A sample of this type of setup is) 180 241.33 P
(shown in Code Display) 180 228.33 T
(7-) 288.35 228.33 T
(4.) 297.24 228.33 T
81 195.98 531 208 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 195.98 531 208 R
7 X
0 0 0 1 0 0 0 K
V
76.5 203.23 617.5 206.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 189.31 T
(7-) 147.13 189.31 T
(4 A Sample Edit Menu) 156.02 189.31 T
4 9 Q
(/* Other objects, including a GenPrimary as the parent of the GenInteraction, are) 81 174.98 T
( * left out for clarity. */) 81 163.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "311" 13
%%Page: "312" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(312) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* The GenInteraction is the menu in which the three triggers will appear. */) 81 642 T
(@object GenInteractionClass EditMenu = {) 81 631 T
(GI_visMoniker = \324E\325, \322Edit\323;) 102.6 620 T
(GI_comp = EditCut, EditCopy, EditPaste;) 102.6 609 T
(GII_visibility = GIV_POPUP;) 102.6 598 T
(}) 81 587 T
(/* The Cut trigger sends a MSG_META_CLIPBOARD_CUT to the Process) 81 569 T
( * object when pressed. */) 81 558 T
(@object GenTriggerClass EditCut = {) 81 547 T
(GI_visMoniker = \324t\325, \322Cut\323;) 102.6 536 T
(GTI_destination = process;) 102.6 525 T
(GTI_actionMsg = MSG_META_CLIPBOARD_CUT;) 102.6 514 T
(}) 81 503 T
(/* The Copy trigger sends a MSG_META_CLIPBOARD_COPY to the) 81 485 T
( * Process object when pressed. */) 81 474 T
(@object GenTriggerClass EditCopy = {) 81 463 T
(GI_visMoniker = \324C\325, \322Copy\323;) 102.6 452 T
(GTI_destination = process;) 102.6 441 T
(GTI_actionMsg = MSG_META_CLIPBOARD_COPY;) 102.6 430 T
(}) 81 419 T
(/* the Paste trigger is set up initially disabled. It sends a) 81 401 T
( * MSG_META_CLIPBOARD_PASTE to the Process object when pressed. */) 81 390 T
(@object GenTriggerClass EditPaste = {) 81 372 T
(GI_visMoniker = \324P\325, \322Paste\323;) 102.6 361 T
(GTI_destination = process;) 102.6 350 T
(GTI_actionMsg = MSG_META_CLIPBOARD_PASTE;) 102.6 339 T
(GI_states = @default & ~GS_ENABLED;) 102.6 328 T
(}) 81 317 T
81 292.98 531 305 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 292.98 531 305 R
7 X
0 0 0 1 0 0 0 K
V
76.5 300.23 617.5 303.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.24 (Some Edit menus may also contain other triggers such as \322Delete Event,\323 or) 180 275.31 P
(\322Remove Item.\323 These triggers, however) 180 262.31 T
(, are not standard and must be) 364.45 262.31 T
(implemented exclusively by the application.) 180 249.31 T
(T) 180 229.31 T
(wo main rules govern the maintenance of the Edit menu:) 185.96 229.31 T
2 F
(u) 180 209.31 T
1 F
(The) 198 209.31 T
3 F
(Cut) 218.56 209.31 T
1 F
( and) 235.41 209.31 T
3 F
(Copy) 258.38 209.31 T
1 F
( triggers are enabled only when some data is selected) 281.34 209.31 T
(that may be cut or copied from the document into the Clipboard.) 198 197.31 T
2 F
(u) 180 178.31 T
1 F
-0.26 (The) 198 178.31 P
3 F
-0.26 (Paste) 218.3 178.31 P
1 F
-0.26 ( trigger is enabled only when data in a pasteable format exists) 243.11 178.31 P
(in the Clipboard\325) 198 166.31 T
(s T) 275.05 166.31 T
(ransfer) 288.51 166.31 T
1 9 Q
(VM) 324.8 166.31 T
1 10 Q
( File.) 339.79 166.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "312" 14
%%Page: "313" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(313) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.79 (The \336rst rule must be implemented entirely by the application; the Clipboard) 180 641.33 P
-0.55 (will not enable or disable the Copy or Cut triggers. The second rule, however) 180 628.33 P
-0.55 (,) 525.99 628.33 P
(requires that the application be noti\336ed whenever the Clipboard\325) 180 615.33 T
(s contents) 479.11 615.33 T
(change\321it is possible, for example, for the application to copy data to the) 180 602.33 T
(Clipboard, enable its Paste trigger) 180 589.33 T
(, and have another application then also) 338.18 589.33 T
-0.61 (copy some custom data to the Clipboard. In this case, the original application) 180 576.33 P
(must disable its Paste trigger if it can not read the data.) 180 563.33 T
-0.7 (Whenever the Clipboard\325) 180 543.33 P
-0.7 (s contents change, the) 293.23 543.33 P
1 9 Q
-0.63 (UI) 395.64 543.33 P
1 10 Q
-0.7 ( will send noti\336cation to all) 406.63 543.33 P
(objects that have registered with it. The noti\336cation will be in the message) 180 530.33 T
1 9 Q
(MSG_MET) 180 517.33 T
(A_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_ITEM_CHANGED) 226.17 517.33 T
1 10 Q
(.) 517.5 517.33 T
(Use of this message can be found in the ClipSamp sample application.) 180 504.33 T
81 471.98 531 484 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 471.98 531 484 R
7 X
0 0 0 1 0 0 0 K
V
76.5 479.23 617.5 482.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 465.31 T
(7-) 147.13 465.31 T
(5 Handling Clipboard Changes) 156.02 465.31 T
4 9 Q
(/* MSG_META_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_ITEM_CHANGED is sent with no) 81 450.98 T
( * parameters and requires no return value. */) 81 439.98 T
(/* The strategy of this message is to first check whether the CIF_TEXT format, the) 81 421.98 T
( * only format supported by this sample application, is available on the Clipboard.) 81 410.98 T
( * If so, the Paste trigger is enabled; if not, the Paste trigger is disabled. */) 81 399.98 T
(@method MyClipProcessClass, MSG_META_CLIPBOARD_NOTIFY_NORMAL_TRANSFER_ITEM_CHANGED) 81 381.98 T
({) 81 370.98 T
(ClipboardQueryArgs) 102.6 359.98 T
(query;) 212.5 359.98 T
(/* A structure of arguments */) 344 359.98 T
(Boolean) 102.6 348.98 T
(endisable = FALSE;) 212.5 348.98 T
(/* The trigger is disabled */) 344 348.98 T
(/* Call ClipboardQueryItem\050\051 to gain exclusive access to and information about) 102.6 330.98 T
(* the current transfer item. Pass it zero indicating we\325re checking the) 108 319.98 T
(* normal transfer item \050not the quick-transfer item\051 and the empty arguments) 108 308.98 T
(* structure. */) 108 297.98 T
(ClipboardQueryItem\050TIF_NORMAL, &query\051;) 102.6 286.98 T
(/* If there are any formats, then test if CIF_TEXT is one of them. The routine) 102.6 268.98 T
(* ClipboardTestItemFormat\050\051 tests a format against all those available and) 108 257.98 T
(* returns true if it is supported, false if it is not. Use the macro) 108 246.98 T
(* FormatIDFromManufacturerAndType to create the format argument. If CIF_TEXT) 108 235.98 T
(* is not supported, then the enDisable argument is set to TRUE. */) 108 224.98 T
(if \050query.CQA_numFormats\051 {) 102.6 206.98 T
(if \050ClipboardTestItemFormat\050query.CQA_header,) 125 195.98 T
(FormatIDFromManufacturerAndType\050MANUFACTURER_ID_ME, CIF_TEXT\051\051\051 {) 168.98 184.98 T
(endisable = TRUE;) 146.6 173.98 T
(}) 125 162.98 T
(}) 102.6 151.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "313" 15
%%Page: "314" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(314) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* Because we\325ve found out what we need to know, restore the Clipboard with a) 102.6 642 T
(* call to ClipboardDoneWithItem\050\051. This routine takes the transfer item\325s) 108 631 T
(* header and returns nothing; it also relinquishes our exclusive) 108 620 T
(* access to the Clipboard and is therefore very important. */) 108 609 T
(ClipboardDoneWithItem\050query.CQA_header\051;) 102.6 591 T
(/* Now, if endisable is true, set the Paste trigger enabled. If endisable is) 102.6 573 T
(* false, set it disabled. These operations are accomplished by sending the) 108 562 T
(* appropriate message to the trigger object. */) 108 551 T
(if \050endisable\051 {) 102.6 533 T
(@call EditPaste::MSG_GEN_SET_ENABLED\050VUM_NOW\051;) 125 522 T
(} else {) 102.6 511 T
(@call EditPaste::MSG_GEN_SET_NOT_ENABLED\050VUM_NOW\051;) 125 500 T
(}) 102.6 489 T
(}) 81 478 T
81 453.98 531 466 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 453.98 531 466 R
7 X
0 0 0 1 0 0 0 K
V
76.5 461.23 617.5 464.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(7.3.3) 130.86 413.98 T
0 18 Q
(The GenEditControl) 180 413.98 T
1 10 Q
(As stated above, most applications will simply let a GenEditControl object) 180 390.31 T
(create and maintain their Edit menu.) 180 377.31 T
5 F
(GenEditControlClass) 356.32 377.31 T
1 F
( is a subclass) 466.69 377.31 T
-0.68 (of) 180 364.31 P
5 F
-0.7 (GenControlClass) 190.43 364.31 P
1 F
-0.68 ( \050see \322Generic UI Controllers,\323 Chapter) 278.58 364.31 P
-0.68 (12 of the Object) 458.52 364.31 P
(Reference Book for usage of controllers in general\051.) 180 351.31 T
(The GenEditControl object can provide triggers and/or tools for Undo, Cut,) 180 331.31 T
-0.03 (Copy) 180 318.31 P
-0.03 (, Paste, Select All, and Delete operations. These operations must all be) 202.22 318.31 P
(handled by your application, of course, just as if you did not use a) 180 305.31 T
(GenEditControl; using this controller) 180 292.31 T
(, however) 351.85 292.31 T
(, simpli\336es your) 395.37 292.31 T
1 9 Q
(UI) 471.86 292.31 T
1 10 Q
(programming and allows the Edit tools to be used by the GenT) 180 279.31 T
(oolControl.) 468.39 279.31 T
(The features of the GenEditControl are listed below \050they are \337ags of the) 180 259.31 T
5 F
(GECFeatures) 180 246.31 T
1 F
( record type\051:) 249.81 246.31 T
1 9 Q
(GECF_UNDO) 180 226.31 T
1 10 Q
-0.32 (This feature adds an \322Undo\323 trigger to the Edit menu. It sends) 243 226.31 P
1 9 Q
(MSG_MET) 243 214.31 T
(A_UNDO) 289.17 214.31 T
1 10 Q
( to the application\325) 328.84 214.31 T
(s target.) 414.23 214.31 T
1 9 Q
(GECF_CUT) 180 195.31 T
1 10 Q
(This feature adds a \322Cut\323 trigger to the Edit menu. When the) 243 195.31 T
(user activates this, it sends) 243 183.31 T
1 9 Q
(MSG_MET) 372.28 183.31 T
(A_CLIPBOARD_CUT) 418.45 183.31 T
1 10 Q
( to) 509.45 183.31 T
(the application\325) 243 171.31 T
(s target.) 313.94 171.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "314" 16
%%Page: "315" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(315) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(GECF_COPY) 180 641.33 T
1 10 Q
-0.34 (This feature adds a \322Copy\323 trigger to the Edit menu. When the) 243 641.33 P
(user activates this, it sends) 243 629.33 T
1 9 Q
(MSG_MET) 372.28 629.33 T
(A_CLIPBOARD_COPY) 418.45 629.33 T
1 10 Q
( to) 515.45 629.33 T
(the application\325) 243 617.33 T
(s target.) 313.94 617.33 T
1 9 Q
(GECF_P) 180 598.33 T
(ASTE) 215.84 598.33 T
1 10 Q
-0.54 (This feature adds a \322Paste\323 trigger to the Edit menu. When the) 243 598.33 P
-0.44 (user activates this, it sends) 243 586.33 P
1 9 Q
-0.4 (MSG_MET) 370.09 586.33 P
-0.4 (A_CLIPBOARD_P) 416.26 586.33 P
-0.4 (ASTE) 492.76 586.33 P
1 10 Q
-0.44 ( to) 517.43 586.33 P
(the application\325) 243 574.33 T
(s target.) 313.94 574.33 T
1 9 Q
(GECF_SELECT_ALL) 180 555.33 T
1 10 Q
(This feature adds a \322Select All\323 trigger to the Edit menu. It) 243 543.33 T
(sends) 243 531.33 T
1 9 Q
(MSG_MET) 271.89 531.33 T
(A_SELECT_ALL) 318.06 531.33 T
1 10 Q
( to the applications\325 target.) 389.23 531.33 T
1 9 Q
(GECF_DELETE) 180 512.33 T
1 10 Q
(This feature adds a \322Delete\323 trigger to the Edit menu. When) 243 500.33 T
(the user activates this, it sends) 243 488.33 T
1 9 Q
(MSG_MET) 390.06 488.33 T
(A_DELETE) 436.23 488.33 T
1 10 Q
( to the) 485.73 488.33 T
(application\325) 243 476.33 T
(s target.) 296.16 476.33 T
(The GenEditControl also provides an equivalent set of tools. Each tool) 180 457.33 T
(executes the exact same functions as the analogous feature; see Code) 180 444.33 T
(Display) 180 431.33 T
(7-) 218.16 431.33 T
(6 for the listing of the features and tools as well as the standard) 227.05 431.33 T
(settings.) 180 418.33 T
(The GenEditControl handles two different noti\336cation types:) 180 398.33 T
1 9 Q
-0.59 (GWNT_SELECT_ST) 180 385.33 P
-0.59 (A) 266.52 385.33 P
-0.59 (TE_CHANGE) 272.52 385.33 P
1 10 Q
-0.66 (, sent when the selection state changes, and) 330.85 385.33 P
1 9 Q
-0.51 (GWNT_UNDO_ST) 180 372.33 P
-0.51 (A) 258.02 372.33 P
-0.51 (TE_CHANGE) 264.02 372.33 P
1 10 Q
-0.56 (, sent when a state change in the Undo status) 322.35 372.33 P
-0.45 (occurs. In both cases, the GenEditControl will appropriately update the Cut,) 180 359.33 P
-0.09 (Copy) 180 346.33 P
-0.09 (, Paste, Delete, and Undo triggers \050the Select All trigger will always be) 202.22 346.33 P
(enabled\051.) 180 333.33 T
81 300.98 531 313 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 300.98 531 313 R
7 X
0 0 0 1 0 0 0 K
V
76.5 308.23 617.5 311.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 294.31 T
(7-) 147.13 294.31 T
(6 GenEditControl Features and T) 156.02 294.31 T
(ools) 311.42 294.31 T
4 9 Q
(/* This display shows the features and tools records of GenEditControlClass, as) 81 279.98 T
( * well as the default settings and instance data. */) 81 268.98 T
(/* GenEditControlClass features */) 125 250.98 T
(typedef WordFlags GECFeatures;) 81 239.98 T
(#define GECF_UNDO) 81 228.98 T
(0x0020) 256.5 228.98 T
(/* MSG_META_UNDO */) 344 228.98 T
(#define GECF_CUT) 81 217.98 T
(0x0010) 256.5 217.98 T
(/* MSG_META_CLIPBOARD_CUT */) 344 217.98 T
(#define GECF_COPY) 81 206.98 T
(0x0008) 256.5 206.98 T
(/* MSG_META_CLIPBOARD_COPY */) 344 206.98 T
(#define GECF_PASTE) 81 195.98 T
(0x0004) 256.5 195.98 T
(/* MSG_META_CLIPBOARD_PASTE */) 344 195.98 T
(#define GECF_SELECT_ALL) 81 184.98 T
(0x0002) 256.5 184.98 T
(/* MSG_META_SELECT_ALL */) 344 184.98 T
(#define GECF_DELETE) 81 173.98 T
(0x0001) 256.5 173.98 T
(/* MSG_META_DELETE */) 344 173.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "315" 17
%%Page: "316" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(316) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(#define GEC_DEFAULT_FEATURES) 81 642 T
(\050GECF_UNDO | GECF_CUT | GECF_COPY | \134) 256.5 642 T
( GECF_PASTE | GECF_SELECT_ALL | GECF_DELETE\051) 256.5 631 T
(/* GenEditControlClass tools */) 125 613 T
(typedef WordFlags GECToolboxFeatures;) 81 602 T
(#define GECTF_UNDO) 81 591 T
(0x0020) 256.5 591 T
(/* MSG_META_UNDO */) 344 591 T
(#define GECTF_CUT) 81 580 T
(0x0010) 256.5 580 T
(/* MSG_META_CLIPBOARD_CUT */) 344 580 T
(#define GECTF_COPY) 81 569 T
(0x0008) 256.5 569 T
(/* MSG_META_CLIPBOARD_COPY */) 344 569 T
(#define GECTF_PASTE) 81 558 T
(0x0004) 256.5 558 T
(/* MSG_META_CLIPBOARD_PASTE */) 344 558 T
(#define GECTF_SELECT_ALL) 81 547 T
(0x0002) 256.5 547 T
(/* MSG_META_SELECT_ALL */) 344 547 T
(#define GECTF_DELETE) 81 536 T
(0x0001) 256.5 536 T
(/* MSG_META_DELETE */) 344 536 T
(#define GEC_DEFAULT_TOOLBOX_FEATURES) 81 518 T
(\050GECTF_UNDO | GECTF_CUT | GECTF_COPY |) 301 518 T
( GECTF_PASTE | GECTF_SELECT_ALL |) 301 507 T
( GECTF_DELETE\051) 301 496 T
(/* GenEditControlClass Instance Data Settings */) 125 478 T
(@default GCI_output = \050TO_APP_TARGET\051;) 102.6 467 T
(/* Send output to the target */) 344 467 T
(@default GI_states = \050@default | GS_ENABLED\051;) 102.6 456 T
(@default GI_attrs = \050@default | GA_KBD_SEARCH_PATH\051;) 102.6 445 T
81 420.98 531 433 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 420.98 531 433 R
7 X
0 0 0 1 0 0 0 K
V
76.5 428.23 617.5 431.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(7.3.4) 130.86 380.98 T
0 18 Q
(Handling Cut and Copy) 180 380.98 T
4 10 Q
(MSG_META_CLIPBOARD_CUT, MSG_META_CLIPBOARD_COPY) 180 357.31 T
1 F
-0.33 (Cut and Copy are very similar in function; both put data onto the Clipboard.) 180 337.31 P
-0.61 (However) 180 324.31 P
-0.61 (, Cut causes the data to subsequently be deleted from the document,) 220.18 324.31 P
(and Copy does not.) 180 311.31 T
-0.6 (When the user starts either of these operations, the object that handles them) 180 291.31 P
-0.59 (must go through a series of speci\336c steps to load the data into the Clipboard\325) 180 278.31 P
-0.59 (s) 524.18 278.31 P
1 9 Q
-0.43 (VM) 180 265.31 P
1 10 Q
-0.48 ( \336le. \050For simplicity of example, this chapter will assume that the Process) 194.99 265.31 P
(object will handle all Clipboard operations; this may not be the case in) 180 252.31 T
(complex programs.\051) 180 239.31 T
(The steps are simple; each is enumerated below) 180 219.31 T
(, and edited examples from) 399.67 219.31 T
-0.47 (the sample application ClipSamp are provided in Code Display) 180 206.31 P
-0.47 (7-) 469.25 206.31 P
-0.47 (7 and Code) 478.14 206.31 P
(Display) 180 193.31 T
(7-) 218.16 193.31 T
(8. Note that these examples do not use the default text object) 227.05 193.31 T
(handlers for copy and paste; they treat the entire text \337ow as the current) 180 180.31 T
(selection.) 180 167.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "316" 18
%%Page: "317" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(317) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(1) 180 641.33 T
1 F
(Duplicate and attach the data) 198 641.33 T
(Y) 198 629.33 T
(ou must create a duplicate of whatever data is being loaded into the) 203.93 629.33 T
(Clipboard. This step includes allocating new) 198 617.33 T
1 9 Q
(VM) 405.44 617.33 T
1 10 Q
( blocks in the T) 420.43 617.33 T
(ransfer) 490.57 617.33 T
1 9 Q
(VM) 198 605.33 T
1 10 Q
( File with) 212.99 605.33 T
5 9 Q
(VMA) 260.23 605.33 T
5 10 Q
(lloc\050\051) 282.73 605.33 T
1 F
(. As an alternative, you may pre-duplicate the) 309.21 605.33 T
(item in memory with) 198 593.33 T
5 F
(MemAlloc\050\051) 297.83 593.33 T
1 F
( and then simply attach them to the) 357.09 593.33 T
(T) 198 581.33 T
(ransfer) 204.05 581.33 T
1 9 Q
(VM) 240.34 581.33 T
1 10 Q
( File with) 255.33 581.33 T
5 9 Q
(VMA) 302.57 581.33 T
5 10 Q
(ttach\050\051) 325.07 581.33 T
1 F
(.) 359.89 581.33 T
5 F
(2) 180 562.33 T
1 F
(Complete the transfer item\325) 198 562.33 T
(s header) 325.23 562.33 T
-0.42 (Fill in all information \336elds in the transfer item\325) 198 550.33 P
-0.42 (s header block including) 417.66 550.33 P
(formats, owner) 198 538.33 T
(, and \337ags.) 266.89 538.33 T
5 F
(3) 180 519.33 T
1 F
(Register the transfer item) 198 519.33 T
(Once the data has been attached and the header completed, you must) 198 507.33 T
-0.12 (register the transfer with the Clipboard. The) 198 495.33 P
1 9 Q
-0.11 (UI) 406.99 495.33 P
1 10 Q
-0.12 ( will then delete any old) 417.99 495.33 P
(data in the Clipboard and replace it with your new transfer item. T) 198 483.33 T
(o) 507.31 483.33 T
(register the transfer item, use) 198 471.33 T
5 F
(ClipboardRegisterItem\050\051) 339.67 471.33 T
1 F
(.) 467.64 471.33 T
81 439.98 531 452 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.98 531 452 R
7 X
0 0 0 1 0 0 0 K
V
76.5 447.23 617.5 450.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 433.31 T
(7-) 147.13 433.31 T
(7 MSG_MET) 156.02 433.31 T
(A_CLIPBOARD_CUT) 213.07 433.31 T
4 9 Q
(/* This is the same as MSG_META_CLIPBOARD_COPY except that after copying the) 81 418.98 T
( * data to the Clipboard, it deletes the data from the document.) 81 407.98 T
( *) 81 396.98 T
( * MSG_META_CLIPBOARD_CUT has no parameters and no return value. The strategy) 81 385.98 T
( * is as follows: First, copy the subject data into the Clipboard with) 81 374.98 T
( * MSG_META_CLIPBOARD_COPY. Then, delete the data \050which, in this case, is a single) 81 363.98 T
( * memory block containing all the subject text\051. */) 81 352.98 T
(@method ClipSampProcessClass, MSG_META_CLIPBOARD_CUT {) 81 334.98 T
(/* Use MSG_META_CLIPBOARD_COPY to copy the data to the clipboard. */) 125 323.98 T
(@call self::MSG_META_CLIPBOARD_COPY\050\051;) 102.6 312.98 T
(/* Delete the data. The data is contained entirely within a single memory) 125 294.98 T
(* block and is just text. The block is referenced by the memory handle) 130.4 283.98 T
(* textHandle. If textHandle is not null, then the block may be freed. */) 130.4 272.98 T
(if \050textHandle\051 {) 102.6 261.98 T
(/* If textHandle is valid, */) 301 261.98 T
(MemFree\050textHandle\051;) 125 250.98 T
(/* free the memory block */) 301 250.98 T
(textHandle = 0;) 125 239.98 T
(/* and zero the handle. */) 301 239.98 T
(}) 102.6 228.98 T
(/* Redraw the view area to reflect the deleted text. */) 125 217.98 T
(ResetViewArea\050\051;) 102.6 206.98 T
(/* Custom routine to redraw the view. */) 212.5 206.98 T
(}) 81 195.98 T
81 171.95 531 183.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 171.95 531 183.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 179.2 617.5 182.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "317" 19
%%Page: "318" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(318) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(7-) 147.13 629.31 T
(8 MSG_MET) 156.02 629.31 T
(A_CLIPBOARD_COPY) 213.07 629.31 T
4 9 Q
(/* This message handler goes through all the steps necessary for a Copy operation) 81 614.98 T
( * that works with text data only.) 81 603.98 T
( * MSG_META_CLIPBOARD_COPY has no parameters and requires no return.) 81 592.98 T
( *) 81 581.98 T
( * The strategy employed by this handler is as follows:) 81 570.98 T
( * First, allocate memory for and create the duplicate data block, filling in all) 81 559.98 T
( * the appropriate fields.) 81 548.98 T
( * Next, retrieve the Transfer VM File and attach the data block to the file.) 81 537.98 T
( * Next, allocate and construct the transfer item header VM block.) 81 526.98 T
( * Finally, register and lock in the transfer item to the Clipboard.) 81 515.98 T
( *) 81 504.98 T
( * A single global variable named textHandle refers to the block of text owned and) 81 493.98 T
( * used by the sample application. All other data structures are defined within the) 81 482.98 T
( * message handler. */) 81 471.98 T
(@method ClipSampProcessClass, MSG_META_CLIPBOARD_COPY {) 81 453.98 T
(char) 102.6 442.98 T
(*textText;) 212.5 442.98 T
(/* temporary string for the text */) 301 442.98 T
(int) 102.6 431.98 T
(textLength;) 212.5 431.98 T
(/* length of string including null */) 301 431.98 T
(MemHandle) 102.6 420.98 T
(headerMemHandle;) 212.5 420.98 T
(/* handle of ClipboardItemHeader block */) 301 420.98 T
(VMFileHandle) 102.6 409.98 T
(transferVMFile;) 212.5 409.98 T
(/* VM file handle of Transfer VM File */) 301 409.98 T
(VMBlockHandle) 102.6 398.98 T
(dataVMBlock;) 212.5 398.98 T
(/* VM handle of attached data block */) 301 398.98 T
(VMBlockHandle) 102.6 387.98 T
(headerVMBlock;) 212.5 387.98 T
(/* VM handle of attached header block */) 301 387.98 T
(ClipboardItemHeader) 102.6 376.98 T
(*headerMem;) 212.5 376.98 T
(/* ClipboardItemHeader for the VM file */) 301 376.98 T
(optr) 102.6 365.98 T
(textObj;) 212.5 365.98 T
(/* temporary text object for transfer */) 301 365.98 T
(/* First, lock the text string into memory and get its length, adding one for) 102.6 347.98 T
(* the null character at the end. Then unlock the text string\325s block. */) 108 336.98 T
(textText = \050char *\051 MemLock\050textHandle\051;) 102.6 318.98 T
(textLength = \050strlen\050textText\051 + 1\051;) 102.6 307.98 T
(MemUnlock\050textHandle\051;) 102.6 296.98 T
(/* Next, build the transfer item block by creating a temporary text object and) 102.6 278.98 T
(* copying our text into it. Other formats may simply copy the text directly) 108 267.98 T
(* into a VM block. */) 108 256.98 T
(textObj = TextAllocClipboardObject\050ClipboardGetClipboardFile\050\051, 0, 0\051;) 102.6 238.98 T
(@call textObj::MSG_VIS_TEXT_REPLACE_ALL_PTR\050\050char *\051MemLock\050textHandle\051, 0\051;) 102.6 227.98 T
(MemUnlock\050textHandle\051;) 102.6 216.98 T
(dataVMBlock = TextFinishedWithClipboardObject\050) 102.6 205.98 T
(textObj, TCO_RETURN_TRANSFER_FORMAT\051;) 301 194.98 T
(/* Now get the transfer VM file. */) 102.6 176.98 T
(transferVMFile = ClipboardGetClipboardFile\050\051;) 102.6 165.98 T
(/* Now, allocate and fill in the transfer item header block. */) 102.6 147.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "318" 20
%%Page: "319" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(319) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(headerVMBlock = VMalloc\050) 102.6 642 T
(transferVMFile,) 256.5 642 T
(sizeof\050ClipboardItemHeader\051,) 256.5 631 T
(MY_TRANSFER_ID\051;) 256.5 620 T
(headerMem = \050ClipboardItemHeader *\051VMLock\050transferVMFile, headerVMBlock,) 102.6 609 T
(&headerMemHandle\051;) 388 598 T
(headerMem->CIH_owner = \050optr\051 \050\050\050dword\051GeodeGetProcessHandle\050\051<<16\051 | 0\051;) 102.6 587 T
(headerMem->CIH_flags = 0;) 102.6 576 T
(/* Normal transfer; no flags. */) 301 576 T
(\050void\051 strcpy\050headerMem->CIH_name, \322Sample Text\323\051;) 102.6 565 T
(headerMem->CIH_formatCount = 1;) 102.6 554 T
(headerMem->CIH_sourceID = 0;) 102.6 543 T
(headerMem->CIH_formats[0].CFI_format =) 102.6 532 T
(FormatIDFromManufacturerAndType\050MANUFACTURER_ID_ME, CIF_TEXT\051;) 168.98 521 T
(headerMem->CIH_formats[0].CFI_vmChain =) 102.6 510 T
(VMCHAIN_MAKE_FROM_VM_BLOCK\050dataVMBlock\051;) 256.5 499 T
(headerMem->CIH_formats[0].CFI_extra1 = 0;) 102.6 488 T
(headerMem->CIH_formats[0].CFI_extra2 = 0;) 102.6 477 T
(VMUnlock\050headerMemHandle\051;) 102.6 466 T
(/* Now register the transfer item with the Clipboard. This will actually put) 102.6 448 T
(* the transfer item and its header into the Clipboard. */) 108 437 T
(ClipboardRegisterItem\050BlockIDFromFileAndBlock\050) 102.6 419 T
(transferVMFile, headerVMBlock\051,) 301 408 T
(0\051;) 212.5 397 T
(}) 81 386 T
81 361.98 531 374 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 361.98 531 374 R
7 X
0 0 0 1 0 0 0 K
V
76.5 369.23 617.5 372.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(7.3.5) 130.86 321.98 T
0 18 Q
(Handling Paste) 180 321.98 T
4 10 Q
(ClipboardRequestItemFormat\050\051, MSG_META_CLIPBOARD_PASTE) 180 298.31 T
1 F
-0.71 (The Paste operation pulls data off the Clipboard and places it at the insertion) 180 278.31 P
(point in the application\325) 180 265.31 T
(s data. The Clipboard remains unchanged) 289.65 265.31 T
-0.43 (throughout the operation; the data is simply duplicated and passed on to the) 180 252.31 P
(application.) 180 239.31 T
(The steps in handling a) 180 219.31 T
1 9 Q
(MSG_MET) 291.69 219.31 T
(A_CLIPBOARD_P) 337.86 219.31 T
(ASTE) 414.36 219.31 T
1 10 Q
( are simple; each is) 439.03 219.31 T
(enumerated below) 180 206.31 T
(, and a sample method for pasting is shown in Code) 264.09 206.31 T
(Display) 180 193.31 T
(7-) 218.16 193.31 T
(9.) 227.05 193.31 T
5 F
(1) 180 173.31 T
1 F
(Query the Clipboard) 198 173.31 T
-0.75 (First, you must make sure that you have exclusive access to the clipboard) 198 161.31 P
(item. T) 198 149.31 T
(o this end call) 230.24 149.31 T
5 F
(ClipboardQueryItem\050\051) 297.29 149.31 T
1 F
(. Y) 413.59 149.31 T
(ou should also call) 425.08 149.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "319" 21
%%Page: "320" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(320) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(ClipboardRequestItemFormat\050\051) 198 641.33 T
1 F
( to make sure that the present) 362.82 641.33 T
(clipboard item is pasteable.) 198 629.33 T
5 F
(2) 180 610.33 T
1 F
(Allocate memory if necessary) 198 610.33 T
(If necessary) 198 598.33 T
(, allocate the memory into which the transfer item will be) 252.25 598.33 T
-0.11 (duplicated. Y) 198 586.33 P
-0.11 (ou can not simply reference handles to the transfer item in) 257.9 586.33 P
(the clipboard because the transfer item may be changed by another) 198 574.33 T
(thread at any time.) 198 562.33 T
5 F
(3) 180 543.33 T
1 F
(Lock the T) 198 543.33 T
(ransfer) 246.65 543.33 T
1 9 Q
(VM) 282.94 543.33 T
1 10 Q
( File and grab the transfer item) 297.93 543.33 T
(Lock the T) 198 531.33 T
(ransfer) 246.65 531.33 T
1 9 Q
(VM) 282.94 531.33 T
1 10 Q
( File with a call to) 297.93 531.33 T
5 F
-0.14 (ClipboardRequestItemFormat\050\051) 198 519.33 P
1 F
-0.13 (. Finally) 362.82 519.33 P
-0.13 (, copy the transfer item into) 400.3 519.33 P
(your pre-allocated memory) 198 507.33 T
(.) 320.96 507.33 T
5 F
(4) 180 488.33 T
1 F
(Unlock the T) 198 488.33 T
(ransfer) 257.39 488.33 T
1 9 Q
(VM) 293.68 488.33 T
1 10 Q
( File) 308.67 488.33 T
(By calling) 198 476.33 T
5 F
(ClipboardDoneW) 247.08 476.33 T
(ithItem\050\051) 335.78 476.33 T
1 F
(, relinquish your exclusive) 382.44 476.33 T
-0.39 (access to the T) 198 464.33 P
-0.39 (ransfer) 263.8 464.33 P
1 9 Q
-0.35 (VM) 299.7 464.33 P
1 10 Q
-0.39 ( File and to the clipboard item itself. The Paste) 314.69 464.33 P
(operation can then be completed entirely by your application by) 198 452.33 T
(assimilating the pasted data and displaying it properly) 198 440.33 T
(.) 451.2 440.33 T
81 408.98 531 421 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 408.98 531 421 R
7 X
0 0 0 1 0 0 0 K
V
76.5 416.23 617.5 419.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 402.31 T
(7-) 147.13 402.31 T
(9 MSG_MET) 156.02 402.31 T
(A_CLIPBOARD_P) 213.07 402.31 T
(ASTE) 296.78 402.31 T
4 9 Q
(/* This message handler goes through the necessary steps to grab the transfer item) 81 387.98 T
( * from the Clipboard and copy it into application\325s memory. This example uses a) 81 376.98 T
( * single global variable called textHandle, a memory handle of the only data block) 81 365.98 T
( * owned by the application. The memory block contains text.) 81 354.98 T
( * MSG_META_CLIPBOARD_PASTE has no parameters and requires no return value. */) 81 343.98 T
(@method ClipSampProcessClass, MSG_META_CLIPBOARD_PASTE {) 81 325.98 T
(ClipboardQueryArgs) 102.6 314.98 T
(query;) 256.5 314.98 T
(/* returned by) 344 314.98 T
( * ClipboardQueryItem\050\051 */) 344 303.98 T
(ClipboardRequestArgs) 102.6 292.98 T
(request;) 256.5 292.98 T
(/* returned by) 344 292.98 T
( * ClipboardRequestItemFormat\050\051 */) 344 281.98 T
(TextTransferBlockHeader) 102.6 270.98 T
(*dataBlock) 256.5 270.98 T
(/* pointer to block header */) 344 270.98 T
(MemHandle) 102.6 259.98 T
(dataBlockMemHandle; /* handle of locked block */) 256.5 259.98 T
(word) 102.6 248.98 T
(charsAvail;) 256.5 248.98 T
(/* number of chars in block */) 344 248.98 T
(int) 102.6 237.98 T
(textLength;) 256.5 237.98 T
(/* length of text */) 344 237.98 T
(word) 102.6 226.98 T
(transferFlags = 0; /* flags for the transfer) 256.5 226.98 T
( * \050normal transfer\051 */) 344 215.98 T
(/* Call ClipboardQueryItem\050\051 to be sure that a normal) 146.6 197.98 T
(* transfer item exists in the Clipboard. */) 152 186.98 T
(ClipboardQueryItem\050transferFlags, &query\051;) 102.6 175.98 T
(/* Fills ClipboardQueryArgs structure */) 301 164.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "320" 22
%%Page: "321" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using The Clipboard) 421.09 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(321) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* If a transfer item exists, check for a CIF_TEXT) 146.6 642 T
(* version, the only format we support. */) 152 631 T
(if \050query.CQA_numFormats\051 {) 102.6 620 T
(/* if more than zero formats available */) 256.5 620 T
(if \050ClipboardTestItemFormat\050query.CQA_header,) 118.8 609 T
(FormatIDFromManufacturerAndType\050) 301 598 T
(MANUFACTURER_ID_ME,) 388 587 T
(CIF_TEXT\051\051\051 {) 388 576 T
(/* A CIF_TEXT version exists. Now we grab that transfer item by calling) 125 558 T
( * ClipboardRequestItemFormat\050\051. This routine fills ClipboardRequestArgs,) 125 547 T
( * which contains information about the Transfer VM File and the) 125 536 T
( * ClipboardItemHeader block in that file. */) 125 525 T
(ClipboardRequestItemFormat\050FormatIDFromManufacturerAndType\050) 146.6 507 T
(MANUFACTURER_ID_ME, CIF_TEXT\051,) 301 496 T
(query.CQA_header, &request\051;) 301 485 T
(/* Now we have the VM file handle of the Transfer VM File and the VM block) 125 467 T
( * handle of the ClipboardItemHeader structure. From this we can get the) 125 456 T
( * data in the data block. To speed things up, we will copy the transfer) 125 445 T
( * text directly into our already-allocated memory block; the handle to our) 125 434 T
( * memory block is in textHandle. */) 125 423 T
(dataBlock = \050TextTransferBlockHeader *\051VMLock\050) 125 405 T
(request.CRA_file,) 256.5 394 T
(VMCHAIN_GET_VM_BLOCK\050request.CRA_data\051,) 256.5 383 T
(&dataBlockMemHandle\051;) 256.5 372 T
(textHugeArray = VMCHAIN_GET_VM_BLOCK\050dataBlock->TTBH_text\051;) 125 361 T
(VMUnlock\050dataBlockMemHandle\051;) 125 350 T
(/* Since the data is CIF_TEXT, we know the data block is in the format of) 125 332 T
( * TextTransferBlockHeader. We get the text by cycling through the) 125 321 T
( * format\325s HugeArray. This code has been taken out of this example for) 125 310 T
( * simplicity; you can look at the ClipSamp sample application source) 125 299 T
( * code for it. */) 125 288 T
(}) 102.6 277 T
(/* After copying the text into our block, we signal we\325re done with the) 102.6 259 T
( * transfer file. We do this by calling ClipboardDoneWithItem\050\051. After) 102.6 248 T
( * that, we update our view and return. */) 102.6 237 T
(ClipboardDoneWithItem\050query.CQA_header\051;) 102.6 219 T
(ResetViewArea\050\051;) 102.6 208 T
(/* Routine defined in ClipSamp. */) 256.5 208 T
(}) 81 197 T
81 172.98 531 185 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 172.98 531 185 R
7 X
0 0 0 1 0 0 0 K
V
76.5 180.23 617.5 183.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "321" 23
%%Page: "322" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(322) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(7.3.6) 130.86 636 T
0 18 Q
(Unregistering with the Clipboard) 180 636 T
4 10 Q
(ClipboardRemoveFromNotif) 180 612.33 T
(icationList\050\051) 324 612.33 T
1 F
-0.3 (Because the Clipboard sends noti\336cation out to all registered geodes, geodes) 180 592.33 P
(must \322unregister\323 when they are shutting down. Otherwise, the Clipboard) 180 579.33 T
(will attempt to send a message to a defunct object, and this can cause) 180 566.33 T
(problems for the operating system. Therefore, in your) 180 553.33 T
1 9 Q
(MSG_GEN_PROCESS_CLOSE_APPLICA) 180 540.33 T
(TION) 356.18 540.33 T
1 10 Q
( handler you should make a call) 380.19 540.33 T
-0.61 (to the routine) 180 527.33 P
5 F
-0.62 (ClipboardRemoveFromNoti\336cationList\050\051) 244.12 527.33 P
1 F
-0.61 (, which removes) 455.77 527.33 P
(the passed object from the noti\336cation list.) 180 514.33 T
0 14 Q
(7.3.7) 130.86 472 T
0 18 Q
(Implementing Undo) 180 472 T
1 10 Q
-0.32 (For the most part, implementation of Undo is left up to the application. This) 180 448.33 P
(is due to the fact that operations that may be undone are typically very) 180 435.33 T
(application-speci\336c. The text objects and the Ink object are the only) 180 422.33 T
(exceptions to this; they provide their own Undo functions in response to) 180 409.33 T
1 9 Q
(MSG_MET) 180 396.33 T
(A_UNDO) 226.17 396.33 T
1 10 Q
(. For more information on Undo and how it works in) 265.84 396.33 T
1 9 Q
(GEOS) 180 383.33 T
1 10 Q
(, see \322UI Messages\323 on page 88 of \322System Classes,\323 Chapter) 206.17 383.33 T
(1 of the) 488.07 383.33 T
(Object Reference Book.) 180 370.33 T
0 14 Q
(7.3.8) 130.86 328 T
0 18 Q
(T) 180 328 T
(ransfer File Information) 190.01 328 T
4 10 Q
(ClipboardTestItemFormat\050\051, ClipboardEnumItemFormats\050\051,) 180 304.33 T
(ClipboardGetItemInfo\050\051, ClipboardGetNormalItemInfo\050\051,) 180 291.33 T
(ClipboardGetUndoItemInfo\050\051, ClipboardGetClipboardFile\050\051) 180 278.33 T
1 F
(W) 180 258.33 T
(ith the following routines, you can get information about any of the) 189.44 258.33 T
(transfer \336les in use.) 180 245.33 T
5 F
(ClipboardT) 180 225.33 T
(estItemFormat\050\051) 238.53 225.33 T
1 F
(Given a transfer format, test if the selected transfer item) 243 213.33 T
-0.2 (supports that format. Before using this routine, you must \336rst) 243 201.33 P
(call) 243 189.33 T
5 F
(ClipboardQueryItem\050\051) 262.08 189.33 T
1 F
( to get the transfer item header) 378.38 189.33 T
(.) 522.65 189.33 T
5 F
(ClipboardEnumItemFormats\050\051) 180 170.33 T
1 F
(Return a list of supported transfer formats for the selected) 243 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "322" 24
%%Page: "323" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using Quick-Transfer) 415.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(323) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(transfer item. Before using this routine, you must \336rst call) 243 641.33 T
5 F
(ClipboardQueryItem\050\051) 243 629.33 T
1 F
( to get the transfer item header) 359.3 629.33 T
(.) 503.57 629.33 T
5 F
(ClipboardGetItemInfo\050\051) 180 610.33 T
1 F
-0.4 (Return the source identi\336er for the transfer item. Before using) 243 598.33 P
-0.68 (this routine, you must \336rst call) 243 586.33 P
5 F
-0.7 (ClipboardQueryItem\050\051) 385.24 586.33 P
1 F
-0.68 ( to get) 501.54 586.33 P
(the transfer item header) 243 574.33 T
(.) 355.78 574.33 T
5 F
(ClipboardGetNormalItemInfo\050\051) 180 555.33 T
1 F
-0.25 (Return the) 243 543.33 P
1 9 Q
-0.22 (VM) 295.84 543.33 P
1 10 Q
-0.25 ( \336le handle and) 310.83 543.33 P
1 9 Q
-0.22 (VM) 384.32 543.33 P
1 10 Q
-0.25 ( block handle of the transfer) 399.31 543.33 P
(item header for the \322Normal\323 transfer item.) 243 531.33 T
5 F
(ClipboardGetUndoItemInfo\050\051) 180 512.33 T
1 F
-0.25 (Return the) 243 500.33 P
1 9 Q
-0.22 (VM) 295.84 500.33 P
1 10 Q
-0.25 ( \336le handle and) 310.83 500.33 P
1 9 Q
-0.22 (VM) 384.32 500.33 P
1 10 Q
-0.25 ( block handle of the transfer) 399.31 500.33 P
(item header for the \322Undo\323 transfer item.) 243 488.33 T
5 F
(ClipboardGetClipboardFile\050\051) 180 469.33 T
1 F
(Return the) 243 457.33 T
1 9 Q
(VM) 296.33 457.33 T
1 10 Q
( \336le handle of the) 311.32 457.33 T
1 9 Q
(UI) 394.48 457.33 T
1 10 Q
( transfer \336le \050the one) 405.48 457.33 T
(typically used when copying, cutting, and pasting\051.) 243 445.33 T
0 14 Q
(7.3.9) 130.86 404 T
0 18 Q
(Undoing a Clipboard Change) 180 404 T
4 10 Q
(ClipboardUnregisterItem\050\051) 180 380.33 T
1 F
(Using) 180 360.33 T
5 F
(ClipboardUnregisterItem\050\051) 210.19 360.33 T
1 F
(, you can revert one level of clipboard) 350.38 360.33 T
-0.06 (changes. Note that this works for only one level; there is no way to back out) 180 347.33 P
(more than one change to the clipboard. This routine can not \322undo\323 itself;) 180 334.33 T
(that is, calling this routine twice in a row will leave the clipboard in a state) 180 321.33 T
(other than the original state.) 180 308.33 T
0 14 Q
(7.4) 142.54 256 T
0 24 Q
(Using Quick-T) 180 256 T
(ransfer) 341.38 256 T
1 10 Q
-0.67 (An application must understand the Clipboard and its structure before being) 180 230.33 P
(able to support the quick-transfer feature of the) 180 217.33 T
1 9 Q
(UI) 403.53 217.33 T
1 10 Q
(. However) 414.53 217.33 T
(, because) 460.27 217.33 T
(quick-transfer is such a convenient feature for users, every appropriate) 180 204.33 T
-0.35 (application should support it. T) 180 191.33 P
-0.35 (o use the quick-transfer mechanism, you will) 323.07 191.33 P
(probably want to understand how mouse input is handled.) 180 178.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "323" 25
%%Page: "324" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(324) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The quick-transfer mechanism makes extensive use of the Clipboard\325) 180 641.33 T
(s data) 498.55 641.33 T
(structures. However) 180 628.33 T
(, this does not mean that when a quick-transfer is) 273.32 628.33 T
(initiated, the Clipboard is altered. Instead, the Clipboard maintains a) 180 615.33 T
(separate \050but similar\051 data structure within the T) 180 602.33 T
(ransfer) 409.41 602.33 T
1 9 Q
(VM) 445.7 602.33 T
1 10 Q
( File.) 460.69 602.33 T
-0.79 (When a transfer is in progress, the distinction between a normal transfer and) 180 582.33 P
(a quick transfer is made with the \337ag) 180 569.33 T
1 9 Q
(CIF_QUICK) 356.33 569.33 T
1 10 Q
(. When passed to the) 408.49 569.33 T
(transfer mechanism\325) 180 556.33 T
(s routines, this \337ag indicates that the quick-transfer) 274.63 556.33 T
(item should be accessed and the Clipboard data should remain intact.) 180 543.33 T
0 14 Q
(7.4.1) 130.86 501 T
0 18 Q
(Supporting Quick-T) 180 501 T
(ransfer) 347.02 501 T
1 10 Q
-0.38 (In order for an application to support the quick-transfer mechanism, it must) 180 477.33 P
-0.22 (be able to handle several situations. The list below enumerates all the tasks) 180 464.33 P
(the application must be ready to perform:) 180 451.33 T
2 F
(u) 180 431.33 T
1 F
(Recognize initiation of a move/copy operation) 198 431.33 T
(When the user initiates a quick-transfer) 198 419.33 T
(, the object under the mouse) 383.38 419.33 T
(pointer will be noti\336ed the operation has begun.) 198 407.33 T
2 F
(u) 180 388.33 T
1 F
(Provide feedback) 198 388.33 T
(Once a quick-transfer is initiated, every object on the screen becomes a) 198 376.33 T
(potential destination for the transfer) 198 364.33 T
(. When the mouse pointer moves) 367.27 364.33 T
(over an object, that object must indicate what type of operation can be) 198 352.33 T
(supported, if any) 198 340.33 T
(.) 275.04 340.33 T
2 F
(u) 180 321.33 T
1 F
(Receive the transfer item) 198 321.33 T
(If the move/copy operation is completed by the user when the mouse) 198 309.33 T
-0.35 (pointer is over an object, that object must be able to receive the item and) 198 297.33 P
(provide feedback to the) 198 285.33 T
1 9 Q
(UI) 308.01 285.33 T
1 10 Q
( about the status of the quick-transfer) 319.01 285.33 T
(.) 494.03 285.33 T
2 F
(u) 180 266.33 T
1 F
(Recognize completion of the operation) 198 266.33 T
(When a quick-transfer is completed, the source object is noti\336ed and) 198 254.33 T
(informed what type of operation took place.) 198 242.33 T
2 F
(u) 180 223.33 T
1 F
(Shut off quick-transfer feedback on shutdown) 198 223.33 T
(When an object that can handle quick-transfers is shut down or) 198 211.33 T
-0.24 (destroyed, it must remove itself from the quick-transfer noti\336cation list.) 198 199.33 P
-0.81 (This takes care of any potential synchronization problems between object) 198 187.33 P
(shutdown and the quick-transfer mechanism.) 198 175.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "324" 26
%%Page: "325" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using Quick-Transfer) 415.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(325) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.77 (Applications should also understand the three rules that govern the behavior) 180 641.33 P
(of a quick-transfer:) 180 628.33 T
2 F
(u) 180 608.33 T
1 F
(T) 198 608.33 T
(ransfers within a single document default to move operations.) 204.05 608.33 T
2 F
(u) 180 589.33 T
1 F
(T) 198 589.33 T
(ransfers across documents default to copy operations.) 204.05 589.33 T
2 F
(u) 180 570.33 T
1 F
-0.64 (T) 198 570.33 P
-0.64 (ransfers in a format not supported by the destination are \322no operation\323) 204.05 570.33 P
(transfers.) 198 558.33 T
0 14 Q
(7.4.2) 130.86 517 T
0 18 Q
(Quick-T) 180 517 T
(ransfer Procedure) 246.02 517 T
1 10 Q
(Although applications must handle several situations to support the) 180 493.33 T
(quick-transfer mechanism, the procedure involved in a quick-transfer is) 180 480.33 T
(quite simple. The steps of how a quick-transfer operation is performed are) 180 467.33 T
(outlined below:) 180 454.33 T
5 F
(1) 180 434.33 T
1 F
(The user initiates a quick-transfer) 198 434.33 T
(By pressing the right mouse button \050in) 198 422.33 T
1 9 Q
(OSF/M) 379.86 422.33 T
1 10 Q
(otif\051, the user initiates a) 409.53 422.33 T
(quick-transfer) 198 410.33 T
(. The) 263.18 410.33 T
1 9 Q
(UI) 289.3 410.33 T
1 10 Q
( recognizes the mouse press and sends) 300.3 410.33 T
1 9 Q
(MSG_MET) 198 398.33 T
(A_ST) 244.17 398.33 T
(ART_MOVE_COPY) 266.35 398.33 T
1 10 Q
( to the object under the pointer image.) 348.68 398.33 T
5 F
(2) 180 379.33 T
1 F
(The source object builds the transfer item) 198 379.33 T
(The object under the pointer image then becomes the \322source\323 of the) 198 367.33 T
(quick-transfer) 198 355.33 T
(. It \336rst calls) 263.18 355.33 T
5 F
(ClipboardStartQuickT) 325.04 355.33 T
(ransfer\050\051) 441.47 355.33 T
1 F
( to) 487.22 355.33 T
(initiate the quick-transfer mechanism. It then builds the transfer item) 198 343.33 T
(just as it would if the user had clicked on the Copy trigger in the Edit) 198 331.33 T
-0.17 (menu. It then logs the transfer item with the quick-transfer mechanism.) 198 319.33 P
5 F
(3) 180 300.33 T
1 F
(The source becomes a potential destination) 198 300.33 T
-0.34 (Immediately after logging the transfer item, the source object becomes a) 198 288.33 P
-0.08 (potential destination of the quick-transfer) 198 276.33 P
-0.08 (. It must immediately provide) 391.02 276.33 P
-0.5 (feedback to the) 198 264.33 P
1 9 Q
-0.45 (UI) 269.28 264.33 P
1 10 Q
-0.5 ( indicating whether it can accept the transfer item and) 280.28 264.33 P
(whether the operation would be a move or a copy) 198 252.33 T
(. The feedback is) 422.84 252.33 T
(provided by calling) 198 240.33 T
5 F
(ClipboardSetQuickT) 288.38 240.33 T
(ransferFeedback\050\051) 394.99 240.33 T
1 F
(. If the) 490.93 240.33 T
(source object is a visible object in a GenV) 198 228.33 T
(iew) 387.4 228.33 T
(, it must also send the) 402.41 228.33 T
(message) 198 216.33 T
1 9 Q
(MSG_VIS_VUP_ALLOW_GLOBAL_TRANSFER) 239.86 216.33 T
1 10 Q
( to itself to allow) 443.54 216.33 T
(the pointer events to be sent to other objects in other windows \050because) 198 204.33 T
(the GenV) 198 192.33 T
(iew grabs the mouse on the press\051.) 241.45 192.33 T
5 F
(4) 180 173.33 T
1 F
(The user moves the mouse) 198 173.33 T
-0.41 (When the user moves the mouse \050continuing to hold down the move/copy) 198 161.33 P
(button\051, the pointer image may cross over several objects. Each of these) 198 149.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "325" 27
%%Page: "326" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(326) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(is a potential destination and as such must provide feedback similar to) 198 641.33 T
-0.26 (that described in \0503\051 above until the pointer moves outside of its bounds.) 198 629.33 P
(Each object that receives a) 198 617.33 T
1 9 Q
(MSG_MET) 324.12 617.33 T
(A_PTR) 370.29 617.33 T
1 10 Q
( should check if a quick) 399.79 617.33 T
(transfer is in progress by either checking the passed event \337ags or by) 198 605.33 T
(calling) 198 593.33 T
5 F
(ClipboardGetQuickT) 231.71 593.33 T
(ransferStatus\050\051) 339.98 593.33 T
1 F
(. The object should, in) 418.88 593.33 T
-0.14 (response, provide feedback as to whether it can accept the transfer item) 198 581.33 P
(or not. It calls) 198 569.33 T
5 F
(ClipboardSetQuickT) 265.23 569.33 T
(ransferFeedback\050\051) 371.84 569.33 T
1 F
( with the) 467.78 569.33 T
(proper feedback signal.) 198 557.33 T
5 F
(5) 180 538.33 T
1 F
(The user \336nishes the transfer) 198 538.33 T
-0.57 (When the user lets up the move/copy button, the object under the pointer) 198 526.33 P
(image \050if any\051 becomes the destination object \050it will receive a) 198 514.33 T
1 9 Q
(MSG_MET) 198 502.33 T
(A_END_MOVE_COPY) 244.17 502.33 T
1 10 Q
( from the) 339.34 502.33 T
1 9 Q
(UI) 384.34 502.33 T
1 10 Q
(\051.) 395.33 502.33 T
5 F
(6) 180 483.33 T
1 F
(The destination receives the transfer item) 198 483.33 T
-0.6 (If the transfer item is in a receivable format, the destination will retrieve) 198 471.33 P
(the item from the T) 198 459.33 T
(ransfer) 287.76 459.33 T
1 9 Q
(VM) 324.05 459.33 T
1 10 Q
( File just as if the user had selected the) 339.04 459.33 T
(Paste trigger from the Edit menu \050except the quick-transfer transfer) 198 447.33 T
-0.35 (item is received, not the Clipboard transfer item\051. The object \336rst checks) 198 435.33 P
-0.57 (if it can take the item by calling) 198 423.33 P
5 F
-0.59 (ClipboardGetQuickItemInfo\050\051) 343.46 423.33 P
1 F
-0.57 ( on the) 498.27 423.33 P
-0.61 (transfer item. If it can handle the item, it calls) 198 411.33 P
5 F
-0.63 (ClipboardQueryItem\050\051) 409.75 411.33 P
1 F
-0.61 (,) 526.05 411.33 P
(grabs the transfer item, and \336nally calls) 198 399.33 T
5 F
(ClipboardEndQuickT) 198 387.33 T
(ransfer\050\051) 309.05 387.33 T
1 F
(.) 354.8 387.33 T
5 F
(7) 180 368.33 T
1 F
(The) 198 368.33 T
1 9 Q
(UI) 218.56 368.33 T
1 10 Q
( informs the source of the outcome) 229.56 368.33 T
-0.76 (After the transfer has been completed by the destination, the) 198 356.33 P
1 9 Q
-0.69 (UI) 475.23 356.33 P
1 10 Q
-0.76 ( will send) 486.23 356.33 P
-0.21 (a) 198 344.33 P
1 9 Q
-0.19 (MSG_MET) 206.13 344.33 P
-0.19 (A_CLIPBOARD_NOTIFY_QUICK_TRANSFER_CONCLUDED) 252.3 344.33 P
1 10 Q
-0.21 ( to) 516.98 344.33 P
(the source object, informing it about the \336nal outcome of the operation.) 198 332.33 T
(Some source objects will change shape, shading, or color during a) 198 320.33 T
(quick-transfer and must know when the transfer is concluded. If the) 198 308.33 T
(operation is a quick-move, the source must delete the information or) 198 296.33 T
(object that was moved.) 198 284.33 T
0 14 Q
(7.4.3) 130.86 243 T
0 18 Q
(Quick-T) 180 243 T
(ransfer Data Structures) 246.02 243 T
1 10 Q
(The quick-transfer mechanism uses the same structures as the Clipboard.) 180 219.33 T
(However) 180 206.33 T
(, there are special data structures that are used exclusively by the) 220.18 206.33 T
(quick-transfer mechanism. These data structures are used by individual) 180 193.33 T
1 9 Q
(UI) 516.88 193.33 T
1 10 Q
(routines and are documented with those routines.) 180 180.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "326" 28
%%Page: "327" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using Quick-Transfer) 415.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(327) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(7.4.4) 130.86 636 T
0 18 Q
(Source Object Responsibility) 180 636 T
4 10 Q
(MSG_META_START_MOVE_COPY, ClipboardStartQuickTransfer\050\051,) 180 612.33 T
(MSG_META_CLIPBOARD_NOTIFY_QUICK_TRANSFER_FEEDBACK) 180 599.33 T
1 F
(When the user presses the move/copy button, the) 180 579.33 T
1 9 Q
(UI) 409.45 579.33 T
1 10 Q
( sends a) 420.45 579.33 T
1 9 Q
-0.06 (MSG_MET) 180 566.33 P
-0.06 (A_ST) 226.17 566.33 P
-0.06 (ART_MOVE_COPY) 248.35 566.33 P
1 10 Q
-0.07 ( to the object under the mouse pointer) 330.68 566.33 P
-0.07 (. The) 505.02 566.33 P
-0.62 (selected object can be either a gadget run in the) 180 553.33 P
1 9 Q
-0.56 (UI) 397.01 553.33 P
1 10 Q
-0.62 ( thread \050such as a GenT) 408.01 553.33 P
-0.62 (ext) 514.58 553.33 P
(object\051 or a process-run visible object within a view) 180 540.33 T
(.) 414.28 540.33 T
(If the object is a process-run visible object in a view) 180 520.33 T
(, both the application) 416.32 520.33 T
(object and the object under the mouse pointer will receive the noti\336cation) 180 507.33 T
(message. If the object is) 180 494.33 T
1 9 Q
(UI) 292.79 494.33 T
1 10 Q
(-run, only it will receive the message.) 303.79 494.33 T
(Receipt of this message tells an object to begin a quick-transfer operation.) 180 474.33 T
(This operation consists of several steps:) 180 461.33 T
5 F
(1) 180 441.33 T
1 F
-0.6 (Grab the mouse to track it so you can \336nd out when it leaves your object\325) 198 441.33 P
-0.6 (s) 524.19 441.33 P
(bounds. \050When it leaves, your object is no longer the destination.\051 Note) 198 429.33 T
-0.47 (that only objects need to grab the mouse; if a process is the content of the) 198 417.33 P
(view) 198 405.33 T
(, it does not have to.) 218.38 405.33 T
5 F
(2) 180 386.33 T
1 F
(Provide feedback to the quick-transfer mechanism immediately) 198 386.33 T
(.) 489.88 386.33 T
5 F
(3) 180 367.33 T
1 F
(Build and register the transfer item.) 198 367.33 T
5 F
(4) 180 348.33 T
1 F
(Continue providing feedback as long as the mouse is in your bounds.) 198 348.33 T
5 F
(5) 180 329.33 T
1 F
(If desired, provide visual feedback to the user as the type of operation) 198 329.33 T
(changes when the user moves the mouse pointer) 198 317.33 T
(.) 420.97 317.33 T
-0.84 (The reason for providing feedback to the quick-transfer mechanism is simple:) 180 298.33 P
(to indicate to the user what is going on. By giving information to the) 180 285.33 T
-0.85 (quick-transfer mechanism, objects allow the user to be informed immediately) 180 272.33 P
(what type of operation is in progress\321a move, a copy) 180 259.33 T
(, or nothing at all.) 424.47 259.33 T
(Immediately after your object has grabbed the mouse, it should call the) 180 239.33 T
(routine) 180 226.33 T
5 F
(ClipboardStartQuickT) 216.48 226.33 T
(ransfer\050\051) 332.91 226.33 T
1 F
(. This routine allows the object) 378.66 226.33 T
(not only to indicate which type of operation is in progress but also to attach) 180 213.33 T
-0.71 (a special graphical region to the cursor \050though not required\051. This allows the) 180 200.33 P
-0.07 (application to provide additional information to the user as to what is going) 180 187.33 P
(on \050e.g. GeoManager attaches an image when a \336le transfer is initiated\051.) 180 174.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "327" 29
%%Page: "328" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(328) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.26 (Y) 180 641.33 P
-0.26 (ou must also indicate to) 185.93 641.33 P
5 F
-0.27 (ClipboardStartQuickT) 297.43 641.33 P
-0.27 (ransfer\050\051) 413.86 641.33 P
1 F
-0.26 ( the object that) 459.61 641.33 P
(will receive noti\336cation when the transfer has concluded. This is important) 180 628.33 T
(because when a quick-move has been completed, the source object must) 180 615.33 T
(ensure that the original copy of the item \050usually the source object itself\051 is) 180 602.33 T
(deleted.) 180 589.33 T
(After calling) 180 569.33 T
5 F
(ClipboardStartQuickT) 240.37 569.33 T
(ransfer\050\051) 356.8 569.33 T
1 F
(, the source object should) 402.55 569.33 T
-0.76 (duplicate and register the transfer item with the T) 180 556.33 P
-0.76 (ransfer) 407.58 556.33 P
1 9 Q
-0.68 (VM) 443.11 556.33 P
1 10 Q
-0.76 ( File. T) 458.1 556.33 P
-0.76 (o do this,) 488.64 556.33 P
(register the item as you normally would for a cut or copy operation \050see) 180 543.33 T
(section 7.3.1 on page 31) 180 530.33 T
(1\051; however) 288.93 530.33 T
(, be sure to use the \337ag) 341.34 530.33 T
1 9 Q
(CIF_QUICK) 450.99 530.33 T
1 10 Q
( to) 503.15 530.33 T
(ensure that the normal Clipboard data remains unaffected.) 180 517.33 T
(Once the transfer item has been registered, the source object becomes a) 180 497.33 T
(potential destination and should act as such. However) 180 484.33 T
(, you may wish to) 429.66 484.33 T
-0.12 (continue to provide source-related visual feedback to the user as long as the) 180 471.33 P
(quick-transfer is going on: During a quick-transfer) 180 458.33 T
(, the source will receive) 412.97 458.33 T
1 9 Q
-0.4 (MSG_MET) 180 445.33 P
-0.4 (A_CLIPBOARD_NOTIFY_QUICK_TRANSFER_FEEDBACK) 226.17 445.33 P
1 10 Q
-0.44 (each time) 484.28 445.33 P
(the mode of the quick-transfer changes. This message will tell the source) 180 432.33 T
(object what the current mode of transfer is in order for the source to give) 180 419.33 T
-0.2 (extra visual feedback to the user) 180 406.33 P
-0.2 (. This behavior is not required of the source) 329.04 406.33 P
-0.44 (object but can be bene\336cial to your application. It is also supplemental to the) 180 393.33 P
(destination-related feedback that must be provided.) 180 380.33 T
0 14 Q
(7.4.4.1) 119.19 346.67 T
(Responsibilities of a Potential Destination) 180 346.67 T
4 10 Q
(ClipboardGetQuickTransferStatus\050\051,) 180 324.33 T
(ClipboardSetQuickTransferFeedback\050\051,) 180 311.33 T
(MSG_VIS_VUP_ALLOW_GLOBAL_TRANSFER,) 180 298.33 T
(MSG_GEN_VIEW_ALLOW_GLOBAL_TRANSFER) 180 285.33 T
1 F
(All objects that can potentially receive a transfer item are considered) 180 265.33 T
(potential destinations during a quick-transfer operation. During the) 180 252.33 T
(operation, the user will likely move the mouse pointer across the screen,) 180 239.33 T
(entering and leaving several different potential destinations.) 180 226.33 T
(When the mouse \336rst moves over the object, the object will receive a) 180 206.33 T
1 9 Q
(MSG_MET) 180 193.33 T
(A_PTR) 226.17 193.33 T
1 10 Q
(. When your object receives this message, it must provide) 255.67 193.33 T
-0.03 (immediate feedback to the transfer mechanism to indicate whether a move,) 180 180.33 P
(a copy) 180 167.33 T
(, or no operation is to be performed \050the object should provide this) 207.78 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "328" 30
%%Page: "329" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using Quick-Transfer) 415.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(329) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(feedback with the understanding that the operation type is what would) 180 641.33 T
(happen if the transfer were to conclude at that moment\051.) 180 628.33 T
-0.45 (When the \336rst) 180 608.33 P
1 9 Q
-0.41 (MSG_MET) 248.08 608.33 P
-0.41 (A_PTR) 294.25 608.33 P
1 10 Q
-0.45 ( is received, the object should call the routine) 323.76 608.33 P
5 F
(ClipboardGetQuickT) 180 595.33 T
(ransferStatus\050\051) 288.27 595.33 T
1 F
(. This routine returns whether a) 367.17 595.33 T
-0.29 (quick-transfer is in progress; if so, the object should acquire a mouse grab in) 180 582.33 P
(order to provide feedback until the mouse pointer leaves its bounds.) 180 569.33 T
(The object should then check the quick-transfer Clipboard for supported) 180 549.33 T
(formats. This is done just as with the Clipboard\321with the routine) 180 536.33 T
5 F
(ClipboardQueryItem\050\051) 180 523.33 T
1 F
(. If no supported formats are available, the object) 296.3 523.33 T
(should provide the \322no operation\323 feedback. However) 180 510.33 T
(, if one or more is) 423.16 510.33 T
(available, the object should determine whether the operation is a move or) 180 497.33 T
(copy \050call) 180 484.33 T
5 F
(ClipboardGetItemInfo\050\051) 225.74 484.33 T
1 F
(\051 and act accordingly) 349.44 484.33 T
(.) 444.07 484.33 T
(T) 180 464.33 T
(o provide feedback, the object must call) 185.75 464.33 T
5 F
(ClipboardSetQuickT) 180 451.33 T
(ransferFeedback\050\051) 286.61 451.33 T
1 F
( in its method for) 382.55 451.33 T
1 9 Q
(MSG_MET) 180 438.33 T
(A_PTR) 226.17 438.33 T
1 10 Q
(. This routine sets the mode of the transfer to one of the) 255.67 438.33 T
-0.52 (enumerated type) 180 425.33 P
5 F
-0.54 (ClipboardQuickT) 260.26 425.33 P
-0.54 (ransferFeedback) 350.2 425.33 P
1 F
-0.52 (. If the format is not) 438.36 425.33 P
(supported,) 180 412.33 T
5 F
(ClipboardSetQuickT) 231.85 412.33 T
(ransferFeedback\050\051) 338.46 412.33 T
1 F
( is passed) 434.4 412.33 T
1 9 Q
(CQTF_CLEAR) 180 399.33 T
1 10 Q
(.) 242 399.33 T
(When the mouse has left an object\325) 180 379.33 T
(s bounds, the object must relinquish its) 340.2 379.33 T
-0.14 (mouse grab. Either a) 180 366.33 P
1 9 Q
-0.13 (MSG_MET) 279.26 366.33 P
-0.13 (A_CONTENT_LOST_GADGET_EXCLUSIVE) 325.43 366.33 P
1 10 Q
-0.14 ( or) 516.28 366.33 P
(a) 180 353.33 T
1 9 Q
(MSG_MET) 188.34 353.33 T
(A_PTR) 234.51 353.33 T
1 10 Q
( with the) 264.01 353.33 T
1 9 Q
(UIF) 308.28 353.33 T
(A_IN) 324.62 353.33 T
1 10 Q
( \337ag cleared will indicate this situation) 346.61 353.33 T
-0.58 (to the object. The former occurs when the mouse has moved onto a window or) 180 340.33 P
(other object that is obscuring your object, and the latter is a result of the) 180 327.33 T
(mouse moving outside of your bounds altogether) 180 314.33 T
(.) 402.79 314.33 T
(At this point, the object must do two things: Reset the mouse cursor and) 180 294.33 T
(re-transmit the last mouse pointer event.) 180 281.33 T
-0.15 (T) 180 261.33 P
-0.15 (o reset the mouse pointer) 185.75 261.33 P
-0.15 (, call) 301.47 261.33 P
5 F
-0.15 (ClipboardSetQuickT) 325.82 261.33 P
-0.15 (ransferFeedback\050\051) 432.43 261.33 P
1 F
-0.37 (and pass it) 180 248.33 P
1 9 Q
-0.33 (CQTF_CLEAR) 232.25 248.33 P
1 10 Q
-0.37 (. This will set the default cursor) 294.25 248.33 P
-0.37 (. T) 438.92 248.33 P
-0.37 (o re-send the last) 449.86 248.33 P
(pointer event received \050you must do this because the last one occurred) 180 235.33 T
(outside your object\325) 180 222.33 T
(s bounds and might have been within another object\325) 268.52 222.33 T
(s) 511.89 222.33 T
-0.57 (bounds\051, you simply have to return the \337ag) 180 209.33 P
1 9 Q
-0.52 (MRF_REPLA) 377.27 209.33 P
-0.52 (Y) 433.43 209.33 P
1 10 Q
-0.57 ( when releasing the) 439.77 209.33 P
(mouse grab.) 180 196.33 T
-0.5 (If the source object wishes a quick transfer to be able to be carried outside its) 180 176.33 P
(view) 180 163.33 T
(, it must send) 200.38 163.33 T
1 9 Q
(MSG_VIS_VUP_ALLOW_GLOBAL_TRANSFER) 266.32 163.33 T
1 10 Q
( to itself.) 470 163.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "329" 31
%%Page: "330" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(330) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Process objects acting as a content must send) 180 641.33 T
1 9 Q
(MSG_GEN_VIEW_ALLOW_GLOBAL_TRANSFER) 180 628.33 T
1 10 Q
( to the GenV) 394.33 628.33 T
(iew) 452.23 628.33 T
(.) 467.24 628.33 T
(The object then becomes oblivious to future quick-transfer events until the) 180 608.33 T
(pointer returns to its window \050or unless it was registered for noti\336cation of) 180 595.33 T
(quick-transfer conclusion\051.) 180 582.33 T
0 14 Q
(7.4.4.2) 119.19 548.67 T
(Responsibilities of the Destination Object) 180 548.67 T
4 10 Q
(MSG_META_END_MOVE_COPY, ClipboardEndQuickTransfer\050\051) 180 526.33 T
1 F
(If, when the mouse pointer is within your object\325) 180 506.33 T
(s bounds, the user releases) 402.79 506.33 T
(the Move/Copy button, your object becomes the true destination of the) 180 493.33 T
(transfer) 180 480.33 T
(. Y) 216.66 480.33 T
(ou will be noti\336ed by a) 228.15 480.33 T
1 9 Q
(MSG_MET) 335.22 480.33 T
(A_END_MOVE_COPY) 381.39 480.33 T
1 10 Q
(.) 475.45 480.33 T
(Upon receipt of this message, the object should \336rst determine the) 180 460.33 T
(move/copy/no-operation behavior as above, with one exception: If either of) 180 447.33 T
(the \337ags) 180 434.33 T
1 9 Q
(CQNF_MOVE) 222.23 434.33 T
1 10 Q
( or) 282.06 434.33 T
1 9 Q
(CQNF_COPY) 297.06 434.33 T
1 10 Q
( is set for the transfer item, then the) 354.24 434.33 T
(user has overridden the normal behavior and the destination object should) 180 421.33 T
(respond with the appropriate operation.) 180 408.33 T
(After determining the proper action, the object should retrieve the transfer) 180 388.33 T
(item \050as it would from the Clipboard\051, passing one of) 180 375.33 T
1 9 Q
(CQNF_MOVE) 425.03 375.33 T
1 10 Q
(,) 484.86 375.33 T
1 9 Q
(CQNF_COPY) 180 362.33 T
1 10 Q
(, or) 236.07 362.33 T
1 9 Q
(CQNF_NO_OPERA) 253.85 362.33 T
(TION) 336.03 362.33 T
1 10 Q
(. This \337ag will cause the proper) 360.03 362.33 T
(noti\336cation to be sent to the transfer) 180 349.33 T
(\325) 350.01 349.33 T
(s source and allow it to complete its) 351.68 349.33 T
(actions properly) 180 336.33 T
(. T) 253.33 336.33 T
(o \336nish the transfer) 264.64 336.33 T
(, the object should call) 355.75 336.33 T
5 F
(ClipboardEndQuickT) 180 323.33 T
(ransfer\050\051) 291.05 323.33 T
1 F
(.) 336.8 323.33 T
0 14 Q
(7.4.4.3) 119.19 289.67 T
(Getting More Information) 180 289.67 T
1 10 Q
(In addition to the routines above, you can use one other to retrieve) 180 267.33 T
(information about a quick-transfer item.) 180 254.33 T
5 F
(ClipboardGetQuickItemInfo\050\051) 369.84 254.33 T
1 F
(returns a set of handles for the transfer) 180 241.33 T
1 9 Q
(VM) 365.74 241.33 T
1 10 Q
( \336le and the \336le\325) 380.73 241.33 T
(s header block.) 454.45 241.33 T
0 14 Q
(7.4.4.4) 119.19 207.67 T
(When the T) 180 207.67 T
(ransfer Is Concluded) 254.68 207.67 T
4 10 Q
(MSG_META_CLIPBOARD_NOTIFY_QUICK_TRANSFER_CONCLUDED) 180 185.33 T
1 F
(After the transfer has concluded, the original source of the transfer will) 180 165.33 T
(receive) 180 152.33 T
1 9 Q
(MSG_MET) 215.18 152.33 T
(A_CLIPBOARD_NOTIFY_QUICK_TRANSFER_CONCLUDED) 261.35 152.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "330" 32
%%Page: "331" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Shutdown Issues) 442.86 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(331) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(7.5) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(if it requested noti\336cation when it registered the original transfer) 180 641.33 T
(. This) 482.61 641.33 T
(message will be accompanied by a) 180 628.33 T
5 F
(ClipboardQuickNotifyFlags) 339.67 628.33 T
1 F
( record) 483.37 628.33 T
(indicating what type of operation the transfer ended up being. The source) 180 615.33 T
(object should then follow the rules of quick transfer and act appropriately) 180 602.33 T
(\050e.g. delete the source object on a quick-move operation\051.) 180 589.33 T
0 14 Q
(7.5) 142.54 537 T
0 24 Q
(Shutdown Issues) 180 537 T
4 10 Q
(ClipboardClearQuickTransferNotif) 180 511.33 T
(ication\050\051,) 372 511.33 T
(ClipboardAbortQuickTransfer\050\051,) 180 498.33 T
(ClipboardRemoveFromNotif) 180 485.33 T
(icationList\050\051) 324 485.33 T
1 F
(It is possible for a quick-transfer source object to shut down \050be destroyed\051) 180 465.33 T
-0.61 (before the completion of a quick-transfer operation. If the object registered to) 180 452.33 P
-0.25 (be noti\336ed of transfer completion, it must un-register as it is shutting down.) 180 439.33 P
(This is done with) 180 426.33 T
5 F
(ClipboardClearQuickT) 262.24 426.33 T
(ransferNoti\336cation\050\051) 380.52 426.33 T
1 F
( or) 488.11 426.33 T
5 F
(ClipboardAbortQuickT) 180 413.33 T
(ransfer\050\051) 299.57 413.33 T
1 F
(.) 345.32 413.33 T
(Additionally) 180 393.33 T
(, any application that registers with the Clipboard must) 236.12 393.33 T
(un-register when it is shutting down. This is done with the routine) 180 380.33 T
5 F
(ClipboardRemoveFromNoti\336cationList\050\051) 180 367.33 T
1 F
(.) 391.66 367.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "331" 33
%%Page: "332" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Clipboard) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(332) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(7.5) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "332" 34
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 34
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Italic
%%+ Courier
%%+ NewCenturySchlbk-Bold
%%+ Courier-Bold
%%EOF
