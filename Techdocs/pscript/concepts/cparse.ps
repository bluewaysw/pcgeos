%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 16 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Italic FMFONTDEFINE
4 0 /NewCenturySchlbk-Bold FMFONTDEFINE
5 1 /Symbol FMFONTDEFINE
6 0 /Courier FMFONTDEFINE
7 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "743" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(743) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
(The Parse Library was originally created to provide a parser for a) 180 610.3 T
(spreadsheet language. However) 180 597.3 T
(, it will also \336t the needs of a programmer) 326.49 597.3 T
(who wants to implement a language based on mathematical expressions.) 180 584.3 T
(The Parse Library takes an expression as text, converts it to an expression) 180 564.3 T
(using tokens, and evaluates the expression. When \336nished, it converts the) 180 551.3 T
(result back into text and returns it. The Parse Library recognizes a special) 180 538.3 T
-0.84 (grammar and set of expressions that include an interface to the Cell Library\325) 180 525.3 P
-0.84 (s) 524.43 525.3 P
-0.68 (data structures. Therefore, you can use the Cell and Parse Libraries together) 180 512.3 P
(to form the basic underlying engine of a spreadsheet application.) 180 499.3 T
(Applications will generally not use the Parse library directly; instead, they) 180 479.3 T
(will use higher) 180 466.3 T
(-level constructs like the Spreadsheet library \050see) 248.53 466.3 T
-0.74 (\322Spreadsheet Objects,\323 Chapter) 180 453.3 P
-0.74 (20 of the Object Reference Book\051. Thus, most) 327.06 453.3 P
(programmers can just read \322Parse Library Behavior\323 on page 743. The few) 180 440.3 T
(programmers who will be using the parse library directly can read \322Coding) 180 427.3 T
(with the Parse Library\323 on page 766. This chapter often says that \322the) 180 414.3 T
(application\323 must do something: the application pass a callback routine to) 180 401.3 T
(the parser) 180 388.3 T
(, for example. If you use a higher) 226.85 388.3 T
(-level interface, most of this will) 378.53 388.3 T
(be taken care of for you; for example, the spreadsheet library takes care of) 180 375.3 T
(the bookkeeping chores associated with the Parse Library) 180 362.3 T
(.) 445.78 362.3 T
(Y) 180 342.3 T
(ou may want to familiarize yourself with how compilers work before you) 185.93 342.3 T
(read this section. In particular) 180 329.3 T
(, you should understand how scanners use) 320.56 329.3 T
-0.48 (regular expressions to translate raw text into token streams; and you should) 180 316.3 P
-0.54 (be familiar with the parsing of context-free grammars. A good book to look at) 180 303.3 P
(is) 180 290.3 T
3 F
(Compilers: Principles, T) 190.56 290.3 T
(echniques, and T) 300.74 290.3 T
(ools) 377.98 290.3 T
1 F
( by Aho, Sethi, and Ullman) 395.75 290.3 T
(\050a.k.a. \322The Red Dragon Book\323\051.) 180 277.3 T
0 14 Q
(20.1) 134.76 224.97 T
0 24 Q
(Parse Library Behavior) 180 224.97 T
1 10 Q
(The Parse Library takes a string of characters and evaluates it. In many) 180 199.3 T
-0.2 (ways, it acts like a compiler; it translates a string into tokens, evaluates the) 180 186.3 P
-0.07 (tokens, and returns the result. It can also reverse the process, translating a) 180 173.3 P
(sequence of tokens into the equivalent text string. Finally) 180 160.3 T
(, it can simplify a) 445.6 160.3 T
81 144 531 648 C
235.51 643.97 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.97 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "743" 1
%%Page: "744" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(744) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.53 (string of tokens, performing arithmetic simpli\336cations and calling functions.) 180 641.33 P
-0.36 (The parse library provides many useful functions; furthermore, applications) 180 628.33 P
(can de\336ne their own functions.) 180 615.33 T
-0.66 (The different functions are separated into different parts of the parse library) 180 595.33 P
-0.66 (.) 526.1 595.33 P
(The parse library contains the following basic sections:) 180 582.33 T
2 F
(u) 180 562.33 T
1 F
(Scanner) 198 562.33 T
-0.2 (The scanner reads a text string and converts it into a series of tokens. It) 198 550.33 P
-0.11 (does not keep track of the context of the tokens. Its behavior is partially) 198 538.33 P
(determined by the localization settings; for example, it uses the) 198 526.33 T
(localization setting to tell whether the decimal separator is a period, a) 198 514.33 T
-0.1 (comma, or some other character or string. It is called by the parser; it is) 198 502.33 P
(not used independently) 198 490.33 T
(.) 305.04 490.33 T
2 F
(u) 180 471.33 T
1 F
(Parser) 198 471.33 T
(The parser interprets the stream of tokens returned by the scanner) 198 459.33 T
(. It) 508.19 459.33 T
-0.14 (initializes the scanner and uses it to read tokens from the input strings;) 198 447.33 P
(it also makes sure that the string of tokens is legally formatted. It does) 198 435.33 T
(not do any type-checking.) 198 423.33 T
2 F
(u) 180 404.33 T
1 F
(Evaluator) 198 404.33 T
(The evaluator simpli\336es a token string. It does this by replacing) 198 392.33 T
(arithmetic expressions with their results, by making function calls, by) 198 380.33 T
(reading current values of cells, and by replacing identi\336ers with their) 198 368.33 T
-0.2 (values. The result is another token string; usually this string consists of) 198 356.33 P
(a single token \050a number or string\051.) 198 344.33 T
2 F
(u) 180 325.33 T
1 F
(Formatter) 198 325.33 T
(The formatter translates a token string into a text string. It is used to) 198 313.33 T
(display the evaluator) 198 301.33 T
(\325) 296.53 301.33 T
(s output. Its behavior is in\337uenced by the) 298.2 301.33 T
(localization settings.) 198 289.33 T
(For example, suppose an application used the parse library to evaluate the) 180 270.33 T
(string "\0505*6\051+SUM\050A2:C6\051". The following steps would be taken:) 180 257.33 T
4 F
(1) 180 237.33 T
1 F
-0.67 (The parser would parse the string. It would do this by calling the scanner) 198 237.33 P
-0.5 (to read tokens from the string. It would then parse the token sequence to) 198 225.33 P
(see that it evaluated to a well-formed expression. \050It would not do any) 198 213.33 T
(simplifying or type-checking.\051) 198 201.33 T
4 F
(2) 180 182.33 T
1 F
(The evaluator would simplify the expression. It would reduce the token) 198 182.33 T
(sequence for \322\0505*6\051\323 to the single token for \32230\323. It would then call the) 198 170.33 T
1 9 Q
-0.06 (SUM) 198 158.33 P
1 10 Q
-0.07 ( function, passing it the speci\336er for the range of cells \322A2:C6\323. The) 219.5 158.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "744" 2
%%Page: "745" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(745) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(SUM) 198 641.33 T
1 10 Q
( function would check the type of its arguments, then perform the) 219.5 641.33 T
-0.05 (appropriate action \050in this case, adding the values of the cells together\051.) 198 629.33 P
-0.34 (The) 198 617.33 P
1 9 Q
-0.31 (SUM) 218.22 617.33 P
1 10 Q
-0.34 ( function would return a value \050e.g., it might return 999.9\051. The) 239.72 617.33 P
-0.47 (evaluator would thus be able to simplify the entire token sequence to the) 198 605.33 P
(single token for the number 1029.9.) 198 593.33 T
4 F
(3) 180 574.33 T
1 F
(When the application needed to display the result, it would call the) 198 574.33 T
(formatter) 198 562.33 T
(. The formatter would check the localization settings, \336nding) 241.7 562.33 T
(out what the thousands separator and decimal point character are. It) 198 550.33 T
(would create the string "1,029.9".) 198 538.33 T
-0.45 (T) 180 519.33 P
-0.45 (oken strings are usually more compact than the corresponding text strings.) 185.75 519.33 P
-0.81 (There are several reasons for this; for example, cell references are much more) 180 506.33 P
(compact, functions are speci\336ed by an) 180 493.33 T
1 9 Q
(ID) 357.6 493.33 T
1 10 Q
( number instead of a string, and) 368.27 493.33 T
-0.22 (white space is removed. When translated into a token string, it is only three) 180 480.33 P
-0.67 (bytes long: one token byte to specify that this is a number) 180 467.33 P
-0.67 (, and two data bytes) 438.4 467.33 P
-0.24 (to store the value of the number) 180 454.33 P
-0.24 (. For this reason, applications which use the) 326.01 454.33 P
(parse library will generally not store the text entered by the user; instead,) 180 441.33 T
(they can store the equivalent token string, and use the formatter to display) 180 428.33 T
(the string when necessary) 180 415.33 T
(.) 300 415.33 T
-0.54 (The parse library routines often need to request information from the calling) 180 395.33 P
(application or instruct it to perform a task. For example, when the Parser) 180 382.33 T
-0.78 (encounters a name, it needs to get a name) 180 369.33 P
1 9 Q
-0.7 (ID) 370.39 369.33 P
1 10 Q
-0.78 ( from the calling application. For) 381.05 369.33 P
(this reason, every Parse Library routine is passed a callback routine. The) 180 356.33 T
(library routine calls this callback routine when necessary) 180 343.33 T
(, passing a code) 444.1 343.33 T
(indicating what action the callback routine should take. The beginning) 180 330.33 T
(section will just describe this in general terms; for example, \322the Evaluator) 180 317.33 T
(uses the callback to \336nd out the value of a cell.\323 The advanced section) 180 304.33 T
(provides a more detailed explanation.) 180 291.33 T
0 14 Q
(20.1.1) 123.08 249 T
0 18 Q
(The Scanner) 180 249 T
1 10 Q
(The scanner translates a text string into a sequence of tokens. The tokens) 180 225.33 T
(can then be processed by the parser) 180 212.33 T
(. Every token is associated with some) 344.08 212.33 T
(data.) 180 199.33 T
(The scanner can be treated as a part of the parser) 180 179.33 T
(. It is never used) 409.84 179.33 T
(independently; instead, the parser is called on to parse a string, and the) 180 166.33 T
(parser calls the scanner to translate the string into tokens.) 180 153.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "745" 3
%%Page: "746" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(746) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The scanner does not keep track of tokens after it processes them. For this) 180 641.33 T
(reason, it will not notice if, for example, parentheses are not balanced. It) 180 628.33 T
-0.17 (returns errors only if it is passed a string which does not scan as a sequence) 180 615.33 P
(of tokens.) 180 602.33 T
0 14 Q
(20.1.1.1) 111.4 568.67 T
(Scanner T) 180 568.67 T
(okens) 246.65 568.67 T
1 10 Q
(The scanner recognizes the tokens listed below) 180 546.33 T
(. Note that applications will) 395.39 546.33 T
-0.53 (never directly encounter the scanner tokens; the tokens translates them into) 180 533.33 P
(parser tokens before returning them. A complete list of parser tokens \050with) 180 520.33 T
(their names\051 is given in section 20.1.2.2 on page 754.) 180 507.33 T
1 9 Q
(NUMBER) 180 487.33 T
1 10 Q
(This is some kind of numerical constant. The format in the) 243 487.33 T
(string is determined by the localization settings. The data) 243 475.33 T
(section of the token is a \337oating-point number \050even if the) 243 463.33 T
(string contained an integer\051.) 243 451.33 T
1 9 Q
(STRING) 180 432.33 T
1 10 Q
(This is a sequence of characters surrounded by) 243 432.33 T
("double-quotes." All characters within double quotes are) 243 420.33 T
(translated into their) 243 408.33 T
1 9 Q
(ASCII) 340.05 408.33 T
1 10 Q
( equivalents, with the exceptions) 366.04 408.33 T
-0.5 (noted below in section 20.1.1.2 on page 747. The data section is) 243 396.33 P
(a pointer to the) 243 384.33 T
1 9 Q
(ASCII) 316.9 384.33 T
1 10 Q
( string speci\336ed.) 342.89 384.33 T
1 9 Q
(CELL) 180 365.33 T
1 10 Q
(This is a reference to a cell in a database. The format is) 243 365.33 T
(described in section 20.1.1.3 on page 748.) 243 353.33 T
1 9 Q
(END_OF_EXPRESSION) 180 334.33 T
1 10 Q
(The scanner returns this token when it has examined and) 243 322.33 T
(translated an entire text string and reached its end.) 243 310.33 T
1 9 Q
(OPEN_P) 180 291.33 T
(AREN) 216.68 291.33 T
1 10 Q
(This is simply a left parenthesis character) 243 279.33 T
(, i.e. \322\050\323. There is no) 437.28 279.33 T
(data section associated with this token.) 243 267.33 T
1 9 Q
(CLOSE_P) 180 248.33 T
(AREN) 221.51 248.33 T
1 10 Q
-0.59 (This is simply a right parenthesis character) 243 236.33 P
-0.59 (, i.e. \322\051\323. There is no) 441.35 236.33 P
(data section associated with this token.) 243 224.33 T
1 9 Q
(OPERA) 180 205.33 T
(TOR) 212 205.33 T
1 10 Q
-0.45 (This is a unary or binary operator) 243 205.33 P
-0.45 (. The operators are described) 396.41 205.33 P
-0.86 (in section 20.1.1.4 on page 748. The data section speci\336es which) 243 193.33 P
(operator was encountered.) 243 181.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "746" 4
%%Page: "747" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(747) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(LIST_SEP) 180 641.33 T
(ARA) 223.34 641.33 T
(TOR) 242.34 641.33 T
1 10 Q
(This is a comma, i.e. \322,\323. It is used to separate arguments to) 243 629.33 T
(functions. There is no data section associated with this token.) 243 617.33 T
1 9 Q
(IDENTIFIER) 180 598.33 T
1 10 Q
-0.57 (This is a sequence of characters, not in quotation marks, which) 243 598.33 P
(does not match the format for cell references. Identi\336ers may) 243 586.33 T
(be functions \050built-in or application-de\336ned\051 or variables; see) 243 574.33 T
(section 20.1.1.5 on page 752. The data section is a string) 243 562.33 T
(containing the identi\336er) 243 550.33 T
(.) 354.3 550.33 T
0 14 Q
(20.1.1.2) 111.4 517.67 T
(Strings) 180 517.67 T
1 10 Q
(The string passed to the scanner may) 180 495.33 T
(, itself, contain strings. These inner) 352.24 495.33 T
(strings are not further analyzed; rather) 180 482.33 T
(, their contents are associated with) 362.22 482.33 T
(the string token. Strings are delimited by double-quotes. All characters) 180 469.33 T
(within the double-quotes are copied directly into the token\325) 180 456.33 T
(s data, with the) 451.51 456.33 T
-0.29 (exception of the backslash, i.e. \322\134\323. This character signals that the character) 180 443.33 P
(\050or characters\051 which immediately follow it are to be interpreted literally) 180 430.33 T
(.) 514.84 430.33 T
(Backslash-codes include the following:) 180 417.33 T
(\134") 180 397.33 T
-0.7 (This code represents a double-quote character \050i.e. ASCII 0x22,) 243 397.33 P
(or "\051; it indicates that the double-quote should be copied into) 243 385.33 T
(the string, instead of read as a string delimiter) 243 373.33 T
(.) 458.77 373.33 T
(\134n) 180 354.33 T
-0.74 (This code represents a newline control code \050i.e. ASCII 0x0A, or) 243 354.33 P
(control-J\051.) 243 342.33 T
(\134t) 180 323.33 T
(This code represents a hard-tab control code \050i.e. ASCII 0x09,) 243 323.33 T
(or control-I\051.) 243 311.33 T
(\134f) 180 292.33 T
-0.37 (This code represents a form-feed control code \050i.e. ASCII 0x0C,) 243 292.33 P
(or control-L\051.) 243 280.33 T
(\134b) 180 261.33 T
-0.48 (This code represents a backspace control code \050i.e. ASCII 0x10,) 243 261.33 P
(or control-H\051.) 243 249.33 T
(\134\134) 180 230.33 T
-0.63 (This code represents a backslash character \050i.e. ASCII 0x5C, or) 243 230.33 P
(\322\134\323\051.) 243 218.33 T
(\134) 180 199.33 T
3 F
(nnn) 186.06 199.33 T
1 F
(This code is a literal octal value. The backslash must be) 243 199.33 T
(followed by three digits, making up an octal integer in the) 243 187.33 T
-0.39 (range 0-177o \050i.e. 0-255\051. The byte speci\336ed is inserted directly) 243 175.33 P
(into the string. Thus, for example, "\134134" is functionally) 243 163.33 T
(identical to "\134\134".) 243 151.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "747" 5
%%Page: "748" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(748) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.1.1.3) 111.4 638.67 T
(Cell References) 180 638.67 T
1 10 Q
-0.39 (The parse library is often used in conjunction with cell \336les; for example, the) 180 616.33 P
(spreadsheet objects use the two libraries together) 180 603.33 T
(. For this reason, the) 408.35 603.33 T
(scanner recognizes cell references. Cell references are described by the) 180 590.33 T
-0.09 (regular expression [A-Z]) 180 577.33 P
1 8 Q
-0.07 (+) 291.85 581.33 P
1 10 Q
-0.09 ([0-9]) 296.7 577.33 P
1 8 Q
-0.07 (+) 317.81 581.33 P
1 10 Q
-0.09 (; that is, one or more capital letters, followed) 322.65 577.33 P
-0.22 (by one or more digits. The capital letters indicate the cell\325) 180 564.33 P
-0.22 (s column. The \336rst) 442.81 564.33 P
-0.21 (column \050the column with index 0\051 is indicated by the letter A; column 1 is B,) 180 551.33 P
(column 2 is C, and so on, up to column 25 \050which is Z\051. Column 26 is AA,) 180 538.33 T
(followed by) 180 525.33 T
1 9 Q
(AB) 234.64 525.33 T
1 10 Q
(,) 247.64 525.33 T
1 9 Q
(AC) 253.2 525.33 T
1 10 Q
(, and so on to) 266.19 525.33 T
1 9 Q
(AZ) 329.91 525.33 T
1 10 Q
( \050column 51\051; this column is followed by) 341.91 525.33 T
1 9 Q
-0.5 (BA) 180 512.33 P
1 10 Q
-0.56 (, and so on, to the largest column, IV \050column 255\051. The rows are indicated) 193 512.33 P
(by number) 180 499.33 T
(, with the \336rst row having number 1.) 229.08 499.33 T
-0.62 (The data portion of a cell reference token is a) 180 479.33 P
4 F
-0.64 (CellReference) 385.08 479.33 P
1 F
-0.62 ( structure. This) 458.24 479.33 P
(structure records the row and column indices of the cell; the scanner) 180 466.33 T
-0.54 (translates the cell reference to these indices. For more information about the) 180 453.33 P
-0.39 (cell library) 180 440.33 P
-0.39 (, see the Cell Library section in \322Database Library) 228.69 440.33 P
-0.39 (,\323 Chapter) 456.96 440.33 P
-0.39 (19 of) 506.76 440.33 P
(the Concepts Book.) 180 427.33 T
-0.6 (When the evaluator needs to get the value of a cell, it calls a callback routine,) 180 407.33 P
(passing the cell\325) 180 394.33 T
(s) 253.16 394.33 T
4 F
(CellReference) 260.57 394.33 T
1 F
( structure. The application is responsible) 333.73 394.33 T
-0.71 (for looking up the cell\325) 180 381.33 P
-0.71 (s value and returning it to the evaluator) 279 381.33 P
-0.71 (. If you manage) 459.59 381.33 P
(a cell \336le with a Spreadsheet object, this work is done for you; the) 180 368.33 T
(Spreadsheet will be called by the evaluator) 180 355.33 T
(, returning the values of cells as) 378.19 355.33 T
(needed. \050The spreadsheet returns zero for empty or unallocated cells.\051) 180 342.33 T
(Note that while the cell library numbers both rows and columns starting) 180 322.33 T
-0.51 (from zero, the Parse library numbers rows starting from one. This is because) 180 309.33 P
-0.6 (historically) 180 296.33 P
-0.6 (, spreadsheets have had the \336rst row be row number 1. Therefore,) 230.93 296.33 P
-0.48 (if the parser encounters a reference to cell A1, it will translate this into a cell) 180 283.33 P
(reference which speci\336es row zero, column zero.) 180 270.33 T
0 14 Q
(20.1.1.4) 111.4 236.67 T
(Operators) 180 236.67 T
1 10 Q
(The scanner recognizes a number of built-in operators. Neither the scanner) 180 214.33 T
-0.23 (nor the parser does any simpli\336cation or evaluation of operator expressions;) 180 201.33 P
(this is done by the evaluator) 180 188.33 T
(. All operators are represented by the token) 310.58 188.33 T
1 9 Q
-0.56 (SCANNER_TOKEN_OPERA) 180 175.33 P
-0.56 (TOR) 301.18 175.33 P
1 10 Q
-0.63 (. The token has a one-byte data section, which) 320.68 175.33 P
(is a member of the enumerated type) 180 162.33 T
4 F
(OperatorT) 349.65 162.33 T
(ype) 403.95 162.33 T
1 F
(; this value speci\336es) 422.47 162.33 T
(which operator was encountered. This section begins with a listing of) 180 149.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "748" 6
%%Page: "749" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(749) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(currently supported operators in order of precedence, from highest) 180 641.33 T
(precedence to lowest; this is followed by a detailed description of the) 180 628.33 T
-0.58 (operators. All operators listed here will always be supported; other operators) 180 615.33 P
(may be added in the future.) 180 602.33 T
(Note that neither the scanner nor the parser does any evaluation of) 180 582.33 T
(arguments. All type-checking is done at evaluation time. Thus, if parse the) 180 569.33 T
(text \322\0503 * "HELLO"\051\323, the parser will not complain; the evaluator) 180 556.33 T
(, however) 478.38 556.33 T
(,) 521.9 556.33 T
(will return a \322bad argument type\323 error) 180 543.33 T
(.) 362.05 543.33 T
(T) 180 523.33 T
(able) 186.05 523.33 T
(20-) 208.1 523.33 T
(1 on page) 222.55 523.33 T
2 F
(l) 269.23 523.33 T
1 F
(750 lists the operators in order of precedence.) 279.92 523.33 T
(Highest-precedence operators are listed \336rst. Operators with the same) 180 510.33 T
(precedence are listed together; a blank line implies a drop in precedence.) 180 497.33 T
-0.6 (Operators of the same precedence level are grouped from left to right; that is,) 180 484.33 P
("1) 180 471.33 T
(-) 192.23 471.33 T
(2) 198.34 471.33 T
(-) 206.68 471.33 T
(3" is the same as "\0501) 212.79 471.33 T
(-) 308.75 471.33 T
(2\051) 314.86 471.33 T
(-) 326.53 471.33 T
(3".) 332.64 471.33 T
(:) 180 451.33 T
-0.4 (This is a range separator) 243 451.33 P
-0.4 (. The range separator is a binary in\336x) 356.41 451.33 P
(operator) 243 439.33 T
(. The parser recognizes expressions of the format) 281.33 439.33 T
3 F
-0.16 (Cell1) 243 427.33 P
1 F
-0.16 (:) 266.88 427.33 P
3 F
-0.16 (Cell2) 269.66 427.33 P
1 F
-0.16 ( as describing a rectangular range of cells, with the) 293.54 427.33 P
-0.08 (two speci\336ed cells being diagonally opposite corners. The data) 243 415.33 P
(portion of this token is the constant) 243 403.33 T
1 9 Q
(OP_RANGE_SEP) 410.24 403.33 T
(ARA) 483.58 403.33 T
(TOR) 502.58 403.33 T
1 10 Q
(.) 522.08 403.33 T
(...) 180 384.33 T
(This is another range separator) 243 384.33 T
(. It is functionally identical to) 388.57 384.33 T
(the colon operator) 243 372.33 T
(. The data portion of this token is the) 325.59 372.33 T
-0.98 (constant) 243 360.33 P
1 9 Q
-0.88 (OP_RANGE_SEP) 284.43 360.33 P
-0.88 (ARA) 357.78 360.33 P
-0.88 (TOR) 376.77 360.33 P
1 10 Q
-0.98 (. \050The formatter will turn this) 396.28 360.33 P
(back into a colon.\051) 243 348.33 T
(-) 180 329.33 T
(This can be either of two different operators. It can be a) 243 329.33 T
(negation operator) 243 317.33 T
(. This is a unary pre\336x operator which) 324.3 317.33 T
(reverses the arithmetic sign of the operand. It can also be a) 243 305.33 T
-0.72 (subtraction operator) 243 293.33 P
-0.72 (. This is a binary in\336x operator) 336.17 293.33 P
-0.72 (. The parser) 474.46 293.33 P
(determines which operator is represented. For example, in) 243 281.33 T
(\322\050-1\051\323, the hyphen is a negation operator; in \322\0501-2\051\323, it is a) 243 269.33 T
(subtraction operator) 243 257.33 T
(. The data portion of this token is either) 336.89 257.33 T
1 9 Q
(OP_NEGA) 243 245.33 T
(TION) 287.34 245.33 T
1 10 Q
( or) 311.35 245.33 T
1 9 Q
(OP_SUBTRACTION) 326.35 245.33 T
1 10 Q
(; the scanner assigns the) 412.85 245.33 T
-0.58 (neutral) 243 233.33 P
1 9 Q
-0.52 (OP_SUBTRACTION_NEGA) 279.46 233.33 P
-0.52 (TION) 397.3 233.33 P
1 10 Q
-0.58 (, and the parser decides) 421.31 233.33 P
(\050from context\051 which value is appropriate.) 243 221.33 T
(%) 180 202.33 T
-0.8 (This can be either of two operators. It can be a percent operator) 243 202.33 P
-0.8 (.) 526.24 202.33 P
(This is a unary post\336x operator which divides its operand by) 243 190.33 T
(100; that is, \32250%\323 evaluates to 0.5. It can also be a modulo) 243 178.33 T
(arithmetic operator) 243 166.33 T
(. This is a binary in\336x operator which) 332.63 166.33 T
(returns the remainder when its \336rst operand is divided by its) 243 154.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "749" 7
%%Page: "750" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(750) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(second operand; that is, \3221) 243 641.33 T
(1%4\323 evaluates to 3.0. The parser) 364.32 641.33 T
-0.14 (determines which operator is represented. The data portion of) 243 629.33 P
-0.31 (this token is either) 243 617.33 P
1 9 Q
-0.28 (OP_PERCENT) 331.96 617.33 P
1 10 Q
-0.31 ( or) 394.8 617.33 P
1 9 Q
-0.28 (OP_MODULO) 409.18 617.33 P
1 10 Q
-0.31 (; the scanner) 469.52 617.33 P
(assigns the neutral) 243 605.33 T
1 9 Q
(OP_PERCENT_MODULO) 334.68 605.33 T
1 10 Q
(, and the parser) 444.86 605.33 T
(decides \050from context\051 which constant is appropriate.) 243 593.33 T
(^) 180 574.33 T
(This is the exponentiation operator) 243 574.33 T
(. It is a binary in\336x) 404.87 574.33 T
(operator; it raises its \336rst operand to the power of the second) 243 562.33 T
(operand \050e.g. \3222^3\323 evaluates to 8.0\051. The data portion of this) 243 550.33 T
(token is the constant) 243 538.33 T
1 9 Q
(OP_RANGE_EXPONENTIA) 342.46 538.33 T
(TION) 460.97 538.33 T
1 10 Q
(.) 484.98 538.33 T
81 144 531 648 C
0 0 0 1 0 0 0 K
180 144 531 514.01 C
0 0 0 1 0 0 0 K
180 150.51 531 511.51 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(T) 180 504.84 T
(able) 185.37 504.84 T
(20-) 208.16 504.84 T
(1) 222.61 504.84 T
3 F
(Parse Library Operators) 230.95 504.84 T
180 483.53 531 488.51 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 483.53 531 488.51 R
7 X
0 0 0 1 0 0 0 K
V
152 486.49 755 486.49 2 L
V
0.5 H
2 Z
0 X
N
180 144 531 514.01 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Operator) 180 491.84 T
(Description) 252 491.84 T
1 F
(:) 180 474.87 T
( range separator) 252 474.87 T
(...) 180 460.87 T
( range separator \050alternate form\051) 252 460.87 T
(#) 180 432.87 T
( range intersection) 252 432.87 T
(-) 180 404.87 T
(unary negation) 252 404.87 T
(%) 180 390.87 T
(unary percent) 252 390.87 T
(^) 180 376.87 T
(exponentiation) 252 376.87 T
(*) 180 362.87 T
(multiplication) 252 362.87 T
(/) 180 348.87 T
(division) 252 348.87 T
(%) 180 320.87 T
(modulo division) 252 320.87 T
(+) 180 292.87 T
(addition) 252 292.87 T
(-) 180 278.87 T
(subtraction) 252 278.87 T
(&) 180 264.87 T
(string concatenation) 252 264.87 T
(=) 180 236.87 T
(Boolean or string equality) 252 236.87 T
(<>) 180 222.87 T
(Boolean or string inequality) 252 222.87 T
(<) 180 208.87 T
(Boolean or string less-than) 252 208.87 T
(<=) 180 194.87 T
(Boolean or string less-than-or-equal-to) 252 194.87 T
(>) 180 180.87 T
(Boolean or string greater-than) 252 180.87 T
(>=) 180 166.87 T
(Boolean or string greater-than-or-equal-to) 252 166.87 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "750" 8
%%Page: "751" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(751) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(*) 180 641.33 T
-0.52 (This is the multiplication operator) 243 641.33 P
-0.52 (. It is a binary in\336x operator) 399.08 641.33 P
-0.52 (.) 525.96 641.33 P
(It multiplies the two operands. The data portion of this token) 243 629.33 T
(is the constant) 243 617.33 T
1 9 Q
(OP_MUL) 313.75 617.33 T
(TIPLICA) 352.59 617.33 T
(TION) 390.43 617.33 T
1 10 Q
(.) 414.43 617.33 T
(/) 180 598.33 T
(This is the division operator) 243 598.33 T
(. It is a binary in\336x operator) 372.09 598.33 T
(. It) 502.11 598.33 T
-0.62 (divides the \336rst operand by the second. The data portion of this) 243 586.33 P
(token is the constant) 243 574.33 T
1 9 Q
(OP_ DIVISION) 342.46 574.33 T
1 10 Q
(. The constant) 406.96 574.33 T
1 9 Q
(OP_DIVISION_GRAPHIC) 243 562.33 T
1 10 Q
( is functionally equivalent; however) 353.16 562.33 T
(,) 517.07 562.33 T
(the formatter will display the operator as \322) 243 550.33 T
5 F
(\270) 440.62 550.33 T
1 F
(\323.) 446.11 550.33 T
(+) 180 531.33 T
(This is the addition operator) 243 531.33 T
(. It is a binary in\336x operator) 374.13 531.33 T
(. It) 504.15 531.33 T
(adds the two operands. The data portion of this token is the) 243 519.33 T
(constant) 243 507.33 T
1 9 Q
(OP_RANGE_ADDITION) 285.41 507.33 T
1 10 Q
(.) 389.41 507.33 T
(Several Boolean operators are also provided. In every case, if a Boolean) 180 488.33 T
-0.16 (expression is true, it evaluates to 1.0; if it is false, it evaluates to 0.0. \050There) 180 475.33 P
(is no Boolean negation operator; however) 180 462.33 T
(, there is a Boolean negation) 369.83 462.33 T
(function,) 180 449.33 T
1 9 Q
(NOT) 223.7 449.33 T
1 10 Q
(, which returns 1.0 if its argument is zero, and otherwise) 243.12 449.33 T
(returns zero.\051 Boolean operators may be used for numbers or strings. They) 180 436.33 T
(work in the conventional way for numbers. Strings are \322equal\323 if they are) 180 423.33 T
-0.74 (identical. One string is said to be \322less than\323 another if it comes \336rst in lexical) 180 410.33 P
-0.75 (order) 180 397.33 P
-0.75 (. The parse library uses localized string comparison routines to compare) 203.88 397.33 P
(strings; thus, the local lexical ordering is automatically used. \050For more) 180 384.33 T
(information, see \322Localization,\323 Chapter) 180 371.33 T
(8.\051) 368.17 371.33 T
(=) 180 351.33 T
(This is the equality operator) 243 351.33 T
(. It is a binary in\336x operator) 373.58 351.33 T
(. An) 503.6 351.33 T
(expression evaluates to 1.0 if both operands evaluate to) 243 339.33 T
-0.15 (identical values. The data portion of this token is the constant) 243 327.33 P
1 9 Q
(OP_EQUAL) 243 315.33 T
1 10 Q
(.) 293.84 315.33 T
(<>) 180 296.33 T
-0.29 (This is the inequality operator) 243 296.33 P
-0.29 (. It is a binary in\336x operator) 381.66 296.33 P
-0.29 (. An) 509.92 296.33 P
(expression evaluates to 1.0 if the two operands evaluate to) 243 284.33 T
(different values. The data portion of this token is) 243 272.33 T
1 9 Q
(OP_NOT_EQUAL) 243 260.33 T
1 10 Q
(. The constant) 318.68 260.33 T
1 9 Q
(OP_NOT_EQUAL_GRAPHIC) 387.21 260.33 T
1 10 Q
( is) 511.05 260.33 T
-0.88 (functionally equivalent; however) 243 248.33 P
-0.88 (, the formatter will display the) 391.81 248.33 P
(operator as \322) 243 236.33 T
5 F
(\271) 301.71 236.33 T
1 F
(\323.) 307.2 236.33 T
(>) 180 217.33 T
-0.61 (This is the \322greater) 243 217.33 P
-0.61 (-than\323 operator) 330.27 217.33 P
-0.61 (. It is a binary in\336x operator) 399.66 217.33 P
-0.61 (.) 526.05 217.33 P
-0.23 (It returns 1.0 if the \336rst operand evaluates to a larger number) 243 205.33 P
(than the second operand. The data portion of this token is) 243 193.33 T
1 9 Q
(OP_GREA) 243 181.33 T
(TER_THAN) 286.51 181.33 T
1 10 Q
(.) 337.34 181.33 T
(<) 180 162.33 T
-0.11 (This is the \322less-than\323 operator) 243 162.33 P
-0.11 (. It is a binary in\336x operator) 385.55 162.33 P
-0.11 (. It) 514.92 162.33 P
(returns 1.0 if the \336rst operand evaluates to a smaller number) 243 150.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "751" 9
%%Page: "752" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(752) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(than the second operand. The data portion of this token is) 243 641.33 T
1 9 Q
(OP_LESS_THAN) 243 629.33 T
1 10 Q
(.) 316.18 629.33 T
(>=) 180 610.33 T
(This is the \322greater) 243 610.33 T
(-than-or) 332.09 610.33 T
(-equal-to\323 operator) 369.68 610.33 T
(. It is a binary) 455.61 610.33 T
-0.17 (in\336x operator) 243 598.33 P
-0.17 (. It returns 1.0 if the \336rst operator evaluates to a) 304.68 598.33 P
-0.38 (number that is greater than or equal to the value of the second) 243 586.33 P
(operand. The data portion of this token is) 243 574.33 T
1 9 Q
(OP_GREA) 243 562.33 T
(TER_THAN_OR_EQUAL) 286.51 562.33 T
1 10 Q
(. The constant) 393.17 562.33 T
1 9 Q
(OP_GREA) 243 550.33 T
(TER_THAN_OR_EQUAL_GRAPHIC) 286.51 550.33 T
1 10 Q
( is functionally) 441.33 550.33 T
-0.41 (equivalent; however) 243 538.33 P
-0.41 (, the formatter will display the operator as) 335.01 538.33 P
(\322) 243 526.33 T
5 F
(\263) 246.89 526.33 T
1 F
(\323.) 252.38 526.33 T
(<=) 180 507.33 T
-0.02 (This is the \322less-than-or) 243 507.33 P
-0.02 (-equal-to\323 operator) 353.51 507.33 P
-0.02 (. It is a binary in\336x) 439.42 507.33 P
(operator) 243 495.33 T
(. It returns 1.0 if the \336rst operator evaluates to a) 281.33 495.33 T
(number that is less than or equal to the value of the second) 243 483.33 T
(operand. The data portion of this token is) 243 471.33 T
1 9 Q
(OP_LESS_THAN_OR_EQUAL) 243 459.33 T
1 10 Q
(. The constant) 372.02 459.33 T
1 9 Q
(OP_LESS_THAN_OR_EQUAL_GRAPHIC) 243 447.33 T
1 10 Q
( is functionally) 420.17 447.33 T
-0.41 (equivalent; however) 243 435.33 P
-0.41 (, the formatter will display the operator as) 335.01 435.33 P
(\322) 243 423.33 T
5 F
(\243) 246.89 423.33 T
1 F
(\323.) 252.38 423.33 T
(Some special-purpose operators are also provided:) 180 404.33 T
(&) 180 384.33 T
(This is the \322string-concatenation\323 operator) 243 384.33 T
(. It is a binary in\336x) 438.75 384.33 T
-0.57 (operator) 243 372.33 P
-0.57 (. The arguments must be strings. The result is a single) 281.33 372.33 P
(string, composed of all the characters of the \336rst string) 243 360.33 T
(\050without its null terminator\051 followed by all the characters of) 243 348.33 T
(the second string \050with its null terminator\051; for example,) 243 336.33 T
(\050"Franklin") 243 324.33 T
(&) 298.01 324.33 T
("Poomm"\051 evaluates to "FranklinPoomm". The) 308.94 324.33 T
(data portion of this token is) 243 312.33 T
1 9 Q
(OP_STRING_CONCA) 373.58 312.33 T
(T) 465.09 312.33 T
1 10 Q
(.) 470.17 312.33 T
(#) 180 293.33 T
(This is the \322range-intersection\323 operator) 243 293.33 T
(. It is a binary in\336x) 428.19 293.33 T
-0.67 (operator) 243 281.33 P
-0.67 (. Both arguments must be cell ranges. The result is the) 281.33 281.33 P
(range of cells which falls in both of the operand cell ranges.) 243 269.33 T
(Note that cell ranges must be rectangular; there is, therefore,) 243 257.33 T
(no \322range-union\323 operator) 243 245.33 T
(. The data portion of this token is) 362.07 245.33 T
1 9 Q
(OP_RANGE_INTERSECTION) 243 233.33 T
1 10 Q
(.) 371.5 233.33 T
0 14 Q
(20.1.1.5) 111.4 200.67 T
(Identi\336ers) 180 200.67 T
1 10 Q
(Any unbroken alphanumeric character sequence which does not appear in) 180 178.33 T
-0.12 (quotes, and which is not in the format for a cell reference, is presumed to be) 180 165.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "752" 10
%%Page: "753" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(753) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.57 (an identi\336er) 180 641.33 P
-0.57 (. Identi\336ers serve two roles: they may be function names, or they) 235.73 641.33 P
(may be labels.) 180 628.33 T
-0.14 (The scanner merely notes that an identi\336er has been found; it does not take) 180 608.33 P
-0.17 (any other action. The parser will \336nd out what the identi\336er signi\336es. If the) 180 595.33 P
-0.43 (identi\336er) 180 582.33 P
-0.43 (\325) 223.14 582.33 P
-0.43 (s position indicates that it is a function \050but the name is not that of) 224.81 582.33 P
-0.8 (a built-in function\051, the parser will prompt its caller for a pointer to a callback) 180 569.33 P
-0.38 (routine which will perform this function. If its position indicates that it is an) 180 556.33 P
(identi\336er) 180 543.33 T
(, the parser will request the value associated with the identi\336er;) 221.85 543.33 T
(this may be a string, a number) 180 530.33 T
(, or a cell reference.) 321.7 530.33 T
0 14 Q
(20.1.2) 123.08 488 T
0 18 Q
(The Parser) 180 488 T
1 10 Q
(Applications will never call the scanner directly) 180 464.33 T
(. Instead, if they access the) 399.27 464.33 T
-0.05 (parse library directly \050instead of through the spreadsheet objects\051, they will) 180 451.33 P
(call the parser and pass it a string, and the parser will in turn call the) 180 438.33 T
-0.51 (scanner to process the string into tokens. This section will not discuss how to) 180 425.33 P
(call the parser) 180 412.33 T
(, since few applications will need to do that; it will instead) 245.93 412.33 T
(describe the general workings of the parser) 180 399.33 T
(.) 379.08 399.33 T
-0.28 (The parser translates a well-formed string into a sequence of tokens. It calls) 180 379.33 P
(the scanner to read tokens from the string. It then uses a context-free) 180 366.33 T
-0.03 (grammar to make sure the string is well formed. The context-free grammar) 180 353.33 P
(is described below) 180 340.33 T
(. The scanner outputs a sequence of parser tokens. The) 262.61 340.33 T
(parser tokens are almost identical to the scanner tokens, with a few) 180 327.33 T
(exceptions; those exceptions are noted below) 180 314.33 T
(.) 384.28 314.33 T
-0.46 (The parser is passed a callback routine. The parser calls this routine when it) 180 294.33 P
(needs information about a token; for example, if it encounters a function it) 180 281.33 T
(does not recognize, it calls the callback to get a pointer to the function. The) 180 268.33 T
(details of this are provided in the advanced section.) 180 255.33 T
(If the parser is not passed a well-formed expression, or if it is unable to) 180 235.33 T
-0.15 (successfully parse the string for some other reason, it returns an error code.) 180 222.33 P
(The error codes are described at length in the advanced section.) 180 209.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "753" 11
%%Page: "754" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(754) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.1.2.1) 111.4 638.67 T
(The Parser) 180 638.67 T
(\325) 252.88 638.67 T
(s Grammar) 256.26 638.67 T
1 10 Q
(The parser uses a context-free grammar to make sure the string is) 180 616.33 T
(well-formed. The grammar is listed below) 180 603.33 T
(. The basic units of the grammar) 371.33 603.33 T
(are listed in) 180 590.33 T
1 9 Q
(ALL-CAPS) 238.16 590.33 T
1 10 Q
(; higher) 284.33 590.33 T
(-level units are listed in) 319.89 590.33 T
3 F
(italics) 432.5 590.33 T
1 F
(. The string) 460.63 590.33 T
(must parse to a well-formed) 180 577.33 T
3 F
(expression) 312.05 577.33 T
1 F
(.) 359.43 577.33 T
3 F
(expression) 180 557.33 T
1 F
(:) 227.38 557.33 T
('\050') 243 557.33 T
3 F
(expression) 253.19 557.33 T
1 F
('\051) 303.35 557.33 T
3 F
(') 308.72 557.33 T
1 9 Q
(NEG_OP) 243 545.33 T
3 10 Q
(expression) 284.12 545.33 T
1 9 Q
(IDENTIFIER) 243 533.33 T
1 10 Q
( '\050') 299.83 533.33 T
3 F
(function_args) 312.8 533.33 T
1 F
( '\051') 375.74 533.33 T
3 F
(base_item more_expression) 243 521.33 T
(more_expression) 180 502.33 T
1 F
(:) 255.15 502.33 T
(<empty>) 243 490.33 T
1 9 Q
(PERCENT_OP) 243 478.33 T
3 10 Q
(more_expression) 308.62 478.33 T
1 9 Q
(BINAR) 243 466.33 T
(Y_OP) 273.16 466.33 T
3 10 Q
(expression) 299.78 466.33 T
(function_args) 180 447.33 T
1 F
(:) 242.94 447.33 T
(<empty>) 243 435.33 T
3 F
(arg_list) 243 423.33 T
(arg_list) 180 404.33 T
1 F
(:) 215.17 404.33 T
3 F
(expression) 243 404.33 T
(expression) 243 392.33 T
1 F
( ',') 290.38 392.33 T
3 F
(arg_list) 302.8 392.33 T
(base_item) 180 373.33 T
1 F
(:) 225.36 373.33 T
1 9 Q
(NUMBER) 243 373.33 T
(STRING) 243 361.33 T
(CELL_REF) 243 349.33 T
(IDENTIFIER) 243 337.33 T
0 14 Q
(20.1.2.2) 111.4 304.67 T
(Parser T) 180 304.67 T
(okens) 234.99 304.67 T
1 10 Q
-0.15 (The parser does not return scanner tokens; instead, it returns a sequence of) 180 282.33 P
(parser tokens. The parser tokens are almost directly analogous to the) 180 269.33 T
(scanner tokens. However) 180 256.33 T
(, a few additional token types are added.) 295.37 256.33 T
(The parser tokens have the same structure as the scanner tokens. The \336rst) 180 236.33 T
(\336eld is a constant specifying what type of token this is. The second \336eld) 180 223.33 T
(contains speci\336c information about the token; this \336eld may be blank. The) 180 210.33 T
(parser has the following types of tokens:) 180 197.33 T
1 9 Q
(P) 180 177.33 T
(ARSER_TOKEN_NUMBER) 185.34 177.33 T
1 10 Q
(This is the same as the scanner) 243 165.33 T
1 9 Q
(NUMBER) 391.36 165.33 T
1 10 Q
( token.) 434.02 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "754" 12
%%Page: "755" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(755) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(P) 180 641.33 T
(ARSER_TOKEN_STRING) 185.34 641.33 T
1 10 Q
(This is the same as the scanner) 243 629.33 T
1 9 Q
(STRING) 391.36 629.33 T
1 10 Q
( token.) 427.53 629.33 T
1 9 Q
(P) 180 610.33 T
(ARSER_TOKEN_CELL) 185.34 610.33 T
1 10 Q
(This is the same as the scanner) 243 598.33 T
1 9 Q
(CELL) 391.36 598.33 T
1 10 Q
( token.) 416.36 598.33 T
1 9 Q
(P) 180 579.33 T
(ARSER_TOKEN_END_OF_EXPRESSION) 185.34 579.33 T
1 10 Q
(This is the same as the scanner) 243 567.33 T
1 9 Q
(END_OF_EXPRESSION) 391.36 567.33 T
1 10 Q
( token.) 495.37 567.33 T
1 9 Q
(P) 180 548.33 T
(ARSER_TOKEN_OPEN_P) 185.34 548.33 T
(AREN) 296.51 548.33 T
1 10 Q
(This usually replaces the scanner) 243 536.33 T
1 9 Q
(OPEN_P) 400.79 536.33 T
(AREN) 437.46 536.33 T
1 10 Q
( token.) 464.29 536.33 T
-0.56 (However) 243 524.33 P
-0.56 (, it is not used if the parenthesis is delimiting function) 283.18 524.33 P
(arguments; it is only used if the parenthesis is changing the) 243 512.33 T
(order of evaluation.) 243 500.33 T
1 9 Q
(P) 180 481.33 T
(ARSER_TOKEN_CLOSE_P) 185.34 481.33 T
(AREN) 301.35 481.33 T
1 10 Q
(This usually replaces the scanner) 243 469.33 T
1 9 Q
(CLOSE_P) 400.79 469.33 T
(AREN) 442.3 469.33 T
1 10 Q
( token.) 469.13 469.33 T
-0.56 (However) 243 457.33 P
-0.56 (, it is not used if the parenthesis is delimiting function) 283.18 457.33 P
(arguments; it is only used if the parenthesis is changing the) 243 445.33 T
(order of evaluation.) 243 433.33 T
1 9 Q
(P) 180 414.33 T
(ARSER_TOKEN_NAME) 185.34 414.33 T
1 10 Q
(This replaces some occurrences of the scanner) 243 402.33 T
1 9 Q
(IDENTIFIER) 458.17 402.33 T
1 10 Q
(token; speci\336cally) 243 390.33 T
(, those where the identi\336er is not a function) 324.12 390.33 T
(name. The data portion is the number for that name.) 243 378.33 T
1 9 Q
(P) 180 359.33 T
(ARSER_TOKEN_FUNCTION) 185.34 359.33 T
1 10 Q
(This replaces some occurrences of the scanner) 243 347.33 T
1 9 Q
(IDENTIFIER) 458.17 347.33 T
1 10 Q
(token, speci\336cally those in which the identi\336er is a function) 243 335.33 T
(name. The data portion is the function) 243 323.33 T
1 9 Q
(ID) 423.58 323.33 T
1 10 Q
( number) 434.24 323.33 T
(.) 472.39 323.33 T
1 9 Q
(P) 180 304.33 T
(ARSER_TOKEN_CLOSE_FUNCTION) 185.34 304.33 T
1 10 Q
(This replaces some occurrences of the scanner) 243 292.33 T
1 9 Q
(CLOSE_P) 458.17 292.33 T
(AREN) 499.68 292.33 T
1 10 Q
-0.88 (token; speci\336cally) 243 280.33 P
-0.88 (, those where the closing parenthesis delimits) 323.24 280.33 P
(function arguments.) 243 268.33 T
1 9 Q
(P) 180 249.33 T
(ARSER_TOKEN_ARG_END) 185.34 249.33 T
1 10 Q
(The parser inserts this token after every argument to a) 243 237.33 T
(function call; thus, it replaces occurrences of) 243 225.33 T
1 9 Q
-0.68 (SCANNER_TOKEN_LIST_SEP) 243 213.33 P
-0.68 (ARA) 375.52 213.33 P
-0.68 (TOR) 394.52 213.33 P
1 10 Q
-0.75 (, and also occurs after the) 414.02 213.33 P
(last argument to a function.) 243 201.33 T
1 9 Q
(P) 180 182.33 T
(ARSER_TOKEN_OPERA) 185.34 182.33 T
(TOR) 291.84 182.33 T
1 10 Q
(This is the same as the parser) 243 170.33 T
(\325) 382.65 170.33 T
(s) 384.32 170.33 T
1 9 Q
(OPERA) 391.73 170.33 T
(TOR) 423.73 170.33 T
1 10 Q
( token. The data) 443.24 170.33 T
(section is an operator constant, as described above in) 243 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "755" 13
%%Page: "756" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(756) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.26 (\322Operators\323 on page 748. Note the parser replaces occurrences) 243 641.33 P
(of) 243 629.33 T
1 9 Q
(OP_PERCENT_MODULO) 254.11 629.33 T
1 10 Q
( with either) 364.29 629.33 T
1 9 Q
(OP_PERCENT) 421.15 629.33 T
1 10 Q
( or) 483.99 629.33 T
1 9 Q
(OP_MODULO) 243 617.33 T
1 10 Q
(, as appropriate; similarly) 303.35 617.33 T
(, it replaces) 422.08 617.33 T
1 9 Q
(OP_SUBTRACTION_NEGA) 243 605.33 T
(TION) 360.85 605.33 T
1 10 Q
( with either) 384.85 605.33 T
1 9 Q
(OP_SUBTRACTION) 441.71 605.33 T
1 10 Q
(or) 243 593.33 T
1 9 Q
(OP_NEGA) 255.22 593.33 T
(TION) 299.56 593.33 T
1 10 Q
(.) 323.57 593.33 T
-0.34 (When the parser encounters an identi\336er that is in the appropriate place for) 180 574.33 P
-0.37 (a function name \050that is, an identi\336er followed by a parenthesized argument) 180 561.33 P
(list\051, it does not write an identi\336er token. Instead, it writes a \322function\323) 180 548.33 T
(token, which has a one-word data section. This section is the function ID) 180 535.33 T
-0.14 (\050described in section 20.2 on page 761\051. If the function\325) 180 522.33 P
-0.14 (s name is not one of a) 429.53 522.33 P
-0.81 (built-in function, it will call the application\325) 180 509.33 P
-0.81 (s callback routine to \336nd out what) 375.91 509.33 P
-0.01 (the function\325) 180 496.33 P
-0.01 (s) 237.58 496.33 P
1 9 Q
-0.01 (ID) 244.97 496.33 P
1 10 Q
-0.01 ( number is; the evaluator will pass this) 255.64 496.33 P
1 9 Q
-0.01 (ID) 439.09 496.33 P
1 10 Q
-0.01 ( when it needs to) 449.76 496.33 P
(have the function called.) 180 483.33 T
-0.23 (When the parser encounters an identi\336er) 180 463.33 P
-0.23 (, it asks its caller for an) 368.85 463.33 P
1 9 Q
-0.21 (ID) 479.12 463.33 P
1 10 Q
-0.23 ( number) 489.79 463.33 P
-0.56 (for the identi\336er) 180 450.33 P
-0.56 (. It can then store the) 254.06 450.33 P
1 9 Q
-0.5 (ID) 353.31 450.33 P
1 10 Q
-0.56 ( number instead of the entire string.) 363.97 450.33 P
(The evaluator will use this) 180 437.33 T
1 9 Q
(ID) 306.51 437.33 T
1 10 Q
( number when requesting the value of the) 317.17 437.33 T
-0.76 (identi\336er) 180 424.33 P
-0.76 (. The formatter will use the) 221.85 424.33 P
1 9 Q
-0.69 (ID) 346.93 424.33 P
1 10 Q
-0.76 ( number when requesting the original) 357.59 424.33 P
(identi\336er string associated with the) 180 411.33 T
1 9 Q
(ID) 347.61 411.33 T
1 10 Q
( number) 358.27 411.33 T
(.) 396.42 411.33 T
(When the parser encounters a scanner parenthesis token, it does not) 180 391.33 T
(necessarily translate it into a parser parenthesis token. This is because) 180 378.33 T
(parentheses ful\336ll two separate roles: they specify the order of evaluation,) 180 365.33 T
(and they delimit function arguments. When the parser encounters) 180 352.33 T
-0.38 (parenthesis tokens which specify order of evaluation, it translates them into) 180 339.33 P
(parser parenthesis tokens. If, however) 180 326.33 T
(, it encounters argument-delimiting) 356.67 326.33 T
(parentheses, it does not need to translate them literally; after all, the) 180 313.33 T
-0.03 (presence of a function token implies that it will be followed by an argument) 180 300.33 P
-0.07 (list. Thus, the parser does not need to copy the parenthesis tokens. Instead,) 180 287.33 P
-0.04 (it copies the tokens of the argument list. When it reaches a list separator) 180 274.33 P
-0.04 (, it) 515.69 274.33 P
(replaces that with an \322end-of-argument\323 token; when it reaches the closing) 180 261.33 T
(parenthesis for the function call, it replaces that with a \322close-function\323) 180 248.33 T
(token.) 180 235.33 T
0 14 Q
(20.1.2.3) 111.4 201.67 T
(An Example of Scanning and Parsing) 180 201.67 T
1 10 Q
(Suppose that you call the parser on the text string) 180 179.33 T
("3) 180 166.33 T
(+) 192.23 166.33 T
1 9 Q
(SUM) 201.07 166.33 T
1 10 Q
(\0506.5,) 222.57 166.33 T
(3) 245.36 166.33 T
(^) 253.7 166.33 T
(\0504) 262.54 166.33 T
(-) 274.21 166.33 T
(1\051,) 280.32 166.33 T
(C5...F9\051". The parser will evaluate the string, one) 294.77 166.33 T
(token at a time. When it needs to process a token, it will call the scanner to) 180 153.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "756" 14
%%Page: "757" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(757) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(return the next token in the string. It will then replace these tokens with) 180 641.33 T
(parser tokens, and write out the sequence of tokens to its output buffer) 180 628.33 T
(.) 507.25 628.33 T
-0.61 (For simplicity) 180 608.33 P
-0.61 (, this example treats the scanner as if it scanned the entire text) 242.73 608.33 P
-0.5 (stream at once, and returned the entire sequence of tokens to the scanner) 180 595.33 P
-0.5 (. In) 513.48 595.33 P
-0.4 (this case, the scanner would translate the text into the following sequence of) 180 582.33 P
(tokens:) 180 569.33 T
6 F
(Token) 216 553.33 T
(Data) 288 553.33 T
(Comment) 396 553.33 T
(NUMBER) 216 536.33 T
(3.0) 288 536.33 T
(All numbers are floats) 396 536.33 T
(OPERATOR) 216 519.33 T
(OP_ADDITION) 288 519.33 T
(IDENTIFIER) 216 502.33 T
(\322SUM\323) 288 502.33 T
(OPEN_PAREN) 216 485.33 T
(delimits function args) 396 485.33 T
(NUMBER) 216 468.33 T
(6.5) 288 468.33 T
(LIST_SEPARATOR) 216 451.33 T
(NUMBER) 216 434.33 T
(3.0) 288 434.33 T
(OPERATOR) 216 417.33 T
(OP_EXPONENTIATION) 288 417.33 T
(OPEN_PAREN) 216 400.33 T
(NUMBER) 216 383.33 T
(4.0) 288 383.33 T
(OPERATOR) 216 366.33 T
(OP_SUBTRACTION_NEGATION) 288 366.33 T
(Parser figures out) 396 352.33 T
(which operator this is) 396 338.33 T
(NUMBER) 216 321.33 T
(1.0) 288 321.33 T
(CLOSE_PAREN) 216 304.33 T
(LIST_SEPARATOR) 216 287.33 T
(CELL) 216 270.33 T
(C5) 288 270.33 T
(Actually stored as) 396 270.33 T
(\3224,2\323; row index 4,) 396 256.33 T
(column index 2) 396 242.33 T
(OPERATOR) 216 225.33 T
(OP_RANGE_SEPARATOR) 288 225.33 T
(CELL) 216 208.33 T
(F9) 288 208.33 T
(CLOSE_PAREN) 216 191.33 T
(END_OF_EXPRESSION) 216 174.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "757" 15
%%Page: "758" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(758) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The parser reads these tokens, one at a time, and writes out an analogous) 180 641.33 T
(sequence of parser tokens:) 180 628.33 T
6 F
(Token) 216 612.33 T
(Data) 288 612.33 T
(Comment) 396 612.33 T
(NUMBER) 216 595.33 T
(3.0) 288 595.33 T
(All numbers are floats) 396 595.33 T
(OPERATOR) 216 578.33 T
(OP_ADDITION) 288 578.33 T
(FUNCTION) 216 561.33 T
(FUNCTION_ID_SUM) 288 561.33 T
(NUMBER) 216 544.33 T
(6.5) 288 544.33 T
(END_OF_ARG) 216 527.33 T
(NUMBER) 216 510.33 T
(3.0) 288 510.33 T
(OPERATOR) 216 493.33 T
(OP_EXPONENTIATION) 288 493.33 T
(OPEN_PAREN) 216 476.33 T
(NUMBER) 216 459.33 T
(4.0) 288 459.33 T
(OPERATOR) 216 442.33 T
(OP_SUBTRACTION) 288 442.33 T
(NUMBER) 216 425.33 T
(1.0) 288 425.33 T
(CLOSE_PAREN) 216 408.33 T
(END_OF_ARG) 216 391.33 T
(CELL) 216 374.33 T
(C5) 288 374.33 T
(Actually stored as) 396 374.33 T
(\3224,2\323; row index 4,) 396 360.33 T
(column index 2) 396 346.33 T
(OPERATOR) 216 329.33 T
(OP_RANGE_SEPARATOR) 288 329.33 T
(CELL) 216 312.33 T
(F9) 288 312.33 T
(END_OF_ARG) 216 295.33 T
(CLOSE_FUNCTION) 216 278.33 T
(END_OF_EXPRESSION) 216 261.33 T
1 F
-0.3 (The application does not need to save the original text string. Instead, it can) 180 240.33 P
(save the buffer containing the parser tokens, and use the formatter to) 180 227.33 T
(translate the token sequence back into a character string.) 180 214.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "758" 16
%%Page: "759" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library Behavior) 404.71 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(759) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.1.3) 123.08 636 T
0 18 Q
(Evaluator) 180 636 T
1 10 Q
(The evaluator simpli\336es a token string returned by the parser) 180 612.33 T
(. If the input) 466.14 612.33 T
-0.65 (token sequence was well-formed \050as are all token sequences generated by the) 180 599.33 P
-0.85 (Parser\051, the evaluator will produce a token sequence consisting of two tokens:) 180 586.33 P
(a single \322result\323 token \050which may be an error token\051, followed by the) 180 573.33 T
-0.35 (\322end-of-expression\323 token. It does this by doing two main things: simplifying) 180 560.33 P
(arithmetic expressions, and making function calls.) 180 547.33 T
(The evaluator maintains two stacks, an Operator stack and an Argument) 180 527.33 T
-0.26 (stack. It reads the tokens from beginning to end. Each time it reads a token,) 180 514.33 P
(it takes an action; this may involve pushing something onto a stack, or) 180 501.33 T
(processing some of the tokens on the tops of the stacks.) 180 488.33 T
-0.54 (If an error occurs, the parser may take two different actions. Some errors are) 180 468.33 P
(pushed on the argument stack; these may be handled by functions. For) 180 455.33 T
(example, if the result of an expression is too large to be represented, the) 180 442.33 T
-0.68 (evaluator will just push) 180 429.33 P
1 9 Q
-0.61 (PSEE_FLOA) 289.91 429.33 P
-0.61 (T_POS_INFINITY) 344.09 429.33 P
1 10 Q
-0.68 ( on the argument stack.) 421.77 429.33 P
(Any function or operator which is passed an error code as an argument can) 180 416.33 T
(either handle the error) 180 403.33 T
(, propagate the error) 285.18 403.33 T
(, or return a different error) 380.18 403.33 T
(. For) 504.42 403.33 T
(example, if the division operator is passed) 180 390.33 T
1 9 Q
(PSEE_FLOA) 376.88 390.33 T
(T_POS_INFINITY) 431.06 390.33 T
1 10 Q
( as) 508.74 390.33 T
(the divisor) 180 377.33 T
(, it will simply return zero.) 228.52 377.33 T
(The actual evaluation of tokens is straightforward. The evaluator pops the) 180 357.33 T
-0.42 (top token from the Operator stack. This is either a function or an operator) 180 344.33 P
-0.42 (. If) 516.09 344.33 P
-0.79 (the token is an operator) 180 331.33 P
-0.79 (, the evaluator pops either one or two arguments from) 286.67 331.33 P
-0.04 (the top of the argument stack, takes the appropriate action, and pushes the) 180 318.33 P
(result on the argument stack. If the token is a function, the evaluator calls) 180 305.33 T
(the function directly) 180 292.33 T
(, passing it a pointer to the argument stack and the) 272.77 292.33 T
(number of arguments to the function call. The function is responsible for) 180 279.33 T
(popping off all of the arguments and pushing the return value on the) 180 266.33 T
(argument stack.) 180 253.33 T
-0.67 (Special actions have to be taken if an operand or argument is a cell reference.) 180 233.33 P
-0.64 (If the cell is an argument to a function, or an operand \050and the operator is not) 180 220.33 P
(a range-separator or range-intersection\051, the evaluator will call its callback) 180 207.33 T
(routine to get the value contained by the cell; this value will be put on the) 180 194.33 T
(argument stack in place of the cell reference. If the operand is a) 180 181.33 T
(range-separator or range-intersection, the cells or ranges will be combined) 180 168.33 T
(into a single range, which is pushed on the Argument stack.) 180 155.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "759" 17
%%Page: "760" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(760) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(The evaluator reads tokens, one at a time, from the buffer provided by the) 180 641.33 T
(parser) 180 628.33 T
(. For each token it takes an appropriate action:) 209.07 628.33 T
1 9 Q
(OPEN_P) 180 608.33 T
(AREN) 216.68 608.33 T
1 10 Q
(Push an) 243 596.33 T
1 9 Q
(OPEN_P) 283.75 596.33 T
(AREN) 320.42 596.33 T
1 10 Q
( token on the Operator stack.) 347.25 596.33 T
1 9 Q
(CLOSE_P) 180 577.33 T
(AREN) 221.51 577.33 T
1 10 Q
(Evaluate tokens from the Operator stack until an) 243 565.33 T
1 9 Q
(OPEN_P) 243 553.33 T
(AREN) 279.67 553.33 T
1 10 Q
( reaches the top of the operator stack; then pop) 306.5 553.33 T
(the) 243 541.33 T
1 9 Q
(OPEN_P) 260.78 541.33 T
(AREN) 297.45 541.33 T
1 10 Q
( off the stack.) 324.28 541.33 T
1 9 Q
(OPERA) 180 522.33 T
(TOR) 212 522.33 T
1 10 Q
(If the top token on the Operator stack is an) 243 522.33 T
1 9 Q
(OPERA) 445.62 522.33 T
(TOR) 477.62 522.33 T
1 10 Q
( of) 497.13 522.33 T
(higher precedence than this) 243 510.33 T
1 9 Q
(OPERA) 374.66 510.33 T
(TOR) 406.66 510.33 T
1 10 Q
(, then evaluate top of) 426.17 510.33 T
-0.3 (Operator stack. Repeat until top of operator stack is either not) 243 498.33 P
-0.74 (an operator) 243 486.33 P
-0.74 (, or is an operator of lower precedence. Finally) 295.04 486.33 P
-0.74 (, push) 501.55 486.33 P
(the operator token on the operator stack.) 243 474.33 T
1 9 Q
(FUNCTION) 180 455.33 T
1 10 Q
(Push) 243 455.33 T
1 9 Q
(FUNCTION) 269.3 455.33 T
1 10 Q
( token on the Operator stack. The evaluator) 320.47 455.33 T
1 9 Q
(FUNCTION) 243 443.33 T
1 10 Q
( token contains the function) 294.17 443.33 T
1 9 Q
(ID) 426.03 443.33 T
1 10 Q
( and the number of) 436.7 443.33 T
(arguments to the function \050starting at zero\051.) 243 431.33 T
1 9 Q
(CLOSE_FUNCTION) 180 412.33 T
1 10 Q
-0.43 (Call function on top of Operator stack, passing it the pointer to) 243 400.33 P
(the Argument stack and the number of arguments to the) 243 388.33 T
(function call. \050The arguments will be on the top of the) 243 376.33 T
(argument stack.\051 The function should pop the arguments off) 243 364.33 T
-0.48 (the Argument stack, then push the return value \050or error code\051) 243 352.33 P
(on the Argument stack.) 243 340.33 T
1 9 Q
(ARG_END) 180 321.33 T
1 10 Q
-0.28 (Evaluate the Operator stack until a) 243 321.33 P
1 9 Q
-0.25 (FUNCTION) 409.15 321.33 P
1 10 Q
-0.28 ( token is at the) 460.32 321.33 P
-0.09 (top of the Operator stack; then increment the argument count) 243 309.33 P
(of that function.) 243 297.33 T
1 9 Q
(NUMBER) 180 278.33 T
1 10 Q
-0.09 (Push number on Argument stack. \050Actually) 243 278.33 P
-0.09 (, what is pushed is) 442.55 278.33 P
-0.27 (a reference to the thread\325) 243 266.33 P
-0.27 (s \337oating-point stack, which contains) 357.68 266.33 P
(the number itself.\051) 243 254.33 T
1 9 Q
(STRING) 180 235.33 T
1 10 Q
(Push string on Argument stack.) 243 235.33 T
1 9 Q
(CELL_REF) 180 216.33 T
1 10 Q
(Push the cell reference on the Argument stack.) 243 216.33 T
1 9 Q
(NAME) 180 197.33 T
1 10 Q
-0.29 (Call the callback function to \336nd the value associated with the) 243 197.33 P
(name; act on the value appropriately) 243 185.33 T
(.) 412.1 185.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "760" 18
%%Page: "761" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parser Functions) 443.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(761) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(END_OF_EXPRESSION) 180 641.33 T
1 10 Q
-0.62 (Evaluate the Operator stack until it is empty; the result will be) 243 629.33 P
(on the top of the Argument stack.) 243 617.33 T
0 14 Q
(20.1.4) 123.08 576 T
0 18 Q
(Formatter) 180 576 T
1 10 Q
(In order to display a token sequence, you must call the Formatter) 180 552.33 T
(. The) 482.07 552.33 T
(formatter is very straightforward. It is passed a buffer containing a token) 180 539.33 T
(sequence; it returns a character array containing the result. The formatter) 180 526.33 T
(makes use of the localization routines to format the result according to the) 180 513.33 T
(local language and the user) 180 500.33 T
(\325) 307.79 500.33 T
(s Preferences settings.) 309.46 500.33 T
-0.07 (If the token sequence consists of an error token, the formatter will generate) 180 480.33 P
(an appropriate error string.) 180 467.33 T
0 14 Q
(20.2) 134.76 415 T
0 24 Q
(Parser Functions) 180 415 T
1 10 Q
(The Parse library provides many built-in functions. Furthermore, each) 180 389.33 T
-0.12 (application can de\336ne its own functions. Every function is associated with a) 180 376.33 P
-0.32 (function) 180 363.33 P
1 9 Q
-0.29 (ID) 220.6 363.33 P
1 10 Q
-0.32 ( number) 231.26 363.33 P
-0.32 (. Built-in functions have) 269.09 363.33 P
1 9 Q
-0.29 (ID) 382.62 363.33 P
1 10 Q
-0.32 ( numbers assigned to them in) 393.29 363.33 P
(the library code; application-de\336ned functions are given) 180 350.33 T
1 9 Q
(ID) 440.38 350.33 T
1 10 Q
( numbers by the) 451.05 350.33 T
(application.) 180 337.33 T
1 9 Q
(ID) 237.05 337.33 T
1 10 Q
( numbers are word-sized unsigned integers. All built-in) 247.71 337.33 T
(\050\322internal\323\051 functions have) 180 324.33 T
1 9 Q
(ID) 305 324.33 T
1 10 Q
( numbers which are less than the constant) 315.67 324.33 T
1 9 Q
-0.2 (FUNCTION_ID_FIRST_EXTERNAL_FUNCTION_BASE) 180 311.33 P
1 10 Q
-0.23 (; all application-de\336ned) 420.18 311.33 P
-0.41 (\050\322external\323\051 functions have) 180 298.33 P
1 9 Q
-0.37 (ID) 304.87 298.33 P
1 10 Q
-0.41 ( numbers which are greater than this constant.) 315.54 298.33 P
-0.35 (When the Parser reads an identi\336er token whose position indicates that it is) 180 278.33 P
-0.74 (a function, it converts the identi\336er to a function token \050containing a function) 180 265.33 P
1 9 Q
(ID) 180 252.33 T
1 10 Q
(\051. The parser \336rst checks to see if the identi\336er is the name of a built-in) 190.66 252.33 T
(function. If so, it looks up the function\325) 180 239.33 T
(s) 357.6 239.33 T
1 9 Q
(ID) 365.01 239.33 T
1 10 Q
( number and stores it in the) 375.67 239.33 T
(function token.) 180 226.33 T
(If the identi\336er is not the name of a built-in function, the Parser calls the) 180 206.33 T
-0.87 (application\325) 180 193.33 P
-0.87 (s callback routine to get the function\325) 233.16 193.33 P
-0.87 (s) 398.72 193.33 P
1 9 Q
-0.78 (ID) 405.26 193.33 P
1 10 Q
-0.87 ( number) 415.93 193.33 P
-0.87 (. The application) 453.21 193.33 P
-0.03 (must assign each function a word-sized) 180 180.33 P
1 9 Q
-0.03 (ID) 363.89 180.33 P
1 10 Q
-0.03 ( which is greater than or equal to) 374.56 180.33 P
(the constant) 180 167.33 T
1 9 Q
(FUNCTION_ID_FIRST_EXTERNAL_FUNCTION_BASE) 240.19 167.33 T
1 10 Q
(. This) 480.37 167.33 T
(constant is de\336ned as 0x8000, which leaves) 180 154.33 T
1 9 Q
(ID) 400.74 154.33 T
1 10 Q
( numbers available.) 411.4 154.33 T
0 0 0 1 0 0 0 K
383.01 150.08 397.96 163.35 C
0 0 0 1 0 0 0 K
7 9 Q
0 X
0 0 0 1 0 0 0 K
(2) 384.01 154.33 T
7 7 Q
(1) 388.96 157.1 T
(5) 392.46 157.1 T
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "761" 19
%%Page: "762" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(762) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(When the Evaluator needs to evaluate a function, it checks to see if the) 180 641.33 T
(function is external or internal. If the function is internal, it looks up the) 180 628.33 T
(functions address and calls it. If the function is external, it calls the) 180 615.33 T
(application\325) 180 602.33 T
(s callback routine and passes the function) 233.16 602.33 T
1 9 Q
(ID) 429.48 602.33 T
1 10 Q
(. In either case, it) 440.14 602.33 T
(passes a pointer to the argument stack and the number of arguments. The) 180 589.33 T
(function is responsible for popping all the arguments off the stack and) 180 576.33 T
-0.48 (pushing the result. It can also push an error message on the stack. All of this) 180 563.33 P
(is discussed at length in the advanced section.) 180 550.33 T
0 14 Q
(20.2.1) 123.08 508 T
0 18 Q
(Internal Functions) 180 508 T
1 10 Q
(The Parse library provides many internal functions, and more are) 180 484.33 T
(continually being added. Any application which uses the parse library) 180 471.33 T
(automatically makes use of these functions. Some of these functions take a) 180 458.33 T
(single argument; others take a set number of arguments or a variable) 180 445.33 T
(number) 180 432.33 T
(.) 215.37 432.33 T
(A listing of currently available functions follows, along with a short) 180 412.33 T
(description of each one.) 180 399.33 T
6 F
(ABS) 216 383.33 T
(Absolute value) 288 383.33 T
(ACOS) 216 366.33 T
(Arc-cosine) 288 366.33 T
(ACOSH) 216 349.33 T
(Hyperbolic arc-cosine) 288 349.33 T
(AND) 216 332.33 T
(Boolean AND) 288 332.33 T
(ASIN) 216 315.33 T
(Arc-sine) 288 315.33 T
(ASINH) 216 298.33 T
(Hyperbolic arc-sine) 288 298.33 T
(ATAN) 216 281.33 T
(Arc-tangent) 288 281.33 T
(ATAN2) 216 264.33 T
(Four-quadrant arc-tangent) 288 264.33 T
(ATANH) 216 247.33 T
(Hyperbolic arc-tangent) 288 247.33 T
(AVG) 216 230.33 T
(Average of arguments) 288 230.33 T
(CHAR) 216 213.33 T
(Translates character-set code into) 288 213.33 T
(character) 288 199.33 T
(CHOOSE) 216 182.33 T
(Finds value in list at specified offset) 288 182.33 T
(CLEAN) 216 165.33 T
(Removes control characters from a string) 288 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "762" 20
%%Page: "763" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parser Functions) 443.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(763) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 10 Q
0 X
(CODE) 216 641.33 T
(Translates character into character-set) 288 641.33 T
(code) 288 627.33 T
(COLS) 216 610.33 T
(Returns # of columns in range) 288 610.33 T
(COS) 216 593.33 T
(Cosine) 288 593.33 T
(COSH) 216 576.33 T
(Hyperbolic cosine) 288 576.33 T
(CTERM) 216 559.33 T
(Returns time for an investment to reach) 288 559.33 T
(a specified value) 288 545.33 T
(DDB) 216 528.33 T
(Depreciation over a period) 288 528.33 T
(DEGREES) 216 511.33 T
(Converts radians to degrees) 288 511.33 T
(ERR) 216 494.33 T
(Returns error PSEE_GEN_ERR) 288 494.33 T
(EXACT) 216 477.33 T
(Tests if two strings match) 288 477.33 T
(EXP) 216 460.33 T
(Exponentiation) 288 460.33 T
(FACT) 216 443.33 T
(Factorial) 288 443.33 T
(FALSE) 216 426.33 T
(Returns false \0500.0\051) 288 426.33 T
(FIND) 216 409.33 T
(Returns position in string where) 288 409.33 T
(substring first occurs) 288 395.33 T
(FV) 216 378.33 T
(Future value of investment) 288 378.33 T
(HLOOKUP) 216 361.33 T
(Finds a value in a horizontal lookup) 288 361.33 T
(table) 288 347.33 T
(IF) 216 330.33 T
(IF\050<cond>,x,y\051 = x if <cond> is true,) 288 330.33 T
(else y \050like C\325s \322<cond> ? x : y\323\051) 288 316.33 T
(INDEX) 216 299.33 T
(Finds value at specified offset in a) 288 299.33 T
(range) 288 285.33 T
(INT) 216 268.33 T
(Rounds to next lowest integer) 288 268.33 T
(IRR) 216 251.33 T
(Internal rate of return) 288 251.33 T
(ISERR) 216 234.33 T
(True if argument is error) 288 234.33 T
(ISNUMBER) 216 217.33 T
(True if argument is number) 288 217.33 T
(ISSTRING) 216 200.33 T
(True if argument is string) 288 200.33 T
(LEFT) 216 183.33 T
(Returns first characters in string) 288 183.33 T
(LENGTH) 216 166.33 T
(Returns length of string) 288 166.33 T
(LN) 216 149.33 T
(Natural log) 288 149.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "763" 21
%%Page: "764" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(764) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 10 Q
0 X
(LOG) 216 641.33 T
(Log to base 10) 288 641.33 T
(LOWER) 216 624.33 T
(Converts string to all-lowercase) 288 624.33 T
(MAX) 216 607.33 T
(Returns largest of arguments) 288 607.33 T
(MID) 216 590.33 T
(Returns characters from middle of string) 288 590.33 T
(MIN) 216 573.33 T
(Returns smallest of arguments) 288 573.33 T
(MOD) 216 556.33 T
(Modulo arithmetic) 288 556.33 T
(N) 216 539.33 T
(Returns value of first cell in range) 288 539.33 T
(NA) 216 522.33 T
(Returns error PSEE_NA) 288 522.33 T
(NPV) 216 505.33 T
(Returns net present value of future) 288 505.33 T
(cash flows) 288 491.33 T
(OR) 216 474.33 T
(Boolean OR) 288 474.33 T
(PI) 216 457.33 T
(Returns 3.1415926...) 288 457.33 T
(PMT) 216 440.33 T
(Calculates # of payments to pay off a) 288 440.33 T
(debt) 288 426.33 T
(PRODUCT) 216 409.33 T
(Returns product of arguments) 288 409.33 T
(PROPER) 216 392.33 T
(Converts string to \322proper) 288 392.33 T
(capitalization\323) 288 378.33 T
(PV) 216 361.33 T
(Calculates present value of an) 288 361.33 T
(investment) 288 347.33 T
(RADIANS) 216 330.33 T
(Converts radians to degrees) 288 330.33 T
(RANDOM) 216 313.33 T
(Generates random number between 0 and 1) 288 313.33 T
(RANDOMN) 216 296.33 T
(Generates random integer below a) 288 296.33 T
(specified ceiling) 288 282.33 T
(RATE) 216 265.33 T
(Calculates interest rate needed for) 288 265.33 T
(investment to reach specified value) 288 251.33 T
(REPEAT) 216 234.33 T
(Returns string made of repeated) 288 234.33 T
(argument string) 288 220.33 T
(REPLACE) 216 203.33 T
(Replaces characters in a string) 288 203.33 T
(RIGHT) 216 186.33 T
(Returns last characters in a string) 288 186.33 T
(ROUND) 216 169.33 T
(Rounds number to specified precision) 288 169.33 T
(ROWS) 216 152.33 T
(Returns number of rows in range) 288 152.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "764" 22
%%Page: "765" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parser Functions) 443.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(765) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
6 10 Q
0 X
(SIN) 216 641.33 T
(Sine) 288 641.33 T
(SINH) 216 624.33 T
(Hyperbolic-sine) 288 624.33 T
(SLN) 216 607.33 T
(Calculates straight-line depreciation) 288 607.33 T
(SQRT) 216 590.33 T
(Square-root) 288 590.33 T
(STD) 216 573.33 T
(Calculates standard deviation) 288 573.33 T
(STDP) 216 556.33 T
(Standard deviation of entire population) 288 556.33 T
(STRING) 216 539.33 T
(Converts number into string) 288 539.33 T
(SUM) 216 522.33 T
(Returns sum of arguments) 288 522.33 T
(SYD) 216 505.33 T
(Sum-of-years\325-digits depreciation) 288 505.33 T
(TAN) 216 488.33 T
(Tangent \050sine/cosine\051) 288 488.33 T
(TANH) 216 471.33 T
(Hyperbolic tangent \050sinh/cosh\051) 288 471.33 T
(TERM) 216 454.33 T
(Returns number of payments needed to) 288 454.33 T
(reach future value) 288 440.33 T
(TRIM) 216 423.33 T
(Removes leading, trailing, and) 288 423.33 T
(consecutive spaces from a string) 288 409.33 T
(TRUE) 216 392.33 T
(Returns TRUE \0501.0\051) 288 392.33 T
(TRUNC) 216 375.33 T
(Removes fractional part; rounds towards) 288 375.33 T
(zero) 288 361.33 T
(UPPER) 216 344.33 T
(Converts all letters in string to) 288 344.33 T
(uppercase) 288 330.33 T
(VALUE) 216 313.33 T
(Converts string to number) 288 313.33 T
0 14 Q
(20.2.2) 123.08 270 T
0 18 Q
(External Functions) 180 270 T
1 10 Q
(Applications which use the Parse library may write their own functions.) 180 246.33 T
(Whenever the formatter encounters a function name which it does not) 180 233.33 T
(recognize, it calls the application to get an) 180 220.33 T
1 9 Q
(ID) 377.62 220.33 T
1 10 Q
( for the function. When the) 388.29 220.33 T
-0.77 (evaluator needs to evaluate that function, it calls the application, passing the) 180 207.33 P
-0.61 (arguments and the function) 180 194.33 P
1 9 Q
-0.55 (ID) 309.24 194.33 P
1 10 Q
-0.61 (. The application should return a single value.) 319.9 194.33 P
(If it cannot produce a value, it should return an error code. The error codes) 180 181.33 T
(are described in section 20.3.2 on page 767.) 180 168.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "765" 23
%%Page: "766" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(766) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.3) 134.76 632 T
0 24 Q
(Coding with the Parse Library) 180 632 T
1 10 Q
(This section describes how to use the Parser directly) 180 606.33 T
(, instead of using) 420.94 606.33 T
-0.89 (intermediaries \050like the Spreadsheet library\051. Most applications will not need) 180 593.33 P
(to use these routines.) 180 580.33 T
0 14 Q
(20.3.1) 123.08 538 T
0 18 Q
(Parsing a String) 180 538 T
6 10 Q
(ParserParseString\050\051) 180 514.33 T
1 F
-0.57 (T) 180 494.33 P
-0.57 (o parse a string, all you do is call) 185.75 494.33 P
4 F
-0.59 (ParserParseString\050\051) 335.1 494.33 P
1 F
-0.57 (. This routine takes) 440.11 494.33 P
-0.34 (three arguments: A pointer to a null-terminated string, a pointer to a buffer) 180 481.33 P
-0.34 (,) 525.78 481.33 P
(and a pointer to a) 180 468.33 T
4 F
(ParserReturnStruct) 264.65 468.33 T
1 F
(. This structure contains a pointer) 369.3 468.33 T
(to a callback routine.) 180 455.33 T
4 F
(ParserParseString\050\051) 279.84 455.33 T
1 F
( parses the string into a) 384.85 455.33 T
-0.24 (sequence of tokens and writes the tokens to the buffer) 180 442.33 P
-0.24 (. Whenever the parser) 426.4 442.33 P
(encounters an identi\336er) 180 429.33 T
(, it calls the callback routine and requests an) 289.81 429.33 T
1 9 Q
(ID) 500.41 429.33 T
1 10 Q
(number for the identi\336er) 180 416.33 T
(. Similarly) 294.07 416.33 T
(, when the parser encounters a function) 341.68 416.33 T
(whose name it does not recognize, it calls the callback routine to get a) 180 403.33 T
(function) 180 390.33 T
1 9 Q
(ID) 220.92 390.33 T
1 10 Q
( number) 231.59 390.33 T
(. The) 269.73 390.33 T
1 9 Q
(ID) 295.86 390.33 T
1 10 Q
( numbers are stored in the token sequence.) 306.52 390.33 T
(The Parser can return the following errors:) 180 370.33 T
1 9 Q
(PSEE_BAD_NUMBER) 180 350.33 T
1 10 Q
(The string contained a badly-formatted number) 243 338.33 T
(.) 462.65 338.33 T
1 9 Q
(PSEE_BAD_CELL_REFERENCE) 180 319.33 T
1 10 Q
(The string contained a badly-formatted cell reference.) 243 307.33 T
1 9 Q
(PSEE_NO_CLOSE_QUOTE) 180 288.33 T
1 10 Q
(The string contained an opening quote with no matching) 243 276.33 T
(closing quote.) 243 264.33 T
1 9 Q
(PSEE_COLUMN_TOO_LARGE) 180 245.33 T
1 10 Q
(The string contained a cell whose column index was out of) 243 233.33 T
(bounds \050greater than 255\051.) 243 221.33 T
1 9 Q
(PSEE_ROW_TOO_LARGE) 180 202.33 T
1 10 Q
-0.23 (The string contained a cell whose row index was out of bounds.) 243 190.33 P
1 9 Q
(PSEE_ILLEGAL_TOKEN) 180 171.33 T
1 10 Q
(The string contained a character sequence which was not a) 243 159.33 T
(legal token.) 243 147.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "766" 24
%%Page: "767" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Coding with the Parse Library) 359.62 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(767) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(PSEE_TOO_MANY_TOKENS) 180 641.33 T
1 10 Q
(The expression was too complex.) 243 629.33 T
1 9 Q
(PSEE_EXPECTED_OPEN_P) 180 610.33 T
(AREN) 301.68 610.33 T
1 10 Q
(A function call lacked an open-parenthesis.) 243 598.33 T
1 9 Q
(PSEE_EXPECTED_CLOSE_P) 180 579.33 T
(AREN) 306.51 579.33 T
1 10 Q
(A function call lacked a close-parenthesis.) 243 567.33 T
1 9 Q
(PSEE_BAD_EXPRESSION) 180 548.33 T
1 10 Q
(The string contained a badly-formed expression.) 243 536.33 T
1 9 Q
(PSEE_EXPECTED_END_OF_EXPRESSION) 180 517.33 T
1 10 Q
(An expression ended improperly) 243 505.33 T
(.) 391.14 505.33 T
1 9 Q
(PSEE_MISSING_CLOSE_P) 180 486.33 T
(AREN) 296.68 486.33 T
1 10 Q
(Parentheses were mismatched.) 243 474.33 T
1 9 Q
(PSEE_UNKNOWN_IDENTIFIER) 180 455.33 T
1 10 Q
(An identi\336er or external function name was encountered, and) 243 443.33 T
(the callback routine would not provide an) 243 431.33 T
1 9 Q
(ID) 437.84 431.33 T
1 10 Q
( for it.) 448.51 431.33 T
1 9 Q
(PSEE_GENERAL) 180 412.33 T
1 10 Q
(General parser error) 243 400.33 T
(.) 337.99 400.33 T
0 14 Q
(20.3.2) 123.08 359 T
0 18 Q
(Evaluating a T) 180 359 T
(oken Sequence) 300.71 359 T
6 10 Q
(ParserEvalExpression\050\051) 180 335.33 T
1 F
(T) 180 315.33 T
(o format an expression, call) 185.75 315.33 T
4 F
(ParserEvalExpression\050\051) 315.58 315.33 T
1 F
(. This routine is) 439.47 315.33 T
-0.33 (passed a token sequence; it evaluates it and writes the result, another token) 180 302.33 P
(sequence, to a passed buffer) 180 289.33 T
(. It calls a supplied callback routine to perform) 308.53 289.33 T
(the following tasks:) 180 276.33 T
2 F
(u) 180 256.33 T
1 F
(Return the value of a speci\336ed cell) 198 256.33 T
2 F
(u) 180 237.33 T
1 F
(Return the value associated with a given identi\336er) 198 237.33 T
(, speci\336ed by) 431.36 237.33 T
1 9 Q
(ID) 493.22 237.33 T
1 10 Q
(number) 198 225.33 T
2 F
(u) 180 206.33 T
1 F
-0.16 (Evaluate an external function, given the arguments and the function) 198 206.33 P
1 9 Q
-0.14 (ID) 517.72 206.33 P
1 10 Q
(number) 198 194.33 T
(The evaluator produces a sequence two tokens long, including the) 180 175.33 T
(\322end-of-expression\323 token. The \336rst token might be an error token. T) 180 162.33 T
(wo) 495.61 162.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "767" 25
%%Page: "768" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(768) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.18 (errors are so serious that if they occur) 180 641.33 P
-0.18 (, the evaluation is immediately halted) 353.71 641.33 P
(and the error is returned:) 180 628.33 T
1 9 Q
(PSEE_OUT_OF_ST) 180 608.33 T
(ACK_SP) 262.69 608.33 T
(ACE) 298.2 608.33 T
1 10 Q
(The evaluator ran out of stack space. Evaluation was halted) 243 596.33 T
(when this occurred.) 243 584.33 T
1 9 Q
(PSEE_NESTING_TOO_DEEP) 180 565.33 T
1 10 Q
(The nesting grew too deep for the evaluator) 243 553.33 T
(. Evaluation was) 443.57 553.33 T
(halted when this occurred.) 243 541.33 T
-0.12 (The following errors may be propagated; that is, if an expression returns an) 180 522.33 P
(error) 180 509.33 T
(, that error would be passed, as a value, to outer expressions. For) 202.58 509.33 T
(example, if the evaluator were evaluating) 180 496.33 T
(\322) 180 483.33 T
1 9 Q
(SUM) 183.89 483.33 T
1 10 Q
(\0501,) 205.39 483.33 T
(\050) 219.84 483.33 T
1 9 Q
(PROD) 223.17 483.33 T
1 10 Q
(\0501,) 249.68 483.33 T
(2,) 264.13 483.33 T
("F) 275.25 483.33 T
(.) 284.7 483.33 T
(T) 290.26 483.33 T
(.) 296.01 483.33 T
(Poomm"\051\051\323,) 301.57 483.33 T
1 9 Q
(PROD) 356.02 483.33 T
1 10 Q
( would return) 382.52 483.33 T
1 9 Q
(PSEE_WRONG_TYPE) 180 470.33 T
1 10 Q
(, since it expects numeric arguments.) 275.17 470.33 T
1 9 Q
(SUM) 449.99 470.33 T
1 10 Q
(, in turn,) 471.5 470.33 T
(would be passed two arguments: the number 1 and the error) 180 457.33 T
1 9 Q
(PSEE_WRONG_TYPE) 180 444.33 T
1 10 Q
(. That function might, in turn, propagate the error) 275.17 444.33 T
(upward, return a different error) 180 431.33 T
(, or return a non-error value. \050) 327.39 431.33 T
1 9 Q
(SUM) 467.01 431.33 T
1 10 Q
(, as it) 488.51 431.33 T
(happens, would propagate the error; that is, it would return) 180 418.33 T
1 9 Q
(PSEE_WRONG_TYPE) 180 405.33 T
1 10 Q
(.\051) 275.17 405.33 T
1 9 Q
(PSEE_ROW_OUT_OF_RANGE) 182.78 385.33 T
1 10 Q
(A cell\325) 243 373.33 T
(s row index was out of range.) 270.41 373.33 T
1 9 Q
(PSEE_COLUMN_OUT_OF_RANGE) 180 354.33 T
1 10 Q
(A cell\325) 243 342.33 T
(s column index was out of range.) 270.41 342.33 T
1 9 Q
(PSEE_FUNCTION_NO_LONGER_EXISTS) 180 323.33 T
1 10 Q
(The callback routine did not recognize the function) 243 311.33 T
1 9 Q
(ID) 480.6 311.33 T
1 10 Q
( for an) 491.27 311.33 T
(external function.) 243 299.33 T
1 9 Q
(PSEE_BAD_ARG_COUNT) 180 280.33 T
1 10 Q
(A function was passed the wrong number of arguments.) 243 268.33 T
1 9 Q
(PSEE_WRONG_TYPE) 180 249.33 T
1 10 Q
(A function was passed an argument of the wrong type.) 243 237.33 T
1 9 Q
(PSEE_DIVIDE_BY_ZERO) 180 218.33 T
1 10 Q
(A division by zero was attempted.) 243 206.33 T
1 9 Q
(PSEE_UNDEFINED_NAME) 180 187.33 T
1 10 Q
(The callback would not provide a value for an identi\336er) 243 175.33 T
1 9 Q
(ID) 501.37 175.33 T
1 10 Q
(.) 512.03 175.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "768" 26
%%Page: "769" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Coding with the Parse Library) 359.62 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(769) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
504 90 558 125 R
7 X
V
2 60 Q
0 X
(l) 507.27 85 T
0 24 Q
(Concepts book) 327.65 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(PSEE_CIRCULAR_REF) 180 641.33 T
1 10 Q
(A circular reference occurred. This error will only occur if it is) 243 629.33 T
(returned by the callback routine.) 243 617.33 T
1 9 Q
(PSEE_CIRCULAR_DEP) 180 598.33 T
1 10 Q
(The value is dependant on a cell whose value is) 243 586.33 T
1 9 Q
(PSEE_CIRCULAR_REF) 243 574.33 T
(.) 344.16 574.33 T
(PSEE_CIRC_NAME_REF) 180 555.33 T
1 10 Q
(The expression uses a name which is de\336ned circularly) 243 543.33 T
(.) 495.79 543.33 T
1 9 Q
(PSEE_NUMBER_OUT_OF_RANGE) 180 524.33 T
1 10 Q
(The result was a number which could not be expressed as a) 243 512.33 T
(\337oat.) 243 500.33 T
1 9 Q
(PSEE_GEN_ERR) 180 481.33 T
1 10 Q
(General error; this is returned when no other error code is) 243 469.33 T
(appropriate.) 243 457.33 T
1 9 Q
(PSEE_NA) 180 438.33 T
1 10 Q
(The value for a cell was not available.) 243 438.33 T
1 9 Q
(PSEE_FLOA) 180 419.33 T
(T_POS_INFINITY) 234.18 419.33 T
1 10 Q
(A \337oat routine returned the error) 243 407.33 T
1 9 Q
(FLOA) 400.21 407.33 T
(T_POS_INFINITY) 425.22 407.33 T
1 10 Q
(.) 501.79 407.33 T
1 9 Q
(PSEE_FLOA) 180 388.33 T
(T_NEG_INFINITY) 234.18 388.33 T
1 10 Q
(A \337oat routine returned the error) 243 376.33 T
1 9 Q
(FLOA) 400.21 376.33 T
(T_NEG_INFINITY) 425.22 376.33 T
1 10 Q
(.) 503.95 376.33 T
1 9 Q
(PSEE_FLOA) 180 357.33 T
(T_GEN_ERR) 234.18 357.33 T
1 10 Q
(A \337oat routine returned the error) 243 345.33 T
1 9 Q
(FLOA) 400.21 345.33 T
(T_GEN_ERR) 425.22 345.33 T
1 10 Q
(.) 480.55 345.33 T
1 9 Q
(PSEE_TOO_MANY_DEPENDENCIES) 180 326.33 T
1 10 Q
(The formula contained too many levels of dependency) 243 314.33 T
(. This is) 489.31 314.33 T
(generally returned by the callback routine; the Parse library) 243 302.33 T
(routines do not return this error) 243 290.33 T
(, they merely propagate it.) 391.32 290.33 T
(The application may also de\336ne its own error codes, beginning with the) 180 271.33 T
-0.04 (constant) 180 258.33 P
1 9 Q
-0.04 (PSEE_FIRST_APPLICA) 222.37 258.33 P
-0.04 (TION_ERROR) 324.55 258.33 P
1 10 Q
-0.04 (. All internal functions, and all) 386.04 258.33 P
(operators, always propagate application-de\336ned errors.) 180 245.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "769" 27
%%Page: "770" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Parse Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(770) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
2 60 Q
0 X
(l) 57.27 85 T
0 24 Q
(Concepts book) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.3.3) 123.08 636 T
0 18 Q
(Formatting a T) 180 636 T
(oken Sequence) 303.68 636 T
6 10 Q
(ParserFormatExpression\050\051) 180 612.33 T
1 F
(The routine) 180 592.33 T
4 F
(ParserFormatExpression\050\051) 237.04 592.33 T
1 F
( is passed a token buffer; it) 376.12 592.33 T
(returns a character string. The formatter uses the localization routines to) 180 579.33 T
-0.58 (format numbers. The formatter also formats error codes as appropriate error) 180 566.33 P
(messages. These error messages are stored in a localizable resource, so the) 180 553.33 T
(formatter library will produce error messages in the appropriate language.) 180 540.33 T
-0.15 (If the formatter encounters a token) 180 520.33 P
1 9 Q
-0.13 (ID) 344.86 520.33 P
1 10 Q
-0.15 ( or an external function) 355.52 520.33 P
1 9 Q
-0.13 (ID) 466.45 520.33 P
1 10 Q
-0.15 (, it will call) 477.12 520.33 P
(the callback routine to \336nd out what character sequence is associated with) 180 507.33 T
(that) 180 494.33 T
1 9 Q
(ID) 202.23 494.33 T
1 10 Q
( number) 212.9 494.33 T
(. If it encounters an application-de\336ned error code, it will) 251.04 494.33 T
(request an appropriate error string. Applications should store these error) 180 481.33 T
-0.41 (strings in localizable resources; this will simplify translating the application) 180 468.33 P
(into another language.) 180 455.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "770" 28
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 28
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Bold
%%+ Symbol
%%+ Courier
%%+ Times-Roman
%%EOF
