%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 15 FMDOCUMENT
0 0 /NewCenturySchlbk-Roman FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Courier-Oblique FMFONTDEFINE
6 0 /NewCenturySchlbk-Bold FMFONTDEFINE
7 0 /NewCenturySchlbk-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "39" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(39) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
73 620.99 531 626 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 620.99 531 626 R
7 X
0 0 0 1 0 0 0 K
V
42 624.99 601.01 624.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 612.99 T
2 F
(appobj) 91 612.99 T
3 10 Q
(appobj) 91 599.33 T
4 F
(<) 145 599.33 T
5 F
(name) 151 599.33 T
4 F
(>) 175 599.33 T
0 F
-0.18 (The) 172 581.33 P
6 F
-0.19 (appobj) 192.38 581.33 P
0 F
-0.18 ( \336eld indicates the name of the application object. All geodes with) 227.94 581.33 P
7 F
(appl) 172 569.83 T
0 F
( set under) 192.55 569.83 T
6 F
(type) 241.81 569.83 T
0 F
( \050see above\051 must have an) 264.59 569.83 T
6 F
(appobj) 386.28 569.83 T
0 F
( entry) 421.84 569.83 T
(. The) 448.32 569.83 T
7 F
(name) 474.44 569.83 T
0 F
-0.56 (argument should be the name of the object of) 172 558.33 P
6 F
-0.58 (GenApplicationClass) 377.69 558.33 P
0 F
-0.56 ( speci\336ed) 486.76 558.33 P
(in the application\325) 172 546.83 T
(s) 254.98 546.83 T
6 F
(.goc) 262.39 546.83 T
0 F
( \336le.) 282.95 546.83 T
73 531.98 531 536.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 531.98 531 536.99 R
7 X
0 0 0 1 0 0 0 K
V
42 535.98 601.01 535.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 523.98 T
2 F
(class) 91 523.98 T
3 10 Q
(class) 91 510.32 T
4 F
(<) 145 510.32 T
5 F
(name) 151 510.32 T
4 F
(>) 175 510.32 T
0 F
-0.35 (The) 172 492.32 P
6 F
-0.37 (class) 192.21 492.32 P
0 F
-0.35 ( field specifies the name of the object class to be bound to the geode\325s) 217.4 492.32 P
(process thread. This field has significance only if) 172 480.82 T
6 F
(process) 399.42 480.82 T
0 F
( is specified in the) 438.69 480.82 T
(geode\325s) 172 469.32 T
6 F
(type) 207.56 469.32 T
0 F
( field \050see below\051. This should be the same as the) 230.34 469.32 T
6 F
(ProcessClass) 457.98 469.32 T
0 F
(object designated in the) 172 457.82 T
6 F
(.goc) 284.42 457.82 T
0 F
( file \050see the Hello World sample for an example) 304.98 457.82 T
-0.56 (of this connection\051. Note that this class binding will only be for the geode\325s first) 172 446.32 P
(\050primary\051 thread.) 172 434.82 T
73 419.98 531 424.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 419.98 531 424.98 R
7 X
0 0 0 1 0 0 0 K
V
42 423.98 601.01 423.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 411.98 T
2 F
(driver) 91 411.98 T
3 10 Q
(driver) 91 398.31 T
4 F
(<) 145 398.31 T
5 F
(name) 151 398.31 T
4 F
(> [noload]) 175 398.31 T
0 F
(This \336eld speci\336es another driver that is used by this geode. The) 172 380.31 T
7 F
(noload) 472.96 380.31 T
0 F
( \337ag) 504.25 380.31 T
-0.69 (indicates that the used driver does not need to be loaded when the geode is \336rst) 172 368.81 P
-0.03 (launched. Most applications and libraries will not use exported routines from) 172 357.31 P
-0.08 (drivers, so few geodes will use this \336eld. \050Notable exceptions are those geodes) 172 345.81 P
(that access serial and parallel ports\321those geodes will include the serial or) 172 334.31 T
(parallel driver) 172 322.81 T
(.\051) 237.93 322.81 T
73 307.97 531 312.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 307.97 531 312.98 R
7 X
0 0 0 1 0 0 0 K
V
42 311.97 601.01 311.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 299.97 T
2 F
(entry) 91 299.97 T
3 10 Q
(entry) 91 286.3 T
4 F
(<) 145 286.3 T
5 F
(name) 151 286.3 T
4 F
(>) 175 286.3 T
0 F
(This \336eld is used by library geodes. The) 172 268.3 T
7 F
(name) 357.96 268.3 T
0 F
( argument is the name of the) 383.14 268.3 T
-0.77 (library routine to be called by the kernel when the library is loaded or unloaded) 172 256.8 P
(and when a program using the library is loaded or unloaded.) 172 245.3 T
73 230.46 531 235.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 230.46 531 235.47 R
7 X
0 0 0 1 0 0 0 K
V
42 234.46 601.01 234.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 222.46 T
2 F
(exempt) 91 222.46 T
4 10 Q
(exempt) 91 207.79 T
(<library-name>) 145 207.79 T
0 F
(If you wish to exempt a certain library from Glue\325) 172 189.79 T
(s platform checking, call it) 400.54 189.79 T
(out with the exempt keyword. Glue will not complain if you then use parts of) 172 178.29 T
(the library not normally available with platforms named in your) 172 166.79 T
6 F
(platform) 472.24 166.79 T
0 F
(statement.) 172 155.29 T
73 144 531 648 C
231.5 633 372.5 638 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
231.5 633 372.5 638 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
73 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 1
%%Page: "40" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(40) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(export) 99 634.99 T
3 10 Q
(export) 99 621.33 T
4 F
(<) 153 621.33 T
5 F
(name) 159 621.33 T
4 F
(> [as <) 183 621.33 T
5 F
(name2) 225 621.33 T
4 F
(>]) 255 621.33 T
0 F
(This \336eld identi\336es routines usable by geodes other than the one being) 180 603.33 T
-0.2 (compiled; these routines are \322exported\323 for use by other programs. Both forms) 180 591.83 P
-0.06 (create entry point symbols for the routines. The \336rst) 180 580.33 P
7 F
-0.06 (name) 424.48 580.33 P
0 F
-0.06 ( argument must be) 449.66 580.33 P
(the actual name of the routine. If the second, optional,) 180 568.83 T
7 F
(name2) 433.36 568.83 T
0 F
( argument is) 464.1 568.83 T
(included, then other programs will call that routine using the second name) 180 557.33 T
-0.19 (rather than the original. This allows a routine to have a different global name) 180 545.83 P
(than that used by its creator geode.) 180 534.33 T
-0.24 (This \336eld is also used to export classes de\336ned in a) 180 515.83 P
6 F
-0.25 (.goc) 414.96 515.83 P
0 F
-0.24 ( or) 435.52 515.83 P
6 F
-0.25 (.goh) 450.03 515.83 P
0 F
-0.24 ( \336le. See Hello) 471.88 515.83 P
(W) 180 504.33 T
(orld for an example of this usage.) 189.26 504.33 T
81 489.48 540 494.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 489.48 540 494.49 R
7 X
0 0 0 1 0 0 0 K
V
50 493.48 609.01 493.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 481.48 T
2 F
(incminor) 99 481.48 T
4 10 Q
(incminor [<name>]) 99 467.82 T
0 F
(The) 180 449.82 T
6 F
(incminor) 200.56 449.82 T
0 F
( directive is used at the end of a library\325) 248.15 449.82 T
(s) 431.14 449.82 T
6 F
(.gp) 438.55 449.82 T
0 F
( \336le before new) 454.11 449.82 T
-0.49 (routines are added \050after a release of the library has already been made\051. After) 180 438.32 P
-0.66 (this release, new) 180 426.82 P
6 F
-0.68 (export) 258.6 426.82 P
0 F
-0.66 ( and) 292.67 426.82 P
6 F
-0.68 (publish) 314.33 426.82 P
0 F
-0.66 ( directives will be put after this incminor) 353.4 426.82 P
(directive. The) 180 415.32 T
6 F
(incminor) 246.3 415.32 T
0 F
( directive causes two things: First, the geode\325) 293.89 415.32 T
(s minor) 500.95 415.32 T
(protocol number gets incremented by one. Second, any geode that uses your) 180 403.82 T
-0.61 (library will depend only on the higher minor protocol number if it actually uses) 180 392.32 P
(one or more of the entry points exported after the) 180 380.82 T
6 F
(incminor) 410.74 380.82 T
0 F
( directive.) 458.33 380.82 T
(Any number of incminor directives may be used in a given) 180 362.32 T
6 F
(.gp) 451.5 362.32 T
0 F
( \336le. The major) 467.06 362.32 T
(and the base minor numbers still come from a) 180 350.82 T
6 F
(.rev) 395.03 350.82 T
0 F
( \336le, if one exists.) 414.85 350.82 T
(The) 180 332.32 T
7 F
(name) 200.56 332.32 T
0 F
( argument is optional; it may be used in conjunction with the) 225.74 332.32 T
-0.69 (protominor compiler directive. Glue will know that the structures marked with) 180 320.82 P
-0.42 (the protominor label should be associated with the revision represented by the) 180 309.32 P
(incminor directive.) 180 297.82 T
81 282.98 540 287.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 282.98 540 287.98 R
7 X
0 0 0 1 0 0 0 K
V
50 286.98 609.01 286.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 274.97 T
2 F
(library) 99 274.97 T
3 10 Q
(library) 99 261.31 T
4 F
(<) 153 261.31 T
5 F
(name) 159 261.31 T
4 F
(> [noload]) 183 261.31 T
0 F
(This \336eld speci\336es another library that is used by this geode. The) 180 243.31 T
7 F
(noload) 484.49 243.31 T
0 F
( \337ag) 515.78 243.31 T
(indicates that the used library does not need to be loaded when the geode is) 180 231.81 T
(\336rst launched \050though symbolic information will be loaded in any case\051. Note) 180 220.31 T
(that every geode must have the line) 180 208.81 T
4 9 Q
(library geos) 216 193.97 T
0 10 Q
(included in the) 180 176.31 T
6 F
(.gp) 252.04 176.31 T
0 F
( \336le. Most will also have the following line:) 267.6 176.31 T
4 9 Q
(library ui) 216 161.48 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 2
%%Page: "41" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(41) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 10 Q
0 X
(Any number of used libraries may be speci\336ed.) 172 641.33 T
73 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
42 630.49 601.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 618.49 T
2 F
(load) 91 618.49 T
3 10 Q
(load) 91 604.83 T
4 F
(<) 145 604.83 T
5 F
(name) 151 604.83 T
4 F
(> [\322<) 175 604.83 T
5 F
(class) 205 604.83 T
4 F
(>\323] as [<) 235 604.83 T
5 F
(name2) 289 604.83 T
4 F
(>] [<) 319 604.83 T
5 F
(align) 349 604.83 T
4 F
(>] [<) 379 604.83 T
5 F
(combine) 409 604.83 T
4 F
(>]\134) 451 604.83 T
( [\322<) 181 593.83 T
5 F
(class2) 205 593.83 T
4 F
(>\323]) 241 593.83 T
0 F
-0.07 (The) 172 575.83 P
6 F
-0.08 (load) 192.49 575.83 P
0 F
-0.07 ( \336eld is used when you want to alter the way a segment is linked for) 214.9 575.83 P
(your geode. This is especially useful, for example, when integrating another) 172 564.33 T
(company\325) 172 552.83 T
(s runtime routines into your application or library; their segments) 214.78 552.83 T
(may correspond to speci\336cations other than yours.) 172 541.33 T
(Every segment read in has a given name, class, alignment, and combination) 172 522.83 T
(type. These are described below \050the) 172 511.33 T
6 F
(load) 342.39 511.33 T
0 F
( parameters appear after\051:) 364.8 511.33 T
6 F
(name) 172 492.83 T
0 F
-0.82 (This is the actual name of the segment being loaded in. Segments) 235 492.83 P
(with the same name are treated as one continuous segment.) 235 481.83 T
6 F
(class) 172 463.83 T
0 F
-0.09 (Segments with the same class name are always loaded together) 235 463.83 P
-0.28 (into memory regardless of their order in the geode\325) 235 452.83 P
-0.28 (s source code.) 466.29 452.83 P
(Class names in the load directive must always be enclosed in) 235 441.83 T
(quotation marks.) 235 430.83 T
6 F
(align) 172 412.83 T
0 F
(This speci\336es the alignment type of the segment\321on what type) 235 412.83 T
-0.77 (of address the segment can start. Possible alignment settings are) 235 401.83 P
(byte, word, double word, paragraph, and page.) 235 390.83 T
6 F
(combine) 172 372.83 T
0 F
(Segments with the same name may appear in different code) 235 372.83 T
(modules. The) 235 361.83 T
7 F
(combine) 299.64 361.83 T
0 F
( parameter speci\336es how these segments) 337.41 361.83 T
-0.55 (are to be combined when loaded. The combine type may be one of) 235 350.83 P
(the following \050see your assembly reference manual for more) 235 339.83 T
(information\051:) 235 328.83 T
0 9 Q
(COMMON) 298.52 328.83 T
0 10 Q
(,) 343.35 328.83 T
0 9 Q
(PRIV) 348.91 328.83 T
(A) 370.57 328.83 T
(TE) 376.58 328.83 T
0 10 Q
(,) 389.08 328.83 T
0 9 Q
(PUBLIC) 394.64 328.83 T
0 10 Q
(,) 430.64 328.83 T
0 9 Q
(ST) 436.2 328.83 T
(ACK) 447.37 328.83 T
0 10 Q
(, or) 467.37 328.83 T
0 9 Q
(RESOURCE) 235 317.83 T
0 10 Q
(.) 287.5 317.83 T
-0.21 (The parameters for load are listed below) 172 299.83 P
-0.21 (. Only the \336rst is necessary) 356.72 299.83 P
-0.21 (, to inform) 480.69 299.83 P
-0.44 (Glue which segment is to undergo the alterations. For an example of using the) 172 288.33 P
(load statement, see below) 172 276.83 T
(.) 289.63 276.83 T
6 F
(name) 172 258.33 T
0 F
(This represents the actual original name of the segment. It is a) 235 258.33 T
(necessary parameter so Glue knows which segment\325) 235 247.33 T
(s linkage is) 474.65 247.33 T
(to be altered.) 235 236.33 T
6 F
(class) 172 218.33 T
0 F
(This is the original class name of the segment. It must be) 235 218.33 T
-0.72 (enclosed in quotation marks if given. If you do not need to change) 235 207.33 P
(the class, this parameter is unnecessary) 235 196.33 T
(.) 419.46 196.33 T
6 F
(name2) 172 178.33 T
0 F
(This is the new name of the segment, if any) 235 178.33 T
(.) 435.22 178.33 T
6 F
(align) 172 160.33 T
0 F
(This speci\336es the new align type of the segment, if any) 235 160.33 T
(.) 486.7 160.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 3
%%Page: "42" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(42) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
6 10 Q
0 X
(combine) 180 641.33 T
0 F
(This speci\336es the new combine type of the segment, if any) 243 641.33 T
(.) 509.51 641.33 T
6 F
(class2) 180 623.33 T
0 F
(This speci\336es a new class name for the segment, if any is) 243 623.33 T
(required. If you do not need to change the class, this parameter) 243 612.33 T
(is unnecessary) 243 601.33 T
(. The new class must be in quotation marks.) 309.85 601.33 T
(Examples:) 180 583.33 T
4 9 Q
(load _NAME_ \322CODE\323 as CODE word public) 216 568.5 T
(load _NAME_ \322CODE\323 as DATASEG para common \322DATA\323) 216 554.5 T
81 540.49 540 545.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 540.49 540 545.5 R
7 X
0 0 0 1 0 0 0 K
V
50 544.49 609.01 544.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 532.49 T
2 F
(longname) 99 532.49 T
3 10 Q
(longname) 99 518.83 T
(\322) 153 518.83 T
4 F
(<) 159 518.83 T
5 F
(string) 165 518.83 T
4 F
(>) 201 518.83 T
3 F
(\323) 207 518.83 T
0 F
-0.28 (The) 180 500.83 P
6 F
-0.29 (longname) 200.28 500.83 P
0 F
-0.28 ( \336eld designates a 32-character name for the geode. This name) 251.2 500.83 P
(will be displayed with the geode\325) 180 489.33 T
(s icon by GeoManager; all geodes should be) 329.48 489.33 T
(given a long name.) 180 477.83 T
81 462.98 540 467.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 462.98 540 467.99 R
7 X
0 0 0 1 0 0 0 K
V
50 466.98 609.01 466.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 454.98 T
2 F
(name) 99 454.98 T
3 10 Q
(name) 99 441.32 T
4 F
(<) 153 441.32 T
5 F
(pname) 159 441.32 T
4 F
(>) 189 441.32 T
3 F
(.) 195 441.32 T
4 F
(<) 201 441.32 T
5 F
(ext) 207 441.32 T
4 F
(>) 225 441.32 T
0 F
-0.77 (The) 180 423.32 P
6 F
-0.8 (name) 199.79 423.32 P
0 F
-0.77 ( \336eld in the parameters \336le gives the geode a permanent name which) 228.12 423.32 P
-0.32 (will be used by both the Glue linker and the Swat debugger) 180 411.82 P
-0.32 (. Every geode must) 450.37 411.82 P
-0.61 (have a permanent name. Note that the) 180 400.32 P
7 F
-0.61 (pname) 358.35 400.32 P
0 F
-0.61 ( argument must be no more than) 389.27 400.32 P
(eight characters, and the) 180 388.82 T
7 F
(ext) 298.34 388.82 T
0 F
( argument must be no more than four) 311.3 388.82 T
(.) 484.46 388.82 T
(Additionally) 180 377.32 T
(, the) 236.12 377.32 T
7 F
(ext) 259.46 377.32 T
0 F
( argument may not be \322appl,\323 as that is reserved.) 272.42 377.32 T
-0.17 (When Glue is linking an error) 180 358.82 P
-0.17 (-checking geode, it drops the fourth character of) 317.68 358.82 P
7 F
(ext) 180 347.32 T
0 F
( and adds \322ec\323 to the end of) 192.96 347.32 T
7 F
(pname) 320.57 347.32 T
0 F
(.) 351.49 347.32 T
81 332.48 540 337.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 332.48 540 337.48 R
7 X
0 0 0 1 0 0 0 K
V
50 336.48 609.01 336.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 324.48 T
2 F
(nosort) 99 324.48 T
3 10 Q
(nosort) 99 309.81 T
0 F
-0.79 (This keyword should appear before the list of resources. Normally glue will sort) 180 291.81 P
(the geode\325) 180 280.31 T
(s resources to optimize their arrangement. This keyword turns off) 225.56 280.31 T
-0.75 (that sorting. If you will generate .) 180 268.81 P
0 9 Q
-0.68 (GYM) 331.24 268.81 P
0 10 Q
-0.75 ( \050generic symbol\051 \336les for your geode, you) 353.07 268.81 P
(should use the nosort option, as it will be important that all versions of your) 180 257.31 T
(geode order their resources in the same way) 180 245.81 T
(. If you won\325) 382.41 245.81 T
(t generate .) 438.16 245.81 T
0 9 Q
(GYM) 490.76 245.81 T
0 10 Q
( \336les,) 512.59 245.81 T
(you probably don\325) 180 234.31 T
(t want to use this option.) 261.13 234.31 T
81 219.47 540 224.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 219.47 540 224.47 R
7 X
0 0 0 1 0 0 0 K
V
50 223.47 609.01 223.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 211.47 T
2 F
(platform) 99 211.47 T
4 10 Q
(platform <) 99 196.8 T
5 F
(name) 159 196.8 T
4 F
(>) 183 196.8 T
0 F
(The platform directive speci\336es that the Geode is compatible with the named) 180 178.8 T
(system. This gives a sign of how backwards-compatible the application is. If) 180 167.3 T
(multiple platforms are speci\336ed, Glue will make sure that the major protocol) 180 155.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 4
%%Page: "43" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(43) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 10 Q
0 X
(numbers for each of the libraries it \336nds within the platforms match. Having) 172 641.33 T
(done that, it will use the smallest minor protocol number it can \336nd for each) 172 629.83 T
(library to ensure compatibility across all platforms.) 172 618.33 T
-0.03 (If a reference is ever made to an entry point in a library that would cause the) 172 599.83 P
(executable to depend upon a later version of the library than speci\336ed in the) 172 588.33 T
(platform \336le, glue will complain. For example, if the speci\336ed platoform used) 172 576.83 T
(GrObj version 534.1 and glue found a reference to an entry point that didn\325) 172 565.33 T
(t) 518.34 565.33 T
(exist until GrObj 534.3 \050ie., an entry point exported following 3 \325incminor) 172 553.83 T
(\325) 509.64 553.83 T
(s in) 511.31 553.83 T
(grobj.gp\051, glue will spit out an error message like:) 172 542.33 T
4 9 Q
(error: file \322somegeode.gp\323, line 59: Usage of) 208 527.5 T
(NewGrObjRoutine requires grobj minor protocol 3, but) 208 517.5 T
(platform files only allow minor protocol 1) 208 507.5 T
0 10 Q
-0.71 (If the new routine happens to be a \322published\323 routine, glue will copy it into the) 172 489.83 P
(geode in an effort to avoid the error) 172 478.33 T
(.) 334.78 478.33 T
73 463.49 531 468.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 463.49 531 468.5 R
7 X
0 0 0 1 0 0 0 K
V
42 467.49 601.01 467.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 455.49 T
2 F
(publish) 91 455.49 T
4 10 Q
(publish <name>) 91 440.83 T
0 F
(Normally) 172 422.83 T
(, If a geode is required to run \050via platform speci\336cations\051 with a) 214.6 422.83 T
-0.4 (version of a library that doesn\325) 172 411.33 P
-0.4 (t contain one of the entry points required by the) 310.94 411.33 P
(geode, glue will notify the user of the inconsistency) 172 399.83 T
(, and the link will fail.) 406.27 399.83 T
(However) 172 388.33 T
(, if that entry point happens to be a published routine, glue will) 212.18 388.33 T
(actually copy the routine into the geode and switch the call over to the newly) 172 376.83 T
-0.48 (copied routine to remove the dependency on the library routine. Glue does this) 172 365.33 P
-0.54 (by copying any routines marked \322publish\323 in a library\325) 172 353.83 P
-0.54 (s .gp \336le into the .ldf \336le,) 417.35 353.83 P
-0.82 (then copying them out into whatever other geodes needs when those geodes are) 172 342.33 P
-0.43 (linked. Routines are marked \322publish\323 by replacing the word \322export\323 with the) 172 330.83 P
(word \322publish\323 in the .gp \336le, like so:) 172 319.33 T
4 9 Q
(publish PublishedRoutinei) 208 304.49 T
0 10 Q
-0.37 (The published routines appear in .ldf \336les in individual segments named after) 172 286.83 P
(the routine \050e.g. _) 172 275.33 T
0 9 Q
(PUBLISHED) 253.3 275.33 T
0 10 Q
(_PublishedRoutine\051, each containing a routine,) 309.47 275.33 T
(also named after the published routine \050e.g.,) 172 263.83 T
(_) 172 252.33 T
0 9 Q
(PUBLISHED) 177 252.33 T
0 10 Q
(__) 233.17 252.33 T
0 9 Q
(PUBLISHED) 243.17 252.33 T
0 10 Q
(_PublishedRoutine\051 Y) 299.34 252.33 T
(ou\325ll know one of these) 398.98 252.33 T
-0.21 (routines has been linked into your geode by examining the resource summary) 172 240.83 P
(output by glue:) 172 229.33 T
4 9 Q
(Resource) 208 214.49 T
(Size # Relocs) 388 214.49 T
(-------------------------------------------------) 208 204.49 T
(CoreBlock) 208 194.49 T
(0) 388 194.49 T
(0) 424 194.49 T
(dgroup) 208 184.49 T
(240) 388 184.49 T
(8) 424 184.49 T
(_PUBLISHED_GROBJCALCCORNERS) 208 174.49 T
(53) 388 174.49 T
(1) 424 174.49 T
(_PUBLISHED_GROBJBODYPROCESSALLGR) 208 164.49 T
(94) 388 164.49 T
(2) 424 164.49 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 5
%%Page: "44" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(44) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
4 9 Q
0 X
(TEST2_E) 216 642 T
(478) 396 642 T
(27) 432 642 T
(INTERFACE) 216 632 T
(652) 396 632 T
(1) 432 632 T
(CHANGETEXTDIALOG) 216 622 T
(232) 396 622 T
(1) 432 622 T
(APPRESOURCE) 216 612 T
(416) 396 612 T
(1) 432 612 T
81 597.99 540 603 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 597.99 540 603 R
7 X
0 0 0 1 0 0 0 K
V
50 601.99 609.01 601.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 589.99 T
2 F
(resource) 99 589.99 T
3 10 Q
(resource) 99 576.33 T
4 F
( <) 147 576.33 T
5 F
(name) 159 576.33 T
4 F
(> \050read-only|preload|discardable|fixed|conforming|shared|\134) 183 576.33 T
( code|data|lmem|discard-only|swap-only|ui-object|object|\134) 189 565.33 T
( no-swap|no-discard\051+) 189 554.33 T
0 F
-0.08 (The) 180 536.33 P
6 F
-0.08 (resource) 200.49 536.33 P
0 F
-0.08 ( \336eld indicates to Glue that the geode uses the named resource.) 245.87 536.33 P
(Not all resources used by a geode must be declared here, however) 180 524.83 T
(. \050Resources) 481.69 524.83 T
(are described in more detail in "GEOS Programming," Chapter) 180 513.33 T
(5.\051 Resources) 473.55 513.33 T
(must be designated with the proper attributes, all of which are listed below:) 180 501.83 T
(\050none\051) 180 483.33 T
-0.6 (If no attribute is speci\336ed, the resource named becomes a private) 243 483.33 P
(data resource for the geode.) 243 472.33 T
6 F
(read-only) 180 454.33 T
0 F
(The resource block may not be modi\336ed by the program.) 243 454.33 T
6 F
(preload) 180 436.33 T
0 F
(The resource block should be loaded when the geode is \336rst) 243 436.33 T
(launched.) 243 425.33 T
6 F
(discardable) 180 407.33 T
0 F
(The resource block may be discarded from memory if necessary) 243 407.33 T
(.) 533.56 407.33 T
6 F
(\336xed) 180 389.33 T
0 F
(The resource block should reside in \336xed memory) 243 389.33 T
(.) 470.04 389.33 T
6 F
(conforming) 180 371.33 T
0 F
-0.7 (The resource block, if containing code, may be called from a lower) 243 371.33 P
(privilege level. If containing data, it may be accessed from a) 243 360.33 T
-0.22 (lower privilege level. \050This applies only in protected mode and is) 243 349.33 P
(not currently implemented.\051) 243 338.33 T
6 F
(shared) 180 320.33 T
0 F
(The resource block may be used by other geodes. \050Note: It is an) 243 320.33 T
(error to specify) 243 309.33 T
7 F
(code) 315.21 309.33 T
0 F
( and) 335.2 309.33 T
7 F
(shared) 358.17 309.33 T
0 F
( without) 389.45 309.33 T
7 F
(read-only) 430.94 309.33 T
0 F
(.\051) 473.33 309.33 T
6 F
(code) 180 291.33 T
0 F
(The resource block contains executable code.) 243 291.33 T
6 F
(data) 180 273.33 T
0 F
(The resource block contains data only) 243 273.33 T
(. If a data resource is) 415.98 273.33 T
(designated) 243 262.33 T
7 F
(read-only) 295.97 262.33 T
0 F
( and not \336xed, it is assumed to be) 339.47 262.33 T
(discardable.) 243 251.33 T
6 F
(lmem) 180 233.33 T
0 F
-0.29 (The resource block consists of a local memory heap. This implies) 243 233.33 P
-0.69 (the attribute) 243 222.33 P
7 F
-0.69 (data) 303.67 222.33 P
0 F
-0.69 ( \050above\051, though not the condition pertaining to) 324.78 222.33 P
(being discardable.) 243 211.33 T
6 F
(discard-only) 180 193.33 T
0 F
-0.38 (The resource block should not be swapped but may be discarded.) 243 182.33 P
(This is useful for initialization code.) 243 171.33 T
6 F
(swap-only) 180 153.33 T
0 F
-0.14 (The resource block should not be discarded but may be swapped.) 243 153.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 6
%%Page: "45" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(45) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
6 10 Q
0 X
(ui-object) 172 641.33 T
0 F
(The resource block contains objects to be run by the) 235 641.33 T
0 9 Q
(UI) 476.13 641.33 T
0 10 Q
(. This) 487.13 641.33 T
(implies) 235 630.33 T
7 F
(lmem) 271.49 630.33 T
0 F
(,) 297.04 630.33 T
7 F
(shared) 302.6 630.33 T
0 F
(, and) 333.88 630.33 T
7 F
(no-discard) 359.63 630.33 T
0 F
(. All blocks for a geode) 408.68 630.33 T
-0.86 (designated) 235 619.33 P
7 F
-0.86 (ui-object) 287.11 619.33 P
0 F
-0.86 ( will be run in a) 325.99 619.33 P
0 9 Q
-0.77 (UI) 396.77 619.33 P
0 10 Q
-0.86 ( thread created speci\336cally) 407.77 619.33 P
(for the geode\325) 235 608.33 T
(s) 296.11 608.33 T
0 9 Q
(UI) 303.52 608.33 T
0 10 Q
( objects.) 314.52 608.33 T
6 F
(object) 172 590.33 T
0 F
(The resource block contains objects that are to be run by the) 235 590.33 T
(application\325) 235 579.33 T
(s process thread rather than by the) 288.16 579.33 T
0 9 Q
(UI) 453.91 579.33 T
0 10 Q
(. This implies) 464.91 579.33 T
7 F
(lmem) 235 568.33 T
0 F
( and) 260.55 568.33 T
7 F
(no-discard) 283.52 568.33 T
0 F
(.) 332.57 568.33 T
6 F
(no-swap) 172 550.33 T
0 F
(The resource block will not be swapable.) 235 550.33 T
6 F
(no-discard) 172 532.33 T
0 F
(The resource block will not be discardable.) 235 532.33 T
-0.12 (Because most resources are code resources, standard code does not have to be) 172 514.33 P
-0.13 (declared in the parameters \336le. Code resources default to) 172 502.83 P
7 F
-0.13 (code) 437.7 502.83 P
0 F
-0.13 (,) 457.69 502.83 P
7 F
-0.13 (read-only) 463.12 502.83 P
0 F
-0.13 (, and) 505.51 502.83 P
7 F
(shared) 172 491.33 T
0 F
(. However) 203.28 491.33 T
(, if the resource is named in the) 249.02 491.33 T
6 F
(.gp) 397.92 491.33 T
0 F
( \336le, the default is) 413.48 491.33 T
(overridden in favor of the settings presented. This fact is useful primarily) 172 479.83 T
(when programming in assembly\321in) 172 468.33 T
0 9 Q
(C) 342.39 468.33 T
0 10 Q
(, code resources are not declared) 348.89 468.33 T
(explicitly) 172 456.83 T
(.) 213.3 456.83 T
(The Hello W) 172 438.33 T
(orld sample application uses only standard code resources) 229.23 438.33 T
-0.53 (\050undeclared\051 and) 172 426.83 P
0 9 Q
-0.48 (UI) 251.85 426.83 P
0 10 Q
-0.53 ( resources \050designated) 262.85 426.83 P
7 F
-0.53 (ui-object) 366.8 426.83 P
0 F
-0.53 (\051. Some other examples are) 405.68 426.83 P
(listed below:) 172 415.33 T
1 F
(u) 172 396.83 T
0 F
(Shared data) 190 396.83 T
4 9 Q
(resource <) 208 382.5 T
5 F
(name) 262 382.5 T
4 F
(> data shared) 283.6 382.5 T
1 10 Q
(u) 172 364.83 T
0 F
(Initialization code) 190 364.83 T
4 9 Q
(resource <) 208 350.5 T
5 F
(nm) 262 350.5 T
4 F
(> code shared read-only preload no-swap) 272.8 350.5 T
1 10 Q
(u) 172 332.83 T
0 F
(Common code used by several geodes \050this is the default\051) 190 332.83 T
4 9 Q
(resource <) 208 318.5 T
5 F
(name) 262 318.5 T
4 F
(> code shared read-only) 283.6 318.5 T
1 10 Q
(u) 172 300.83 T
0 F
(Self-modifying code \050strongly discouraged\051) 190 300.83 T
4 9 Q
(resource <) 208 286.5 T
5 F
(name) 262 286.5 T
4 F
(> code) 283.6 286.5 T
73 272.49 531 277.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 272.49 531 277.5 R
7 X
0 0 0 1 0 0 0 K
V
42 276.49 601.01 276.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 264.49 T
2 F
(stack) 91 264.49 T
3 10 Q
(stack) 91 250.83 T
4 F
(<) 145 250.83 T
5 F
(number) 151 250.83 T
4 F
(>) 187 250.83 T
0 F
(The) 172 232.83 T
6 F
(stack) 192.56 232.83 T
0 F
( \336eld designates the size of the application\325) 220.16 232.83 T
(s stack in bytes. The) 417.78 232.83 T
(default stack size is 2000 bytes. This \336eld is not necessary for geodes unless) 172 221.33 T
(they require a different size stack \050the Hello W) 172 209.83 T
(orld sample uses a slightly) 388.12 209.83 T
(smaller stack size for example only\051. The) 172 198.33 T
6 F
(stack) 363.32 198.33 T
0 F
( \336eld is valid only for geodes) 390.92 198.33 T
(with a process aspect.) 172 186.83 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 7
%%Page: "46" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(46) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(tokenchars) 99 634.99 T
3 10 Q
(tokenchars) 99 621.33 T
4 F
( \322<) 159 621.33 T
5 F
(string) 177 621.33 T
4 F
(>\323) 213 621.33 T
0 F
-0 (This is one of two \336elds that identi\336es a unique token in GeoManager) 180 603.33 P
-0 (\325) 502.22 603.33 P
-0 (s token) 503.89 603.33 P
(database \336le \050see) 180 591.83 T
6 F
(tokenid) 262.06 591.83 T
0 F
(, below\051. The) 302.06 591.83 T
6 F
(tokenchars) 363.56 591.83 T
0 F
( \336eld must be a string of) 421.9 591.83 T
(four characters that identi\336es the geode\325) 180 580.33 T
(s token. Note that these characters) 366.3 580.33 T
(also appear in the geode \336le\325) 180 568.83 T
(s extended attributes.) 310.58 568.83 T
81 553.98 540 558.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 553.98 540 558.99 R
7 X
0 0 0 1 0 0 0 K
V
50 557.98 609.01 557.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 545.98 T
2 F
(tokenid) 99 545.98 T
3 10 Q
(tokenid) 99 532.32 T
4 F
(<) 153 532.32 T
5 F
(number) 159 532.32 T
4 F
(>) 195 532.32 T
0 F
(This is the other of two \336elds that identi\336es a unique token in GeoManager) 180 514.32 T
(\325) 528.38 514.32 T
(s) 530.05 514.32 T
(token database \336le \050see) 180 502.82 T
6 F
(tokenchars) 290.77 502.82 T
0 F
(, above\051. It must be a number) 349.11 502.82 T
(corresponding to the programmer) 180 491.32 T
(\325) 335.72 491.32 T
(s manufacturer) 337.39 491.32 T
0 9 Q
(ID) 411.46 491.32 T
0 10 Q
( number) 422.12 491.32 T
(. Note that this) 460.27 491.32 T
(number also appears in the geode \336le\325) 180 479.82 T
(s extended attributes.) 354.1 479.82 T
81 464.98 540 469.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 464.98 540 469.98 R
7 X
0 0 0 1 0 0 0 K
V
50 468.98 609.01 468.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 456.98 T
2 F
(type) 99 456.98 T
3 10 Q
(type) 99 443.31 T
4 F
(\050process|driver|appl|library\051+ [single] [system] [uses-coproc]\134) 153 443.31 T
([needs-coproc] [has-gcm] [c-api]) 189 432.31 T
0 F
(The) 180 414.31 T
6 F
(type) 200.56 414.31 T
0 F
( \336eld in the parameters \336le designates certain characteristics of the) 223.34 414.31 T
(geode being compiled. These attributes correspond to the) 180 402.81 T
6 F
(GeodeAttrs) 445.39 402.81 T
0 F
( type) 504.28 402.81 T
-0.25 (and determine how the Glue linker will put the geode together) 180 391.31 P
-0.25 (. The attributes) 465.72 391.31 P
(are as follows:) 180 379.81 T
6 F
(process) 180 361.31 T
0 F
(This attribute indicates the geode has its own thread.) 243 361.31 T
(Applications should always have process speci\336ed in the type) 243 350.31 T
(\336eld.) 243 339.31 T
6 F
(driver) 180 321.31 T
0 F
(This attribute indicates the geode has a driver aspect.) 243 321.31 T
6 F
(appl) 180 303.31 T
0 F
(This attribute indicates the geode has an application aspect.) 243 303.31 T
6 F
(library) 180 285.31 T
0 F
(This attribute indicates the geode has a library aspect.) 243 285.31 T
6 F
(single) 180 267.31 T
0 F
(This geode may only have one copy running at a time. Some) 243 267.31 T
(applications may allow multiple copies to be running at once;) 243 256.31 T
(they should not specify single as a type attribute.) 243 245.31 T
6 F
(system) 180 227.31 T
0 F
-0.38 (This attribute is set for drivers that must be exited specially and) 243 227.31 P
(must always be exited. For example, a swap driver has special) 243 216.31 T
-0.81 (exit conditions that must always be met and is therefore a system) 243 205.31 P
(driver) 243 194.31 T
(.) 270.4 194.31 T
6 F
(uses-coproc) 180 176.31 T
0 F
(This attribute is set if the geode will make use of a math) 243 165.31 T
(coprocessor if one is available. Note that if the geode with this) 243 154.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 8
%%Page: "47" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(47) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 10 Q
0 X
-0.51 (attribute set is a library) 235 641.33 P
-0.51 (, all applications that use the library will) 342.99 641.33 P
(inherit the property) 235 630.33 T
(. This attribute is used to indicate that the) 325.92 630.33 T
(coprocessor) 235 619.33 T
(\325) 288.31 619.33 T
(s state must be saved during a context switch.) 289.98 619.33 T
6 F
(needs-coproc) 172 601.33 T
0 F
(This attribute indicates that the geode must have a math) 235 590.33 T
(coprocessor to run. \050This implies) 235 579.33 T
7 F
(uses-coproc) 387.59 579.33 T
0 F
(, above\051.) 439.41 579.33 T
6 F
(has-gcm) 172 561.33 T
0 F
-0.14 (This attribute indicates that the application being compiled has) 235 561.33 P
-0.31 (a) 235 550.33 P
0 9 Q
-0.28 (GCM) 243.03 550.33 P
0 10 Q
-0.31 ( \050appliance\051 version. This information is used by W) 265.03 550.33 P
-0.31 (elcome) 497.05 550.33 P
(to locate all) 235 539.33 T
0 9 Q
(GCM) 291.13 539.33 T
0 10 Q
( applications.) 313.13 539.33 T
6 F
(c-api) 172 521.33 T
0 F
-0.3 (This attribute indicates the library entry points are written in) 235 521.33 P
0 9 Q
-0.27 (C) 522.02 521.33 P
0 10 Q
(so the kernel must call them with) 235 510.33 T
0 9 Q
(C) 393.36 510.33 T
0 10 Q
( calling conventions.) 399.86 510.33 T
73 495.99 531 501 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 495.99 531 501 R
7 X
0 0 0 1 0 0 0 K
V
42 499.99 601.01 499.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 487.99 T
2 F
(usernotes) 91 487.99 T
3 10 Q
(usernotes) 91 474.33 T
4 F
( \322<) 145 474.33 T
5 F
(string) 163 474.33 T
4 F
(>\323) 199 474.33 T
0 F
-0.67 (This \336eld speci\336es text to be put in the) 172 456.33 P
6 F
-0.69 (.geo) 347.87 456.33 P
0 F
-0.67 ( \336le\325) 368.61 456.33 P
-0.67 (s usernotes \336eld. The text must) 386.65 456.33 P
(be within quotation marks and can be up to 100 characters long. It must) 172 444.83 T
(contain no line breaks. This can be useful for containing copyright notices in) 172 433.33 T
(the executable \336les. The user can read the text in the usernotes by using) 172 421.83 T
(GeoManager) 172 410.33 T
(\325) 231.81 410.33 T
(s File/Get Info command.) 233.48 410.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 9
%%Page: "48" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(48) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 10
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 10
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ Helvetica-Bold
%%+ Courier-Bold
%%+ Courier
%%+ Courier-Oblique
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%EOF
