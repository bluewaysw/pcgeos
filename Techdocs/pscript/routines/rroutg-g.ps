%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 13 FMDOCUMENT
0 0 /NewCenturySchlbk-Roman FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /NewCenturySchlbk-Italic FMFONTDEFINE
6 0 /NewCenturySchlbk-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "153" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(153) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 620.99 531 626 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.99 531 626 R
7 X
0 0 0 1 0 0 0 K
V
50 624.99 609.01 624.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.99 T
2 F
(GCNListAdd\050\051) 99 612.99 T
3 10 Q
(Boolean) 99 598.33 T
4 F
(GCNListAdd\050) 153 598.33 T
4 9 Q
(optr) 153 587.99 T
(OD,) 261 587.99 T
(/* optr to add to list */) 333 587.99 T
(ManufacturerID) 153 577.99 T
(manufID,) 261 577.99 T
(/* manufacturer ID of list */) 333 577.99 T
(word) 153 567.99 T
(listType\051;) 261 567.99 T
(/* list type */) 333 567.99 T
0 10 Q
(This routine adds an object pointer \050optr\051 to a) 180 550.33 T
0 9 Q
(GCN) 392.98 550.33 T
0 10 Q
( list interested in a) 413.82 550.33 T
-0.75 (particular change. The routine must be passed the optr to add, along with the) 180 538.83 P
5 F
(manufID) 180 527.33 T
0 F
( and the type of the list to add it to. If no list of the speci\336ed) 222.03 527.33 T
(manufacturer and type currently exists, a new list will be created.) 180 515.83 T
-0.77 (This routine will return) 180 497.33 P
5 F
-0.77 (true) 289.53 497.33 P
0 F
-0.77 ( if the optr was successfully added to the) 308.04 497.33 P
0 9 Q
-0.69 (GCN) 491.32 497.33 P
0 10 Q
-0.77 ( list) 512.16 497.33 P
-0.6 (and) 180 485.83 P
5 F
-0.6 (false) 199.59 485.83 P
0 F
-0.6 ( if the optr could not be added. An optr cannot be added to a) 220.87 485.83 P
0 9 Q
-0.54 (GCN) 490.98 485.83 P
0 10 Q
-0.6 ( list) 511.82 485.83 P
(if it currently exists on that list.) 180 474.33 T
2 F
(Include:) 99 455.83 T
0 F
(gcnlist.goh) 180 455.83 T
81 439.48 531 444.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.48 531 444.49 R
7 X
0 0 0 1 0 0 0 K
V
50 443.48 609.01 443.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.48 T
2 F
(GCNListAddHandles\050\051) 99 431.48 T
3 10 Q
(Boolean) 99 417.82 T
4 F
(GCNListAddHandles\050) 153 417.82 T
4 9 Q
(MemHandle) 153 407.48 T
(mh,) 261 407.48 T
(/* handle of object to add */) 333 407.48 T
(ChunkHandle) 153 397.48 T
(ch,) 261 397.48 T
(/* chunk of object to add */) 333 397.48 T
(ManufacturerIDs) 153 387.48 T
(manufID,) 261 387.48 T
(/* manufacturer ID of list */) 333 387.48 T
(word) 153 377.48 T
(listType\051;) 261 377.48 T
(/* list type */) 333 377.48 T
0 10 Q
(This routine is exactly the same as) 180 359.82 T
6 F
(GCNListAdd\050\051) 343.55 359.82 T
0 F
(, except it takes the) 416.88 359.82 T
(memory and chunk handles of the object rather than a complete optr) 180 348.32 T
(.) 496.87 348.32 T
2 F
(Include:) 99 329.82 T
0 F
(gcnlist.goh) 180 329.82 T
81 313.48 531 318.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 313.48 531 318.48 R
7 X
0 0 0 1 0 0 0 K
V
50 317.48 609.01 317.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 305.48 T
2 F
(GCNListAddT) 99 305.48 T
(oBlock\050\051) 176.77 305.48 T
3 10 Q
(Boolean) 99 291.81 T
4 F
(GCNListAddToBlock\050) 153 291.81 T
4 9 Q
(optr) 153 281.48 T
(OD,) 261 281.48 T
(/* optr of list to add */) 333 281.48 T
(ManufacturerID) 153 271.48 T
(manufID,) 261 271.48 T
(/* manufacturer ID of list */) 333 271.48 T
(word) 153 261.48 T
(listType,) 261 261.48 T
(/* list type */) 333 261.48 T
(MemHandle) 153 251.48 T
(mh,) 261 251.48 T
(/* handle of block holding list */) 333 251.48 T
(ChunkHandle) 153 241.48 T
(listOfLists\051;) 261 241.48 T
(/* chunk of list of lists) 333 241.48 T
( * in block */) 333 231.48 T
0 10 Q
-0.22 (This routine adds a new) 180 213.81 P
0 9 Q
-0.2 (GCN) 293.18 213.81 P
0 10 Q
-0.22 ( list to a block containing the) 314.01 213.81 P
0 9 Q
-0.2 (GCN) 449.17 213.81 P
0 10 Q
-0.22 ( lists. Pass it) 470 213.81 P
(the optr of the chunk containing the new) 180 202.31 T
0 9 Q
(GCN) 371.12 202.31 T
0 10 Q
( list as well as the list\325) 391.95 202.31 T
(s type) 494.4 202.31 T
-0.39 (and manufacturer) 180 190.81 P
0 9 Q
-0.35 (ID) 266.07 190.81 P
0 10 Q
-0.39 (. Pass also the memory handle and chunk handle of the) 276.73 190.81 P
(chunk containing the) 180 179.31 T
0 9 Q
(GCN) 280.93 179.31 T
0 10 Q
( \322list of lists\323 which will manage the new list.) 301.77 179.31 T
(This routine returns true of the new optr is added to the) 180 160.81 T
0 9 Q
(GCN) 442.42 160.81 T
0 10 Q
( mechanism,) 463.26 160.81 T
(false if it could not be added \050if it was already there\051.) 180 149.31 T
81 144 531 648 C
235.5 633 376.5 638 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.5 633 376.5 638 R
7 X
0 0 0 1 0 0 0 K
V
81 144 531 648 C
36 72 576 720 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "153" 1
%%Page: "154" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(154) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(W) 99 641.33 T
(arnings:) 108.07 641.33 T
0 F
(This routine may resize chunks in the block, so you should dereference any) 180 641.33 T
(pointers after calling this routine.) 180 628.33 T
2 F
(Include:) 99 608.33 T
0 F
(gcnlist.goh) 180 608.33 T
81 591.99 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 591.99 531 597 R
7 X
0 0 0 1 0 0 0 K
V
50 595.99 609.01 595.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 583.99 T
2 F
(GCNListCreateBlock\050\051) 99 583.99 T
3 10 Q
(ChunkHandle) 99 570.33 T
4 F
( GCNListCreateBlock\050) 165 570.33 T
4 9 Q
(MemHandle mh\051;) 153 559.99 T
(/* handle of the locked LMem block */) 279 559.99 T
0 10 Q
-0.42 (This routine creates a list of lists for the) 180 542.33 P
0 9 Q
-0.38 (GCN) 364.39 542.33 P
0 10 Q
-0.42 ( mechanism. It is rarely) 385.22 542.33 P
-0.42 (, if ever) 492.81 542.33 P
-0.42 (,) 525.86 542.33 P
-0.25 (called by applications. Pass it the handle of the locked LMem block in which) 180 530.83 P
(the list should be created.) 180 519.33 T
2 F
(Include:) 99 500.83 T
0 F
(gcnlist.goh) 180 500.83 T
81 484.48 531 489.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 484.48 531 489.49 R
7 X
0 0 0 1 0 0 0 K
V
50 488.48 609.01 488.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 476.48 T
2 F
(GCNListDestroyBlock\050\051) 99 476.48 T
3 10 Q
(void) 99 462.82 T
4 F
(GCNListDestroyBlock\050) 153 462.82 T
4 9 Q
(MemHandle) 153 452.48 T
(mh,) 261 452.48 T
(/* handle of locked block to) 351 452.48 T
( * be destroyed */) 333 442.48 T
(ChunkHandle) 153 432.48 T
(listOfLists\051;) 261 432.48 T
(/* chunk of list of lists */) 351 432.48 T
0 10 Q
-0.38 (This routine destroys a) 180 414.82 P
0 9 Q
-0.34 (GCN) 288.11 414.82 P
0 10 Q
-0.38 ( list of lists and all the) 308.94 414.82 P
0 9 Q
-0.34 (GCN) 412.6 414.82 P
0 10 Q
-0.38 ( lists associated with) 433.43 414.82 P
-0.5 (it. Pass it the handle of the locked LMem block containing the lists as well as) 180 403.32 P
(the chunk handle of the chunk containing the list of lists.) 180 391.82 T
2 F
(Include:) 99 373.32 T
0 F
(gcnlist.goh) 180 373.32 T
81 356.98 531 361.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 356.98 531 361.98 R
7 X
0 0 0 1 0 0 0 K
V
50 360.98 609.01 360.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 348.98 T
2 F
(GCNListDestroyList\050\051) 99 348.98 T
3 10 Q
(void) 99 335.31 T
4 F
(GCNListDestroyList\050) 153 335.31 T
4 9 Q
(optr) 153 324.98 T
(list\051;) 189 324.98 T
(/* optr of the GCN list to be destroyed */) 279 324.98 T
0 10 Q
(This routine destroys the speci\336ed) 180 307.31 T
0 9 Q
(GCN) 341.67 307.31 T
0 10 Q
( list.) 362.51 307.31 T
2 F
(Include:) 99 288.81 T
0 F
(gcnlist.goh) 180 288.81 T
81 272.47 531 277.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 272.47 531 277.47 R
7 X
0 0 0 1 0 0 0 K
V
50 276.47 609.01 276.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 264.47 T
2 F
(GCNListRelocateBlock\050\051) 99 264.47 T
3 10 Q
(void) 99 250.8 T
4 F
(GCNListRelocateBlock\050) 153 250.8 T
4 9 Q
(MemHandle) 153 240.47 T
(mh,) 261 240.47 T
(/* handle of locked LMem block) 351 240.47 T
( * containing GCN lists */) 333 230.47 T
(ChunkHandle) 153 220.47 T
(listOfLists,) 261 220.47 T
(/* chunk of list of lists */) 351 220.47 T
(MemHandle) 153 210.47 T
(relocBlock\051;) 261 210.47 T
(/* handle of block containing) 351 210.47 T
( * relocation information */) 333 200.47 T
0 10 Q
-0.44 (This routine relocates the) 180 182.8 P
0 9 Q
-0.4 (GCN) 299.72 182.8 P
0 10 Q
-0.44 ( list of lists in the speci\336ed block, updating all) 320.56 182.8 P
(the optrs stored therein.) 180 171.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "154" 2
%%Page: "155" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(155) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(W) 99 641.33 T
(arnings:) 108.07 641.33 T
0 F
(This routine can resize and/or move the LMem block, so you should) 180 641.33 T
(dereference pointers after calling it.) 180 628.33 T
2 F
(Include:) 99 608.33 T
0 F
(gcnlist.goh) 180 608.33 T
81 591.99 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 591.99 531 597 R
7 X
0 0 0 1 0 0 0 K
V
50 595.99 609.01 595.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 583.99 T
2 F
(GCNListRemove\050\051) 99 583.99 T
3 10 Q
(Boolean) 99 569.33 T
4 F
(GCNListRemove\050) 153 569.33 T
4 9 Q
(optr) 153 558.99 T
(OD,) 261 558.99 T
(/* the optr to be removed */) 333 558.99 T
(ManufacturerID) 153 548.99 T
(manufID,) 261 548.99 T
(/* manufacturer ID of the list */) 333 548.99 T
(word) 153 538.99 T
(listType\051;) 261 538.99 T
(/* list type */) 333 538.99 T
0 10 Q
-0.73 (This routine removes the passed optr from the speci\336ed) 180 521.33 P
0 9 Q
-0.66 (GCN) 432.88 521.33 P
0 10 Q
-0.73 ( list. The routine) 453.72 521.33 P
(must be passed the optr to remove along with the manufacturer) 180 509.83 T
0 9 Q
(ID) 477.62 509.83 T
0 10 Q
( and list) 488.29 509.83 T
(type of the list to remove it from.) 180 498.33 T
(This routine will return) 180 479.83 T
5 F
(true) 292.6 479.83 T
0 F
( if the optr was successfully removed from the) 311.11 479.83 T
0 9 Q
-0.47 (GCN) 180 468.33 P
0 10 Q
-0.52 ( list and) 200.84 468.33 P
5 F
-0.52 (false) 239.85 468.33 P
0 F
-0.52 ( if the optr could not be found on the) 261.13 468.33 P
0 9 Q
-0.47 (GCN) 426.68 468.33 P
0 10 Q
-0.52 ( list and therefore) 447.52 468.33 P
(could not be removed.) 180 456.83 T
2 F
(Include:) 99 438.33 T
0 F
(gcnlist.goh) 180 438.33 T
81 421.98 531 426.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 421.98 531 426.99 R
7 X
0 0 0 1 0 0 0 K
V
50 425.98 609.01 425.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 413.98 T
2 F
(GCNListRemoveFromBlock\050\051) 99 413.98 T
3 10 Q
(Boolean) 99 400.32 T
4 F
(GCNListRemoveFromBlock\050) 153 400.32 T
4 9 Q
(optr) 153 389.98 T
(OD,) 261 389.98 T
(/* optr of GCN list to remove */) 333 389.98 T
(ManufacturerID) 153 379.98 T
(manufID,) 261 379.98 T
(/* manufacturer of list to remove */) 333 379.98 T
(word) 153 369.98 T
(listType,) 261 369.98 T
(/* type of list being removed */) 333 369.98 T
(MemHandle) 153 359.98 T
(mh,) 261 359.98 T
(/* handle of locked LMem block) 333 359.98 T
( * containing the list of lists */) 315 349.98 T
(ChunkHandle) 153 339.98 T
(listOfLists\051;) 261 339.98 T
(/* chunk of list of lists */) 333 339.98 T
0 10 Q
-0.81 (This routine removes a) 180 322.32 P
0 9 Q
-0.73 (GCN) 286.05 322.32 P
0 10 Q
-0.81 ( list from a) 306.88 322.32 P
0 9 Q
-0.73 (GCN) 356.82 322.32 P
0 10 Q
-0.81 ( list block and from the list of lists) 377.66 322.32 P
(therein.) 180 310.82 T
2 F
(Include:) 99 292.32 T
0 F
(gcnlist.goh) 180 292.32 T
81 275.98 531 280.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 275.98 531 280.98 R
7 X
0 0 0 1 0 0 0 K
V
50 279.98 609.01 279.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 267.97 T
2 F
(GCNListRemoveHandles\050\051) 99 267.97 T
4 10 Q
(Boolean) 99 254.31 T
(GCNListRemoveHandles\050) 153 254.31 T
4 9 Q
(MemHandle) 153 243.97 T
(mh,) 261 243.97 T
(ChunkHandle) 153 233.97 T
(ch,) 261 233.97 T
(ManufacturerID) 153 223.97 T
(manufID,) 261 223.97 T
(word) 153 213.97 T
(listType\051;) 261 213.97 T
0 10 Q
(This routine is exactly the same as) 180 196.31 T
6 F
(GCNListRemove\050\051) 343.55 196.31 T
0 F
(, except it speci\336es) 437.43 196.31 T
(the object to be removed via handles rather than an optr) 180 184.81 T
(.) 440.03 184.81 T
2 F
(Include:) 99 166.31 T
0 F
(gcnlist.goh) 180 166.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "155" 3
%%Page: "156" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(156) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(GCNListRemove\050\051) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(GCNListSend\050\051) 99 616.99 T
3 10 Q
(word) 99 602.33 T
4 F
(GCNListSend\050) 153 602.33 T
4 9 Q
(ManufacturerID) 153 591.99 T
(manufID,) 261 591.99 T
(/* manufacturer of list */) 369 591.99 T
(word) 153 581.99 T
(listType,) 261 581.99 T
(/* notification type */) 369 581.99 T
(EventHandle) 153 571.99 T
(event,) 261 571.99 T
(/* event to be sent to list */) 369 571.99 T
(MemHandle) 153 561.99 T
(dataBlock,) 261 561.99 T
(/* data block, if any */) 369 561.99 T
(word) 153 551.99 T
(gcnListSendFlags\051;) 261 551.99 T
(/* GCNListSendFlags */) 369 551.99 T
0 10 Q
(This routine sends a message to all objects in the speci\336ed) 180 534.33 T
0 9 Q
(GCN) 451.89 534.33 T
0 10 Q
( list. The) 472.73 534.33 T
(message is speci\336ed in) 180 522.83 T
5 F
(event) 287.05 522.83 T
0 F
(, and the list is speci\336ed in) 310.75 522.83 T
5 F
(manufID) 437.07 522.83 T
0 F
( and) 479.1 522.83 T
5 F
(listT) 180 511.33 T
(ype) 200.58 511.33 T
0 F
(. The message will be sent asynchronously \050some time after the) 215.76 511.33 T
(change has occurred\051 by the message queue.) 180 499.83 T
-0.63 (The) 180 481.33 P
5 F
-0.63 (dataBlock) 199.93 481.33 P
0 F
-0.63 ( parameter contains the memory handle of an extra data block) 246.59 481.33 P
(to be sent with the noti\336cation, if any; this block should also be speci\336ed in) 180 469.83 T
(the classed event. If no data block is required, pass a NullHandle. If a data) 180 458.33 T
(block with a reference cound is used, increment the reference count by one) 180 446.83 T
(before calling this routine; this routine decrements the count and frees the) 180 435.33 T
(block if the count reaches zero.) 180 423.83 T
-0.49 (The) 180 405.33 P
5 F
-0.49 (gcnListSendFlags) 200.07 405.33 P
0 F
-0.49 ( parameter is of type) 282.83 405.33 P
6 F
-0.5 (GCNListSendFlags) 378.94 405.33 P
0 F
-0.49 (, which has) 477.45 405.33 P
(only one meaningful \337ag for this routine:) 180 393.83 T
0 9 Q
(GCNLSF_SET_ST) 180 375.33 T
(A) 256.86 375.33 T
(TUS) 262.86 375.33 T
0 10 Q
(Causes the message sent to the) 243 364.33 T
0 9 Q
(GCN) 390.43 364.33 T
0 10 Q
( list to be set as the lists) 411.27 364.33 T
(\322status.\323 The list\325) 243 353.33 T
(s status message is then sent to any object) 322.1 353.33 T
(adding itself to the list at a later time. If this \337ag is set, the) 243 342.33 T
(event handle in) 243 331.33 T
5 F
(event) 317.64 331.33 T
0 F
( will be returned by the routine. If this) 341.34 331.33 T
-0.41 (\337ag is not set, the return value will be the number of messages) 243 320.33 P
(sent out.) 243 309.33 T
2 F
(Include:) 99 291.33 T
0 F
(gcnlist.goh) 180 291.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "156" 4
%%Page: "157" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(157) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GCNListSendT) 99 634.99 T
(oBlock\050\051) 182.78 634.99 T
3 10 Q
(word) 99 621.33 T
4 F
(GCNListSendToBlock\050) 153 621.33 T
4 9 Q
(ManufacturerID) 153 610.99 T
(manufID,) 261 610.99 T
(/* manufacturer id of list */) 333 610.99 T
(word) 153 600.99 T
(listType,) 261 600.99 T
(/* notification type */) 333 600.99 T
(EventHandle) 153 590.99 T
(event,) 261 590.99 T
(/* event to be sent to list */) 333 590.99 T
(MemHandle) 153 580.99 T
(dataBlock,) 261 580.99 T
(/* data block, if any */) 333 580.99 T
(MemHandle) 153 570.99 T
(mh,) 261 570.99 T
(/* handle of locked LMem block) 333 570.99 T
( * containing GCN list of lists */) 315 560.99 T
(ChunkHandle) 153 550.99 T
(listOfLists,) 261 550.99 T
(/* chunk of list of lists */) 333 550.99 T
(GCNListSendFlags) 153 540.99 T
(flags\051;) 261 540.99 T
(/* GCNListSendFlags */) 333 540.99 T
0 10 Q
(This routine sends the speci\336ed) 180 523.33 T
5 F
(event) 329.08 523.33 T
0 F
( to the speci\336ed list, just as) 352.78 523.33 T
6 F
(GCNListSend\050\051) 180 511.83 T
0 F
(.) 258.33 511.83 T
6 F
(GCNListSentT) 263.89 511.83 T
(oBlock\050\051) 338.33 511.83 T
0 F
(, however) 381.86 511.83 T
(, speci\336es a particular) 425.38 511.83 T
(instance of the) 180 500.33 T
0 9 Q
(GCN) 250.56 500.33 T
0 10 Q
( list by specifying the appropriate list of lists in) 271.39 500.33 T
5 F
(mh) 492.36 500.33 T
0 F
( and) 507.36 500.33 T
5 F
(listOfLists) 180 488.83 T
0 F
(. Other parameters and return values are identical to) 228.13 488.83 T
6 F
(GCNListSend\050\051) 180 477.33 T
0 F
(.) 258.33 477.33 T
2 F
(See Also:) 99 458.83 T
0 F
(GCNListSend\050\051) 180 458.83 T
2 F
(Include:) 99 438.83 T
0 F
(gcnlist.goh) 180 438.83 T
81 422.48 531 427.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 422.48 531 427.49 R
7 X
0 0 0 1 0 0 0 K
V
50 426.48 609.01 426.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 414.48 T
2 F
(GCNListSendT) 99 414.48 T
(oList\050\051) 182.78 414.48 T
3 10 Q
(void) 99 400.82 T
4 F
(GCNListSendToList\050) 153 400.82 T
4 9 Q
(optr) 153 390.48 T
(list,) 261 390.48 T
(/* optr of GCN list */) 333 390.48 T
(EventHandle) 153 380.48 T
(event,) 261 380.48 T
(/* event to send to list */) 333 380.48 T
(MemHandle) 153 370.48 T
(dataBlock,) 261 370.48 T
(/* handle of data block, if any */) 333 370.48 T
(GCNListSendFlags) 153 360.48 T
(flags\051;) 261 360.48 T
(/* GCNListSendFlags */) 333 360.48 T
0 10 Q
(This routine sends the speci\336ed) 180 342.82 T
5 F
(event) 329.08 342.82 T
0 F
( to the speci\336ed) 352.78 342.82 T
0 9 Q
(GCN) 427.6 342.82 T
5 10 Q
(list) 451.21 342.82 T
0 F
(. The list is) 465.83 342.82 T
(speci\336ed explicitly by optr as opposed to by manufacturer) 180 331.32 T
0 9 Q
(ID) 447.98 331.32 T
0 10 Q
( and type. The) 458.64 331.32 T
(event will be sent via the proper queues to all objects registered on the list.) 180 319.82 T
-0.78 (After the noti\336cation is handled by all noti\336ed objects, the event will be freed,) 180 308.32 P
(as will the data block passed. \050If no data block, pass NullHandle in) 180 296.82 T
5 F
(dataBlock) 180 285.32 T
0 F
(\051) 226.66 285.32 T
(The) 180 266.82 T
5 F
(\337ags) 200.56 266.82 T
0 F
( parameter can have one \337ag,) 222.22 266.82 T
0 9 Q
(GCNLSF_SET_ST) 361.5 266.82 T
(A) 438.36 266.82 T
(TUS) 444.36 266.82 T
0 10 Q
(. If this \337ag is) 463.37 266.82 T
(set, the event passed will be set as the list\325) 180 255.32 T
(s status message.) 375.98 255.32 T
2 F
(Include:) 99 236.82 T
0 F
(gcnlist.goh) 180 236.82 T
2 F
(See Also:) 99 216.82 T
0 F
(GCNListSend\050\051) 180 216.82 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "157" 5
%%Page: "158" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(158) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GCNListSendT) 99 634.99 T
(oListHandles\050\051) 182.78 634.99 T
3 10 Q
(void) 99 621.33 T
4 F
(GCNListSendToListHandles\050) 153 621.33 T
4 9 Q
(MemHandle) 153 610.99 T
(mh,) 261 610.99 T
(/* handle of list\325s block */) 333 610.99 T
(ChunkHandle) 153 600.99 T
(ch,) 261 600.99 T
(/* chunk of list */) 333 600.99 T
(EventHandle) 153 590.99 T
(event,) 261 590.99 T
(/* event to send to list */) 333 590.99 T
(MemHandle) 153 580.99 T
(dataBlock,) 261 580.99 T
(/* handle of data block, if any */) 333 580.99 T
(GCNListSendFlags) 153 570.99 T
(flags\051;) 261 570.99 T
(/* GCNListSendFlags */) 333 570.99 T
0 10 Q
(This routine is exactly the same as) 180 553.33 T
6 F
(GCNListSendT) 343.55 553.33 T
(oList\050\051) 420.4 553.33 T
0 F
(; the list is) 454.47 553.33 T
(speci\336ed not by optr) 180 541.83 T
(, however) 272.41 541.83 T
(, but by a combination of its global and chunk) 315.93 541.83 T
(handles.) 180 530.33 T
2 F
(See Also:) 99 511.83 T
0 F
(GCNListSendT) 180 511.83 T
(oList\050\051) 250.39 511.83 T
2 F
(Include:) 99 491.83 T
0 F
(gcnlist.goh) 180 491.83 T
81 475.48 531 480.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 475.48 531 480.49 R
7 X
0 0 0 1 0 0 0 K
V
50 479.48 609.01 479.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 467.48 T
2 F
(GCNListUnRelocateBlock\050\051) 99 467.48 T
3 10 Q
(Boolean) 99 453.82 T
4 F
(GCNListUnRelocateBlock\050) 153 453.82 T
4 9 Q
(MemHandle) 153 443.48 T
(mh,) 261 443.48 T
(/* handle of the locked lmem block) 333 443.48 T
( * containing the list of lists */) 315 433.48 T
(ChunkHandle) 153 423.48 T
(listOfLists,) 261 423.48 T
(/* chunk of the list of lists */) 333 423.48 T
(MemHandle) 153 413.48 T
(relocBlock\051;) 261 413.48 T
(/* handle of block containing) 333 413.48 T
( * relocation/unrelocation info */) 315 403.48 T
0 10 Q
(This routine unrelocates the speci\336ed list of lists, updating all the optrs) 180 385.82 T
-0.66 (according to the information in) 180 374.32 P
5 F
-0.66 (relocBlock) 322.61 374.32 P
0 F
-0.66 (. This routine is rarely) 369.81 374.32 P
-0.66 (, if ever) 469.95 374.32 P
-0.66 (, used) 502.51 374.32 P
-0.26 (by applications; it is used primarily by the) 180 362.82 P
0 9 Q
-0.24 (UI) 376.08 362.82 P
0 10 Q
-0.26 ( when shutting down to a state) 387.08 362.82 P
(\336le.) 180 351.32 T
(It returns) 180 332.82 T
5 F
(true) 228.14 332.82 T
0 F
( if the speci\336ed list of lists has no lists saved to state and) 246.65 332.82 T
(therefore is simply destroyed. The return value is) 180 321.32 T
5 F
(false) 411.49 321.32 T
0 F
( if the list of lists is) 432.77 321.32 T
(saved to the state \336le normally) 180 309.82 T
(.) 321.88 309.82 T
2 F
(Include:) 99 291.32 T
0 F
(gcnlist.goh) 180 291.32 T
81 274.98 531 279.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 274.98 531 279.98 R
7 X
0 0 0 1 0 0 0 K
V
50 278.98 609.01 278.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 266.97 T
2 F
(GenCopyChunk\050\051) 99 266.97 T
3 10 Q
(word) 99 252.31 T
4 F
(GenCopyChunk\050) 153 252.31 T
4 9 Q
(MemHandle) 153 241.97 T
(destBlock,) 261 241.97 T
(/* handle of locked LMem block into) 315 241.97 T
( * which chunk will be copied */) 297 231.97 T
(MemHandle) 153 221.97 T
(blk,) 261 221.97 T
(/* handle of locked source LMem block */) 315 221.97 T
(ChunkHandle) 153 211.97 T
(chnk,) 261 211.97 T
(/* chunk handle of chunk to be copied */) 315 211.97 T
(word) 153 201.97 T
(flags\051;) 261 201.97 T
(/* CompChildFlags */) 315 201.97 T
0 10 Q
(This is a utility routine that copies one LMem chunk into a newly created) 180 184.31 T
(chunk. The routine will allocate the new chunk in the block passed in) 180 172.81 T
5 F
(destBlock) 180 161.31 T
0 F
( and will return the chunk handle of the new chunk. It is used) 224.06 161.31 T
(primarily by the) 180 149.81 T
0 9 Q
(UI) 258.16 149.81 T
0 10 Q
( to duplicate generic object chunks.) 269.16 149.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "158" 6
%%Page: "159" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(159) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
-0.3 (The source chunk is speci\336ed by the global handle) 180 641.33 P
5 F
-0.3 (blk) 411.38 641.33 P
0 F
-0.3 ( and the chunk handle) 425.83 641.33 P
5 F
(chnk) 180 629.83 T
0 F
(. The) 202.22 629.83 T
5 F
(\337ags) 228.34 629.83 T
0 F
( parameter contains a record of) 250 629.83 T
6 F
(CompChildFlags) 397.04 629.83 T
0 F
(, of which) 483.71 629.83 T
(only the) 180 618.33 T
0 9 Q
(CCF_MARK_DIRTY) 220.19 618.33 T
0 10 Q
( \337ag is meaningful. If this \337ag is set, the new) 306.18 618.33 T
(chunk will be marked dirty) 180 606.83 T
(.) 304.65 606.83 T
2 F
(W) 99 588.33 T
(arnings:) 108.07 588.33 T
0 F
(This routine may resize and/or move chunks and blocks, so you must) 180 588.33 T
(dereference pointers after calling it.) 180 575.33 T
2 F
(Include:) 99 555.33 T
0 F
(genC.goh) 180 555.33 T
81 538.99 531 544 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 538.99 531 544 R
7 X
0 0 0 1 0 0 0 K
V
50 542.99 609.01 542.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 530.99 T
2 F
(GenFindObjectInT) 99 530.99 T
(ree\050\051) 202.36 530.99 T
3 10 Q
(optr) 99 516.33 T
4 F
(GenFindObjectInTree\050) 153 516.33 T
4 9 Q
(optr) 153 505.99 T
(startObject,) 189 505.99 T
(/* optr of object at which to start search */) 279 505.99 T
(dword) 153 495.99 T
(childTable\051;) 189 495.99 T
(/* pointer to table of bytes, each indicating) 279 495.99 T
( * the position of the child at the given) 261 485.99 T
( * level; -1 is the end of the table */) 261 475.99 T
0 10 Q
-0.51 (This utility routine \336nds the object having the optr) 180 458.33 P
5 F
-0.51 (startObject) 413.59 458.33 P
0 F
-0.51 ( in the generic) 464.14 458.33 P
(tree. Applications will not likely need this routine.) 180 446.83 T
(The childT) 180 428.33 T
(able parameter points to a table of bytes, each byte representing) 229.2 428.33 T
-0.07 (the child number to be found at each level. The \336rst byte indicates the child) 180 416.83 P
(of startObject to get; the second byte indicates the child to get at the next) 180 405.33 T
(level; the third byte indicates the child to get at the next level, and so on. A) 180 393.83 T
(byte of -1 indicates the end of the table. The object found will be returned.) 180 382.33 T
2 F
(Include:) 99 363.83 T
0 F
(genC.goh) 180 363.83 T
81 347.48 531 352.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 347.48 531 352.49 R
7 X
0 0 0 1 0 0 0 K
V
50 351.48 609.01 351.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 339.48 T
2 F
(GenInsertChild\050\051) 99 339.48 T
3 10 Q
(void) 99 324.82 T
4 F
(GenInsertChild\050) 153 324.82 T
4 9 Q
(MemHandle) 153 314.48 T
(mh,) 261 314.48 T
(/* handle of parent */) 351 314.48 T
(ChunkHandle) 153 304.48 T
(chnk,) 261 304.48 T
(/* chunk of parent */) 351 304.48 T
(optr) 153 294.48 T
(childToAdd,) 261 294.48 T
(/* optr of new child */) 351 294.48 T
(optr) 153 284.48 T
(referenceChild,) 261 284.48 T
(/* optr of reference child */) 351 284.48 T
(word) 153 274.48 T
(flags\051;) 261 274.48 T
(/* CompChildFlags */) 351 274.48 T
0 10 Q
-0.57 (This utility routine adds a child object to a composite object. It is used almost) 180 256.82 P
(exclusively by the) 180 245.32 T
0 9 Q
(UI) 265.01 245.32 T
0 10 Q
( for generic objects\321applications will typically use) 276.01 245.32 T
0 9 Q
(MSG_GEN_ADD_CHILD) 180 233.82 T
0 10 Q
(.) 286.67 233.82 T
2 F
(See Also:) 99 215.32 T
0 F
(MSG_GEN_ADD_CHILD) 180 215.32 T
2 F
(W) 99 195.32 T
(arnings:) 108.07 195.32 T
0 F
(This routine may move or resize chunks and/or object blocks; therefore, you) 180 195.32 T
(must dereference pointers after calling it.) 180 182.32 T
2 F
(Include:) 99 162.32 T
0 F
(genC.goh) 180 162.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "159" 7
%%Page: "160" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(160) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GenProcessAction\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GenProcessAction\050) 153 620.33 T
4 9 Q
(MemHandle) 153 609.99 T
(mh,) 261 609.99 T
(/* handle of object calling the routine */) 297 609.99 T
(ChunkHandle) 153 599.99 T
(chnk,) 261 599.99 T
(/* chunk of object calling the routine */) 297 599.99 T
(word) 153 589.99 T
(mthd,) 261 589.99 T
(/* message to send to actionOptr */) 333 589.99 T
(word) 153 579.99 T
(dataCX,) 261 579.99 T
(/* data to pass in CX register */) 333 579.99 T
(word) 153 569.99 T
(dataDX,) 261 569.99 T
(/* data to pass in DX register */) 333 569.99 T
(word) 153 559.99 T
(dataBP,) 261 559.99 T
(/* data to pass in BP register */) 333 559.99 T
(optr) 153 549.99 T
(actionOptr\051;) 261 549.99 T
(/* object to receive mthd */) 333 549.99 T
0 10 Q
-0.17 (This utility routine sends the action message speci\336ed in) 180 532.33 P
5 F
-0.17 (mthd) 443.88 532.33 P
0 F
-0.17 ( to the action) 468.51 532.33 P
(object speci\336ed in) 180 520.83 T
5 F
(actionOptr) 264.26 520.83 T
0 F
(. It is typically used by the) 313.14 520.83 T
0 9 Q
(UI) 438.35 520.83 T
0 10 Q
( and generic) 449.35 520.83 T
(objects and corresponds to the) 180 509.33 T
6 F
(GenClass) 321.85 509.33 T
0 F
( message) 370.18 509.33 T
0 9 Q
(MSG_GEN_OUTPUT_ACTION) 180 497.83 T
0 10 Q
(.) 312.18 497.83 T
2 F
(W) 99 479.33 T
(arnings:) 108.07 479.33 T
0 F
(This routine may move or resize chunks and/or object blocks; therefore, you) 180 479.33 T
(must dereference pointers after calling it.) 180 466.33 T
2 F
(See Also:) 99 446.33 T
0 F
(MSG_GEN_OUTPUT_ACTION) 180 446.33 T
2 F
(Include:) 99 426.33 T
0 F
(genC.goh) 180 426.33 T
81 409.98 531 414.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 409.98 531 414.99 R
7 X
0 0 0 1 0 0 0 K
V
50 413.98 609.01 413.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 401.98 T
2 F
(GenProcessGenAttrsAfterAction\050\051) 99 401.98 T
3 10 Q
(void) 99 387.32 T
4 F
(GenProcessGenAttrsAfterAction\050) 153 387.32 T
4 9 Q
(MemHandle) 153 376.98 T
(mh,) 261 376.98 T
(/* handle of object calling the routine */) 297 376.98 T
(ChunkHandle) 153 366.98 T
(chnk\051;) 261 366.98 T
(/* chunk of object calling the routine */) 297 366.98 T
0 10 Q
-0.43 (This utility routine processes various attributes for a generic object after the) 180 349.32 P
(object\325) 180 337.82 T
(s action message has been sent. It is used almost exclusively by the) 208.52 337.82 T
(generic) 180 326.32 T
0 9 Q
(UI) 216.29 326.32 T
0 10 Q
( after) 227.29 326.32 T
0 9 Q
(MSG_GEN_OUTPUT_ACTION) 255.07 326.32 T
0 10 Q
( or) 387.25 326.32 T
6 F
(GenProcessAction\050\051) 402.25 326.32 T
0 F
(.) 505.21 326.32 T
2 F
(W) 99 307.82 T
(arnings:) 108.07 307.82 T
0 F
(This routine may move or resize chunks and/or object blocks; therefore, you) 180 307.82 T
(must dereference pointers after calling it.) 180 294.82 T
2 F
(Include:) 99 274.82 T
0 F
(genC.goh) 180 274.82 T
81 258.48 531 263.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 258.48 531 263.48 R
7 X
0 0 0 1 0 0 0 K
V
50 262.48 609.01 262.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 250.47 T
2 F
(GenProcessGenAttrsBeforeAction\050\051) 99 250.47 T
3 10 Q
(void) 99 235.81 T
4 F
(GenProcessGenAttrsBeforeAction\050) 153 235.81 T
4 9 Q
(MemHandle) 153 225.47 T
(mh,) 261 225.47 T
(/* handle of object calling the routine */) 297 225.47 T
(ChunkHandle) 153 215.47 T
(chnk\051;) 261 215.47 T
(/* chunk of object calling the routine */) 297 215.47 T
0 10 Q
(This utility routine processes various attributes for a generic object before) 180 197.81 T
-0.62 (the object\325) 180 186.31 P
-0.62 (s action message has been sent. It is used almost exclusively by the) 225.68 186.31 P
(generic) 180 174.81 T
0 9 Q
(UI) 216.29 174.81 T
0 10 Q
( before) 227.29 174.81 T
0 9 Q
(MSG_GEN_OUTPUT_ACTION) 261.18 174.81 T
0 10 Q
( or) 393.36 174.81 T
6 F
(GenProcessAction\050\051) 408.36 174.81 T
0 F
(.) 511.32 174.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "160" 8
%%Page: "161" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(161) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(W) 99 641.33 T
(arnings:) 108.07 641.33 T
0 F
(This routine may move or resize chunks and/or object blocks; therefore, you) 180 641.33 T
(must dereference pointers after calling it.) 180 628.33 T
2 F
(Include:) 99 608.33 T
0 F
(genC.goh) 180 608.33 T
81 591.99 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 591.99 531 597 R
7 X
0 0 0 1 0 0 0 K
V
50 595.99 609.01 595.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 583.99 T
2 F
(GenProcessUndoGetFile\050\051) 99 583.99 T
3 10 Q
(VMFileHandle) 99 569.33 T
4 F
(GenProcessUndoGetFile\050\051;) 177 569.33 T
0 F
(This routine returns the handle of the \336le that holds the process\325 undo) 180 551.33 T
(information.) 180 539.83 T
2 F
(Include:) 99 521.33 T
0 F
(Objects/gProcC.goh) 180 521.33 T
81 504.98 531 509.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 504.98 531 509.99 R
7 X
0 0 0 1 0 0 0 K
V
50 508.98 609.01 508.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 496.98 T
2 F
(GenProcessUndoCheckIfIgnoring\050\051) 99 496.98 T
3 10 Q
(Boolean) 99 482.32 T
4 F
(GenProcessUndoCheckIfIgnoring\050\051;) 147 482.32 T
0 F
(This routine returns) 180 464.32 T
5 F
(true) 277.22 464.32 T
0 F
( if the process is currently ignoring actions.) 295.73 464.32 T
2 F
(Include:) 99 445.82 T
0 F
(Objects/gProcC.goh) 180 445.82 T
81 429.48 531 434.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 429.48 531 434.48 R
7 X
0 0 0 1 0 0 0 K
V
50 433.48 609.01 433.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 421.48 T
2 F
(GenRemoveDownwardLink\050\051) 99 421.48 T
3 10 Q
(void) 99 406.81 T
4 F
(GenRemoveDownwardLink\050) 153 406.81 T
4 9 Q
(MemHandle) 153 396.48 T
(mh,) 261 396.48 T
(/* handle of calling object */) 315 396.48 T
(ChunkHandle) 153 386.48 T
(chnk,) 261 386.48 T
(/* chunk of calling object */) 315 386.48 T
(word) 153 376.48 T
(flags\051;) 261 376.48 T
(/* CompChildFlags */) 315 376.48 T
0 10 Q
(This utility routine removes a child from the generic tree, preserving the) 180 358.81 T
(child\325) 180 347.31 T
(s upward link and usability \337ags. It is called primarily by the generic) 204.26 347.31 T
0 9 Q
-0.21 (UI) 180 335.81 P
0 10 Q
-0.23 ( and is rarely used by applications. The \337ags parameter speci\336es whether) 191 335.81 P
-0.21 (the object linkage should be marked dirty by passing the) 180 324.31 P
0 9 Q
-0.19 (CCF_MARK_DIRTY) 442.43 324.31 P
0 10 Q
(\337ag.) 180 312.81 T
2 F
(W) 99 294.31 T
(arnings:) 108.07 294.31 T
0 F
(This routine may move or resize chunks and/or object blocks; therefore, you) 180 294.31 T
(must dereference pointers after calling it.) 180 281.31 T
2 F
(Include:) 99 261.31 T
0 F
(genC.goh) 180 261.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "161" 9
%%Page: "162" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(162) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GenSetUpwardLink\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GenSetUpwardLink\050) 153 620.33 T
4 9 Q
(MemHandle) 153 609.99 T
(mh,) 261 609.99 T
(/* handle of calling object */) 315 609.99 T
(ChunkHandle) 153 599.99 T
(chnk,) 261 599.99 T
(/* chunk of calling object */) 315 599.99 T
(optr) 153 589.99 T
(parent\051;) 261 589.99 T
(/* optr of calling object\325s parent */) 315 589.99 T
0 10 Q
(This utility routine converts the child/parent link to an upward-only link.) 180 572.33 T
(Pass the handle and chunk of the locked child object and the optr of the) 180 560.83 T
(parent composite.) 180 549.33 T
2 F
(Include:) 99 530.83 T
0 F
(genC.goh) 180 530.83 T
81 514.48 531 519.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 514.48 531 519.49 R
7 X
0 0 0 1 0 0 0 K
V
50 518.48 609.01 518.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 506.48 T
2 F
(GeodeAllocQueue\050\051) 99 506.48 T
3 10 Q
(QueueHandle) 99 491.82 T
4 F
( GeodeAllocQueue\050\051;) 165 491.82 T
0 F
-0.58 (This routine allocates an event queue which can then be attached to a thread) 180 473.82 P
(with) 180 462.32 T
6 F
(ThreadAttachT) 203.71 462.32 T
(oQueue\050\051) 282.42 462.32 T
0 F
(. It returns the queue\325) 329.82 462.32 T
(s handle if one is) 430.75 462.32 T
(allocated; it will return zero otherwise. This routine is used outside the) 180 450.82 T
(kernel only in exceptional circumstances.) 180 439.32 T
2 F
(Be Sure T) 99 420.82 T
(o:) 144.94 420.82 T
0 F
(Y) 180 420.82 T
(ou must free the queue when you are done with it; use) 185.93 420.82 T
6 F
(GeodeFreeQueue\050\051) 180 407.82 T
0 F
(.) 277.77 407.82 T
2 F
(Include:) 99 387.82 T
0 F
(geode.h) 180 387.82 T
81 371.48 531 376.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 371.48 531 376.48 R
7 X
0 0 0 1 0 0 0 K
V
50 375.48 609.01 375.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 363.48 T
2 F
(GeodeDuplicateResource\050\051) 99 363.48 T
3 10 Q
(MemHandle) 99 348.81 T
4 F
( GeodeDuplicateResource\050) 153 348.81 T
4 9 Q
(MemHandle mh\051;) 153 338.48 T
(/* handle of geode resource to duplicate */) 261 338.48 T
0 10 Q
(This routine reads a resource from a geode into a newly-allocated block) 180 320.81 T
(\050allocated by this routine\051. Any relocations on the resource to itself are) 180 309.31 T
(adjusted to be the duplicated block. The handle of the duplicated block is) 180 297.81 T
(returned.) 180 286.31 T
2 F
(Include:) 99 267.81 T
0 F
(resource.h) 180 267.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "162" 10
%%Page: "163" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(163) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeodeFind\050\051) 99 634.99 T
3 10 Q
(GeodeHandle) 99 620.33 T
4 F
( GeodeFind\050) 165 620.33 T
4 9 Q
(const char) 153 609.99 T
(* name,) 261 609.99 T
(/* geode\325s permanent name */) 333 609.99 T
(word) 153 599.99 T
(numChars,) 261 599.99 T
(/* number of characters to match:) 333 599.99 T
( * 8 for name, 12 for name.ext */) 315 589.99 T
(GeodeAttrs) 153 579.99 T
(attrMatch,) 261 579.99 T
(/* GeodeAttrs that must be set */) 333 579.99 T
(GeodeAttrs) 153 569.99 T
(attrNoMatch\051;) 261 569.99 T
(/* GeodeAttrs that must be off */) 333 569.99 T
0 10 Q
(This routine \336nds a geode given its permanent name, returning the geode) 180 552.33 T
-0.44 (handle if found. If the geode can not be found, a null handle will be returned.) 180 540.83 P
(Pass it the following:) 180 529.33 T
5 F
(name) 180 510.83 T
0 F
-0.39 (A pointer to the null-terminated permanent name of the geode.) 243 510.83 P
5 F
(numChars) 180 492.83 T
0 F
(The number of characters to match before returning. Pass) 243 492.83 T
0 9 Q
(GEODE_NAME_SIZE) 243 481.83 T
0 10 Q
( to match the permanent name,) 336.16 481.83 T
(\050) 243 470.83 T
0 9 Q
(GEODE_NAME_SIZE) 246.33 470.83 T
0 10 Q
(+) 342.27 470.83 T
0 9 Q
(GEODE_EXT_SIZE) 351.11 470.83 T
0 10 Q
(\051 to match the name) 434.28 470.83 T
(and extension.) 243 459.83 T
5 F
(attrMatch) 180 441.83 T
0 F
(A record of) 243 441.83 T
6 F
(GeodeAttrs) 295.95 441.83 T
0 F
( the subject geode must have set for a) 354.84 441.83 T
(positive match.) 243 430.83 T
5 F
(attrNoMatch) 180 412.83 T
0 F
(A record of) 243 401.83 T
6 F
(GeodeAttrs) 295.95 401.83 T
0 F
( the subject geode must have cleared) 354.84 401.83 T
(for a positive match.) 243 390.83 T
2 F
(Include:) 99 372.83 T
0 F
(geode.h) 180 372.83 T
81 356.48 531 361.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 356.48 531 361.49 R
7 X
0 0 0 1 0 0 0 K
V
50 360.48 609.01 360.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 348.48 T
2 F
(GeodeFindResource\050\051) 99 348.48 T
3 10 Q
(word) 99 333.82 T
4 F
(GeodeFindResource\050) 153 333.82 T
4 9 Q
(FileHandle) 153 323.48 T
(file,) 261 323.48 T
(/* geode\325s executable file */) 333 323.48 T
(word) 153 313.48 T
(resNum,) 261 313.48 T
(/* resource number to find */) 333 313.48 T
(word) 153 303.48 T
(resOffset,) 261 303.48 T
(/* offset to resource */) 333 303.48 T
(dword) 153 293.48 T
(* base\051;) 261 293.48 T
(/* pointer to second return value */) 333 293.48 T
0 10 Q
(This routine locates a resource within a geode\325) 180 275.82 T
(s executable \050) 393.54 275.82 T
6 F
(.geo) 456.14 275.82 T
0 F
(\051 \336le. It) 476.88 275.82 T
-0.49 (returns the size of the resource as well as the base position of the \336rst byte of) 180 264.32 P
(the resource in the \336le \050pointed to by) 180 252.82 T
5 F
(base) 352.6 252.82 T
0 F
(\051. Pass the following:) 372.78 252.82 T
5 F
(\336le) 180 234.32 T
0 F
(The \336le handle of the geode\325) 243 234.32 T
(s executable \336le.) 371.72 234.32 T
5 F
(resNum) 180 216.32 T
0 F
(The number of the resource to be found.) 243 216.32 T
5 F
(resOffset) 180 198.32 T
0 F
(The offset within the resource at which to position the \336le\325) 243 198.32 T
(s) 511.54 198.32 T
(read/write position.) 243 187.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "163" 11
%%Page: "164" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(164) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
5 10 Q
0 X
(base) 180 641.33 T
0 F
(A pointer to a dword value to be \336lled in by the routine. This) 243 641.33 T
-0.64 (value will be the base offset from the beginning of the \336le to the) 243 630.33 P
(\336rst byte of the resource.) 243 619.33 T
2 F
(Structures:) 99 601.33 T
0 F
(A geode\325) 180 601.33 T
(s executable \336le is laid out as shown below) 217.78 601.33 T
(.) 413.76 601.33 T
4 9 Q
(0:) 216 587 T
(Geode file header) 252 587 T
(1:) 216 573 T
(Imported Library Table) 252 573 T
(2:) 216 559 T
(Exported Routine Table) 252 559 T
(3:) 216 545 T
(Resource Size Table) 252 545 T
(4:) 216 531 T
(Resource Position Table) 252 531 T
(5:) 216 517 T
(Relocation Table Size Table) 252 517 T
(6:) 216 503 T
(Allocation Flags Table) 252 503 T
(7+:) 216 489 T
(application resources) 252 489 T
2 10 Q
(Include:) 99 471.33 T
0 F
(geode.h) 180 471.33 T
81 454.99 531 460 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 454.99 531 460 R
7 X
0 0 0 1 0 0 0 K
V
50 458.99 609.01 458.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 446.99 T
2 F
(GeodeFlushQueue\050\051) 99 446.99 T
3 10 Q
(void) 99 432.33 T
4 F
(GeodeFlushQueue\050) 153 432.33 T
4 9 Q
(QueueHandle) 153 421.99 T
(source,) 261 421.99 T
(/* source queue to flush */) 315 421.99 T
(QueueHandle) 153 411.99 T
(dest,) 261 411.99 T
(/* queue to hold flushed events */) 315 411.99 T
(optr) 153 401.99 T
(obj) 261 401.99 T
(/* object to handle flushed events */) 315 401.99 T
(MessageFlags) 153 391.99 T
(flags\051;) 261 391.99 T
(/* MF_INSERT_AT_FRONT or zero */) 315 391.99 T
0 10 Q
(This routine \337ushes all events from one event queue into another) 180 374.33 T
(,) 480.95 374.33 T
(synchronously) 180 362.83 T
(. Pass it the following:) 245.36 362.83 T
5 F
(source) 180 344.33 T
0 F
(The queue handle of the source queue \050the one to be emptied\051.) 243 344.33 T
5 F
(dest) 180 326.33 T
0 F
-0.66 (The queue handle of the destination queue that will receive the) 243 326.33 P
(\337ushed events.) 243 315.33 T
5 F
(obj) 180 297.33 T
0 F
(The object that will handle \337ushed events that were destined) 243 297.33 T
-0.25 (for the process owning the source queue. If the process owning) 243 286.33 P
(the destination queue should be used, pass the destination) 243 275.33 T
-0.73 (queue handle in the handle portion of the optr and a null chunk) 243 264.33 P
(handle.) 243 253.33 T
5 F
(\337ags) 180 235.33 T
0 F
(A record of) 243 235.33 T
6 F
(MessageFlags) 295.95 235.33 T
0 F
(. The only meaningful \337ag for this) 367.42 235.33 T
-0.35 (routine is) 243 224.33 P
0 9 Q
-0.31 (MF_INSERT_A) 289.34 224.33 P
-0.31 (T_FRONT) 354.51 224.33 P
0 10 Q
-0.35 (, which should be set to \337ush) 396.94 224.33 P
(source queue\325) 243 213.33 T
(s events to the front of the destination queue. If) 304.85 213.33 T
(this \337ag is not passed, events will be appended to the queue.) 243 202.33 T
2 F
(Include:) 99 184.33 T
0 F
(geode.h) 180 184.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "164" 12
%%Page: "165" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(165) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeodeFreeQueue\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GeodeFreeQueue\050) 153 620.33 T
4 9 Q
(QueueHandle qh\051;) 153 609.99 T
(/* handle of queue being freed */) 279 609.99 T
0 10 Q
-0.24 (This routine frees an event queue allocated with) 180 592.33 P
6 F
-0.24 (GeodeAllocQueue\050\051) 404.25 592.33 P
0 F
-0.24 (. Any) 504.43 592.33 P
(events still on the queue will be \337ushed as with) 180 580.83 T
6 F
(GeodeFlushQueue\050\051) 402.27 580.83 T
0 F
(. Y) 505.59 580.83 T
(ou) 517.08 580.83 T
(must pass the handle of the queue to be freed.) 180 569.33 T
2 F
(Include:) 99 550.83 T
0 F
(geode.h) 180 550.83 T
81 534.48 531 539.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 534.48 531 539.49 R
7 X
0 0 0 1 0 0 0 K
V
50 538.48 609.01 538.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 526.48 T
2 F
(GeodeFreeDriver\050\051) 99 526.48 T
3 10 Q
(void) 99 511.82 T
4 F
(GeodeFreeDriver\050) 153 511.82 T
4 9 Q
(GeodeHandle gh\051;) 153 501.48 T
(/* handle of the driver */) 279 501.48 T
0 10 Q
(This routine frees a driver geode that had been loaded with) 180 483.82 T
6 F
(GeodeUseDriver\050\051) 180 472.32 T
0 F
(. Pass it the geode handle of the driver as returned by) 273.7 472.32 T
(that routine.) 180 460.82 T
2 F
(Include:) 99 442.32 T
0 F
(driver) 180 442.32 T
(.h) 207.4 442.32 T
81 425.98 531 430.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 425.98 531 430.98 R
7 X
0 0 0 1 0 0 0 K
V
50 429.98 609.01 429.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 417.98 T
2 F
(GeodeFreeLibrary\050\051) 99 417.98 T
3 10 Q
(void) 99 403.31 T
4 F
(GeodeFreeLibrary\050) 153 403.31 T
4 9 Q
(GeodeHandle gh\051;) 153 392.98 T
(/* handle of the library */) 279 392.98 T
0 10 Q
(This routine frees a library geode that had been loaded with) 180 375.31 T
6 F
(GeodeUseLibrary\050\051) 180 363.81 T
0 F
(. Pass it the geode handle of the library) 279.44 363.81 T
(.) 459.66 363.81 T
2 F
(Include:) 99 345.31 T
0 F
(library) 180 345.31 T
(.h) 210.56 345.31 T
81 328.97 531 333.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.97 531 333.98 R
7 X
0 0 0 1 0 0 0 K
V
50 332.97 609.01 332.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 320.97 T
2 F
(GeodeGetAppObject\050\051) 99 320.97 T
3 10 Q
(optr) 99 306.3 T
4 F
(GeodeGetAppObject\050) 153 306.3 T
4 9 Q
(GeodeHandle gh\051;) 153 295.97 T
(/* handle of the application geode */) 279 295.97 T
0 10 Q
(This routine returns the optr of the speci\336ed geode\325) 180 278.3 T
(s GenApplication object.) 416.11 278.3 T
(The geode should be an application. Pass zero to get the optr of the caller) 180 266.8 T
(\325) 517.63 266.8 T
(s) 519.3 266.8 T
(application object.) 180 255.3 T
2 F
(Include:) 99 236.8 T
0 F
(geode.h) 180 236.8 T
81 220.46 531 225.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 220.46 531 225.47 R
7 X
0 0 0 1 0 0 0 K
V
50 224.46 609.01 224.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 212.46 T
2 F
(GeodeGetCodeProcessHandle\050\051) 99 212.46 T
3 10 Q
(GeodeHandle) 99 197.79 T
4 F
( GeodeGetCodeProcessHandle\050\051;) 165 197.79 T
0 F
(This routine returns the geode handle of the geode that owns the block in) 180 179.79 T
(which the code which calls this routine resides.) 180 168.29 T
2 F
(Include:) 99 149.79 T
0 F
(geode.h) 180 149.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "165" 13
%%Page: "166" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(166) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeodeGetDefaultDriver\050\051) 99 634.99 T
3 10 Q
(GeodeHandle) 99 620.33 T
4 F
( GeodeGetDefaultDriver\050) 165 620.33 T
4 9 Q
(GeodeDefaultDriverType type\051;) 153 609.99 T
(/* type of default driver to get */) 333 609.99 T
0 10 Q
(This routine returns the default driver) 180 592.33 T
(\325) 359.25 592.33 T
(s geode handle for the type passed.) 360.92 592.33 T
(The type must be one of the values of) 180 580.83 T
6 F
(GeodeDefaultDriverT) 354.47 580.83 T
(ype) 466.72 580.83 T
0 F
(, which) 485.24 580.83 T
(includes) 180 569.33 T
0 9 Q
(GDDT_FILE_SYSTEM) 221.11 569.33 T
0 10 Q
( \0500\051,) 317.96 569.33 T
0 9 Q
(GDDT_KEYBOARD) 338.52 569.33 T
0 10 Q
( \0502\051,) 423.36 569.33 T
0 9 Q
(GDDT_MOUSE) 443.92 569.33 T
0 10 Q
( \0504\051,) 510.43 569.33 T
0 9 Q
(GDDT_VIDEO) 180 557.83 T
0 10 Q
( \0506\051,) 242.17 557.83 T
0 9 Q
(GDDT_MEMOR) 262.73 557.83 T
(Y_VIDEO) 330.9 557.83 T
0 10 Q
( \0508\051,) 372.4 557.83 T
0 9 Q
(GDDT_POWER_MANAGEMENT) 180 546.33 T
0 10 Q
(\05010\051, and) 321.5 546.33 T
0 9 Q
(GDDT_T) 365.03 546.33 T
(ASK) 402.05 546.33 T
0 10 Q
(\05012\051.) 421.21 546.33 T
2 F
(Include:) 99 527.83 T
0 F
(driver) 180 527.83 T
(.h) 207.4 527.83 T
81 511.48 531 516.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 511.48 531 516.49 R
7 X
0 0 0 1 0 0 0 K
V
50 515.48 609.01 515.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 503.48 T
2 F
(GeodeGetInfo\050\051) 99 503.48 T
3 10 Q
(word) 99 488.82 T
4 F
(GeodeGetInfo\050) 153 488.82 T
4 9 Q
(GeodeHandle) 153 478.48 T
(gh,) 261 478.48 T
(/* handle of the subject geode */) 315 478.48 T
(GeodeGetInfoType) 153 468.48 T
(info,) 261 468.48 T
(/* type of information to return */) 315 468.48 T
(void) 153 458.48 T
(* buf\051;) 261 458.48 T
(/* buffer to contain returned info */) 315 458.48 T
0 10 Q
-0.03 (This routine returns information about the speci\336ed geode. The geode must) 180 440.82 P
(be loaded already) 180 429.32 T
(. The meaning of the returned word depends on the value) 260.02 429.32 T
(passed in) 180 417.82 T
5 F
(info) 226.12 417.82 T
0 F
(; the) 243.89 417.82 T
6 F
(GeodeGetInfoT) 267.23 417.82 T
(ype) 346.14 417.82 T
0 F
( is shown below) 364.66 417.82 T
(. Pass the following:) 435.98 417.82 T
5 F
(gh) 180 399.32 T
0 F
(The geode handle of the geode.) 243 399.32 T
5 F
(info) 180 381.32 T
0 F
(The type of information requested; this should be one of the) 243 381.32 T
(values listed below) 243 370.32 T
(.) 329.51 370.32 T
5 F
(buf) 180 352.32 T
0 F
-0.74 (A pointer to a locked or \336xed buffer which will contain returned) 243 352.32 P
(information for various types requested.) 243 341.32 T
6 F
(GeodeGetInfoT) 180 323.32 T
(ype) 258.91 323.32 T
0 F
( has the following enumerations \050only one may be) 277.43 323.32 T
(requested at a time\051:) 180 311.82 T
0 9 Q
(GGIT_A) 180 293.32 T
(TTRIBUTES) 214.17 293.32 T
0 10 Q
-0.17 (Get the geode\325) 243 282.32 P
-0.17 (s attributes. The return value will be a record of) 307.67 282.32 P
6 F
(GeodeAttrs) 243 271.32 T
0 F
( corresponding to those attributes set for the) 301.89 271.32 T
(geode. Pass a null buffer pointer) 243 260.32 T
(.) 391.72 260.32 T
0 9 Q
(GGIT_TYPE) 182.78 242.32 T
0 10 Q
-0.38 (Get the type of the geode. The returned value will be a value of) 243 242.32 P
6 F
(GeosFileT) 243 231.32 T
(ype) 295.06 231.32 T
0 F
( indicating the type of \336le storing the geode.) 313.58 231.32 T
(Pass a null buffer pointer) 243 220.32 T
(.) 360.05 220.32 T
0 9 Q
(GGIT_GEODE_RELEASE) 182.78 202.32 T
0 10 Q
-0.62 (Get the release number of the geode. The returned word will be) 243 191.32 P
(the size of the buffer pointed to by) 243 180.32 T
5 F
(buf) 403.38 180.32 T
0 F
(, and the buffer will) 418.38 180.32 T
(contain the) 243 169.32 T
6 F
(ReleaseNumber) 297.82 169.32 T
0 F
( structure of the geode.) 380.04 169.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "166" 14
%%Page: "167" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(167) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(GGIT_GEODE_PROTOCOL) 182.78 641.33 T
0 10 Q
(Get the protocol level of the geode. The returned word will be) 243 630.33 T
(the size of the buffer pointed to by) 243 619.33 T
5 F
(buf) 403.38 619.33 T
0 F
(, and the buffer will) 418.38 619.33 T
(contain the) 243 608.33 T
6 F
(ProtocolNumber) 297.82 608.33 T
0 F
( structure of the geode.) 384.49 608.33 T
0 9 Q
(GGIT_TOKEN_ID) 182.78 590.33 T
0 10 Q
-0.59 (Get the token identi\336er of the geode. The returned word will be) 243 579.33 P
(the size of the buffer pointed to by) 243 568.33 T
5 F
(buf) 403.38 568.33 T
0 F
(, and the buffer will) 418.38 568.33 T
(contain a) 243 557.33 T
6 F
(GeodeT) 288.38 557.33 T
(oken) 327.27 557.33 T
0 F
( structure containing the token) 352.64 557.33 T
(characters and token) 243 546.33 T
0 9 Q
(ID) 343.19 546.33 T
0 10 Q
( of the geode\325) 353.86 546.33 T
(s token.) 413.3 546.33 T
0 9 Q
(GGIT_PERM_NAME_AND_EXT) 182.78 528.33 T
0 10 Q
(Get the permanent name of the geode, with the extension) 243 517.33 T
(characters. The returned word will be the size of the buffer) 243 506.33 T
-0.5 (pointed to by) 243 495.33 P
5 F
-0.5 (buf) 304.27 495.33 P
0 F
-0.5 (, and the buffer will contain a null-terminated) 319.27 495.33 P
-0.23 (character string representing the geode\325) 243 484.33 P
-0.23 (s permanent name \050as) 426.34 484.33 P
(set in its geode parameters \336le\051. Note that the buffer must be) 243 473.33 T
(at least 13 bytes.) 243 462.33 T
0 9 Q
(GGIT_PERM_NAME_ONL) 180 444.33 T
(Y) 293 444.33 T
0 10 Q
(Get the permanent name of the geode without the extension) 243 433.33 T
(characters. The returned word will be the size of the buffer) 243 422.33 T
(pointed to by buf, and the buffer will contain the) 243 411.33 T
(null-terminated character string representing the geode\325) 243 400.33 T
(s) 503.55 400.33 T
(permanent name. The buffer must be at least nine bytes.) 243 389.33 T
2 F
(Include:) 99 371.33 T
0 F
(geode.h) 180 371.33 T
81 354.99 531 360 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 354.99 531 360 R
7 X
0 0 0 1 0 0 0 K
V
50 358.99 609.01 358.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 346.99 T
2 F
(GeodeGetOptrNS\050\051) 99 346.99 T
3 10 Q
(optr) 99 332.33 T
4 F
(GeodeGetOptrNS\050) 153 332.33 T
4 9 Q
(optr) 153 321.99 T
(obj\051;) 189 321.99 T
0 10 Q
-0.3 (This routine unrelocates an optr) 180 304.33 P
-0.3 (, changing the virtual-segment handle to an) 327.51 304.33 P
(actual global handle.) 180 292.83 T
2 F
(Include:) 99 274.33 T
0 F
(resource.h) 180 274.33 T
81 257.98 531 262.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 257.98 531 262.99 R
7 X
0 0 0 1 0 0 0 K
V
50 261.98 609.01 261.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 249.98 T
2 F
(GeodeGetProcessHandle\050\051) 99 249.98 T
3 10 Q
(GeodeHandle) 99 235.32 T
4 F
( GeodeGetProcessHandle\050\051;) 165 235.32 T
0 F
(This routine returns the geode handle of the current executing process \050i.e.) 180 217.32 T
-0.3 (the owner of the current running thread\051. Use it when you need to pass your) 180 205.82 P
-0.33 (application\325) 180 194.32 P
-0.33 (s geode handle or Process object\325) 233.16 194.32 P
-0.33 (s handle to a routine or message.) 380.57 194.32 P
2 F
(Include:) 99 175.82 T
0 F
(geode.h) 180 175.82 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "167" 15
%%Page: "168" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(168) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeodeGetUIData\050\051) 99 634.99 T
3 10 Q
(word) 99 620.33 T
4 F
(GeodeGetUIData\050) 153 620.33 T
4 9 Q
(GeodeHandle) 153 609.99 T
(gh\051;) 261 609.99 T
2 10 Q
(Include:) 99 592.33 T
0 F
(geode.h) 180 592.33 T
81 575.98 531 580.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 575.98 531 580.99 R
7 X
0 0 0 1 0 0 0 K
V
50 579.98 609.01 579.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 567.98 T
2 F
(GeodeInfoDriver\050\051) 99 567.98 T
3 10 Q
(DriverInfoStruct) 99 553.32 T
4 F
(  * GeodeInfoDriver\050) 195 553.32 T
4 9 Q
(GeodeHandle gh\051;) 153 542.98 T
( /* handle of the driver to get information about */) 239.4 542.98 T
0 10 Q
(This routine returns information about the speci\336ed driver geode. Pass the) 180 525.32 T
(geode handle of the driver as returned by) 180 513.82 T
6 F
(GeodeUseDriver\050\051) 373.34 513.82 T
0 F
(. It returns a) 467.04 513.82 T
(pointer to a) 180 502.32 T
6 F
(DriverInfoStruct) 236.12 502.32 T
0 F
( structure, shown below) 324.46 502.32 T
(.) 433.73 502.32 T
4 9 Q
(typedef struct {) 216 487.48 T
(void) 237.6 477.48 T
(\050*DIS_strategy\051\050\051;) 324 477.48 T
(DriverAttrs) 237.6 467.48 T
(DIS_driverAttributes;) 324 467.48 T
(DriverType) 237.6 457.48 T
(DIS_driverType;) 324 457.48 T
(} DriverInfoStruct;) 216 447.48 T
0 10 Q
(For full information on this structure, see the) 180 429.82 T
6 F
(DriverInfoStruct) 392.97 429.82 T
0 F
( reference) 481.31 429.82 T
(entry) 180 418.32 T
(.) 203.7 418.32 T
2 F
(Include:) 99 399.82 T
0 F
(driver) 180 399.82 T
(.h) 207.4 399.82 T
81 383.48 531 388.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 383.48 531 388.48 R
7 X
0 0 0 1 0 0 0 K
V
50 387.48 609.01 387.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 375.48 T
2 F
(GeodeInfoQueue\050\051) 99 375.48 T
3 10 Q
(word) 99 360.81 T
4 F
(GeodeInfoQueue\050) 153 360.81 T
4 9 Q
(QueueHandle qh\051;) 153 350.48 T
(/* queue to query */) 279 350.48 T
0 10 Q
(This routine returns information about a speci\336c event queue. Pass the) 180 332.81 T
-0.48 (handle of the queue; for information about the current process\325 queue, pass a) 180 321.31 P
(null handle. This routine returns the number of events \050or messages\051) 180 309.81 T
(currently in the queue.) 180 298.31 T
2 F
(Include:) 99 279.81 T
0 F
(geode.h) 180 279.81 T
81 263.47 531 268.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.47 531 268.47 R
7 X
0 0 0 1 0 0 0 K
V
50 267.47 609.01 267.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.47 T
2 F
(GeodeLoad\050\051) 99 255.47 T
3 10 Q
(GeodeHandle) 99 240.8 T
4 F
( GeodeLoad\050) 165 240.8 T
4 9 Q
(const char *) 153 230.47 T
(name,) 261 230.47 T
(/* file name of geode */) 333 230.47 T
(GeodeAttrs) 153 220.47 T
(attrMatch,) 261 220.47 T
(/* GeodeAttrs that must be set */) 333 220.47 T
(GeodeAttrs) 153 210.47 T
(attrNoMatch,) 261 210.47 T
(/* GeodeAttrs that must be clear */) 333 210.47 T
(word) 153 200.47 T
(priority,) 261 200.47 T
(/* priority of the loaded geode */) 333 200.47 T
(dword) 153 190.47 T
(appInfo,) 261 190.47 T
(/* special load information */) 333 190.47 T
(GeodeLoadError *) 153 180.47 T
(err\051;) 261 180.47 T
(/* returned error value */) 333 180.47 T
0 10 Q
(This routine loads the speci\336ed geode from the given \336le and then executes) 180 162.8 T
(the geode based on its type. It returns the geode handle of the loaded geode) 180 151.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "168" 16
%%Page: "169" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(169) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
-0.13 (if successful; if unsuccessful, the returned value will be NullHandle and the) 180 641.33 P
5 F
(err) 180 629.83 T
0 F
( pointer will point to an error value. Pass this routine the following:) 193.32 629.83 T
5 F
(name) 180 611.33 T
0 F
(A pointer to the name of the geode\325) 243 611.33 T
(s \336le. This is a) 403.57 611.33 T
(null-terminated character string that represents the full path) 243 600.33 T
(of the \336le \050or a path relative to the current working directory\051.) 243 589.33 T
5 F
(attrMatch) 180 571.33 T
0 F
-0.51 (A record of) 243 571.33 P
6 F
-0.52 (GeodeAttrs) 294.43 571.33 P
0 F
-0.51 ( that must be set in the speci\336ed geode) 353.32 571.33 P
(for the load to be successful.) 243 560.33 T
5 F
(attrNoMatch) 180 542.33 T
0 F
(A record of) 243 531.33 T
6 F
(GeodeAttrs) 295.95 531.33 T
0 F
( that must be cleared in the speci\336ed) 354.84 531.33 T
(geode for the load to be successful. \050That is, each bit which is) 243 520.33 T
(set in) 243 509.33 T
5 F
(attrNoMatch) 271.34 509.33 T
0 F
( must be clear in the geode\325) 330.96 509.33 T
(s) 456.35 509.33 T
6 F
(GeodeAttrs) 463.76 509.33 T
0 F
(\336eld.\051) 243 498.33 T
5 F
(priority) 180 480.33 T
0 F
-0.46 (If the subject geode is a process, this is the priority at which its) 243 480.33 P
(process thread will run.) 243 469.33 T
5 F
(appInfo) 180 451.33 T
0 F
-0.66 (T) 243 451.33 P
-0.66 (wo words of data to be passed directly to the loaded geode. For) 248.96 451.33 P
(libraries and drivers, this should be a far pointer to a) 243 440.33 T
(null-terminated string of parameters.) 243 429.33 T
5 F
(err) 180 411.33 T
0 F
(A pointer to an empty) 243 411.33 T
6 F
(GeodeLoadError) 346.9 411.33 T
0 F
( which will hold any) 434.87 411.33 T
(returned error values.) 243 400.33 T
2 F
(W) 99 382.33 T
(arnings:) 108.07 382.33 T
0 F
-0.5 (If you load a geode dynamically with) 180 382.33 P
6 F
-0.52 (GeodeLoad\050\051) 348.38 382.33 P
0 F
-0.5 (, you must be sure to free) 414.86 382.33 P
(it when you are done with) 180 369.33 T
6 F
(GeodeFree\050\051) 302.98 369.33 T
0 F
(.) 367.24 369.33 T
2 F
(Include:) 99 349.33 T
0 F
(geode.h) 180 349.33 T
2 F
(See Also:) 99 329.33 T
6 F
(UserLoadApplication\050\051) 180 329.33 T
81 312.99 531 318 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 312.99 531 318 R
7 X
0 0 0 1 0 0 0 K
V
50 316.99 609.01 316.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 304.99 T
2 F
(GeodeLoadDGroup) 99 304.99 T
3 10 Q
(void) 99 290.33 T
4 F
(GeodeLoadDGroup\050) 153 290.33 T
4 9 Q
(MemHandle) 153 279.99 T
(mh\051;) 261 279.99 T
0 10 Q
(This routine forces the) 180 262.33 T
6 F
(dgroup) 287.22 262.33 T
0 F
( segment into the data-segment register) 324.82 262.33 T
(.) 508.91 262.33 T
2 F
(Include:) 99 243.83 T
0 F
(resource.h) 180 243.83 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "169" 17
%%Page: "170" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(170) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeodePrivAlloc\050\051) 99 634.99 T
3 10 Q
(word) 99 620.33 T
4 F
(GeodePrivAlloc\050) 153 620.33 T
4 9 Q
(GeodeHandle) 153 609.99 T
(gh,) 261 609.99 T
(/* handle of the owner of the) 333 609.99 T
( * newly-allocated private data */) 315 599.99 T
(word) 153 589.99 T
(numWords\051;) 261 589.99 T
(/* number of words to allocate */) 333 589.99 T
0 10 Q
-0.5 (This routine allocates a string of contiguous words in all geodes\325 private data) 180 572.33 P
-0.21 (areas; each set of words will be owned by the geode speci\336ed in) 180 560.83 P
5 F
-0.21 (gh) 470.49 560.83 P
0 F
-0.21 (. The data) 481.97 560.83 P
(allocated can be accessed with) 180 549.33 T
6 F
(GeodePrivW) 322.43 549.33 T
(rite\050\051) 386.87 549.33 T
0 F
( and) 413.54 549.33 T
6 F
(GeodePrivRead\050\051) 436.51 549.33 T
0 F
(and must be freed with) 180 537.83 T
6 F
(GeodePrivFree\050\051) 289.83 537.83 T
0 F
(. The return value will be the) 376.68 537.83 T
(offset to the start of the allocated range, or zero if the routine could not) 180 526.33 T
(allocate the space.) 180 514.83 T
(Each geode has a block of private data the is accessed using the) 180 496.33 T
6 F
(GeodePriv\311\050\051) 180 484.83 T
0 F
( routines. A speci\336c geode\325) 252.96 484.83 T
(s private data block is expanded) 373.7 484.83 T
(only when a valid) 180 473.33 T
6 F
(GeodePrivW) 264.28 473.33 T
(rite\050\051) 328.72 473.33 T
0 F
( is performed for the geode. Space is) 355.39 473.33 T
(\322allocated\323 in the data blocks of all geodes \050loaded or yet-to-be loaded\051) 180 461.83 T
(simultaneously via a call to) 180 450.33 T
6 F
(GeodePrivAlloc\050\051) 309.48 450.33 T
0 F
(. Data that have never been) 398.74 450.33 T
(written are returned as all zeros.) 180 438.83 T
2 F
(Include:) 99 420.33 T
0 F
(geode.h) 180 420.33 T
81 403.98 531 408.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 403.98 531 408.99 R
7 X
0 0 0 1 0 0 0 K
V
50 407.98 609.01 407.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 395.98 T
2 F
(GeodePrivFree\050\051) 99 395.98 T
3 10 Q
(void) 99 381.32 T
4 F
(GeodePrivFree\050) 153 381.32 T
4 9 Q
(word) 153 370.98 T
(offset,) 189 370.98 T
(/* offset returned by GeodePrivAlloc\050\051 */) 279 370.98 T
(word) 153 360.98 T
(numWords\051;) 189 360.98 T
(/* number of words to free */) 279 360.98 T
0 10 Q
(This routine frees a group of contiguous words from all geodes\325 private data) 180 343.32 T
(areas. The space must previously have been allocated with) 180 331.82 T
6 F
(GeodePrivAlloc\050\051) 180 320.32 T
0 F
(. Pass the offset to the words as returned by) 269.26 320.32 T
6 F
(GeodePrivAlloc\050\051) 180 308.82 T
0 F
( as well as the number of words to be freed.) 269.26 308.82 T
2 F
(Include:) 99 290.32 T
0 F
(geode.h) 180 290.32 T
81 273.98 531 278.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 273.98 531 278.98 R
7 X
0 0 0 1 0 0 0 K
V
50 277.98 609.01 277.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 265.97 T
2 F
(GeodePrivRead\050\051) 99 265.97 T
3 10 Q
(void) 99 251.31 T
4 F
(GeodePrivRead\050) 153 251.31 T
4 9 Q
(GeodeHandle) 153 240.97 T
(gh,) 261 240.97 T
(/* handle of owner of private data */) 315 240.97 T
(word) 153 230.97 T
(offset,) 261 230.97 T
(/* offset returned by) 315 230.97 T
( * GeodePrivAlloc\050\051 */) 297 220.97 T
(word) 153 210.97 T
(numWords,) 261 210.97 T
(/* number of words to read */) 315 210.97 T
(word) 153 200.97 T
(* dest\051;) 261 200.97 T
(/* pointer to buffer into which data) 315 200.97 T
( * will be copied */) 297 190.97 T
0 10 Q
(This routine reads a number of words from the geode\325) 180 173.31 T
(s private data area.) 426.68 173.31 T
(Pass the following:) 180 161.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "170" 18
%%Page: "171" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(171) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
5 10 Q
0 X
(gh) 180 641.33 T
0 F
(The geode handle of the owner of the private data to be read.) 243 641.33 T
5 F
(offset) 180 623.33 T
0 F
(The offset to the private data as returned by) 243 623.33 T
6 F
(GeodePrivAlloc\050\051) 243 612.33 T
0 F
(.) 332.26 612.33 T
5 F
(numW) 180 594.33 T
(ords) 209.63 594.33 T
0 F
(The number of words to read.) 243 594.33 T
5 F
(dest) 180 576.33 T
0 F
-0.84 (A pointer to a locked or \336xed buffer into which the words should) 243 576.33 P
(be read. It must be at least) 243 565.33 T
5 F
(numW) 370.26 565.33 T
(ords) 399.89 565.33 T
0 F
( words long.) 419.88 565.33 T
2 F
(Include:) 99 547.33 T
0 F
(geode.h) 180 547.33 T
81 530.99 531 536 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 530.99 531 536 R
7 X
0 0 0 1 0 0 0 K
V
50 534.99 609.01 534.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 522.99 T
2 F
(GeodePrivW) 99 522.99 T
(rite\050\051) 170.14 522.99 T
3 10 Q
(void) 99 508.33 T
4 F
(GeodePrivWrite\050) 153 508.33 T
4 9 Q
(GeodeHandle) 153 497.99 T
(gh,) 261 497.99 T
(/* handle of owner of private data */) 315 497.99 T
(word) 153 487.99 T
(offset,) 261 487.99 T
(/* offset returned by) 315 487.99 T
( * GeodePrivAlloc\050\051 */) 315 477.99 T
(word) 153 467.99 T
(numWords,) 261 467.99 T
(/* number of words to be written */) 315 467.99 T
(word) 153 457.99 T
(* src\051;) 261 457.99 T
(/* buffer containing data */) 315 457.99 T
0 10 Q
(This routine writes a number of words into a geode\325) 180 440.33 T
(s private data area. The) 417.25 440.33 T
(area being written must have been allocated previously with) 180 428.83 T
6 F
(GeodePrivAlloc\050\051) 180 417.33 T
0 F
(. Pass the following:) 269.26 417.33 T
5 F
(gh) 180 398.83 T
0 F
(The geode handle of the owner of the private data space.) 243 398.83 T
5 F
(offset) 180 380.83 T
0 F
(The offset to begin writing to, as returned by) 243 380.83 T
6 F
(GeodePrivAlloc\050\051) 243 369.83 T
0 F
(.) 332.26 369.83 T
5 F
(numW) 180 351.83 T
(ords) 209.63 351.83 T
0 F
(The number of words to be written. This should be no more) 243 351.83 T
(than had been previously allocated.) 243 340.83 T
5 F
(src) 180 322.83 T
0 F
-0.41 (A pointer to the locked or \336xed buffer containing the data to be) 243 322.83 P
(written.) 243 311.83 T
2 F
(Include:) 99 293.83 T
0 F
(geode.h) 180 293.83 T
81 277.48 531 282.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 277.48 531 282.49 R
7 X
0 0 0 1 0 0 0 K
V
50 281.48 609.01 281.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 269.48 T
2 F
(GeodeSetDefaultDriver\050\051) 99 269.48 T
3 10 Q
(void) 99 254.82 T
4 F
(GeodeSetDefaultDriver\050) 153 254.82 T
4 9 Q
(GeodeDefaultDriverType) 153 244.48 T
(type,) 279 244.48 T
(/* type of default driver to set */) 315 244.48 T
(GeodeHandle) 153 234.48 T
(gh\051;) 279 234.48 T
(/* driver to set as the default */) 315 234.48 T
0 10 Q
(This routine sets the default driver for the indicated driver type. Pass the) 180 216.82 T
-0.81 (type of default driver in) 180 205.32 P
5 F
-0.81 (type) 288.34 205.32 P
0 F
-0.81 ( and the handle of the driver in) 307.04 205.32 P
5 F
-0.81 (gh) 447.58 205.32 P
0 F
-0.81 (. The type must) 459.06 205.32 P
(be a value of) 180 193.82 T
6 F
(GeodeDefaultDriverT) 240.76 193.82 T
(ype) 353.01 193.82 T
0 F
(, which includes) 371.53 193.82 T
0 9 Q
(GDDT_FILE_SYSTEM) 180 182.32 T
0 10 Q
( \0500\051,) 276.85 182.32 T
0 9 Q
(GDDT_KEYBOARD) 297.41 182.32 T
0 10 Q
( \0502\051,) 382.25 182.32 T
0 9 Q
(GDDT_MOUSE) 402.81 182.32 T
0 10 Q
( \0504\051,) 469.32 182.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "171" 19
%%Page: "172" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(172) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(GDDT_VIDEO) 180 641.33 T
0 10 Q
( \0506\051,) 242.17 641.33 T
0 9 Q
(GDDT_MEMOR) 262.73 641.33 T
(Y_VIDEO) 330.9 641.33 T
0 10 Q
( \0508\051,) 372.4 641.33 T
0 9 Q
(GDDT_POWER_MANAGEMENT) 180 629.83 T
0 10 Q
(\05010\051,) 321.5 629.83 T
0 9 Q
(GDDT_T) 344.84 629.83 T
(ASK) 381.86 629.83 T
0 10 Q
(\05012\051.) 401.02 629.83 T
2 F
(Include:) 99 611.33 T
0 F
(driver) 180 611.33 T
(.h) 207.4 611.33 T
81 594.99 531 600 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 594.99 531 600 R
7 X
0 0 0 1 0 0 0 K
V
50 598.99 609.01 598.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 586.99 T
2 F
(GeodeSetUIData\050\051) 99 586.99 T
3 10 Q
(void) 99 572.33 T
4 F
(GeodeSetUIData\050) 153 572.33 T
4 9 Q
(GeodeHandle) 153 561.99 T
(gh,) 261 561.99 T
(word) 153 551.99 T
(data\051) 261 551.99 T
81 537.98 531 542.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.98 531 542.99 R
7 X
0 0 0 1 0 0 0 K
V
50 541.98 609.01 541.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.98 T
2 F
(GeodeUseDriver\050\051) 99 529.98 T
3 10 Q
(GeodeHandle) 99 515.32 T
4 F
( GeodeUseDriver\050) 165 515.32 T
4 9 Q
(const) 153 504.98 T
(char) 189 504.98 T
(* name,) 261 504.98 T
(/* file name of driver to load */) 333 504.98 T
(word) 153 494.98 T
(protoMajor,) 261 494.98 T
(/* expected major protocol */) 333 494.98 T
(word) 153 484.98 T
(protoMinor,) 261 484.98 T
(/* expected minor protocol */) 333 484.98 T
(GeodeLoadError) 153 474.98 T
(* err\051;) 261 474.98 T
(/* pointer to returned error */) 333 474.98 T
0 10 Q
-0.41 (This routine dynamically loads a driver geode given the driver) 180 457.32 P
-0.41 (\325) 464.66 457.32 P
-0.41 (s \336le name. It) 466.33 457.32 P
-0.72 (returns the geode handle of the driver if successful; if unsuccessful, it returns) 180 445.82 P
(an error code of type) 180 434.32 T
6 F
(GeodeLoadError) 277.4 434.32 T
0 F
( pointed to by) 365.37 434.32 T
5 F
(err) 430.94 434.32 T
0 F
(. Pass this routine) 443.52 434.32 T
(the following:) 180 422.82 T
5 F
(name) 180 404.32 T
0 F
(A pointer to the driver) 243 404.32 T
(\325) 347.25 404.32 T
(s null-terminated full path and \336le) 348.92 404.32 T
(name.) 243 393.32 T
5 F
(protoMajor) 180 375.32 T
0 F
-0.06 (The expected major protocol of the driver) 243 375.32 P
-0.06 (. If zero, any protocol) 431.5 375.32 P
(is acceptable.) 243 364.32 T
5 F
(protoMinor) 180 346.32 T
0 F
(The expected minor protocol of the driver) 243 346.32 T
(.) 432.62 346.32 T
5 F
(err) 180 328.32 T
0 F
(A pointer to a) 243 328.32 T
6 F
(GeodeLoadError) 309.12 328.32 T
0 F
( in which any error values) 397.09 328.32 T
(will be returned.) 243 317.32 T
2 F
(T) 99 299.32 T
(ips and T) 104.93 299.32 T
(ricks:) 148.28 299.32 T
0 F
(It is much easier to automatically load the drivers you need by noting them) 180 299.32 T
(in your geode parameters \336le.) 180 286.32 T
2 F
(Be Sure T) 99 266.32 T
(o:) 144.94 266.32 T
0 F
(If you use) 180 266.32 T
6 F
(GeodeUseDriver\050\051) 227.96 266.32 T
0 F
( to dynamically load a driver) 321.66 266.32 T
(, you must also) 453.35 266.32 T
(use) 180 253.32 T
6 F
(GeodeFreeDriver\050\051) 198.52 253.32 T
0 F
( to free it when you are done using it.) 297.04 253.32 T
2 F
(Include:) 99 233.32 T
0 F
(driver) 180 233.32 T
(.h) 207.4 233.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "172" 20
%%Page: "173" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(173) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeodeUseLibrary\050\051) 99 634.99 T
3 10 Q
(GeodeHandle) 99 620.33 T
4 F
( GeodeUseLibrary\050) 165 620.33 T
4 9 Q
(const char) 153 609.99 T
( *) 207 609.99 T
(name,) 261 609.99 T
(/* file name of library to load */) 333 609.99 T
(word) 153 599.99 T
(protoMajor,) 261 599.99 T
(/* expected major protocol */) 333 599.99 T
(word) 153 589.99 T
(protoMinor,) 261 589.99 T
(/* expected minor protocol */) 333 589.99 T
(GeodeLoadError *) 153 579.99 T
(err\051;) 261 579.99 T
(/* pointer to returned error */) 333 579.99 T
0 10 Q
(This routine dynamically loads a library geode when given the library\325) 180 562.33 T
(s \336le) 504.31 562.33 T
-0.27 (name. \050The library must be in the thread\325) 180 550.83 P
-0.27 (s working directory) 369.46 550.83 P
-0.27 (.\051 It returns the) 457.26 550.83 P
-0.39 (geode handle of the loaded library if successful; if unsuccessful, it returns an) 180 539.33 P
(error code \050) 180 527.83 T
6 F
(GeodeLoadError) 232.39 527.83 T
0 F
(\051 pointed to by) 320.36 527.83 T
5 F
(err) 389.26 527.83 T
0 F
(. Pass this routine the) 401.84 527.83 T
(following parameters:) 180 516.33 T
5 F
(name) 180 497.83 T
0 F
(A pointer to the library\325) 243 497.83 T
(s null-terminated \336le name.) 351.9 497.83 T
5 F
(protoMajor) 180 479.83 T
0 F
-0.35 (The expected major protocol of the library) 243 479.83 P
-0.35 (. If zero, any protocol) 432.94 479.83 P
(is acceptable.) 243 468.83 T
5 F
(protoMinor) 180 450.83 T
0 F
(The expected minor protocol of the library) 243 450.83 T
(.) 435.78 450.83 T
5 F
(err) 180 432.83 T
0 F
(A pointer to a) 243 432.83 T
6 F
(GeodeLoadError) 309.12 432.83 T
0 F
( which will contain any) 397.09 432.83 T
(returned error values.) 243 421.83 T
2 F
(Be Sure T) 99 403.83 T
(o:) 144.94 403.83 T
0 F
(If you dynamically load a library with) 180 403.83 T
6 F
(GeodeUseLibrary\050\051) 357.44 403.83 T
0 F
(, you must) 456.88 403.83 T
(manually free it when \336nished, with) 180 390.83 T
6 F
(GeodeFreeLibrary\050\051) 350.95 390.83 T
0 F
(.) 455.21 390.83 T
2 F
(Include:) 99 370.83 T
0 F
(library) 180 370.83 T
(.h) 210.56 370.83 T
81 354.48 531 359.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 354.48 531 359.49 R
7 X
0 0 0 1 0 0 0 K
V
50 358.48 609.01 358.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 346.48 T
2 F
(GeoFree\050\051) 99 346.48 T
3 10 Q
(void) 99 331.82 T
4 F
(* GeoFree\050) 153 331.82 T
4 9 Q
(void) 153 321.48 T
(* blockPtr,) 261 321.48 T
(/* address of memory to free */) 333 321.48 T
(GeodeHandle) 153 311.48 T
(geodeHan\051;) 261 311.48 T
(/* owner of block to be used */) 333 311.48 T
0 10 Q
-0.23 (The routine) 180 293.82 P
6 F
-0.24 (malloc\050\051) 236.58 293.82 P
0 F
-0.23 ( can free only memory in the malloc-block belonging to) 278.81 293.82 P
-0.74 (the calling geode. If you want to free memory in another geode\325) 180 282.32 P
-0.74 (s malloc-block,) 461.9 282.32 P
(call) 180 270.82 T
6 F
(GeoFree\050\051) 199.08 270.82 T
0 F
(. Passing a null) 250.93 270.82 T
6 F
(GeodeHandle) 325.03 270.82 T
0 F
( will make) 395.21 270.82 T
6 F
(GeoMalloc\050\051) 446.16 270.82 T
0 F
( act) 508.75 270.82 T
(on memory in the calling geode\325) 180 259.32 T
(s malloc-block.) 325.57 259.32 T
2 F
(Include:) 99 240.82 T
0 F
(geode.h) 180 240.82 T
2 F
(W) 99 220.82 T
(arnings:) 108.07 220.82 T
0 F
-0.53 (Pass exactly the same address as the one returned to you when you allocated) 180 220.82 P
(the memory) 180 207.82 T
(. If you pass a different address,) 234.26 207.82 T
6 F
(GeoFree\050\051) 385.01 207.82 T
0 F
( will take) 436.86 207.82 T
(unpredictable actions, including possibly erasing other memory or crashing) 180 194.82 T
(the system.) 180 181.82 T
2 F
(See Also:) 99 161.82 T
0 F
(free\050\051) 180 161.82 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "173" 21
%%Page: "174" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(174) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GeoMalloc\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(* GeoMalloc\050) 153 620.33 T
4 9 Q
(size_t) 153 609.99 T
(blockSize,) 261 609.99 T
(/* # of bytes to allocate*/) 333 609.99 T
(GeodeHandle) 153 599.99 T
(geodeHan,) 261 599.99 T
(/* Owner of block to be used */) 333 599.99 T
(word) 153 589.99 T
(zeroInit\051;) 261 589.99 T
(/* Zero-initialize memory? */) 333 589.99 T
0 10 Q
(The routine) 180 572.33 T
6 F
(malloc\050\051) 237.04 572.33 T
0 F
( automatically allocates memory in the malloc-block) 279.27 572.33 T
(belonging to the calling geode. It does not zero-initialize the memory) 180 560.83 T
(. If you) 494.84 560.83 T
(want to zero-initialize the memory) 180 549.33 T
(, or want to allocate it in another geode\325) 338.53 549.33 T
(s) 521.16 549.33 T
(malloc-block, call) 180 537.83 T
6 F
(GeoMalloc\050\051) 262.24 537.83 T
0 F
(. Pass) 324.83 537.83 T
5 F
(true) 354.66 537.83 T
0 F
( \050i.e., non-zero\051 in) 373.17 537.83 T
5 F
(zeroInit) 456.5 537.83 T
0 F
( to) 492.04 537.83 T
(zero-initialize the memory) 180 526.33 T
(.) 300.74 526.33 T
-0.07 (Passing a null) 180 507.83 P
6 F
-0.07 (GeodeHandle) 248.32 507.83 P
0 F
-0.07 ( will make) 318.5 507.83 P
6 F
-0.07 (GeoMalloc\050\051) 369.24 507.83 P
0 F
-0.07 ( allocate the memory) 431.83 507.83 P
(in the calling geode\325) 180 496.33 T
(s malloc-block. If \322zeroInit\323 is true, the memory will be) 271.31 496.33 T
(initialized to null bytes; otherwise, the memory will be left uninitialized.) 180 484.83 T
2 F
(Include:) 99 466.33 T
0 F
(geode.h) 180 466.33 T
2 F
(W) 99 446.33 T
(arnings:) 108.07 446.33 T
0 F
(All memory allocated with) 180 446.33 T
6 F
(malloc\050\051) 304.65 446.33 T
0 F
( is freed when) 346.88 446.33 T
0 9 Q
(GEOS) 414.29 446.33 T
0 10 Q
( shuts down.) 440.46 446.33 T
2 F
(See Also:) 99 426.33 T
0 F
(malloc\050\051) 180 426.33 T
81 409.98 531 414.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 409.98 531 414.99 R
7 X
0 0 0 1 0 0 0 K
V
50 413.98 609.01 413.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 401.98 T
2 F
(GeoReAlloc\050\051) 99 401.98 T
3 10 Q
(void) 99 387.32 T
4 F
(* GeoReAlloc\050) 153 387.32 T
4 9 Q
(void) 153 376.98 T
(* blockPtr,) 261 376.98 T
(/* address of memory to resize */) 333 376.98 T
(size_t) 153 366.98 T
(newSize,) 261 366.98 T
(/* New size in bytes */) 333 366.98 T
(GeodeHandle) 153 356.98 T
(geodeHan\051;) 261 356.98 T
(/* Owner of block to be used */) 333 356.98 T
0 10 Q
-0.15 (The routine) 180 339.32 P
6 F
-0.15 (realloc\050\051) 236.74 339.32 P
0 F
-0.15 ( can resize only memory in the malloc-block belonging) 280.27 339.32 P
(to the calling geode. If you want to resize memory in another geode\325) 180 327.82 T
(s) 490.95 327.82 T
(malloc-block, call) 180 316.32 T
6 F
(GeoReAlloc\050\051) 262.24 316.32 T
0 F
(. Passing a null) 330.39 316.32 T
6 F
(GeodeHandle) 404.49 316.32 T
0 F
( will make) 474.67 316.32 T
6 F
(GeoReAlloc\050\051) 180 304.82 T
0 F
( act on memory in the calling geode\325) 248.15 304.82 T
(s malloc-block.) 413.17 304.82 T
(If the block is resized larger) 180 286.32 T
(, the new memory will not be zero-initialized.) 308.15 286.32 T
-0.2 (Resizing a block smaller will never fail. If) 180 274.82 P
6 F
-0.2 (GeoReAlloc\050\051) 373.08 274.82 P
0 F
-0.2 ( fails, it will return) 441.23 274.82 P
(a null pointer \050zero\051. If you pass a) 180 263.32 T
5 F
(newSize) 338.34 263.32 T
0 F
( of zero, the passed block pointer) 375.74 263.32 T
(is freed and the return pointer is a null pointer) 180 251.82 T
(.) 396.49 251.82 T
2 F
(Include:) 99 233.32 T
0 F
(geode.h) 180 233.32 T
2 F
(W) 99 213.32 T
(arnings:) 108.07 213.32 T
0 F
-0.53 (Pass exactly the same address as the one returned to you when you allocated) 180 213.32 P
(the memory) 180 200.32 T
(. If you pass a different address,) 234.26 200.32 T
6 F
(GeoReAlloc\050\051) 385.01 200.32 T
0 F
( will take) 453.16 200.32 T
(unpredictable actions, including possibly erasing other memory or crashing) 180 187.32 T
(the system.) 180 174.32 T
2 F
(See Also:) 99 154.32 T
0 F
(realloc\050\051) 180 154.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "174" 22
%%Page: "175" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(175) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrApplyRotation\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrApplyRotation\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to alter */) 315 609.99 T
(WWFixedAsDWord) 153 599.99 T
(angle\051;) 261 599.99 T
(/* degrees counterclockwise */) 315 599.99 T
0 10 Q
(Apply a rotation to the GState\325) 180 582.33 T
(s transformation matrix.) 321.7 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrApplyScale\050\051) 99 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrApplyScale\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* GState to alter */) 315 514.48 T
(WWFixedAsDWord) 153 504.48 T
(xScale,) 261 504.48 T
(/* new x scale factor */) 315 504.48 T
(WWFixedAsDWord) 153 494.48 T
(yScale\051;) 261 494.48 T
(/* new y scale factor */) 315 494.48 T
0 10 Q
(Apply a scale factor to the GState\325) 180 476.82 T
(s transformation matrix.) 336.88 476.82 T
2 F
(Include:) 99 458.32 T
6 F
(graphics.h) 180 458.32 T
81 441.98 531 446.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 441.98 531 446.98 R
7 X
0 0 0 1 0 0 0 K
V
50 445.98 609.01 445.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 433.98 T
2 F
(GrApplyT) 99 433.98 T
(ransform\050\051) 153.01 433.98 T
3 10 Q
(void) 99 419.31 T
4 F
(GrApplyTransform\050) 153 419.31 T
4 9 Q
(GStateHandle) 153 408.98 T
(gstate,) 261 408.98 T
(/* GState to draw to */) 315 408.98 T
(const TransMatrix) 153 398.98 T
(*tm\051;) 261 398.98 T
(/* transformation matrix to apply */) 315 398.98 T
0 10 Q
-0.34 (Apply a transformation, expressed as a transformation matrix, to a GState\325) 180 381.31 P
-0.34 (s) 523.92 381.31 P
(coordinate system.) 180 369.81 T
2 F
(Include:) 99 351.31 T
6 F
(graphics.h) 180 351.31 T
81 334.97 531 339.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 334.97 531 339.98 R
7 X
0 0 0 1 0 0 0 K
V
50 338.97 609.01 338.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 326.97 T
2 F
(GrApplyT) 99 326.97 T
(ranslation\050\051) 153.01 326.97 T
3 10 Q
(void) 99 312.3 T
4 F
(GrApplyTranslation\050) 153 312.3 T
4 9 Q
(GStateHandle) 153 301.97 T
(gstate,) 261 301.97 T
(/* GState to alter */) 315 301.97 T
(WWFixedAsDWord) 153 291.97 T
(xTrans,) 261 291.97 T
(/* translation in x */) 315 291.97 T
(WWFixedAsDWord) 153 281.97 T
(yTrans\051;) 261 281.97 T
(/* translation in y */) 315 281.97 T
0 10 Q
(Apply a translation to the GState.) 180 264.3 T
2 F
(Include:) 99 245.8 T
6 F
(graphics.h) 180 245.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "175" 23
%%Page: "176" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(176) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrApplyT) 99 634.99 T
(ranslationDW) 153.01 634.99 T
(ord\050\051) 230.14 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrApplyTranslationDWord\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to alter */) 315 609.99 T
(sdword) 153 599.99 T
(xTrans,) 261 599.99 T
(/* extended translation in x */) 315 599.99 T
(sdword) 153 589.99 T
(yTrans\051;) 261 589.99 T
(/* extended translation in y */) 315 589.99 T
0 10 Q
(Apply a 32-bit integer extended translation to the GState.) 180 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
81 537.48 531 542.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.48 531 542.49 R
7 X
0 0 0 1 0 0 0 K
V
50 541.48 609.01 541.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.48 T
2 F
(GrBeginPath\050\051) 99 529.48 T
3 10 Q
(void) 99 514.82 T
4 F
(GrBeginPath\050) 153 514.82 T
4 9 Q
(GStateHandle) 153 504.48 T
(gstate,) 261 504.48 T
(/* GState to alter */) 315 504.48 T
(PathCombineType) 153 494.48 T
(params\051;) 261 494.48 T
(/* path parameters */) 315 494.48 T
0 10 Q
(Starts or alters the path associated with a GState. All graphics operations) 180 476.82 T
(that are executed until) 180 465.32 T
6 F
(GrEndPath\050\051) 288.53 465.32 T
0 F
( is called become part of the path.) 355.75 465.32 T
-0.69 (Depending on the value of the) 180 446.82 P
5 F
-0.69 (params) 317.18 446.82 P
0 F
-0.69 ( \336eld, the new path may replace the old) 352.17 446.82 P
(path, or may be combined with the old path by intersection or union.) 180 435.32 T
2 F
(Include:) 99 416.82 T
6 F
(graphics.h) 180 416.82 T
81 400.48 531 405.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 400.48 531 405.48 R
7 X
0 0 0 1 0 0 0 K
V
50 404.48 609.01 404.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 392.48 T
2 F
(GrBeginUpdate\050\051) 99 392.48 T
3 10 Q
(void) 99 377.81 T
4 F
(GrBeginUpdate\050) 153 377.81 T
4 9 Q
(GStateHandle gstate\051;) 153 367.48 T
(/* GState to draw to */) 279 367.48 T
0 10 Q
(Called by an application to signal that it is about to begin updating the) 180 349.81 T
(exposed region. This routine is normally called as part of a) 180 338.31 T
0 9 Q
(MSG_MET) 180 326.81 T
(A_EXPOSED) 226.17 326.81 T
0 10 Q
( handler) 282.18 326.81 T
(. Blanks out the invalid area.) 320.33 326.81 T
2 F
(Include:) 99 308.31 T
0 F
(win.h) 180 308.31 T
81 291.97 531 296.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 291.97 531 296.98 R
7 X
0 0 0 1 0 0 0 K
V
50 295.97 609.01 295.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 283.97 T
2 F
(GrBitBlt\050\051) 99 283.97 T
3 10 Q
(void) 99 269.3 T
4 F
(GrBitBlt\050) 153 269.3 T
4 9 Q
(GStateHandle) 153 258.97 T
(gstate,) 261 258.97 T
(/* GState to draw to */) 333 258.97 T
(sword) 153 248.97 T
(sourceX,) 261 248.97 T
(/* original x origin */) 333 248.97 T
(sword) 153 238.97 T
(sourceY,) 261 238.97 T
(/* original y origin */) 333 238.97 T
(sword) 153 228.97 T
(destX,) 261 228.97 T
(/* new x origin */) 333 228.97 T
(sword) 153 218.97 T
(destY,) 261 218.97 T
(/* new y origin */) 333 218.97 T
(word) 153 208.97 T
(width,) 261 208.97 T
(/* width of area */) 333 208.97 T
(word) 153 198.97 T
(height,) 261 198.97 T
(/* height of area */) 333 198.97 T
(BLTMode) 153 188.97 T
(mode\051;) 261 188.97 T
(/* draw mode \050see below\051 */) 333 188.97 T
0 10 Q
(T) 180 171.3 T
(ransfer a bit-boundary block of pixels between two locations in video) 186.05 171.3 T
(memory) 180 159.8 T
(. This routine is useful for animation and other applications which) 216.48 159.8 T
(involve moving a drawing around the screen.) 180 148.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "176" 24
%%Page: "177" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(177) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Structures:) 99 641.33 T
4 9 Q
(typedef enum /* word */ {) 189 631 T
(BLTM_COPY,) 210.6 621 T
(/* Leave source region alone */) 279 621 T
(BLTM_MOVE,) 210.6 611 T
(/* Clear & invalidate source rect */) 279 611 T
(BLTM_CLEAR) 210.6 601 T
(/* Clear source rectangle */) 279 601 T
(} BLTMode;) 189 591 T
2 10 Q
(Include:) 99 573.33 T
6 F
(graphics.h) 180 573.33 T
81 556.99 531 562 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 556.99 531 562 R
7 X
0 0 0 1 0 0 0 K
V
50 560.99 609.01 560.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 548.99 T
2 F
(GrBrushPolyline\050\051) 99 548.99 T
3 10 Q
(void) 99 534.33 T
4 F
(GrBrushPolyline\050) 153 534.33 T
4 9 Q
(GStateHandle) 153 523.99 T
(gstate,) 261 523.99 T
(/* GState to draw to */) 315 523.99 T
(const Point) 153 513.99 T
(* points,) 261 513.99 T
(/* array of Point structures to draw */) 315 513.99 T
(word) 153 503.99 T
(numPoints,) 261 503.99 T
(/* number of points in array */) 315 503.99 T
(word) 153 493.99 T
(brushH,) 261 493.99 T
(/* brush height */) 315 493.99 T
(word) 153 483.99 T
(brushW\051;) 261 483.99 T
(/* brush width */) 315 483.99 T
0 10 Q
(Draw a brushed connected polyline. Note that this routine ignores the) 180 466.33 T
-0.47 (GState\325) 180 454.83 P
-0.47 (s line width, and instead uses a brush height and width, measured in) 214.09 454.83 P
(pixels.) 180 443.33 T
2 F
(Include:) 99 424.83 T
6 F
(graphics.h) 180 424.83 T
81 408.48 531 413.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 408.48 531 413.49 R
7 X
0 0 0 1 0 0 0 K
V
50 412.48 609.01 412.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 400.48 T
2 F
(GrCharMetrics\050\051) 99 400.48 T
3 10 Q
(dword) 99 385.82 T
4 F
(GrCharMetrics\050) 153 385.82 T
4 9 Q
(GStatehandle) 153 375.48 T
(gstate,) 261 375.48 T
(/* GState to get metrics for */) 315 375.48 T
(GCM_info) 153 365.48 T
(info,) 261 365.48 T
(/* information to return */) 315 365.48 T
(word) 153 355.48 T
(ch\051;) 261 355.48 T
(/* character of type Chars */) 315 355.48 T
0 10 Q
-0.33 (Returns metric information for a single character of a font. This information) 180 337.82 P
-0.73 (is used to determine the drawing bounds for a character) 180 326.32 P
-0.73 (. T) 431.63 326.32 P
-0.73 (o \336nd out how wide) 442.21 326.32 P
(a character is \050how much space to leave for it if drawing a line of text) 180 314.82 T
(character) 180 303.32 T
(-by-character\051, use) 223.7 303.32 T
6 F
(GrCharW) 312.58 303.32 T
(idth\050\051) 361.47 303.32 T
0 F
( instead.) 390.73 303.32 T
2 F
(Structures:) 99 284.82 T
4 9 Q
(typedef enum {) 189 274.48 T
(GCMI_MIN_X,) 210.6 264.48 T
(/* return = value << 16 */) 315 264.48 T
(GCMI_MIN_X_ROUNDED,) 210.6 254.48 T
(/* return = value */) 318.6 254.48 T
(GCMI_MIN_Y,) 210.6 244.48 T
(/* return = value << 16 */) 315 244.48 T
(GCMI_MIN_Y_ROUNDED,) 210.6 234.48 T
(/* return = value << 16 */) 318.6 234.48 T
(GCMI_MAX_X,) 210.6 224.48 T
(/* return = value << 16 */) 315 224.48 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "177" 25
%%Page: "178" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(178) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 9 Q
0 X
(GCMI_MAX_X_ROUNDED,) 210.6 642 T
(/* return = value << 16 */) 318.6 642 T
(GCMI_MAX_Y,) 210.6 632 T
(/* return = value << 16 */) 315 632 T
(GCMI_MAX_Y_ROUNDED) 210.6 622 T
(/* return = value << 16 */) 315 622 T
(} GCM_Info;) 189 612 T
2 10 Q
(See Also:) 99 594.33 T
0 F
(GrCharW) 180 594.33 T
(idth\050\051) 224.99 594.33 T
2 F
(Include:) 99 574.33 T
0 F
(font.h) 180 574.33 T
81 557.99 531 563 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 557.99 531 563 R
7 X
0 0 0 1 0 0 0 K
V
50 561.99 609.01 561.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 549.99 T
2 F
(GrCharW) 99 549.99 T
(idth\050\051) 151.56 549.99 T
3 10 Q
(dword) 99 535.33 T
4 F
(GrCharWidth\050 /* Returns width << 16 */) 153 535.33 T
4 9 Q
(GStateHandle) 153 524.99 T
(gstate,) 261 524.99 T
(/* GState to query */) 315 524.99 T
(word) 153 514.99 T
(ch\051;) 261 514.99 T
(/* character of type Chars */) 315 514.99 T
0 10 Q
(Return the width of a single character) 180 497.33 T
(. Note that this routine does not take) 355.56 497.33 T
(into account track kerning, pairwise kerning, space padding, or other) 180 485.83 T
(attributes that apply to multiple characters.) 180 474.33 T
2 F
(Include:) 99 455.83 T
6 F
(graphics.h) 180 455.83 T
81 439.48 531 444.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.48 531 444.49 R
7 X
0 0 0 1 0 0 0 K
V
50 443.48 609.01 443.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.48 T
2 F
(GrCheckFontA) 99 431.48 T
(vailID\050\051) 183.23 431.48 T
3 10 Q
(FontID) 99 416.82 T
4 F
(GrCheckFontAvailID\050) 153 416.82 T
4 9 Q
(FontEnumFlags) 153 406.48 T
(flags,) 261 406.48 T
(word) 153 396.48 T
(family,) 261 396.48 T
(FontID) 153 386.48 T
(id\051;) 261 386.48 T
0 10 Q
(See if font \050identi\336ed by) 180 368.82 T
0 9 Q
(ID) 293.16 368.82 T
0 10 Q
(\051 exists.) 303.83 368.82 T
2 F
(Include:) 99 350.32 T
6 F
(graphics.h) 180 350.32 T
81 333.98 531 338.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 333.98 531 338.98 R
7 X
0 0 0 1 0 0 0 K
V
50 337.98 609.01 337.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 325.98 T
2 F
(GrCheckFontA) 99 325.98 T
(vailName\050\051) 183.23 325.98 T
3 10 Q
(FontID) 99 311.31 T
4 F
(GrCheckFontAvailName\050) 153 311.31 T
4 9 Q
(FontEnumFlags) 153 300.98 T
(flags,) 261 300.98 T
(word) 153 290.98 T
(family,) 261 290.98 T
(const char) 153 280.98 T
(* name\051;) 261 280.98 T
0 10 Q
(See if font \050identi\336ed by name\051 exists.) 180 263.31 T
2 F
(Include:) 99 244.81 T
6 F
(graphics.h) 180 244.81 T
81 228.47 531 233.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 228.47 531 233.47 R
7 X
0 0 0 1 0 0 0 K
V
50 232.47 609.01 232.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 220.47 T
2 F
(GrClearBitmap\050\051) 99 220.47 T
3 10 Q
(void) 99 205.8 T
4 F
(GrClearBitmap\050) 153 205.8 T
4 9 Q
(GStateHandle) 153 195.47 T
(gstate\051;) 223.2 195.47 T
(/* GState to affect */) 297 195.47 T
0 10 Q
(Clear out the content of a bitmap. Note that the part of the bitmap actually) 180 177.8 T
-0.27 (cleared depends on the bitmap mode. For the normal mode, the data portion) 180 166.3 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "178" 26
%%Page: "179" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(179) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
(of the bitmap is cleared. If the bitmap is in) 180 641.33 T
0 9 Q
(BM_EDIT_MASK) 380.04 641.33 T
0 10 Q
( mode, then the) 454.87 641.33 T
(mask is cleared and the data portion is left alone.) 180 629.83 T
2 F
(Include:) 99 611.33 T
6 F
(graphics.h) 180 611.33 T
81 594.99 531 600 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 594.99 531 600 R
7 X
0 0 0 1 0 0 0 K
V
50 598.99 609.01 598.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 586.99 T
2 F
(GrCloseSubPath\050\051) 99 586.99 T
3 10 Q
(void) 99 572.33 T
4 F
(GrCloseSubPath\050) 153 572.33 T
4 9 Q
(GStateHandle gstate\051;) 153 561.99 T
(/* GState to affect */) 279 561.99 T
0 10 Q
(Geometrically closes the currently open path segment. Note that you must) 180 544.33 T
(still call) 180 532.83 T
6 F
(GrEndPath\050\051) 219.83 532.83 T
0 F
( to end the path de\336nition.) 287.05 532.83 T
2 F
(Include:) 99 514.33 T
6 F
(graphics.h) 180 514.33 T
81 497.98 531 502.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 497.98 531 502.99 R
7 X
0 0 0 1 0 0 0 K
V
50 501.98 609.01 501.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 489.98 T
2 F
(GrComment\050\051) 99 489.98 T
3 10 Q
(void) 99 475.32 T
4 F
(GrComment\050) 153 475.32 T
4 9 Q
(GStateHandle) 153 464.98 T
(gstate,) 261 464.98 T
(/* GState to affect */) 315 464.98 T
(const void) 153 454.98 T
(* data,) 261 454.98 T
(/* comment string */) 315 454.98 T
(word) 153 444.98 T
(size\051;) 261 444.98 T
(/* Size of data, in bytes */) 315 444.98 T
0 10 Q
(W) 180 427.32 T
(rite a comment out to a graphics string.) 189.26 427.32 T
2 F
(Include:) 99 408.82 T
6 F
(graphics.h) 180 408.82 T
81 392.48 531 397.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 392.48 531 397.48 R
7 X
0 0 0 1 0 0 0 K
V
50 396.48 609.01 396.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 384.48 T
2 F
(GrCopyGString\050\051) 99 384.48 T
3 10 Q
(GSRetType) 99 369.81 T
4 F
( GrCopyGString\050) 153 369.81 T
4 9 Q
(GStateHandle) 153 359.48 T
(source,) 261 359.48 T
(/* GState from which to get GString */) 315 359.48 T
(GStateHandle) 153 349.48 T
(dest,) 261 349.48 T
(/* GState to which to copy GString */) 315 349.48 T
(GSControl) 153 339.48 T
(flags\051;) 261 339.48 T
(/* flags for the copy */) 315 339.48 T
0 10 Q
(Copy all or part of a Graphics String. The) 180 321.81 T
6 F
(GSControl) 374.84 321.81 T
0 F
( record can have the) 429.66 321.81 T
(following \337ags:) 180 310.31 T
4 9 Q
( GSC_ONE) 216 295.48 T
(/* just do one element */) 324 295.48 T
( GSC_MISC) 216 285.48 T
(/* return on MISC opcode */) 324 285.48 T
( GSC_LABEL) 216 275.47 T
(/* return on GR_LABEL opcode */) 324 275.47 T
( GSC_ESCAPE) 216 265.47 T
(/* return on GR_ESCAPE opcode */) 324 265.47 T
( GSC_NEW_PAGE) 216 255.47 T
(/* return when we get to a NEW_PAGE */) 324 255.47 T
( GSC_XFORM) 216 245.47 T
(/* return on TRANSFORMATIONopcode */) 324 245.47 T
( GSC_OUTPUT:) 216 235.47 T
(/* return on OUTPUT opcode */) 324 235.47 T
( GSC_ATTR) 216 225.47 T
(/* return on ATTRIBUTE opcode */) 324 225.47 T
( GSC_PATH) 216 215.47 T
(/* return on PATH opcode */) 324 215.47 T
0 10 Q
(The return value can be any one of) 180 197.81 T
6 F
(GSRetT) 343.35 197.81 T
(ype) 383.2 197.81 T
0 F
(, a byte-size \336eld:) 401.72 197.81 T
4 9 Q
(GSRT_COMPLETE) 216 182.97 T
(GSRT_ONE) 216 172.97 T
(GSRT_MISC) 216 162.97 T
(GSRT_LABEL) 216 152.97 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "179" 27
%%Page: "180" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(180) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 9 Q
0 X
(GSRT_ESCAPE) 216 642 T
(GSRT_NEW_PAGE) 216 632 T
(GSRT_XFORM) 216 622 T
(GSRT_OUTPUT) 216 612 T
(GSRT_ATTR) 216 602 T
(GSRT_PATH) 216 592 T
(GSRT_FAULT) 216 582 T
2 10 Q
(Include:) 99 564.33 T
6 F
(gstring.h) 180 564.33 T
81 547.99 531 553 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.99 531 553 R
7 X
0 0 0 1 0 0 0 K
V
50 551.99 609.01 551.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.99 T
2 F
(GrCreateBitmap\050\051) 99 539.99 T
3 10 Q
(VMBlockHandle) 99 525.33 T
4 F
( GrCreateBitmap\050) 177 525.33 T
4 9 Q
(BMFormat) 153 514.99 T
(initFormat,) 261 514.99 T
(/* color fomat of bitmap */) 333 514.99 T
(word) 153 504.99 T
(initWidth,) 261 504.99 T
(/* initial width of bitmap */) 333 504.99 T
(word) 153 494.99 T
(initHeight,) 261 494.99 T
(/* initial height of bitmap */) 333 494.99 T
(VMFileHandle) 153 484.99 T
(vmFile,) 261 484.99 T
(/* VM file to hold bitmap\325s data*/) 333 484.99 T
(optr) 153 474.99 T
(exposureOD,) 261 474.99 T
(/* optr to get MSG_META_EXPOSED */) 333 474.99 T
(GStateHandle) 153 464.99 T
(* bmgs\051;) 261 464.99 T
(/* Draws to this GState) 333 464.99 T
( * will draw to the bitmap */) 333 454.99 T
0 10 Q
-0.66 (This routine allocates memory for a bitmap and creates an off-screen window) 180 437.33 P
(in which to hold the bitmap. This routine takes the following arguments:) 180 425.83 T
5 F
(initFormat) 180 407.33 T
0 F
(The depth of the bitmap\325) 243 407.33 T
(s color) 356.17 407.33 T
(.) 384.87 407.33 T
5 F
(initW) 180 389.33 T
(idth) 204.81 389.33 T
0 F
(Bitmap\325) 243 389.33 T
(s width.) 279.12 389.33 T
5 F
(initHeight) 180 371.33 T
0 F
(Bitmap\325) 243 371.33 T
(s height.) 279.12 371.33 T
5 F
(vmFile) 180 353.33 T
0 F
(File to hold the bitmap data; the routine will allocate a block) 243 353.33 T
(within this \336le.) 243 342.33 T
5 F
(exposureOD) 180 324.33 T
0 F
(Object which will receive the \322exposed\323 message when the) 243 324.33 T
(bitmap\325) 243 313.33 T
(s window is invalidated. If this argument is zero, then) 277.46 313.33 T
(no exposed message will be sent.) 243 302.33 T
(Remember that an off-screen window is created to house the) 243 291.33 T
(bitmap. When this window is \336rst created, it will be invalid,) 243 280.33 T
-0.39 (and it is conceivable that later actions could cause it to become) 243 269.33 P
(invalid again. On these occasions, the object speci\336ed by this) 243 258.33 T
(argument will receive a) 243 247.33 T
0 9 Q
(MSG_MET) 354.68 247.33 T
(A_EXPOSED) 400.85 247.33 T
0 10 Q
(.) 456.86 247.33 T
5 F
(bmgs) 180 229.33 T
0 F
-0.73 (The GStateHandle pointed to by this argument can start out as) 243 229.33 P
(null; the routine will use it to return the GState by which the) 243 218.33 T
(bitmap can be drawn to. Any graphics routines which draw to) 243 207.33 T
(this returned GState will be carried out upon the bitmap.) 243 196.33 T
-0.06 (The routine returns a) 180 178.33 P
6 F
-0.06 (VMBlockHandle) 282.55 178.33 P
0 F
-0.06 (, the handle of the block within the) 367.18 178.33 P
-0.04 (passed) 180 166.83 P
0 9 Q
-0.03 (VM) 214.04 166.83 P
0 10 Q
-0.04 ( \336le which contains the bitmap\325) 229.04 166.83 P
-0.04 (s data. The block will be set up as) 372.95 166.83 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "180" 28
%%Page: "181" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(181) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
(the \336rst block of a HugeArray) 180 641.33 T
(. Its header area will be \336lled with the) 316.67 641.33 T
(following:) 180 629.83 T
(Complex Bitmap Header) 180 611.33 T
(This is a) 243 600.33 T
6 F
(CBitmap) 285.24 600.33 T
0 F
( structure which contains some basic) 331.17 600.33 T
(information about the bitmap.) 243 589.33 T
(Editing Mode) 180 571.33 T
(These \337ags can change how the bitmap is being edited.) 243 560.33 T
(Device Information Block) 180 542.33 T
-0.82 (This internal structure contains information about and used by) 243 531.33 P
(the video driver) 243 520.33 T
(. \050Don\325) 315.22 520.33 T
(t worry that you don\325) 344.86 520.33 T
(t know the size of) 441.54 520.33 T
-0.37 (this structure; remember that the CBitmap structure contains) 243 509.33 P
(the offsets of the bitmap and palette data areas.\051) 243 498.33 T
(Pallette Information \050optional\051) 180 480.33 T
-0.79 (If the bitmap has its own pallette, this is where the palette data) 243 469.33 P
(will be stored; it will consist of an array of 3-byte entries.) 243 458.33 T
-0.74 (Depending on how many colors the bitmap supports, there may) 243 447.33 P
(be 16 or 256 entries in this array) 243 436.33 T
(.) 393.78 436.33 T
(The bitmap\325) 180 418.33 T
(s raw data is in the) 235.02 418.33 T
0 9 Q
(VM) 326.9 418.33 T
0 10 Q
( block, but outside of the header area.) 341.89 418.33 T
2 F
(Include:) 99 399.83 T
6 F
(graphics.h) 180 399.83 T
81 383.49 531 388.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 383.49 531 388.5 R
7 X
0 0 0 1 0 0 0 K
V
50 387.49 609.01 387.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 375.49 T
2 F
(GrCreateGString\050\051) 99 375.49 T
3 10 Q
(GStateHandle) 99 360.83 T
4 F
( GrCreateGString\050) 171 360.83 T
4 9 Q
(Handle) 153 350.49 T
(han,) 261 350.49 T
(/* memory, stream, or VM file handle */) 315 350.49 T
(GStringType) 153 340.49 T
(hanType,) 261 340.49 T
(/* type of handle in han parameter */) 315 340.49 T
(word) 153 330.49 T
(* gsBlock\051;) 261 330.49 T
(/* returned for GST_MEMORY and) 333 330.49 T
( * GST_VMEM types only */) 315 320.49 T
0 10 Q
(Open a graphics string and start redirecting graphics orders to the string.) 180 302.83 T
(The hanT) 180 291.33 T
(ype parameter must be) 224.49 291.33 T
0 9 Q
(GST_MEMOR) 334.32 291.33 T
(Y) 394.15 291.33 T
0 10 Q
(,) 399.38 291.33 T
0 9 Q
(GST_STREAM) 404.94 291.33 T
0 10 Q
(, or) 467.78 291.33 T
0 9 Q
(GST_VMEM) 180 279.83 T
0 10 Q
(.) 233.16 279.83 T
2 F
(Include:) 99 261.33 T
6 F
(gstring.h) 180 261.33 T
81 244.98 531 249.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.98 531 249.99 R
7 X
0 0 0 1 0 0 0 K
V
50 248.98 609.01 248.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 236.98 T
2 F
(GrCreatePalette\050\051) 99 236.98 T
3 10 Q
(word) 99 222.32 T
4 F
(GrCreatePalette\050 /* Returns # of entries in color table) 153 222.32 T
(* or 0 for monochrome or 24-bit */) 261 211.32 T
4 9 Q
(GStateHandle gstate\051;) 153 200.98 T
0 10 Q
(Create a color mapping table and associate it with the current window) 180 183.32 T
(.) 504.31 183.32 T
(Initialize the table entries to the default palette for the device.) 180 171.82 T
2 F
(Include:) 99 153.32 T
6 F
(graphics.h) 180 153.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "181" 29
%%Page: "182" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(182) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrCreateState\050\051) 99 634.99 T
3 10 Q
(GStateHandle) 99 620.33 T
4 F
( GrCreateState\050) 171 620.33 T
4 9 Q
(WindowHandle win\051;) 153 609.99 T
(/* Window in which GState will be active */) 279 609.99 T
0 10 Q
(Create a graphics state \050GState\051 block containg default GState information.) 180 592.33 T
(If zero is passed, then the GState created will have no window associated) 180 573.83 T
(with it.) 180 562.33 T
2 F
(Include:) 99 543.83 T
6 F
(graphics.h) 180 543.83 T
81 527.48 531 532.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 527.48 531 532.49 R
7 X
0 0 0 1 0 0 0 K
V
50 531.48 609.01 531.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 519.48 T
2 F
(GrDeleteGStringElement\050\051) 99 519.48 T
3 10 Q
(void) 99 505.82 T
4 F
(GrDeleteGStringElement\050) 153 505.82 T
4 9 Q
(GStateHandle) 153 495.48 T
(gstate,) 261 495.48 T
(/* GState containing GString */) 315 495.48 T
(word) 153 485.48 T
(count\051;) 261 485.48 T
(/* number of elements to delete */) 315 485.48 T
0 10 Q
(Delete a range of GString elements from the GString in the passed GState.) 180 467.82 T
2 F
(Include:) 99 449.32 T
6 F
(graphics.h) 180 449.32 T
81 432.98 531 437.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 432.98 531 437.98 R
7 X
0 0 0 1 0 0 0 K
V
50 436.98 609.01 436.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 424.98 T
2 F
(GrDestroyBitmap\050\051) 99 424.98 T
3 10 Q
(void) 99 410.31 T
4 F
(GrDestroyBitmap\050) 153 410.31 T
4 9 Q
(GStateHandle) 153 399.98 T
(gstate,) 261 399.98 T
(/* GState containing bitmap */) 315 399.98 T
(BMDestroy) 153 389.98 T
(flags\051;) 261 389.98 T
(/* flags for removing data */) 315 389.98 T
0 10 Q
(Free the bitmap and disassociate it with its window) 180 372.31 T
(. Depending on the) 418.21 372.31 T
-0.24 (passed \337ag, the bitmap\325) 180 360.81 P
-0.24 (s data may be freed or preserved. Thus, it is possible) 288.21 360.81 P
-0.44 (to remove the GString used to edit the bitmap while maintaining the bitmap) 180 349.31 P
(in a drawable state.) 180 337.81 T
2 F
(Structures:) 99 319.31 T
4 9 Q
(typedef ByteEnum BMDestroy;) 216 304.98 T
(/*) 216 294.98 T
(BMD_KILL_DATA,) 252 294.98 T
(BMD_LEAVE_DATA */) 252 284.98 T
2 10 Q
(Include:) 99 267.31 T
6 F
(graphics.h) 180 267.31 T
81 250.97 531 255.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 250.97 531 255.97 R
7 X
0 0 0 1 0 0 0 K
V
50 254.97 609.01 254.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 242.97 T
2 F
(GrDestroyGString\050\051) 99 242.97 T
3 10 Q
(void) 99 228.3 T
4 F
(GrDestroyGString\050) 153 228.3 T
4 9 Q
(Handle) 153 217.97 T
(gstring,) 261 217.97 T
(/* Handle of GString */) 315 217.97 T
(GStateHandle) 153 207.97 T
(gstate,) 261 207.97 T
(/* NULL, or handle of another) 315 207.97 T
( * gstate to free*/) 297 197.97 T
(GStringKillType) 153 187.97 T
(type\051;) 261 187.97 T
(/* Kill type for data removal */) 315 187.97 T
0 10 Q
(Destroys a GString. Depending on the) 180 170.3 T
6 F
(GStringKillT) 358.91 170.3 T
(ype) 425.61 170.3 T
0 F
( argument, this) 444.13 170.3 T
(either constitutes removing the GState from the GString data; or freeing) 180 158.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "182" 30
%%Page: "183" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(183) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
(both the GState and the GString\325) 180 641.33 T
(s data. If you have been drawing the) 333 641.33 T
-0.21 (GString to a GState, you should pass the GState\325) 180 629.83 P
-0.21 (s handle as) 404.1 629.83 P
5 F
-0.21 (gstate) 458.3 629.83 P
0 F
-0.21 (, and this) 485.33 629.83 P
(routine will do some cleaning up.) 180 618.33 T
2 F
(Structures:) 99 599.83 T
4 9 Q
(typedef ByteEnum GStringKillType;) 216 585.5 T
(/*) 216 575.5 T
(GSKT_KILL_DATA,) 252 575.5 T
(GSKT_LEAVE_DATA */) 252 565.5 T
2 10 Q
(Include:) 99 547.83 T
6 F
(gstring.h) 180 547.83 T
81 531.49 531 536.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 531.49 531 536.5 R
7 X
0 0 0 1 0 0 0 K
V
50 535.49 609.01 535.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 523.49 T
2 F
(GrDestroyPalette\050\051) 99 523.49 T
3 10 Q
(void) 99 508.83 T
4 F
(GrDestroyPalette\050) 153 508.83 T
4 9 Q
(GStateHandle gstate\051;) 153 498.49 T
(/* GState of palette to destroy */) 279 498.49 T
0 10 Q
(Free any custom palette associated with the current window) 180 480.83 T
(.) 458.18 480.83 T
2 F
(Include:) 99 462.33 T
6 F
(graphics.h) 180 462.33 T
81 445.98 531 450.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 445.98 531 450.99 R
7 X
0 0 0 1 0 0 0 K
V
50 449.98 609.01 449.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 437.98 T
2 F
(GrDestroyState\050\051) 99 437.98 T
3 10 Q
(void) 99 423.32 T
4 F
(GrDestroyState\050) 153 423.32 T
4 9 Q
(GStateHandle gstate\051;) 153 412.98 T
(/* GState to be destroyed */) 279 412.98 T
0 10 Q
(Free a graphics state block.) 180 395.32 T
2 F
(Include:) 99 376.82 T
6 F
(graphics.h) 180 376.82 T
81 360.48 531 365.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 360.48 531 365.48 R
7 X
0 0 0 1 0 0 0 K
V
50 364.48 609.01 364.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 352.48 T
2 F
(GrDrawArc\050\051) 99 352.48 T
3 10 Q
(void) 99 337.81 T
4 F
(GrDrawArc\050) 153 337.81 T
4 9 Q
(GStateHandle) 153 327.48 T
(gstate,) 261 327.48 T
(/* GState to draw to */) 333 327.48 T
(sword) 153 317.48 T
(left,) 261 317.48 T
(/* bounds of box outlining arc */) 333 317.48 T
(sword) 153 307.48 T
(top,) 261 307.48 T
(sword) 153 297.48 T
(right,) 261 297.48 T
(sword) 153 287.48 T
(bottom,) 261 287.48 T
(word) 153 277.47 T
(startAngle,) 261 277.47 T
(/* angles in degrees) 333 277.47 T
(word) 153 267.47 T
(endAngle,) 261 267.47 T
( * counter-clockwise */) 333 267.47 T
(ArcCloseType) 153 257.47 T
(arcType\051;) 261 257.47 T
(/* how the arc is closed */) 333 257.47 T
0 10 Q
(Draw an arc along the ellipse that is speci\336ed by a bounding box, from the) 180 239.81 T
(starting angle to the ending angle.) 180 228.31 T
2 F
(Include:) 99 209.81 T
6 F
(graphics.h) 180 209.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "183" 31
%%Page: "184" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(184) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawArc3Point\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawArc3Point\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(const ThreePointArcParams) 153 599.99 T
(*params\051;) 293.4 599.99 T
0 10 Q
-0.55 (Draw a circular arc, given three points along the arc; both endpoints and any) 180 582.33 P
(other point on the arc.) 180 570.83 T
2 F
(Include:) 99 552.33 T
6 F
(graphics.h) 180 552.33 T
81 535.98 531 540.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 535.98 531 540.99 R
7 X
0 0 0 1 0 0 0 K
V
50 539.98 609.01 539.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 527.98 T
2 F
(GrDrawArc3PointT) 99 527.98 T
(o\050\051) 205.46 527.98 T
3 10 Q
(void) 99 513.32 T
4 F
(GrDrawArc3PointTo\050) 153 513.32 T
4 9 Q
(GStateHandle) 153 502.98 T
(gstate,) 261 502.98 T
(/* GState to draw to */) 315 502.98 T
(const ThreePointArcToParams *params\051;) 153 492.98 T
0 10 Q
(As) 180 475.32 T
6 F
(GrDrawArc3Point\050\051) 194.63 475.32 T
0 F
(, above, except that the current position is) 297.04 475.32 T
(automatically used as one of the endpoints.) 180 463.82 T
2 F
(Include:) 99 445.32 T
6 F
(graphics.h) 180 445.32 T
81 428.98 531 433.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 428.98 531 433.98 R
7 X
0 0 0 1 0 0 0 K
V
50 432.98 609.01 432.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 420.98 T
2 F
(GrDrawBitmap\050\051) 99 420.98 T
3 10 Q
(void) 99 406.31 T
4 F
(GrDrawBitmap\050) 153 406.31 T
4 9 Q
(GStateHandle) 153 395.98 T
(gstate,) 261 395.98 T
(/* GState to draw to */) 351 395.98 T
(sword) 153 385.98 T
(x,) 261 385.98 T
(/* x starting point */) 351 385.98 T
(sword) 153 375.98 T
(y,) 261 375.98 T
(/* y starting point */) 351 375.98 T
(const) 153 365.98 T
(Bitmap) 189 365.98 T
(* bm,) 261 365.98 T
(/* pointer to the bitmap */) 351 365.98 T
(Bitmap * _pascal \050*callback\051 \050Bitmap *bm\051\051;) 153 355.98 T
(/* NULL for no callback */) 385.2 355.98 T
0 10 Q
-0.43 (Draw a bitmap. Note that if the bitmap takes up a great deal of memory) 180 338.31 P
-0.43 (, it is) 506.34 338.31 P
(necessary to manage its memory when drawing. If the bitmap resides in a) 180 326.81 T
6 F
(HugeArray) 180 315.31 T
0 F
( \050true of any bitmap created using) 237.59 315.31 T
6 F
(GrCreateBitmap\050\051) 397.42 315.31 T
0 F
(\051, then) 491.69 315.31 T
(calling) 180 303.81 T
6 F
(GrDrawHugeBitmap\050\051) 213.71 303.81 T
0 F
( will automatically take care of memory) 329.08 303.81 T
(management. Otherwise, you may wish to provide a suitable callback) 180 292.31 T
-0.3 (routine. This routine should be declared _pascal and is passed a pointer into) 180 280.81 P
-0.06 (the passed bitmap and is expected to return a pointer to the next slice. This) 180 269.31 P
(allows the bitmap to be drawn in horizontal bands, or swaths.) 180 257.81 T
2 F
(Include:) 99 239.31 T
6 F
(graphics.h) 180 239.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "184" 32
%%Page: "185" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(185) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawBitmapAtCP\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawBitmapAtCP\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 351 609.99 T
(const) 153 599.99 T
(Bitmap) 189 599.99 T
(* bm,) 261 599.99 T
(/* pointer to the bitmap */) 351 599.99 T
(Bitmap * \050*callback\051 \050Bitmap *bm\051\051;) 153 589.99 T
(/* NULL for no callback */) 351 589.99 T
0 10 Q
(This routine is the same as) 180 572.33 T
6 F
( GrDrawBitmap\050\051) 305.21 572.33 T
0 F
(, above, except that the) 396.05 572.33 T
(bitmap is drawn at the current position.) 180 560.83 T
2 F
(Include:) 99 542.33 T
6 F
(graphics.h) 180 542.33 T
81 525.98 531 530.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 525.98 531 530.99 R
7 X
0 0 0 1 0 0 0 K
V
50 529.98 609.01 529.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 517.98 T
2 F
(GrDrawChar\050\051) 99 517.98 T
3 10 Q
(void) 99 503.32 T
4 F
(GrDrawChar\050) 153 503.32 T
4 9 Q
(GStateHandle) 153 492.98 T
(gstate,) 261 492.98 T
(/* GState to draw to */) 315 492.98 T
(sword) 153 482.98 T
(x,) 261 482.98 T
(/* x position at which to draw */) 315 482.98 T
(sword) 153 472.98 T
(y,) 261 472.98 T
(/* y position at which to draw */) 315 472.98 T
(word) 153 462.98 T
(ch\051;) 261 462.98 T
(/* character of type Chars */) 315 462.98 T
0 10 Q
(Draw a character at the given position with the current text drawing) 180 445.32 T
(attributes.) 180 433.82 T
2 F
(Include:) 99 415.32 T
6 F
(graphics.h) 180 415.32 T
81 398.98 531 403.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 398.98 531 403.98 R
7 X
0 0 0 1 0 0 0 K
V
50 402.98 609.01 402.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 390.98 T
2 F
(GrDrawCharAtCP\050\051) 99 390.98 T
3 10 Q
(void) 99 376.31 T
4 F
(GrDrawCharAtCP\050) 153 376.31 T
4 9 Q
(GStateHandle) 153 365.98 T
(gstate,) 261 365.98 T
(/* GState to draw to */) 315 365.98 T
(word) 153 355.98 T
(ch\051;) 261 355.98 T
(/* character of type Chars */) 315 355.98 T
0 10 Q
(Draw a character at the current position with the current text drawing) 180 338.31 T
(attributes.) 180 326.81 T
2 F
(Include:) 99 308.31 T
6 F
(graphics.h) 180 308.31 T
81 291.97 531 296.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 291.97 531 296.98 R
7 X
0 0 0 1 0 0 0 K
V
50 295.97 609.01 295.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 283.97 T
2 F
(GrDrawCurve\050\051) 99 283.97 T
3 10 Q
(void) 99 269.3 T
4 F
(GrDrawCurve\050) 153 269.3 T
4 9 Q
(GStateHandle) 153 258.97 T
(gstate,) 261 258.97 T
(/* GState to draw to */) 333 258.97 T
(const) 153 248.97 T
(Point) 189 248.97 T
(*points\051;) 261 248.97 T
(/* array of four Points */) 333 248.97 T
0 10 Q
(Draw a Bezier curve.) 180 231.3 T
2 F
(Include:) 99 212.8 T
6 F
(graphics.h) 180 212.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "185" 33
%%Page: "186" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(186) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawCurveT) 99 634.99 T
(o\050\051) 182.8 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawCurveTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 333 609.99 T
(const) 153 599.99 T
(Point) 189 599.99 T
(*points\051;) 261 599.99 T
(/* array of three Points */) 315 599.99 T
0 10 Q
(Draw a Bezier curve, using the current postion as the \336rst point.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrDrawEllipse\050\051) 99 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrDrawEllipse\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* GState to draw to */) 315 514.48 T
(sword) 153 504.48 T
(left,) 261 504.48 T
(/* bounding box bounds */) 315 504.48 T
(sword) 153 494.48 T
(top,) 261 494.48 T
(sword) 153 484.48 T
(right,) 261 484.48 T
(sword) 153 474.48 T
(bottom\051;) 261 474.48 T
0 10 Q
(Draw an ellipse, de\336ned by its bounding box.) 180 456.82 T
2 F
(Include:) 99 438.32 T
6 F
(graphics.h) 180 438.32 T
81 421.98 531 426.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 421.98 531 426.98 R
7 X
0 0 0 1 0 0 0 K
V
50 425.98 609.01 425.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 413.98 T
2 F
(GrDrawGString\050\051) 99 413.98 T
3 10 Q
(GSRetType) 99 399.31 T
4 F
( GrDrawGString\050) 153 399.31 T
4 9 Q
(GStateHandle) 153 388.98 T
(gstate,) 261 388.98 T
(/* GState to draw to */) 351 388.98 T
(Handle) 153 378.98 T
(gstringToDraw,) 261 378.98 T
(/* GString to draw */) 351 378.98 T
(sword) 153 368.98 T
(x,) 261 368.98 T
(/* point at which to draw */) 351 368.98 T
(sword) 153 358.98 T
(y,) 261 358.98 T
(GSControl) 153 348.98 T
(flags,) 261 348.98 T
(/* GSControl record */) 351 348.98 T
(GStringElement) 153 338.98 T
(* lastElement\051;) 261 338.98 T
(/* pointer to empty structure */) 351 338.98 T
0 10 Q
-0.21 (Draw a graphics string. The passed control \337ag allows drawing to stop upon) 180 321.31 P
(encountering certain kinds of drawing elements. If this causes the drawing) 180 309.81 T
(to stop in mid-string, then the routine will provide a pointer to the next) 180 298.31 T
6 F
(GStringElement) 180 286.81 T
0 F
( to be played.) 264.44 286.81 T
1 F
(u) 180 268.31 T
0 F
(Y) 198 268.31 T
(ou must provide a GState to draw to. Y) 203.93 268.31 T
(ou may wish to call) 383.23 268.31 T
6 F
(GrSaveState\050\051) 198 257.31 T
0 F
( on the GState before drawing the GString \050and call) 270.97 257.31 T
6 F
(GrRestoreState\050\051) 198 246.31 T
0 F
( afterwards\051. If you will draw anything else to this) 286.53 246.31 T
(GState after the GString, you must call) 198 235.31 T
6 F
(GrDestroyGString\050\051) 383.22 235.31 T
0 F
( on the) 486.37 235.31 T
(GString, and pass this GState\325) 198 224.31 T
(s handle as the gstate argument so that) 338.78 224.31 T
6 F
(GrDestroyGString\050\051) 198 213.31 T
0 F
( can clean up the GState.) 301.15 213.31 T
1 F
(u) 180 195.31 T
0 F
(Y) 198 195.31 T
(ou must provide a GString to draw) 203.93 195.31 T
(. The GString must be properly) 363.77 195.31 T
(loaded \050probably by means of) 198 184.31 T
6 F
(GrLoadGString\050\051) 335.25 184.31 T
0 F
(\051.) 423.77 184.31 T
1 F
(u) 180 166.31 T
0 F
-0.09 (Y) 198 166.31 P
-0.09 (ou can provide a pair of coordinates at which to draw the GString. The) 203.93 166.31 P
(graphics system will translate the coordinate system by these) 198 155.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "186" 34
%%Page: "187" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(187) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
(coordinates before carrying out the graphics commands stored in the) 198 641.33 T
(GString.) 198 630.33 T
1 F
(u) 180 612.33 T
0 F
-0.42 (Y) 198 612.33 P
-0.42 (ou can provide a) 203.93 612.33 P
6 F
-0.44 (GSControl) 280.59 612.33 P
0 F
-0.42 ( argument which requests that the system) 335.41 612.33 P
(stop drawing the GString when it encounters a certain type of GString) 198 601.33 T
(element. If the GString interpreter encounters one of these elements, it) 198 590.33 T
(will immediately stop drawing. The GString will remember where it) 198 579.33 T
-0.69 (stopped drawing. If you call) 198 568.33 P
6 F
-0.71 (GrDrawGString\050\051) 325.29 568.33 P
0 F
-0.69 (with that same GString,) 418.37 568.33 P
(it will continue drawing where you left off.) 198 557.33 T
1 F
(u) 180 539.33 T
0 F
(Y) 198 539.33 T
(ou must provide a pointer to an empty) 203.93 539.33 T
6 F
(GStringElement) 383.58 539.33 T
0 F
( structure.) 468.02 539.33 T
6 F
-0.44 (GrDrawGString\050\051) 198 528.33 P
0 F
-0.42 ( will return a value here when it is \336nished drawing.) 288.93 528.33 P
(If the GString has stopped drawing partway through due to a passed) 198 517.33 T
6 F
-0.82 (GSControl) 198 506.33 P
0 F
-0.8 (, the returned) 252.82 506.33 P
6 F
-0.82 (GStringElement) 317.28 506.33 P
0 F
-0.8 ( value will tell you what sort) 401.72 506.33 P
-0.74 (of command was responsible for halting drawing. For instance, if you had) 198 495.33 P
(instructed) 198 484.33 T
6 F
(GrDrawGString\050\051) 248.18 484.33 T
0 F
( to halt on an \324output\325 element) 339.11 484.33 T
(\050GrDraw\311\050\051 or GrFill\311\050\051 commands\051, then when) 198 473.33 T
6 F
(GrDrawGString\050\051) 428.37 473.33 T
0 F
(returns, you would check the value returned to see what sort of output) 198 462.33 T
(element was present.) 198 451.33 T
2 F
(Include:) 99 433.33 T
6 F
(gstring.h) 180 433.33 T
81 416.99 531 422 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 416.99 531 422 R
7 X
0 0 0 1 0 0 0 K
V
50 420.99 609.01 420.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 408.99 T
2 F
(GrDrawGStringAtCP\050\051) 99 408.99 T
3 10 Q
(GSRetType) 99 394.33 T
4 F
( GrDrawGStringAtCP\050) 153 394.33 T
4 9 Q
(GStateHandle) 153 383.99 T
(gstate,) 261 383.99 T
(/* GState to draw to */) 351 383.99 T
(GStringeHandle) 153 373.99 T
(gstringToDraw,) 261 373.99 T
(/* GString to draw */) 351 373.99 T
(GSControl) 153 363.99 T
(flags,) 261 363.99 T
(/* GSControl flags */) 351 363.99 T
(GStringElement) 153 353.99 T
(* lastElement\051;) 261 353.99 T
(/* last element to draw */) 351 353.99 T
0 10 Q
(Draw a graphics string as) 180 336.33 T
6 F
(GrDrawGString\050\051) 302.24 336.33 T
0 F
(, above, except that drawing) 393.17 336.33 T
(takes place at the current position.) 180 324.83 T
1 F
(u) 180 306.33 T
0 F
(Y) 198 306.33 T
(ou must provide a GState to draw to. Y) 203.93 306.33 T
(ou may wish to call) 383.23 306.33 T
6 F
(GrSaveState\050\051) 198 295.33 T
0 F
( on the GState before drawing the GString \050and call) 270.97 295.33 T
6 F
(GrRestoreState\050\051) 198 284.33 T
0 F
( afterwards\051. If you will draw anything else to this) 286.53 284.33 T
(GState after the GString, you must call) 198 273.33 T
6 F
(GrDestroyGString\050\051) 383.22 273.33 T
0 F
( on the) 486.37 273.33 T
(GString, and pass this GState\325) 198 262.33 T
(s handle as the gstate argument so that) 338.78 262.33 T
6 F
(GrDestroyGString\050\051) 198 251.33 T
0 F
( can clean up the GState.) 301.15 251.33 T
1 F
(u) 180 233.33 T
0 F
(Y) 198 233.33 T
(ou must provide a GString to draw) 203.93 233.33 T
(. The GString must be properly) 363.77 233.33 T
(loaded \050probably by means of) 198 222.33 T
6 F
(GrLoadGString\050\051) 335.25 222.33 T
0 F
(\051.) 423.77 222.33 T
1 F
(u) 180 204.33 T
0 F
-0.42 (Y) 198 204.33 P
-0.42 (ou can provide a) 203.93 204.33 P
6 F
-0.44 (GSControl) 280.59 204.33 P
0 F
-0.42 ( argument which requests that the system) 335.41 204.33 P
(stop drawing the GString when it encounters a certain type of GString) 198 193.33 T
(element. If the GString interpreter encounters one of these elements, it) 198 182.33 T
(will immediately stop drawing. The GString will remember where it) 198 171.33 T
-0.69 (stopped drawing. If you call) 198 160.33 P
6 F
-0.71 (GrDrawGString\050\051) 325.29 160.33 P
0 F
-0.69 (with that same GString,) 418.37 160.33 P
(it will continue drawing where you left off.) 198 149.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "187" 35
%%Page: "188" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(188) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
1 10 Q
0 X
(u) 180 641.33 T
0 F
(Y) 198 641.33 T
(ou must provide a pointer to an empty) 203.93 641.33 T
6 F
(GStringElement) 383.58 641.33 T
0 F
( structure.) 468.02 641.33 T
6 F
-0.44 (GrDrawGString\050\051) 198 630.33 P
0 F
-0.42 ( will return a value here when it is \336nished drawing.) 288.93 630.33 P
(If the GString has stopped drawing partway through due to a passed) 198 619.33 T
6 F
-0.82 (GSControl) 198 608.33 P
0 F
-0.8 (, the returned) 252.82 608.33 P
6 F
-0.82 (GStringElement) 317.28 608.33 P
0 F
-0.8 ( value will tell you what sort) 401.72 608.33 P
-0.74 (of command was responsible for halting drawing. For instance, if you had) 198 597.33 P
(instructed) 198 586.33 T
6 F
(GrDrawGString\050\051) 248.18 586.33 T
0 F
( to halt on an \324output\325 element) 339.11 586.33 T
(\050GrDraw\311\050\051 or GrFill\311\050\051 commands\051, then when) 198 575.33 T
6 F
(GrDrawGString\050\051) 428.37 575.33 T
0 F
(returns, you would check the value returned to see what sort of output) 198 564.33 T
(element was present.) 198 553.33 T
2 F
(Include:) 99 535.33 T
6 F
(gstring.h) 180 535.33 T
81 518.99 531 524 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 518.99 531 524 R
7 X
0 0 0 1 0 0 0 K
V
50 522.99 609.01 522.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 510.99 T
2 F
(GrDrawHLine\050\051) 99 510.99 T
3 10 Q
(void) 99 496.33 T
4 F
(GrDrawHLine\050) 153 496.33 T
4 9 Q
(GStateHandle) 153 485.99 T
(gstate,) 261 485.99 T
(/* GState to draw to */) 315 485.99 T
(sword) 153 475.99 T
(x1,) 261 475.99 T
(/* first horizontal coordinate */) 315 475.99 T
(sword) 153 465.99 T
(y,) 261 465.99 T
(/* vertical position of line */) 315 465.99 T
(sword) 153 455.99 T
(x2\051;) 261 455.99 T
(/* second horizontal coordinate */) 315 455.99 T
0 10 Q
(Draw a horizontal line.) 180 438.33 T
2 F
(Include:) 99 419.83 T
6 F
(graphics.h) 180 419.83 T
81 403.48 531 408.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 403.48 531 408.49 R
7 X
0 0 0 1 0 0 0 K
V
50 407.48 609.01 407.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 395.48 T
2 F
(GrDrawHLineT) 99 395.48 T
(o\050\051) 182.12 395.48 T
3 10 Q
(void) 99 380.82 T
4 F
(GrDrawHLineTo\050) 153 380.82 T
4 9 Q
(GStateHandle) 153 370.48 T
(gstate,) 261 370.48 T
(/* GState to draw to */) 315 370.48 T
(sword) 153 360.48 T
(x\051;) 261 360.48 T
(/* ending horizontal coordinate */) 315 360.48 T
0 10 Q
(Draw a horizontal line starting from the current position.) 180 342.82 T
2 F
(Include:) 99 324.32 T
6 F
(graphics.h) 180 324.32 T
81 307.98 531 312.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 307.98 531 312.98 R
7 X
0 0 0 1 0 0 0 K
V
50 311.98 609.01 311.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 299.98 T
2 F
(GrDrawHugeBitmap\050\051) 99 299.98 T
3 10 Q
(void) 99 285.31 T
4 F
(GrDrawHugeBitmap\050) 153 285.31 T
4 9 Q
(GStateHandle) 153 274.97 T
(gstate,) 261 274.97 T
(/* GState to draw to */) 315 274.97 T
(sword) 153 264.97 T
(x) 261 264.97 T
(/* Point at which to draw */) 315 264.97 T
(sword) 153 254.97 T
(y,) 261 254.97 T
(VMFileHandle) 153 244.97 T
(vmFile,) 261 244.97 T
(/* VM File holding HugeArray */) 315 244.97 T
(VMBlockHandle) 153 234.97 T
(vmBlk\051;) 261 234.97 T
(/* VM block of HugeArray */) 315 234.97 T
0 10 Q
(Draw a bitmap that resides in a HugeArray) 180 217.31 T
(.) 380.96 217.31 T
2 F
(Include:) 99 198.81 T
6 F
(graphics.h) 180 198.81 T
2 F
(See Also:) 99 178.81 T
6 F
(GrDrawBitmap\050\051) 180 178.81 T
0 F
( ,) 267.97 178.81 T
6 F
(GrDrawHugeBitmapAtCP\050\051) 276.31 178.81 T
0 F
(,) 418.9 178.81 T
6 F
(GrDrawHugeImage\050\051) 180 165.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "188" 36
%%Page: "189" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(189) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawHugeBitmapAtCP\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawHugeBitmapAtCP\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(VMFileHandle) 153 599.99 T
(vmFile,) 261 599.99 T
(/* VM file containing HugeArray */) 315 599.99 T
(VMBlockHandle) 153 589.99 T
(vmBlk\051;) 261 589.99 T
(/* VM block containing HugeArray */) 315 589.99 T
0 10 Q
(As) 180 572.33 T
6 F
(GrDrawHugeBitmap\050\051) 194.63 572.33 T
0 F
(, above, except that the bitmap is drawn at the) 310 572.33 T
(current position.) 180 560.83 T
2 F
(Include:) 99 542.33 T
6 F
(graphics.h) 180 542.33 T
2 F
(See Also:) 99 522.33 T
6 F
(GrDrawBitmapAtCP\050\051) 180 522.33 T
0 F
(,) 295.19 522.33 T
6 F
(GrDrawHugeBitmap\050\051) 300.75 522.33 T
81 505.98 531 510.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 505.98 531 510.99 R
7 X
0 0 0 1 0 0 0 K
V
50 509.98 609.01 509.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 497.98 T
2 F
(GrDrawHugeImage\050\051) 99 497.98 T
3 10 Q
(void) 99 483.32 T
4 F
(GrDrawHugeImage\050) 153 483.32 T
4 9 Q
(GStateHandle) 153 472.98 T
(gstate,) 261 472.98 T
(/* GState to draw to */) 315 472.98 T
(sword) 153 462.98 T
(x) 261 462.98 T
(/* point at which to draw */) 315 462.98 T
(sword) 153 452.98 T
(y,) 261 452.98 T
(ImageFlags) 153 442.98 T
(flags,) 261 442.98 T
(VMFileHandle) 153 432.98 T
(vmFile,) 261 432.98 T
(/* VM file holding HugeArray */) 315 432.98 T
(VMBlockHandle) 153 422.98 T
(vmBlk\051;) 261 422.98 T
(/* VM block holding HugeArray */) 315 422.98 T
0 10 Q
(Draw a bitmap that resides in a) 180 405.32 T
6 F
(HugeArray) 330.23 405.32 T
0 F
(. Note that the bitmap will be) 386.71 405.32 T
-0.75 (drawn on an assumption of one device pixel per bitmap pixel. The bitmap will) 180 393.82 P
-0.73 (not draw rotated or scaled. Depending on the value of the \337ags argument, the) 180 382.32 P
(bitmap may be expanded so that a square of device pixels displays each) 180 370.82 T
(bitmap pixel.) 180 359.32 T
2 F
(Structures:) 99 340.82 T
4 9 Q
(typedef ByteFlags ImageFlags;) 153 330.48 T
(/* The following flags be be combined using | and &:) 153 320.48 T
(IF_IGNORE_MASK,) 189 310.48 T
(IF_BORDER) 189 300.48 T
(* The flags should be combined with one ImageBitSize:) 153 290.48 T
(IF_BITSIZE */) 189 280.48 T
(#define IBS_1) 153 270.48 T
(0) 228.6 270.48 T
(#define IBS_2) 153 260.48 T
(1) 228.6 260.48 T
(#define IBS_4) 153 250.48 T
(2) 228.6 250.48 T
(#define IBS_8) 153 240.48 T
(3) 228.6 240.48 T
(#define IBS_16 4) 153 230.48 T
2 10 Q
(Include:) 99 212.82 T
6 F
(graphics.h) 180 212.82 T
2 F
(See Also:) 99 192.82 T
6 F
(GrDrawImage\050\051) 180 192.82 T
0 F
( ,) 261.85 192.82 T
6 F
(GrDrawHugeBitmapAtCP\050\051) 270.19 192.82 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "189" 37
%%Page: "190" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(190) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawImage\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawImage\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(sword) 153 599.99 T
(x) 261 599.99 T
(/* point at which to draw */) 315 599.99 T
(sword) 153 589.99 T
(y,) 261 589.99 T
(ImageFlags) 153 579.99 T
(flags,) 261 579.99 T
(const Bitmap) 153 569.99 T
(* bm\051;) 261 569.99 T
(/* pointer to bitmap */) 315 569.99 T
0 10 Q
-0.34 (Draw a bitmap. Note that the bitmap will be drawn on an assumption of one) 180 552.33 P
(device pixel per bitmap pixel. The bitmap will not draw rotated or scaled.) 180 540.83 T
-0.16 (Depending on the value of the \337ags argument, the bitmap may be expanded) 180 529.33 P
(so that a square of device pixels displays each bitmap pixel.) 180 517.83 T
2 F
(Structures:) 99 499.33 T
4 9 Q
(typedef ByteFlags ImageFlags;) 153 488.99 T
(/* The following flags be be combined using | and &:) 153 478.99 T
(IF_IGNORE_MASK,) 189 468.99 T
(IF_BORDER) 189 458.99 T
(* The flags should be combined with one ImageBitSize:) 153 448.99 T
(IF_BITSIZE */) 189 438.99 T
(#define IBS_1) 153 428.99 T
(0) 228.6 428.99 T
(#define IBS_2) 153 418.99 T
(1) 228.6 418.99 T
(#define IBS_4) 153 408.99 T
(2) 228.6 408.99 T
(#define IBS_8) 153 398.99 T
(3) 228.6 398.99 T
(#define IBS_16 4) 153 388.99 T
2 10 Q
(Include:) 99 371.33 T
6 F
(graphics.h) 180 371.33 T
2 F
(See Also:) 99 351.33 T
6 F
(GrDrawHugeImage\050\051) 180 351.33 T
0 F
( ,) 289.25 351.33 T
6 F
(GrDrawBitmap\050\051) 297.59 351.33 T
81 334.98 531 339.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 334.98 531 339.99 R
7 X
0 0 0 1 0 0 0 K
V
50 338.98 609.01 338.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 326.98 T
2 F
(GrDrawLine\050\051) 99 326.98 T
3 10 Q
(void) 99 312.32 T
4 F
(GrDrawLine\050) 153 312.32 T
4 9 Q
(GStateHandle) 153 301.98 T
(gstate,) 261 301.98 T
(/* GState to draw to */) 315 301.98 T
(sword) 153 291.98 T
(x1,) 261 291.98 T
(/* First coordinate of line */) 315 291.98 T
(sword) 153 281.98 T
(y1,) 261 281.98 T
(sword) 153 271.98 T
(x2,) 261 271.98 T
(/* Second coordinate of line */) 315 271.98 T
(sword) 153 261.98 T
(y2\051;) 261 261.98 T
0 10 Q
(Draw a line.) 180 244.32 T
2 F
(Include:) 99 225.82 T
6 F
(graphics.h) 180 225.82 T
2 F
(See Also:) 99 205.82 T
6 F
(GrDrawLineT) 180 205.82 T
(o\050\051) 251.85 205.82 T
0 F
(,) 265.74 205.82 T
6 F
(GrDrawHLine\050\051) 271.3 205.82 T
0 F
(,) 353.33 205.82 T
6 F
(GrDrawVLine\050\051) 358.89 205.82 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "190" 38
%%Page: "191" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(191) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawLineT) 99 634.99 T
(o\050\051) 173.46 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawLineTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(sword) 153 599.99 T
(x,) 261 599.99 T
(/* Second coordinate of line */) 315 599.99 T
(sword) 153 589.99 T
(y\051;) 261 589.99 T
0 10 Q
(Draw a line starting from the current position.) 180 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
2 F
(See Also:) 99 533.83 T
6 F
(GrDrawLine\050\051) 180 533.83 T
0 F
(,) 253.33 533.83 T
6 F
(GrDrawHLineT) 258.89 533.83 T
(o\050\051) 339.44 533.83 T
0 F
(,) 353.33 533.83 T
6 F
(GrDrawVLineT) 358.89 533.83 T
(o\050\051) 438.33 533.83 T
81 517.48 531 522.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 517.48 531 522.49 R
7 X
0 0 0 1 0 0 0 K
V
50 521.48 609.01 521.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 509.48 T
2 F
(GrDrawPath\050\051) 99 509.48 T
3 10 Q
(void) 99 494.82 T
4 F
(GrDrawPath\050) 153 494.82 T
4 9 Q
(GStateHandle gstate\051;) 153 484.48 T
(/* GState to draw to */) 279 484.48 T
0 10 Q
-0.58 (Draws the stroked version of the current path, using the current graphic line) 180 466.82 P
(attributes.) 180 455.32 T
2 F
(Include:) 99 436.82 T
6 F
(graphics.h) 180 436.82 T
81 420.48 531 425.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 420.48 531 425.48 R
7 X
0 0 0 1 0 0 0 K
V
50 424.48 609.01 424.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 412.48 T
2 F
(GrDrawPoint\050\051) 99 412.48 T
3 10 Q
(void) 99 397.81 T
4 F
(GrDrawPoint\050) 153 397.81 T
4 9 Q
(GStateHandle) 153 387.48 T
(gstate,) 261 387.48 T
(/* GState to draw to */) 315 387.48 T
(sword) 153 377.48 T
(x,) 261 377.48 T
(/* Coordinates of point to draw */) 315 377.48 T
(sword) 153 367.48 T
(y\051;) 261 367.48 T
0 10 Q
(Draw a pixel.) 180 349.81 T
2 F
(Include:) 99 331.31 T
6 F
(graphics.h) 180 331.31 T
81 314.97 531 319.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 314.97 531 319.98 R
7 X
0 0 0 1 0 0 0 K
V
50 318.97 609.01 318.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 306.97 T
2 F
(GrDrawPointAtCP\050\051) 99 306.97 T
3 10 Q
(void) 99 292.3 T
4 F
(GrDrawPointAtCP\050) 153 292.3 T
4 9 Q
(GStateHandle gstate\051;) 153 281.97 T
(/* GState to draw to */) 279 281.97 T
0 10 Q
(Draw a pixel.) 180 264.3 T
2 F
(Include:) 99 245.8 T
6 F
(graphics.h) 180 245.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "191" 39
%%Page: "192" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(192) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawPolygon\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawPolygon\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 333 609.99 T
(const) 153 599.99 T
(Point) 189 599.99 T
(* points,) 261 599.99 T
(/* array of points in polygon */) 333 599.99 T
(word) 153 589.99 T
(numPoints\051;) 261 589.99 T
(/* number of points in array */) 333 589.99 T
0 10 Q
(Draws a connected polygon.) 180 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
81 537.48 531 542.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.48 531 542.49 R
7 X
0 0 0 1 0 0 0 K
V
50 541.48 609.01 541.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.48 T
2 F
(GrDrawPolyline\050\051) 99 529.48 T
3 10 Q
(void) 99 514.82 T
4 F
(GrDrawPolyline\050) 153 514.82 T
4 9 Q
(GStateHandle) 153 504.48 T
(gstate,) 261 504.48 T
(/* GState to draw to */) 333 504.48 T
(const) 153 494.48 T
(Point) 189 494.48 T
(* points,) 261 494.48 T
(/* array of points in polyline */) 333 494.48 T
(word) 153 484.48 T
(numPoints\051;) 261 484.48 T
(/* number of points in array */) 333 484.48 T
0 10 Q
(Draws a simple polyline.) 180 466.82 T
2 F
(Include:) 99 448.32 T
6 F
(graphics.h) 180 448.32 T
81 431.98 531 436.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 431.98 531 436.98 R
7 X
0 0 0 1 0 0 0 K
V
50 435.98 609.01 435.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 423.98 T
2 F
(GrDrawRect\050\051) 99 423.98 T
3 10 Q
(void) 99 409.31 T
4 F
(GrDrawRect\050) 153 409.31 T
4 9 Q
(GStateHandle) 153 398.98 T
(gstate,) 261 398.98 T
(/* GState to draw to */) 315 398.98 T
(sword) 153 388.98 T
(left,) 261 388.98 T
(/* bounds of rectangle to draw */) 315 388.98 T
(sword) 153 378.98 T
(top,) 261 378.98 T
(sword) 153 368.98 T
(right,) 261 368.98 T
(sword) 153 358.98 T
(bottom\051;) 261 358.98 T
0 10 Q
(Draws the outline of a rectangle.) 180 341.31 T
2 F
(Include:) 99 322.81 T
6 F
(graphics.h) 180 322.81 T
81 306.47 531 311.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 306.47 531 311.48 R
7 X
0 0 0 1 0 0 0 K
V
50 310.47 609.01 310.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 298.47 T
2 F
(GrDrawRectT) 99 298.47 T
(o\050\051) 174.79 298.47 T
3 10 Q
(void) 99 283.8 T
4 F
(GrDrawRectTo\050) 153 283.8 T
4 9 Q
(GStateHandle) 153 273.47 T
(gstate,) 261 273.47 T
(/* GState to draw to */) 315 273.47 T
(sword) 153 263.47 T
(x,) 261 263.47 T
(/* opposite corner of rectangle */) 315 263.47 T
(sword) 153 253.47 T
(y\051;) 261 253.47 T
0 10 Q
(Draws the outline of a rectangle, with one corner de\336ned by the current) 180 235.8 T
(position.) 180 224.3 T
2 F
(Include:) 99 205.8 T
6 F
(graphics.h) 180 205.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "192" 40
%%Page: "193" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(193) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawRegion\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawRegion\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(sword) 153 599.99 T
(xPos,) 261 599.99 T
(/* Position at which to draw */) 315 599.99 T
(sword) 153 589.99 T
(yPos,) 261 589.99 T
(const) 153 579.99 T
(Region) 189 579.99 T
(* reg,) 261 579.99 T
(/* Region definition */) 315 579.99 T
(sword) 153 569.99 T
(param0,) 261 569.99 T
(/* value to use with) 315 569.99 T
( * parameterized coordinates */) 297 559.99 T
(sword) 153 549.99 T
(param\0511;) 261 549.99 T
(/* value to use with) 315 549.99 T
( * parameterized coordinates */) 297 539.99 T
0 10 Q
(Draw a region. The area will be rendered \336lled with the GState\325) 180 522.33 T
(s area) 474.32 522.33 T
(attributes.) 180 510.83 T
2 F
(Include:) 99 492.33 T
6 F
(graphics.h) 180 492.33 T
81 475.98 531 480.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 475.98 531 480.99 R
7 X
0 0 0 1 0 0 0 K
V
50 479.98 609.01 479.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 467.98 T
2 F
(GrDrawRegionAtCP\050\051) 99 467.98 T
3 10 Q
(void) 99 453.32 T
4 F
(GrDrawRegionAtCP\050) 153 453.32 T
4 9 Q
(GStateHandle) 153 442.98 T
(gstate,) 261 442.98 T
(/* GState to draw to */) 315 442.98 T
(const) 153 432.98 T
(Region) 189 432.98 T
(* reg,) 261 432.98 T
(/* region definition */) 315 432.98 T
(sword) 153 422.98 T
(param0,) 189 422.98 T
(/* Value to use with parameterized coordinates */) 261 422.98 T
(sword) 153 412.98 T
(param1,) 189 412.98 T
(/* Value to use with parameterized coordinates */) 261 412.98 T
(sword) 153 402.98 T
(param2,) 189 402.98 T
(/* Value to use with parameterized coordinates */) 261 402.98 T
(sword) 153 392.98 T
(param\0513;) 189 392.98 T
(/* Value to use with parameterized coordinates */) 261 392.98 T
0 10 Q
(Draw a region at the current pen position. The area will be rendered \336lled) 180 375.32 T
(with the GState\325) 180 363.82 T
(s area attributes.) 255.58 363.82 T
2 F
(Include:) 99 345.32 T
6 F
(graphics.h) 180 345.32 T
81 328.98 531 333.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.98 531 333.98 R
7 X
0 0 0 1 0 0 0 K
V
50 332.98 609.01 332.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 320.98 T
2 F
(GrDrawRelArc3PointT) 99 320.98 T
(o\050\051) 224.14 320.98 T
3 10 Q
(void) 99 306.31 T
4 F
(GrDrawRelArc3PointTo\050) 153 306.31 T
4 9 Q
(const ThreePointRelArcToParams *params\051;) 153 295.98 T
0 10 Q
-0.32 (Draw a circular arc relative to the current point given two additional points:) 180 278.31 P
-0.23 (the other endpoint and any other point on the arc, both described in relative) 180 266.81 P
(coordinates.) 180 255.31 T
2 F
(Include:) 99 236.81 T
6 F
(graphics.h) 180 236.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "193" 41
%%Page: "194" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(194) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawRelLineT) 99 634.99 T
(o\050\051) 192.13 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawRelLineTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(WWFixedAsDWord) 153 599.99 T
(x,) 261 599.99 T
(/* horizontal offset of second point */) 315 599.99 T
(WWFixedAsDWord) 153 589.99 T
(y\051;) 261 589.99 T
(/* vertical offset of second point */) 315 589.99 T
0 10 Q
(Draw a line from the current pen position, given a displacement from the) 180 572.33 T
(current pen position to draw to.) 180 560.83 T
2 F
(Include:) 99 542.33 T
6 F
(graphics.h) 180 542.33 T
81 525.98 531 530.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 525.98 531 530.99 R
7 X
0 0 0 1 0 0 0 K
V
50 529.98 609.01 529.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 517.98 T
2 F
(GrDrawRoundRect\050\051) 99 517.98 T
3 10 Q
(void) 99 503.32 T
4 F
(GrDrawRoundRect\050) 153 503.32 T
4 9 Q
(GStateHandle) 153 492.98 T
(gstate,) 261 492.98 T
(/* GState to draw to */) 351 492.98 T
(sword) 153 482.98 T
(left,) 261 482.98 T
(/* bounds of rectangle */) 351 482.98 T
(sword) 153 472.98 T
(top,) 261 472.98 T
(sword) 153 462.98 T
(right,) 261 462.98 T
(sword) 153 452.98 T
(bottom,) 261 452.98 T
(word) 153 442.98 T
(cornerRadius\051;) 261 442.98 T
(/* radius of corner rounding */) 351 442.98 T
0 10 Q
(Draw the outline of a rounded rectangle.) 180 425.32 T
2 F
(Include:) 99 406.82 T
6 F
(graphics.h) 180 406.82 T
81 390.48 531 395.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 390.48 531 395.48 R
7 X
0 0 0 1 0 0 0 K
V
50 394.48 609.01 394.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 382.48 T
2 F
(GrDrawRoundRectT) 99 382.48 T
(o\050\051) 212.78 382.48 T
3 10 Q
(void) 99 367.81 T
4 F
(GrDrawRoundRectTo\050) 153 367.81 T
4 9 Q
(GStateHandle) 153 357.48 T
(gstate,) 261 357.48 T
(/* GState to draw to */) 351 357.48 T
(sword) 153 347.48 T
(x,) 261 347.48 T
(/* opposite corner of bounds */) 351 347.48 T
(sword) 153 337.48 T
(y,) 261 337.48 T
(word) 153 327.48 T
(cornerRadius\051;) 261 327.48 T
(/* radius of corner rounding */) 351 327.48 T
0 10 Q
(Draw the outline of a rounded rectangle, where one corner of the bounding) 180 309.81 T
(rectangle is the current position.) 180 298.31 T
2 F
(Include:) 99 279.81 T
6 F
(graphics.h) 180 279.81 T
81 263.47 531 268.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.47 531 268.47 R
7 X
0 0 0 1 0 0 0 K
V
50 267.47 609.01 267.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.47 T
2 F
(GrDrawSpline\050\051) 99 255.47 T
3 10 Q
(void) 99 240.8 T
4 F
(GrDrawSpline\050) 153 240.8 T
4 9 Q
(GStateHandle) 153 230.47 T
(gstate,) 261 230.47 T
(/* GState to draw to */) 333 230.47 T
(const) 153 220.47 T
(Point) 189 220.47 T
(* points,) 261 220.47 T
(/* array of points */) 333 220.47 T
(word) 153 210.47 T
(numPoints,\051;) 261 210.47 T
(/* number of points in array */) 333 210.47 T
0 10 Q
(Draw a Bezier spline.) 180 192.8 T
2 F
(Include:) 99 174.3 T
6 F
(graphics.h) 180 174.3 T
2 F
(See Also:) 99 154.3 T
6 F
(GrDrawCurve\050\051) 180 154.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "194" 42
%%Page: "195" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(195) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawSplineT) 99 634.99 T
(o\050\051) 184.8 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawSplineTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 333 609.99 T
(const) 153 599.99 T
(Point) 189 599.99 T
(*points,) 261 599.99 T
(/* array of points */) 333 599.99 T
(word) 153 589.99 T
(numPoints\051;) 261 589.99 T
(/* number of points in array */) 333 589.99 T
0 10 Q
(Draw a Bezier spline, using the current position as one endpoint.) 180 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
2 F
(See Also:) 99 533.83 T
6 F
(GrDrawCurveT) 180 533.83 T
(o\050\051) 260.01 533.83 T
81 517.48 531 522.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 517.48 531 522.49 R
7 X
0 0 0 1 0 0 0 K
V
50 521.48 609.01 521.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 509.48 T
2 F
(GrDrawT) 99 509.48 T
(ext\050\051) 148.79 509.48 T
3 10 Q
(void) 99 494.82 T
4 F
(GrDrawText\050) 153 494.82 T
4 9 Q
(GStateHandle) 153 484.48 T
(gstate,) 261 484.48 T
(/* GState to draw to */) 315 484.48 T
(sword) 153 474.48 T
(x,) 261 474.48 T
(/* point at which to draw */) 315 474.48 T
(sword) 153 464.48 T
(y,) 261 464.48 T
(const) 153 454.48 T
(Chars) 189 454.48 T
(* str,) 261 454.48 T
(/* pointer to character string */) 315 454.48 T
(word) 153 444.48 T
(size\051;) 261 444.48 T
(/* length of string */) 315 444.48 T
0 10 Q
(Draw a string of text. The string is represented as an array of characters.) 180 426.82 T
(Note that the text will be drawn using the GState\325) 180 415.32 T
(s font drawing attributes) 411.54 415.32 T
(and that this routine does not accept any style run arguments.) 180 403.82 T
(If the passed) 180 385.32 T
5 F
(size) 242.04 385.32 T
0 F
( argument is zero, the string is assumed to be) 258.88 385.32 T
(null-terminated.) 180 373.82 T
2 F
(Include:) 99 355.32 T
6 F
(graphics.h) 180 355.32 T
81 338.98 531 343.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 338.98 531 343.98 R
7 X
0 0 0 1 0 0 0 K
V
50 342.98 609.01 342.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 330.98 T
2 F
(GrDrawT) 99 330.98 T
(extAtCP\050\051) 148.79 330.98 T
3 10 Q
(void) 99 316.31 T
4 F
(GrDrawTextAtCP\050) 153 316.31 T
4 9 Q
(GStateHandle) 153 305.98 T
(gstate,) 261 305.98 T
(/* GState to draw to */) 315 305.98 T
(const) 153 295.98 T
(Chars) 189 295.98 T
(* str,) 261 295.98 T
(/* pointer to character string */) 315 295.98 T
(word) 153 285.98 T
(size\051;) 261 285.98 T
(/* length of string */) 315 285.98 T
0 10 Q
(As) 180 268.31 T
6 F
(GrDrawT) 194.63 268.31 T
(ext\050\051) 242.97 268.31 T
0 F
(, above, except that the text is drawn at the current) 266.86 268.31 T
(position.) 180 256.81 T
(If the passed) 180 238.31 T
5 F
(size) 242.04 238.31 T
0 F
( argument is zero, the string is assumed to be) 258.88 238.31 T
(null-terminated.) 180 226.81 T
2 F
(Include:) 99 208.31 T
6 F
(graphics.h) 180 208.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "195" 43
%%Page: "196" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(196) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrDrawVLine\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrDrawVLine\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(sword) 153 599.99 T
(x,) 261 599.99 T
(/* horizontal position of line */) 315 599.99 T
(sword) 153 589.99 T
(y1,) 261 589.99 T
(/* first vertical coordinate */) 315 589.99 T
(sword) 153 579.99 T
(y2\051;) 261 579.99 T
(/* second vertical coordinate */) 315 579.99 T
0 10 Q
(Draw a vertical line.) 180 562.33 T
2 F
(Include:) 99 543.83 T
6 F
(graphics.h) 180 543.83 T
81 527.48 531 532.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 527.48 531 532.49 R
7 X
0 0 0 1 0 0 0 K
V
50 531.48 609.01 531.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 519.48 T
2 F
(GrDrawVLineT) 99 519.48 T
(o\050\051) 181.46 519.48 T
3 10 Q
(void) 99 504.82 T
4 F
(GrDrawVLine\050) 153 504.82 T
4 9 Q
(GStateHandle) 153 494.48 T
(gstate,) 261 494.48 T
(/* GState to draw to */) 315 494.48 T
(sword) 153 484.48 T
(y\051;) 261 484.48 T
(/* second vertical position */) 315 484.48 T
0 10 Q
(Draw a vertical line starting from the current position.) 180 466.82 T
2 F
(Include:) 99 448.32 T
6 F
(graphics.h) 180 448.32 T
81 431.98 531 436.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 431.98 531 436.98 R
7 X
0 0 0 1 0 0 0 K
V
50 435.98 609.01 435.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 423.98 T
2 F
(GrEditBitmap\050\051) 99 423.98 T
4 10 Q
(GStateHandle GrEditBitmap\050) 99 409.31 T
4 9 Q
(VMFileHandle) 153 398.98 T
(vmFile,) 261 398.98 T
(/* VM file of bitmap */) 333 398.98 T
(VMBlockHandle) 153 388.98 T
(vmBlock,) 261 388.98 T
(/* VM block of bitmap */) 333 388.98 T
(optr) 153 378.98 T
(exposureOD\051;) 261 378.98 T
(/* optr to get MSG_META_EXPOSED */) 333 378.98 T
0 10 Q
(This routine attaches a GState to the passed bitmap so that new drawings) 180 361.31 T
(may be be sent to the bitmap.) 180 349.81 T
2 F
(Include:) 99 331.31 T
6 F
(graphics.h) 180 331.31 T
81 314.97 531 319.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 314.97 531 319.98 R
7 X
0 0 0 1 0 0 0 K
V
50 318.97 609.01 318.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 306.97 T
2 F
(GrEditGString\050\051) 99 306.97 T
3 10 Q
(GStateHandle) 99 293.3 T
4 F
( GrEditGString\050) 171 293.3 T
4 9 Q
(Handle) 153 282.97 T
(vmFile,) 189 282.97 T
(/* VM file containing the GString */) 261 282.97 T
(word) 153 272.97 T
(vmBlock\051;) 189 272.97 T
(/* VM block containing the GString */) 261 272.97 T
0 10 Q
-0.31 (This routine takes the location of a GString data block stored in a VM \336le. It) 180 255.3 P
-0.45 (will associate a GState with this GString data and returns the handle of this) 180 243.8 P
(GState. Any graphics commands issued using this GStateHandle will be) 180 232.3 T
(appended to the GString.) 180 220.8 T
2 F
(Include:) 99 202.3 T
6 F
(graphics.h) 180 202.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "196" 44
%%Page: "197" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(197) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrEndGString\050\051) 99 634.99 T
3 10 Q
(GStringErrorType) 99 620.33 T
4 F
( GrEndGString\050) 195 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* GState to draw to */) 279 609.99 T
0 10 Q
(Finish the de\336nition of a graphics string.) 180 592.33 T
2 F
(Structures:) 99 573.83 T
4 9 Q
(typedef enum {) 189 563.49 T
(GSET_NO_ERROR,) 189 553.49 T
(GSET_DISK_FULL) 189 543.49 T
(} GStringErrorType;) 189 533.49 T
2 10 Q
(Include:) 99 515.83 T
6 F
(graphics.h) 180 515.83 T
81 499.48 531 504.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 499.48 531 504.49 R
7 X
0 0 0 1 0 0 0 K
V
50 503.48 609.01 503.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 491.48 T
2 F
(GrEndPath\050\051) 99 491.48 T
3 10 Q
(void) 99 476.82 T
4 F
(GrEndPath\050) 153 476.82 T
4 9 Q
(GStateHandle gstate\051;) 153 466.48 T
(/* GState to draw to */) 279 466.48 T
0 10 Q
(Finish de\336nition of a path. Further graphics commands will draw to the) 180 448.82 T
(display) 180 437.32 T
(, as normal.) 212.23 437.32 T
2 F
(Include:) 99 418.82 T
6 F
(graphics.h) 180 418.82 T
81 402.48 531 407.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 402.48 531 407.48 R
7 X
0 0 0 1 0 0 0 K
V
50 406.48 609.01 406.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 394.48 T
2 F
(GrEndUpdate\050\051) 99 394.48 T
3 10 Q
(void) 99 379.81 T
4 F
(GrEndUpdate\050) 153 379.81 T
4 9 Q
(GStateHandle gstate\051;) 153 369.48 T
(/* GState to draw to */) 279 369.48 T
0 10 Q
(Unlocks window from an update.) 180 351.81 T
2 F
(Include:) 99 333.31 T
6 F
(win.h) 180 333.31 T
81 316.97 531 321.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 316.97 531 321.98 R
7 X
0 0 0 1 0 0 0 K
V
50 320.97 609.01 320.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 308.97 T
2 F
(GrEnumFonts\050\051) 99 308.97 T
3 10 Q
(word) 99 294.3 T
4 F
(GrEnumFonts\050 /* Return value = number of fonts found */) 153 294.3 T
4 9 Q
(FontEnumStruct) 153 283.97 T
(* buffer,) 261 283.97 T
(/* buffer for returned values */) 315 283.97 T
(word) 153 273.97 T
(size,) 261 273.97 T
(/* number of structures to return */) 315 273.97 T
(FontEnumFlags) 153 263.97 T
(flags,) 261 263.97 T
(/* FontEnumFlags */) 315 263.97 T
(word) 153 253.97 T
(family\051;) 261 253.97 T
(/* FontFamily */) 315 253.97 T
0 10 Q
(Generate a list of available fonts. The font information includes both the) 180 236.3 T
(font\325) 180 224.8 T
(s) 200 224.8 T
0 9 Q
(ID) 207.41 224.8 T
0 10 Q
( and a string name.) 218.07 224.8 T
2 F
(Structures:) 99 206.3 T
4 9 Q
(typedef struct {) 189 195.97 T
(FontID FES_ID;) 189 185.97 T
(char FES_name[FID_NAME_LEN];) 189 175.97 T
(} FontEnumStruct;) 189 165.97 T
2 10 Q
(Include:) 99 148.3 T
6 F
(font.h) 180 148.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "197" 45
%%Page: "198" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(198) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrEscape\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrEscape\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 315 609.99 T
(word) 153 599.99 T
(code,) 261 599.99 T
(/* escape code */) 315 599.99 T
(const) 153 589.99 T
(void) 189 589.99 T
(* data,) 261 589.99 T
(/* pointer to the data */) 315 589.99 T
(word) 153 579.99 T
(size\051;) 261 579.99 T
(/* Size of data, in bytes */) 315 579.99 T
0 10 Q
(W) 180 562.33 T
(rite an escape code to a graphics string.) 189.26 562.33 T
2 F
(Include:) 99 543.83 T
6 F
(graphics.h) 180 543.83 T
81 527.48 531 532.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 527.48 531 532.49 R
7 X
0 0 0 1 0 0 0 K
V
50 531.48 609.01 531.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 519.48 T
2 F
(GrFillArc\050\051) 99 519.48 T
3 10 Q
(void) 99 504.82 T
4 F
(GrFillArc\050) 153 504.82 T
4 9 Q
(GStateHandle) 153 494.48 T
(gstate,) 261 494.48 T
(/* GState to draw to */) 333 494.48 T
(sword) 153 484.48 T
(left,) 261 484.48 T
(/* bounding rectangle */) 333 484.48 T
(sword) 153 474.48 T
(top,) 261 474.48 T
(sword) 153 464.48 T
(right,) 261 464.48 T
(sword) 153 454.48 T
(bottom,) 261 454.48 T
(word) 153 444.48 T
(startAngle,) 261 444.48 T
(/* angles in degrees) 333 444.48 T
(word) 153 434.48 T
(endAngle) 261 434.48 T
( * counter-clockwise */) 333 434.48 T
(ArcCloseType) 153 424.48 T
(closeType\051;) 261 424.48 T
(/* OPEN, CHORD, or PIE */) 333 424.48 T
0 10 Q
-0.39 (Fill an elliptical arc. The arc is de\336ned by the bounding rectangle of the base) 180 406.82 P
-0.44 (ellipse and two angles. Depending on how the arc is closed, this will result in) 180 395.32 P
(either a wedge or a chord \336ll.) 180 383.82 T
2 F
(Include:) 99 365.32 T
6 F
(graphics.h) 180 365.32 T
81 348.98 531 353.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 348.98 531 353.98 R
7 X
0 0 0 1 0 0 0 K
V
50 352.98 609.01 352.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 340.98 T
2 F
(GrFillArc3Point\050\051) 99 340.98 T
3 10 Q
(void) 99 326.31 T
4 F
(GrFillArc3Point\050) 153 326.31 T
4 9 Q
(GStateHandle) 153 315.98 T
(gstate,) 261 315.98 T
(/* GState to draw to */) 333 315.98 T
(const ThreePointParams *params\051;) 153 305.98 T
0 10 Q
(Fill an arc. Depending on how the arc is closed, this will result in either a) 180 288.31 T
(wedge or a chord \336ll. The arc is de\336ned in terms of its endpoints and one) 180 276.81 T
(other point, all of which must lie on the arc.) 180 265.31 T
2 F
(Include:) 99 246.81 T
6 F
(graphics.h) 180 246.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "198" 46
%%Page: "199" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(199) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrFillArc3PointT) 99 634.99 T
(o\050\051) 193.46 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrFillArc3PointTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 333 609.99 T
(const ThreePointArcParams) 153 599.99 T
(*params\051;) 293.4 599.99 T
0 10 Q
-0.26 (As) 180 582.33 P
6 F
-0.27 (GrFillArc3Point\050\051) 194.37 582.33 P
0 F
-0.26 (, above, except that one endpoint of the arc is de\336ned) 286.22 582.33 P
(by the current position.) 180 570.83 T
2 F
(Include:) 99 552.33 T
6 F
(graphics.h) 180 552.33 T
81 535.98 531 540.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 535.98 531 540.99 R
7 X
0 0 0 1 0 0 0 K
V
50 539.98 609.01 539.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 527.98 T
2 F
(GrFillBitmap\050\051) 99 527.98 T
3 10 Q
(void) 99 513.32 T
4 F
(GrFillBitmap \050) 153 513.32 T
4 9 Q
(GStateHandle) 153 502.98 T
(gstate,) 261 502.98 T
(/* GState to draw to */) 333 502.98 T
(sword) 153 492.98 T
(x,) 261 492.98 T
(/* point at which to draw */) 333 492.98 T
(sword) 153 482.98 T
(y,) 261 482.98 T
(const Bitmap) 153 472.98 T
(* bm,) 261 472.98 T
(/* pointer to bitmap */) 333 472.98 T
(Bitmap * \050*callback\051 \050Bitmap *bm\051\051;) 153 462.98 T
0 10 Q
-0.05 (Fill a monochrome bitmap with the current area attributes. The arguments) 180 445.32 P
(to this routine are the same as those for) 180 433.82 T
6 F
(GrDrawBitmap\050\051) 367.06 433.82 T
0 F
(.) 455.03 433.82 T
2 F
(Include:) 99 415.32 T
6 F
(graphics.h) 180 415.32 T
81 398.98 531 403.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 398.98 531 403.98 R
7 X
0 0 0 1 0 0 0 K
V
50 402.98 609.01 402.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 390.98 T
2 F
(GrFillBitmapAtCP\050\051) 99 390.98 T
3 10 Q
(void) 99 376.31 T
4 F
(GrFillBitmapAtCP \050) 153 376.31 T
4 9 Q
(GStateHandle) 153 365.98 T
(gstate,) 261 365.98 T
(/* GState to draw to */) 351 365.98 T
(const Bitmap) 153 355.98 T
(* bm,) 261 355.98 T
(/* pointer to bitmap */) 351 355.98 T
(Bitmap * \050*callback\051 \050Bitmap *bm\051\051;) 153 345.98 T
0 10 Q
-0.28 (Fill a monochrome bitmap with the current area attributes. The bitmap will) 180 328.31 P
-0.62 (be drawn at the current position. The arguments to this routine are the same) 180 316.81 P
(as those for) 180 305.31 T
6 F
(GrDrawBitmapAtCP\050\051) 235.93 305.31 T
0 F
(.) 351.12 305.31 T
2 F
(Include:) 99 286.81 T
6 F
(graphics.h) 180 286.81 T
81 270.47 531 275.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 270.47 531 275.47 R
7 X
0 0 0 1 0 0 0 K
V
50 274.47 609.01 274.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 262.47 T
2 F
(GrFillEllipse\050\051) 99 262.47 T
3 10 Q
(void) 99 247.8 T
4 F
(GrFillEllipse\050) 153 247.8 T
4 9 Q
(GStateHandle) 153 237.47 T
(gstate,) 261 237.47 T
(/* GState to draw to */) 333 237.47 T
(sword) 153 227.47 T
(left,) 261 227.47 T
(/* Bounds of bounding rectangle */) 333 227.47 T
(sword) 153 217.47 T
(top,) 261 217.47 T
(sword) 153 207.47 T
(right,) 261 207.47 T
(sword) 153 197.47 T
(bottom\051;) 261 197.47 T
0 10 Q
(Draw a \336lled ellipse. The ellipse\325) 180 179.8 T
(s dimensions are de\336ned by its bounding) 330.04 179.8 T
(box.) 180 168.3 T
2 F
(Include:) 99 149.8 T
6 F
(graphics.h) 180 149.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "199" 47
%%Page: "200" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(200) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrFillPath\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrFillPath\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 333 609.99 T
(RegionFillRule) 153 599.99 T
(rule\051;) 261 599.99 T
(/* ODD_EVEN or WINDING */) 333 599.99 T
0 10 Q
(Fill an area whose outline is de\336ned by the GState\325) 180 582.33 T
(s path.) 415.8 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrFillPolygon\050\051) 99 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrFillPolygon\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* GState to draw to */) 351 514.48 T
(RegionFillRule) 153 504.48 T
(windingRule,) 261 504.48 T
(/* ODD_EVEN or WINDING */) 351 504.48 T
(const) 153 494.48 T
(Point) 189 494.48 T
(* points,) 261 494.48 T
(/* array of points in polygon */) 351 494.48 T
(word) 153 484.48 T
(numPoints\051;) 261 484.48 T
(/* number of points in array */) 351 484.48 T
0 10 Q
(\336ll polygon. The polygon is de\336ned by the passed array of points.) 180 466.82 T
2 F
(Include:) 99 448.32 T
6 F
(graphics.h) 180 448.32 T
81 431.98 531 436.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 431.98 531 436.98 R
7 X
0 0 0 1 0 0 0 K
V
50 435.98 609.01 435.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 423.98 T
2 F
(GrFillRect\050\051) 99 423.98 T
3 10 Q
(void) 99 409.31 T
4 F
(GrFillRect\050) 153 409.31 T
4 9 Q
(GStateHandle) 153 398.98 T
(gstate,) 261 398.98 T
(/* GState to draw to */) 333 398.98 T
(sword) 153 388.98 T
(left,) 261 388.98 T
(/* bounds of rectangle */) 333 388.98 T
(sword) 153 378.98 T
(top,) 261 378.98 T
(sword) 153 368.98 T
(right,) 261 368.98 T
(sword) 153 358.98 T
(bottom\051;) 261 358.98 T
0 10 Q
(Draw a \336lled rectangle.) 180 341.31 T
2 F
(Include:) 99 322.81 T
6 F
(graphics.h) 180 322.81 T
81 306.47 531 311.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 306.47 531 311.48 R
7 X
0 0 0 1 0 0 0 K
V
50 310.47 609.01 310.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 298.47 T
2 F
(GrFillRectT) 99 298.47 T
(o\050\051) 162.79 298.47 T
3 10 Q
(void) 99 283.8 T
4 F
(GrFillRectTo\050) 153 283.8 T
4 9 Q
(GStateHandle) 153 273.47 T
(gstate,) 261 273.47 T
(/* GState to draw to */) 333 273.47 T
(sword) 153 263.47 T
(x,) 261 263.47 T
(/* opposite corner of rectangle */) 333 263.47 T
(sword) 153 253.47 T
(y\051;) 261 253.47 T
0 10 Q
(Draw a \336lled rectangle. The current position will de\336ne one of the corners.) 180 235.8 T
2 F
(Include:) 99 217.3 T
6 F
(graphics.h) 180 217.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "200" 48
%%Page: "201" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(201) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrFillRoundRect\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrFillRoundRect\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* GState to draw to */) 351 609.99 T
(sword) 153 599.99 T
(left,) 261 599.99 T
(/* bounds of rectangle */) 351 599.99 T
(sword) 153 589.99 T
(top,) 261 589.99 T
(sword) 153 579.99 T
(right,) 261 579.99 T
(sword) 153 569.99 T
(bottom) 261 569.99 T
(word) 153 559.99 T
(cornerRadius\051;) 261 559.99 T
(/* radius of corner rounding */) 351 559.99 T
0 10 Q
(Draw a \336lled rounded rectangle.) 180 542.33 T
2 F
(Include:) 99 523.83 T
6 F
(graphics.h) 180 523.83 T
81 507.48 531 512.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 507.48 531 512.49 R
7 X
0 0 0 1 0 0 0 K
V
50 511.48 609.01 511.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 499.48 T
2 F
(GrFillRoundRectT) 99 499.48 T
(o\050\051) 200.78 499.48 T
3 10 Q
(void) 99 484.82 T
4 F
(GrFillRoundRectTo\050) 153 484.82 T
4 9 Q
(GStateHandle) 153 474.48 T
(gstate,) 261 474.48 T
(/* GState to draw to */) 333 474.48 T
(sword) 153 464.48 T
(x,) 261 464.48 T
(/* opposite corner of rectangle */) 333 464.48 T
(sword) 153 454.48 T
(y) 261 454.48 T
(word) 153 444.48 T
(cornerRadius\051;) 261 444.48 T
(/* radius of corner roundings */) 351 444.48 T
0 10 Q
(Draw a \336lled rounded rectangle, using the current position to de\336ne one) 180 426.82 T
(corner of the bounding rectangle.) 180 415.32 T
2 F
(Include:) 99 396.82 T
6 F
(graphics.h) 180 396.82 T
81 380.48 531 385.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 380.48 531 385.48 R
7 X
0 0 0 1 0 0 0 K
V
50 384.48 609.01 384.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 372.48 T
2 F
(GrFindNearestPointsize\050\051) 99 372.48 T
3 10 Q
(Boolean) 99 357.81 T
4 F
(GrFindNearestPointsize\050 /* If false, then FontID invalid */) 153 357.81 T
4 9 Q
(FontID) 153 347.48 T
(id,) 261 347.48 T
(/* fond ID */) 351 347.48 T
(dword) 153 337.48 T
(sizeSHL16,) 261 337.48 T
(/* point size */) 351 337.48 T
(TextStyle) 153 327.48 T
(styles,) 261 327.48 T
(/* style */) 351 327.48 T
(TextStyle) 153 317.48 T
(* styleFound,) 261 317.48 T
(/* buffer for style */) 369 317.48 T
(dword) 153 307.48 T
(* sizeFoundSHL16\051;) 261 307.48 T
(/* buffer for size */) 369 307.48 T
0 10 Q
-0.5 (Find the nearest available point size for a font. If the font passed in) 180 289.81 P
5 F
-0.5 (id) 487.54 289.81 P
0 F
-0.5 ( exists,) 496.98 289.81 P
(then) 180 278.31 T
5 F
(styleFound) 203.89 278.31 T
0 F
( will point to the styles available and) 254.62 278.31 T
5 F
(sizeFoundSHL16) 428.01 278.31 T
0 F
( will) 507.64 278.31 T
(point to the nearest point size to that passed. If the font is not found, the) 180 266.81 T
(return valued will be) 180 255.31 T
5 F
(true) 279.83 255.31 T
0 F
(.) 298.34 255.31 T
2 F
(Include:) 99 236.81 T
6 F
(font.h) 180 236.81 T
81 220.47 531 225.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 220.47 531 225.47 R
7 X
0 0 0 1 0 0 0 K
V
50 224.47 609.01 224.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 212.47 T
2 F
(GrFontMetrics\050\051) 99 212.47 T
3 10 Q
(dword) 99 197.8 T
4 F
(GrFontMetrics\050) 153 197.8 T
4 9 Q
(GStateHandle) 153 187.47 T
(gstate,) 261 187.47 T
(/* subject GState */) 333 187.47 T
(GFM_info) 153 177.47 T
(info\051;) 261 177.47 T
(/* Type of information to return */) 333 177.47 T
0 10 Q
(Get metrics information about a font. It returns the requested information) 180 159.8 T
(based on the) 180 148.3 T
5 F
(info) 240.94 148.3 T
0 F
( parameter) 258.71 148.3 T
(.) 309.27 148.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "201" 49
%%Page: "202" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(202) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Structures:) 99 641.33 T
4 9 Q
(typedef enum /* word */ {) 216 627 T
(GFMI_HEIGHT,) 252 617 T
(/* return = val << 16 */) 396 617 T
(GFMI_MEAN,) 252 607 T
(/* return = val << 16 */) 396 607 T
(GFMI_DESCENT,) 252 597 T
(/* return = val << 16 */) 396 597 T
(GFMI_BASELINE,) 252 587 T
(/* return = val << 16 */) 396 587 T
(GFMI_LEADING,) 252 577 T
(/* return = val << 16 */) 396 577 T
(GFMI_AVERAGE_WIDTH,) 252 567 T
(/* return = val << 16 */) 396 567 T
(GFMI_ASCENT,) 252 557 T
(/* return = val << 16 */) 396 557 T
(GFMI_MAX_WIDTH,) 252 547 T
(/* return = val << 16 */) 396 547 T
(GFMI_MAX_ADJUSTED_HEIGHT,) 252 537 T
(/* return = val << 16 */) 396 537 T
(GFMI_UNDER_POS,) 252 527 T
(/* return = val << 16 */) 396 527 T
(GFMI_UNDER_THICKNESS,) 252 517 T
(/* return = val << 16 */) 396 517 T
(GFMI_ABOVE_BOX,) 252 507 T
(/* return = val << 16 */) 396 507 T
(GFMI_ACCENT,) 252 497 T
(/* return = val << 16 */) 396 497 T
(GFMI_MANUFACTURER,) 252 487 T
(/* return = val */) 396 487 T
(GFMI_KERN_COUNT,) 252 477 T
(/* return = Char */) 396 477 T
(GFMI_FIRST_CHAR,) 252 467 T
(/* return = Char */) 396 467 T
(GFMI_LAST_CHAR,) 252 457 T
(/* return = FontMaker */) 396 457 T
(GFMI_DEFAULT_CHAR,) 252 447 T
(/* return = Char */) 396 447 T
(GFMI_STRIKE_POS,) 252 437 T
(/* return = Char */) 396 437 T
(GFMI_BELOW_BOX,) 252 427 T
(/* return = Char */) 396 427 T
(GFMI_HEIGHT_ROUNDED) 252 417 T
(/* return = Char */) 396 417 T
(GFMI_DESCENT_ROUNDED,) 252 407 T
(/* return = Char */) 396 407 T
(GFMI_BASELINE_ROUNDED,) 252 397 T
(/* return = Char */) 396 397 T
(GFMI_LEADING_ROUNDED,) 252 387 T
(/* return = Char */) 396 387 T
(GFMI_AVERAGE_WIDTH_ROUNDED,) 252 377 T
(/* return = Char */) 397.8 377 T
(GFMI_ASCENT_ROUNDED,) 252 367 T
(/* return = Char */) 396 367 T
(GFMI_MAX_WIDTH_ROUNDED,) 252 357 T
(/* return = Char */) 396 357 T
(GFMI_MAX_ADJUSTED_HEIGHT_ROUNDED, /* ret = Char */) 252 347 T
(GFMI_UNDER_POS_ROUNDED,) 252 337 T
(/* return = Char */) 396 337 T
(GFMI_UNDER_THICKNESS_ROUNDED, /* return = Char */) 252 327 T
(GFMI_ABOVE_BOX_ROUNDED,) 252 317 T
(/* return = Char */) 396 317 T
(GFMI_ACCENT_ROUNDED=,) 252 307 T
(/* return = Char */) 396 307 T
(GFMI_STRIKE_POS_ROUNDED,) 252 297 T
(/* return = Char */) 396 297 T
(GFMI_BELOW_BOX_ROUNDED) 252 287 T
(/* return = Char */) 396 287 T
(} GFM_info;) 216 277 T
2 10 Q
(Include:) 99 259.33 T
6 F
(font.h) 180 259.33 T
81 242.99 531 248 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 242.99 531 248 R
7 X
0 0 0 1 0 0 0 K
V
50 246.99 609.01 246.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 234.99 T
2 F
(GrGetAreaColor\050\051) 99 234.99 T
3 10 Q
(RGBColorAsDWord) 99 220.33 T
4 F
(GrGetAreaColor\050) 195 220.33 T
4 9 Q
(GStateHandle gstate\051;) 153 209.99 T
(/* GState of which to get color */) 279 209.99 T
0 10 Q
(Get the color which is being used to \336ll areas.) 180 192.33 T
2 F
(Include:) 99 173.83 T
6 F
(graphics.h) 180 173.83 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "202" 50
%%Page: "203" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(203) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetAreaColorMap\050\051) 99 634.99 T
3 10 Q
(ColorMapMode) 99 620.33 T
4 F
(GrGetAreaColorMap\050) 177 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* GState of which to get area color map */) 297 609.99 T
0 10 Q
(Get the mapping mode used for \336lling areas with unavailable colors.) 180 592.33 T
2 F
(Include:) 99 573.83 T
6 F
(graphics.h) 180 573.83 T
81 557.48 531 562.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 557.48 531 562.49 R
7 X
0 0 0 1 0 0 0 K
V
50 561.48 609.01 561.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 549.48 T
2 F
(GrGetAreaMask\050\051) 99 549.48 T
3 10 Q
(SysDrawMask) 99 534.82 T
4 F
( GrGetAreaMask\050) 165 534.82 T
4 9 Q
(GStateHandle) 153 524.48 T
(gstate,) 261 524.48 T
(/* GState of which to get mask */) 315 524.48 T
(DrawMask) 153 514.48 T
(* dm\051;) 261 514.48 T
(/* buffer for returned mask */) 315 514.48 T
0 10 Q
(Get the draw mask used when \336lling areas. The) 180 496.82 T
5 F
(dm) 404.49 496.82 T
0 F
( argument should point) 419.49 496.82 T
-0.34 (to a buffer capable of holding at least eight bytes to get the bit-pattern of the) 180 485.32 P
(mask; otherwise) 180 473.82 T
5 F
(dm) 258.35 473.82 T
0 F
( should be) 273.35 473.82 T
0 9 Q
(NULL) 322.99 473.82 T
0 10 Q
(. The returned buffer is the 8x8 bit) 349.67 473.82 T
-0.42 (pattern: each byte represents a row of the pattern, and the bytes are ordered) 180 462.32 P
(from top row to bottom.) 180 450.82 T
2 F
(Include:) 99 432.32 T
6 F
(graphics.h) 180 432.32 T
81 415.98 531 420.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 415.98 531 420.98 R
7 X
0 0 0 1 0 0 0 K
V
50 419.98 609.01 419.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 407.98 T
2 F
(GrGetAreaPattern\050\051) 99 407.98 T
3 10 Q
(GraphicPattern) 99 393.31 T
4 F
(GrGetAreaPattern\050) 189 393.31 T
4 9 Q
(GStateHandle) 153 382.98 T
(gstate,) 261 382.98 T
(/* GState of area pattern */) 351 382.98 T
(const MemHandle) 153 372.98 T
(* customPattern,) 261 372.98 T
(/* pointer to handle of block for) 351 372.98 T
( * returned custom pattern */) 333 362.98 T
(word) 153 352.98 T
(* customSize\051;) 261 352.98 T
(/* pointer to size of returned) 351 352.98 T
( * buffer */) 333 342.98 T
0 10 Q
(Get the area pattern used when \336lling areas.) 180 325.31 T
2 F
(Include:) 99 306.81 T
6 F
(graphics.h) 180 306.81 T
81 290.47 531 295.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 290.47 531 295.48 R
7 X
0 0 0 1 0 0 0 K
V
50 294.47 609.01 294.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 282.47 T
2 F
(GrGetBitmap\050\051) 99 282.47 T
3 10 Q
(MemHandle) 99 267.8 T
4 F
( GrGetBitmap\050) 153 267.8 T
4 9 Q
(GStateHandle) 153 257.47 T
(gstate,) 261 257.47 T
(/* GState containing bitmap */) 351 257.47 T
(sword) 153 247.47 T
(x,) 261 247.47 T
(/* bitmap origin */) 351 247.47 T
(sword) 153 237.47 T
(y,) 261 237.47 T
(word) 153 227.47 T
(width,) 261 227.47 T
(/* bitmap width and height */) 351 227.47 T
(word) 153 217.47 T
(height,) 261 217.47 T
(XYSize) 153 207.47 T
(* sizeCopied\051;) 261 207.47 T
(/* buffer for returned size */) 351 207.47 T
0 10 Q
(Dump an area of the display to a bitmap. The handle of a block containing) 180 189.8 T
-0.43 (the bitmap is returned; the) 180 178.3 P
5 F
-0.43 (sizeCopied) 305.82 178.3 P
0 F
-0.43 ( pointer points to the actual size of the) 354.5 178.3 P
(bitmap successfully copied.) 180 166.8 T
2 F
(Include:) 99 148.3 T
6 F
(graphics.h) 180 148.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "203" 51
%%Page: "204" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(204) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetBitmapMode\050\051) 99 634.99 T
3 10 Q
(BitmapMode) 99 620.33 T
4 F
(GrGetBitmapMode\050) 165 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* GState containing bitmap */) 297 609.99 T
0 10 Q
(Get mode bits for an editable bitmap.) 180 592.33 T
2 F
(Include:) 99 573.83 T
6 F
(graphics.h) 180 573.83 T
81 557.48 531 562.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 557.48 531 562.49 R
7 X
0 0 0 1 0 0 0 K
V
50 561.48 609.01 561.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 549.48 T
2 F
(GrGetBitmapRes\050\051) 99 549.48 T
3 10 Q
(XYValueAsDWord) 99 534.82 T
4 F
( GrGetBitmapRes\050) 183 534.82 T
4 9 Q
(const Bitmap) 153 524.48 T
(* bm\051;) 261 524.48 T
(/* pointer to the bitmap */) 333 524.48 T
0 10 Q
(Get the resolution of a bitmap.) 180 506.82 T
2 F
(Include:) 99 488.32 T
6 F
(graphics.h) 180 488.32 T
81 471.98 531 476.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 471.98 531 476.98 R
7 X
0 0 0 1 0 0 0 K
V
50 475.98 609.01 475.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 463.98 T
2 F
(GrGetBitmapSize\050\051) 99 463.98 T
3 10 Q
(XYValueAsDWord) 99 449.31 T
4 F
( GrGetBitmapSize\050) 183 449.31 T
4 9 Q
(const) 153 438.98 T
(Bitmap) 189 438.98 T
(* bm\051;) 261 438.98 T
(/* pointer to the bitmap */) 333 438.98 T
0 10 Q
(Get the dimensions, in points, of a bitmap.) 180 421.31 T
2 F
(Include:) 99 402.81 T
6 F
(graphics.h) 180 402.81 T
81 386.47 531 391.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 386.47 531 391.48 R
7 X
0 0 0 1 0 0 0 K
V
50 390.47 609.01 390.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 378.47 T
2 F
(GrGetClipRegion\050\051) 99 378.47 T
3 10 Q
(MemHandle) 99 363.8 T
4 F
( GrGetClipRegion\050) 153 363.8 T
4 9 Q
(GStateHandle) 153 353.47 T
(gstate,) 261 353.47 T
(/* subject GState */) 315 353.47 T
(RegionFillRule) 153 343.47 T
(rule\051;) 261 343.47 T
(/* ODD_EVEN or WINDING */) 315 343.47 T
0 10 Q
(Get the current clip region. A null handle \050zero\051 will be returned if no clip) 180 325.8 T
(paths are se for the GState.) 180 314.3 T
2 F
(Include:) 99 295.8 T
6 F
(graphics.h) 180 295.8 T
81 279.46 531 284.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 279.46 531 284.47 R
7 X
0 0 0 1 0 0 0 K
V
50 283.46 609.01 283.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 271.46 T
2 F
(GrGetCurPos\050\051) 99 271.46 T
3 10 Q
(XYValueAsDWord) 99 256.79 T
4 F
( GrGetCurPos\050) 183 256.79 T
4 9 Q
(GStateHandle gstate\051;) 153 246.46 T
(/* subject GState */) 297 246.46 T
0 10 Q
(Get the current pen position.) 180 228.79 T
2 F
(Include:) 99 210.29 T
6 F
(graphics.h) 180 210.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "204" 52
%%Page: "205" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(205) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetCurPosWWFixed\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
( GrGetCurPosWWFixed\050) 123 620.33 T
4 9 Q
(GStateHandle gstate,) 153 609.99 T
(/* subject GState */) 297 609.99 T
(PointWWFixed) 153 599.99 T
(*cp\051;) 223.2 599.99 T
(/* buffer in which to return cur. pos. */) 297 599.99 T
0 10 Q
(Get the current pen position.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrGetDefFontID\050\051) 99 539.48 T
3 10 Q
(FontID) 99 524.82 T
4 F
(GrGetDefFontID\050) 153 524.82 T
4 9 Q
(dword) 153 514.48 T
(* sizeSHL16\051;) 189 514.48 T
(/* pointer to buffer for returned size */) 279 514.48 T
0 10 Q
(Get the system default font \050including size\051.) 180 496.82 T
2 F
(Include:) 99 478.32 T
6 F
(font.h) 180 478.32 T
81 461.98 531 466.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.98 531 466.98 R
7 X
0 0 0 1 0 0 0 K
V
50 465.98 609.01 465.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.98 T
2 F
(GrGetFont\050\051) 99 453.98 T
3 10 Q
(FontID) 99 439.31 T
4 F
(GrGetFont\050) 153 439.31 T
4 9 Q
(GStateHandle) 153 428.98 T
(gstate,) 261 428.98 T
(/* subject GState */) 333 428.98 T
(WWFixedAsDWord) 153 418.98 T
(* pointSize\051;) 261 418.98 T
(/* pointer to buffer for) 333 418.98 T
( * returned point size */) 315 408.98 T
0 10 Q
(Get the passed GState\325) 180 391.31 T
(s current font, including point size.) 285.4 391.31 T
2 F
(Include:) 99 372.81 T
6 F
(graphics.h) 180 372.81 T
81 356.47 531 361.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 356.47 531 361.48 R
7 X
0 0 0 1 0 0 0 K
V
50 360.47 609.01 360.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 348.47 T
2 F
(GrGetFontName\050\051) 99 348.47 T
3 10 Q
(FontID) 99 333.8 T
4 F
(GrGetFontName\050) 153 333.8 T
4 9 Q
(FontID) 153 323.47 T
(id,) 261 323.47 T
(/* ID of font */) 315 323.47 T
(const char) 153 313.47 T
(* name\051;) 261 313.47 T
(/* buffer for returned name string */) 315 313.47 T
0 10 Q
-0.32 (Get the string name of a font. Note that if the returned) 180 295.8 P
6 F
-0.33 (FontID) 433.03 295.8 P
0 F
-0.32 ( is zero, then) 470.24 295.8 P
(the font was not found. The name string buffer should be a least) 180 284.3 T
0 9 Q
(FID_NAME_LEN) 180 272.8 T
0 10 Q
( in size.) 254.33 272.8 T
2 F
(Include:) 99 254.3 T
6 F
(font.h) 180 254.3 T
81 237.96 531 242.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 237.96 531 242.97 R
7 X
0 0 0 1 0 0 0 K
V
50 241.96 609.01 241.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 229.96 T
2 F
(GrGetFontW) 99 229.96 T
(eight\050\051) 170.11 229.96 T
3 10 Q
(FontWeight) 99 215.29 T
4 F
( GrGetFontWeight\050) 159 215.29 T
4 9 Q
(GStateHandle gstate\051;) 153 204.96 T
(/* GState containing the font */) 297 204.96 T
0 10 Q
(Get the current font weight set for the passed GState.) 180 187.29 T
2 F
(Include:) 99 168.79 T
6 F
(font.h) 180 168.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "205" 53
%%Page: "206" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(206) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetFontW) 99 634.99 T
(idth\050\051) 170.22 634.99 T
3 10 Q
(FontWidth) 99 620.33 T
4 F
( GrGetFontWidth\050) 153 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* GState containing the font */) 297 609.99 T
0 10 Q
(Get the current font width set for the passed GState.) 180 592.33 T
2 F
(Include:) 99 573.83 T
6 F
(font.h) 180 573.83 T
81 557.48 531 562.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 557.48 531 562.49 R
7 X
0 0 0 1 0 0 0 K
V
50 561.48 609.01 561.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 549.48 T
2 F
(GrGetGStringBounds\050\051) 99 549.48 T
3 10 Q
(void) 99 535.82 T
4 F
(GrGetGStringBounds\050) 153 535.82 T
4 9 Q
(GStringHandle) 153 525.48 T
(source,) 261 525.48 T
(/* GString to be checked */) 333 525.48 T
(GStateHandle) 153 515.48 T
(dest,) 261 515.48 T
(/* handle of GState to use */) 333 515.48 T
(GSControl) 153 505.48 T
(flags,) 261 505.48 T
(/* GSControl flags */) 333 505.48 T
(Rectangle) 153 495.48 T
(* bounds\051;) 261 495.48 T
(/* returned bounds of GState */) 333 495.48 T
0 10 Q
(This routine returns the coordinate bounds of the) 180 477.82 T
5 F
(source) 410.93 477.82 T
0 F
( GString drawn at) 439.8 477.82 T
-0.55 (the current position in the GString. The) 180 466.32 P
5 F
-0.55 (dest) 363.54 466.32 P
0 F
-0.55 ( GState will be used if passed; to) 382.05 466.32 P
(have no GState restrictions, pass a null handle. The bounds of the smallest) 180 454.82 T
(containing rectangle will be returned in the structure pointed to by) 180 443.32 T
5 F
(bounds) 492.61 443.32 T
0 F
(.) 525.94 443.32 T
2 F
(Include:) 99 424.82 T
6 F
(gstring.h) 180 424.82 T
81 408.48 531 413.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 408.48 531 413.48 R
7 X
0 0 0 1 0 0 0 K
V
50 412.48 609.01 412.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 400.48 T
2 F
(GrGetGStringBoundsDW) 99 400.48 T
(ord) 241.45 400.48 T
3 10 Q
(void) 99 385.81 T
4 F
(GrGetGStringBoundsDWord\050) 153 385.81 T
4 9 Q
(Handle) 153 375.48 T
(gstring,) 261 375.48 T
(/* GString to be checked */) 333 375.48 T
(GStateHandle) 153 365.48 T
(gstate,) 261 365.48 T
(/* handle of GState to use */) 333 365.48 T
(GSControl) 153 355.48 T
(flags,) 261 355.48 T
(/* GSControl flags */) 333 355.48 T
(RectDWord) 153 345.48 T
(* bounds\051;) 261 345.48 T
(/* returned bounds of GState */) 333 345.48 T
0 10 Q
-0.09 (This routine behaves as) 180 327.81 P
6 F
-0.09 (GrGetGStringBounds\050\051) 292.44 327.81 P
0 F
-0.09 (, but has been alterred to) 412.44 327.81 P
(work with 32-bit graphics spaces.) 180 316.31 T
-0.6 (This routine returns the coordinate bounds of aGString drawn at the current) 180 297.81 P
-0.04 (position in the GString. The) 180 286.31 P
5 F
-0.04 (gstate) 312.25 286.31 P
0 F
-0.04 ( GState will be used if passed; to have no) 339.28 286.31 P
(GState restrictions, pass a null handle. The bounds of the smallest) 180 274.81 T
(containing rectangle will be returned in the structure pointed to by) 180 263.31 T
5 F
(bounds) 492.61 263.31 T
0 F
(.) 525.94 263.31 T
2 F
(Include:) 99 244.81 T
6 F
(gstring.h) 180 244.81 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "206" 54
%%Page: "207" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(207) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetGStringElement\050\051) 99 634.99 T
3 10 Q
(GStringElement) 99 620.33 T
4 F
( GrGetGStringElement\050) 183 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* handle of GString\325s GState */) 351 609.99 T
(void) 153 599.99 T
(* buffer,) 261 599.99 T
(/* pointer to return buffer */) 351 599.99 T
(word) 153 589.99 T
(bufSize,) 261 589.99 T
(/* size of return buffer */) 351 589.99 T
(word) 153 579.99 T
(* elementSize,) 261 579.99 T
(/* size of GString element */) 351 579.99 T
(void) 153 569.99 T
(** pointerAfterData\051;) 261 569.99 T
(/* pointer to pointer to) 387 569.99 T
( * next element in GString */) 333 559.99 T
0 10 Q
(Extract the next element from a graphics string. The opcode is returned) 180 542.33 T
(explicitly) 180 530.83 T
(. The routine\325) 221.3 530.83 T
(s data can be returned in a buffer) 282.79 530.83 T
(.) 436.88 530.83 T
2 F
(Include:) 99 512.33 T
6 F
(gstring.h) 180 512.33 T
81 495.98 531 500.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 495.98 531 500.99 R
7 X
0 0 0 1 0 0 0 K
V
50 499.98 609.01 499.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 487.98 T
2 F
(GrGetInfo\050\051) 99 487.98 T
3 10 Q
(void) 99 473.32 T
4 F
(GrGetInfo\050) 153 473.32 T
4 9 Q
(GStateHandle) 153 462.98 T
(gstate,) 261 462.98 T
(/* GState to get information about */) 315 462.98 T
(GrInfoTypes) 153 452.98 T
(type,) 261 452.98 T
(/* type of information to get */) 315 452.98 T
(void) 153 442.98 T
(* data\051;) 261 442.98 T
(/* buffer for returned information */) 315 442.98 T
0 10 Q
(Get the private data, window handle, or pen position associated with the) 180 425.32 T
(GState.) 180 413.82 T
2 F
(Structures:) 99 395.32 T
4 9 Q
(typedef enum {) 216 380.98 T
(GIT_PRIVATE_DATA,) 237.6 370.98 T
(GIT_WINDOW,) 237.6 360.98 T
(GIT_PEN_POS) 237.6 350.98 T
(} GrInfoType) 216 340.98 T
2 10 Q
(Include:) 99 323.32 T
6 F
(graphics.h) 180 323.32 T
81 306.98 531 311.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 306.98 531 311.98 R
7 X
0 0 0 1 0 0 0 K
V
50 310.98 609.01 310.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 298.98 T
2 F
(GrGetLineColor\050\051) 99 298.98 T
3 10 Q
(RGBColorAsDWord) 99 284.31 T
4 F
( GrGetLineColor\050) 189 284.31 T
4 9 Q
(GStateHandle gstate\051;) 153 273.97 T
(/* subject GState */) 297 273.97 T
0 10 Q
(Get the color used when drawing lines.) 180 256.31 T
2 F
(Include:) 99 237.81 T
6 F
(graphics.h) 180 237.81 T
81 221.47 531 226.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 221.47 531 226.47 R
7 X
0 0 0 1 0 0 0 K
V
50 225.47 609.01 225.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 213.47 T
2 F
(GrGetLineColorMap\050\051) 99 213.47 T
3 10 Q
(ColorMapMode) 99 198.8 T
4 F
( GrGetLineColorMap\050) 171 198.8 T
4 9 Q
(GStateHandle gstate\051;) 153 188.47 T
(/* subject GState */) 297 188.47 T
0 10 Q
(Get the mode used when drawing lines in an unavailable color) 180 170.8 T
(.) 467.27 170.8 T
2 F
(Include:) 99 152.3 T
6 F
(graphics.h) 180 152.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "207" 55
%%Page: "208" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(208) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetLineEnd\050\051) 99 634.99 T
3 10 Q
(LineEnd) 99 620.33 T
4 F
(GrGetLineEnd\050) 153 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* subject GState */) 297 609.99 T
0 10 Q
(Get the end used when drawing lines.) 180 592.33 T
2 F
(Include:) 99 573.83 T
6 F
(graphics.h) 180 573.83 T
81 557.48 531 562.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 557.48 531 562.49 R
7 X
0 0 0 1 0 0 0 K
V
50 561.48 609.01 561.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 549.48 T
2 F
(GrGetLineJoin\050\051) 99 549.48 T
3 10 Q
(LineJoin) 99 534.82 T
4 F
( GrGetLineJoin\050) 147 534.82 T
4 9 Q
(GStateHandle gstate\051;) 153 524.48 T
(/* subject GState */) 297 524.48 T
0 10 Q
(Get the join used when drawing corners.) 180 506.82 T
2 F
(Include:) 99 488.32 T
6 F
(graphics.h) 180 488.32 T
81 471.98 531 476.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 471.98 531 476.98 R
7 X
0 0 0 1 0 0 0 K
V
50 475.98 609.01 475.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 463.98 T
2 F
(GrGetLineMask\050\051) 99 463.98 T
3 10 Q
(SysDrawMask) 99 449.31 T
4 F
( GrGetLineMask\050) 165 449.31 T
4 9 Q
(GStateHandle) 153 438.98 T
(gstate,) 261 438.98 T
(/* subject GState */) 315 438.98 T
(DrawMask) 153 428.98 T
(* dm\051;) 261 428.98 T
(/* buffer for returned custom mask */) 315 428.98 T
0 10 Q
(Get the drawing mask used when drawing lines. The) 180 411.31 T
5 F
(dm) 427.08 411.31 T
0 F
( argument should) 442.08 411.31 T
-0.21 (point to a buffer capable of holding at least eight bytes to get the bit-pattern) 180 399.81 P
(of the mask; otherwise) 180 388.31 T
5 F
(dm) 287.24 388.31 T
0 F
( should be) 302.24 388.31 T
0 9 Q
(NULL) 351.88 388.31 T
0 10 Q
(. The returned buffer is the 8x8) 378.56 388.31 T
(bit pattern: each byte represents a row of the pattern, and the bytes are) 180 376.81 T
(ordered from top row to bottom.) 180 365.31 T
2 F
(Include:) 99 346.81 T
6 F
(graphics.h) 180 346.81 T
81 330.47 531 335.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 330.47 531 335.48 R
7 X
0 0 0 1 0 0 0 K
V
50 334.47 609.01 334.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 322.47 T
2 F
(GrGetLineStyle\050\051) 99 322.47 T
3 10 Q
(LineStyle) 99 307.8 T
4 F
( GrGetLineStyle\050) 153 307.8 T
4 9 Q
(GStateHandle gstate\051;) 153 297.47 T
(/* subject GState */) 297 297.47 T
0 10 Q
(Get the style, or \322dottedness,\323 used when drawing lines.) 180 279.8 T
2 F
(Include:) 99 261.3 T
6 F
(graphics.h) 180 261.3 T
81 244.96 531 249.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.96 531 249.97 R
7 X
0 0 0 1 0 0 0 K
V
50 248.96 609.01 248.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 236.96 T
2 F
(GrGetLineW) 99 236.96 T
(idth\050\051) 168.9 236.96 T
3 10 Q
(WWFixedAsDWord) 99 222.29 T
4 F
(GrGetLineWidth\050) 189 222.29 T
4 9 Q
(GStateHandle gstate\051;) 153 211.96 T
(/* subject GState */) 297 211.96 T
0 10 Q
(Get the current line width.) 180 194.29 T
2 F
(Include:) 99 175.79 T
6 F
(graphics.h) 180 175.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "208" 56
%%Page: "209" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(209) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetMaskBounds\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrGetMaskBounds\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(Rectangle) 153 599.99 T
(* bounds\051;) 261 599.99 T
(/* buffer for returned bounds */) 333 599.99 T
0 10 Q
(Get the 16-bit bounds of the current clip rectangle.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrGetMaskBoundsDW) 99 539.48 T
(ord\050\051) 227.46 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrGetMaskBoundsDWord\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* subject GState */) 333 514.48 T
(RectDWord) 153 504.48 T
(* bounds\051;) 261 504.48 T
(/* buffer for returned bounds */) 333 504.48 T
0 10 Q
-0.42 (Get the 16-bit bounds of the current clip rectangle, accurate to a fraction of a) 180 486.82 P
(point.) 180 475.32 T
2 F
(Include:) 99 456.82 T
6 F
(graphics.h) 180 456.82 T
81 440.48 531 445.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 440.48 531 445.48 R
7 X
0 0 0 1 0 0 0 K
V
50 444.48 609.01 444.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 432.48 T
2 F
(GrGetMiterLimit\050\051) 99 432.48 T
3 10 Q
(WWFixedAsDWord) 99 417.81 T
4 F
( GrGetMiterLimit\050) 183 417.81 T
4 9 Q
(GStateHandle gstate\051;) 153 407.48 T
(/* subject GState */) 333 407.48 T
0 10 Q
(Get the miter limit to use when drawing mitered corners.) 180 389.81 T
2 F
(Include:) 99 371.31 T
6 F
(graphics.h) 180 371.31 T
81 354.97 531 359.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 354.97 531 359.98 R
7 X
0 0 0 1 0 0 0 K
V
50 358.97 609.01 358.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 346.97 T
2 F
(GrGetMixMode\050\051) 99 346.97 T
3 10 Q
(MixMode) 99 332.3 T
4 F
( GrGetMixMode\050) 141 332.3 T
4 9 Q
(GStateHandle gstate\051;) 153 321.97 T
(/* subject GState */) 315 321.97 T
0 10 Q
(Get the current mixing mode.) 180 304.3 T
2 F
(Include:) 99 285.8 T
6 F
(graphics.h) 180 285.8 T
81 269.46 531 274.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 269.46 531 274.47 R
7 X
0 0 0 1 0 0 0 K
V
50 273.46 609.01 273.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 261.46 T
2 F
(GrGetPalette\050\051) 99 261.46 T
3 10 Q
(MemHandle) 99 246.79 T
4 F
( GrGetPalette\050) 153 246.79 T
4 9 Q
(GStateHandle) 153 236.46 T
(gstate,) 261 236.46 T
(/* subject GState */) 351 236.46 T
(GetPalType) 153 226.46 T
(flag,) 261 226.46 T
(/* GPT_ACTIVE, GPT_CUSTOM, or) 351 226.46 T
( * GPT_DEFAULT */) 333 216.46 T
(word) 153 206.46 T
(* numEntries\051;) 261 206.46 T
(/* number of entries in block */) 351 206.46 T
0 10 Q
-0.82 (Return all or part of the window\325) 180 188.79 P
-0.82 (s color lookup table. This routine returns the) 325.99 188.79 P
(handle of a block containing all the returned palette entries.) 180 177.29 T
2 F
(Include:) 99 158.79 T
6 F
(graphics.h) 180 158.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "209" 57
%%Page: "210" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(210) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetPath\050\051) 99 634.99 T
3 10 Q
(MemHandle) 99 620.33 T
4 F
(GrGetPath\050) 159 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(GetPathType) 153 599.99 T
(ptype\051;) 261 599.99 T
(/* Which path to retrieve */) 333 599.99 T
0 10 Q
-0.28 (Returns handle to block containing path data. This handle may be passed to) 180 582.33 P
6 F
(GrSetPath\050\051) 180 570.83 T
0 F
(. Either the current path, the clipping path, or the window) 242.78 570.83 T
(clipping path may be retrieved.) 180 559.33 T
2 F
(Include:) 99 540.83 T
6 F
(graphics.h) 180 540.83 T
81 524.48 531 529.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 524.48 531 529.49 R
7 X
0 0 0 1 0 0 0 K
V
50 528.48 609.01 528.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 516.48 T
2 F
(GrGetPathBounds\050\051) 99 516.48 T
3 10 Q
(Boolean) 99 501.82 T
4 F
(GrGetPathBounds\050) 153 501.82 T
4 9 Q
(GStateHandle) 153 491.48 T
(gstate,) 261 491.48 T
(/* subject GState */) 333 491.48 T
(GetPathType) 153 481.48 T
(ptype,) 261 481.48 T
(Rectangle) 153 471.48 T
(* bounds\051;) 261 471.48 T
(/* buffer for returned bounds */) 333 471.48 T
0 10 Q
-0.6 (Returns the rectangular bounds that encompass the current path as it would) 180 453.82 P
-0.57 (be \336lled. A) 180 442.32 P
5 F
-0.57 (true) 230.32 442.32 P
0 F
-0.57 ( return value indicates an error occurred or there was no path) 248.83 442.32 P
(for the GState.) 180 430.82 T
2 F
(Include:) 99 412.32 T
6 F
(graphics.h) 180 412.32 T
81 395.98 531 400.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 395.98 531 400.98 R
7 X
0 0 0 1 0 0 0 K
V
50 399.98 609.01 399.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 387.98 T
2 F
(GrGetPathBoundsDW) 99 387.98 T
(ord\050\051) 223.45 387.98 T
3 10 Q
(Boolean) 99 373.31 T
4 F
(GrGetPathBoundsDWord\050) 153 373.31 T
4 9 Q
(GStateHandle) 153 362.98 T
(gstate,) 261 362.98 T
(/* subject GState */) 333 362.98 T
(GetPathType) 153 352.98 T
(ptype,) 261 352.98 T
(RectDWord) 153 342.98 T
(* bounds\051;) 261 342.98 T
(/* buffer for returned bounds */) 333 342.98 T
0 10 Q
-0.6 (Returns the rectangular bounds that encompass the current path as it would) 180 325.31 P
-0.57 (be \336lled. A) 180 313.81 P
5 F
-0.57 (true) 230.32 313.81 P
0 F
-0.57 ( return value indicates an error occurred or there was no path) 248.83 313.81 P
(for the GState.) 180 302.31 T
2 F
(Include:) 99 283.81 T
6 F
(graphics.h) 180 283.81 T
81 267.47 531 272.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 267.47 531 272.47 R
7 X
0 0 0 1 0 0 0 K
V
50 271.47 609.01 271.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 259.47 T
2 F
(GrGetPathPoints\050\051) 99 259.47 T
3 10 Q
(MemHandle) 99 244.8 T
4 F
(GrGetPathPoints\050) 159 244.8 T
4 9 Q
(GStateHandle) 153 234.47 T
(gstate,) 261 234.47 T
(/* subject GState */) 351 234.47 T
(word) 153 224.47 T
(resolution\051;) 261 224.47 T
(/* dots per inch */) 351 224.47 T
0 10 Q
(Returns a series of points that fall along the current path. The returned) 180 206.8 T
(points are in document coordinates.) 180 195.3 T
2 F
(Include:) 99 176.8 T
6 F
(graphics.h) 180 176.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "210" 58
%%Page: "211" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(211) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetPathRegion\050\051) 99 634.99 T
3 10 Q
(MemHandle) 99 620.33 T
4 F
( GrGetPathRegion\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(RegionFillRule) 153 599.99 T
(rule\051;) 261 599.99 T
(/* ODD_EVEN or WINDING */) 333 599.99 T
0 10 Q
(Get the region enclosed by a path.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrGetPoint\050\051) 99 539.48 T
3 10 Q
(RGBColorAsDWord) 99 524.82 T
4 F
( GrGetPoint\050) 189 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* subject GState */) 315 514.48 T
(sword) 153 504.48 T
(x,) 261 504.48 T
(/* coordinates of pixel */) 315 504.48 T
(sword) 153 494.48 T
(y\051;) 261 494.48 T
0 10 Q
(Get the color of the pixel corresponding to the speci\336ed coordinates.) 180 476.82 T
2 F
(Include:) 99 458.32 T
6 F
(graphics.h) 180 458.32 T
81 441.98 531 446.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 441.98 531 446.98 R
7 X
0 0 0 1 0 0 0 K
V
50 445.98 609.01 445.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 433.98 T
2 F
(GrGetPtrRegBounds\050\051) 99 433.98 T
3 10 Q
(word) 99 419.31 T
4 F
(GrGetPtrRegBounds\050 /* Returns size of Region data struct. */) 153 419.31 T
4 9 Q
(const) 153 408.98 T
(Region) 189 408.98 T
(* reg,) 261 408.98 T
(/* pointer to region */) 333 408.98 T
(Rectangle) 153 398.98 T
(* bounds\051;) 261 398.98 T
(/* returned bounds of region */) 333 398.98 T
0 10 Q
(Get the bounds of the passed region.) 180 381.31 T
2 F
(Include:) 99 362.81 T
6 F
(graphics.h) 180 362.81 T
81 346.47 531 351.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 346.47 531 351.48 R
7 X
0 0 0 1 0 0 0 K
V
50 350.47 609.01 350.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 338.47 T
2 F
(GrGetSubscriptAttr\050\051) 99 338.47 T
3 10 Q
(ScriptAttrAsWord) 99 324.8 T
4 F
( GrGetSubscriptAttr\050) 195 324.8 T
4 9 Q
(GStateHandle gstate\051;) 153 314.47 T
(/* subject GState */) 315 314.47 T
0 10 Q
(Get the GState\325) 180 296.8 T
(s subscript drawing attributes. The high byte of the return) 251.32 296.8 T
(value is the percentage of the font size for the subscript; the low byte is the) 180 285.3 T
(percentage of the font size from the top at which the character gets drawn.) 180 273.8 T
2 F
(Include:) 99 255.3 T
6 F
(font.h) 180 255.3 T
81 238.96 531 243.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 238.96 531 243.97 R
7 X
0 0 0 1 0 0 0 K
V
50 242.96 609.01 242.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 230.96 T
2 F
(GrGetSuperscriptAttr\050\051) 99 230.96 T
3 10 Q
(ScriptAttrAsWord) 99 217.29 T
4 F
( GrGetSuperscriptAttr\050) 195 217.29 T
4 9 Q
(GStateHandle gstate\051;) 153 206.96 T
(/* subject GState */) 315 206.96 T
0 10 Q
-0.31 (Get the GState\325) 180 189.29 P
-0.31 (s superscript drawing attributes. The high byte of the return) 250.71 189.29 P
-0.47 (value is the percentage of the font size for the superscript; the low byte is the) 180 177.79 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "211" 59
%%Page: "212" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(212) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 10 Q
0 X
(percentage of the font size from the bottom at which the character gets) 180 641.33 T
(drawn.) 180 629.83 T
2 F
(Include:) 99 611.33 T
6 F
(font.h) 180 611.33 T
81 594.99 531 600 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 594.99 531 600 R
7 X
0 0 0 1 0 0 0 K
V
50 598.99 609.01 598.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 586.99 T
2 F
(GrGetT) 99 586.99 T
(extBounds\050\051) 139.45 586.99 T
3 10 Q
(Boolean) 99 572.33 T
4 F
(GrGetTextBounds\050) 153 572.33 T
4 9 Q
(GStateHandle) 153 561.99 T
(gstate,) 261 561.99 T
(/* subject GState */) 315 561.99 T
(word) 153 551.99 T
(xpos,) 261 551.99 T
(/* position where text would be drawn */) 315 551.99 T
(word) 153 541.99 T
(ypos,) 261 541.99 T
(const char) 153 531.99 T
(* str,) 261 531.99 T
(/* text string */) 315 531.99 T
(word) 153 521.99 T
(count,) 261 521.99 T
(/* max number of characters to check */) 315 521.99 T
(Rectangle) 153 511.99 T
(* bounds\051;) 261 511.99 T
(/* returned bounding rectangle */) 333 511.99 T
0 10 Q
-0.55 (Get the bounds required to draw the passed text. If the passed) 180 494.33 P
5 F
-0.55 (size) 464.33 494.33 P
0 F
-0.55 ( argument) 481.17 494.33 P
(is zero, the string is assumed to be null-terminated.) 180 482.83 T
2 F
(Include:) 99 464.33 T
6 F
(graphics.h) 180 464.33 T
81 447.98 531 452.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 447.98 531 452.99 R
7 X
0 0 0 1 0 0 0 K
V
50 451.98 609.01 451.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 439.98 T
2 F
(GrGetT) 99 439.98 T
(extColor\050\051) 139.45 439.98 T
3 10 Q
(RGBColorAsDWord) 99 425.32 T
4 F
( GrGetTextColor\050) 189 425.32 T
4 9 Q
(GStateHandle gstate\051;) 153 414.98 T
(/* subject GState */) 297 414.98 T
0 10 Q
(Get the color used when drawing text.) 180 397.32 T
2 F
(Include:) 99 378.82 T
6 F
(graphics.h) 180 378.82 T
81 362.48 531 367.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 362.48 531 367.48 R
7 X
0 0 0 1 0 0 0 K
V
50 366.48 609.01 366.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 354.48 T
2 F
(GrGetT) 99 354.48 T
(extColorMap\050\051) 139.45 354.48 T
3 10 Q
(ColorMapMode) 99 339.81 T
4 F
(GrGetTextColorMap\050) 177 339.81 T
4 9 Q
(GStateHandle gstate\051;) 153 329.48 T
(/* subject GState */) 297 329.48 T
0 10 Q
(Get the mode used when drawing text in an unavailable color) 180 311.81 T
(.) 463.38 311.81 T
2 F
(Include:) 99 293.31 T
6 F
(graphics.h) 180 293.31 T
81 276.97 531 281.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 276.97 531 281.98 R
7 X
0 0 0 1 0 0 0 K
V
50 280.97 609.01 280.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 268.97 T
2 F
(GrGetT) 99 268.97 T
(extMask\050\051) 139.45 268.97 T
3 10 Q
(SystemDrawMask) 99 254.3 T
4 F
(GrGetTextMask\050) 189 254.3 T
4 9 Q
(GStateHandle) 153 243.97 T
(gstate,) 261 243.97 T
(/* subject GState */) 315 243.97 T
(DrawMask) 153 233.97 T
(* dm\051;) 261 233.97 T
(/* returned custom mask, if any */) 315 233.97 T
0 10 Q
-0.08 (Get the draw mask used when drawing text.The) 180 216.3 P
5 F
-0.08 (dm) 405.18 216.3 P
0 F
-0.08 ( argument should point) 420.18 216.3 P
-0.34 (to a buffer capable of holding at least eight bytes to get the bit-pattern of the) 180 204.8 P
(mask; otherwise) 180 193.3 T
5 F
(dm) 258.35 193.3 T
0 F
( should be) 273.35 193.3 T
0 9 Q
(NULL) 322.99 193.3 T
0 10 Q
(. The returned buffer is the 8x8 bit) 349.67 193.3 T
-0.42 (pattern: each byte represents a row of the pattern, and the bytes are ordered) 180 181.8 P
(from top row to bottom.) 180 170.3 T
2 F
(Include:) 99 151.8 T
6 F
(graphics.h) 180 151.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "212" 60
%%Page: "213" 61
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(213) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetT) 99 634.99 T
(extMode\050\051) 139.45 634.99 T
3 10 Q
(TextMode) 99 620.33 T
4 F
(GrGetTextMode\050) 153 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* subject GState */) 297 609.99 T
0 10 Q
-0.44 (Get the text mode, including information about the vertical offset used when) 180 592.33 P
(drawing text.) 180 580.83 T
2 F
(Include:) 99 562.33 T
6 F
(graphics.h) 180 562.33 T
81 545.98 531 550.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 545.98 531 550.99 R
7 X
0 0 0 1 0 0 0 K
V
50 549.98 609.01 549.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 537.98 T
2 F
(GrGetT) 99 537.98 T
(extPattern\050\051) 139.45 537.98 T
3 10 Q
(GraphicPattern) 99 523.32 T
4 F
(GrGetTextPattern\050) 189 523.32 T
4 9 Q
(GStateHandle) 153 512.98 T
(gstate,) 261 512.98 T
(/* subject GState */) 369 512.98 T
(const MemHandle) 153 502.98 T
(* customPattern,) 261 502.98 T
(/* pointer to returned handle) 369 502.98 T
( * of block containing the) 351 492.98 T
( * returned pattern */) 351 482.98 T
(word) 153 472.98 T
(* customSize\051;) 261 472.98 T
(/* size of returned block */) 369 472.98 T
0 10 Q
(Get the graphics pattern used when drawing text.) 180 455.32 T
2 F
(Include:) 99 436.82 T
6 F
(graphics.h) 180 436.82 T
81 420.48 531 425.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 420.48 531 425.48 R
7 X
0 0 0 1 0 0 0 K
V
50 424.48 609.01 424.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 412.48 T
2 F
(GrGetT) 99 412.48 T
(extSpacePad\050\051) 139.45 412.48 T
3 10 Q
(WWFixedAsDWord) 99 397.81 T
4 F
( GrGetTextSpacePad\050) 183 397.81 T
4 9 Q
(GStateHandle gstate\051;) 153 387.48 T
(/* subject GState */) 297 387.48 T
0 10 Q
(Get the space pad used when drawing strings of text.) 180 369.81 T
2 F
(Include:) 99 351.31 T
6 F
(graphics.h) 180 351.31 T
81 334.97 531 339.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 334.97 531 339.98 R
7 X
0 0 0 1 0 0 0 K
V
50 338.97 609.01 338.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 326.97 T
2 F
(GrGetT) 99 326.97 T
(extStyle\050\051) 139.45 326.97 T
3 10 Q
(TextStyle) 99 312.3 T
4 F
(GrGetTextStyle\050) 159 312.3 T
4 9 Q
(GStateHandle gstate\051;) 153 301.97 T
(/* subject GState */) 315 301.97 T
0 10 Q
(Get the style used when drawing text.) 180 284.3 T
2 F
(Include:) 99 265.8 T
6 F
(graphics.h) 180 265.8 T
81 249.46 531 254.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 249.46 531 254.47 R
7 X
0 0 0 1 0 0 0 K
V
50 253.46 609.01 253.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 241.46 T
2 F
(GrGetT) 99 241.46 T
(rackKern\050\051) 139.68 241.46 T
3 10 Q
(word) 99 226.79 T
4 F
(GrGetTrackKern\050) 153 226.79 T
4 9 Q
(GStateHandle) 153 216.46 T
(gstate\051;) 223.2 216.46 T
(/* subject GState */) 315 216.46 T
0 10 Q
(Get the track kerning used when drawing strings of text.) 180 198.79 T
2 F
(Include:) 99 180.29 T
6 F
(graphics.h) 180 180.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "213" 61
%%Page: "214" 62
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(214) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrGetT) 99 634.99 T
(ransform\050\051) 139.68 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrGetTransform\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 315 609.99 T
(TransMatrix) 153 599.99 T
(* tm\051;) 261 599.99 T
(/* pointer to returned TransMatrix */) 315 599.99 T
0 10 Q
(Get the current coordinate transformation, expressed as a matrix.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrGetW) 99 539.48 T
(inBounds\050\051) 144.23 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrGetWinBounds\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* subject GState */) 333 514.48 T
(Rectangle) 153 504.48 T
(* bounds\051;) 261 504.48 T
(/* returned window bounds */) 333 504.48 T
0 10 Q
(Get the bounds of the GState\325) 180 486.82 T
(s associated window) 316.14 486.82 T
(.) 408.57 486.82 T
2 F
(Include:) 99 468.32 T
6 F
(graphics.h) 180 468.32 T
81 451.98 531 456.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 451.98 531 456.98 R
7 X
0 0 0 1 0 0 0 K
V
50 455.98 609.01 455.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 443.98 T
2 F
(GrGetW) 99 443.98 T
(inBoundsDW) 144.23 443.98 T
(ord\050\051) 219.34 443.98 T
3 10 Q
(void) 99 429.31 T
4 F
(GrGetWinBoundsDWord\050) 153 429.31 T
4 9 Q
(GStateHandle) 153 418.98 T
(gstate,) 261 418.98 T
(/* subject GState */) 333 418.98 T
(RectDWord) 153 408.98 T
(* bounds\051;) 261 408.98 T
(/* returned window bounds */) 333 408.98 T
0 10 Q
-0.25 (Get the bounds of the GState\325) 180 391.31 P
-0.25 (s associated window) 314.89 391.31 P
-0.25 (, accurate to a fraction of a) 406.82 391.31 P
(point.) 180 379.81 T
2 F
(Include:) 99 361.31 T
6 F
(graphics.h) 180 361.31 T
81 344.97 531 349.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.97 531 349.98 R
7 X
0 0 0 1 0 0 0 K
V
50 348.97 609.01 348.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 336.97 T
2 F
(GrGetW) 99 336.97 T
(inHandle\050\051) 144.23 336.97 T
3 10 Q
(WindowHandle) 99 322.3 T
4 F
( GrGetWinHandle\050) 171 322.3 T
4 9 Q
(GStateHandle gstate\051;) 153 311.97 T
(/* subject GState */) 315 311.97 T
0 10 Q
(Get the handle of the GState\325) 180 294.3 T
(s associated window) 314.66 294.3 T
(.) 407.09 294.3 T
2 F
(Include:) 99 275.8 T
6 F
(graphics.h) 180 275.8 T
81 259.46 531 264.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 259.46 531 264.47 R
7 X
0 0 0 1 0 0 0 K
V
50 263.46 609.01 263.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 251.46 T
2 F
(GrGrabExclusive\050\051) 99 251.46 T
3 10 Q
(GStateHandle) 99 236.79 T
4 F
( GrGrabExclusive\050) 171 236.79 T
4 9 Q
(GeodeHandle) 153 226.46 T
(videoDriver,) 261 226.46 T
(/* NULL for default */) 333 226.46 T
(GStateHandle) 153 216.46 T
(gstate\051;) 261 216.46 T
(/* subject GState */) 333 216.46 T
0 10 Q
(Start drawing exclusively to a video driver) 180 198.79 T
(.) 375.76 198.79 T
2 F
(Include:) 99 180.29 T
6 F
(graphics.h) 180 180.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "214" 62
%%Page: "215" 63
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(215) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrInitDefaultT) 99 634.99 T
(ransform\050\051) 178.34 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrInitDefaultTransform\050) 153 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* subject GState */) 315 609.99 T
0 10 Q
-0.64 (Initialize the GState\325) 180 592.33 P
-0.64 (s default transformation to hold hte value of the current) 275.4 592.33 P
(transformation.) 180 580.83 T
2 F
(Include:) 99 562.33 T
6 F
(graphics.h) 180 562.33 T
81 545.98 531 550.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 545.98 531 550.99 R
7 X
0 0 0 1 0 0 0 K
V
50 549.98 609.01 549.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 537.98 T
2 F
(GrInvalRect\050\051) 99 537.98 T
3 10 Q
(void) 99 523.32 T
4 F
(GrInvalRect\050) 153 523.32 T
4 9 Q
(GStateHandle) 153 512.98 T
(gstate,) 261 512.98 T
(/* subject GState */) 333 512.98 T
(sword) 153 502.98 T
(left,) 261 502.98 T
(/* bounds to be invalidated */) 333 502.98 T
(sword) 153 492.98 T
(top,) 261 492.98 T
(sword) 153 482.98 T
(right,) 261 482.98 T
(sword) 153 472.98 T
(bottom\051;) 261 472.98 T
0 10 Q
(Invalidate the passed rectangular area. This area will be redrawn.) 180 455.32 T
2 F
(Include:) 99 436.82 T
6 F
(graphics.h) 180 436.82 T
81 420.48 531 425.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 420.48 531 425.48 R
7 X
0 0 0 1 0 0 0 K
V
50 424.48 609.01 424.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 412.48 T
2 F
(GrInvalRectDW) 99 412.48 T
(ord\050\051) 186.13 412.48 T
3 10 Q
(void) 99 397.81 T
4 F
(GrInvalRectDWord\050) 153 397.81 T
4 9 Q
(GStateHandle) 153 387.48 T
(gstate,) 261 387.48 T
(/* subject GState */) 333 387.48 T
(const) 153 377.48 T
(RectDWord) 189 377.48 T
(* bounds\051;) 261 377.48 T
(/* bounds to be invalidated */) 333 377.48 T
0 10 Q
(Invalidate the passed rectangular area. This area will be redrawn.) 180 359.81 T
2 F
(Include:) 99 341.31 T
6 F
(graphics.h) 180 341.31 T
81 324.97 531 329.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 324.97 531 329.98 R
7 X
0 0 0 1 0 0 0 K
V
50 328.97 609.01 328.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 316.97 T
2 F
(GrLabel\050\051) 99 316.97 T
3 10 Q
(void) 99 303.3 T
4 F
(GrLabel\050) 153 303.3 T
4 9 Q
(GStringHandle) 153 292.97 T
(gstate,) 261 292.97 T
(/* subject GState */) 315 292.97 T
(word) 153 282.97 T
(label\051;) 261 282.97 T
(/* label to write to GString */) 315 282.97 T
0 10 Q
(W) 180 265.3 T
(rite the passed label into the passed GString.) 189.26 265.3 T
2 F
(Include:) 99 246.8 T
6 F
(gstring.h) 180 246.8 T
81 230.46 531 235.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 230.46 531 235.47 R
7 X
0 0 0 1 0 0 0 K
V
50 234.46 609.01 234.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 222.46 T
2 F
(GrLoadGString\050\051) 99 222.46 T
3 10 Q
(GStringHandle) 99 207.79 T
4 F
( GrLoadGString\050) 177 207.79 T
4 9 Q
(Handle) 153 197.46 T
(han,) 261 197.46 T
(/* handle of GString source */) 333 197.46 T
(GStringType) 153 187.46 T
(hanType,) 261 187.46 T
(/* handle type */) 333 187.46 T
(word) 153 177.46 T
(vmBlock\051;) 261 177.46 T
(/* if VM file, handle of VM block */) 333 177.46 T
0 10 Q
(Load a graphics string from a \336le. Used with stream,) 180 159.79 T
0 9 Q
(VM) 427.26 159.79 T
0 10 Q
(, and pointer) 442.25 159.79 T
(addressed GStrings.) 180 148.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "215" 63
%%Page: "216" 64
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(216) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Structures:) 99 641.33 T
4 9 Q
(typedef ByteEnum GStringType;) 216 627 T
(/*) 216 617 T
(GST_MEMORY,) 252 617 T
(GST_STREAM,) 252 607 T
(GST_VMEM,) 252 597 T
(GST_PTR,) 252 587 T
(GST_PATH) 252 577 T
(*/) 324 577 T
2 10 Q
(Include:) 99 559.33 T
6 F
(gstring.h) 180 559.33 T
81 542.99 531 548 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 542.99 531 548 R
7 X
0 0 0 1 0 0 0 K
V
50 546.99 609.01 546.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 534.99 T
2 F
(GrMapColorIndex\050\051) 99 534.99 T
3 10 Q
(RGBColorAsDWord) 99 520.33 T
4 F
(GrMapColorIndex\050) 195 520.33 T
4 9 Q
(GStateHandle) 153 509.99 T
(gstate,) 261 509.99 T
(/* GState to use for mapping */) 315 509.99 T
(Color) 153 499.99 T
(c\051;) 261 499.99 T
(/* source color to be mapped */) 315 499.99 T
0 10 Q
(Map a color index to its) 180 482.33 T
0 9 Q
(RGB) 290.94 482.33 T
0 10 Q
( equivalent using the color mapping scheme of) 310.94 482.33 T
(the passed GState.) 180 470.83 T
2 F
(Include:) 99 452.33 T
6 F
(graphics.h) 180 452.33 T
81 435.98 531 440.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 435.98 531 440.99 R
7 X
0 0 0 1 0 0 0 K
V
50 439.98 609.01 439.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 427.98 T
2 F
(GrMapColorRGB\050\051) 99 427.98 T
3 10 Q
(RGBColorAsDWord) 99 413.32 T
4 F
( GrMapColorRGB\050) 189 413.32 T
4 9 Q
(GStateHandle) 153 402.98 T
(gstate,) 261 402.98 T
(/* GState to use for mapping */) 315 402.98 T
(word) 153 392.98 T
(red,) 261 392.98 T
(/* RGB values to map */) 315 392.98 T
(word) 153 382.98 T
(green,) 261 382.98 T
(word) 153 372.98 T
(blue\051;) 261 372.98 T
0 10 Q
(Map an) 180 355.32 T
0 9 Q
(RGB) 217.97 355.32 T
0 10 Q
( color to an index.) 237.97 355.32 T
2 F
(Include:) 99 336.82 T
6 F
(graphics.h) 180 336.82 T
81 320.48 531 325.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 320.48 531 325.48 R
7 X
0 0 0 1 0 0 0 K
V
50 324.48 609.01 324.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 312.48 T
2 F
(GrMoveReg\050\051) 99 312.48 T
3 10 Q
(void) 99 297.81 T
4 F
(GrMoveReg\050) 153 297.81 T
4 9 Q
(Region) 153 287.48 T
(* reg,) 189 287.48 T
(/* pointer to region */) 261 287.48 T
(sword) 153 277.47 T
(xOffset,) 189 277.47 T
(/* amount to shift horizontally */) 261 277.47 T
(sword) 153 267.47 T
(yOffset\051;) 189 267.47 T
(/* amount to shift vertically */) 261 267.47 T
0 10 Q
(Moves a region a given amount. Note that this operation affects only the) 180 249.81 T
(region\325) 180 238.31 T
(s data structure. The region must be redrawn or used in some other) 210.74 238.31 T
(way for the changes to have any visible effect.) 180 226.81 T
2 F
(Include:) 99 208.31 T
6 F
(graphics.h) 180 208.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "216" 64
%%Page: "217" 65
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(217) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrMoveT) 99 634.99 T
(o\050\051) 150.12 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrMoveTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 315 609.99 T
(sword) 153 599.99 T
(x,) 261 599.99 T
(/* new absolute pen position */) 315 599.99 T
(sword) 153 589.99 T
(y\051;) 261 589.99 T
0 10 Q
(Change the pen position.) 180 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
81 537.48 531 542.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.48 531 542.49 R
7 X
0 0 0 1 0 0 0 K
V
50 541.48 609.01 541.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.48 T
2 F
(GrMulDWFixed\050\051) 99 529.48 T
3 10 Q
(void) 99 514.82 T
4 F
(GrMulDWFixed\050) 153 514.82 T
4 9 Q
(const) 153 504.48 T
(DWFixed) 189 504.48 T
(* i,) 261 504.48 T
(/* first number */) 333 504.48 T
(const) 153 494.48 T
(DWFixed) 189 494.48 T
(* j,) 261 494.48 T
(/* second number */) 333 494.48 T
(DWFixed) 153 484.48 T
(* result\051;) 261 484.48 T
(/* pointer to returned result */) 333 484.48 T
0 10 Q
(Multiply two \336xed point numbers.) 180 466.82 T
2 F
(Include:) 99 448.32 T
6 F
(graphics.h) 180 448.32 T
81 431.98 531 436.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 431.98 531 436.98 R
7 X
0 0 0 1 0 0 0 K
V
50 435.98 609.01 435.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 423.98 T
2 F
(GrMulWWFixed\050\051) 99 423.98 T
3 10 Q
(WWFixedAsDWord) 99 409.31 T
4 F
( GrMulWWFixed\050) 183 409.31 T
4 9 Q
(WWFixedAsDWord i,) 153 398.98 T
(/* first number */) 279 398.98 T
(WWFixedAsDWord j\051;) 153 388.98 T
(/* second number */) 279 388.98 T
0 10 Q
(Multiply two \336xed point numbers.) 180 371.31 T
2 F
(Include:) 99 352.81 T
6 F
(graphics.h) 180 352.81 T
81 336.47 531 341.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 336.47 531 341.48 R
7 X
0 0 0 1 0 0 0 K
V
50 340.47 609.01 340.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 328.47 T
2 F
(GrNewPage\050\051) 99 328.47 T
3 10 Q
(void) 99 313.8 T
4 F
(GrNewPage\050) 153 313.8 T
4 9 Q
(GStateHandle) 153 303.47 T
(gstate,) 261 303.47 T
(PageEndCommand) 153 293.47 T
(pageEndCommand\051;) 261 293.47 T
0 10 Q
(Begin drawing a new page. Normally used when printing documents.) 180 275.8 T
2 F
(Include:) 99 257.3 T
6 F
(graphics.h) 180 257.3 T
81 240.96 531 245.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 240.96 531 245.97 R
7 X
0 0 0 1 0 0 0 K
V
50 244.96 609.01 244.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 232.96 T
2 F
(GrNullOp\050\051) 99 232.96 T
3 10 Q
(void) 99 218.29 T
4 F
(GrNullOp\050) 153 218.29 T
4 9 Q
(GStateHandle gstate\051;) 153 207.96 T
(/* subject GState */) 297 207.96 T
0 10 Q
(W) 180 190.29 T
(rite a null operation element to a GString.) 189.26 190.29 T
2 F
(Include:) 99 171.79 T
6 F
(graphics.h) 180 171.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "217" 65
%%Page: "218" 66
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(218) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrQuickArcSine\050\051) 99 634.99 T
3 10 Q
(WWFixedAsDWord) 99 620.33 T
4 F
( GrQuickArcSine\050) 183 620.33 T
4 9 Q
(WWFixedAsDWord) 153 609.99 T
(deltaYDivDistance,) 261 609.99 T
(/* delta y / distance */) 369 609.99 T
(word) 153 599.99 T
(origDeltaX\051;) 261 599.99 T
(/* original delta x */) 369 599.99 T
0 10 Q
-0.33 (Compute a \336xed point arcsine. Angles are given in degrees counterclockwise) 180 582.33 P
(of the positive x axis.) 180 570.83 T
2 F
(Include:) 99 552.33 T
6 F
(graphics.h) 180 552.33 T
81 535.98 531 540.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 535.98 531 540.99 R
7 X
0 0 0 1 0 0 0 K
V
50 539.98 609.01 539.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 527.98 T
2 F
(GrQuickCosine\050\051) 99 527.98 T
3 10 Q
(WWFixedAsDWord) 99 513.32 T
4 F
( GrQuickCosine\050) 183 513.32 T
4 9 Q
(WWFixedAsDWord angle\051;) 153 502.98 T
(/* angle to cosine */) 297 502.98 T
0 10 Q
(Compute a \336xed point cosine. Angles are given in degrees counterclockwise) 180 485.32 T
(of the positive x axis.) 180 473.82 T
2 F
(Include:) 99 455.32 T
6 F
(graphics.h) 180 455.32 T
81 438.98 531 443.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 438.98 531 443.98 R
7 X
0 0 0 1 0 0 0 K
V
50 442.98 609.01 442.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 430.98 T
2 F
(GrQuickSine\050\051) 99 430.98 T
3 10 Q
(WWFixedAsDWord) 99 416.31 T
4 F
( GrQuickSine\050) 183 416.31 T
4 9 Q
(WWFixedAsDWord angle\051;) 153 405.98 T
(/* angle to sine */) 297 405.98 T
0 10 Q
-0.03 (Compute a \336xed point sine. Angles are given in degrees counterclockwise of) 180 388.31 P
(the positive x axis.) 180 376.81 T
2 F
(Include:) 99 358.31 T
6 F
(graphics.h) 180 358.31 T
81 341.97 531 346.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 341.97 531 346.98 R
7 X
0 0 0 1 0 0 0 K
V
50 345.97 609.01 345.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 333.97 T
2 F
(GrQuickT) 99 333.97 T
(angent\050\051) 152.8 333.97 T
3 10 Q
(WWFixedAsDWord) 99 319.3 T
4 F
( GrQuickTangent\050) 183 319.3 T
4 9 Q
(WWFixedAsDWord angle\051;) 153 308.97 T
(/* angle to tangent */) 297 308.97 T
0 10 Q
-0.57 (Compute a \336xed point tangent. Angles are given in degrees counterclockwise) 180 291.3 P
(of the positive x axis.) 180 279.8 T
2 F
(Include:) 99 261.3 T
6 F
(graphics.h) 180 261.3 T
81 244.96 531 249.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.96 531 249.97 R
7 X
0 0 0 1 0 0 0 K
V
50 248.96 609.01 248.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 236.96 T
2 F
(GrReleaseExclusive\050\051) 99 236.96 T
3 10 Q
(void) 99 222.29 T
4 F
(GrReleaseExclusive\050 /* TRUE if system had to force a redraw */) 153 222.29 T
4 9 Q
(GeodeHandle) 153 211.96 T
(videoDriver,) 261 211.96 T
(/* handle of video driver */) 333 211.96 T
(GStateHandle) 153 201.96 T
(gstate,) 261 201.96 T
(/* GState that was drawing */) 333 201.96 T
(Rectangle) 153 191.96 T
(*bounds\051;) 261 191.96 T
(/* Bounds of aborted drawings */) 333 191.96 T
0 10 Q
(Stop drawing exclusively to a video driver) 180 174.29 T
(.) 372.61 174.29 T
2 F
(Include:) 99 155.79 T
6 F
(graphics.h) 180 155.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "218" 66
%%Page: "219" 67
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(219) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrRelMoveT) 99 634.99 T
(o\050\051) 168.79 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrRelMoveTo\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 315 609.99 T
(WWFixedAsDWord) 153 599.99 T
(x,) 261 599.99 T
(/* offsets to new pen position */) 315 599.99 T
(WWFixedAsDWord) 153 589.99 T
(y\051;) 261 589.99 T
0 10 Q
(Change the pen position to coordinate expressed relative to the current) 180 572.33 T
(position.) 180 560.83 T
2 F
(Include:) 99 542.33 T
6 F
(graphics.h) 180 542.33 T
81 525.98 531 530.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 525.98 531 530.99 R
7 X
0 0 0 1 0 0 0 K
V
50 529.98 609.01 529.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 517.98 T
2 F
(GrRestoreState\050\051) 99 517.98 T
3 10 Q
(void) 99 503.32 T
4 F
(GrRestoreState\050) 153 503.32 T
4 9 Q
(GStateHandle gstate\051;) 153 492.98 T
(/* subject GState */) 297 492.98 T
0 10 Q
(Restore the values of a saved GState.) 180 475.32 T
2 F
(Include:) 99 456.82 T
6 F
(graphics.h) 180 456.82 T
81 440.48 531 445.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 440.48 531 445.48 R
7 X
0 0 0 1 0 0 0 K
V
50 444.48 609.01 444.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 432.48 T
2 F
(GrSaveState\050\051) 99 432.48 T
3 10 Q
(void) 99 417.81 T
4 F
(GrSaveState\050) 153 417.81 T
4 9 Q
(GStateHandle gstate\051;) 153 407.48 T
(/* subject GState */) 297 407.48 T
0 10 Q
(Save the values of a GState, so that they may be restored by) 180 389.81 T
6 F
(GrRestoreState\050\051) 180 378.31 T
0 F
(.) 268.53 378.31 T
2 F
(Include:) 99 359.81 T
6 F
(graphics.h) 180 359.81 T
81 343.47 531 348.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 343.47 531 348.48 R
7 X
0 0 0 1 0 0 0 K
V
50 347.47 609.01 347.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 335.47 T
2 F
(GrSDivDWFByWWF\050\051) 99 335.47 T
3 10 Q
(void) 99 320.8 T
4 F
( GrSDivDWFByWWF\050) 123 320.8 T
4 9 Q
(const DWFixed) 153 310.47 T
(* dividend,) 261 310.47 T
(const WWFixed) 153 300.47 T
(* divisor,) 261 300.47 T
(DWFixed) 153 290.47 T
(* quotient\051) 261 290.47 T
(/* returned value */) 333 290.47 T
0 10 Q
(Divide two \336xed point numbers.) 180 272.8 T
2 F
(Include:) 99 254.3 T
6 F
(graphics.h) 180 254.3 T
81 237.96 531 242.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 237.96 531 242.97 R
7 X
0 0 0 1 0 0 0 K
V
50 241.96 609.01 241.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 229.96 T
2 F
(GrSDivWWFixed\050\051) 99 229.96 T
3 10 Q
(WWFixedAsDWord) 99 215.29 T
4 F
( GrSDivWWFixed\050) 183 215.29 T
4 9 Q
(WWFixedAsDWord dividend,) 153 204.96 T
(WWFixedAsDWord divisor\051) 153 194.96 T
0 10 Q
(Divide two \336xed point numbers.) 180 177.29 T
2 F
(Include:) 99 158.79 T
6 F
(graphics.h) 180 158.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "219" 67
%%Page: "220" 68
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(220) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetAreaAttr\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetAreaAttr\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 315 609.99 T
(const AreaAttr) 153 599.99 T
(* aa\051;) 261 599.99 T
(/* AreaAttr structure */) 315 599.99 T
0 10 Q
(Set all of the attributes used when \336lling areas.) 180 582.33 T
2 F
(Structures:) 99 563.83 T
4 9 Q
(typedef struct {) 216 549.49 T
(byte) 252 539.49 T
(AA_colorFlag;) 360 539.49 T
(RGBValue) 252 529.49 T
(AA_color;) 360 529.49 T
(SystemDrawMask) 252 519.49 T
(AA_mask;) 360 519.49 T
(ColorMapMode) 252 509.49 T
(AA_mapMode;) 360 509.49 T
(} AreaAttr;) 216 499.49 T
2 10 Q
(Include:) 99 481.83 T
6 F
(graphics.h) 180 481.83 T
81 465.48 531 470.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 465.48 531 470.49 R
7 X
0 0 0 1 0 0 0 K
V
50 469.48 609.01 469.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 457.48 T
2 F
(GrSetAreaColor\050\051) 99 457.48 T
3 10 Q
(void) 99 442.82 T
4 F
(GrSetAreaColor\050) 153 442.82 T
4 9 Q
(GStateHandle) 153 432.48 T
(gstate,) 261 432.48 T
(/* GState to set color for */) 333 432.48 T
(ColorFlag) 153 422.48 T
(flag,) 261 422.48 T
(/* flag of how to set color */) 333 422.48 T
(word) 153 412.48 T
(redOrIndex,) 261 412.48 T
(/* color index or red RGB value */) 333 412.48 T
(word) 153 402.48 T
(green,) 261 402.48 T
(/* green RGB value or zero */) 333 402.48 T
(word) 153 392.48 T
(blue\051;) 261 392.48 T
(/* blue RGB value or zero */) 333 392.48 T
0 10 Q
(Set the color to use when \336lling areas. The \337ag parameter may be) 180 374.82 T
0 9 Q
(CF_RGB) 486.72 374.82 T
0 10 Q
-0.62 (\050to set) 180 363.32 P
0 9 Q
-0.56 (RGB) 210.06 363.32 P
0 10 Q
-0.62 ( values\051,) 230.06 363.32 P
0 9 Q
-0.56 (CF_INDEX) 270.31 363.32 P
0 10 Q
-0.62 ( \050to set a palette index\051,) 318.14 363.32 P
0 9 Q
-0.56 (CF_GRA) 426.12 363.32 P
-0.56 (Y) 462.29 363.32 P
0 10 Q
-0.62 (, or) 467.52 363.32 P
0 9 Q
-0.56 (CF_SAME) 484.06 363.32 P
0 10 Q
-0.62 (.) 528.22 363.32 P
2 F
(Include:) 99 344.82 T
6 F
(graphics.h) 180 344.82 T
81 328.48 531 333.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.48 531 333.48 R
7 X
0 0 0 1 0 0 0 K
V
50 332.48 609.01 332.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 320.48 T
2 F
(GrSetAreaColorMap\050\051) 99 320.48 T
3 10 Q
(void) 99 305.81 T
4 F
(GrSetAreaColorMap\050) 153 305.81 T
4 9 Q
(GStateHandle) 153 295.48 T
(gstate,) 261 295.48 T
(/* subject GState */) 333 295.48 T
(ColorMapMode) 153 285.48 T
(colorMap\051;) 261 285.48 T
(/* color mapping mode */) 333 285.48 T
0 10 Q
(Set mode to use when trying to \336ll an area with an unavailable color) 180 267.81 T
(.) 495.62 267.81 T
2 F
(Include:) 99 249.31 T
6 F
(graphics.h) 180 249.31 T
81 232.97 531 237.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 232.97 531 237.97 R
7 X
0 0 0 1 0 0 0 K
V
50 236.97 609.01 236.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 224.97 T
2 F
(GrSetAreaMaskCustom\050\051) 99 224.97 T
3 10 Q
(void) 99 210.3 T
4 F
(GrSetAreaMaskCustom\050) 153 210.3 T
4 9 Q
(GStateHandle) 153 199.97 T
(gstate,) 261 199.97 T
(/* subject GState */) 333 199.97 T
(const) 153 189.97 T
(DrawMask) 189 189.97 T
(* dm\051;) 261 189.97 T
(/* pointer to new custom mask */) 333 189.97 T
0 10 Q
(Set the drawing mask to use when \336lling areas.) 180 172.3 T
2 F
(Include:) 99 153.8 T
6 F
(graphics.h) 180 153.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "220" 68
%%Page: "221" 69
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(221) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetAreaMaskSys\050\051) 99 634.99 T
3 10 Q
(void) 99 621.33 T
4 F
(GrSetAreaMaskSys\050) 153 621.33 T
4 9 Q
(GStateHandle) 153 610.99 T
(gstate,) 261 610.99 T
(/* subject GState */) 333 610.99 T
(SystemDrawMask) 153 600.99 T
(sysDM\051;) 261 600.99 T
(/* new system area mask */) 333 600.99 T
0 10 Q
(Set the drawing mask to use when \336lling areas.) 180 583.33 T
2 F
(Include:) 99 564.83 T
6 F
(graphics.h) 180 564.83 T
81 548.48 531 553.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 548.48 531 553.49 R
7 X
0 0 0 1 0 0 0 K
V
50 552.48 609.01 552.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 540.48 T
2 F
(GrSetAreaPattern\050\051) 99 540.48 T
3 10 Q
(void) 99 525.82 T
4 F
(GrSetAreaPattern\050) 153 525.82 T
4 9 Q
(GStateHandle) 153 515.48 T
(gstate,) 261 515.48 T
(/* subject GState */) 333 515.48 T
(GraphicPattern) 153 505.48 T
(pattern\051;) 261 505.48 T
(/* new pattern */) 333 505.48 T
0 10 Q
(Set the graphics pattern to use when \336lling areas.) 180 487.82 T
2 F
(Include:) 99 469.32 T
6 F
(graphics.h) 180 469.32 T
81 452.98 531 457.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 452.98 531 457.98 R
7 X
0 0 0 1 0 0 0 K
V
50 456.98 609.01 456.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 444.98 T
2 F
(GrSetBitmapMode\050\051) 99 444.98 T
3 10 Q
(void) 99 430.31 T
4 F
(GrSetBitmapMode\050) 153 430.31 T
4 9 Q
(GStateHandle) 153 419.98 T
(gstate,) 261 419.98 T
(/* subject GState */) 333 419.98 T
(word) 153 409.98 T
(flags,) 261 409.98 T
( /* BM_EDIT_MASK or BM_CLUSTERED_DITHER */) 297 409.98 T
(MemHandle) 153 399.98 T
(colorCorr\051;) 261 399.98 T
(/* handle of ColorTransfer */) 333 399.98 T
0 10 Q
(Set the bitmap editing mode. This allows the editing of a bitmap\325) 180 382.31 T
(s mask, or) 478.97 382.31 T
(turning on clustered dithering.) 180 370.81 T
2 F
(Include:) 99 352.31 T
6 F
(graphics.h) 180 352.31 T
81 335.97 531 340.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 335.97 531 340.98 R
7 X
0 0 0 1 0 0 0 K
V
50 339.97 609.01 339.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 327.97 T
2 F
(GrSetBitmapRes\050\051) 99 327.97 T
3 10 Q
(Boolean) 99 313.3 T
4 F
(GrSetBitmapRes\050) 153 313.3 T
4 9 Q
(GStateHandle) 153 302.97 T
(gstate,) 261 302.97 T
(/* subject GState */) 333 302.97 T
(word) 153 292.97 T
(xRes,) 261 292.97 T
(/* new resolutions */) 333 292.97 T
(word) 153 282.97 T
(yRes\051;) 261 282.97 T
0 10 Q
(Set a complex bitmap\325) 180 265.3 T
(s resolution.) 281.14 265.3 T
2 F
(Include:) 99 246.8 T
6 F
(graphics.h) 180 246.8 T
81 230.46 531 235.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 230.46 531 235.47 R
7 X
0 0 0 1 0 0 0 K
V
50 234.46 609.01 234.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 222.46 T
2 F
(GrSetClipPath\050\051) 99 222.46 T
3 10 Q
(void) 99 207.79 T
4 F
(GrSetClipPath\050) 153 207.79 T
4 9 Q
(GStateHandle) 153 197.46 T
(gstate,) 261 197.46 T
(/* subject GState */) 333 197.46 T
(PathCombineType) 153 187.46 T
(params,) 261 187.46 T
(/* how paths should be combined */) 333 187.46 T
(RegionFillRule) 153 177.46 T
(rule\051;) 261 177.46 T
(/* ODD_EVEN or WINDING */) 333 177.46 T
0 10 Q
(Restrict the clipping region by intersecting it with the passed path.) 180 159.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "221" 69
%%Page: "222" 70
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(222) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Include:) 99 641.33 T
6 F
(graphics.h) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(GrSetClipRect\050\051) 99 616.99 T
3 10 Q
(void) 99 602.33 T
4 F
(GrSetClipRect\050) 153 602.33 T
4 9 Q
(GStateHandle) 153 591.99 T
(gstate,) 261 591.99 T
(/* subject GState */) 333 591.99 T
(PathCombineType) 153 581.99 T
(flags,) 261 581.99 T
(/* how paths should be combined */) 333 581.99 T
(sword) 153 571.99 T
(left,) 261 571.99 T
(/* bounds of clipping rectangle */) 333 571.99 T
(sword) 153 561.99 T
(top,) 261 561.99 T
(sword) 153 551.99 T
(right,) 261 551.99 T
(sword) 153 541.99 T
(bottom\051;) 261 541.99 T
0 10 Q
(Restrict the clipping region by intersecting it with the passed rectangle.) 180 524.33 T
2 F
(Include:) 99 505.83 T
6 F
(graphics.h) 180 505.83 T
81 489.48 531 494.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 489.48 531 494.49 R
7 X
0 0 0 1 0 0 0 K
V
50 493.48 609.01 493.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 481.48 T
2 F
(GrSetCustomAreaPattern\050\051) 99 481.48 T
3 10 Q
(void) 99 467.82 T
4 F
(GrSetCustomAreaPattern\050) 153 467.82 T
4 9 Q
(GStateHandle) 153 457.48 T
(gstate,) 261 457.48 T
(/* subject GState */) 333 457.48 T
(GraphicPattern) 153 447.48 T
(pattern,) 261 447.48 T
(/* new area pattern */) 333 447.48 T
(const void) 153 437.48 T
(*) 212.4 437.48 T
(patternData,) 261 437.48 T
(/* pointer to pattern data */) 333 437.48 T
(word) 153 427.48 T
(patternSize\051; /* size of pattern data buffer */) 261 427.48 T
0 10 Q
(Set the graphics pattern to use when \336lling areas.) 180 409.82 T
2 F
(Include:) 99 391.32 T
6 F
(graphics.h) 180 391.32 T
81 374.98 531 379.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 374.98 531 379.98 R
7 X
0 0 0 1 0 0 0 K
V
50 378.98 609.01 378.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 366.98 T
2 F
(GrSetCustomT) 99 366.98 T
(extPattern\050\051) 182.78 366.98 T
3 10 Q
(void) 99 352.31 T
4 F
(GrSetCustomTextPattern\050) 153 352.31 T
4 9 Q
(GStateHandle) 153 341.98 T
(gstate,) 261 341.98 T
(/* subject GState */) 351 341.98 T
(GraphicPattern) 153 331.98 T
(pattern,) 261 331.98 T
(/* new pattern */) 351 331.98 T
(const void) 153 321.98 T
(* patternData) 261 321.98 T
(\051;) 331.2 321.98 T
(/* pointer to pattern data */) 351 321.98 T
0 10 Q
(Set the graphic pattern used when drawing text.) 180 304.31 T
2 F
(Include:) 99 285.81 T
6 F
(graphics.h) 180 285.81 T
81 269.47 531 274.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 269.47 531 274.47 R
7 X
0 0 0 1 0 0 0 K
V
50 273.47 609.01 273.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 261.47 T
2 F
(GrSetDefaultT) 99 261.47 T
(ransform\050\051) 179.02 261.47 T
3 10 Q
(void) 99 246.8 T
4 F
(GrSetDefaultTransform\050) 153 246.8 T
4 9 Q
(GStateHandle gstate\051;) 153 236.47 T
(/* subject GState */) 297 236.47 T
0 10 Q
(Replace the current coordinate transformation with the default) 180 218.8 T
(transformation.) 180 207.3 T
2 F
(Include:) 99 188.8 T
6 F
(graphics.h) 180 188.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "222" 70
%%Page: "223" 71
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(223) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetFont\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetFont\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(FontID) 153 599.99 T
(id,) 261 599.99 T
(/* new font ID */) 333 599.99 T
(WWFixedAsDWord) 153 589.99 T
(pointSize\051;) 261 589.99 T
(/* new point size */) 333 589.99 T
0 10 Q
(Set the font to use when drawing text.) 180 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
81 537.48 531 542.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.48 531 542.49 R
7 X
0 0 0 1 0 0 0 K
V
50 541.48 609.01 541.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.48 T
2 F
(GrSetFontW) 99 529.48 T
(eight\050\051) 168.78 529.48 T
3 10 Q
(void) 99 514.82 T
4 F
(GrSetFontWeight\050) 153 514.82 T
4 9 Q
(GStateHandle) 153 504.48 T
(gstate,) 261 504.48 T
(/* subject GState */) 333 504.48 T
(FontWeight) 153 494.48 T
(weight\051;) 261 494.48 T
(/* new font weight */) 333 494.48 T
0 10 Q
(Set the font weight to use when drawing text.) 180 476.82 T
2 F
(Include:) 99 458.32 T
6 F
(font.h) 180 458.32 T
81 441.98 531 446.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 441.98 531 446.98 R
7 X
0 0 0 1 0 0 0 K
V
50 445.98 609.01 445.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 433.98 T
2 F
(GrSetFontW) 99 433.98 T
(idth\050\051) 168.89 433.98 T
3 10 Q
(void) 99 419.31 T
4 F
(GrSetFontWidth\050) 153 419.31 T
4 9 Q
(GStateHandle) 153 408.98 T
(gstate,) 261 408.98 T
(/* subject GState */) 333 408.98 T
(FontWidth) 153 398.98 T
(width\051;) 261 398.98 T
(/* new font width */) 333 398.98 T
0 10 Q
(Set the font width to use when drawing text.) 180 381.31 T
2 F
(Include:) 99 362.81 T
6 F
(font.h) 180 362.81 T
81 346.47 531 351.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 346.47 531 351.48 R
7 X
0 0 0 1 0 0 0 K
V
50 350.47 609.01 350.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 338.47 T
2 F
(GrSetGStringBounds\050\051) 99 338.47 T
3 10 Q
(void) 99 323.8 T
4 F
(GrSetGStringBounds\050) 153 323.8 T
4 9 Q
(Handle) 153 313.47 T
(gstate,) 261 313.47 T
(/* GState or GString handle */) 333 313.47 T
(sword) 153 303.47 T
(left,) 261 303.47 T
(/* new bounds of GString */) 333 303.47 T
(sword) 153 293.47 T
(top,) 261 293.47 T
(sword) 153 283.47 T
(right,) 261 283.47 T
(sword) 153 273.47 T
(bottom\051;) 261 273.47 T
0 10 Q
(Optimization routine which allows you to set bounds values for a GString.) 180 255.8 T
(This bounds information will be returned by) 180 244.3 T
6 F
(GrGetGStringBounds\050\051) 387.25 244.3 T
0 F
(whenever that routine is called upon the affected GString.) 180 232.8 T
2 F
(Include:) 99 214.3 T
6 F
(graphics.h) 180 214.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "223" 71
%%Page: "224" 72
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(224) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetGStringPos\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetGStringPos\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(GStringSetPosType) 153 599.99 T
(type,) 261 599.99 T
(/* how to set position */) 333 599.99 T
(word) 153 589.99 T
(skip\051;) 261 589.99 T
(/* number of elements to skip */) 333 589.99 T
0 10 Q
-0.27 (Set a graphics strings\325 \322playing position.\323 Using this routine, it is possible to) 180 572.33 P
(draw only selected elements of a GString.) 180 560.83 T
2 F
(Structures:) 99 542.33 T
4 9 Q
(typedef ByteEnum GStringSetPosType;) 216 527.99 T
(/*) 216 517.99 T
(GSSPT_SKIP,) 252 517.99 T
(GSSPT_RELATIVE,) 252 507.99 T
(GSSPT_BEGINNING,) 252 497.99 T
(GSSPT_END) 252 487.99 T
(*/) 324 487.99 T
2 10 Q
(Include:) 99 470.33 T
6 F
(gstring.h) 180 470.33 T
81 453.98 531 458.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 453.98 531 458.99 R
7 X
0 0 0 1 0 0 0 K
V
50 457.98 609.01 457.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 445.98 T
2 F
(GrSetLineAttr\050\051) 99 445.98 T
3 10 Q
(void) 99 431.32 T
4 F
(GrSetLineAttr\050) 153 431.32 T
4 9 Q
(GStateHandle) 153 420.98 T
(gstate,) 261 420.98 T
(/* subject GState */) 315 420.98 T
(const LineAttr) 153 410.98 T
(* la\051;) 261 410.98 T
(/* new line attributes */) 315 410.98 T
0 10 Q
(Set all attributes to use when drawing lines and corners.) 180 393.32 T
2 F
(Include:) 99 374.82 T
6 F
(graphics.h) 180 374.82 T
81 358.48 531 363.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 358.48 531 363.48 R
7 X
0 0 0 1 0 0 0 K
V
50 362.48 609.01 362.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 350.48 T
2 F
(GrSetLineColor\050\051) 99 350.48 T
3 10 Q
(void) 99 335.81 T
4 F
(GrSetLineColor\050) 153 335.81 T
4 9 Q
(GStateHandle) 153 325.48 T
(gstate,) 261 325.48 T
(/* subject GState */) 333 325.48 T
(ColorFlag) 153 315.48 T
(flag,) 261 315.48 T
(/* color flag */) 333 315.48 T
(word) 153 305.48 T
(redOrIndex,) 261 305.48 T
(/* new index or red RGB value */) 333 305.48 T
(word) 153 295.48 T
(green,) 261 295.48 T
(/* new green RGB value or zero */) 333 295.48 T
(word) 153 285.48 T
(blue\051;) 261 285.48 T
(/* new blue RGB value or zero */) 333 285.48 T
0 10 Q
(Set the color to use when drawing lines.) 180 267.81 T
2 F
(Include:) 99 249.31 T
6 F
(graphics.h) 180 249.31 T
81 232.97 531 237.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 232.97 531 237.97 R
7 X
0 0 0 1 0 0 0 K
V
50 236.97 609.01 236.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 224.97 T
2 F
(GrSetLineColorMap\050\051) 99 224.97 T
3 10 Q
(void) 99 210.3 T
4 F
(GrSetLineColorMap\050) 153 210.3 T
4 9 Q
(GStateHandle gstate,) 153 199.97 T
(/* subject GState */) 297 199.97 T
(ColorMapMode colorMap\051;) 153 189.97 T
(/* new color map mode for lines */) 297 189.97 T
0 10 Q
(Set the mode to use when trying to draw lines in an unavailable color) 180 172.3 T
(.) 499.87 172.3 T
2 F
(Include:) 99 153.8 T
6 F
(graphics.h) 180 153.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "224" 72
%%Page: "225" 73
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(225) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetLineEnd\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetLineEnd\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(LineEnd) 153 599.99 T
(end\051;) 261 599.99 T
(/* new line end specification */) 333 599.99 T
0 10 Q
(Set the end to use when drawing lines.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrSetLineJoin\050\051) 99 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrSetLineJoin\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* subject GState */) 333 514.48 T
(LineJoin) 153 504.48 T
(join\051;) 261 504.48 T
(/* new line join specification */) 333 504.48 T
0 10 Q
(Set the line join to use when drawing corners.) 180 486.82 T
2 F
(Include:) 99 468.32 T
6 F
(graphics.h) 180 468.32 T
81 451.98 531 456.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 451.98 531 456.98 R
7 X
0 0 0 1 0 0 0 K
V
50 455.98 609.01 455.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 443.98 T
2 F
(GrSetLineMaskCustom\050\051) 99 443.98 T
3 10 Q
(void) 99 429.31 T
4 F
(GrSetLineMaskCustom\050) 153 429.31 T
4 9 Q
(GStateHandle) 153 418.98 T
(gstate,) 261 418.98 T
(/* subject GState */) 333 418.98 T
(const) 153 408.98 T
(DrawMask) 189 408.98 T
(* dm\051;) 261 408.98 T
(/* new line draw mask */) 333 408.98 T
0 10 Q
(Set the drawing mask used when drawing lines.) 180 391.31 T
2 F
(Include:) 99 372.81 T
6 F
(graphics.h) 180 372.81 T
81 356.47 531 361.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 356.47 531 361.48 R
7 X
0 0 0 1 0 0 0 K
V
50 360.47 609.01 360.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 348.47 T
2 F
(GrSetLineMaskSys\050\051) 99 348.47 T
3 10 Q
(void) 99 334.8 T
4 F
(GrSetLineMaskSys\050) 153 334.8 T
4 9 Q
(GStateHandle) 153 324.47 T
(gstate,) 261 324.47 T
(/* subject GState */) 333 324.47 T
(SystemDrawMask) 153 314.47 T
(sysDM\051;) 261 314.47 T
(/* the new system line mask */) 333 314.47 T
0 10 Q
(Set the drawing mask used when drawing lines.) 180 296.8 T
2 F
(Include:) 99 278.3 T
6 F
(graphics.h) 180 278.3 T
81 261.96 531 266.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 261.96 531 266.97 R
7 X
0 0 0 1 0 0 0 K
V
50 265.96 609.01 265.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 253.96 T
2 F
(GrSetLineStyle\050\051) 99 253.96 T
3 10 Q
(void) 99 239.29 T
4 F
(GrSetLineStyle\050) 153 239.29 T
4 9 Q
(GStateHandle) 153 228.96 T
(gstate,) 261 228.96 T
(/* subject GState */) 351 228.96 T
(LineStyle) 153 218.96 T
(style,) 261 218.96 T
(/* new line style */) 351 218.96 T
(word) 153 208.96 T
(skipDistance,) 261 208.96 T
(/* skip distance to first pair */) 351 208.96 T
(const DashPairArray) 153 198.96 T
(* dpa,) 261 198.96 T
(/* dash definition */) 351 198.96 T
(word) 153 188.96 T
(numPairs\051;) 261 188.96 T
(/* number of pairs */) 351 188.96 T
0 10 Q
(Set the style, or \322dottedness,\323 to use when drawing lines.) 180 171.29 T
2 F
(Include:) 99 152.79 T
6 F
(graphics.h) 180 152.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "225" 73
%%Page: "226" 74
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(226) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetLineW) 99 634.99 T
(idth\050\051) 167.57 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetLineWidth\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(WWFixedAsDWord) 153 599.99 T
(width\051;) 261 599.99 T
(/* new line width */) 333 599.99 T
0 10 Q
(Set the line width to use when drawing lines.) 180 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrSetMiterLimit\050\051) 99 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrSetMiterLimit\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* subject GState */) 333 514.48 T
(WWFixedAsDWord) 153 504.48 T
(limit\051;) 261 504.48 T
(/* new miter limit */) 333 504.48 T
0 10 Q
(Set the miter limit to use when drawing mitered corners.) 180 486.82 T
2 F
(Include:) 99 468.32 T
6 F
(graphics.h) 180 468.32 T
81 451.98 531 456.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 451.98 531 456.98 R
7 X
0 0 0 1 0 0 0 K
V
50 455.98 609.01 455.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 443.98 T
2 F
(GrSetMixMode\050\051) 99 443.98 T
3 10 Q
(void) 99 429.31 T
4 F
(GrSetMixMode\050) 153 429.31 T
4 9 Q
(GStateHandle) 153 418.98 T
(gstate,) 261 418.98 T
(/* subject GState */) 333 418.98 T
(MixMode) 153 408.98 T
(mode\051;) 261 408.98 T
(/* new mix mode */) 333 408.98 T
0 10 Q
-0.75 (Set the GState\325) 180 391.31 P
-0.75 (s mix mode, used to determine what happens when something) 248.33 391.31 P
(is drawn on top of an existing drawing.) 180 379.81 T
2 F
(Include:) 99 361.31 T
6 F
(graphics.h) 180 361.31 T
81 344.97 531 349.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.97 531 349.98 R
7 X
0 0 0 1 0 0 0 K
V
50 348.97 609.01 348.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 336.97 T
2 F
(GrSetNullT) 99 336.97 T
(ransform\050\051) 161.02 336.97 T
3 10 Q
(void) 99 322.3 T
4 F
(GrSetNullTransform\050) 153 322.3 T
4 9 Q
(GStateHandle gstate\051;) 153 311.97 T
(/* subject GState */) 297 311.97 T
0 10 Q
-0.41 (Clear the coordinate transformation. Most applications will actually want to) 180 294.3 P
-0.53 (replace the coordinate transformation with the default transformation using) 180 282.8 P
6 F
(GrSetDefaultT) 180 271.3 T
(ransform\050\051) 255.49 271.3 T
0 F
(.) 311.24 271.3 T
2 F
(Include:) 99 252.8 T
6 F
(graphics.h) 180 252.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "226" 74
%%Page: "227" 75
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(227) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetPalette\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetPalette\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(SetPalType) 153 599.99 T
(type,) 261 599.99 T
(/* SPT_DEFAULT or SPT_CUSTOM */) 333 599.99 T
(const RGBValue) 153 589.99 T
(*buffer,) 261 589.99 T
(/* array of palette entries */) 333 589.99 T
(word) 153 579.99 T
(index,) 261 579.99 T
(/* First element to change */) 333 579.99 T
(word) 153 569.99 T
(numEntries\051;) 261 569.99 T
(/* number of entries in array */) 333 569.99 T
0 10 Q
(Set one or more entries in a palette, a window\325) 180 552.33 T
(s color lookup table.) 393.93 552.33 T
2 F
(Include:) 99 533.83 T
6 F
(graphics.h) 180 533.83 T
81 517.48 531 522.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 517.48 531 522.49 R
7 X
0 0 0 1 0 0 0 K
V
50 521.48 609.01 521.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 509.48 T
2 F
(GrSetPaletteEntry\050\051) 99 509.48 T
3 10 Q
(void) 99 495.82 T
4 F
(GrSetPaletteEntry\050) 153 495.82 T
4 9 Q
(GStateHandle) 153 485.48 T
(gstate,) 261 485.48 T
(/* subject GState */) 333 485.48 T
(word) 153 475.48 T
(index,) 261 475.48 T
(/* index in palette to set */) 333 475.48 T
(word) 153 465.48 T
(red,) 261 465.48 T
(/* new RGB color values for entry */) 333 465.48 T
(word) 153 455.48 T
(green,) 261 455.48 T
(word) 153 445.48 T
(blue\051;) 261 445.48 T
0 10 Q
(Set one entry in a palette, a GState\325) 180 427.82 T
(s color lookup table.) 345.05 427.82 T
2 F
(Include:) 99 409.32 T
6 F
(graphics.h) 180 409.32 T
81 392.98 531 397.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 392.98 531 397.98 R
7 X
0 0 0 1 0 0 0 K
V
50 396.98 609.01 396.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 384.98 T
2 F
(GrSetPath\050\051) 99 384.98 T
3 10 Q
(void) 99 370.31 T
4 F
(GrSetPath\050) 153 370.31 T
4 9 Q
(GStateHandle) 153 359.98 T
(gstate,) 261 359.98 T
(/* subject GState */) 351 359.98 T
(MemHandle) 153 349.98 T
(pathGString\051;) 261 349.98 T
(/* handle of path\325s block */) 351 349.98 T
0 10 Q
(T) 180 332.31 T
(akes the passed GState\325) 186.05 332.31 T
(s path with the path encoded in the block with the) 295.9 332.31 T
(passed handle. T) 180 320.81 T
(o get such a handle, call) 257.06 320.81 T
6 F
(GrGetPath\050\051) 370.6 320.81 T
2 F
(Include:) 99 302.31 T
6 F
(graphics.h) 180 302.31 T
81 285.97 531 290.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 285.97 531 290.98 R
7 X
0 0 0 1 0 0 0 K
V
50 289.97 609.01 289.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 277.97 T
2 F
(GrSetPrivateData\050\051) 99 277.97 T
3 10 Q
(void) 99 263.3 T
4 F
(GrSetPrivateData\050) 153 263.3 T
4 9 Q
(GStateHandle) 153 252.97 T
(gstate,) 261 252.97 T
(/* subject GState */) 333 252.97 T
(word) 153 242.97 T
(dataAX,) 261 242.97 T
(/* data to set */) 333 242.97 T
(word) 153 232.97 T
(dataBX,) 261 232.97 T
(word) 153 222.97 T
(dataCX,) 261 222.97 T
(word) 153 212.97 T
(dataDX\051;) 261 212.97 T
0 10 Q
(Set the private data for a GState.) 180 195.3 T
2 F
(Include:) 99 176.8 T
6 F
(graphics.h) 180 176.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "227" 75
%%Page: "228" 76
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(228) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrSetStrokePath\050\051) 99 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrSetStrokePath\050) 153 620.33 T
4 9 Q
(GStateHandle gstate\051;) 153 609.99 T
(/* subject GState */) 297 609.99 T
0 10 Q
(Replace a GState\325) 180 592.33 T
(s path with the path resulting from stroking the original) 261.32 592.33 T
(path. Note that this stroked path may be drawn, but may not be used for) 180 580.83 T
(clipping.) 180 569.33 T
2 F
(Include:) 99 550.83 T
6 F
(graphics.h) 180 550.83 T
81 534.48 531 539.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 534.48 531 539.49 R
7 X
0 0 0 1 0 0 0 K
V
50 538.48 609.01 538.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 526.48 T
2 F
(GrSetSubscriptAttr\050\051) 99 526.48 T
3 10 Q
(void) 99 511.82 T
4 F
(GrSetSubscriptAttr\050) 153 511.82 T
4 9 Q
(GStateHandle) 153 501.48 T
(gstate,) 261 501.48 T
(/* subject GState */) 333 501.48 T
(ScriptAttrAsWord) 153 491.48 T
(attrs\051;) 261 491.48 T
(/* new subscript percentages */) 333 491.48 T
0 10 Q
(Get the attributes used when drawing subscript characters.) 180 473.82 T
2 F
(Include:) 99 455.32 T
6 F
(font.h) 180 455.32 T
81 438.98 531 443.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 438.98 531 443.98 R
7 X
0 0 0 1 0 0 0 K
V
50 442.98 609.01 442.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 430.98 T
2 F
(GrSetSuperscriptAttr\050\051) 99 430.98 T
3 10 Q
(void) 99 417.31 T
4 F
(GrSetSuperscriptAttr\050) 153 417.31 T
4 9 Q
(GStateHandle) 153 406.98 T
(gstate,) 261 406.98 T
(/* subject GState */) 333 406.98 T
(ScriptAttrAsWord) 153 396.98 T
(attrs\051;) 261 396.98 T
(/* new superscript percentages */) 333 396.98 T
0 10 Q
(Get the attributes used when drawing superscript characters.) 180 379.31 T
2 F
(Include:) 99 360.81 T
6 F
(font.h) 180 360.81 T
81 344.47 531 349.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.47 531 349.48 R
7 X
0 0 0 1 0 0 0 K
V
50 348.47 609.01 348.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 336.47 T
2 F
(GrSetT) 99 336.47 T
(extAttr\050\051) 138.12 336.47 T
3 10 Q
(void) 99 321.8 T
4 F
(GrSetTextAttr\050) 153 321.8 T
4 9 Q
(GStateHandle) 153 311.47 T
(gstate,) 261 311.47 T
(/* subject GState */) 333 311.47 T
(const) 153 301.47 T
(TextAttr) 189 301.47 T
(* ta\051;) 261 301.47 T
(/* pointer to text attributes */) 333 301.47 T
0 10 Q
(Set all attributes used when drawing characters and text strings.) 180 283.8 T
2 F
(Include:) 99 265.3 T
6 F
(graphics.h) 180 265.3 T
81 248.96 531 253.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 248.96 531 253.97 R
7 X
0 0 0 1 0 0 0 K
V
50 252.96 609.01 252.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 240.96 T
2 F
(GrSetT) 99 240.96 T
(extColor\050\051) 138.12 240.96 T
3 10 Q
(void) 99 226.29 T
4 F
(GrSetTextColor\050) 153 226.29 T
4 9 Q
(GStateHandle) 153 215.96 T
(gstate,) 261 215.96 T
(/* subject GState */) 333 215.96 T
(ColorFlag) 153 205.96 T
(flag,) 261 205.96 T
(/* color flag */) 333 205.96 T
(word) 153 195.96 T
(redOrIndex,) 261 195.96 T
(/* palette index or red RGB value */) 333 195.96 T
(word) 153 185.96 T
(green,) 261 185.96 T
(/* green RGB value or zero */) 333 185.96 T
(word) 153 175.96 T
(blue\051;) 261 175.96 T
(/* blue RGB value or zero */) 333 175.96 T
0 10 Q
(Set the color used when drawing text.) 180 158.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "228" 76
%%Page: "229" 77
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(229) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Include:) 99 641.33 T
6 F
(graphics.h) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(GrSetT) 99 616.99 T
(extColorMap\050\051) 138.12 616.99 T
3 10 Q
(void) 99 602.33 T
4 F
(GrSetTextColorMap\050) 153 602.33 T
4 9 Q
(GStateHandle) 153 591.99 T
(gstate,) 261 591.99 T
(/* subject GState */) 333 591.99 T
(ColorMapMode) 153 581.99 T
(colorMap\051;) 261 581.99 T
(/* new color mapping mode */) 333 581.99 T
0 10 Q
(Set the mode used when trying to draw text in an unavailable color) 180 564.33 T
(.) 490.05 564.33 T
2 F
(Include:) 99 545.83 T
6 F
(graphics.h) 180 545.83 T
81 529.48 531 534.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 529.48 531 534.49 R
7 X
0 0 0 1 0 0 0 K
V
50 533.48 609.01 533.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 521.48 T
2 F
(GrSetT) 99 521.48 T
(extMaskCustom\050\051) 138.12 521.48 T
3 10 Q
(void) 99 506.82 T
4 F
(GrSetTextMaskCustom\050) 153 506.82 T
4 9 Q
(GStateHandle) 153 496.48 T
(gstate,) 261 496.48 T
(/* subject GState */) 333 496.48 T
(const) 153 486.48 T
(DrawMask) 189 486.48 T
(* dm\051;) 261 486.48 T
(/* pointer to custom mask */) 333 486.48 T
0 10 Q
(Set the drawing mask used when drawing text.) 180 468.82 T
2 F
(Include:) 99 450.32 T
6 F
(graphics.h) 180 450.32 T
81 433.98 531 438.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 433.98 531 438.98 R
7 X
0 0 0 1 0 0 0 K
V
50 437.98 609.01 437.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 425.98 T
2 F
(GrSetT) 99 425.98 T
(extMaskSys\050\051) 138.12 425.98 T
3 10 Q
(void) 99 412.31 T
4 F
(GrSetTextMaskSys\050) 153 412.31 T
4 9 Q
(GStateHandle) 153 401.98 T
(gstate,) 261 401.98 T
(/* subject GState */) 333 401.98 T
(SystemDrawMask) 153 391.98 T
(sysDM\051;) 261 391.98 T
(/* new system draw mask */) 333 391.98 T
0 10 Q
(Set the drawing mask used when drawing text.) 180 374.31 T
2 F
(Include:) 99 355.81 T
6 F
(graphics.h) 180 355.81 T
81 339.47 531 344.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 339.47 531 344.48 R
7 X
0 0 0 1 0 0 0 K
V
50 343.47 609.01 343.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 331.47 T
2 F
(GrSetT) 99 331.47 T
(extMode\050\051) 138.12 331.47 T
3 10 Q
(void) 99 316.8 T
4 F
(GrSetTextMode\050) 153 316.8 T
4 9 Q
(GStateHandle) 153 306.47 T
(gstate,) 261 306.47 T
(/* subject GState */) 351 306.47 T
(TextMode) 153 296.47 T
(bitsToSet,) 261 296.47 T
(/* TextMode flags to set */) 351 296.47 T
(TextMode) 153 286.47 T
(bitsToClear\051;) 261 286.47 T
(/* TextMode flags to clear */) 351 286.47 T
0 10 Q
-0.25 (Set the text mode associated with a GState. Using this routine, it is possible) 180 268.8 P
(to change the vertical offset used when drawing text.) 180 257.3 T
2 F
(Include:) 99 238.8 T
6 F
(graphics.h) 180 238.8 T
81 222.46 531 227.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 222.46 531 227.47 R
7 X
0 0 0 1 0 0 0 K
V
50 226.46 609.01 226.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 214.46 T
2 F
(GrSetT) 99 214.46 T
(extPattern\050\051) 138.12 214.46 T
3 10 Q
(void) 99 199.79 T
4 F
(GrSetTextPattern\050) 153 199.79 T
4 9 Q
(GStateHandle) 153 189.46 T
(gstate,) 261 189.46 T
(/* subject GState */) 333 189.46 T
(GraphicPattern) 153 179.46 T
(pattern\051;) 261 179.46 T
(/* new graphic pattern for text */) 333 179.46 T
0 10 Q
(Set the graphic pattern used when drawing text.) 180 161.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "229" 77
%%Page: "230" 78
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(230) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Include:) 99 641.33 T
6 F
(graphics.h) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(GrSetT) 99 616.99 T
(extSpacePad\050\051) 138.12 616.99 T
3 10 Q
(void) 99 602.33 T
4 F
(GrSetTextSpacePad\050) 153 602.33 T
4 9 Q
(GStateHandle) 153 591.99 T
(gstate,) 261 591.99 T
(/* subject GState */) 333 591.99 T
(WWFixedAsDWord) 153 581.99 T
(padding\051;) 261 581.99 T
(/* new space padding */) 333 581.99 T
0 10 Q
(Set the space pad used when drawing text strings.) 180 564.33 T
2 F
(Include:) 99 545.83 T
6 F
(graphics.h) 180 545.83 T
81 529.48 531 534.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 529.48 531 534.49 R
7 X
0 0 0 1 0 0 0 K
V
50 533.48 609.01 533.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 521.48 T
2 F
(GrSetT) 99 521.48 T
(extStyle\050\051) 138.12 521.48 T
3 10 Q
(void) 99 506.82 T
4 F
(GrSetTextStyle\050) 153 506.82 T
4 9 Q
(GStateHandle) 153 496.48 T
(gstate,) 261 496.48 T
(/* subject GState */) 333 496.48 T
(TextStyle) 153 486.48 T
(bitsToSet,) 261 486.48 T
(/* TextStyle flags to set */) 333 486.48 T
(TextStyle) 153 476.48 T
(bitsToClear\051;) 261 476.48 T
(/* TextStyle flags to clear */) 333 476.48 T
0 10 Q
(Set the style to use when drawing text.) 180 458.82 T
2 F
(Include:) 99 440.32 T
6 F
(graphics.h) 180 440.32 T
81 423.98 531 428.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 423.98 531 428.98 R
7 X
0 0 0 1 0 0 0 K
V
50 427.98 609.01 427.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 415.98 T
2 F
(GrSetT) 99 415.98 T
(rackKern\050\051) 138.35 415.98 T
3 10 Q
(void) 99 401.31 T
4 F
(GrSetTrackKern\050) 153 401.31 T
4 9 Q
(GStateHandle) 153 390.98 T
(gstate,) 261 390.98 T
(/* subject GState */) 333 390.98 T
(word) 153 380.98 T
(tk\051;) 261 380.98 T
(/* degree of track kerning */) 333 380.98 T
0 10 Q
(Set the track kerning to use when drawing text strings.) 180 363.31 T
2 F
(Include:) 99 344.81 T
6 F
(graphics.h) 180 344.81 T
81 328.47 531 333.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.47 531 333.48 R
7 X
0 0 0 1 0 0 0 K
V
50 332.47 609.01 332.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 320.47 T
2 F
(GrSetT) 99 320.47 T
(ransform\050\051) 138.35 320.47 T
3 10 Q
(void) 99 305.8 T
4 F
(GrSetTransform\050) 153 305.8 T
4 9 Q
(GStateHandle) 153 295.47 T
(gstate,) 261 295.47 T
(/* subject GState */) 333 295.47 T
(const TransMatrix) 153 285.47 T
(* tm\051;) 261 285.47 T
(/* new transformation matrix */) 333 285.47 T
0 10 Q
(Set the GState\325) 180 267.8 T
(s coordinate transformation.) 249.84 267.8 T
2 F
(Include:) 99 249.3 T
6 F
(graphics.h) 180 249.3 T
81 232.96 531 237.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 232.96 531 237.97 R
7 X
0 0 0 1 0 0 0 K
V
50 236.96 609.01 236.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 224.96 T
2 F
(GrSetVMFile\050\051) 99 224.96 T
3 10 Q
(void) 99 210.29 T
4 F
(GrSetVMFile\050) 153 210.29 T
4 9 Q
(GStateHandle) 153 199.96 T
(gstate,) 261 199.96 T
(/* subject GState */) 333 199.96 T
(VMFileHandle) 153 189.96 T
(vmFile\051;) 261 189.96 T
(/* new transformation matrix */) 333 189.96 T
0 10 Q
(Update the) 180 172.29 T
0 9 Q
(VM) 234.64 172.29 T
0 10 Q
( \336le associated with a GState \050this may apply when working) 249.63 172.29 T
(with certain kinds of bitmaps and GStrings\051.) 180 160.79 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "230" 78
%%Page: "231" 79
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(231) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Include:) 99 641.33 T
6 F
(graphics.h) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(GrSetW) 99 616.99 T
(inClipPath\050\051) 142.9 616.99 T
3 10 Q
(void) 99 602.33 T
4 F
(GrSetWinClipPath\050) 153 602.33 T
4 9 Q
(GStateHandle) 153 591.99 T
(gstate,) 261 591.99 T
(/* subject GState */) 333 591.99 T
(PathCombineType) 153 581.99 T
(params,) 261 581.99 T
(/* how paths are combined */) 333 581.99 T
(RegionFillRule) 153 571.99 T
(rule\051;) 261 571.99 T
(/* ODD_EVEN or WINDING */) 333 571.99 T
0 10 Q
-0.32 (Restrict the window\325) 180 554.33 P
-0.32 (s clipping region by intersecting it with the passed path.) 273.82 554.33 P
2 F
(Include:) 99 535.83 T
6 F
(graphics.h) 180 535.83 T
81 519.48 531 524.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 519.48 531 524.49 R
7 X
0 0 0 1 0 0 0 K
V
50 523.48 609.01 523.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 511.48 T
2 F
(GrSetW) 99 511.48 T
(inClipRect\050\051) 142.9 511.48 T
3 10 Q
(void) 99 496.82 T
4 F
(GrSetWinClipRect\050) 153 496.82 T
4 9 Q
(GStateHandle) 153 486.48 T
(gstate,) 261 486.48 T
(/* subject GState */) 333 486.48 T
(PathCombineType) 153 476.48 T
(flags,) 261 476.48 T
(/* how paths are combined */) 333 476.48 T
(sword) 153 466.48 T
(left,) 261 466.48 T
(/* new clipping rectangle bounds */) 333 466.48 T
(sword) 153 456.48 T
(top,) 261 456.48 T
(sword) 153 446.48 T
(right,) 261 446.48 T
(sword) 153 436.48 T
(bottom\051;) 261 436.48 T
0 10 Q
(Restrict the window\325) 180 418.82 T
(s clipping region by intersecting it with the passed) 274.45 418.82 T
(rectangle.) 180 407.32 T
2 F
(Include:) 99 388.82 T
6 F
(graphics.h) 180 388.82 T
81 372.48 531 377.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 372.48 531 377.48 R
7 X
0 0 0 1 0 0 0 K
V
50 376.48 609.01 376.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 364.48 T
2 F
(GrSqrRootWWFixed\050\051) 99 364.48 T
3 10 Q
(WWFixedAsDWord) 99 349.81 T
4 F
( GrSqrRootWWFixed\050) 183 349.81 T
4 9 Q
(WWFixedAsDWord i\051;) 153 339.48 T
(/* number to get the square root of */) 279 339.48 T
0 10 Q
(Compute the square root of a \336xed point number) 180 321.81 T
(.) 404.09 321.81 T
2 F
(Include:) 99 303.31 T
6 F
(graphics.h) 180 303.31 T
81 286.97 531 291.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 286.97 531 291.98 R
7 X
0 0 0 1 0 0 0 K
V
50 290.97 609.01 290.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 278.97 T
2 F
(GrT) 99 278.97 T
(estPath\050\051) 119.45 278.97 T
3 10 Q
(Boolean) 99 264.3 T
4 F
(GrTestPath\050) 153 264.3 T
4 9 Q
(GStateHandle) 153 253.97 T
(gstate,) 261 253.97 T
(/* subject GState */) 333 253.97 T
(GetPathType) 153 243.97 T
(ptype\051;) 261 243.97 T
(/* Type of path to check for */) 333 243.97 T
0 10 Q
(Determine whether the GState has a path of the speci\336ed type.) 180 226.3 T
2 F
(Include:) 99 207.8 T
6 F
(graphics.h) 180 207.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "231" 79
%%Page: "232" 80
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(232) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrT) 99 634.99 T
(estPointInPath\050\051) 119.45 634.99 T
3 10 Q
(Boolean) 99 620.33 T
4 F
(GrTestPointInPath\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(word) 153 599.99 T
(xPos,) 261 599.99 T
(/* point to test */) 333 599.99 T
(word) 153 589.99 T
(yPos,) 261 589.99 T
(RegionFillRule) 153 579.99 T
(rule\051;) 261 579.99 T
(/* ODD_EVEN or WINDING */) 333 579.99 T
0 10 Q
-0.46 (Determine whether the passed point falls in the interior of the GState\325) 180 562.33 P
-0.46 (s path.) 499.97 562.33 P
2 F
(Include:) 99 543.83 T
6 F
(graphics.h) 180 543.83 T
81 527.48 531 532.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 527.48 531 532.49 R
7 X
0 0 0 1 0 0 0 K
V
50 531.48 609.01 531.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 519.48 T
2 F
(GrT) 99 519.48 T
(estPointInPolygon\050\051) 119.45 519.48 T
3 10 Q
(Boolean) 99 504.82 T
4 F
(GrTestPointInPolygon\050) 153 504.82 T
4 9 Q
(GStateHandle) 153 494.48 T
(gstate,) 261 494.48 T
(/* subject GState */) 333 494.48 T
(RegionFillRule) 153 484.48 T
(rule,) 261 484.48 T
(/* ODD_EVEN or WINDING */) 333 484.48 T
(Point) 153 474.48 T
(* list,) 261 474.48 T
(/* array of points in polygon */) 333 474.48 T
(word) 153 464.48 T
(numPoints,) 261 464.48 T
(/* number of points in array */) 333 464.48 T
(sword) 153 454.48 T
(xCoord,) 261 454.48 T
(/* coordinates of point to test */) 333 454.48 T
(sword) 153 444.48 T
(yCoord\051;) 261 444.48 T
0 10 Q
(Determine whether the passed point lies in the interior of the passed) 180 426.82 T
(polygon.) 180 415.32 T
2 F
(Include:) 99 396.82 T
6 F
(graphics.h) 180 396.82 T
81 380.48 531 385.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 380.48 531 385.48 R
7 X
0 0 0 1 0 0 0 K
V
50 384.48 609.01 384.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 372.48 T
2 F
(GrT) 99 372.48 T
(estPointInReg\050\051) 119.45 372.48 T
3 10 Q
(Boolean) 99 357.81 T
4 F
(GrTestPointInReg\050) 153 357.81 T
4 9 Q
(const) 153 347.48 T
(Region) 189 347.48 T
(* reg,) 261 347.48 T
(/* pointer to region */) 333 347.48 T
(sword) 153 337.48 T
(x,) 261 337.48 T
(/* coordinates of point to test */) 333 337.48 T
(sword) 153 327.48 T
(y,) 261 327.48 T
(Rectangle) 153 317.48 T
(*boundingRect\051;) 261 317.48 T
(/* returned bounding rectangle,) 351 317.48 T
( * if point in region */) 333 307.48 T
0 10 Q
(Determine whether a point lies within the passed region. If the point is not) 180 289.81 T
(in the region, the return value is) 180 278.31 T
5 F
(true) 333.53 278.31 T
0 F
(.) 352.04 278.31 T
2 F
(Include:) 99 259.81 T
6 F
(graphics.h) 180 259.81 T
81 243.47 531 248.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 243.47 531 248.47 R
7 X
0 0 0 1 0 0 0 K
V
50 247.47 609.01 247.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 235.47 T
2 F
(GrT) 99 235.47 T
(estRectInReg\050\051) 119.45 235.47 T
3 10 Q
(TestRectReturnType) 99 220.8 T
4 F
( GrTestRectInReg\050) 207 220.8 T
4 9 Q
(const Region) 153 210.47 T
(* reg) 261 210.47 T
(/* pointer to region */) 315 210.47 T
(sword) 153 200.47 T
(left,) 261 200.47 T
(/* bounds of rectangle to be tested */) 315 200.47 T
(sword) 153 190.47 T
(top,) 261 190.47 T
(sword) 153 180.47 T
(right,) 261 180.47 T
(sword) 153 170.47 T
(bottom\051;) 261 170.47 T
0 10 Q
(Determine whether a rectangle lies within the clip region.) 180 152.8 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "232" 80
%%Page: "233" 81
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(233) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(Structures:) 99 641.33 T
4 9 Q
(typedef ByteEnum TestRectReturnType;) 153 631 T
(TRRT_OUT,) 189 621 T
(/* rectangle completely out of region */) 261 621 T
(TRRT_PARTIAL,) 189 611 T
(/* rectangle partially in region */) 261 611 T
(TRRT_IN) 189 601 T
(/* rectangle completely in region */) 261 601 T
2 10 Q
(Include:) 99 583.33 T
6 F
(graphics.h) 180 583.33 T
81 566.99 531 572 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 566.99 531 572 R
7 X
0 0 0 1 0 0 0 K
V
50 570.99 609.01 570.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 558.99 T
2 F
(GrT) 99 558.99 T
(extW) 119.45 558.99 T
(idth\050\051) 148.01 558.99 T
3 10 Q
(word) 99 544.33 T
4 F
(GrTextWidth\050) 153 544.33 T
4 9 Q
(GStateHandle) 153 533.99 T
(gstate,) 261 533.99 T
(/* subject GState */) 333 533.99 T
(const) 153 523.99 T
(Chars) 189 523.99 T
(* str,) 261 523.99 T
(/* text string to check */) 333 523.99 T
(word) 153 513.99 T
(size\051;) 261 513.99 T
(/* maximum number of) 333 513.99 T
( * characters to check */) 315 503.99 T
0 10 Q
-0.38 (Compute the space the passed text string would require in a line of text. Use) 180 486.33 P
6 F
(GrGetT) 180 474.83 T
(extBounds\050\051) 218.15 474.83 T
0 F
( to determine the area necessary to render the text.) 281.3 474.83 T
2 F
(Include:) 99 456.33 T
6 F
(graphics.h) 180 456.33 T
81 439.98 531 444.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.98 531 444.99 R
7 X
0 0 0 1 0 0 0 K
V
50 443.98 609.01 443.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.98 T
2 F
(GrT) 99 431.98 T
(extW) 119.45 431.98 T
(idthWWFixed\050\051) 148.01 431.98 T
3 10 Q
(WWFixedAsDWord) 99 417.32 T
4 F
(GrTextWidthWWFixed\050 /* returns width << 16 */) 189 417.32 T
4 9 Q
(GStateHandle) 153 406.98 T
(gstate,) 261 406.98 T
(/* subject GState */) 333 406.98 T
(const) 153 396.98 T
(Chars) 189 396.98 T
(* str,) 261 396.98 T
(/* text string to check */) 333 396.98 T
(word) 153 386.98 T
(size\051) 261 386.98 T
(/* maximum number of) 333 386.98 T
( * characters to check */) 315 376.98 T
0 10 Q
(Compute the spacing the passed text string would require in a line of text,) 180 359.32 T
-0.24 (accurate to a fraction of a point. Use) 180 347.82 P
6 F
-0.25 (GrGetT) 348.44 347.82 P
-0.25 (extBounds\050\051) 386.59 347.82 P
0 F
-0.24 ( to determine the) 449.74 347.82 P
(area necessary to render the text.) 180 336.32 T
2 F
(Include:) 99 317.82 T
6 F
(graphics.h) 180 317.82 T
81 301.48 531 306.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 301.48 531 306.48 R
7 X
0 0 0 1 0 0 0 K
V
50 305.48 609.01 305.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 293.48 T
2 F
(GrT) 99 293.48 T
(ransform\050\051) 119.68 293.48 T
3 10 Q
(XYValueAsDWord) 99 278.81 T
4 F
(GrTransform\050) 189 278.81 T
4 9 Q
(GStateHandle) 153 268.47 T
(gstate,) 261 268.47 T
(/* subject GState */) 333 268.47 T
(sword) 153 258.47 T
(xCoord,) 261 258.47 T
(/* coordinates to transform */) 333 258.47 T
(sword) 153 248.47 T
(yCoord\051;) 261 248.47 T
0 10 Q
(Apply the device\325) 180 230.81 T
(s transformation to the passed point.) 258.15 230.81 T
2 F
(Include:) 99 212.31 T
6 F
(graphics.h) 180 212.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "233" 81
%%Page: "234" 82
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(234) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrT) 99 634.99 T
(ransformDWFixed\050\051) 119.68 634.99 T
3 10 Q
(void) 99 620.33 T
4 F
(GrTransformDWFixed\050) 153 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(PointDWFixed) 153 599.99 T
(* coord\051;) 261 599.99 T
(/* coordinates to transform */) 333 599.99 T
0 10 Q
(Apply the device\325) 180 582.33 T
(s transformation to the passed point.) 258.15 582.33 T
2 F
(Include:) 99 563.83 T
6 F
(graphics.h) 180 563.83 T
81 547.48 531 552.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.48 531 552.49 R
7 X
0 0 0 1 0 0 0 K
V
50 551.48 609.01 551.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.48 T
2 F
(GrT) 99 539.48 T
(ransformDW) 119.68 539.48 T
(ord\050\051) 191.46 539.48 T
3 10 Q
(void) 99 524.82 T
4 F
(GrTransformDWord\050) 153 524.82 T
4 9 Q
(GStateHandle) 153 514.48 T
(gstate,) 261 514.48 T
(/* subject GState */) 333 514.48 T
(sdword) 153 504.48 T
(xCoord,) 261 504.48 T
(/* coordinates to transform */) 333 504.48 T
(sdword) 153 494.48 T
(yCoord,) 261 494.48 T
(PointDWord) 153 484.48 T
(* deviceCoordinates\051;) 261 484.48 T
(/* pointer to returned devide coordinates */) 261 474.48 T
0 10 Q
(Apply the device\325) 180 456.82 T
(s transormation to the passed point.) 258.15 456.82 T
2 F
(Include:) 99 438.32 T
6 F
(graphics.h) 180 438.32 T
81 421.98 531 426.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 421.98 531 426.98 R
7 X
0 0 0 1 0 0 0 K
V
50 425.98 609.01 425.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 413.98 T
2 F
(GrT) 99 413.98 T
(ransformWWFixed\050\051) 119.68 413.98 T
3 10 Q
(void) 99 399.31 T
4 F
(GrTransformWWFixed\050) 153 399.31 T
4 9 Q
(GStateHandle) 153 388.98 T
(gstate,) 261 388.98 T
(/* subject GState */) 333 388.98 T
(WWFixedAsDWord) 153 378.98 T
(xPos,) 261 378.98 T
(/* coordinates to transform */) 333 378.98 T
(WWFixedAsDWord) 153 368.98 T
(yPos,) 261 368.98 T
(PointWWFixed) 153 358.98 T
(* deviceCoordinates\051;) 261 358.98 T
(/* pointer to returned devide coordinates */) 279 348.98 T
0 10 Q
(Apply the device\325) 180 331.31 T
(s transormation to the passed point.) 258.15 331.31 T
2 F
(Include:) 99 312.81 T
6 F
(graphics.h) 180 312.81 T
81 296.47 531 301.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 296.47 531 301.48 R
7 X
0 0 0 1 0 0 0 K
V
50 300.47 609.01 300.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 288.47 T
2 F
(GrUDivWWFixed\050\051) 99 288.47 T
3 10 Q
(WWFixedAsDWord) 99 273.8 T
4 F
( GrUDivWWFixed\050) 183 273.8 T
4 9 Q
(WWFixedAsDWord) 153 263.47 T
(dividend,) 261 263.47 T
(WWFixedAsDWord) 153 253.47 T
(divisor\051;) 261 253.47 T
0 10 Q
(Compute an unsigned division of two \336xed point numbers.) 180 235.8 T
2 F
(Include:) 99 217.3 T
6 F
(graphics.h) 180 217.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "234" 82
%%Page: "235" 83
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(235) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(GrUntransform\050\051) 99 634.99 T
3 10 Q
(XYValueAsDWord) 99 620.33 T
4 F
( GrUnTransformCoord\050) 183 620.33 T
4 9 Q
(GStateHandle) 153 609.99 T
(gstate,) 261 609.99 T
(/* subject GState */) 333 609.99 T
(sword) 153 599.99 T
(xCoord,) 261 599.99 T
(/* coordinates to untransform */) 333 599.99 T
(sword) 153 589.99 T
(yCoord\051;) 261 589.99 T
0 10 Q
(Apply the reverse of the device\325) 180 572.33 T
(s transformation to the passed point.) 323.7 572.33 T
2 F
(Include:) 99 553.83 T
6 F
(graphics.h) 180 553.83 T
81 537.48 531 542.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.48 531 542.49 R
7 X
0 0 0 1 0 0 0 K
V
50 541.48 609.01 541.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.48 T
2 F
(GrUntransformDWFixed\050\051) 99 529.48 T
3 10 Q
(void) 99 514.82 T
4 F
(GrUnTransCoordDWFixed\050) 153 514.82 T
4 9 Q
(GStateHandle) 153 504.48 T
(gstate,) 261 504.48 T
(/* subject GState */) 333 504.48 T
(PointDWFixed) 153 494.48 T
(* coord\051;) 261 494.48 T
(/* coordinates to untransform */) 333 494.48 T
0 10 Q
(Apply the reverse of the device\325) 180 476.82 T
(s transformation to the passed point.) 323.7 476.82 T
2 F
(Include:) 99 458.32 T
6 F
(graphics.h) 180 458.32 T
81 441.98 531 446.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 441.98 531 446.98 R
7 X
0 0 0 1 0 0 0 K
V
50 445.98 609.01 445.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 433.98 T
2 F
(GrUntransformDW) 99 433.98 T
(ord\050\051) 204.78 433.98 T
3 10 Q
(void) 99 419.31 T
4 F
(GrUnTransformExtCoord\050) 153 419.31 T
4 9 Q
(GStateHandle) 153 408.98 T
(gstate,) 261 408.98 T
(/* subject GState */) 333 408.98 T
(sdword) 153 398.98 T
(xCoord,) 261 398.98 T
(/* coordinates to untransform */) 333 398.98 T
(sdword) 153 388.98 T
(yCoord,) 261 388.98 T
(PointDWord) 153 378.98 T
(* documentCoordinates\051;) 261 378.98 T
(/* pointer to returned devide coordinates *) 279 368.98 T
0 10 Q
(Apply the reverse of the device\325) 180 351.31 T
(s transformation to the passed point.) 323.7 351.31 T
2 F
(Include:) 99 332.81 T
6 F
(graphics.h) 180 332.81 T
81 316.47 531 321.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 316.47 531 321.48 R
7 X
0 0 0 1 0 0 0 K
V
50 320.47 609.01 320.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 308.47 T
2 F
(GrUntransformWWFixed\050\051) 99 308.47 T
3 10 Q
(void) 99 293.8 T
4 F
(GrUnTransCoordWWFixed\050) 153 293.8 T
4 9 Q
(GStateHandle) 153 283.47 T
(gstate,) 261 283.47 T
(/* subject GState */) 333 283.47 T
(WWFixedAsDWord) 153 273.47 T
(xPos,) 261 273.47 T
(/* coordinates to untransform */) 333 273.47 T
(WWFixedAsDWord) 153 263.47 T
(yPos,) 261 263.47 T
(PointWWFixed) 153 253.47 T
(* documentCoordinates\051;) 261 253.47 T
(/* pointer to returned devide coordinates *) 279 243.47 T
0 10 Q
(Apply the reverse of the device\325) 180 225.8 T
(s transformation to the passed point.) 323.7 225.8 T
2 F
(Include:) 99 207.3 T
6 F
(graphics.h) 180 207.3 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "235" 83
%%Page: "236" 84
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
54 666.34 450 678.01 R
V
0 10 Q
0 X
(236) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
306 123.5 486 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "236" 84
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 84
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ Helvetica-Bold
%%+ Courier-Bold
%%+ Courier
%%+ NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Bold
%%EOF
