%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 15 FMDOCUMENT
0 0 /NewCenturySchlbk-Roman FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
4 0 /Courier-Oblique FMFONTDEFINE
5 0 /NewCenturySchlbk-Italic FMFONTDEFINE
6 0 /NewCenturySchlbk-Bold FMFONTDEFINE
7 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "9" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(9) 552.44 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
73 620.99 531 626 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 620.99 531 626 R
7 X
0 0 0 1 0 0 0 K
V
42 624.99 601.01 624.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 612.99 T
2 F
(@alias) 91 612.99 T
3 10 Q
(@alias\050<) 91 599.33 T
4 F
(protoMsg) 139 599.33 T
3 F
(>\051 <) 187 599.33 T
4 F
(messageDef) 211 599.33 T
3 F
(>;) 271 599.33 T
0 F
-0.69 (The @alias keyword is used for messages which take conditional parameters in) 172 581.33 P
(an assembly handler) 172 569.83 T
(. For example, if the assembly handler takes a word) 267.39 569.83 T
(parameter normally and a dword only if a certain \337ag is set, you will need to) 172 558.33 T
(have two) 172 546.83 T
0 9 Q
(C) 216.27 546.83 T
0 10 Q
( messages with the two different parameters. The @alias keyword) 222.77 546.83 T
(allows this. Its arguments are shown below:) 172 535.33 T
5 F
(protoMsg) 172 516.83 T
0 F
(The name of the existing message that the alias will reference.) 235 516.83 T
5 F
(messageDef) 172 498.83 T
0 F
(The new message de\336nition. This is a standard message) 235 498.83 T
(de\336nition as would follow the @message keyword.) 235 487.83 T
3 9 Q
(@message void MSG_MY_MSG\050word par\051;) 208 473.49 T
(@alias\050MSG_MY_MSG\051 void MSG_MY_SECOND_MSG\050dword par\051;) 208 463.49 T
2 10 Q
(See Also:) 91 445.83 T
0 F
(@message) 172 445.83 T
73 429.48 531 434.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 429.48 531 434.49 R
7 X
0 0 0 1 0 0 0 K
V
42 433.48 601.01 433.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 421.48 T
2 F
(@call) 91 421.48 T
3 10 Q
(<) 91 407.82 T
4 F
(ret) 97 407.82 T
3 F
(> = @call [,<) 115 407.82 T
4 F
(flags) 193 407.82 T
3 F
(>] [{<) 223 407.82 T
4 F
(cast_ret) 259 407.82 T
3 F
(>}] \134) 307 407.82 T
(<) 181 396.82 T
4 F
(obj) 187 396.82 T
3 F
(>::[{<) 205 396.82 T
4 F
(cast_par) 241 396.82 T
3 F
(>}]<) 289 396.82 T
4 F
(msg) 313 396.82 T
3 F
(>\050<) 331 396.82 T
4 F
(param) 349 396.82 T
3 F
(>*\051;) 379 396.82 T
0 F
(The @call keyword sends the speci\336ed message to the speci\336ed object and) 172 378.82 T
(makes the caller wait until the message is processed before continuing. The) 172 367.32 T
(arguments of @call are shown below:) 172 355.82 T
5 F
(ret) 172 337.32 T
0 F
(A variable for receiving the return value of the message as) 235 337.32 T
(de\336ned by @message. This has the same usage as a typical) 235 326.32 T
(function return value.) 235 315.32 T
5 F
(\337ags) 172 297.32 T
0 F
(Flags that determine how the message affects the recipient\325) 235 297.32 T
(s) 510.03 297.32 T
(event queue. The allowable \337ags are shown below) 235 286.32 T
(. \050The comma) 463.95 286.32 T
(is required before each \337ag.\051) 235 275.32 T
5 F
(cast_ret) 172 257.32 T
0 F
(A message to cast the message return value to. When Goc) 235 257.32 T
(determines what type of value should be returned, it uses the) 235 246.32 T
-0.83 (return value of the) 235 235.32 P
5 F
-0.83 (cast_ret) 321.29 235.32 P
0 F
-0.83 ( message if this \336eld is used. The curly) 356.83 235.32 P
(braces are required around this \336eld.) 235 224.32 T
5 F
(obj) 172 206.32 T
0 F
(The name of the recipient object, or a variable representing the) 235 206.32 T
(optr of the recipient.) 235 195.32 T
5 F
(cast_par) 172 177.32 T
0 F
(A message to cast the message parameters to. When Goc) 235 177.32 T
-0.57 (determines what type of values should be passed to the message,) 235 166.32 P
(should be returned, it uses the parameters of the) 235 155.32 T
5 F
(cast_par) 463.72 155.32 T
73 144 531 648 C
231.5 633 372.5 638 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
231.5 633 372.5 638 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
73 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 1
%%Page: "10" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(10) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
0 10 Q
0 X
-0.84 (message if this \336eld is used. The curly braces are required around) 243 641.33 P
(this \336eld.) 243 630.33 T
5 F
(msg) 180 612.33 T
0 F
(The name of the message to be sent, or an expression) 243 612.33 T
(representing the message number) 243 601.33 T
(. If an expression is used, you) 399.67 601.33 T
-0.12 (must cast the message to a certain type with the) 243 590.33 P
5 F
-0.12 (cast) 468.64 590.33 P
0 F
-0.12 ( parameter) 486.78 590.33 P
-0.12 (.) 537.22 590.33 P
5 F
(param) 180 572.33 T
0 F
(Expressions or constants passed to the message. Parameters) 243 572.33 T
-0.32 (passed to messages are speci\336ed in the same way as if they were) 243 561.33 P
(being passed directly to a function or routine in) 243 550.33 T
0 9 Q
(C) 464.68 550.33 T
0 10 Q
(.) 471.18 550.33 T
(The \337ags allowed with @call are shown below:) 180 532.33 T
6 F
(forceQueue) 180 513.83 T
0 F
(This \337ag will cause the message to be placed in the recipient\325) 243 502.83 T
(s) 524.16 502.83 T
(event queue, even if it could have been handled by a direct call.) 243 491.83 T
6 F
(checkDuplicate) 180 473.83 T
0 F
-0.11 (This \337ag makes the kernel check if a message of the same name) 243 462.83 P
(is already in the recipient\325) 243 451.83 T
(s event queue. For this \337ag to work,) 363.57 451.83 T
5 F
-0.86 (forceQueue) 243 440.83 P
0 F
-0.86 ( must also be passed. Note that due to implementation) 293.53 440.83 P
-0.06 (constraints, events will be checked from last to \336rst rather than) 243 429.83 P
(from \336rst to last.) 243 418.83 T
6 F
(checkLastOnly) 180 400.83 T
0 F
-0.14 (This \337ag works like) 243 389.83 P
5 F
-0.14 (checkDuplicate) 336.19 389.83 P
0 F
-0.14 (, above, except that it checks) 405.61 389.83 P
(only the last message in the event queue.) 243 378.83 T
6 F
(replace) 180 360.83 T
0 F
(This \337ag modi\336es) 243 360.83 T
5 F
(checkDuplicate) 327.46 360.83 T
0 F
( and) 396.88 360.83 T
5 F
(checkLastOnly) 419.85 360.83 T
0 F
( by) 487.43 360.83 T
-0.32 (superseding the duplicate \050old\051 event with the new one. The new) 243 349.83 P
-0.43 (event will be put in the duplicate\325) 243 338.83 P
-0.43 (s position in the event queue. If) 394.69 338.83 P
(a duplicate is found but the) 243 327.83 T
5 F
(replace) 372.65 327.83 T
0 F
( \337ag is not passed, the) 405.22 327.83 T
-0.81 (duplicate will be dropped and the new event will be put at the end) 243 316.83 P
(of the queue.) 243 305.83 T
6 F
(insertAtFront) 180 287.83 T
0 F
-0.42 (This puts the message at the front of the recipient\325) 243 276.83 P
-0.42 (s event queue.) 472.37 276.83 P
(Note that this \337ag will supersede the) 243 265.83 T
5 F
(replace) 417.29 265.83 T
0 F
( \337ag.) 449.86 265.83 T
6 F
(canDiscardIfDesperate) 180 247.83 T
0 F
-0.58 (This \337ag indicates that this event may be discarded if the system) 243 236.83 P
(is running extremely low on handles and requires more space) 243 225.83 T
(immediately) 243 214.83 T
(.) 299.68 214.83 T
(Additionally) 180 196.83 T
(, @call alows the use of several special expressions in place of the) 236.12 196.83 T
(recipient:) 180 185.33 T
6 F
(self) 180 166.83 T
0 F
(Send the message to the object issuing the @call command. e.g.) 243 166.83 T
3 9 Q
(@call self::MSG_VIS_DRAW\050flags, gstate\051;) 216 152.5 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 2
%%Page: "11" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(11) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
6 10 Q
0 X
(process) 172 641.33 T
0 F
(Send the message to the object\325) 235 641.33 T
(s associated Process object. e.g.) 378.54 641.33 T
3 9 Q
(@call process::MSG_HELLO_RESPOND\050\051;) 208 627 T
6 10 Q
(application) 172 609.33 T
0 F
(Send the message to the object\325) 235 609.33 T
(s associated GenApplication) 378.54 609.33 T
(object.) 235 598.33 T
3 9 Q
(attr = @call application::MSG_GEN_GET_ATTRIBUTES\050\051;) 208 584 T
6 10 Q
(@genParent) 172 566.33 T
0 F
(Send the message to the object\325) 235 566.33 T
(s generic parent in a generic) 378.54 566.33 T
(object tree.) 235 555.33 T
6 F
(@visParent) 172 537.33 T
0 F
-0.34 (Send the message to the object\325) 235 537.33 P
-0.34 (s visible parent in a visible object) 376.85 537.33 P
(tree.) 235 526.33 T
(If you need to send a message to an object\325) 172 508.33 T
(s superclass, use the @callsuper) 366.84 508.33 T
(keyword rather than @call.) 172 496.83 T
3 9 Q
(gstate = @call myObj::MSG_META_CUT\050\051;) 208 482 T
(retVal = @call {MSG_MY_MSG} myObj::MSG_OTHER_MSG\050\051;) 208 472 T
(retVal = @call myObj::MSG_MY_MSG\05010, param1\051;) 208 462 T
2 10 Q
(See Also:) 91 444.33 T
0 F
(@send, @callsuper) 172 444.33 T
(, @message, @method, @object) 255.26 444.33 T
73 427.99 531 433 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 427.99 531 433 R
7 X
0 0 0 1 0 0 0 K
V
42 431.99 601.01 431.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 419.99 T
2 F
(@callsuper) 91 419.99 T
3 10 Q
(<) 91 406.33 T
4 F
(ret) 97 406.33 T
3 F
(> = @callsuper [{<) 115 406.33 T
4 F
(cast_ret) 223 406.33 T
3 F
(>}] \134) 271 406.33 T
(<) 181 395.33 T
4 F
(obj) 187 395.33 T
3 F
(>::<) 205 395.33 T
4 F
(class) 229 395.33 T
3 F
(>::[{<) 259 395.33 T
4 F
(cast_par) 295 395.33 T
3 F
(>}]<) 343 395.33 T
4 F
(msg) 367 395.33 T
3 F
(>\050<) 385 395.33 T
4 F
(param) 403 395.33 T
3 F
(>*\051 [<) 433 395.33 T
4 F
(flags) 469 395.33 T
3 F
(>]+;) 499 395.33 T
(@callsuper;) 91 382.33 T
0 F
-0.36 (The @callsuper keyword does two things: The most useful is to pass a received) 172 364.33 P
(message on to the superclass to ensure default behavior is preserved; the) 172 352.83 T
(second, and less used, acts just like @call but sends the message to the) 172 341.33 T
-0.15 (recipient\325) 172 329.83 P
-0.15 (s superclass rather than the recipient\325) 214.59 329.83 P
-0.15 (s class. This is rarely used but) 389.41 329.83 P
-0.15 (can be used if only default behavior is required of the message. Its arguments) 172 318.33 P
(are shown below:) 172 306.83 T
5 F
(ret) 172 288.33 T
0 F
(Same as @call.) 235 288.33 T
5 F
(obj) 172 270.33 T
0 F
(Same as @call.) 235 270.33 T
5 F
(cast_ret) 172 252.33 T
0 F
(Same as @call) 235 252.33 T
5 F
(.) 300.17 252.33 T
(class) 172 234.33 T
0 F
(The name of the object\325) 235 234.33 T
(s superclass that should receive the) 341.31 234.33 T
(message. It is possible to send the message to the highest) 235 223.33 T
(superclass.) 235 212.33 T
5 F
(cast_par) 172 194.33 T
0 F
(Same as @call) 235 194.33 T
5 F
(.) 300.17 194.33 T
(msg) 172 176.33 T
0 F
(Same as @call.) 235 176.33 T
5 F
(param) 172 158.33 T
0 F
(Same as @call.) 235 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 3
%%Page: "12" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(12) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
5 10 Q
0 X
(\337ags) 180 641.33 T
0 F
(Same as @call.) 243 641.33 T
3 9 Q
(\050void\051 @callsuper myObj::MySupClass::MSG_MY_MSG\050\051;) 216 627 T
2 10 Q
(See Also:) 99 609.33 T
0 F
(@call, @send, @message, @method) 180 609.33 T
81 592.99 540 598 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 592.99 540 598 R
7 X
0 0 0 1 0 0 0 K
V
50 596.99 609.01 596.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 584.99 T
2 F
(@chunk) 99 584.99 T
3 10 Q
(@chunk) 99 571.33 T
(<) 153 571.33 T
4 F
(type) 159 571.33 T
3 F
(> <) 183 571.33 T
4 F
(name) 201 571.33 T
3 F
(> [= <) 225 571.33 T
4 F
(init) 261 571.33 T
3 F
(>];) 285 571.33 T
0 F
-0.25 (The @chunk keyword declares a resource chunk containing data of some kind.) 180 553.33 P
(Data can be of any) 180 541.83 T
0 9 Q
(GEOS) 268.73 541.83 T
0 10 Q
( or) 294.9 541.83 T
0 9 Q
(C) 309.9 541.83 T
0 10 Q
( data type or structure, including a string of) 316.4 541.83 T
(characters. The chunk must be declared between the resource delimiters) 180 530.33 T
(@start and @end. Its arguments are described below:) 180 518.83 T
5 F
(type) 180 500.33 T
0 F
(The data type or structure type of the chunk.) 243 500.33 T
5 F
(name) 180 482.33 T
0 F
(The name of the chunk\321how it will be referenced by other) 243 482.33 T
(entities.) 243 471.33 T
5 F
(init) 180 453.33 T
0 F
(Initializer data, if any) 243 453.33 T
(, to initialize the chunk to.) 343.76 453.33 T
(If you will need to access the chunk from another executable \336le, you must) 180 435.33 T
(declare it in the other \336le with @extern. Objects are declared with @object.) 180 423.83 T
3 9 Q
(typedef struct {) 216 408.99 T
(int) 237.6 398.99 T
(a;) 280.8 398.99 T
(int) 237.6 388.99 T
(b;) 280.8 388.99 T
(} MyStruct;) 216 378.99 T
(char) 216 364.99 T
(MyString[8];) 259.2 364.99 T
(@start MyDataResource, data, notDetachable;) 216 350.99 T
(@chunk word) 216 340.99 T
(MyWordChunk;) 324 340.99 T
(@chunk MyStruct) 216 330.99 T
(MyMSChunk = {5, 10};) 324 330.99 T
(@chunk MyString) 216 320.99 T
(MyStringChunk = \322My string\323;) 324 320.99 T
(@end;) 216 310.99 T
2 10 Q
(See Also:) 99 293.33 T
0 F
(@start, @end, @object, @extern) 180 293.33 T
81 276.98 540 281.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 276.98 540 281.99 R
7 X
0 0 0 1 0 0 0 K
V
50 280.98 609.01 280.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 268.98 T
2 F
(@chunkArray) 99 268.98 T
3 10 Q
(@chunkArray) 99 254.32 T
(<) 171 254.32 T
4 F
(stype) 177 254.32 T
3 F
(> <) 207 254.32 T
4 F
(aname) 225 254.32 T
3 F
(> [= {<) 255 254.32 T
4 F
(init) 297 254.32 T
3 F
(>}];) 321 254.32 T
0 F
(The @chunk keyword declares a Chunk Array) 180 236.32 T
(, a special kind of chunk. Only) 390.71 236.32 T
-0.19 (uniform-element-size chunk arrays may be declared with this keyword. It has) 180 224.82 P
(the following arguments:) 180 213.32 T
5 F
(stype) 180 194.82 T
0 F
(This is the type of each element in the Chunk Array) 243 194.82 T
(. It may be) 482.28 194.82 T
(any standard C or Goc type, or any derived type.) 243 183.82 T
5 F
(aname) 180 165.82 T
0 F
(This is the name of the Chunk Array) 243 165.82 T
(.) 412.09 165.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 4
%%Page: "13" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(13) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
5 10 Q
0 X
(init) 172 641.33 T
0 F
-0.72 (Y) 235 641.33 P
-0.72 (ou may declare the initializer values for a chunk array) 240.93 641.33 P
-0.72 (. If you do) 485.37 641.33 P
(not set any initial values, the Chunk Array will be created with) 235 630.33 T
(no elements.) 235 619.33 T
3 9 Q
(@chunkArray int) 208 605 T
(someints;) 316 605 T
(@chunkArray dword) 208 591 T
(somedwords = {123456789,) 316 591 T
(6021023,) 388 581 T
(31415926};) 388 571 T
2 10 Q
(See Also:) 91 553.33 T
0 F
(@chunk, @elementArray) 172 553.33 T
73 536.99 531 542 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 536.99 531 542 R
7 X
0 0 0 1 0 0 0 K
V
42 540.99 601.01 540.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 528.99 T
2 F
(@class) 91 528.99 T
3 10 Q
(@class) 91 515.33 T
(<) 145 515.33 T
4 F
(cname) 151 515.33 T
3 F
(>, <) 181 515.33 T
4 F
(super) 205 515.33 T
3 F
(> [, master [, variant]];) 235 515.33 T
0 F
-0.02 (The @class keyword begins a class de\336nition. All instance data and messages) 172 497.33 P
-0.33 (for the class are declared between @class and @endc. The arguments of @class) 172 485.83 P
(are listed below:) 172 474.33 T
5 F
(cname) 172 455.83 T
0 F
(Name of the class being declared.) 235 455.83 T
5 F
(super) 172 437.83 T
0 F
(Name of the superclass.) 235 437.83 T
5 F
(master) 172 419.83 T
0 F
(Use of this term designates this class as a master class.) 235 419.83 T
5 F
(variant) 172 401.83 T
0 F
(Use of this term designates this class as a variant class.) 235 401.83 T
3 9 Q
(@class MyTriggerClass, GenTriggerClass;) 208 387.49 T
(@endc) 208 377.49 T
(@class MyMasterVarClass, MetaClass, master, variant;) 208 363.49 T
(@endc) 208 353.49 T
2 10 Q
(See Also:) 91 335.83 T
0 F
(@endc, @classdecl) 172 335.83 T
73 319.48 531 324.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 319.48 531 324.49 R
7 X
0 0 0 1 0 0 0 K
V
42 323.48 601.01 323.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 311.48 T
2 F
(@classdecl) 91 311.48 T
3 10 Q
(@classdecl <) 91 297.82 T
4 F
(cname) 163 297.82 T
3 F
(> [, neverSaved];) 193 297.82 T
0 F
-0.24 (The @classdecl keyword de\336nes a given class structure in memory) 172 279.82 P
-0.24 (. Every new) 474.3 279.82 P
(class that will be used by an application must appear in an @classdecl) 172 268.32 T
(declaration. The arguments for this keyword are shown below:) 172 256.82 T
5 F
(cname) 172 238.32 T
0 F
(The name of the class being declared.) 235 238.32 T
5 F
(neverSaved) 172 220.32 T
0 F
(Using this term indicates that objects of this class are never) 235 220.32 T
(saved along with state information.) 235 209.32 T
3 9 Q
(@classdecl MyTriggerClass;) 208 194.98 T
(@classdecl MyProcessClass, neverSaved;) 208 184.98 T
2 10 Q
(See Also:) 91 167.32 T
0 F
(@class) 172 167.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 5
%%Page: "14" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(14) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(@composite) 99 634.99 T
3 10 Q
(@instance @composite <) 99 621.33 T
4 F
(iname) 231 621.33 T
3 F
(> = <) 261 621.33 T
4 F
(linkFieldName) 291 621.33 T
3 F
(>;) 369 621.33 T
0 F
(The @composite keyword appears as a subcommand of @instance. It is a type) 180 603.33 T
(of instance data\321it indicates that an object of this class can have several) 180 591.83 T
-0.4 (children and that the @composite instance data \336eld will be an optr to the \336rst) 180 580.33 P
(of its children. The arguments of the @composite keyword are given below:) 180 568.83 T
5 F
(iname) 180 550.33 T
0 F
(The name of the instance data \336eld.) 243 550.33 T
5 F
(linkFieldName) 180 532.33 T
0 F
(The name of the @link instance data \336eld for this class.) 243 521.33 T
3 9 Q
(@class GenTrigWithKidsClass, GenTriggerClass;) 216 506.99 T
(/* GI_link is the GenClass sibling link field. */) 237.6 496.99 T
(@instance @composite GTWKI_comp = GI_link;) 237.6 486.99 T
(@endc) 216 476.99 T
2 10 Q
(See Also:) 99 459.33 T
0 F
(@instance, @link) 180 459.33 T
81 442.98 540 447.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 442.98 540 447.99 R
7 X
0 0 0 1 0 0 0 K
V
50 446.98 609.01 446.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 434.98 T
2 F
(@default) 99 434.98 T
3 10 Q
(<fname> = @default [<op> [~]<attr>]*; /* to use default value of) 99 421.32 T
(instance data field */) 345 410.32 T
(@default <) 99 397.32 T
4 F
(varRoot) 159 397.32 T
3 F
(> = <) 201 397.32 T
4 F
(super) 231 397.32 T
3 F
(>; /* to specify default superclass of) 261 397.32 T
(a variant class */) 291 386.32 T
(@default <fname> = <value>; /* to specify a default value for an instance) 99 373.32 T
(data field defined by a superclass. */) 189 362.32 T
(<fname> = @default;) 99 349.32 T
0 F
-0.38 (The @default keyword can be used in several ways: to specify the default calue) 180 331.32 P
(of an instance data \336eld, to represent the default value of an object\325) 180 319.82 T
(s instance) 490.41 319.82 T
-0.25 (data \336eld, or to specify the default superclass of a variant class. It may also be) 180 308.32 P
(used when de\336ning a class to specify a default value to use with an instance) 180 296.82 T
(data \336eld de\336ned by a superclass.) 180 285.32 T
-0.82 (The @default keyword is most commonly used when modifying default instance) 180 266.82 P
-0.03 (data values of bit\336eld-type \336elds. The defaults are set in the @class de\336nition) 180 255.32 P
-0.62 (and may be modi\336ed in the @object declaration. The arguments of @default are) 180 243.82 P
(shown below:) 180 232.32 T
5 F
(fname) 180 213.82 T
0 F
(The name of the instance data \336eld. T) 243 213.82 T
(ypically) 417.7 213.82 T
(, this is a record.) 452.52 213.82 T
5 F
(op) 180 195.82 T
0 F
(A bitwise operator character) 243 195.82 T
(. If setting certain bits, use the) 373.93 195.82 T
0 9 Q
(OR) 518.95 195.82 T
0 10 Q
(operator \050|\051; if removing certain bits, use the) 243 184.82 T
0 9 Q
(AND) 452.96 184.82 T
0 10 Q
( operator \050&\051.) 473.8 184.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 6
%%Page: "15" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(15) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
5 10 Q
0 X
(attr) 172 641.33 T
0 F
(The name of the attribute bit to set or remove. If removing) 235 641.33 T
(attribute bits, place the logical) 235 630.33 T
0 9 Q
(NOT) 379.11 630.33 T
0 10 Q
( character \050~\051 in front of the) 399.45 630.33 T
(attribute.) 235 619.33 T
3 9 Q
(@object GenPrimaryClass MyPrimary {) 208 605 T
(GI_states = @default & ~GENS_MAXIMIZED;) 229.6 595 T
(GI_attrs = @default | GENA_TARGETABLE;) 229.6 585 T
(}) 208 575 T
0 10 Q
(The @default keyword can also be used to specify the default superclass of a) 172 557.33 T
(variant class. In this case, it has the following arguments:) 172 545.83 T
5 F
(varRoot) 172 527.33 T
0 F
(The name of the variant class, with the word \322Class\323 removed.) 235 527.33 T
(\050e.g. the root of \322MyV) 235 516.33 T
(ariantClass\323 is \322MyV) 332.04 516.33 T
(ariant\323.\051) 428.17 516.33 T
5 F
(super) 172 498.33 T
0 F
(The default superclass for this variant class.) 235 498.33 T
(T) 172 480.33 T
(o specify a class\325 default value for an instance data \336eld when that instance) 177.75 480.33 T
(data \336eld is de\336ned by a superclass, @default has the following arguments:) 172 468.83 T
5 F
(fname) 172 450.33 T
0 F
(The name of the instance data \336eld.) 235 450.33 T
5 F
(value) 172 432.33 T
0 F
(The class\325 default value for the \336eld.) 235 432.33 T
(T) 172 414.33 T
(o represent an object\325) 177.75 414.33 T
(s default value for an instance data \336eld, @default has) 275.53 414.33 T
(the following arguments:) 172 402.83 T
5 F
(fname) 172 384.33 T
0 F
(The name of the instance data \336eld.) 235 384.33 T
2 F
(See Also:) 91 366.33 T
0 F
(@object, @instance, @class) 172 366.33 T
73 349.99 531 355 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 349.99 531 355 R
7 X
0 0 0 1 0 0 0 K
V
42 353.99 601.01 353.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 341.99 T
2 F
(@de\336ne) 91 341.99 T
3 10 Q
(@define <) 91 328.33 T
4 F
(mname) 145 328.33 T
3 F
(>[\050<) 175 328.33 T
4 F
(pdef) 199 328.33 T
3 F
(>\051] <) 223 328.33 T
4 F
(macro) 253 328.33 T
3 F
(>) 283 328.33 T
0 F
(The @de\336ne directive de\336nes a Goc macro. Y) 172 310.33 T
(ou can de\336ne) 377.16 310.33 T
0 9 Q
(C) 440.68 310.33 T
0 10 Q
( macros with the) 447.18 310.33 T
(#de\336ne directive; macros that use Goc operators, keywords, or code must be) 172 298.83 T
(de\336ned with @de\336ne. Similarly) 172 287.33 T
(, macros de\336ned with @de\336ne must be later) 315.13 287.33 T
(used with the \322@\323 marker preceeding them; otherwise, the Goc processor will) 172 275.83 T
(scan over the macro and will not evaluate it. The arguments of @de\336ne are) 172 264.33 T
(listed below:) 172 252.83 T
5 F
(mname) 172 234.33 T
0 F
(The macro name. This can be used later as @) 235 234.33 T
5 F
(mname) 442.78 234.33 T
0 F
( to invoke) 476.85 234.33 T
(the macro.) 235 223.33 T
5 F
(pdef) 172 205.33 T
0 F
(The optional parameter de\336nition, as with) 235 205.33 T
0 9 Q
(C) 433.74 205.33 T
0 10 Q
( macros.) 440.24 205.33 T
5 F
(macro) 172 187.33 T
0 F
(The macro.) 235 187.33 T
3 9 Q
(@define MyChunk\050a\051 @chunk char[] a = \322text\323;) 208 172.99 T
(@define MyText\050a,b\051 @chunk char[] a = \322b\323;) 208 162.99 T
(/* You can later use these macros as follows: */) 208 148.99 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 7
%%Page: "16" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(16) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
3 9 Q
0 X
(@MyChunk\050Text1\051) 216 642 T
(@MyText\050Text2, newText\051) 216 632 T
(/* This will evaluate to the following: */) 216 618 T
(@chunk char[] Text1 = \322text\323;) 216 604 T
(@chunk char[] Text2 = \322newText\323;) 216 594 T
81 579.99 540 585 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 579.99 540 585 R
7 X
0 0 0 1 0 0 0 K
V
50 583.99 609.01 583.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 571.99 T
2 F
(@de\337ib) 99 571.99 T
3 10 Q
(@deflib <) 99 557.33 T
4 F
(libName) 153 557.33 T
3 F
(>) 195 557.33 T
0 F
(Most Goc libraries will have a) 180 539.33 T
6 F
(.goh) 320.77 539.33 T
0 F
( header \336le. This \336le should begin with a) 342.62 539.33 T
-0.32 (@de\337ib directive. This will see to it that no library header \336le is included more) 180 527.83 P
-0.13 (than once in a given compilation. The \336le must end with an @endlib directive.) 180 516.33 P
(The @de\337ib directive takes the following argument:) 180 504.83 T
5 F
(libName) 180 486.33 T
0 F
(This is the name of the header \336le, with the) 243 486.33 T
6 F
(.goh) 447.85 486.33 T
0 F
( extension) 469.7 486.33 T
(stripped off. For example, if the library\325) 243 475.33 T
(s header \336le is) 424.87 475.33 T
6 F
(hellolib.goh) 243 464.33 T
0 F
(, the \336le would begin with) 304.29 464.33 T
3 9 Q
(@deflib) 216 449.99 T
(hellolib) 288 449.99 T
2 10 Q
(See Also:) 99 432.33 T
0 F
(@endlib) 180 432.33 T
81 415.98 540 420.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 415.98 540 420.99 R
7 X
0 0 0 1 0 0 0 K
V
50 419.98 609.01 419.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 407.98 T
2 F
(@dispatch) 99 407.98 T
3 10 Q
(@dispatch [noFree] [{<) 99 394.32 T
4 F
(cast) 231 394.32 T
3 F
(>}] <) 255 394.32 T
4 F
(nObj) 285 394.32 T
3 F
(>::<) 309 394.32 T
4 F
(nMsg) 333 394.32 T
3 F
(>::<) 357 394.32 T
4 F
(event) 381 394.32 T
3 F
(>;) 411 394.32 T
0 F
(The @dispatch keyword sends a previously-encapsulated message to the) 180 376.32 T
(speci\336ed object. This keyword is analogous to @send; use @dispatchcall if the) 180 364.82 T
-0.49 (event must be processed immediately) 180 353.32 P
-0.49 (. The encapsulated event must have been) 349.9 353.32 P
(de\336ned with @record. The arguments of @dispatch are given below:) 180 341.82 T
5 F
(noFree) 180 323.32 T
0 F
(A \337ag indicating the event will not be freed after it is handled.) 243 323.32 T
5 F
(cast) 180 305.32 T
0 F
(A message to cast the parameters to.) 243 305.32 T
5 F
(nObj) 180 287.32 T
0 F
(An override recipient object for the event. Encapsulated) 243 287.32 T
-0.67 (messages can store recipients; this will override the stored value.) 243 276.32 P
(If no override is desired, specify this as) 243 265.32 T
5 F
(null) 425.78 265.32 T
0 F
(.) 444.66 265.32 T
5 F
(nMsg) 180 247.32 T
0 F
(An override message to be sent. Encapsulated messages can) 243 247.32 T
-0.69 (store the message number to be sent; this will override the stored) 243 236.32 P
(value. If no override is desired, specify this as) 243 225.32 T
5 F
(null) 456.53 225.32 T
0 F
(.) 475.41 225.32 T
5 F
(event) 180 207.32 T
0 F
(The name of the encapsulated event, de\336ned earlier with) 243 207.32 T
(@record.) 243 196.32 T
3 9 Q
(@dispatch null::null::myEvent;) 216 181.98 T
(@dispatch newObject::null::myEvent;) 216 171.98 T
(@dispatch null::MSG_NEW_MSG::myEvent;) 216 161.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 8
%%Page: "17" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(17) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
2 10 Q
0 X
(See Also:) 91 641.33 T
0 F
(@record, @send, @dispatchcall) 172 641.33 T
73 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
42 628.99 601.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 616.99 T
2 F
(@dispatchcall) 91 616.99 T
3 10 Q
(<ret> = @dispatchcall [noFree] [{<) 91 603.33 T
4 F
(cast) 295 603.33 T
3 F
(>}] <) 319 603.33 T
4 F
(nObj) 349 603.33 T
3 F
(>::<) 373 603.33 T
4 F
(nMsg) 397 603.33 T
3 F
(>::<) 421 603.33 T
4 F
(event) 445 603.33 T
3 F
(>;) 475 603.33 T
0 F
(The @dispatchcall keyword sends a previously-encapsulated message to the) 172 585.33 T
-0.4 (speci\336ed object. This keyword is analogous to @call; use @dispatch if the event) 172 573.83 P
(can be sent with no return values. The encapsulated event must have been) 172 562.33 T
(de\336ned with @record. The arguments of @dispatchcall are given below:) 172 550.83 T
5 F
(ret) 172 532.33 T
0 F
(A variable to receive the returned value.) 235 532.33 T
5 F
(noFree) 172 514.33 T
0 F
(A \337ag indicating the event will not be freed after it is handled.) 235 514.33 T
5 F
(cast) 172 496.33 T
0 F
(A message to cast the parameters and return value to.) 235 496.33 T
5 F
(nObj) 172 478.33 T
0 F
(An override recipient object for the event. Encapsulated) 235 478.33 T
-0.77 (messages can store recipients; this will override the stored value.) 235 467.33 P
(If no override is desired, specify this as) 235 456.33 T
5 F
(null) 417.78 456.33 T
0 F
(.) 436.66 456.33 T
5 F
(nMsg) 172 438.33 T
0 F
(An override message to be sent. Encapsulated messages can) 235 438.33 T
-0.77 (store the message number to be sent; this will override the stored) 235 427.33 P
(value. If no override is desired, specify this as) 235 416.33 T
5 F
(null) 448.53 416.33 T
0 F
(.) 467.41 416.33 T
5 F
(event) 172 398.33 T
0 F
(The name of the encapsulated event, de\336ned earlier with) 235 398.33 T
(@record.) 235 387.33 T
3 9 Q
(retVal = @dispatchcall null::null::myEvent;) 208 372.99 T
(retVal = @dispatchcall newObject::null::myEvent;) 208 362.99 T
(\050void\051 @dispatchcall null::MSG_NEW_MSG::myEvent;) 208 352.99 T
2 10 Q
(See Also:) 91 335.33 T
0 F
(@record, @send, @dispatchcall) 172 335.33 T
73 318.98 531 323.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 318.98 531 323.99 R
7 X
0 0 0 1 0 0 0 K
V
42 322.98 601.01 322.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 310.98 T
2 F
(@elementArray) 91 310.98 T
3 10 Q
(@elementArray) 91 296.32 T
(<) 175 296.32 T
4 F
(stype) 181 296.32 T
3 F
(> <) 211 296.32 T
4 F
(aname) 229 296.32 T
3 F
(> [= {<) 259 296.32 T
4 F
(init) 301 296.32 T
3 F
(>}];) 325 296.32 T
0 F
-0.65 (The @chunk keyword declares a Element Array) 172 278.32 P
-0.65 (, a special kind of Chunk Array) 386.61 278.32 P
-0.65 (.) 526.09 278.32 P
(It has the following arguments:) 172 266.82 T
5 F
(stype) 172 248.32 T
0 F
-0.24 (This is the type of each element in the Element Array) 235 248.32 P
-0.24 (. It may be) 479.7 248.32 P
(any standard C or Goc type, or any derived type.) 235 237.32 T
5 F
(aname) 172 219.32 T
0 F
(This is the name of the Element Array) 235 219.32 T
(.) 411.87 219.32 T
5 F
(init) 172 201.32 T
0 F
-0.72 (Y) 235 201.32 P
-0.72 (ou may declare the initializer values for a chunk array) 240.93 201.32 P
-0.72 (. If you do) 485.37 201.32 P
-0.65 (not set any initial values, the Element Array will be created with) 235 190.32 P
(no elements.) 235 179.32 T
2 F
(See Also:) 91 161.32 T
0 F
(@chunk, @chunkArray) 172 161.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 9
%%Page: "18" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(18) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(@end) 99 634.99 T
3 10 Q
(@end) 99 621.33 T
(<) 153 621.33 T
4 F
(segname) 159 621.33 T
3 F
(>) 201 621.33 T
0 F
-0.52 (The @end keyword denotes the end of a resource block de\336nition that had been) 180 603.33 P
(started with @start. Its one argument is the name of the resource segment.) 180 591.83 T
3 9 Q
(@start MenuResource;) 216 576.99 T
(@end) 216 566.99 T
2 10 Q
(See Also:) 99 549.33 T
0 F
(@start, @header) 180 549.33 T
(, @object, @chunk) 253.82 549.33 T
81 532.98 540 537.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 532.98 540 537.99 R
7 X
0 0 0 1 0 0 0 K
V
50 536.98 609.01 536.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 524.98 T
2 F
(@endc) 99 524.98 T
3 10 Q
(@endc) 99 511.32 T
0 F
-0.14 (The @endc keyword denotes the end of a class de\336nition begun with @class. It) 180 493.32 P
(has no arguments.) 180 481.82 T
2 F
(See Also:) 99 463.32 T
0 F
(@class) 180 463.32 T
81 446.98 540 451.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 446.98 540 451.98 R
7 X
0 0 0 1 0 0 0 K
V
50 450.98 609.01 450.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 438.98 T
2 F
(@endif) 99 438.98 T
3 10 Q
(@endif) 99 425.31 T
0 F
-0.23 (The @endif directive denotes the end of a block of conditionally-compiled code.) 180 407.31 P
(It is used with @if, @ifdef, and @ifndef.) 180 395.81 T
2 F
(See Also:) 99 377.31 T
0 F
(@if, @ifdef, @ifndef) 180 377.31 T
81 360.97 540 365.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 360.97 540 365.98 R
7 X
0 0 0 1 0 0 0 K
V
50 364.97 609.01 364.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 352.97 T
2 F
(@endlib) 99 352.97 T
3 10 Q
(@endlib) 99 338.3 T
0 F
(Most Goc libraries will have a) 180 320.3 T
6 F
(.goh) 320.77 320.3 T
0 F
( header \336le. This \336le should end with an) 342.62 320.3 T
-0.53 (@endlib directive. This will see to it that no library header \336le is included more) 180 308.8 P
-0.33 (than once in a given compilation. The \336le must begin with an @de\337ib directive.) 180 297.3 P
2 F
(See Also:) 99 278.8 T
0 F
(@de\337ib) 180 278.8 T
81 262.46 540 267.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 262.46 540 267.47 R
7 X
0 0 0 1 0 0 0 K
V
50 266.46 609.01 266.46 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 254.46 T
2 F
(@exportMessages) 99 254.46 T
3 10 Q
(@exportMessages <) 99 240.79 T
4 F
(expname) 201 240.79 T
3 F
(>, <) 243 240.79 T
4 F
(num) 267 240.79 T
3 F
(>;) 285 240.79 T
0 F
(The @exportMessages keyword sets aside a number of message spots so the) 180 222.79 T
-0.06 (messages may be declared elsewhere. This allows users of the class to declare) 180 211.29 P
(messages that are guaranteed to be unique across all subclasses. Exported) 180 199.79 T
(messages are declared with the @importMessage keyword. The arguments of) 180 188.29 T
(@exportMessages are shown below:) 180 176.79 T
5 F
(expname) 180 158.29 T
0 F
(Name of the range being exported.) 243 158.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 10
%%Page: "19" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(19) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
5 10 Q
0 X
(num) 172 641.33 T
0 F
(Number of message spots to be exported.) 235 641.33 T
3 9 Q
(@exportMessages MetaUIMessages, 50;) 208 627 T
(@exportMessages MyExportedMessages, 12;) 208 617 T
2 10 Q
(See Also:) 91 599.33 T
0 F
(@importMessage, @reserveMessages, @message) 172 599.33 T
73 582.99 531 588 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 582.99 531 588 R
7 X
0 0 0 1 0 0 0 K
V
42 586.99 601.01 586.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 574.99 T
2 F
(@extern) 91 574.99 T
3 10 Q
(@extern) 91 561.33 T
(<) 145 561.33 T
4 F
(type) 151 561.33 T
3 F
(> <) 175 561.33 T
4 F
(name) 193 561.33 T
3 F
(>;) 217 561.33 T
(@extern) 91 548.33 T
(method <) 145 548.33 T
4 F
(cname) 193 548.33 T
3 F
(>, <) 223 548.33 T
4 F
(manme) 247 548.33 T
3 F
(>+) 277 548.33 T
0 F
(The @extern keyword allows code in a given compilation session to access) 172 530.33 T
(objects, chunks, monikers, and methods de\336ned in another compilation) 172 518.83 T
-0.31 (session. The compiler will assume the element exists and will be linked by the) 172 507.33 P
-0.33 (Glue linker) 172 495.83 P
-0.33 (. If Glue is unable to locate and link the external resource element,) 223.53 495.83 P
(it will respond with an error) 172 484.33 T
(. The arguments of @extern are given below:) 302.01 484.33 T
5 F
(type) 172 465.83 T
0 F
-0.37 (The type of resource element being referenced. This must be one) 235 465.83 P
(of) 235 454.83 T
5 F
(object) 246.11 454.83 T
0 F
(,) 272.22 454.83 T
5 F
(chunk) 277.78 454.83 T
0 F
(,) 306.11 454.83 T
5 F
(visMoniker) 311.67 454.83 T
0 F
(, or) 362.21 454.83 T
5 F
(method) 379.99 454.83 T
0 F
(.) 414.06 454.83 T
5 F
(name) 172 436.83 T
0 F
(The name of the element being referenced.) 235 436.83 T
3 9 Q
(@extern chunk MyChunk;) 208 422.49 T
(@extern object MyBlueTrigger;) 208 412.49 T
(@extern visMoniker GAL_visMoniker;) 208 402.49 T
0 10 Q
-0.63 (If @extern is being used to declare a method which is in a different \336le from the) 172 384.83 P
(class declaration, it has the following arguments:) 172 373.33 T
5 F
(cname) 172 354.83 T
0 F
(The name of the class for which the method is de\336ned.) 235 354.83 T
5 F
(mname+) 172 336.83 T
0 F
(The name of the message which invokes the method. As with) 235 336.83 T
-0.44 (normal method declarations, there must be at least one message) 235 325.83 P
(which invokes the method.) 235 314.83 T
(Some confusion has arisen about when to use) 172 284.83 T
6 F
(@extern) 384.25 284.83 T
0 F
(. The following notes) 425.61 284.83 T
(will hopefully prove useful.) 172 271.83 T
7 12 Q
(Classes) 172 245.49 T
0 10 Q
(Y) 172 223.83 T
(our class\325 de\336nition should not be broken up over \336les. If you wish to keep) 177.93 223.83 T
-0.17 (your class de\336nition in a \336le separate from your other code, this \336le should be) 172 210.83 P
(a) 172 197.83 T
6 F
(.goh) 180.34 197.83 T
0 F
( \336le.) 202.19 197.83 T
(If your class is) 172 177.83 T
5 F
(declared) 241.63 177.83 T
0 F
( \050@classdecl\051 in a \336le other than where it is) 280.68 177.83 T
5 F
(de\336ned) 481.59 177.83 T
0 F
(\050@class\051, then the declaring \336le should) 172 164.83 T
6 F
(@include) 351.97 164.83 T
0 F
( the de\336ning \336le.) 398.33 164.83 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 11
%%Page: "20" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(20) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
0 10 Q
0 X
-0.29 (Normally the declaring \336le contains all method de\336nitions for the class. If any) 180 641.33 P
(method de\336nitions are in another \336le, then both \336les will need an) 180 628.33 T
6 F
(@extern) 485.6 628.33 T
0 F
(keyword like so:) 180 615.33 T
(In \336le containing class declaration:) 180 595.33 T
3 F
( @extern method MyClass, MSG_MY_DO_SOMETHING;) 216 579.33 T
0 F
(In \336le containing method code:) 180 558.33 T
3 F
(@extern method MyClass,) 216 542.33 T
(MSG_MY_DO_SOMETHING\050word myArg\051) 324 528.33 T
({ /* Method code here */ }) 216 514.33 T
7 12 Q
(Object T) 180 487 T
(r) 224.77 487 T
(ees) 229.88 487 T
0 10 Q
-0.22 (All objects declared in a static tree \050e.g. your application\325) 180 465.33 P
-0.22 (s generic tree\051 should) 439.2 465.33 P
-0.37 (be in the same source \336le. If they are in different \336les, then they may be joined) 180 452.33 P
(into a single tree only by dynamically adding objects from one \336le as children) 180 439.33 T
(to objects of the other) 180 426.33 T
(.) 278.52 426.33 T
(Note that if one \336le contains a tree of objects, then you may incorporate the) 180 406.33 T
(whole tree by simply dynamically adding the top object in the \336le to the main) 180 393.33 T
(tree. Y) 180 380.33 T
(ou won\325) 209.82 380.33 T
(t have to add each object individually) 244.46 380.33 T
(.) 415.6 380.33 T
(If an object declared in one source \336le will send a message to an object in) 180 360.33 T
(another source \336le, you must include an) 180 347.33 T
6 F
(@extern) 367.6 347.33 T
0 F
( line in the source \336le) 408.96 347.33 T
(containing the sending object:) 180 334.33 T
3 F
(@extern object ReceivingObjectName;) 216 318.33 T
0 F
(The message itself should be sent in the following manner \050with variations) 180 297.33 T
(possible if you will be using) 180 284.33 T
6 F
(@call) 309.66 284.33 T
0 F
(, passing arguments, or what have you\051:) 335.84 284.33 T
3 F
(optr ROOptr;) 216 268.33 T
(ROOptr = GeodeGetOptrNS\050@ReceivingObjectName\051;) 216 254.33 T
(@send ROOptr::MSG_DO_SOMETHING\0500, 0\051;) 216 240.33 T
2 F
(See Also:) 99 219.33 T
0 F
(@chunk, @object, @visMoniker) 180 219.33 T
81 202.99 540 208 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 202.99 540 208 R
7 X
0 0 0 1 0 0 0 K
V
50 206.99 609.01 206.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 194.99 T
2 F
(gcnList) 99 194.99 T
3 10 Q
(gcnList\050<) 99 181.33 T
4 F
(manufID) 153 181.33 T
3 F
(>,<) 195 181.33 T
4 F
(lname) 213 181.33 T
3 F
(>\051 = <) 243 181.33 T
4 F
(oname) 279 181.33 T
3 F
(> [, <) 309 181.33 T
4 F
(oname) 345 181.33 T
3 F
(>]*;) 375 181.33 T
0 F
(The gcnList keyword, which does not have the keyword marker @ preceeding) 180 163.33 T
(it, puts the listed objects onto the speci\336ed noti\336cation list.) 180 151.83 T
0 9 Q
(GCN) 454.85 151.83 T
0 10 Q
( lists are) 475.68 151.83 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 12
%%Page: "21" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(21) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 10 Q
0 X
-0.26 (speci\336ed by both manufacturer) 172 641.33 P
0 9 Q
-0.23 (ID) 317.26 641.33 P
0 10 Q
-0.26 ( and list type. The arguments of the gcnList) 327.93 641.33 P
(keyword are given below:) 172 629.83 T
5 F
(manufID) 172 611.33 T
0 F
-0.72 (The manufacturer) 235 611.33 P
0 9 Q
-0.65 (ID) 320.77 611.33 P
0 10 Q
-0.72 ( number of the) 331.44 611.33 P
0 9 Q
-0.65 (GCN) 399.11 611.33 P
0 10 Q
-0.72 ( list type. Often this will) 419.94 611.33 P
(be) 235 600.33 T
0 9 Q
(MANUF) 248.34 600.33 T
(ACTURER_ID_GEOWORKS) 283.34 600.33 T
0 10 Q
(.) 404.34 600.33 T
5 F
(lname) 172 582.33 T
0 F
(The list type, or list name, of the) 235 582.33 T
0 9 Q
(GCN) 388.55 582.33 T
0 10 Q
( list.) 409.39 582.33 T
5 F
(oname) 172 564.33 T
0 F
(A listing of all the objects that will be included on the GCN list.) 235 564.33 T
(Separate objects with commas.) 235 553.33 T
3 9 Q
(@object GenApplicationClass HelloApp = {) 208 539 T
(GI_comp = HelloPrimary;) 229.6 529 T
(gcnList\050MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS\051 =) 229.6 519 T
(HelloPrimary;) 424 509 T
(}) 208 499 T
2 10 Q
(See Also:) 91 481.33 T
0 F
(@object) 172 481.33 T
73 464.99 531 470 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 464.99 531 470 R
7 X
0 0 0 1 0 0 0 K
V
42 468.99 601.01 468.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 456.99 T
2 F
(@genChildren) 91 456.99 T
3 10 Q
(@send @genChildren::) 91 442.33 T
4 F
(<msg>) 211 442.33 T
3 F
(\050) 241 442.33 T
4 F
(<params>) 247 442.33 T
3 F
(\051;) 295 442.33 T
0 F
(Any composite object in a generic object tree \050therefore a subclass of) 172 424.33 T
6 F
(GenClass) 172 412.83 T
0 F
(\051 can send a message that will be dispatched at once to all of its) 220.33 412.83 T
(children. Note that any message sent with @genChildren as the destination) 172 401.33 T
-0.54 (must be dispatched with the) 172 389.83 P
6 F
-0.56 (@send) 303.21 389.83 P
0 F
-0.54 ( keyword and therefore can have no return) 334.94 389.83 P
(value and can not pass pointers in its parameters.) 172 378.33 T
73 363.48 531 368.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 363.48 531 368.49 R
7 X
0 0 0 1 0 0 0 K
V
42 367.48 601.01 367.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 355.48 T
2 F
(@genParent) 91 355.48 T
3 10 Q
([@send | @call]@genParent::) 91 340.82 T
4 F
(<msg>) 253 340.82 T
3 F
(\050) 283 340.82 T
4 F
(<params>) 289 340.82 T
3 F
(\051;) 337 340.82 T
0 F
(Any composite object in a generic object tree \050therefore a subclass of) 172 322.82 T
6 F
(GenClass) 172 311.32 T
0 F
(\051 can use the @genParent address to send a message to its generic) 220.33 311.32 T
(parent. This can be used with either @send or @call.) 172 299.82 T
73 284.98 531 289.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 284.98 531 289.98 R
7 X
0 0 0 1 0 0 0 K
V
42 288.98 601.01 288.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 276.97 T
2 F
(@gstring) 91 276.97 T
3 10 Q
(@gstring <) 91 262.31 T
4 F
(gsname) 151 262.31 T
3 F
(> = {[<command> [, <command>]+]}) 187 262.31 T
0 F
(The @gstring keyword lets you declare a GString in Goc source code.) 172 244.31 T
5 F
(gsname) 172 225.81 T
0 F
(The name of the chunk which will contain the GString.) 235 225.81 T
5 F
(command) 172 207.81 T
0 F
(This may be any command which could be put in a GString.) 235 207.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 13
%%Page: "22" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(22) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(@header) 99 634.99 T
3 10 Q
(@header) 99 621.33 T
(<) 153 621.33 T
4 F
(type) 159 621.33 T
3 F
(> [= <) 183 621.33 T
4 F
(init) 219 621.33 T
3 F
(>];) 243 621.33 T
0 F
-0.29 (The @header keyword sets the header of an object or data resource segment to) 180 603.33 P
(a custom structure. The structure must begin with an LMemBlockHeader or) 180 591.83 T
(ObjLMemBlockHeader) 180 580.33 T
(. The arguments of @header are given below:) 285.37 580.33 T
5 F
(type) 180 561.83 T
0 F
(The name of the structure set as the new header type.) 243 561.83 T
5 F
(init) 180 543.83 T
0 F
(Any initializer data for the \336elds added to your structure.) 243 543.83 T
3 9 Q
(typedef struct {) 216 529.49 T
(LMemBlockHeader) 237.6 519.49 T
(meta;) 329.4 519.49 T
(int) 237.6 509.49 T
(a;) 280.8 509.49 T
(int) 237.6 499.49 T
(b;) 280.8 499.49 T
(} MyLMemBlockHeader;) 216 489.49 T
(@start MyDataResource, data, notDetachable;) 216 475.49 T
(@header MyLMemBlockHeader = 10, 12;) 216 461.49 T
(@end;) 216 447.49 T
2 10 Q
(See Also:) 99 429.83 T
0 F
(@start, @end, @object, @chunk) 180 429.83 T
81 413.48 540 418.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.48 540 418.49 R
7 X
0 0 0 1 0 0 0 K
V
50 417.48 609.01 417.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.48 T
2 F
(@if) 99 405.48 T
3 10 Q
(@if \050<) 99 391.82 T
4 F
(cond) 135 391.82 T
3 F
(>\051) 159 391.82 T
0 F
(The @if directive denotes the beginning of a conditionally-compiled block of) 180 373.82 T
-0.15 (code. If the expression detailed in) 180 362.32 P
5 F
-0.15 (cond) 336.72 362.32 P
0 F
-0.15 ( equates to) 358.38 362.32 P
5 F
-0.15 (true) 410.92 362.32 P
0 F
-0.15 (, then the code between) 429.42 362.32 P
(the @if directive and the \336rst corresponding @endif directive will be compiled) 180 350.82 T
(with the rest of the code.) 180 339.32 T
5 F
(cond) 180 320.82 T
0 F
-0.78 (The expression determining whether the code is to be compiled or) 243 320.82 P
(not. This expression is based on numerical values, names of) 243 309.82 T
(macros, and Boolean operators \050|| and &&\051.) 243 298.82 T
3 9 Q
(@if 0) 216 284.48 T
(/* code not compiled */) 252 274.48 T
(@endif) 216 264.48 T
(@if MyMacro) 216 250.48 T
(/* code compiled if MyMacro is defined */) 252 240.48 T
(@endif) 216 230.48 T
(@if defined\050MyMacro\051 || MY_CONDITION) 216 216.48 T
(/* code compiled either if MyMacro is defined or) 252 206.48 T
( * if MY_CONDITION is non-zero */) 252 196.48 T
(@endif) 216 186.48 T
2 10 Q
(See Also:) 99 168.82 T
0 F
(@ifdef, @ifndef, @endif) 180 168.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 14
%%Page: "23" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(23) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
73 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
42 646.99 601.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 634.99 T
2 F
(@ifdef) 91 634.99 T
3 10 Q
(@ifdef <) 91 621.33 T
4 F
(item) 139 621.33 T
3 F
(>) 163 621.33 T
0 F
(The @ifdef directive is similar to the @if directive in use, except the condition) 172 603.33 T
(it evaluates is based solely on whether the) 172 591.83 T
5 F
(item) 370.56 591.83 T
0 F
( is de\336ned or not \050if) 390.74 591.83 T
5 F
(item) 483.15 591.83 T
0 F
( is) 503.33 591.83 T
(de\336ned, the following code is compiled\051.) 172 580.33 T
2 F
(See Also:) 91 561.83 T
0 F
(@if, @ifndef, @endif) 172 561.83 T
73 545.48 531 550.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 545.48 531 550.49 R
7 X
0 0 0 1 0 0 0 K
V
42 549.48 601.01 549.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 537.48 T
2 F
(@ifndef) 91 537.48 T
3 10 Q
(@ifndef <) 91 523.82 T
4 F
(item) 145 523.82 T
3 F
(>) 169 523.82 T
0 F
(The @ifndef directive is similar to the @ifdef directive in use, except the) 172 505.82 T
-0.07 (condition it evaluates is based solely on whether) 172 494.32 P
5 F
-0.07 (item) 397.6 494.32 P
0 F
-0.07 ( is not de\336ned \050if) 417.77 494.32 P
5 F
-0.07 (item) 497.62 494.32 P
0 F
-0.07 ( is) 517.8 494.32 P
(not de\336ned, the following code is compiled\051.) 172 482.82 T
2 F
(See Also:) 91 464.32 T
0 F
(@if, @ifdef, @endif) 172 464.32 T
73 447.98 531 452.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 447.98 531 452.98 R
7 X
0 0 0 1 0 0 0 K
V
42 451.98 601.01 451.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 439.98 T
2 F
(@importMessage) 91 439.98 T
3 10 Q
(@importMessage <) 91 426.31 T
4 F
(expname) 187 426.31 T
3 F
(>, <) 229 426.31 T
4 F
(messageDef) 253 426.31 T
3 F
(>;) 313 426.31 T
0 F
(The @importMessage keyword declares a message with a reserved message) 172 408.31 T
-0.36 (number set aside earlier by @exportMessages. The arguments of this keyword) 172 396.81 P
(are given below:) 172 385.31 T
5 F
(expname) 172 366.81 T
0 F
(Name of the range exported with @exportMessages.) 235 366.81 T
5 F
(messageDef) 172 348.81 T
0 F
-0.02 (Standard message de\336nition\321exactly the same as would follow) 235 348.81 P
(the @message keyword for message declaration.) 235 337.81 T
3 9 Q
(@importMessage MyExportedMessages, word MSG_MY_MSG\050) 208 323.48 T
(byte param1, byte param2\051;) 388 313.48 T
2 10 Q
(See Also:) 91 295.81 T
0 F
(@exportMessages, @reserveMessages, @message) 172 295.81 T
73 279.47 531 284.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 279.47 531 284.48 R
7 X
0 0 0 1 0 0 0 K
V
42 283.47 601.01 283.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 271.47 T
2 F
(@include) 91 271.47 T
3 10 Q
(@include <) 91 257.8 T
4 F
(fname) 151 257.8 T
3 F
(>) 181 257.8 T
0 F
-0.13 (The @include directive is used to include Goc \336les into a code \336le. It is similar) 172 239.8 P
-0.64 (to the #include directive in) 172 228.3 P
0 9 Q
-0.57 (C) 295.3 228.3 P
0 10 Q
-0.64 (. Its only argument is a \336le name \050) 301.8 228.3 P
5 F
-0.64 (fname) 455.8 228.3 P
0 F
-0.64 (\051 enclosed) 484.31 228.3 P
-0.11 (in either angled brackets or quotation marks. If you use quotation marks, the) 172 216.8 P
-0.32 (compiler will look \336rst in the \336le\325) 172 205.3 P
-0.32 (s own directory; if you use angled brackets, it) 322.16 205.3 P
(will look \336rst in the standard include directories.) 172 193.8 T
3 9 Q
(@include <stdapp.goh>) 208 178.97 T
(@include <uitsctrl.goh>) 208 168.97 T
(@include \322Art/mkrGenDoc\323) 208 158.97 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 15
%%Page: "24" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(24) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(@instance) 99 634.99 T
3 10 Q
(@instance <) 99 621.33 T
4 F
(insType) 165 621.33 T
3 F
(> <) 207 621.33 T
4 F
(iname) 225 621.33 T
3 F
(> = <) 255 621.33 T
4 F
(default) 285 621.33 T
3 F
(>;) 327 621.33 T
0 F
(The @instance keyword declares an instance data \336eld for a class. This) 180 603.33 T
(keyword will appear between the class delimeters @class and @endc. Its) 180 591.83 T
(arguments are shown below:) 180 580.33 T
5 F
(insT) 180 561.83 T
(ype) 199.84 561.83 T
0 F
(The data type of the instance data \336eld. Must be a valid) 243 561.83 T
0 9 Q
(C) 503.8 561.83 T
0 10 Q
( data) 510.3 561.83 T
-0.8 (type or data structure. \050Note\321special types may also be used; see) 243 550.83 P
(discussion below) 243 539.83 T
(.\051) 318.94 539.83 T
5 F
(iname) 180 521.83 T
0 F
(The name of the instance data \336eld.) 243 521.83 T
5 F
(default) 180 503.83 T
0 F
-0.22 (The default value of the \336eld if it is not declared explicitly in the) 243 503.83 P
(instance of the class.) 243 492.83 T
(The Goc preprocessor allows the use of several special types of instance data) 180 474.83 T
(\336elds. T) 180 463.33 T
(o use these special types, insert the proper keyword \050type name\051 in) 215.94 463.33 T
-0.26 (place of the) 180 451.83 P
5 F
-0.26 (insT) 234.77 451.83 P
-0.26 (ype) 254.61 451.83 P
0 F
-0.26 ( argument above and do not include a default value for the) 269.79 451.83 P
(\336eld \050) 180 440.33 T
5 F
(default) 206.11 440.33 T
0 F
(\051. The possible special types and their meanings are given in the) 238.69 440.33 T
(list below \050see the individual keyword entries for more detail\051:) 180 428.83 T
6 F
(@composite) 180 410.33 T
0 F
-0.19 (This \336eld will point to the \336rst child in an object hierarchy) 243 399.33 P
-0.19 (. Note) 510 399.33 P
(that this keyword has a special format. Rather than being) 243 388.33 T
(allowed a default value, set the) 243 377.33 T
5 F
(default) 389.89 377.33 T
0 F
( argument in the) 422.47 377.33 T
(declaration to be the same as the name of the corresponding) 243 366.33 T
(@link \336eld. This is important; otherwise, your program will not) 243 355.33 T
(compile properly) 243 344.33 T
(.) 318.92 344.33 T
6 F
(@link) 180 326.33 T
0 F
(This \336eld will point to the next sibling object in an object) 243 326.33 T
(hierarchy or will point to the parent.) 243 315.33 T
6 F
(@visMoniker) 180 297.33 T
0 F
(This \336eld will contain a visual moniker or a pointer to a visual) 243 286.33 T
(moniker resource chunk.) 243 275.33 T
6 F
(@kbdAccelerator) 180 257.33 T
0 F
(This \336eld will contain a keyboard accelerator character) 243 246.33 T
(.) 496.73 246.33 T
-0.75 (Note that if you want to declare instance data \336elds for variable-sized data, you) 180 228.33 P
(should use the @vardata keyword rather than @instance.) 180 216.83 T
3 9 Q
(@instance int) 216 201.99 T
(myInteger = 10;) 360 201.99 T
(typedef struc {) 216 187.99 T
(int) 237.6 177.99 T
(a;) 280.8 177.99 T
(int) 237.6 167.99 T
(b;) 280.8 167.99 T
(}) 216 157.99 T
(MyStruc;) 226.8 157.99 T
(@instance MyStruc) 216 147.99 T
(strucField = {7, 11};) 360 147.99 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 16
%%Page: "25" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(25) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
3 9 Q
0 X
(@instance @visMoniker) 208 642 T
(GI_moniker;) 352 642 T
(@instance @link) 208 628 T
(VI_link;) 352 628 T
(@instance @composite) 208 618 T
(VCI_comp = VI_link;) 352 618 T
(@instance @kbdAccelerator GI_kbdAcc;) 208 604 T
2 10 Q
(See Also:) 91 586.33 T
0 F
(@vardata, @visMoniker) 172 586.33 T
(, @link, @composite, @kbdAccelerator) 279.9 586.33 T
73 569.99 531 575 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 569.99 531 575 R
7 X
0 0 0 1 0 0 0 K
V
42 573.99 601.01 573.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 561.99 T
2 F
(@kbdAccelerator) 91 561.99 T
3 10 Q
(@instance @kbdAccelerator <) 91 548.33 T
4 F
(iname) 253 548.33 T
3 F
(>;) 283 548.33 T
0 F
(The @kbdAccelerator keyword follows @instance to create an instance data) 172 530.33 T
-0.71 (\336eld that will contain a keyboard accelerator) 172 518.83 P
-0.71 (. The) 373.71 518.83 P
5 F
-0.71 (iname) 398.42 518.83 P
0 F
-0.71 ( argument is the name) 426.93 518.83 P
(of the instance data \336eld.) 172 507.33 T
3 9 Q
(@instance @kbdAccelerator GI_kbdAcc;) 208 492.49 T
2 10 Q
(See Also:) 91 474.83 T
0 F
(@instance) 172 474.83 T
73 458.48 531 463.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 458.48 531 463.49 R
7 X
0 0 0 1 0 0 0 K
V
42 462.48 601.01 462.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 450.48 T
2 F
(@link) 91 450.48 T
3 10 Q
(@instance @link <) 91 436.82 T
4 F
(iname) 193 436.82 T
3 F
(>;) 223 436.82 T
0 F
(The @link keyword follows @instance to de\336ne a link instance data \336eld) 172 418.82 T
(pointing to the object\325) 172 407.32 T
(s next sibling in the object hierarchy) 271.27 407.32 T
(. The) 438.69 407.32 T
5 F
(iname) 464.81 407.32 T
0 F
-0.54 (argument is the name of the instance data \336eld. Note that the name of the link) 172 395.82 P
(\336eld must be set as the default value of the corresponding @composite \336eld.) 172 384.32 T
3 9 Q
(@instance @link GI_link;) 208 369.48 T
(@instance @composite GI_comp = GI_link;) 208 359.48 T
2 10 Q
(See Also:) 91 341.82 T
0 F
(@instance, @composite) 172 341.82 T
73 325.48 531 330.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 325.48 531 330.48 R
7 X
0 0 0 1 0 0 0 K
V
42 329.48 601.01 329.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 317.48 T
2 F
(@message) 91 317.48 T
3 10 Q
(@message) 91 303.81 T
(<) 145 303.81 T
4 F
(retType) 151 303.81 T
3 F
(> <) 193 303.81 T
4 F
(mname) 211 303.81 T
3 F
(>\050[@stack] <) 241 303.81 T
4 F
(param) 313 303.81 T
3 F
(>*\051;) 343 303.81 T
0 F
(The @message keyword de\336nes a message and its parameters and return) 172 285.81 T
-0.53 (values. This keyword will appear within a class de\336nition \050i.e., between @class) 172 274.31 P
(and @endc\051. The message de\336ned with @message will automatically be valid) 172 262.81 T
(for the class for which it is de\336ned as well as for subclasses of that class. The) 172 251.31 T
(arguments of this keyword are shown below:) 172 239.81 T
5 F
(retT) 172 221.31 T
(ype) 190.36 221.31 T
0 F
(The data type of the value returned by this message. This must) 235 221.31 T
(be a standard) 235 210.31 T
0 9 Q
(C) 301.13 210.31 T
0 10 Q
( or) 307.63 210.31 T
0 9 Q
(GEOS) 322.63 210.31 T
0 10 Q
( data type or pointer) 348.8 210.31 T
(.) 442.7 210.31 T
5 F
(mname) 172 192.31 T
0 F
-0.86 (The name of the message. T) 235 192.31 P
-0.86 (ypically) 359.28 192.31 P
-0.86 (, this will be the pre\336x \322) 394.1 192.31 P
0 9 Q
-0.77 (MSG_) 499.52 192.31 P
0 10 Q
-0.86 (\323) 525.19 192.31 P
-0.03 (followed by a shortened version of the class name, followed by a) 235 181.31 P
(short name for the message.) 235 170.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 17
%%Page: "26" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(26) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
0 10 Q
0 X
(@stack) 180 641.33 T
(This keyword may be used if the message might be sent from) 243 641.33 T
(assembly language code instead of Goc. It indicates that the) 243 630.33 T
-0.62 (arguments will be passed on the stack; the handler will pop them) 243 619.33 P
-0.1 (off the stack in reverse order from the way they are listed in the) 243 608.33 P
(declaration.) 243 597.33 T
5 F
(param*) 180 579.33 T
0 F
-0.17 (The parameters for this message, of which there may be none or) 243 579.33 P
-0.32 (several. All the parameters must appear inside the parentheses.) 243 568.33 P
-0.31 (Parameters are de\336ned in a similar manner as for functions and) 243 557.33 P
-0.5 (routines; each one consists of a data type followed by the name of) 243 546.33 P
(the parameter of that type.) 243 535.33 T
3 9 Q
(@message void MSG_TRIGGER_PUSHED\050int push1\051;) 216 521 T
(@message word MSG_MY_MSG\050byte firstParam, word secParam,) 216 507 T
(long thirdParam\051;) 396 497 T
2 10 Q
(See Also:) 99 479.33 T
0 F
(@method, @reserveMessages, @exportMessages, @importMessage, @record) 180 479.33 T
81 462.99 540 468 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 462.99 540 468 R
7 X
0 0 0 1 0 0 0 K
V
50 466.99 609.01 466.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 454.99 T
2 F
(@method) 99 454.99 T
3 10 Q
(@method) 99 441.33 T
([<) 153 441.33 T
4 F
(hname) 165 441.33 T
3 F
(>,] <) 195 441.33 T
4 F
(cname) 225 441.33 T
3 F
(>, <) 255 441.33 T
4 F
(mname) 279 441.33 T
3 F
(>+ [{<code>}];) 309 441.33 T
0 F
(The @method keyword begins de\336nition of a method \050message handler\051. Its) 180 423.33 T
(arguments are listed below:) 180 411.83 T
5 F
(hname) 180 393.33 T
0 F
-0.43 (The method name, if any) 243 393.33 P
-0.43 (. If no method name is given, one will be) 355.56 393.33 P
(created by removing \322Class\323 from the class name and \322) 243 382.33 T
0 9 Q
(MSG_) 495.25 382.33 T
0 10 Q
(\323) 520.92 382.33 T
(from the message name and concatenating the two.) 243 371.33 T
5 F
(cname) 180 353.33 T
0 F
-0.59 (The name of the class to which the method belongs. Each method) 243 353.33 P
(belongs to only one class.) 243 342.33 T
5 F
(mname) 180 324.33 T
0 F
(+) 214.07 324.33 T
(The name\050s\051 of the message\050s\051 handled by this method. There) 243 324.33 T
(must be at least one message which invokes this method. There) 243 313.33 T
(may be more than one, as long as they all have the same) 243 302.33 T
(parameters.) 243 291.33 T
5 F
(code) 180 273.33 T
0 F
(Goc procedural code to handle the message. If there is no code,) 243 273.33 T
5 F
(hname) 243 262.33 T
0 F
( is assumed to be the name of an existing routine which) 274.29 262.33 T
(should be used as the method.) 243 251.33 T
3 9 Q
(@method) 216 236.99 T
(MyClass, MSG_MY_MSG {) 270 236.99 T
(/* method code goes here */) 237.6 226.99 T
(}) 216 216.99 T
(@method) 216 202.99 T
(MyClassMethod, MyClass, MSG_MY_MSG {) 270 202.99 T
(/* method code goes here */) 237.6 192.99 T
(}) 216 182.99 T
2 10 Q
(See Also:) 99 165.33 T
0 F
(@message) 180 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 18
%%Page: "27" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(27) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
73 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
42 646.99 601.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 634.99 T
2 F
(@noreloc) 91 634.99 T
3 10 Q
(@noreloc) 91 620.33 T
4 F
(<iname>) 145 620.33 T
3 F
(;) 187 620.33 T
0 F
(The @noreloc keyword speci\336es that an instance data \336eld \050de\336ned in the) 172 602.33 T
(previous program statement\051 is not relocatable. Normally optr \336elds are) 172 590.83 T
(assumed to be relocatable and will be automatically relocated by the system) 172 579.33 T
(when shutting down and coming back from a shutdown; by means of the) 172 567.83 T
(@noreloc, this automatic behavior can be turned off for a given \336eld.) 172 556.33 T
73 541.48 531 546.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 541.48 531 546.49 R
7 X
0 0 0 1 0 0 0 K
V
42 545.48 601.01 545.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 533.48 T
2 F
(@object) 91 533.48 T
3 10 Q
(@object) 91 519.82 T
(<class> <name> <flags>* = {) 145 519.82 T
([<fieldName> = <init>;]*) 115 506.82 T
([<varName> [= <init>];]*) 115 493.82 T
(}) 91 480.82 T
0 F
(The @object keyword de\336nes an object in an object resource block. It must) 172 462.82 T
(appear between @start and @end. Its arguments are de\336ned below:) 172 451.32 T
5 F
(class) 172 432.82 T
0 F
(The name of the class of the object.) 235 432.82 T
5 F
(name) 172 414.82 T
0 F
(The name of the object.) 235 414.82 T
5 F
(\337ags) 172 396.82 T
0 F
(Flags associated with the object; currently only) 235 396.82 T
5 F
(ignoreDirty) 455.58 396.82 T
0 F
( is) 508.34 396.82 T
(supported. When set, this \337ag indicates that changes to the) 235 385.82 T
(object should not be saved to a state \336le. Note, however) 235 374.82 T
(, that) 489.49 374.82 T
5 F
(ignoreDirty) 235 363.82 T
0 F
( should) 287.76 363.82 T
5 F
(never) 324.06 363.82 T
0 F
( be set for generic objects.) 348.68 363.82 T
5 F
(\336eldName) 172 345.82 T
0 F
(The name of an instance data \336eld de\336ned with @instance. Any) 235 345.82 T
(number of such \336elds may be speci\336ed.) 235 334.82 T
5 F
(varName) 172 316.82 T
0 F
(The name of an instance data \336eld de\336ned with @vardata. Any) 235 316.82 T
(number of such \336elds may be speci\336ed.) 235 305.82 T
5 F
(init) 172 287.82 T
0 F
(Initializer data for a normal instance data \336eld or for the extra) 235 287.82 T
-0.15 (data of a variable data \336eld. If a variable data \336eld has no extra) 235 276.82 P
(data, no initializer should be speci\336ed.) 235 265.82 T
(Many \336elds may be speci\336ed in the object declaration. Each \336eld reference) 172 247.82 T
(must be de\336ned in a class in the object\325) 172 236.32 T
(s class ancestry) 352.03 236.32 T
(. Additionally) 422.96 236.32 T
(, not all) 484.64 236.32 T
-0.17 (\336elds must be set. If a \336eld is not speci\336ed within the @object declaration, the) 172 224.82 P
(\336eld will be set to its default value as de\336ned by the class.) 172 213.32 T
3 9 Q
(@start MyObjectResource;) 208 198.48 T
(@object GenTriggerClass MyTrigger ignoreDirty = {) 208 184.48 T
(GI_visMoniker = \322MyTrigger\325s Moniker\323;) 229.6 174.48 T
(}) 208 164.48 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 19
%%Page: "28" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(28) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
3 9 Q
0 X
(@object GenApplicationClass MyApp = {) 216 642 T
(GI_comp = MyPrimary;) 237.6 632 T
(gcnList\050MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS\051 =) 237.6 622 T
(MyPrimary;) 468 612 T
(}) 216 602 T
(@object GenPrimaryClass MyPrimary = {) 216 588 T
(GI_comp = MyMenu, MyInteraction, MyView;) 237.6 578 T
(GI_visMoniker = \322My Primary\325s Moniker\323;) 237.6 568 T
(}) 216 554 T
(@object MyClass NewObject = {) 216 540 T
(NO_instance1 = 1;) 237.6 530 T
(NO_instance6 = \324C\325;) 237.6 520 T
(}) 216 510 T
(@end) 216 496 T
2 10 Q
(See Also:) 99 478.33 T
0 F
(@start, @end, @extern, @class, @instance, @vardata) 180 478.33 T
81 461.99 540 467 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.99 540 467 R
7 X
0 0 0 1 0 0 0 K
V
50 465.99 609.01 465.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.99 T
2 F
(@optimize) 99 453.99 T
3 10 Q
(@optimize) 99 439.33 T
0 F
(This directive may be placed at the top of a) 180 421.33 T
6 F
(.goh) 381.52 421.33 T
0 F
( \336le. The directive instructs) 403.37 421.33 T
(Goc to generate a specially processed) 180 409.83 T
6 F
(.poh) 353.53 409.83 T
0 F
( \336le which contains all the) 375.94 409.83 T
-0.51 (information of the) 180 398.33 P
6 F
-0.53 (.goh) 264.77 398.33 P
0 F
-0.51 ( \336le, but is somewhat faster to compile. This) 286.62 398.33 P
6 F
-0.53 (.poh) 488.74 398.33 P
0 F
-0.51 ( \336le is) 511.15 398.33 P
(automatically regenerated if the corresponding) 180 386.83 T
6 F
(.goh) 399.82 386.83 T
0 F
( \336le has been changed) 421.67 386.83 T
(since the last compilation.) 180 375.33 T
81 360.48 540 365.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 360.48 540 365.49 R
7 X
0 0 0 1 0 0 0 K
V
50 364.48 609.01 364.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 352.48 T
2 F
(@protominor) 99 352.48 T
3 10 Q
(@protominor <prototypeName>) 99 337.82 T
0 F
(When creating a new version of an existing library) 180 319.82 T
(, use the) 412.61 319.82 T
6 F
(@protominor) 454.47 319.82 T
0 F
-0.22 (keyword to declare new messages and variable data \336elds for a class. Suppose) 180 308.82 P
(your original class declaration looked like so:) 180 297.82 T
3 9 Q
(@class MyClass, SuperClass;) 216 283.48 T
(@message void MSG_M_DO_THIS\050void\051;) 252 273.48 T
(@vardata void TEMP_M_DONE_FLAG;) 252 263.48 T
(@endc) 216 253.48 T
0 10 Q
(Having released this version of your class, you wished to release another) 180 235.82 T
(version in which this class handled another message. Y) 180 224.82 T
(ou wanted to specify) 434.29 224.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 20
%%Page: "29" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(29) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 10 Q
0 X
(that this new message would only work with this new version of the library) 172 641.33 T
(.) 519.09 641.33 T
(This would be set up like so:) 172 630.33 T
3 9 Q
(@class MyClass, SuperClass;) 208 616 T
(@message void MSG_M_DO_THIS\050void\051;) 244 606 T
(@vardata void TEMP_M_DONE_FLAG;) 244 596 T
(@protominor MyVersion20) 244 576 T
(@message void MSG_M_DO_THAT\050void\051;) 244 566 T
(@endc) 208 556 T
0 10 Q
(T) 172 538.33 T
(o do the equivalent version control with routines, use the) 177.75 538.33 T
6 F
(incminor) 443.7 538.33 T
0 F
( .gp \336le) 491.29 538.33 T
(directive.) 172 526.83 T
73 511.99 531 517 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 511.99 531 517 R
7 X
0 0 0 1 0 0 0 K
V
42 515.99 601.01 515.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 503.99 T
2 F
(@prototype) 91 503.99 T
3 10 Q
(@prototype <) 91 490.33 T
4 F
(messageDef) 163 490.33 T
3 F
(>;) 223 490.33 T
0 F
-0.24 (The @prototype keyword allows multiple messages to have the same pass and) 172 472.33 P
-0.25 (return parameters. Use @prototype to de\336ne the pass and return values, then) 172 460.83 P
(use @message to declare the messages that have these parameters. The) 172 449.33 T
(messages de\336ned with @message will have different message numbers and) 172 437.83 T
(will invoke different methods. The) 172 426.33 T
5 F
(messageDef) 333.5 426.33 T
0 F
( argument is a standard) 386.81 426.33 T
(message de\336nition.) 172 414.83 T
3 9 Q
(@prototype word MSG_MY_PROTO\050byte param1\051;) 208 399.99 T
(@message\050MSG_MY_PROTO\051 MSG_MY_MSG;) 208 385.99 T
(@message\050MSG_MY_PROTO\051 MSG_MY_SECOND_MSG;) 208 375.99 T
2 10 Q
(See Also:) 91 358.33 T
0 F
(@alias, @message) 172 358.33 T
73 341.98 531 346.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 341.98 531 346.99 R
7 X
0 0 0 1 0 0 0 K
V
42 345.98 601.01 345.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 333.98 T
2 F
(@record) 91 333.98 T
3 10 Q
(<) 91 320.32 T
4 F
(event) 97 320.32 T
3 F
(> = @record <) 127 320.32 T
4 F
(obj) 205 320.32 T
3 F
(>::<) 223 320.32 T
4 F
(msg) 247 320.32 T
3 F
(>\050<) 265 320.32 T
4 F
(param) 283 320.32 T
3 F
(>*\051;) 313 320.32 T
0 F
(The @record keyword encapsulates an event for later use with @dispatch or) 172 302.32 T
(@dispatchcall. The arguments of @record are as follows:) 172 290.82 T
5 F
(event) 172 272.32 T
0 F
(The name of the event. This name will be used with @dispatch) 235 272.32 T
(and @dispatchcall later) 235 261.32 T
(.) 342.2 261.32 T
5 F
(obj) 172 243.32 T
0 F
-0.16 (The name of the object, or an expression representing the object) 235 243.32 P
-0.33 (that will receive the message. This may be set to) 235 232.32 P
5 F
-0.33 (null) 458.83 232.32 P
0 F
-0.33 ( to indicate) 477.71 232.32 P
(that the recipient will be determined when the message is sent.) 235 221.32 T
5 F
(msg) 172 203.32 T
0 F
(The name of the message, or an expression representing the) 235 203.32 T
-0.66 (message that will be sent. This may be set to) 235 192.32 P
5 F
-0.66 (null) 438.27 192.32 P
0 F
-0.66 ( to indicate that) 457.14 192.32 P
(the message will be determined when it it sent.) 235 181.32 T
5 F
(param) 172 163.32 T
0 F
(This is a list of parameters that will be sent with the message) 235 163.32 T
(when it is dispatched.) 235 152.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 21
%%Page: "30" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(30) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
3 9 Q
0 X
(myEvent = @record myObj::MSG_VIS_VUP_CREATE_GSTATE\050\051;) 216 642 T
2 10 Q
(See Also:) 99 624.33 T
0 F
(@dispatch, @dispatchcall, @call, @send) 180 624.33 T
81 607.99 540 613 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 607.99 540 613 R
7 X
0 0 0 1 0 0 0 K
V
50 611.99 609.01 611.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 599.99 T
2 F
(@reloc) 99 599.99 T
3 10 Q
(@reloc) 99 586.33 T
(<) 153 586.33 T
4 F
(iname) 159 586.33 T
3 F
(>, [\050<) 189 586.33 T
4 F
(count) 225 586.33 T
3 F
(>, <) 255 586.33 T
4 F
(struct) 279 586.33 T
3 F
(>\051] <) 315 586.33 T
4 F
(ptrType) 345 586.33 T
3 F
(>;) 387 586.33 T
(@reloc) 99 573.33 T
(<iname>, <fn>, [\050<) 153 573.33 T
4 F
(count) 261 573.33 T
3 F
(>, <) 291 573.33 T
4 F
(struct) 315 573.33 T
3 F
(>\051] <) 351 573.33 T
4 F
(ptrType) 381 573.33 T
3 F
(>;) 423 573.33 T
0 F
(The @reloc keyword designates an instance data \336eld that contains data) 180 555.33 T
-0.2 (requiring relocation on startup. Note that this does not include instance \336elds) 180 543.83 P
-0.01 (declared with the @composite and @link \336elds, but it does include any handle) 180 532.33 P
-0.75 (or pointer \336elds you may have. Note that there are two different formats for the) 180 520.83 P
(use of @reloc. The \336rst represents a normal instance \336eld; the second) 180 509.33 T
-0.07 (represents a variable data instance \336eld \050see @vardata\051. This is) 180 497.83 P
5 F
-0.07 (not) 474.84 497.83 P
0 F
-0.07 ( used with) 489.47 497.83 P
(@instance or @vardata but stands alone.) 180 486.33 T
(The arguments of @reloc are shown below:) 180 467.83 T
5 F
(iname) 180 449.33 T
0 F
(The name of the relocatable instance data \336eld.) 243 449.33 T
5 F
(count) 180 431.33 T
0 F
(If the instance variable is an array of relocatable data or) 243 431.33 T
(structures containing relocatable \336elds, this is the number of) 243 420.33 T
(elements in the array) 243 409.33 T
(.) 341.53 409.33 T
5 F
(struct) 180 391.33 T
0 F
(If the relocatable data is an array of structures, this represents) 243 391.33 T
(the name of the \336eld within each structure that requires) 243 380.33 T
(relocation.) 243 369.33 T
5 F
(ptrT) 180 351.33 T
(ype) 199.66 351.33 T
0 F
(This is the type of pointer in the relocatable \336eld. This must be) 243 351.33 T
(one of) 243 340.33 T
5 F
(optr) 273 340.33 T
0 F
( \050object pointer\051,) 291.7 340.33 T
5 F
(ptr) 369.66 340.33 T
0 F
( \050far pointer\051, or) 383.36 340.33 T
5 F
(handle) 460.02 340.33 T
0 F
(.) 491.86 340.33 T
5 F
(fn) 180 322.33 T
0 F
-0.39 (This is the name of the \336eld within the extra data of the variable) 243 322.33 P
(data. If no extra data will be associated with this relocatable) 243 311.33 T
(\336eld, then put a zero \0500\051 rather than a \336eld name.) 243 300.33 T
3 9 Q
(@reloc MO_myHandle, handle;) 216 285.99 T
(@reloc MO_myVarHandle, 0, handle;) 216 275.99 T
(@reloc MO_myTable, \05010, MyStruct\051, ptr;) 216 265.99 T
2 10 Q
(See Also:) 99 248.33 T
0 F
(@instance, @vardata) 180 248.33 T
81 231.98 540 236.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 231.98 540 236.99 R
7 X
0 0 0 1 0 0 0 K
V
50 235.98 609.01 235.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 223.98 T
2 F
(_reloc) 99 223.98 T
3 10 Q
(@method [<hname>,] <cname>, _reloc { <code>};) 99 209.32 T
0 F
-0.31 (The _reloc keyword is used to write relocation handlers for classes, if you need) 180 191.32 P
(to relocate-unrelocate instance data when it\325) 180 179.82 T
(s either read in or saved to state.) 384.65 179.82 T
(The arguments of _reloc are show below:) 180 161.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 22
%%Page: "31" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(31) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
5 10 Q
0 X
(code) 172 641.33 T
0 F
-0.53 (Code to execute when the object block is loaded in or saved out to) 235 641.33 P
(state.) 235 630.33 T
(, in which case instance data may need to be relocated or) 260.75 630.33 T
(unrelocated by hand.) 235 619.33 T
73 604.99 531 610 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 604.99 531 610 R
7 X
0 0 0 1 0 0 0 K
V
42 608.99 601.01 608.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 596.99 T
2 F
(@reserveMessages) 91 596.99 T
3 10 Q
(@reserveMessages <) 91 583.33 T
4 F
(number) 199 583.33 T
3 F
(>;) 235 583.33 T
0 F
-0 (The @reserveMessages keyword reserves the given number of message spots.) 172 565.33 P
(Messages are numbered sequentially according to the order of their) 172 553.83 T
(declaration; this keyword allows one or more numbers to be skipped in the) 172 542.33 T
(numbering process, allowing application upgrades without making earlier) 172 530.83 T
-0.38 (versions obsolete. The single argument is the number of message spots to skip.) 172 519.33 P
3 9 Q
(@reserveMessages 25;) 208 504.49 T
2 10 Q
(See Also:) 91 486.83 T
0 F
(@exportMessages, @importMessage, @message) 172 486.83 T
73 470.48 531 475.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 470.48 531 475.49 R
7 X
0 0 0 1 0 0 0 K
V
42 474.48 601.01 474.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 462.48 T
2 F
(@send) 91 462.48 T
3 10 Q
(@send) 91 448.82 T
([<) 145 448.82 T
4 F
(flags) 157 448.82 T
3 F
(>+] [\050<) 187 448.82 T
4 F
(cast_ret) 229 448.82 T
3 F
(>\051] <) 277 448.82 T
4 F
(obj) 307 448.82 T
3 F
(>::[{<) 325 448.82 T
4 F
(cast_par) 361 448.82 T
3 F
(>}]<) 409 448.82 T
4 F
(msg) 433 448.82 T
3 F
(>\050<) 451 448.82 T
4 F
(param) 469 448.82 T
3 F
(>*\051;) 499 448.82 T
0 F
-0.69 (The @send keyword sends a given message to the speci\336ed object. The message) 172 430.82 P
-0.82 (will be sent and the sender) 172 419.32 P
-0.82 (\325) 293.1 419.32 P
-0.82 (s thread will continue executing without waiting for) 294.77 419.32 P
(a response. If return values or synchronization is important, use the @call) 172 407.82 T
(keyword. The parameters of @send are shown below:) 172 396.32 T
5 F
(\337ags) 172 377.82 T
0 F
(Flags that determine how the message affects the recipient\325) 235 377.82 T
(s) 510.03 377.82 T
(event queue. The allowable \337ags are shown below) 235 366.82 T
(. \050The comma) 463.95 366.82 T
(is required before each \337ag.\051) 235 355.82 T
5 F
(cast_ret) 172 337.82 T
0 F
(A message to cast the message return value to. When Goc) 235 337.82 T
(determines what type of value should be returned, it uses the) 235 326.82 T
-0.83 (return value of the) 235 315.82 P
5 F
-0.83 (cast_ret) 321.29 315.82 P
0 F
-0.83 ( message if this \336eld is used. The curly) 356.83 315.82 P
(braces are required around this \336eld.) 235 304.82 T
5 F
(obj) 172 286.82 T
0 F
(The name of the recipient object, or an optr to the object.) 235 286.82 T
5 F
(cast_par) 172 268.82 T
0 F
(A message to cast the message parameters to. When Goc) 235 268.82 T
-0.57 (determines what type of values should be passed to the message,) 235 257.82 P
(should be returned, it uses the parameters of the) 235 246.82 T
5 F
(cast_par) 463.72 246.82 T
0 F
(message if this \336eld is used. The curly braces are required) 235 235.82 T
(around this \336eld.) 235 224.82 T
5 F
(msg) 172 206.82 T
0 F
(The name of the message to be sent, or an expression) 235 206.82 T
(representing the message number) 235 195.82 T
(. If an expression is used, you) 391.67 195.82 T
-0.23 (must cast the message to a certain type with the) 235 184.82 P
5 F
-0.23 (cast) 459.61 184.82 P
0 F
-0.23 ( argument .) 477.75 184.82 P
5 F
(param) 172 166.82 T
0 F
(Expressions or constants passed to the message. Parameters) 235 166.82 T
-0.4 (passed to messages are speci\336ed in the same way as if they were) 235 155.82 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 23
%%Page: "32" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(32) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
0 10 Q
0 X
(being passed directly to a function or routine in) 243 641.33 T
0 9 Q
(C) 464.68 641.33 T
0 10 Q
(. Note that) 471.18 641.33 T
(pointers may) 243 630.33 T
5 F
(not) 306.34 630.33 T
0 F
( be passed with @send but handles may; if you) 320.97 630.33 T
(must pass a pointer) 243 619.33 T
(, use @call.) 333.57 619.33 T
(The \337ags allowed with @send are shown below:) 180 601.33 T
6 F
(forceQueue) 180 582.83 T
0 F
(This \337ag will cause the message to be placed in the recipient\325) 243 571.83 T
(s) 524.16 571.83 T
(event queue, even if it could have been handled by a direct call.) 243 560.83 T
6 F
(checkDuplicate) 180 542.83 T
0 F
-0.11 (This \337ag makes the kernel check if a message of the same name) 243 531.83 P
(is already in the recipient\325) 243 520.83 T
(s event queue. For this \337ag to work,) 363.57 520.83 T
5 F
-0.86 (forceQueue) 243 509.83 P
0 F
-0.86 ( must also be passed. Note that due to implementation) 293.53 509.83 P
-0.06 (constraints, events will be checked from last to \336rst rather than) 243 498.83 P
(from \336rst to last.) 243 487.83 T
6 F
(checkLastOnly) 180 469.83 T
0 F
-0.14 (This \337ag works like) 243 458.83 P
5 F
-0.14 (checkDuplicate) 336.19 458.83 P
0 F
-0.14 (, above, except that it checks) 405.61 458.83 P
(only the last message in the event queue.) 243 447.83 T
6 F
(replace) 180 429.83 T
0 F
(This \337ag modi\336es) 243 429.83 T
5 F
(checkDuplicate) 327.46 429.83 T
0 F
( and) 396.88 429.83 T
5 F
(checkLastOnly) 419.85 429.83 T
0 F
( by) 487.43 429.83 T
-0.32 (superseding the duplicate \050old\051 event with the new one. The new) 243 418.83 P
-0.43 (event will be put in the duplicate\325) 243 407.83 P
-0.43 (s position in the event queue. If) 394.69 407.83 P
(a duplicate is found but the) 243 396.83 T
5 F
(replace) 372.65 396.83 T
0 F
( \337ag is not passed, the) 405.22 396.83 T
-0.81 (duplicate will be dropped and the new event will be put at the end) 243 385.83 P
(of the queue.) 243 374.83 T
6 F
(insertAtFront) 180 356.83 T
0 F
-0.42 (This puts the message at the front of the recipient\325) 243 345.83 P
-0.42 (s event queue.) 472.37 345.83 P
(Note that this \337ag will supersede the) 243 334.83 T
5 F
(replace) 417.29 334.83 T
0 F
( \337ag.) 449.86 334.83 T
6 F
(canDiscardIfDesperate) 180 316.83 T
0 F
-0.58 (This \337ag indicates that this event may be discarded if the system) 243 305.83 P
(is running extremely low on handles and requires more space) 243 294.83 T
(immediately) 243 283.83 T
(.) 299.68 283.83 T
3 9 Q
(@send, forceQueue MyObj::MSG_MY_MSG\05010, x\051;) 216 269.5 T
(@send MyObj::MSG_SET_ATTR\050attributesParam\051;) 216 259.5 T
2 10 Q
(See Also:) 99 241.83 T
0 F
(@call, @callsuper) 180 241.83 T
(, @message, @method) 258.08 241.83 T
81 225.49 540 230.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 225.49 540 230.5 R
7 X
0 0 0 1 0 0 0 K
V
50 229.49 609.01 229.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 217.49 T
2 F
(@speci\336cUI) 99 217.49 T
3 10 Q
(<fname>) 99 203.83 T
(= [@specificUI] <mod>* <key>;) 153 203.83 T
0 F
-0.34 (The @speci\336c) 180 185.83 P
0 9 Q
-0.31 (UI) 241.1 185.83 P
0 10 Q
-0.34 ( keyword is used when setting a keyboard accelerator instance) 252.1 185.83 P
(\336eld in an object declaration. It tells the) 180 174.33 T
0 9 Q
(UI) 367.62 174.33 T
0 10 Q
( to allow the use of the keystrokes) 378.62 174.33 T
(speci\336ed, even if they are normally reserved for the speci\336c) 180 162.83 T
0 9 Q
(UI) 456.29 162.83 T
0 10 Q
(. The keyword) 467.29 162.83 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 24
%%Page: "33" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(33) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
0 10 Q
0 X
(itself takes no arguments; those shown are for the) 172 641.33 T
6 F
(GenClass) 406.1 641.33 T
0 F
( instance data) 454.43 641.33 T
(\336eld) 172 629.83 T
5 9 Q
(GI) 194.78 629.83 T
5 10 Q
(_kbdAccelerator) 205.45 629.83 T
0 F
(. These are) 278.2 629.83 T
5 F
(fname) 172 611.33 T
0 F
(The name of the instance data \336eld de\336ned with @instance.) 235 611.33 T
5 F
(mod) 172 593.33 T
0 F
(Modi\336er keys; must be one or more of) 235 593.33 T
5 F
(control) 411.12 593.33 T
0 F
(,) 442.96 593.33 T
5 F
(ctrl) 448.52 593.33 T
0 F
(,) 464.25 593.33 T
5 F
(shift) 469.81 593.33 T
0 F
(,) 490.54 593.33 T
5 F
(alt) 496.1 593.33 T
0 F
(.) 508.69 593.33 T
5 F
(key) 172 575.33 T
0 F
(The accelerator character) 235 575.33 T
(. Must be either a numeric value of a) 352.4 575.33 T
(keyboard key or a letter enclosed in single quotation marks.) 235 564.33 T
3 9 Q
(@object MyClass MyObject {) 208 550 T
(GI_kbdAccelerator = ctrl shift \324k\325;) 229.6 540 T
(}) 208 530 T
2 10 Q
(See Also:) 91 512.33 T
6 F
(GenClass) 172 512.33 T
0 F
(, @kbdAccelerator) 220.33 512.33 T
(, @instance) 302.33 512.33 T
73 495.99 531 501 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 495.99 531 501 R
7 X
0 0 0 1 0 0 0 K
V
42 499.99 601.01 499.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 487.99 T
2 F
(@stack) 91 487.99 T
3 10 Q
(@message) 91 473.33 T
(<) 145 473.33 T
4 F
(retType) 151 473.33 T
3 F
(> <) 193 473.33 T
4 F
(mname) 211 473.33 T
3 F
(>\050[@stack] <) 241 473.33 T
4 F
(param) 313 473.33 T
3 F
(>*\051;) 343 473.33 T
0 F
(This keyword may be used if the message might be sent from assembly) 172 455.33 T
-0.64 (language code instead of Goc. It indicates that the arguments will be passed on) 172 443.83 P
-0.67 (the stack; the handler will pop them off the stack in reverse order from the way) 172 432.33 P
(they are listed in the declaration.) 172 420.83 T
2 F
(See Also:) 91 402.33 T
0 F
(@message) 172 402.33 T
73 385.98 531 390.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 385.98 531 390.99 R
7 X
0 0 0 1 0 0 0 K
V
42 389.98 601.01 389.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 377.98 T
2 F
(@start) 91 377.98 T
3 10 Q
(@start) 91 364.32 T
(<segname> [, <flags>];) 145 364.32 T
0 F
-0.51 (The @start keyword indicates the beginning of a resource block. The end of the) 172 346.32 P
(block is denoted by the keyword @end. The arguments of @start are listed) 172 334.82 T
(below:) 172 323.32 T
5 F
(segname) 172 304.82 T
0 F
(The name of the resource segment.) 235 304.82 T
5 F
(\337ags) 172 286.82 T
0 F
(Optional \337ags. The \337ag) 235 286.82 T
5 F
(data) 345.77 286.82 T
0 F
(, when set, indicates the block will) 366.88 286.82 T
(be a data resource rather than an object resource. The \337ag) 235 275.82 T
5 F
-0.5 (notDetachable) 235 264.82 P
0 F
-0.5 (, when set, indicates the block should not be saved) 300.73 264.82 P
(to a state \336le.) 235 253.82 T
3 9 Q
(@start MenuResource;) 208 239.48 T
(@end) 208 229.48 T
(@start MyDataResource, data, notDetachable;) 208 215.48 T
(@end) 208 205.48 T
2 10 Q
(See Also:) 91 187.82 T
0 F
(@end, @header) 172 187.82 T
(, @object, @chunk) 240.26 187.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 25
%%Page: "34" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(34) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
81 642.99 540 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 540 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(@uses) 99 634.99 T
3 10 Q
(@uses <) 99 620.33 T
4 F
(class) 141 620.33 T
3 F
(>;) 171 620.33 T
0 F
-0.66 (If you know that a variant class will always be resolved to be a subclass of some) 180 602.33 P
-0.34 (particular class, you can declare this with the @uses keyword. This will let the) 180 590.83 P
(variant class de\336ne handlers for the \322used\323 superclass. The keyword uses the) 180 579.33 T
(following argument:) 180 567.83 T
5 F
(class) 180 549.33 T
0 F
(A class which will always be a superclass of the de\336ned variant) 243 549.33 T
(class.) 243 538.33 T
2 F
(W) 99 520.33 T
(arnings:) 108.07 520.33 T
0 F
(Y) 180 520.33 T
(ou must make sure that the variant class\325) 185.93 520.33 T
(s inheritance is always resolved) 378.19 520.33 T
(such that the used class is one of its ancestor classes.) 180 507.33 T
2 F
(See Also:) 99 487.33 T
0 F
(@class) 180 487.33 T
81 470.98 540 475.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 470.98 540 475.99 R
7 X
0 0 0 1 0 0 0 K
V
50 474.98 609.01 474.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 462.98 T
2 F
(@vardata) 99 462.98 T
3 10 Q
(@vardata) 99 449.32 T
(<) 153 449.32 T
4 F
(type) 159 449.32 T
3 F
(> <) 183 449.32 T
4 F
(vname) 201 449.32 T
3 F
(>;) 231 449.32 T
0 F
(The @vardata keyword creates a vardata data type for a class. Each type) 180 431.32 T
(created with @vardata can be simply the name of the type, or it can have) 180 419.82 T
(additional data \050a single structure\051. The arguments of @vardata are given) 180 408.32 T
(@defaultbelow:) 180 396.82 T
5 F
(type) 180 378.32 T
0 F
-0.72 (This is the data type or structure type of the data \336eld. If no extra) 243 378.32 P
-0.19 (data is to be associated with this \336eld, then put the word) 243 367.32 P
5 F
-0.19 (void) 505.93 367.32 P
0 F
-0.19 ( in) 525.56 367.32 P
(place of a type.) 243 356.32 T
5 F
(vname) 180 338.32 T
0 F
(This is the name of the variable data instance \336eld.) 243 338.32 T
3 9 Q
(@vardata) 216 323.98 T
(dword) 288 323.98 T
(MY_FIRST_VAR_DATA;) 360 323.98 T
(typedef struc {) 216 309.98 T
(int) 237.6 299.98 T
(a;) 280.8 299.98 T
(int) 237.6 289.98 T
(b;) 280.8 289.98 T
(} MyStruc;) 216 279.98 T
(@vardata) 216 265.98 T
(MyStruc) 288 265.98 T
(MY_SECOND_VAR_DATA;) 360 265.98 T
(@vardata) 216 255.98 T
(void) 288 255.98 T
(MY_THIRD_VAR_DATA;) 360 255.98 T
2 10 Q
(See Also:) 99 238.32 T
0 F
(@vardataAlias, @instance) 180 238.32 T
81 221.98 540 226.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 221.98 540 226.98 R
7 X
0 0 0 1 0 0 0 K
V
50 225.98 609.01 225.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 213.97 T
2 F
(@vardataAlias) 99 213.97 T
3 10 Q
(@vardataAlias \050<) 99 200.31 T
4 F
(origName) 195 200.31 T
3 F
(>\051 <) 243 200.31 T
4 F
(newType) 267 200.31 T
3 F
(> <) 309 200.31 T
4 F
(newName) 327 200.31 T
3 F
(>;) 369 200.31 T
0 F
(The @vardataAlias keyword allows you to set up variable data \336elds with) 180 182.31 T
(varying amounts of extra data. That is, a single variable data \336eld in the) 180 170.81 T
(instance chunk could have two different sizes and two different names. The) 180 159.31 T
(arguments of @vardataAlias are listed below:) 180 147.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 26
%%Page: "35" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(35) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
315 104 510 126 R
7 X
V
2 24 Q
0 X
(Routines) 407.33 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 144 531 648 R
V
5 10 Q
0 X
(origName) 172 641.33 T
0 F
(The name of the original variable data \336eld de\336ned with) 235 641.33 T
(@vardata.) 235 630.33 T
5 F
(newT) 172 612.33 T
(ype) 196.29 612.33 T
0 F
(The new type or structure associated with this variable data) 235 612.33 T
-0.32 (\336eld. If no extra data is to be associated with this alias, then put) 235 601.33 P
(the word) 235 590.33 T
5 F
(void) 278.52 590.33 T
0 F
( instead of a type.) 298.15 590.33 T
5 F
(newName) 172 572.33 T
0 F
(The new name of the variable data \336eld that uses the new type.) 235 572.33 T
3 9 Q
(/* defined in GenTriggerClass */) 208 558 T
(@vardata word ATTR_GEN_TRIGGER_ACTION_DATA;) 208 544 T
(/* A special GenTrigger that uses a different data) 208 530 T
( * type is defined in the application: */) 208 520 T
(@object GenTriggerClass MyTrigger = {) 208 506 T
(GTI_actionMsg = MSG_MY_APPS_MESSAGE;) 229.6 496 T
(GTI_destination = process;) 229.6 486 T
(@vardataAlias \050ATTR_GEN_TRIGGER_ACTION_DATA\051) 229.6 476 T
(dword ATTR_MY_TRIGGER_SPECIAL_DATA;) 316 466 T
2 10 Q
(See Also:) 91 448.33 T
0 F
(@vardata, @instance) 172 448.33 T
73 431.99 531 437 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 431.99 531 437 R
7 X
0 0 0 1 0 0 0 K
V
42 435.99 601.01 435.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 423.99 T
2 F
(@visChildren) 91 423.99 T
3 10 Q
(@send @visChildren::) 91 409.33 T
4 F
(<msg>) 211 409.33 T
3 F
(\050) 241 409.33 T
4 F
(<params>) 247 409.33 T
3 F
(\051;) 295 409.33 T
0 F
(Any composite object in a visible object tree \050therefore a subclass of) 172 391.33 T
6 F
-0.67 (V) 172 379.83 P
-0.67 (isCompClass) 179.15 379.83 P
0 F
-0.65 (\051 can send a message that will be dispatched at once to all of its) 245.45 379.83 P
(children. Note that any message sent with @visChildren as the destination) 172 368.33 T
-0.54 (must be dispatched with the) 172 356.83 P
6 F
-0.56 (@send) 303.21 356.83 P
0 F
-0.54 ( keyword and therefore can have no return) 334.94 356.83 P
(value.) 172 345.33 T
73 330.48 531 335.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 330.48 531 335.49 R
7 X
0 0 0 1 0 0 0 K
V
42 334.48 601.01 334.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 322.48 T
2 F
(@visParent) 91 322.48 T
3 10 Q
(@send @visParent::) 91 307.82 T
4 F
(<msg>) 199 307.82 T
3 F
(\050) 229 307.82 T
4 F
(<params>) 235 307.82 T
3 F
(\051;) 283 307.82 T
0 F
-0.32 (Any object in a visible tree can use) 172 289.82 P
6 F
-0.34 (@visParent) 332.2 289.82 P
0 F
-0.32 ( as the destination of an) 390.22 289.82 P
6 F
-0.34 (@call) 502.36 289.82 P
0 F
-0.04 (command. The message will be sent to the object\325) 172 278.32 P
-0.04 (s parent in the visible object) 398.05 278.32 P
(tree. The remainder of the command is the same as a normal) 172 266.82 T
6 F
(@call) 456.3 266.82 T
0 F
(.) 482.48 266.82 T
73 251.98 531 256.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
73 251.98 531 256.98 R
7 X
0 0 0 1 0 0 0 K
V
42 255.98 601.01 255.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 73 243.97 T
2 F
(@visMoniker) 91 243.97 T
3 10 Q
(@instance @visMoniker <) 91 230.31 T
4 F
(iname) 229 230.31 T
3 F
(>;) 259 230.31 T
0 F
(The @visMoniker keyword follows @instance to create an instance data \336eld) 172 212.31 T
(for a visual moniker) 172 200.81 T
(. The) 264.42 200.81 T
5 F
(iname) 290.54 200.81 T
0 F
( argument is the name of the instance data) 319.05 200.81 T
(\336eld.) 172 189.31 T
3 9 Q
(@instance @visMoniker GI_visMoniker;) 208 174.47 T
2 10 Q
(See Also:) 91 156.81 T
0 F
(@instance,) 172 156.81 T
6 F
(GenClass) 223.82 156.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 27
%%Page: "36" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Goc Keywords) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(36) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 299 126 R
7 X
V
2 24 Q
0 X
(Routines) 104 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 540 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 28
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 28
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ Helvetica-Bold
%%+ Courier
%%+ Courier-Oblique
%%+ NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Bold
%%+ Times-Bold
%%EOF
