%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 8 FMDOCUMENT
0 1 /ZapfDingbats FMFONTDEFINE
1 0 /Helvetica FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /NewCenturySchlbk-Roman FMFONTDEFINE
4 0 /NewCenturySchlbk-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "5" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
423 594 567 702 R
7 X
0 0 0 1 0 0 0 K
V
0 144 Q
0 X
(!) 424.87 606 T
0 0 0 0 1 1 1 K
0 0 0 1 0 0 0 K
81 594 423 703 R
7 X
V
1 48 Q
0 X
(Contents) 81 671 T
177 97 357 115 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
495 87.98 557.1 132.98 R
V
0 60 Q
0 X
(!) 496.83 92.98 T
81 144 459 567 R
7 X
V
2 14 Q
0 X
(1) 81 557.67 T
(Welcome) 126 557.67 T
3 10 Q
(..................................................................................) 191.68 557.67 T
(1) 421.43 557.67 T
(1) 426.44 557.67 T
2 14 Q
(2) 81 531.67 T
(System Configuration) 126 531.67 T
3 10 Q
(...................................................) 277.86 531.67 T
(13) 420.88 531.67 T
2 12 Q
(2.1) 81 514 T
(Development Directories and Files) 135 514 T
3 10 Q
(..............) 333.46 514 T
( TCon\336g) 373.28 514 T
(:) 415.32 514 T
(15) 420.88 514 T
2 12 Q
(2.2) 81 497 T
(Target Directories and Files) 135 497 T
3 10 Q
(............................) 294.54 497 T
( TCon\336g) 373.28 497 T
(:) 415.32 497 T
(19) 420.88 497 T
2 12 Q
(2.3) 81 480 T
(Environment Variables) 135 480 T
3 10 Q
(......................................) 266.74 480 T
( TCon\336g) 373.28 480 T
(:) 415.32 480 T
(21) 420.88 480 T
2 12 Q
(2.4) 81 463 T
(System Files) 135 463 T
3 10 Q
(..........................................................) 211.14 463 T
( TCon\336g) 373.28 463 T
(:) 415.32 463 T
(22) 420.88 463 T
2 12 Q
(2.5) 81 446 T
(Sample C Applications) 135 446 T
3 10 Q
(......................................) 266.74 446 T
( TCon\336g) 373.28 446 T
(:) 415.32 446 T
(23) 420.88 446 T
2 12 Q
(2.6) 81 429 T
(Sample Esp Programs) 135 429 T
3 10 Q
(.......................................) 263.96 429 T
( TCon\336g) 373.28 429 T
(:) 415.32 429 T
(29) 420.88 429 T
2 14 Q
(3) 81 403.67 T
(Swat Introduction) 126 403.67 T
3 10 Q
(.............................................................) 250.06 403.67 T
(31) 420.88 403.67 T
2 12 Q
(3.1) 81 386 T
(DOS Command Line Options) 135 386 T
3 10 Q
(......................) 300.1 386 T
( TSwatCm) 363.45 386 T
(:) 415.32 386 T
(35) 420.88 386 T
2 12 Q
(3.2) 81 369 T
(Notation) 135 369 T
3 10 Q
(...............................................................) 186.12 369 T
( TSwatCm) 363.45 369 T
(:) 415.32 369 T
(36) 420.88 369 T
2 12 Q
(3.3) 81 352 T
(Address Expressions) 135 352 T
3 10 Q
(.....................................) 258.4 352 T
( TSwatCm) 363.45 352 T
(:) 415.32 352 T
(37) 420.88 352 T
2 12 Q
(3.4) 81 335 T
(On-line Help) 135 335 T
3 10 Q
(.......................................................) 208.36 335 T
( TSwatCm) 363.45 335 T
(:) 415.32 335 T
(39) 420.88 335 T
2 12 Q
(3.5) 81 318 T
(Essential Commands) 135 318 T
3 10 Q
(.....................................) 258.4 318 T
( TSwatCm) 363.45 318 T
(:) 415.32 318 T
(42) 420.88 318 T
3 12 Q
(3.5.1) 81 303 T
(Cycle of Development) 144 303 T
3 10 Q
(...................................) 266.74 303 T
(TSwatCm) 366.23 303 T
(:) 415.32 303 T
(42) 420.88 303 T
3 12 Q
(3.5.2) 81 289 T
(Attaching and Detaching) 144 289 T
3 10 Q
(.............................) 283.42 289 T
(TSwatCm) 366.23 289 T
(:) 415.32 289 T
(43) 420.88 289 T
3 12 Q
(3.5.3) 81 275 T
(Breakpoints and Code Stepping) 144 275 T
3 10 Q
(...............) 322.34 275 T
(TSwatCm) 366.23 275 T
(:) 415.32 275 T
(47) 420.88 275 T
3 12 Q
(3.5.4) 81 261 T
(Examining and Modifying Memory) 144 261 T
3 10 Q
(.........) 339.02 261 T
(TSwatCm) 366.23 261 T
(:) 415.32 261 T
(54) 420.88 261 T
3 12 Q
(3.5.5) 81 247 T
(Other Important Commands) 144 247 T
3 10 Q
(.....................) 305.66 247 T
(TSwatCm) 366.23 247 T
(:) 415.32 247 T
(65) 420.88 247 T
2 12 Q
(3.6) 81 230 T
(Additional Features) 135 230 T
3 10 Q
(.........................................) 247.28 230 T
( TSwatCm) 363.45 230 T
(:) 415.32 230 T
(69) 420.88 230 T
2 14 Q
(4) 81 204.67 T
(Swat Reference) 126 204.67 T
3 10 Q
(..................................................................) 236.16 204.67 T
(73) 420.88 204.67 T
2 12 Q
(4.1) 81 187 T
(Notation) 135 187 T
3 10 Q
(..................................................................) 186.12 187 T
( TSwtA-I) 370.5 187 T
(:) 415.32 187 T
(75) 420.88 187 T
2 12 Q
(4.2) 81 170 T
(Swat Reference) 135 170 T
3 10 Q
(....................................................) 225.04 170 T
( TSwtA-I) 370.5 170 T
(:) 415.32 170 T
(76) 420.88 170 T
FMENDPAGE
%%EndPage: "5" 1
%%Page: "6" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
306 99 486 117 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.1 87.98 126 132.98 R
V
0 60 Q
0 X
(!) 60.83 92.98 T
162 144 522 567 R
7 X
V
2 14 Q
0 X
(5) 162 557.67 T
(Tool Command Language) 207 557.67 T
3 10 Q
(........................................) 383.5 557.67 T
(263) 496.32 557.67 T
2 12 Q
(5.1) 162 540 T
(Using This Chapter) 216 540 T
3 10 Q
(..............................................) 327.9 540 T
( TTCL) 457.97 540 T
(:) 490.76 540 T
(265) 496.32 540 T
2 12 Q
(5.2) 162 523 T
(Copyright Information) 216 523 T
3 10 Q
(........................................) 344.58 523 T
( TTCL) 457.97 523 T
(:) 490.76 523 T
(266) 496.32 523 T
2 12 Q
(5.3) 162 506 T
(Background and Description) 216 506 T
3 10 Q
(...........................) 380.72 506 T
( TTCL) 457.97 506 T
(:) 490.76 506 T
(266) 496.32 506 T
2 12 Q
(5.4) 162 489 T
(Syntax and Structure) 216 489 T
3 10 Q
(..........................................) 339.02 489 T
( TTCL) 457.97 489 T
(:) 490.76 489 T
(267) 496.32 489 T
3 12 Q
(5.4.1) 162 474 T
(Basic Command Syntax) 225 474 T
3 10 Q
(....................................) 358.48 474 T
(TTCL) 460.75 474 T
(:) 490.76 474 T
(268) 496.32 474 T
3 12 Q
(5.4.2) 162 460 T
(Expressions) 225 460 T
3 10 Q
(...........................................................) 294.54 460 T
(TTCL) 460.75 460 T
(:) 490.76 460 T
(273) 496.32 460 T
3 12 Q
(5.4.3) 162 446 T
(Lists) 225 446 T
3 10 Q
(..........................................................................) 252.84 446 T
(TTCL) 460.75 446 T
(:) 490.76 446 T
(275) 496.32 446 T
3 12 Q
(5.4.4) 162 432 T
(Command Results) 225 432 T
3 10 Q
(...............................................) 327.9 432 T
(TTCL) 460.75 432 T
(:) 490.76 432 T
(275) 496.32 432 T
3 12 Q
(5.4.5) 162 418 T
(Procedures) 225 418 T
3 10 Q
(.............................................................) 288.98 418 T
(TTCL) 460.75 418 T
(:) 490.76 418 T
(276) 496.32 418 T
3 12 Q
(5.4.6) 162 404 T
(Variables) 225 404 T
3 10 Q
(................................................................) 280.64 404 T
(TTCL) 460.75 404 T
(:) 490.76 404 T
(277) 496.32 404 T
2 12 Q
(5.5) 162 387 T
(Commands) 216 387 T
3 10 Q
(..............................................................) 283.42 387 T
( TTCL) 457.97 387 T
(:) 490.76 387 T
(277) 496.32 387 T
3 12 Q
(5.5.1) 162 372 T
(Notation) 225 372 T
3 10 Q
(..................................................................) 275.08 372 T
(TTCL) 460.75 372 T
(:) 490.76 372 T
(277) 496.32 372 T
3 12 Q
(5.5.2) 162 358 T
(Built-in Commands) 225 358 T
3 10 Q
(............................................) 336.24 358 T
(TTCL) 460.75 358 T
(:) 490.76 358 T
(278) 496.32 358 T
2 12 Q
(5.6) 162 341 T
(Coding) 216 341 T
3 10 Q
(.......................................................................) 258.4 341 T
( TTCL) 457.97 341 T
(:) 490.76 341 T
(302) 496.32 341 T
3 12 Q
(5.6.1) 162 326 T
(Swat Data Structure Commands) 225 326 T
3 10 Q
(..................) 408.52 326 T
(TTCL) 460.75 326 T
(:) 490.76 326 T
(303) 496.32 326 T
3 12 Q
(5.6.2) 162 312 T
(Examples) 225 312 T
3 10 Q
(................................................................) 280.64 312 T
(TTCL) 460.75 312 T
(:) 490.76 312 T
(328) 496.32 312 T
2 12 Q
(5.7) 162 295 T
(Using a New Command) 216 295 T
3 10 Q
(......................................) 350.14 295 T
( TTCL) 457.97 295 T
(:) 490.76 295 T
(330) 496.32 295 T
3 12 Q
(5.7.1) 162 280 T
(Compilation) 225 280 T
3 10 Q
(...........................................................) 294.54 280 T
(TTCL) 460.75 280 T
(:) 490.76 280 T
(331) 496.32 280 T
3 12 Q
(5.7.2) 162 266 T
(Autoloading) 225 266 T
3 10 Q
(...........................................................) 294.54 266 T
(TTCL) 460.75 266 T
(:) 490.76 266 T
(331) 496.32 266 T
3 12 Q
(5.7.3) 162 252 T
(Explicit Loading) 225 252 T
3 10 Q
(..................................................) 319.56 252 T
(TTCL) 460.75 252 T
(:) 490.76 252 T
(331) 496.32 252 T
2 14 Q
(6) 162 226.67 T
(Debug Utility) 207 226.67 T
3 10 Q
(.......................................................................) 297.32 226.67 T
(333) 496.32 226.67 T
2 12 Q
(6.1) 162 209 T
(Changing Platforms) 216 209 T
3 10 Q
(..........................................) 330.68 209 T
( TDebug) 448.71 209 T
(:) 490.76 209 T
(335) 496.32 209 T
2 12 Q
(6.2) 162 192 T
(Switching Kernels) 216 192 T
3 10 Q
(.............................................) 322.34 192 T
( TDebug) 448.71 192 T
(:) 490.76 192 T
(336) 496.32 192 T
2 14 Q
(7) 162 166.67 T
(Icon Editor) 207 166.67 T
3 10 Q
(...........................................................................) 286.2 166.67 T
(337) 496.32 166.67 T
2 12 Q
(7.1) 162 149 T
(Creating Icons) 216 149 T
3 10 Q
(....................................................) 300.1 149 T
( TIconEd) 445.95 149 T
(:) 490.76 149 T
(339) 496.32 149 T
FMENDPAGE
%%EndPage: "6" 2
%%Page: "7" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
495 87.98 557.1 132.98 R
7 X
0 0 0 1 0 0 0 K
V
0 60 Q
0 X
(!) 496.83 92.98 T
90 144 450 567 R
7 X
V
2 12 Q
0 X
(7.2) 90 559 T
(Importing Icons) 144 559 T
3 10 Q
(.................................................) 236.16 559 T
( TIconEd) 373.95 559 T
(:) 418.76 559 T
(340) 424.32 559 T
2 12 Q
(7.3) 90 542 T
(Editing Icons) 144 542 T
3 10 Q
(.......................................................) 219.48 542 T
( TIconEd) 373.95 542 T
(:) 418.76 542 T
(340) 424.32 542 T
2 12 Q
(7.4) 90 525 T
(Writing Source Code) 144 525 T
3 10 Q
(.......................................) 263.96 525 T
( TIconEd) 373.95 525 T
(:) 418.76 525 T
(341) 424.32 525 T
2 12 Q
(7.5) 90 508 T
(Icon Databases) 144 508 T
3 10 Q
(..................................................) 233.38 508 T
( TIconEd) 373.95 508 T
(:) 418.76 508 T
(342) 424.32 508 T
2 12 Q
(7.6) 90 491 T
(Exporting to Database) 144 491 T
3 10 Q
(....................................) 272.3 491 T
( TIconEd) 373.95 491 T
(:) 418.76 491 T
(343) 424.32 491 T
2 14 Q
(8) 90 465.67 T
(Resource Editor) 135 465.67 T
3 10 Q
(...............................................................) 247.28 465.67 T
(345) 424.32 465.67 T
2 12 Q
(8.1) 90 448 T
(Glossary) 144 448 T
3 10 Q
(................................................................) 197.24 448 T
( TResEd) 376.72 448 T
(:) 418.76 448 T
(347) 424.32 448 T
2 12 Q
(8.2) 90 431 T
(Getting Started) 144 431 T
3 10 Q
(...................................................) 233.38 431 T
( TResEd) 376.72 431 T
(:) 418.76 431 T
(350) 424.32 431 T
2 12 Q
(8.3) 90 414 T
(What Needs to be Translated?) 144 414 T
3 10 Q
(.....................) 316.78 414 T
( TResEd) 376.72 414 T
(:) 418.76 414 T
(350) 424.32 414 T
2 12 Q
(8.4) 90 397 T
(Translating) 144 397 T
3 10 Q
(...........................................................) 211.14 397 T
( TResEd) 376.72 397 T
(:) 418.76 397 T
(350) 424.32 397 T
3 12 Q
(8.4.1) 90 382 T
(Choosing a new translation file) 153 382 T
3 10 Q
(..................) 327.9 382 T
(TResEd) 379.5 382 T
(:) 418.76 382 T
(351) 424.32 382 T
3 12 Q
(8.4.2) 90 368 T
(Main translation screen) 153 368 T
3 10 Q
(.................................) 286.2 368 T
(TResEd) 379.5 368 T
(:) 418.76 368 T
(351) 424.32 368 T
3 12 Q
(8.4.3) 90 354 T
(Translating a Text String) 153 354 T
3 10 Q
(.............................) 297.32 354 T
(TResEd) 379.5 354 T
(:) 418.76 354 T
(352) 424.32 354 T
3 12 Q
(8.4.4) 90 340 T
(Moving between chunks) 153 340 T
3 10 Q
(................................) 288.98 340 T
(TResEd) 379.5 340 T
(:) 418.76 340 T
(353) 424.32 340 T
3 12 Q
(8.4.5) 90 326 T
(Moving between resources) 153 326 T
3 10 Q
(............................) 300.1 326 T
(TResEd) 379.5 326 T
(:) 418.76 326 T
(353) 424.32 326 T
2 12 Q
(8.5) 90 309 T
(Resource Editor Menus) 144 309 T
3 10 Q
(..................................) 280.64 309 T
( TResEd) 376.72 309 T
(:) 418.76 309 T
(354) 424.32 309 T
3 12 Q
(8.5.1) 90 294 T
(File Menu) 153 294 T
3 10 Q
(............................................................) 211.14 294 T
(TResEd) 379.5 294 T
(:) 418.76 294 T
(354) 424.32 294 T
3 12 Q
(8.5.2) 90 280 T
(Edit Menu) 153 280 T
3 10 Q
(...........................................................) 213.92 280 T
(TResEd) 379.5 280 T
(:) 418.76 280 T
(355) 424.32 280 T
3 12 Q
(8.5.3) 90 266 T
(Project Menu) 153 266 T
3 10 Q
(......................................................) 227.82 266 T
(TResEd) 379.5 266 T
(:) 418.76 266 T
(355) 424.32 266 T
3 12 Q
(8.5.4) 90 252 T
(Filter Menu) 153 252 T
3 10 Q
(........................................................) 222.26 252 T
(TResEd) 379.5 252 T
(:) 418.76 252 T
(356) 424.32 252 T
3 12 Q
(8.5.5) 90 238 T
(Utilities Menu) 153 238 T
3 10 Q
(...................................................) 236.16 238 T
(TResEd) 379.5 238 T
(:) 418.76 238 T
(356) 424.32 238 T
3 12 Q
(8.5.6) 90 224 T
(Window Menu) 153 224 T
3 10 Q
(...................................................) 236.16 224 T
(TResEd) 379.5 224 T
(:) 418.76 224 T
(357) 424.32 224 T
2 12 Q
(8.6) 90 207 T
(Creating an Executable) 144 207 T
3 10 Q
(...................................) 277.86 207 T
( TResEd) 376.72 207 T
(:) 418.76 207 T
(357) 424.32 207 T
2 12 Q
(8.7) 90 190 T
(Updating an Executable) 144 190 T
3 10 Q
(..................................) 280.64 190 T
( TResEd) 376.72 190 T
(:) 418.76 190 T
(358) 424.32 190 T
2 12 Q
(8.8) 90 173 T
(Testing Your New Executables) 144 173 T
3 10 Q
(....................) 319.56 173 T
( TResEd) 376.72 173 T
(:) 418.76 173 T
(359) 424.32 173 T
FMENDPAGE
%%EndPage: "7" 3
%%Page: "8" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
306 99 486 117 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.1 87.98 126 132.98 R
V
0 60 Q
0 X
(!) 60.83 92.98 T
162 144 522 567 R
7 X
V
2 14 Q
0 X
(9) 162 557.67 T
(The INI File) 207 557.67 T
3 10 Q
(...........................................................................) 286.2 557.67 T
(361) 496.32 557.67 T
2 12 Q
(9.1) 162 540 T
(How to Use the INI File) 216 540 T
3 10 Q
(..........................................) 347.36 540 T
( TIni) 465.2 540 T
(:) 490.76 540 T
(363) 496.32 540 T
2 12 Q
(9.2) 162 523 T
(Categories in the INI File) 216 523 T
3 10 Q
(......................................) 358.48 523 T
( TIni) 465.2 523 T
(:) 490.76 523 T
(364) 496.32 523 T
3 12 Q
(9.2.1) 162 508 T
([cards]) 225 508 T
3 10 Q
(.........................................................................) 263.96 508 T
(TIni) 467.98 508 T
(:) 490.76 508 T
(370) 496.32 508 T
3 12 Q
(9.2.2) 162 494 T
([configure]) 225 494 T
3 10 Q
(.................................................................) 286.2 494 T
(TIni) 467.98 494 T
(:) 490.76 494 T
(371) 496.32 494 T
3 12 Q
(9.2.3) 162 480 T
([diskswap]) 225 480 T
3 10 Q
(.................................................................) 286.2 480 T
(TIni) 467.98 480 T
(:) 490.76 480 T
(372) 496.32 480 T
3 12 Q
(9.2.4) 162 466 T
([envelope]) 225 466 T
3 10 Q
(..................................................................) 283.42 466 T
(TIni) 467.98 466 T
(:) 490.76 466 T
(373) 496.32 466 T
3 12 Q
(9.2.5) 162 452 T
([envel<) 225 452 T
4 F
(num) 265.82 452 T
3 F
(>]) 291.16 452 T
3 10 Q
(...........................................................) 302.88 452 T
(TIni) 467.98 452 T
(:) 490.76 452 T
(374) 496.32 452 T
3 12 Q
(9.2.6) 162 438 T
([expressMenuControl]) 225 438 T
3 10 Q
(..........................................) 350.14 438 T
(TIni) 467.98 438 T
(:) 490.76 438 T
(374) 496.32 438 T
3 12 Q
(9.2.7) 162 424 T
([fileManager]) 225 424 T
3 10 Q
(...........................................................) 302.88 424 T
(TIni) 467.98 424 T
(:) 490.76 424 T
(376) 496.32 424 T
3 12 Q
(9.2.8) 162 410 T
([input]) 225 410 T
3 10 Q
(.........................................................................) 263.96 410 T
(TIni) 467.98 410 T
(:) 490.76 410 T
(378) 496.32 410 T
3 12 Q
(9.2.9) 162 396 T
([keyboard]) 225 396 T
3 10 Q
(.................................................................) 286.2 396 T
(TIni) 467.98 396 T
(:) 490.76 396 T
(382) 496.32 396 T
3 12 Q
(9.2.10) 162 382 T
([label]) 225 382 T
3 10 Q
(..........................................................................) 261.18 382 T
(TIni) 467.98 382 T
(:) 490.76 382 T
(384) 496.32 382 T
3 12 Q
(9.2.11) 162 368 T
([label<) 225 368 T
4 F
(num) 263.17 368 T
3 F
(>]) 288.5 368 T
3 10 Q
(............................................................) 300.1 368 T
(TIni) 467.98 368 T
(:) 490.76 368 T
(385) 496.32 368 T
3 12 Q
(9.2.12) 162 354 T
([link]) 225 354 T
3 10 Q
(............................................................................) 255.62 354 T
(TIni) 467.98 354 T
(:) 490.76 354 T
(386) 496.32 354 T
3 12 Q
(9.2.13) 162 340 T
([localization]) 225 340 T
3 10 Q
(.............................................................) 297.32 340 T
(TIni) 467.98 340 T
(:) 490.76 340 T
(387) 496.32 340 T
3 12 Q
(9.2.14) 162 326 T
([math]) 225 326 T
3 10 Q
(.........................................................................) 263.96 326 T
(TIni) 467.98 326 T
(:) 490.76 326 T
(387) 496.32 326 T
3 12 Q
(9.2.15) 162 312 T
([modem]) 225 312 T
3 10 Q
(.....................................................................) 275.08 312 T
(TIni) 467.98 312 T
(:) 490.76 312 T
(387) 496.32 312 T
3 12 Q
(9.2.16) 162 298 T
([<modem name>]) 225 298 T
3 10 Q
(....................................................) 322.34 298 T
(TIni) 467.98 298 T
(:) 490.76 298 T
(388) 496.32 298 T
3 12 Q
(9.2.17) 162 284 T
([mouse]) 225 284 T
3 10 Q
(.......................................................................) 269.52 284 T
(TIni) 467.98 284 T
(:) 490.76 284 T
(391) 496.32 284 T
3 12 Q
(9.2.18) 162 270 T
([net library]) 225 270 T
3 10 Q
(..............................................................) 294.54 270 T
(TIni) 467.98 270 T
(:) 490.76 270 T
(392) 496.32 270 T
3 12 Q
(9.2.19) 162 256 T
([paper]) 225 256 T
3 10 Q
(........................................................................) 266.74 256 T
(TIni) 467.98 256 T
(:) 490.76 256 T
(392) 496.32 256 T
3 12 Q
(9.2.20) 162 242 T
([paper<) 225 242 T
4 F
(num) 268.04 242 T
3 F
(>]) 293.38 242 T
3 10 Q
(..........................................................) 305.66 242 T
(TIni) 467.98 242 T
(:) 490.76 242 T
(393) 496.32 242 T
3 12 Q
(9.2.21) 162 228 T
([parallel]) 225 228 T
3 10 Q
(....................................................................) 277.86 228 T
(TIni) 467.98 228 T
(:) 490.76 228 T
(394) 496.32 228 T
3 12 Q
(9.2.22) 162 214 T
([paths]) 225 214 T
3 10 Q
(........................................................................) 266.74 214 T
(TIni) 467.98 214 T
(:) 490.76 214 T
(394) 496.32 214 T
3 12 Q
(9.2.23) 162 200 T
([printer]) 225 200 T
3 10 Q
(.....................................................................) 275.08 200 T
(TIni) 467.98 200 T
(:) 490.76 200 T
(396) 496.32 200 T
3 12 Q
(9.2.24) 162 186 T
([<printer device name>]) 225 186 T
3 10 Q
(......................................) 361.26 186 T
(TIni) 467.98 186 T
(:) 490.76 186 T
(397) 496.32 186 T
3 12 Q
(9.2.25) 162 172 T
([screen 0]) 225 172 T
3 10 Q
(...................................................................) 280.64 172 T
(TIni) 467.98 172 T
(:) 490.76 172 T
(399) 496.32 172 T
3 12 Q
(9.2.26) 162 158 T
([serial]) 225 158 T
3 10 Q
(........................................................................) 266.74 158 T
(TIni) 467.98 158 T
(:) 490.76 158 T
(401) 496.32 158 T
FMENDPAGE
%%EndPage: "8" 4
%%Page: "9" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
495 87.98 557.1 132.98 R
7 X
0 0 0 1 0 0 0 K
V
0 60 Q
0 X
(!) 496.83 92.98 T
90 144 450 567 R
7 X
V
3 12 Q
0 X
(9.2.27) 90 559 T
([sound]) 153 559 T
3 10 Q
(........................................................................) 194.46 559 T
(TIni) 395.98 559 T
(:) 418.76 559 T
(402) 424.32 559 T
3 12 Q
(9.2.28) 90 545 T
([spool]) 153 545 T
3 10 Q
(.........................................................................) 191.68 545 T
(TIni) 395.98 545 T
(:) 418.76 545 T
(402) 424.32 545 T
3 12 Q
(9.2.29) 90 531 T
([system]) 153 531 T
3 10 Q
(......................................................................) 200.02 531 T
(TIni) 395.98 531 T
(:) 418.76 531 T
(403) 424.32 531 T
3 12 Q
(9.2.30) 90 517 T
([text]) 153 517 T
3 10 Q
(............................................................................) 183.34 517 T
(TIni) 395.98 517 T
(:) 418.76 517 T
(409) 424.32 517 T
3 12 Q
(9.2.31) 90 503 T
([ui]) 153 503 T
3 10 Q
(................................................................................) 172.22 503 T
(TIni) 395.98 503 T
(:) 418.76 503 T
(413) 424.32 503 T
3 12 Q
(9.2.32) 90 489 T
([<specific ui name>]) 153 489 T
3 10 Q
(..............................................) 266.74 489 T
(TIni) 395.98 489 T
(:) 418.76 489 T
(421) 424.32 489 T
3 12 Q
(9.2.33) 90 475 T
([ui features]) 153 475 T
3 10 Q
(..............................................................) 222.26 475 T
(TIni) 395.98 475 T
(:) 418.76 475 T
(421) 424.32 475 T
3 12 Q
(9.2.34) 90 461 T
([welcome]) 153 461 T
3 10 Q
(...................................................................) 208.36 461 T
(TIni) 395.98 461 T
(:) 418.76 461 T
(428) 424.32 461 T
2 14 Q
(10) 90 435.67 T
(Using Tools) 135 435.67 T
3 10 Q
(.........................................................................) 219.48 435.67 T
(431) 424.32 435.67 T
2 12 Q
(10.1) 90 418 T
(Tools Summary) 144 418 T
3 10 Q
(....................................................) 236.16 418 T
( TT) 383 418 T
(ools) 398.2 418 T
(:) 418.76 418 T
(433) 424.32 418 T
2 12 Q
(10.2) 90 401 T
(Typical Development Session) 144 401 T
3 10 Q
(........................) 314 401 T
( TT) 383 401 T
(ools) 398.2 401 T
(:) 418.76 401 T
(434) 424.32 401 T
2 12 Q
(10.3) 90 384 T
(File Types) 144 384 T
3 10 Q
(................................................................) 202.8 384 T
( TT) 383 384 T
(ools) 398.2 384 T
(:) 418.76 384 T
(435) 424.32 384 T
2 12 Q
(10.4) 90 367 T
(Esp) 144 367 T
3 10 Q
(.............................................................................) 166.66 367 T
( TT) 383 367 T
(ools) 398.2 367 T
(:) 418.76 367 T
(439) 424.32 367 T
2 12 Q
(10.5) 90 350 T
(Glue) 144 350 T
3 10 Q
(...........................................................................) 172.22 350 T
( TT) 383 350 T
(ools) 398.2 350 T
(:) 418.76 350 T
(440) 424.32 350 T
2 12 Q
(10.6) 90 333 T
(Goc) 144 333 T
3 10 Q
(............................................................................) 169.44 333 T
( TT) 383 333 T
(ools) 398.2 333 T
(:) 418.76 333 T
(443) 424.32 333 T
2 12 Q
(10.7) 90 316 T
(Grev) 144 316 T
3 10 Q
(...........................................................................) 172.22 316 T
( TT) 383 316 T
(ools) 398.2 316 T
(:) 418.76 316 T
(444) 424.32 316 T
2 12 Q
(10.8) 90 299 T
(mkmf) 144 299 T
3 10 Q
(.........................................................................) 177.78 299 T
( TT) 383 299 T
(ools) 398.2 299 T
(:) 418.76 299 T
(447) 424.32 299 T
2 12 Q
(10.9) 90 282 T
(pccom) 144 282 T
3 10 Q
(.......................................................................) 183.34 282 T
( TT) 383 282 T
(ools) 398.2 282 T
(:) 418.76 282 T
(448) 424.32 282 T
3 12 Q
(10.9.1) 90 267 T
(PCCOM Background) 153 267 T
3 10 Q
(.........................................) 269.52 267 T
(TT) 385.78 267 T
(ools) 398.2 267 T
(:) 418.76 267 T
(448) 424.32 267 T
3 12 Q
(10.9.2) 90 253 T
(Running PCCOM on the Target) 153 253 T
3 10 Q
(...................) 330.68 253 T
(TT) 385.78 253 T
(ools) 398.2 253 T
(:) 418.76 253 T
(449) 424.32 253 T
3 12 Q
(10.9.3) 90 239 T
(File Transfer Protocol of PCCOM) 153 239 T
3 10 Q
(................) 339.02 239 T
(TT) 385.78 239 T
(ools) 398.2 239 T
(:) 418.76 239 T
(455) 424.32 239 T
2 12 Q
(10.10) 90 222 T
(pcget) 144 222 T
3 10 Q
(.........................................................................) 177.78 222 T
( TT) 383 222 T
(ools) 398.2 222 T
(:) 418.76 222 T
(461) 424.32 222 T
2 12 Q
(10.11) 90 205 T
(pcs) 144 205 T
3 10 Q
(.............................................................................) 166.66 205 T
( TT) 383 205 T
(ools) 398.2 205 T
(:) 418.76 205 T
(462) 424.32 205 T
2 12 Q
(10.12) 90 188 T
(pcsend) 144 188 T
3 10 Q
(......................................................................) 186.12 188 T
( TT) 383 188 T
(ools) 398.2 188 T
(:) 418.76 188 T
(465) 424.32 188 T
2 12 Q
(10.13) 90 171 T
(pmake) 144 171 T
3 10 Q
(.......................................................................) 183.34 171 T
( TT) 383 171 T
(ools) 398.2 171 T
(:) 418.76 171 T
(465) 424.32 171 T
3 12 Q
(10.13.1) 90 156 T
(Copyright Notice and Acknowledgment) 153 156 T
3 10 Q
(....) 372.38 156 T
(TT) 385.78 156 T
(ools) 398.2 156 T
(:) 418.76 156 T
(466) 424.32 156 T
FMENDPAGE
%%EndPage: "9" 5
%%Page: "10" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
306 99 486 117 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.1 87.98 126 132.98 R
V
0 60 Q
0 X
(!) 60.83 92.98 T
162 144 522 567 R
7 X
V
3 12 Q
0 X
(10.13.2) 162 559 T
(How to Customize pmake) 225 559 T
3 10 Q
(................................) 366.82 559 T
(TT) 457.78 559 T
(ools) 470.2 559 T
(:) 490.76 559 T
(467) 496.32 559 T
3 12 Q
(10.13.3) 162 545 T
(Command Line Arguments) 225 545 T
3 10 Q
(............................) 377.94 545 T
(TT) 457.78 545 T
(ools) 470.2 545 T
(:) 490.76 545 T
(469) 496.32 545 T
3 12 Q
(10.13.4) 162 531 T
(Contents of a Makefile) 225 531 T
3 10 Q
(.....................................) 352.92 531 T
(TT) 457.78 531 T
(ools) 470.2 531 T
(:) 490.76 531 T
(471) 496.32 531 T
3 12 Q
(10.13.5) 162 517 T
(Advanced pmake Techniques) 225 517 T
3 10 Q
(........................) 389.06 517 T
(TT) 457.78 517 T
(ools) 470.2 517 T
(:) 490.76 517 T
(493) 496.32 517 T
3 12 Q
(10.13.6) 162 503 T
(The Way Things Work) 225 503 T
3 10 Q
(......................................) 350.14 503 T
(TT) 457.78 503 T
(ools) 470.2 503 T
(:) 490.76 503 T
(497) 496.32 503 T
2 12 Q
(10.14) 162 486 T
(Swat Stub) 216 486 T
3 10 Q
(................................................................) 275.08 486 T
( TT) 455 486 T
(ools) 470.2 486 T
(:) 490.76 486 T
(498) 496.32 486 T
(Index) 207 472.33 T
(..............................................................................) 236.16 472.33 T
(T) 453.34 472.33 T
(oolsIX) 459.09 472.33 T
(:) 490.76 472.33 T
(499) 496.32 472.33 T
FMENDPAGE
%%EndPage: "10" 6
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 6
%%DocumentFonts: ZapfDingbats
%%+ Helvetica
%%+ Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Italic
%%EOF
