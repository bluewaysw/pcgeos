%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /NewCenturySchlbk-Italic FMFONTDEFINE
5 0 /Courier-BoldOblique FMFONTDEFINE
6 0 /Courier FMFONTDEFINE
7 0 /NewCenturySchlbk-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "75" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Notation) 501.23 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(75) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.1) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
-0.21 (This chapter is intended to provide documentation for the majority of useful) 180 609.36 P
(Swat commands. The general structure of the descriptions in this chapter) 180 596.36 T
(will be as follows:) 180 583.36 T
0 F
(Usage:) 99 563.36 T
1 F
(Shows the command and its various arguments and subcommands \050if any\051.) 180 563.36 T
0 F
(Examples:) 99 543.36 T
1 F
(Examples of the command as it could be used.) 180 543.36 T
0 F
(Synopsis:) 99 523.36 T
1 F
(Summary of the command and its functions and results.) 180 523.36 T
0 F
(Notes:) 99 503.36 T
1 F
(Details about the subcommands, arguments, and other command features.) 180 503.36 T
0 F
(See Also:) 99 483.37 T
1 F
(Other related commands.) 180 483.37 T
0 14 Q
(4.1) 142.54 431.03 T
0 24 Q
(Notation) 180 431.03 T
1 10 Q
(The descriptions of the Swat commands will follow the following notational) 180 405.37 T
(conventions:) 180 392.37 T
2 F
(u) 180 372.37 T
3 F
(command \050alternative1|alternative2|...|alternativeN\051) 198 372.37 T
(\050\051) 198 360.37 T
1 F
( The parentheses enclose a set of alternatives separated by a vertical) 205.78 360.37 T
(line. For example, the expression) 198 348.37 T
3 F
(quit \050cont|leave\051) 353.76 348.37 T
1 F
( means that either) 441.76 348.37 T
3 F
(quit cont) 198 336.37 T
1 F
( or) 244.94 336.37 T
3 F
(quit leave) 259.94 336.37 T
1 F
(can be used.) 314.19 336.37 T
2 F
(u) 180 317.37 T
3 F
(command [optional_argument]) 198 317.37 T
([]) 198 305.37 T
1 F
(The brackets enclose optional arguments to the command. For) 208.65 305.37 T
-0.08 (example, the command) 198 293.37 P
3 F
-0.08 (alias [<word[<command>]>]) 307.23 293.37 P
1 F
-0.08 ( could have zero,) 451.68 293.37 P
-0.13 (one, or two arguments because the <) 198 281.37 P
4 F
-0.13 (command) 366.28 281.37 P
1 F
-0.13 (> and <) 411.46 281.37 P
4 F
-0.13 (word>) 446.3 281.37 P
1 F
-0.13 ( arguments) 475.69 281.37 P
(are optional. Another example would be the command) 198 269.37 T
3 F
(objwalk) 450.07 269.37 T
([<addr>]) 198 257.37 T
1 F
(, which may take zero arguments if it is meant to use the) 242.54 257.37 T
(default address, and one argument if the user gives it a particular) 198 245.37 T
(address to look at.) 198 233.37 T
2 F
(u) 180 214.37 T
3 F
(command <type_of_argument>) 198 214.37 T
-0.45 (< >) 198 202.37 P
1 F
-0.44 ( The angled brackets enclose the type of an argument rather than the) 212.54 202.37 P
(actual string to be typed. For example,) 198 190.37 T
3 F
(<addr>) 379.33 190.37 T
1 F
( indicates an address) 416.09 190.37 T
(expression and) 198 178.37 T
3 F
(<argument>) 270.04 178.37 T
1 F
( indicates some sort of argument, but) 332.9 178.37 T
3 F
(\050addr|type\051) 198 166.37 T
1 F
( means either the string) 259.26 166.37 T
3 F
(addr) 373.53 166.37 T
1 F
( or the string) 398.17 166.37 T
3 F
(type) 461.32 166.37 T
1 F
(.) 484.1 166.37 T
81 144 531 648 C
235.51 643.03 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.03 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "75" 1
%%Page: "76" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(76) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
3 F
(*) 198 641.33 T
( +) 208.74 641.33 T
1 F
(An asterisk following any of the previous constructs indicates zero or) 198 629.33 T
(more repetitions of the construct may be typed. An addition sign) 198 617.33 T
(indicates one or more repetitions of the construct may be used. For) 198 605.33 T
-0.73 (example,) 198 593.33 P
3 F
-0.76 (unalias) 241.54 593.33 P
-0.76 (word) 281.73 593.33 P
5 F
-1.58 (*) 308.58 593.33 P
1 F
-0.73 ( can be the) 314.58 593.33 P
3 F
-0.76 (unalias) 364.45 593.33 P
1 F
-0.73 ( command by itself, or it can) 402.59 593.33 P
(be followed by a list of words to be unaliased.) 198 581.33 T
0 14 Q
(4.2) 142.54 530 T
0 24 Q
(Swat Reference) 180 530 T
81 507.99 531 513 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 507.99 531 513 R
7 X
0 0 0 1 0 0 0 K
V
50 511.99 609.01 511.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 499.99 T
0 F
(_print) 99 499.99 T
0 10 Q
(Usage:) 99 482.33 T
1 F
(_print <expression>) 180 482.33 T
0 F
(Examples:) 99 462.33 T
1 F
(\322_print ax-10\323) 180 442.33 T
(print ax less 10 decimal.) 243 430.33 T
0 F
(Synopsis:) 99 411.33 T
1 F
(Print the value of an expression.) 180 411.33 T
0 F
(Notes:) 99 391.33 T
1 F
(The difference between this command and the \322print\323 command is a subtle) 180 391.33 T
-0.81 (one: if one of the arguments contains square-brackets, the T) 180 378.33 P
-0.81 (cl interpreter will) 449.17 378.33 P
(attempt to evaluate the text between the brackets as a command before) 180 365.33 T
-0.21 (_print is given the argument. If the text between the brackets is intended to) 180 352.33 P
(be an array index, the interpreter will generate an error before the Swat) 180 339.33 T
-0.09 (expression evaluator has a chance to decide whether the text is a nested T) 180 326.33 P
-0.09 (cl) 520.71 326.33 P
(command or an array index.) 180 313.33 T
-0.7 ( For this reason, this function is intended primarily for use by T) 180 293.33 P
-0.7 (cl procedures,) 465.94 293.33 P
(not by users.) 180 280.33 T
0 F
(See Also:) 99 260.33 T
1 F
(print, addr) 180 260.33 T
(-parse.) 230.19 260.33 T
81 243.98 531 248.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 243.98 531 248.99 R
7 X
0 0 0 1 0 0 0 K
V
50 247.98 609.01 247.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 235.98 T
0 F
(abort) 99 235.98 T
0 10 Q
(Usage:) 99 218.32 T
1 F
(abort [<frame-number>]) 180 218.32 T
(abort [<function>]) 180 205.32 T
0 F
(Examples:) 99 185.32 T
1 F
(\322abort\323) 180 165.32 T
( abort executing the current frame.) 243 165.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "76" 2
%%Page: "77" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(77) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
( \322abort 3\323) 180 641.33 T
(abort executing up through the third frame.) 243 641.33 T
( \322abort ObjMessage\323) 180 622.33 T
(abort executing up through \336rst ObjMessage.) 243 610.33 T
0 F
(Synopsis:) 99 591.33 T
1 F
-0.53 ( Abort code execution up through a given frame or routine. By \322abort\323, we me) 180 591.33 P
(\322do not execute\323. This can be quite dangerous, as semaphores may not be) 180 578.33 T
(ungrabbed, blocks not unlocked, \337ags not cleared, etc., leaving the state of) 180 565.33 T
-0.79 (objects, and if executing system code, possibly the system itself in a bad state.) 180 552.33 P
-0.18 (This command should only be used when the only alternative is to to detach) 180 539.33 P
(\050i.e. in a fatal error\051 as a way to possibly prolong the usefulness of the) 180 526.33 T
(debugging session.) 180 513.33 T
0 F
(Notes:) 99 493.33 T
2 F
(u) 180 473.33 T
1 F
(If no argument is given, code through the current frame is aborted.) 198 473.33 T
2 F
(u) 180 454.33 T
1 F
(<frame num> are the numbers that appear at the left of the backtrace.) 198 454.33 T
0 F
(See Also:) 99 435.33 T
1 F
(\336nish, backtrace, zip.) 180 435.33 T
81 418.99 531 424 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 418.99 531 424 R
7 X
0 0 0 1 0 0 0 K
V
50 422.99 609.01 422.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 410.99 T
0 F
(abortframe) 99 410.99 T
0 10 Q
(Usage:) 99 393.33 T
1 F
(abortframe <frame-token>) 180 393.33 T
0 F
(Examples:) 99 373.33 T
1 F
(\322abortframe $cur\323) 180 353.33 T
(Abort all code execution through the frame whose token is in) 243 341.33 T
($cur) 243 329.33 T
(.) 262.81 329.33 T
0 F
(Synopsis:) 99 310.33 T
1 F
(Aborts code execution up through a particular stack frame. As no code is) 180 310.33 T
(executed, the registers may be in a garbaged state.) 180 297.33 T
0 F
(Notes:) 99 277.33 T
2 F
(u) 180 257.33 T
1 F
(The argument is a frame token, as returned by the \322frame\323 command.) 198 257.33 T
2 F
(u) 180 238.33 T
1 F
(No) 198 238.33 T
1 9 Q
(FULLSTOP) 213.93 238.33 T
1 10 Q
( event is dispatched when the machine actually aborts) 263.95 238.33 T
-0.5 (executing in the given frame. The caller must dispatch it itself, using the) 198 226.33 P
(\322event\323 command. For information about) 198 214.33 T
1 9 Q
(FULLSTOP) 389.32 214.33 T
1 10 Q
( events, see the) 439.34 214.33 T
3 F
(event) 198 202.33 T
1 F
( T) 226.7 202.33 T
(cl command.) 235.34 202.33 T
2 F
(u) 180 183.33 T
1 F
-0.52 (The command returns zero if the machine aborted executing in the given) 198 183.33 P
(frame; non-zero if it was interrupted before that could happen.) 198 171.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "77" 3
%%Page: "78" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(78) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(addr-parse) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(addr) 180 617.33 T
(-parse <addr> [<addr) 201.3 617.33 T
(-only>]) 299.85 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322addr) 180 577.33 T
(-parse *ds:si\323) 205.19 577.33 T
-0.15 (Parse the address \322*ds:si\323 into its handle, offset and data-type) 243 565.33 P
(components. In this case, the data-type will be \322nil\323.) 243 553.33 T
( \322addr) 180 534.33 T
(-parse) 207.97 534.33 T
1 9 Q
(ILLEGAL_HANDLE) 239.45 534.33 T
1 10 Q
( 0\323) 326.45 534.33 T
(Figures the value for the enumerated constant) 243 522.33 T
(\322) 243 510.33 T
1 9 Q
(ILLEGAL_HANDLE) 246.89 510.33 T
1 10 Q
(\323. The handle for this non-address will be) 333.89 510.33 T
(\322value\323.) 243 498.33 T
0 F
(Synopsis:) 99 479.33 T
1 F
-0.38 (This command parses the address expression into its components, returning) 180 479.33 P
(a list {<handle> <offset> <type> } as its value.) 180 466.33 T
0 F
(Notes:) 99 446.33 T
2 F
(u) 180 426.33 T
1 F
(This will generate an error if there\325) 198 426.33 T
(s an error parsing the <addr>) 360.42 426.33 T
2 F
(u) 180 407.33 T
1 F
-0.75 (<handle> is the token for the handle in which the address resides, or \322nil\323) 198 407.33 P
(if the address is absolute. This token can be given to the \322handle\323) 198 395.33 T
(command for further processing.) 198 383.33 T
2 F
(u) 180 364.33 T
1 F
(<offset> is a decimal number and is the offset of the address within the) 198 364.33 T
-0.23 (block indicated by the <handle> token. If <handle> is \322nil\323, this can be a) 198 352.33 P
(32-bit linear address.) 198 340.33 T
2 F
(u) 180 321.33 T
1 F
(<type> is a type token for the data at the given address, if any could be) 198 321.33 T
(determined. For example the address \322ds:bx\323 has no type, as it\325) 198 309.33 T
(s just a) 488.05 309.33 T
(memory reference, but \322ds:bx.VDE_extraData\323 will have whatever type) 198 297.33 T
-0.59 (the structure \336eld \322VDE_extraData\323 possesses. This token can be passed) 198 285.33 P
(to the \322type\323 or \322value\323 commands for further processing.) 198 273.33 T
2 F
(u) 180 254.33 T
1 F
-0.79 (If the expression doesn\325) 198 254.33 P
-0.79 (t refer to data that can be fetched from the patient) 303.77 254.33 P
-0.26 (\050e.g. \322foo*3\323\051 <handle> will be returned as the string \322value\323 instead of a) 198 242.33 P
-0.55 (normal handle token. <offset> is then a value-list for the resulting value,) 198 230.33 P
(and <type> is the type description by means of which the value list can) 198 218.33 T
(be interpreted.) 198 206.33 T
2 F
(u) 180 187.33 T
1 F
(The optional <addr) 198 187.33 T
(-only> argument is zero or non-zero to indicate the) 286.3 187.33 T
-0.4 (willingness or unwillingness, respectively) 198 175.33 P
-0.4 (, of the caller to receive a value) 388.1 175.33 P
(list in return. If <addr) 198 163.33 T
(-only> is absent or non-zero, any expression that) 300.73 163.33 T
(can only be expressed as a value will generate an error) 198 151.33 T
(. The single) 450.44 151.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "78" 4
%%Page: "79" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(79) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(exception to this is if the expression involves pointer arithmetic. For) 198 641.33 T
(example \322pself+1\323 normally would be returned as a value list for a far) 198 629.33 T
-0 (pointer) 198 617.33 P
-0 (, as the result cannot be fetched from the PC. When <addr) 230.59 617.33 P
-0 (-only>) 499.2 617.33 P
(is absent or non-zero, \322addr) 198 605.33 T
(-parse\323 pretends the expression was) 324.86 605.33 T
(\322*\050pself+1\051\323, allowing simple speci\336cation of an address by the user for) 198 593.33 T
(those commands that just address memory) 198 581.33 T
(.) 395.05 581.33 T
2 F
(u) 180 562.33 T
1 F
-0.49 (The <offset> element of the returned list is very useful when you want to) 198 562.33 P
(allow the user to give you anything, be it a register or a number or an) 198 550.33 T
-0.03 (enumerated constant or whatever) 198 538.33 P
-0.03 (. Y) 353.46 538.33 P
-0.03 (ou can pass the argument you were) 364.92 538.33 P
(given to [index [addr) 198 526.33 T
(-parse $arg] 1] and end up with an appropriate) 293.56 526.33 T
-0.52 (decimal number) 198 514.33 P
-0.52 (. Be sure to pass <addr) 271.56 514.33 P
-0.52 (-only> as 0, however) 374.85 514.33 P
-0.52 (, or else you\325ll) 467.14 514.33 P
(generate an error) 198 502.33 T
(.) 278.18 502.33 T
0 F
(See Also:) 99 483.33 T
1 F
(value, handle, type.) 180 483.33 T
81 466.99 531 472 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 466.99 531 472 R
7 X
0 0 0 1 0 0 0 K
V
50 470.99 609.01 470.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 458.99 T
0 F
(addr-preprocess) 99 458.99 T
0 10 Q
(Usage:) 99 441.33 T
1 F
(addr) 180 441.33 T
(-preprocess <addr> <seg-var> <off-var>) 201.3 441.33 T
0 F
(Examples:) 99 421.33 T
1 F
(\322addr) 180 401.33 T
(-preprocess $args s o\323) 205.19 401.33 T
(Parse the address expression in $args, storing the segment) 243 389.33 T
(portion in $s and the offset portion in $o in the current scope.) 243 377.33 T
0 F
(Synopsis:) 99 358.33 T
1 F
-0.07 (Preprocesses an address expression into a form that is easier to manipulate) 180 358.33 P
(and faster to reparse.) 180 345.33 T
0 F
(Notes:) 99 325.33 T
2 F
(u) 180 305.33 T
1 F
(<seg-var> is the name of a variable in the caller) 198 305.33 T
(\325) 419.41 305.33 T
(s scope in which the) 421.08 305.33 T
-0.78 (segment of the address is stored. It should be treated as opaque, as it may) 198 293.33 P
(or may not be numeric.) 198 281.33 T
2 F
(u) 180 262.33 T
1 F
-0.66 (<off-var> is the name of a variable in the caller) 198 262.33 P
-0.66 (\325) 410.14 262.33 P
-0.66 (s scope in which the offset) 411.81 262.33 P
(of the address is stored. This will always be numeric.) 198 250.33 T
2 F
(u) 180 231.33 T
1 F
-0.21 (Returns the 3-list returned by addr) 198 231.33 P
-0.21 (-parse, in case you have a use for the) 359.92 231.33 P
(type token stored in the list.) 198 219.33 T
0 F
(See Also:) 99 200.33 T
1 F
(addr) 180 200.33 T
(-parse.) 201.3 200.33 T
81 183.98 531 188.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 183.98 531 188.99 R
7 X
0 0 0 1 0 0 0 K
V
50 187.98 609.01 187.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 175.98 T
0 F
(addr-with-obj-\337ag) 99 175.98 T
0 10 Q
(Usage:) 99 158.32 T
1 F
(addr) 180 158.32 T
(-with-obj-\337ag) 201.3 158.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "79" 5
%%Page: "80" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(80) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Examples:) 99 641.33 T
1 F
(\322var addr [addr) 180 621.33 T
(-with-obj-\337ag $addr]\323) 250.93 621.33 T
-0.32 (If $addr is \322-i\323, returns the address of the current implied grab.) 243 609.33 P
0 F
(Synopsis:) 99 590.33 T
1 F
(This is a utility routine that can be used by any command that deals with) 180 590.33 T
(objects where the user may reasonably want to operate on the leaf object of) 180 577.33 T
(one of the hierarchies, or the windowed object under the mouse. It can be) 180 564.33 T
-0.43 (given one of a set of \337ags that indicate where to \336nd the address of the object) 180 551.33 P
(on which to operate.) 180 538.33 T
0 F
(Notes:) 99 518.33 T
2 F
(u) 180 498.33 T
1 F
(Special values accepted for <address>:) 198 498.33 T
( V) 207.8 479.33 T
(alue) 216.88 479.33 T
(Returns address expression for\311) 243 479.33 T
(-a) 213.36 460.33 T
(the current patient\325) 243 460.33 T
(s application object) 333 460.33 T
( -i) 210.58 441.33 T
-0.61 (the current \322implied grab\323: the windowed object over which the) 243 441.33 P
(mouse is currently located) 243 429.33 T
( -f) 210.58 410.33 T
(the leaf of the keyboard-focus hierarchy) 243 410.33 T
(-t) 213.36 391.33 T
(the leaf of the target hierarchy) 243 391.33 T
(-m) 213.36 372.33 T
(the leaf of the model hierarchy) 243 372.33 T
(-c) 213.36 353.33 T
(the content for the view over which the mouse is currently) 243 353.33 T
(located) 243 341.33 T
(-kg) 213.36 322.33 T
(the leaf of the keyboard-grab hierarchy) 243 322.33 T
(-mg) 213.36 303.33 T
(the leaf of the mouse-grab hierarchy) 243 303.33 T
2 F
(u) 180 284.33 T
1 F
(If <address> is empty) 198 284.33 T
(, this will return the contents of the local variable) 297.16 284.33 T
(\322oself\323 within the current frame, if it has one, or *ds:si) 198 272.33 T
2 F
(u) 180 253.33 T
1 F
(If <address> isn\325) 198 253.33 T
(t one of the above, this just returns <address>.) 274.57 253.33 T
0 F
(See Also:) 99 234.33 T
1 F
(impliedgrab, content, focusobj, targetobj, modelobj, keyboardobj, mouseobj.) 180 234.33 T
81 217.99 531 223 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 217.99 531 223 R
7 X
0 0 0 1 0 0 0 K
V
50 221.99 609.01 221.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 209.99 T
0 F
(alias) 99 209.99 T
0 10 Q
(Usage:) 99 192.33 T
1 F
(alias [<name> [<body>]]) 180 192.33 T
0 F
(Examples:) 99 172.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "80" 6
%%Page: "81" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(81) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322alias p print\323) 180 641.33 T
(Execute \322print\323 when the user types the command \322p\323. Any) 243 629.33 T
(arguments to \322p\323 get passed to \322print\323 in the order they were) 243 617.33 T
(given.) 243 605.33 T
( \322alias while {for {} $1 {} $2}\323) 180 586.33 T
-0.18 (Executes an appropriate \322for\323 loop when the \322while\323 command) 243 574.33 P
(is executed with its two arguments: a test expression and a) 243 562.33 T
(body of commands to execute.) 243 550.33 T
(\322alias\323) 180 531.33 T
(Prints all the de\336ned aliases.) 243 531.33 T
(\322alias while\323) 180 512.33 T
(Prints what the \322while\323 command is aliased to.) 243 500.33 T
0 F
(Synopsis:) 99 481.33 T
1 F
-0.74 ( This is a short-cut to allow you to make commands you commonly type easier) 180 481.33 P
(to use, and to de\336ne simple new commands quickly) 180 468.33 T
(.) 415.22 468.33 T
0 F
(Notes:) 99 448.33 T
2 F
(u) 180 428.33 T
1 F
(If you give no arguments the current aliases are all displayed.) 198 428.33 T
2 F
(u) 180 409.33 T
1 F
-0.82 (If you give a single argument, the name of an existing alias, the command) 198 409.33 P
(that will be executed when you use the alias is printed.) 198 397.33 T
2 F
(u) 180 378.33 T
1 F
(The <body> string is usually in curly braces, as it usually involves) 198 378.33 T
(whitespace and can contain newlines for the longer aliases.) 198 366.33 T
2 F
(u) 180 347.33 T
1 F
-0.01 (Y) 198 347.33 P
-0.01 (ou can use the pseudo-variables $1, $2, etc. in the <body> to represent) 203.93 347.33 P
(the 1st, 2nd, etc. argument given when the alias is invoked. They are) 198 335.33 T
-0.54 (pseudo-variables as the \322var\323 command will not operate on them, nor are) 198 323.33 P
(they available to any procedure invoked by the alias.) 198 311.33 T
2 F
(u) 180 292.33 T
1 F
-0.54 (Y) 198 292.33 P
-0.54 (ou can also interpolate a range of the arguments using $<start>-<end>.) 203.93 292.33 P
-0.27 (If you do not give an <end>, then the arguments from <start> to the last) 198 280.33 P
(one will be interpolated.) 198 268.33 T
2 F
(u) 180 249.33 T
1 F
($* will interpolate all the arguments.) 198 249.33 T
2 F
(u) 180 230.33 T
1 F
($# will interpolate the actual number of arguments.) 198 230.33 T
2 F
(u) 180 211.33 T
1 F
-0.09 (If you do not use any of these pseudo-variables, all the arguments given) 198 211.33 P
(to the alias will be appended to the <body>.) 198 199.33 T
2 F
(u) 180 180.33 T
1 F
(Interpolation of the values for these pseudo-variables occurs regardless) 198 180.33 T
(of braces in the <body>.) 198 168.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "81" 7
%%Page: "82" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(82) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.14 (It is an error to specify an argument number when there are fewer than) 198 641.33 P
(that many arguments given to the alias.) 198 629.33 T
0 F
(See Also:) 99 610.33 T
1 F
(unalias.) 180 610.33 T
81 593.99 531 599 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 593.99 531 599 R
7 X
0 0 0 1 0 0 0 K
V
50 597.99 609.01 597.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 585.99 T
0 F
(alignFields) 99 585.99 T
0 10 Q
(Usage:) 99 568.33 T
1 F
(var alignFields [\0500|1\051]) 180 568.33 T
0 F
(Examples:) 99 548.33 T
1 F
(\322var alignFields 1\323) 180 528.33 T
-0.64 (Sets the \322print\323 command to align the values for all the \336elds of) 243 516.33 P
(a given structure.) 243 504.33 T
0 F
(Synopsis:) 99 485.33 T
1 F
-0.53 (Determines whether structure-\336eld values follow immediately after the \336eld) 180 485.33 P
(name or if all values are indented to the same level. The \322print\323 command) 180 472.33 T
-0.33 (and other display commands use this variable when formatting their output.) 180 459.33 P
0 F
(Notes:) 99 439.33 T
2 F
(u) 180 419.33 T
1 F
(Having all values indented to the same level makes it easier for some) 198 419.33 T
(people to locate a particular \336eld in a structure. It is not without cost,) 198 407.33 T
(however) 198 395.33 T
(, in that Swat must determine the length of the longest \336eld) 235.96 395.33 T
(name before it can print anything.) 198 383.33 T
2 F
(u) 180 364.33 T
1 F
(The default value for this variable is zero.) 198 364.33 T
0 F
(See Also:) 99 345.33 T
1 F
(print.) 180 345.33 T
81 328.98 531 333.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.98 531 333.99 R
7 X
0 0 0 1 0 0 0 K
V
50 332.98 609.01 332.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 320.98 T
0 F
(antifreeze) 99 320.98 T
0 10 Q
(Usage:) 99 303.32 T
1 F
(antifreeze <patient>) 180 303.32 T
(antifreeze :<n>) 180 290.32 T
(antifreeze <patient>:<n>) 180 277.32 T
(antifreeze <id>) 180 264.32 T
0 F
(Examples:) 99 244.32 T
1 F
(\322antifreeze term\323) 180 224.32 T
(Promotes the application thread for \322term\323 to be the) 243 212.32 T
(\322most-runnable\323) 243 200.32 T
(\322antifreeze :1\323) 180 181.32 T
(Does likewise for thread #1 of the current patient) 243 169.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "82" 8
%%Page: "83" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(83) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322antifreeze 16c0h\323) 180 641.33 T
(Does likewise the thread whose handle is 16c0h) 243 629.33 T
(\322antifreeze\323) 180 610.33 T
(Promotes the current thread to be the \322most-runnable.\323) 243 610.33 T
0 F
(See Also:) 99 591.33 T
1 F
(freeze) 180 591.33 T
81 574.99 531 580 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 574.99 531 580 R
7 X
0 0 0 1 0 0 0 K
V
50 578.99 609.01 578.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 566.99 T
0 F
(antithaw) 99 566.99 T
0 10 Q
(Usage:) 99 549.33 T
1 F
(antithaw <patient>) 180 549.33 T
(antithaw :<n>) 180 536.33 T
(antithaw <patient>:<n>) 180 523.33 T
(antithaw <id>) 180 510.33 T
0 F
(Examples:) 99 490.33 T
1 F
(\322antithaw term\323) 180 470.33 T
(Allows the application thread for \322term\323 to run normally) 243 458.33 T
(.) 502.28 458.33 T
(\322antithaw :1\323) 180 439.33 T
(Allows thread #1 of the current patient to run normally) 243 427.33 T
(.) 498.02 427.33 T
(\322antithaw 16c0h\323) 180 408.33 T
(Allow the thread whose handle is 16c0h to run normally) 243 396.33 T
(.) 501.37 396.33 T
0 F
(See Also:) 99 377.33 T
1 F
(thaw) 180 377.33 T
81 360.98 531 365.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 360.98 531 365.99 R
7 X
0 0 0 1 0 0 0 K
V
50 364.98 609.01 364.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 352.98 T
0 F
(appobj) 99 352.98 T
0 10 Q
(Usage:) 99 335.32 T
1 F
(appobj [<patient>]) 180 335.32 T
0 F
(Examples:) 99 315.32 T
1 F
(\322pobj [appobj draw]\323) 180 295.32 T
(prints the GenApplication object for draw) 243 283.32 T
(.) 434.12 283.32 T
(\322pobj [appobj]\323) 180 264.32 T
(prints the GenApplication object for the current application) 243 252.32 T
(\050equivalent to \322pobj -a\323\051.) 243 240.32 T
0 F
(Synopsis:) 99 221.32 T
1 F
-0.68 (Returns the address of the GenApplication object for the given patient, or the) 180 221.32 P
(current one if you give no patient.) 180 208.32 T
0 F
(See Also:) 99 188.32 T
1 F
(impliedgrab.) 180 188.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "83" 9
%%Page: "84" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(84) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(apropos) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(apropos [<string>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322apropos vis\323) 180 577.33 T
(Find all commands related to vis) 243 565.33 T
( \322apropos text\323) 180 546.33 T
(Find all commands related to text) 243 534.33 T
0 F
(Synopsis:) 99 515.33 T
1 F
(Search the list of commands and command help for all entries containing) 180 515.33 T
(<string>. Lists each command and its synopsis.) 180 502.33 T
0 F
(Notes:) 99 482.33 T
1 F
(<string> may actually be a pattern, as described in the help for the \322string\323) 180 482.33 T
(command \050under \322string match\323\051. It automatically has a leading and) 180 469.33 T
-0.25 (following * tacked onto it to cause it to match anywhere within a help string.) 180 456.33 P
0 F
(See Also:) 99 436.33 T
1 F
(help.) 180 436.33 T
81 419.98 531 424.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 419.98 531 424.99 R
7 X
0 0 0 1 0 0 0 K
V
50 423.98 609.01 423.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 411.98 T
0 F
(aset) 99 411.98 T
0 10 Q
(Usage:) 99 394.32 T
1 F
(aset <array-name> <index> <value>) 180 394.32 T
0 F
(Examples:) 99 374.32 T
1 F
(\322aset foo $i $n\323) 180 354.32 T
(Sets the $i\325) 243 342.32 T
(th element \050counting from zero\051 of the value stored) 293.95 342.32 T
(in the variable foo to $n.) 243 330.32 T
0 F
(Synopsis:) 99 311.32 T
1 F
(Allows you to treat a list stored in a variable as an array) 180 311.32 T
(, setting arbitrary) 440.25 311.32 T
(elements of that array to arbitrary values.) 180 298.32 T
0 F
(Notes:) 99 278.32 T
2 F
(u) 180 258.32 T
1 F
(<array-name> is the name of the variable, not the value of the variable) 198 258.32 T
(to be altered.) 198 246.32 T
2 F
(u) 180 227.32 T
1 F
(This command returns nothing.) 198 227.32 T
2 F
(u) 180 208.32 T
1 F
(The index must be within the bounds of the current value for the) 198 208.32 T
(variable. If it is out of bounds, aset will generate an error) 198 196.32 T
(.) 461.56 196.32 T
0 F
(See Also:) 99 177.32 T
1 F
(index.) 180 177.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "84" 10
%%Page: "85" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(85) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(assoc) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(assoc <list> <key>) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322assoc $classes GenPrimaryClass\323) 180 577.33 T
(Examines the sublists of $classes and returns the \336rst one) 243 565.33 T
(whose \336rst element is the string GenPrimaryClass.) 243 553.33 T
0 F
(Synopsis:) 99 534.33 T
1 F
-0.54 ( Searches an associative list to \336nd an element with a particular key) 180 534.33 P
-0.54 (. The list) 488.91 534.33 P
(is itself made up of lists, each of whose \336rst element is a key) 180 521.33 T
(.) 457.27 521.33 T
0 F
(Notes:) 99 501.33 T
2 F
(u) 180 481.33 T
1 F
( A typical associative list is made of key/value pairs, like this:) 198 481.33 T
( {{<key> <value>} {<key> <value>} ...}) 198 469.33 T
2 F
(u) 180 450.33 T
1 F
-0.83 ( If an element is found whose <key> matches the passed <key>, the entire) 198 450.33 P
(element is returned as the result. If no <key> matches, nil is returned.) 198 438.33 T
0 F
(See Also:) 99 419.33 T
1 F
(car) 180 419.33 T
(, cdr) 193.7 419.33 T
(, range, list, delassoc.) 213.14 419.33 T
81 402.98 531 407.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 402.98 531 407.99 R
7 X
0 0 0 1 0 0 0 K
V
50 406.98 609.01 406.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 394.98 T
0 F
(assign) 99 394.98 T
0 10 Q
(Usage:) 99 377.32 T
1 F
(assign <addr> <value>) 180 377.32 T
0 F
(Examples:) 99 357.32 T
1 F
(\322assign ip ip+2\323) 180 337.32 T
(Add 2 to the value of) 243 325.32 T
1 9 Q
(IP) 341.35 325.32 T
1 10 Q
( in the current frame.) 351.02 325.32 T
( \322assign {word ds:si} 63h\323) 180 306.32 T
(Store 63h in the word at ds:si) 243 294.32 T
0 F
(Synopsis:) 99 275.32 T
1 F
(Performs an assignment to a patient variable or register \050but not to an) 180 275.32 T
(element of the value history\051. The \336rst argument is the variable or register) 180 262.32 T
(to be assigned and the second argument is the value to assign to it \050which) 180 249.32 T
-0.26 (may be a regular address expression\051. If the \336rst expression doesn\325) 180 236.32 P
-0.26 (t indicate) 485.03 236.32 P
(a type, \322word\323 is assumed. Only) 180 223.32 T
3 F
(byte) 329.29 223.32 T
1 F
(,) 351.88 223.32 T
3 F
(word) 357.44 223.32 T
1 F
( or) 384.3 223.32 T
3 F
(dword) 399.3 223.32 T
1 F
( types are supported.) 432.83 223.32 T
0 F
(Notes:) 99 203.32 T
2 F
(u) 180 183.32 T
1 F
-0.27 (When assigning to an sptr) 198 183.32 P
-0.27 (, the value assigned will be the segment of the) 317.69 183.32 P
-0.59 (block indicated by the <value>, unless <value> is an absolute address \050or) 198 171.32 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "85" 11
%%Page: "86" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(86) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(just a number\051, in which case the low 16 bits of the offset will be used) 198 641.33 T
(instead.) 198 629.33 T
2 F
(u) 180 610.33 T
1 F
-0.13 (Similar behavior occurs when assigning to an fptr) 198 610.33 P
-0.13 (, except if the <value>) 426.74 610.33 P
(is an absolute address, in which case the linear address in the offset) 198 598.33 T
(portion of the <value> will be decomposed into a segment and an offset.) 198 586.33 T
0 F
(See Also:) 99 567.33 T
1 F
(imem, value) 180 567.33 T
81 550.99 531 556 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 550.99 531 556 R
7 X
0 0 0 1 0 0 0 K
V
50 554.99 609.01 554.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 542.99 T
0 F
(att) 99 542.99 T
0 10 Q
(Usage:) 99 525.33 T
1 F
(att [<args>]) 180 525.33 T
0 F
(Examples:) 99 505.33 T
1 F
(\322att\323) 180 485.33 T
(attach Swat to) 243 485.33 T
1 9 Q
(GEOS) 313.21 485.33 T
1 10 Q
(.) 339.38 485.33 T
0 F
(Synopsis:) 99 466.33 T
1 F
(Attach Swat to) 180 466.33 T
1 9 Q
(GEOS) 251.87 466.33 T
1 10 Q
(.) 278.04 466.33 T
0 F
(Notes:) 99 446.33 T
1 F
(The args argument can be one of the following:) 180 446.33 T
(-s) 180 426.33 T
(reboot) 243 426.33 T
1 9 Q
(GEOS) 274.67 426.33 T
1 10 Q
( with error checking, attach, and stop) 300.84 426.33 T
(-sn) 180 407.33 T
(reboot) 243 407.33 T
1 9 Q
(GEOS) 274.67 407.33 T
1 10 Q
( without error checking, attach, and stop) 300.84 407.33 T
(-f) 180 388.33 T
(restart) 243 388.33 T
1 9 Q
(GEOS) 277.63 388.33 T
1 10 Q
( with error checking and attach after a pause) 303.8 388.33 T
(-r) 180 369.33 T
(restart) 243 369.33 T
1 9 Q
(GEOS) 277.63 369.33 T
1 10 Q
( with error checking and attach) 303.8 369.33 T
(-rn) 180 350.33 T
(restart) 243 350.33 T
1 9 Q
(GEOS) 277.63 350.33 T
1 10 Q
( without error checking and attach) 303.8 350.33 T
0 F
(See Also:) 99 331.33 T
1 F
(detach, quit.) 180 331.33 T
81 314.98 531 319.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 314.98 531 319.99 R
7 X
0 0 0 1 0 0 0 K
V
50 318.98 609.01 318.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 306.98 T
0 F
(attach) 99 306.98 T
0 10 Q
(Usage:) 99 289.32 T
1 F
(attach [<boot>]) 180 289.32 T
0 F
(Examples:) 99 269.32 T
1 F
(\322attach\323) 180 249.32 T
(attach to the target) 243 249.32 T
1 9 Q
(PC) 335.61 249.32 T
0 10 Q
(Synopsis:) 99 230.32 T
1 F
(Attach swat to the target) 180 230.32 T
1 9 Q
(PC) 298.91 230.32 T
1 10 Q
(.) 311.41 230.32 T
0 F
(Notes:) 99 210.32 T
2 F
(u) 180 190.32 T
1 F
(The boot argument is \322-b\323 to bootstrap and \322+b\323 to not. Normally) 198 190.32 T
(, Swat) 494.31 190.32 T
(will try to read symbolic information about all running geodes;) 198 178.32 T
-0.41 (bootstrapping speci\336es that Swat should only read symbolic information) 198 166.32 P
(for these geodes when it must.) 198 154.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "86" 12
%%Page: "87" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(87) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(If you give no <boot> argument, swat will use the most-recent one.) 198 641.33 T
2 F
(u) 180 622.33 T
1 F
-0.4 (By default, swat will locate the symbols for all geodes and threads active) 198 622.33 P
(on the PC when it attaches.) 198 610.33 T
2 F
(u) 180 591.33 T
1 F
-0.59 (If any geode has changed since you detached from the) 198 591.33 P
1 9 Q
-0.53 (PC) 443.05 591.33 P
1 10 Q
-0.59 (, its symbols are) 455.55 591.33 P
(re-read.) 198 579.33 T
0 F
(See Also:) 99 560.33 T
1 F
(att, detach, quit.) 180 560.33 T
81 543.99 531 549 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 543.99 531 549 R
7 X
0 0 0 1 0 0 0 K
V
50 547.99 609.01 547.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 535.99 T
0 F
(autoload) 99 535.99 T
0 10 Q
(Usage:) 99 518.33 T
1 F
(autoload <function> <\337ags> <\336le> [<class> <docstring>]) 180 518.33 T
0 F
(Examples:) 99 498.33 T
1 F
(\322autoload cycles 1 timing\323) 180 478.33 T
(load the \336le \322timing.tcl\323 when the cycles command is \336rst) 243 466.33 T
(executed. The user must type the command completely) 243 454.33 T
(.) 495.42 454.33 T
(\322autoload print 2 print\323) 180 435.33 T
(load the \336le \322print.tcl\323 when the print command is \336rst) 243 423.33 T
(executed. The user may abbreviate the command and the T) 243 411.33 T
(cl) 516.12 411.33 T
(interpreter will not evaluate its arguments.) 243 399.33 T
0 F
(Synopsis:) 99 380.33 T
1 F
(This command allows the \336rst invocation of a command to automatically) 180 380.33 T
(force the transparent reading of a \336le of T) 180 367.33 T
(cl commands.) 372.53 367.33 T
0 F
(Notes:) 99 347.33 T
2 F
(u) 180 327.33 T
1 F
-0.29 (autoload takes 3 or 5 arguments: the command, an integer with bit \337ags) 198 327.33 P
(telling how the interpreter should invoke the command, the \336le that) 198 315.33 T
(should be read to de\336ne the command \050this may be absolute or on) 198 303.33 T
(load-path\051 and an optional help class and string for the command.) 198 291.33 T
2 F
(u) 180 272.33 T
1 F
(The help class and string need only be given if the \336le to be loaded isn\325) 198 272.33 T
(t) 523.06 272.33 T
(part of the system library \050doesn\325) 198 260.33 T
(t have its help strings extracted when) 350.61 260.33 T
(Swat is built\051.) 198 248.33 T
2 F
(u) 180 229.33 T
1 F
(The <\337ags> argument has the following bit-\337ags:) 198 229.33 T
(0) 180 210.33 T
(User must type the command\325) 243 210.33 T
(s name exactly) 381.16 210.33 T
(. The command) 448.58 210.33 T
-0.47 (will be de\336ned by \322defsubr\323 or \322defdsubr\323 when <\336le> is loaded.) 243 198.33 P
(1) 180 179.33 T
(The interpreter will not evaluate arguments passed to the) 243 179.33 T
(command. All arguments will be merged into a single string) 243 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "87" 13
%%Page: "88" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(88) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(and passed to the command as one argument. The command) 243 641.33 T
(will use the special \322noeval\323 argument when it is de\336ned.) 243 629.33 T
0 F
(See Also:) 99 610.33 T
1 F
(defsubr) 180 610.33 T
(, defdsubr) 214.07 610.33 T
(, defcommand, proc.) 259.44 610.33 T
81 593.99 531 599 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 593.99 531 599 R
7 X
0 0 0 1 0 0 0 K
V
50 597.99 609.01 597.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 585.99 T
0 F
(backtrace) 99 585.99 T
0 10 Q
(Usage:) 99 568.33 T
1 F
(backtrace [-r<reg>* ][<frames to list>]) 180 568.33 T
0 F
(Examples:) 99 548.33 T
1 F
(\322backtrace\323) 180 528.33 T
(print all the frames in the patient) 243 528.33 T
(\322backtrace -rax\323) 180 509.33 T
(print all the frames and the contents of AX in each one.) 243 497.33 T
(\322where 5\323) 180 478.33 T
(print the last \336ve frames) 243 478.33 T
(\322w 5\323) 180 459.33 T
(print the last \336ve frames) 243 459.33 T
0 F
(Synopsis:) 99 440.33 T
1 F
(Print all the active stack frames for the patient.) 180 440.33 T
0 F
(Notes:) 99 420.33 T
2 F
(u) 180 400.33 T
1 F
(The <frames to list> argument is the number of frames to print. If not) 198 400.33 T
(speci\336ed, then all are printed.) 198 388.33 T
2 F
(u) 180 369.33 T
1 F
(If a numeric argument is not passed to backtrace then it attempts to) 198 369.33 T
(display method calls in the form:) 198 357.33 T
6 F
(        MSG_NAME\050cx, dx, bp\051 => className \050^l####h:####h\051) 180 338.33 T
1 F
(      Here <cx>, <dx>, and <bp> are the values passed in these registers.) 198 318.33 T
(<className> is the name of the class which handled the message.) 198 306.33 T
(^l####h:####h is the address of the object \050block, chunk handle\051) 198 294.33 T
(handling the message.) 198 282.33 T
2 F
(u) 180 263.33 T
1 F
-0.4 (If a numeric argument is passed to backtrace then the attempt to decode) 198 263.33 P
(the message is not done and the single line above expands into:) 198 251.33 T
6 9 Q
( far ProcCallModuleRoutine\050\051, geodesResource.asm:476) 212.5 237.99 T
( near ObjCallMethodTable\050\051, objectClass.asm:1224) 212.5 226.99 T
1 10 Q
(      This is generally less useful, but sometimes it\325) 198 208.33 T
(s what you need.) 427.5 208.33 T
0 F
(See Also:) 99 189.33 T
1 F
(up, down, func, where.) 180 189.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "88" 14
%%Page: "89" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(89) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(bindings) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(bindings) 180 617.33 T
0 F
(Synopsis:) 99 597.33 T
1 F
(Shows all current key bindings) 180 597.33 T
81 580.98 531 585.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 580.98 531 585.99 R
7 X
0 0 0 1 0 0 0 K
V
50 584.98 609.01 584.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 572.98 T
0 F
(bind-key) 99 572.98 T
0 10 Q
(Usage:) 99 555.32 T
1 F
(bind-key <ascii_value> <function>) 180 555.32 T
0 F
(Examples:) 99 535.32 T
1 F
(\322bind-key \134321 scroll_srcwin_down\323) 180 515.32 T
(Binds scroll-down key to the scroll_srcwin_down T) 243 503.32 T
(cl routine.) 475.34 503.32 T
0 F
(Synopsis:) 99 484.32 T
1 F
(Binds an) 180 484.32 T
1 9 Q
(ASCII) 224.08 484.32 T
1 10 Q
( value to a function.) 250.07 484.32 T
0 F
(See Also:) 99 464.32 T
1 F
(alias, unbind-key) 180 464.32 T
(.) 258.91 464.32 T
81 447.98 531 452.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 447.98 531 452.98 R
7 X
0 0 0 1 0 0 0 K
V
50 451.98 609.01 451.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 439.98 T
0 F
(break) 99 439.98 T
1 F
(This is a T) 163.88 439.98 T
(cl primitive. See \322T) 221.6 439.98 T
(ool Command Language,\323 Chapter) 326.52 439.98 T
(5.) 520.99 439.98 T
81 425.97 531 430.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 425.97 531 430.98 R
7 X
0 0 0 1 0 0 0 K
V
50 429.97 609.01 429.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 417.97 T
0 F
(break-taken) 99 417.97 T
0 10 Q
(Usage:) 99 400.3 T
1 F
(break-taken [<\337ag>]) 180 400.3 T
0 F
(Examples:) 99 380.3 T
1 F
(\322break-taken\323) 180 360.3 T
(Returns 1 if the machine stopped because of a breakpoint.) 243 348.3 T
(\322break-taken 0\323) 180 329.3 T
(Specify that no breakpoint was actually taken to stop the) 243 317.3 T
(machine.) 243 305.3 T
0 F
(Synopsis:) 99 286.3 T
1 F
(Obscure. This is used to determine if the machine stopped because a) 180 286.3 T
(breakpoint was hit and taken.) 180 273.3 T
0 F
(Notes:) 99 253.3 T
1 F
(Setting the) 180 253.3 T
3 F
(break-taken) 234.27 253.3 T
1 F
( \337ag is a rather obscure operation. It is useful) 297.42 253.3 T
(primarily in complex commands that single-step the machine until a) 180 240.3 T
(particular address is reached, or a breakpoint is taken when a breakpoint) 180 227.3 T
-0.42 (must be used to skip over a procedure call, or condense multiple iterations of) 180 214.3 P
(an instruction with a) 180 201.3 T
1 9 Q
(REP) 280.2 201.3 T
1 10 Q
( pre\336x into 1. For an example of this use, refer to) 299.2 201.3 T
(the \322cycles\323 command.) 180 188.3 T
0 F
(See Also:) 99 168.3 T
1 F
(brk, irq.) 180 168.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "89" 15
%%Page: "90" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(90) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(brk) 99 634.99 T
1 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
0 F
(brkload) 99 612.98 T
0 10 Q
(Usage:) 99 595.32 T
1 F
(brkload [<handle>]) 180 595.32 T
0 F
(Examples:) 99 575.32 T
1 F
(\322brkload Interface\323) 180 555.32 T
(Stop the machine when the Interface resource is loaded or) 243 543.32 T
(swapped in.) 243 531.32 T
( \322brkload bx\323) 180 512.32 T
-0.13 (Stop the machine when the resource whose handle ID is in) 243 512.32 P
1 9 Q
-0.11 (BX) 515.51 512.32 P
1 10 Q
(is loaded or swapped in.) 243 500.32 T
( \322brkload\323) 180 481.32 T
(Stop watching for the previously-speci\336ed resource to be) 243 481.32 T
(loaded.) 243 469.32 T
0 F
(Synopsis:) 99 450.32 T
1 F
(Stop the machine when a particular resource is loaded into memory) 180 450.32 T
(.) 491.69 450.32 T
0 F
(Notes:) 99 430.32 T
2 F
(u) 180 410.32 T
1 F
(Only one brkload may be active at a time; registering a second one) 198 410.32 T
(automatically unregisters the \336rst.) 198 398.32 T
2 F
(u) 180 379.32 T
1 F
(If you give no <handle> argument, the previously-set brkload will be) 198 379.32 T
(unregistered.) 198 367.32 T
0 F
(See Also:) 99 348.32 T
1 F
(handle.) 180 348.32 T
81 331.98 531 336.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 331.98 531 336.98 R
7 X
0 0 0 1 0 0 0 K
V
50 335.98 609.01 335.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 323.98 T
0 F
(byteAsChar) 99 323.98 T
0 10 Q
(Usage:) 99 306.31 T
1 F
(var byteAsChar [\0500|1\051]) 180 306.31 T
0 F
(Examples:) 99 286.31 T
1 F
(\322var byteAsChar 1\323) 180 266.31 T
(Print byte variables as characters.) 243 254.31 T
0 F
(Synopsis:) 99 235.31 T
1 F
(Determines how unsigned character variables are printed: if set non-zero,) 180 235.31 T
(they are displayed as characters, else they are treated as unsigned integers.) 180 222.31 T
0 F
(Notes:) 99 202.31 T
2 F
(u) 180 182.31 T
1 F
(If $) 198 182.31 T
4 F
(byteAsChar) 213.74 182.31 T
1 F
( is 0, $intFormat is used.) 267.25 182.31 T
2 F
(u) 180 163.31 T
1 F
(The default value for this variable is 0.) 198 163.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "90" 16
%%Page: "91" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(91) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(bytes) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(bytes [<address>] [<length>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322bytes\323) 180 577.33 T
(lists 16 bytes at) 243 577.33 T
1 9 Q
(DS:SI) 318.59 577.33 T
1 10 Q
(\322bytes ds:di 32\323) 180 558.33 T
(lists 32 bytes at) 243 546.33 T
1 9 Q
(DS:SI) 318.59 546.33 T
0 10 Q
(Synopsis:) 99 527.33 T
1 F
(Examine memory as a dump of bytes and characters.) 180 527.33 T
0 F
(Notes:) 99 507.33 T
2 F
(u) 180 487.33 T
1 F
-0.05 (The <address> argument is the address to examine. If not speci\336ed, the) 198 487.33 P
(address after the last examined memory location is used. If no address) 198 475.33 T
(has been examined then) 198 463.33 T
1 9 Q
(DS:SI) 313.02 463.33 T
1 10 Q
( is used for the address.) 337.53 463.33 T
2 F
(u) 180 444.33 T
1 F
-0.36 (The <length> argument is the number of bytes to examine. It defaults to) 198 444.33 P
(16.) 198 432.33 T
2 F
(u) 180 413.33 T
1 F
(Pressing <Return> after this command continues the list.) 198 413.33 T
2 F
(u) 180 394.33 T
1 F
-0.02 (Characters which are not typical) 198 394.33 P
1 9 Q
-0.02 (ASCII) 351.96 394.33 P
1 10 Q
-0.02 ( values are displayed as a period.) 377.96 394.33 P
0 F
(See Also:) 99 375.33 T
1 F
(words, dwords, imem, assign.) 180 375.33 T
81 358.98 531 363.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 358.98 531 363.99 R
7 X
0 0 0 1 0 0 0 K
V
50 362.98 609.01 362.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 350.98 T
0 F
(cache) 99 350.98 T
1 10 Q
(This is a T) 180 333.32 T
(cl primitive. See page 306.) 228.1 333.32 T
81 316.98 531 321.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 316.98 531 321.98 R
7 X
0 0 0 1 0 0 0 K
V
50 320.98 609.01 320.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 308.98 T
0 F
(call) 99 308.98 T
0 10 Q
(Usage:) 99 291.31 T
1 F
(call <function> [<function args>]) 180 291.31 T
0 F
(Examples:) 99 271.31 T
1 F
(\322call MyFunc\323) 180 271.31 T
(\323call MyDraw ax 1 bx 1 cx 10h dx 10h\323) 180 258.31 T
(\322call FindArea box.bottom 5 box.right 5 push box\323\325) 180 245.31 T
0 F
(Synopsis:) 99 225.31 T
1 F
(Call a function in the current thread.) 180 225.31 T
0 F
(Notes:) 99 205.31 T
2 F
(u) 180 185.31 T
1 F
-0.27 (The <function> argument is the function to call. If it is a) 198 185.31 P
1 9 Q
-0.24 (NEAR) 458.23 185.31 P
1 10 Q
-0.27 ( function,) 485.05 185.31 P
(the thread must already be executing in the function\325) 198 173.31 T
(s segment.) 443.39 173.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "91" 17
%%Page: "92" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(92) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.2 (The function arguments are in pairs <variable/register> <value>. These) 198 641.33 P
(pairs are passed to the \322assign\323 command. As a special case, if the) 198 629.33 T
(variable is \322push\323, the value \050a word\051 is pushed onto the stack and is) 198 617.33 T
(popped when the call \336nishes \050if it completes successfully\051.) 198 605.33 T
2 F
(u) 180 586.33 T
1 F
(All current registers are preserved and restored when the call is) 198 586.33 T
(complete. V) 198 574.33 T
(ariables are not.) 250.97 574.33 T
2 F
(u) 180 555.33 T
1 F
-0.31 (Once the call has completed, you are left in a sub-interpreter to examine) 198 555.33 P
(the state of the machine. T) 198 543.33 T
(ype \322break\323 to get back to the top level.) 321.39 543.33 T
2 F
(u) 180 524.33 T
1 F
-0.09 (If the machine stops for any other reason than the call\325) 198 524.33 P
-0.09 (s completion, the) 450.13 524.33 P
(saved register state is discarded and you are left wherever the machine) 198 512.33 T
-0.82 (stopped. Y) 198 500.33 P
-0.82 (ou will not be able to get a stack trace above the called function,) 244.41 500.33 P
-0.08 (but if the call eventually completes, and no registers have actually been) 198 488.33 P
(modi\336ed, things will get back on track.) 198 476.33 T
2 F
(u) 180 457.33 T
1 F
(Y) 198 457.33 T
(ou may not call a function from a thread that has retreated into the) 203.93 457.33 T
(kernel. This function also will not allow you to call) 198 445.33 T
3 F
(ThreadExit\050\051) 433.79 445.33 T
1 F
(. Use) 501.01 445.33 T
(the \322exit\323 function to do that.) 198 433.33 T
0 F
(See Also:) 99 414.33 T
1 F
(assign, call-patient, patch.) 180 414.33 T
81 397.99 531 403 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 397.99 531 403 R
7 X
0 0 0 1 0 0 0 K
V
50 401.99 609.01 401.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 389.99 T
0 F
(call-patient) 99 389.99 T
0 10 Q
(Usage:) 99 372.33 T
1 F
(call-patient <function> \050\050<reg>|push\051 <value>\051*) 180 372.33 T
0 F
(Examples:) 99 352.33 T
1 F
(\322call-patient MemLock bx $h\323) 180 332.33 T
(Locks down the block whose handle ID is in $h.) 243 320.33 T
0 F
(Synopsis:) 99 301.33 T
1 F
-0.81 (This is a utility routine, not intended for use from the command line, that will) 180 301.33 P
(call a routine in the PC after setting registers to or pushing certain values.) 180 288.33 T
0 F
(Notes:) 99 268.33 T
2 F
(u) 180 248.33 T
1 F
(Returns non-zero if the call completed successfully) 198 248.33 T
(.) 430.39 248.33 T
2 F
(u) 180 229.33 T
1 F
-0.69 (If the call is successful, the registers re\337ect the state of the machine upon) 198 229.33 P
-0.03 (return from the called routine. The previous machine state is preserved) 198 217.33 P
(and can be retrieved, by invoking restore-state, or thrown away) 198 205.33 T
(, by) 490.44 205.33 T
(invoking discard-state. The caller) 198 193.33 T
4 F
(must) 355.61 193.33 T
1 F
( invoke one of these to clean up.) 378.57 193.33 T
2 F
(u) 180 174.33 T
1 F
(Arguments after <function> are as for \322call\323.) 198 174.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "92" 18
%%Page: "93" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(93) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(If the called routine is in movable memory) 198 641.33 T
(, this will lock the containing) 392.65 641.33 T
(block down before issuing the call, as you\325d expect.) 198 629.33 T
2 F
(u) 180 610.33 T
1 F
-0.28 (Calling anything that makes message calls while on the geos:0 thread is) 198 610.33 P
(a hazardous undertaking at best.) 198 598.33 T
0 F
(See Also:) 99 579.33 T
1 F
(call.) 180 579.33 T
81 562.99 531 568 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 562.99 531 568 R
7 X
0 0 0 1 0 0 0 K
V
50 566.99 609.01 566.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 554.99 T
0 F
(car) 99 554.99 T
0 10 Q
(Usage:) 99 537.33 T
1 F
(car <list>) 180 537.33 T
0 F
(Examples:) 99 517.33 T
1 F
(\322car $args\323) 180 497.33 T
(Returns the \336rst element of $args.) 243 497.33 T
0 F
(Synopsis:) 99 478.33 T
1 F
(Returns the \336rst element of a list.) 180 478.33 T
0 F
(Notes:) 99 458.33 T
1 F
(This is a lisp-ism for those most comfortable with that language. It can be) 180 458.33 T
(more-ef\336ciently implemented by saying [index <list> 0]) 180 445.33 T
0 F
(See Also:) 99 425.33 T
1 F
(cdr) 180 425.33 T
(.) 193.88 425.33 T
81 408.98 531 413.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 408.98 531 413.99 R
7 X
0 0 0 1 0 0 0 K
V
50 412.98 609.01 412.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 400.98 T
0 F
(case) 99 400.98 T
1 F
(This is a T) 163.88 400.98 T
(cl primitive. See \322T) 221.6 400.98 T
(ool Command Language,\323 Chapter) 326.52 400.98 T
(5.) 520.99 400.98 T
81 386.98 531 391.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 386.98 531 391.98 R
7 X
0 0 0 1 0 0 0 K
V
50 390.98 609.01 390.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 378.98 T
0 F
(catch) 99 378.98 T
1 F
(This is a T) 163.88 378.98 T
(cl primitive. See \322T) 221.6 378.98 T
(ool Command Language,\323 Chapter) 326.52 378.98 T
(5.) 520.99 378.98 T
81 364.97 531 369.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 364.97 531 369.98 R
7 X
0 0 0 1 0 0 0 K
V
50 368.97 609.01 368.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 356.97 T
0 F
(cbrk) 99 356.97 T
1 F
(This is a T) 163.88 356.97 T
(cl primitive. See \322T) 221.6 356.97 T
(ool Command Language,\323 Chapter) 326.52 356.97 T
(5.) 520.99 356.97 T
81 342.96 531 347.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 342.96 531 347.97 R
7 X
0 0 0 1 0 0 0 K
V
50 346.96 609.01 346.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 334.96 T
0 F
(cdr) 99 334.96 T
0 10 Q
(Usage:) 99 317.29 T
1 F
(cdr <list>) 180 317.29 T
0 F
(Examples:) 99 297.29 T
1 F
(\322cdr $args\323) 180 277.29 T
(Returns the remaining arguments yet to be processed.) 243 277.29 T
0 F
(Synopsis:) 99 258.29 T
1 F
(Returns all but the \336rst element of a list.) 180 258.29 T
0 F
(Notes:) 99 238.29 T
1 F
(This is a lisp-ism for those most comfortable with that language. It can be) 180 238.29 T
(more-ef\336ciently implemented by saying [range <list> 1 end]) 180 225.29 T
0 F
(See Also:) 99 205.29 T
1 F
(car) 180 205.29 T
(.) 193.7 205.29 T
81 188.95 531 193.96 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 188.95 531 193.96 R
7 X
0 0 0 1 0 0 0 K
V
50 192.95 609.01 192.95 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 180.95 T
0 F
(classes) 99 180.95 T
0 10 Q
(Usage:) 99 163.28 T
1 F
(classes [<patient>]) 180 163.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "93" 19
%%Page: "94" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(94) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Examples:) 99 641.33 T
1 F
(\322classes \323) 180 621.33 T
(Print list of classes in current patient.) 243 621.33 T
(\322classes myapp\323) 180 602.33 T
(Print list of classes in myapp patient.) 243 590.33 T
0 F
(Synopsis:) 99 571.33 T
1 F
(Prints list of classes de\336ned by the given patient.) 180 571.33 T
0 F
(Notes:) 99 551.33 T
1 F
(Remember that \322brk\323 will take address arguments of the form) 180 551.33 T
-0.21 (<class>::<message>, so you can use this function and set a breakpoint using) 180 538.33 P
(\322brk MyT) 180 525.33 T
(extClass::) 223.16 525.33 T
1 9 Q
(MSG_MY_TEXT_MESSAGE) 268.17 525.33 T
1 10 Q
(\323. If you need a breakpoint) 388.84 525.33 T
(that\325) 180 512.33 T
(s limited to one object, use objbrk instead.) 201.12 512.33 T
81 495.99 531 501 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 495.99 531 501 R
7 X
0 0 0 1 0 0 0 K
V
50 499.99 609.01 499.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 487.99 T
0 F
(clrcc) 99 487.99 T
0 10 Q
(Usage:) 99 470.33 T
1 F
(clrcc <\337ag> [<value>]) 180 470.33 T
0 F
(Examples:) 99 450.33 T
1 F
(\322clrcc c\323) 180 430.33 T
(clear the carry \337ag) 243 430.33 T
0 F
(Synopsis:) 99 411.33 T
1 F
(Clear a \337ag in the target computer) 180 411.33 T
(.) 339.83 411.33 T
0 F
(Notes:) 99 391.33 T
1 F
-0.44 (The \336rst argument is the \336rst letter of the \337ag to clear) 180 391.33 P
-0.44 (. The following is a list) 426.23 391.33 P
(of the \337ags:) 180 378.33 T
3 F
(t) 180 365.33 T
1 F
(trap) 252 365.33 T
3 F
(i) 180 352.33 T
1 F
(interrupt enable) 252 352.33 T
3 F
(d) 180 339.33 T
1 F
(direction) 252 339.33 T
3 F
(o) 180 326.33 T
1 F
(over\337ow) 252 326.33 T
3 F
(s) 180 313.33 T
1 F
(sign) 252 313.33 T
3 F
(z) 180 300.33 T
1 F
(zero) 252 300.33 T
3 F
(a) 180 287.33 T
1 F
(auxiliary carry) 252 287.33 T
3 F
(p) 180 274.33 T
1 F
(parity) 252 274.33 T
3 F
(c) 180 261.33 T
1 F
(carry) 252 261.33 T
0 F
(See Also:) 99 241.33 T
1 F
(setcc, compcc, getcc.) 180 241.33 T
81 224.98 531 229.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 224.98 531 229.99 R
7 X
0 0 0 1 0 0 0 K
V
50 228.98 609.01 228.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 216.98 T
0 F
(columns) 99 216.98 T
0 10 Q
(Usage:) 99 199.32 T
1 F
(columns) 180 199.32 T
0 F
(Examples:) 99 179.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "94" 20
%%Page: "95" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(95) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322columns\323) 180 641.33 T
(Return the number of columns on the screen.) 243 629.33 T
0 F
(Synopsis:) 99 610.33 T
1 F
-0.71 (Retrieves the width of the screen, if known, to allow various commands \050most) 180 610.33 P
(notably \322print\323\051 to size their output accordingly) 180 597.33 T
(.) 397.23 597.33 T
81 580.99 531 586 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 580.99 531 586 R
7 X
0 0 0 1 0 0 0 K
V
50 584.99 609.01 584.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 572.99 T
0 F
(compcc) 99 572.99 T
0 10 Q
(Usage:) 99 555.33 T
1 F
(compcc <\337ag>) 180 555.33 T
0 F
(Examples:) 99 535.33 T
1 F
(\322compcc c\323) 180 515.33 T
(complement the carry \337ag) 243 515.33 T
0 F
(Synopsis:) 99 496.33 T
1 F
(Complement a \337ag in the target computer) 180 496.33 T
(.) 373.35 496.33 T
0 F
(Notes:) 99 476.33 T
1 F
-0.38 (The \336rst argument is the \336rst letter of the \337ag to complement. The following) 180 476.33 P
(is a list of the \337ags:) 180 463.33 T
3 F
(t) 180 450.33 T
1 F
(trap) 252 450.33 T
3 F
(i) 180 437.33 T
1 F
(interrupt enable) 252 437.33 T
3 F
(d) 180 424.33 T
1 F
(direction) 252 424.33 T
3 F
(o) 180 411.33 T
1 F
(over\337ow) 252 411.33 T
3 F
(s) 180 398.33 T
1 F
(sign) 252 398.33 T
3 F
(z) 180 385.33 T
1 F
(zero) 252 385.33 T
3 F
(a) 180 372.33 T
1 F
(auxiliary carry) 252 372.33 T
3 F
(p) 180 359.33 T
1 F
(parity) 252 359.33 T
3 F
(c) 180 346.33 T
1 F
(carry) 252 346.33 T
(This command is handy to insert in a patch to \337ip a \337ag bit.) 180 333.33 T
0 F
(See Also:) 99 313.33 T
1 F
(setcc, clrcc.) 180 313.33 T
81 296.98 531 301.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 296.98 531 301.99 R
7 X
0 0 0 1 0 0 0 K
V
50 300.98 609.01 300.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 288.98 T
0 F
(completion) 99 288.98 T
0 10 Q
(Usage:) 99 271.32 T
1 F
(completion <list-of-names>) 180 271.32 T
0 F
(Examples:) 99 251.32 T
1 F
(\322completion {martial marital}\323) 180 231.32 T
(Returns \322mar) 243 219.32 T
(,\323 the common pre\336x.) 305.22 219.32 T
0 F
(Synopsis:) 99 200.32 T
1 F
(Figures the common pre\336x from a set of strings. Used for the various forms) 180 200.32 T
(of completion supported by top-level-read.) 180 187.32 T
0 F
(See Also:) 99 167.32 T
1 F
(top-level-read.) 180 167.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "95" 21
%%Page: "96" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(96) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(concat) 99 634.99 T
1 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
0 F
(condenseSmall) 99 612.98 T
0 10 Q
(Usage:) 99 595.32 T
1 F
(var condenseSmall [\0500|1\051]) 180 595.32 T
0 F
(Examples:) 99 575.32 T
1 F
(\322var condenseSpecial 0\323) 180 555.32 T
(Force even small structures to be printed one \336eld per line.) 243 543.32 T
0 F
(Synopsis:) 99 524.32 T
1 F
-0.08 (Controls whether \322print\323 attempts to condense the output by printing small) 180 524.32 P
-0.19 (\050< 4 bytes\051 structures \050which are usually records in assembly language\051 as a) 180 511.32 P
-0.55 (list of <name> = <int>, where <name> is the \336eld name and <int> is a signed) 180 498.32 P
(integer) 180 485.32 T
(.) 212.22 485.32 T
0 F
(Notes:) 99 465.32 T
1 F
(The default value of this variable is one.) 180 465.32 T
0 F
(See Also:) 99 445.32 T
1 F
(print, condenseSpecial.) 180 445.32 T
81 428.98 531 433.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 428.98 531 433.98 R
7 X
0 0 0 1 0 0 0 K
V
50 432.98 609.01 432.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 420.98 T
0 F
(condenseSpecial) 99 420.98 T
0 10 Q
(Usage:) 99 403.31 T
1 F
(var condenseSpecial [\0500|1\051]) 180 403.31 T
0 F
(Examples:) 99 383.31 T
1 F
(\322var condenseSpecial 0\323) 180 363.31 T
(T) 243 351.31 T
(urns off the special formatting of various types of structures) 248.96 351.31 T
(by \322print\323.) 243 339.31 T
0 F
(Synopsis:) 99 320.31 T
1 F
-0.72 (Controls the formatting of certain structures in more-intuitive ways than the) 180 320.31 P
(bare structure \336elds.) 180 307.31 T
0 F
(Notes:) 99 287.31 T
2 F
(u) 180 267.31 T
1 F
(The default value of this variable is 1.) 198 267.31 T
2 F
(u) 180 248.31 T
1 F
(The current list of structures treated specially are:) 198 248.31 T
3 F
(Semaphore) 434.67 248.31 T
1 F
(,) 493.38 248.31 T
3 F
(Rectangle) 198 236.31 T
1 F
(, Output Descriptor) 250.04 236.31 T
(,) 339.67 236.31 T
3 F
(TMatrix) 345.23 236.31 T
1 F
(,) 387.63 236.31 T
3 F
(BBFixed) 393.19 236.31 T
1 F
(,) 438.19 236.31 T
3 F
(WBFixed) 443.75 236.31 T
1 F
(,) 490.78 236.31 T
3 F
(WWFixed) 198 224.31 T
1 F
(,) 247.06 224.31 T
3 F
(DWFixed) 252.62 224.31 T
1 F
(,) 300.2 224.31 T
3 F
(WDFixed) 305.76 224.31 T
1 F
(,) 353.34 224.31 T
3 F
(DDFixed) 358.9 224.31 T
1 F
(,) 405 224.31 T
3 F
(FileDate) 410.56 224.31 T
1 F
(,) 455.18 224.31 T
3 F
(FileT) 460.74 224.31 T
(ime) 487.89 224.31 T
1 F
(,) 506.96 224.31 T
3 F
(FloatNum) 198 212.31 T
1 F
(,) 250.03 212.31 T
3 F
(SpecW) 255.59 212.31 T
(inSizeSpec) 289.67 212.31 T
1 F
(.) 346.34 212.31 T
0 F
(See Also:) 99 193.31 T
1 F
(print, condenseSmall.) 180 193.31 T
81 176.97 531 181.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 176.97 531 181.97 R
7 X
0 0 0 1 0 0 0 K
V
50 180.97 609.01 180.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 168.97 T
0 F
(cont) 99 168.97 T
0 10 Q
(Usage:) 99 151.3 T
1 F
(cont) 180 151.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "96" 22
%%Page: "97" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(97) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Examples:) 99 641.33 T
1 F
(\322cont\323) 180 621.33 T
(continue execution) 243 621.33 T
(\322c\323) 180 602.33 T
(continue execution) 243 602.33 T
0 F
(Synopsis:) 99 583.33 T
1 F
(Continue) 180 583.33 T
1 9 Q
(GEOS) 225.37 583.33 T
1 10 Q
(.) 251.54 583.33 T
0 F
(Notes:) 99 563.33 T
2 F
(u) 180 543.33 T
1 F
-0.54 (If the global variable) 198 543.33 P
4 F
-0.54 (waitForPatient) 294.95 543.33 P
1 F
-0.54 ( is non-zero, this command waits for) 364.76 543.33 P
(the machine to stop again before it returns.) 198 531.33 T
0 F
(See Also:) 99 512.33 T
1 F
(go, istep, step, next, detach, quit.) 180 512.33 T
81 495.99 531 501 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 495.99 531 501 R
7 X
0 0 0 1 0 0 0 K
V
50 499.99 609.01 499.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 487.99 T
0 F
(content) 99 487.99 T
0 10 Q
(Usage:) 99 470.33 T
1 F
(content) 180 470.33 T
0 F
(Examples:) 99 450.33 T
1 F
(\322vistree [content]\323) 180 430.33 T
( print the visual tree of the content of the view under the) 243 418.33 T
(mouse.) 243 406.33 T
0 F
(Synopsis:) 99 387.33 T
1 F
(Print the address of the content under the view with the current implied) 180 387.33 T
(grab.) 180 374.33 T
0 F
(Notes:) 99 354.33 T
2 F
(u) 180 334.33 T
1 F
(This command is normally used with vistree to get the visual tree of a) 198 334.33 T
(content by placing the mouse on the content\325) 198 322.33 T
(s view window and issuing) 403.2 322.33 T
(the command in the example.) 198 310.33 T
2 F
(u) 180 291.33 T
1 F
(If the pointer is not over a GenV) 198 291.33 T
(iew object, this is the same as the) 347.01 291.33 T
(\322impliedgrab\323 command.) 198 279.33 T
0 F
(See Also:) 99 260.33 T
1 F
(systemobj, gentree, impliedgrab.) 180 260.33 T
81 243.98 531 248.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 243.98 531 248.99 R
7 X
0 0 0 1 0 0 0 K
V
50 247.98 609.01 247.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 235.98 T
0 F
(continue) 99 235.98 T
1 F
(This is a T) 163.88 235.98 T
(cl primitive. See \322T) 221.6 235.98 T
(ool Command Language,\323 Chapter) 326.52 235.98 T
(5.) 520.99 235.98 T
81 221.98 531 226.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 221.98 531 226.98 R
7 X
0 0 0 1 0 0 0 K
V
50 225.98 609.01 225.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 213.97 T
0 F
(continue-patient) 99 213.97 T
0 10 Q
(Usage:) 99 196.31 T
1 F
(continue-patient) 180 196.31 T
0 F
(Examples:) 99 176.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "97" 23
%%Page: "98" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(98) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322continue-patient\323) 180 641.33 T
(Allow the target machine to continue executing) 243 629.33 T
1 9 Q
(GEOS) 464.31 629.33 T
1 10 Q
(.) 490.48 629.33 T
0 F
(Synopsis:) 99 610.33 T
1 F
(T) 180 610.33 T
(ell the Swat stub to let the target machine continue where it left off.) 185.75 610.33 T
0 F
(Notes:) 99 590.33 T
1 F
-0.18 (This command does not wait for the machine to stop again before it returns;) 180 590.33 P
(once the machine is running, you\325re free to do whatever you want, whether) 180 577.33 T
(it\325) 180 564.33 T
(s calling \322wait\323 or examining memory periodically) 188.71 564.33 T
(.) 417.63 564.33 T
0 F
(See Also:) 99 544.33 T
1 F
(step-patient.) 180 544.33 T
81 527.99 531 533 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 527.99 531 533 R
7 X
0 0 0 1 0 0 0 K
V
50 531.99 609.01 531.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 519.99 T
0 F
(cup) 99 519.99 T
0 10 Q
(Usage:) 99 502.33 T
1 F
(cup <class>) 180 502.33 T
(cup <object>) 180 489.33 T
(cup <\337ags>) 180 476.33 T
0 F
(Examples:) 99 456.33 T
1 F
(\322cup ui::GenDocumentControlClass\323) 180 436.33 T
(Print class hierarchy of named class) 243 424.33 T
(\322cup ^l2850h:0034h\323) 180 405.33 T
(Print class hierarchy of object) 243 393.33 T
(\322cup -f\323) 180 374.33 T
(Print class hierarchy of focus object) 243 374.33 T
(\322cup -p\323) 180 355.33 T
(Print class hierarchy of process) 243 355.33 T
0 F
(Synopsis:) 99 336.33 T
1 F
(W) 180 336.33 T
(alks up the class hierarchy) 189.07 336.33 T
(, starting at a given class, printing each class) 312.23 336.33 T
(encountered. May be passed an object, in which case the class of the object) 180 323.33 T
(will be used as a starting place.) 180 310.33 T
81 293.98 531 298.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 293.98 531 298.99 R
7 X
0 0 0 1 0 0 0 K
V
50 297.98 609.01 297.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 285.98 T
0 F
(current-level) 99 285.98 T
0 10 Q
(Usage:) 99 268.32 T
1 F
(current-level) 180 268.32 T
0 F
(Examples:) 99 248.32 T
1 F
(\322var l [current-level]\323) 180 228.32 T
(Store the current interpreter nesting level in $l.) 243 216.32 T
0 F
(Synopsis:) 99 197.32 T
1 F
(Returns the number of invocations of \322top-level\323 \050i.e. the main command) 180 197.32 T
(input loop\051 currently active.) 180 184.32 T
0 F
(Notes:) 99 164.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "98" 24
%%Page: "99" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(99) 546.88 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.78 (This is currently used only to modify the command prompt to indicate the) 198 641.33 P
(current nesting level.) 198 629.33 T
2 F
(u) 180 610.33 T
1 F
(The top-most command loop is level one.) 198 610.33 T
0 F
(See Also:) 99 591.33 T
1 F
(prompt, top-level.) 180 591.33 T
81 574.99 531 580 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 574.99 531 580 R
7 X
0 0 0 1 0 0 0 K
V
50 578.99 609.01 578.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 566.99 T
0 F
(current-registers) 99 566.99 T
0 10 Q
(Usage:) 99 549.33 T
1 F
(current-registers) 180 549.33 T
0 F
(Examples:) 99 529.33 T
1 F
(\322current-registers\323) 180 509.33 T
(Returns a list of the current registers for the current thread.) 243 497.33 T
0 F
(Synopsis:) 99 478.33 T
1 F
-0.09 (Returns all the registers for the current thread as a list of decimal numbers.) 180 478.33 P
0 F
(Notes:) 99 458.33 T
2 F
(u) 180 438.33 T
1 F
-0.08 (The mapping from element number to register name is contained in the) 198 438.33 P
-0.54 (global variable \322regnums\323, which is an assoc-list whose elements contain) 198 426.33 P
(the name of the register) 198 414.33 T
(, then the element number) 308.19 414.33 T
(.) 430.61 414.33 T
2 F
(u) 180 395.33 T
1 F
-0.35 (For your own consumption, the list is ordered ax, cx, dx, bx, sp, bp, si, di,) 198 395.33 P
(es, cs, ss, ds, ip, \337ags. Y) 198 383.33 T
(ou should use the \322regnums\323 variable when) 306.18 383.33 T
(programming, however) 198 371.33 T
(, as this may change at some point \050e.g. to) 304.48 371.33 T
(accommodate the additional registers in the 386\051.) 198 359.33 T
81 343.98 531 348.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 343.98 531 348.99 R
7 X
0 0 0 1 0 0 0 K
V
50 347.98 609.01 347.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 335.98 T
0 F
(cvtrecord) 99 335.98 T
0 10 Q
(Usage:) 99 318.32 T
1 F
(cvtrecord <type> <number>) 180 318.32 T
0 F
(Examples:) 99 298.32 T
1 F
(\322cvtrecord [symbol \336nd type HeapFlags] 36\323) 180 278.32 T
(Return a value list for the number 36 cast to a) 243 266.32 T
3 F
(HeapFlags) 459.89 266.32 T
1 F
(record.) 243 254.32 T
0 F
(Synopsis:) 99 235.32 T
1 F
(Creates a value list for a record from a number) 180 235.32 T
(, for use in printing out the) 396.31 235.32 T
(number as a particular record using) 180 222.32 T
3 F
(fmtval) 349.45 222.32 T
1 F
(.) 382.97 222.32 T
0 F
(Notes:) 99 202.32 T
2 F
(u) 180 182.32 T
1 F
-0.32 (<type> is a type token for a record \050or a structure made up exclusively of) 198 182.32 P
(bit\336elds\051.) 198 170.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "99" 25
%%Page: "100" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(100) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.64 (<number> must be an actual number suitable for the \322expr\323 command. It) 198 641.33 P
-0.58 (cannot be a register or variable or some such. Use \322getvalue\323 to obtain an) 198 629.33 P
(integer from such an expression.) 198 617.33 T
2 F
(u) 180 598.33 T
1 F
(Returns a value list suitable for \322value store\323 or for \322fmtval\323.) 198 598.33 T
0 F
(See Also:) 99 579.33 T
1 F
(value, fmtval, expr) 180 579.33 T
(, getV) 266.31 579.33 T
(alue.) 292.43 579.33 T
81 562.99 531 568 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 562.99 531 568 R
7 X
0 0 0 1 0 0 0 K
V
50 566.99 609.01 566.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 554.99 T
0 F
(cycles) 99 554.99 T
0 10 Q
(Synopsis:) 99 537.33 T
1 F
-0.26 (Count instruction cycles from now until the given address is reached. Prints) 180 537.33 P
(out each instruction as it is executed, along with the cycles it took. If no) 180 524.33 T
(address is given, executes until a breakpoint is hit. T) 180 511.33 T
(akes the following) 423.87 511.33 T
(\050optional\051 \337ags:) 180 498.33 T
3 F
( -r) 180 478.33 T
1 F
(Print routines called, the total cycles for each routine, and a) 243 478.33 T
(running total, not the cycles for each instruction.) 243 466.33 T
3 F
( -i) 180 447.33 T
1 F
-0.69 (Same as -r) 243 447.33 P
-0.69 (, but indents to show calling level. Not recommended) 290.15 447.33 P
(for counting cycles over deeply nested routines.) 243 435.33 T
3 F
( -I) 180 416.33 T
1 F
(Same as -i, except uses \050#\051 to indicate call level) 243 416.33 T
3 F
( -f) 180 397.33 T
1 F
(Stop counting when this routine \336nishes) 243 397.33 T
3 F
( -n) 180 378.33 T
1 F
(Does not whine about interrupts being off) 243 378.33 T
3 F
( -x) 180 359.33 T
1 F
( <) 192.31 359.33 T
7 F
(routine) 201.15 359.33 T
1 F
(>) 238.93 359.33 T
(Step over calls to <routine>) 243 347.33 T
( -x <) 180 328.33 T
7 F
(routine) 200.32 328.33 T
1 F
(>=<) 238.1 328.33 T
7 F
(val) 256.28 328.33 T
1 F
(>) 272.4 328.33 T
(Step over calls to <routine> and assume that the call takes) 243 316.33 T
(<val> cycles for timing purposes) 243 304.33 T
81 288.98 531 293.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 288.98 531 293.99 R
7 X
0 0 0 1 0 0 0 K
V
50 292.98 609.01 292.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 280.98 T
0 F
(dcache) 99 280.98 T
0 10 Q
(Usage:) 99 263.32 T
1 F
(dcache bsize <blockSize>) 180 263.32 T
(dcache length <numBlocks>) 180 250.32 T
(dcache stats) 180 237.32 T
(dcache params) 180 224.32 T
(dcache \050on|off\051) 180 211.32 T
0 F
(Examples:) 99 191.32 T
1 F
(\322dcache bsize 16\323) 180 171.32 T
(Set the number of bytes fetched at a time to 16.) 243 159.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "100" 26
%%Page: "101" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(101) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
( \322dcache length 1024\323) 180 641.33 T
-0.45 (Allow 1024 blocks of the current block size to be in the cache at) 243 629.33 P
(a time.) 243 617.33 T
( \322dcache off\323) 180 598.33 T
(Disables the Swat data cache.) 243 598.33 T
0 F
(Synopsis:) 99 579.33 T
1 F
-0.82 (Controls the cache Swat uses to hold data read from the target machine while) 180 579.33 P
(the machine is stopped.) 180 566.33 T
0 F
(Notes:) 99 546.33 T
2 F
(u) 180 526.33 T
1 F
(Data written while the machine is stopped actually get written to the) 198 526.33 T
-0.46 (cache, not the) 198 514.33 P
1 9 Q
-0.42 (PC) 263.28 514.33 P
1 10 Q
-0.46 (, and the modi\336ed blocks are written when the machine) 275.78 514.33 P
(is continued.) 198 502.33 T
2 F
(u) 180 483.33 T
1 F
-0.43 (The default cache block size is 32 bytes, with a default cache length of 64) 198 483.33 P
(blocks.) 198 471.33 T
2 F
(u) 180 452.33 T
1 F
-0.13 (It is a very rare thing to have to turn the data cache off. Y) 198 452.33 P
-0.13 (ou might need) 462.68 452.33 P
(to do this while examining the changing registers of a memory-mapped) 198 440.33 T
1 9 Q
(I/O) 198 428.33 T
1 10 Q
( device.) 211.17 428.33 T
2 F
(u) 180 409.33 T
1 F
(The <blockSize> must be a power of 2 and no more than 128.) 198 409.33 T
2 F
(u) 180 390.33 T
1 F
(Changing the block size causes all cached blocks to be \337ushed \050any) 198 390.33 T
(modi\336ed cache blocks are written to the) 198 378.33 T
1 9 Q
(PC) 384.5 378.33 T
1 10 Q
(\051.) 397 378.33 T
2 F
(u) 180 359.33 T
1 F
-0.37 (Changing the cache length will only \337ush blocks if there are more blocks) 198 359.33 P
(currently in the cache than are allowed by the new length.) 198 347.33 T
2 F
(u) 180 328.33 T
1 F
(The \322dcache stats\323 command prints statistics giving some indication of) 198 328.33 T
(the ef\336cacy of the data cache. It does not return anything.) 198 316.33 T
2 F
(u) 180 297.33 T
1 F
(The \322dcache params\323 command returns a list {<blockSize>) 198 297.33 T
(<numBlocks>} giving the current parameters of the data cache. There) 198 285.33 T
-0.56 (are some operations where you might want to adjust the size of the cache) 198 273.33 P
-0.06 (either up or down, but need to reset the parameters when the operation) 198 261.33 P
(completes. This is what you need to do this.) 198 249.33 T
0 F
(See Also:) 99 230.33 T
1 F
(cache.) 180 230.33 T
81 213.99 531 219 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 213.99 531 219 R
7 X
0 0 0 1 0 0 0 K
V
50 217.99 609.01 217.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 205.99 T
0 F
(dcall) 99 205.99 T
0 10 Q
(Usage:) 99 188.33 T
1 F
(dcall [<args>]) 180 188.33 T
0 F
(Examples:) 99 168.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "101" 27
%%Page: "102" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(102) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322dcall Dispatch\323) 180 641.33 T
(Display when the routine Dispatch is called) 243 629.33 T
(\322dcall none\323) 180 610.33 T
(stop displaying all routines) 243 598.33 T
0 F
(Synopsis:) 99 579.33 T
1 F
(Display calls to a routine.) 180 579.33 T
0 F
(Notes:) 99 559.33 T
2 F
(u) 180 539.33 T
1 F
(The <args> argument normally is the name of the routine to monitor) 198 539.33 T
(.) 515.52 539.33 T
(Whenever a call is made to the routine its name is displayed.) 198 527.33 T
2 F
(u) 180 508.33 T
1 F
(If \324none\325 or no argument is passed, then all the routines will stop) 198 508.33 T
(displaying.) 198 496.33 T
2 F
(u) 180 477.33 T
1 F
-0.41 (Dcall uses breakpoints to display routine names. By looking at the list of) 198 477.33 P
-0.39 (breakpoints you can see which routines display their names and you can) 198 465.33 P
(stop them individually by disabling or deleting their breakpoints.) 198 453.33 T
0 F
(See Also:) 99 434.33 T
1 F
(showcalls, mwatch.) 180 434.33 T
81 417.99 531 423 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 417.99 531 423 R
7 X
0 0 0 1 0 0 0 K
V
50 421.99 609.01 421.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 409.99 T
0 F
(debug) 99 409.99 T
0 10 Q
(Usage:) 99 392.33 T
1 F
(debug <proc-name>*) 180 392.33 T
0 F
(Examples:) 99 372.33 T
1 F
(\322debug\323) 180 352.33 T
(Enter the T) 243 352.33 T
(cl debugger immediately) 296.08 352.33 T
(.) 408.5 352.33 T
(\322debug fooproc\323) 180 333.33 T
-0.44 (Enter the T) 243 321.33 P
-0.44 (cl debuffer when the interpreter is about to execute) 295.19 321.33 P
(the command \322fooproc\323.) 243 309.33 T
0 F
(Synopsis:) 99 290.33 T
1 F
(This command is used when debugging T) 180 290.33 T
(cl commands. It sets a breakpoint) 369.77 290.33 T
-0.38 (at the start of any T) 180 277.33 P
-0.38 (cl command. Also serves as a breakpoint in the middle of) 270.11 277.33 P
(a T) 180 264.33 T
(cl procedure, if executed with no argument.) 194.2 264.33 T
0 F
(Notes:) 99 244.33 T
2 F
(u) 180 224.33 T
1 F
(The breakpoint for <proc-name> can be removed using the \322undebug\323) 198 224.33 T
(command.) 198 212.33 T
2 F
(u) 180 193.33 T
1 F
(<proc-name> need not be a T) 198 193.33 T
(cl procedure. Setting a breakpoint on a) 331.36 193.33 T
-0.72 (built-in command is not for the faint-of-heart, however) 198 181.33 P
-0.72 (, as there are some) 444.79 181.33 P
-0.09 (commands used by the T) 198 169.33 P
-0.09 (cl debugger itself. Setting a breakpoint on such) 311.3 169.33 P
(a command will cause instant death.) 198 157.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "102" 28
%%Page: "103" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(103) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(See Also:) 99 641.33 T
1 F
(undebug.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
0 F
(debugger) 99 616.99 T
0 10 Q
(Usage:) 99 599.33 T
1 F
(var debugger [<command-name>]) 180 599.33 T
0 F
(Synopsis:) 99 579.33 T
1 F
(Name of the command when things go wrong. The function is passed two) 180 579.33 T
(arguments: a condition and the current result string from the interpreter) 180 566.33 T
(.) 517.4 566.33 T
-0.47 (The condition is \322enter\323 if entering a command whose debug \337ag is set, \322exit\323) 180 553.33 P
-0.39 (if returning from a frame whose debug \337ag is set, \322error\323 if an error occurred) 180 540.33 P
(and the \322debugOnError\323 variable is non-zero, \322quit\323 if quit \050^\335 is typed and) 180 527.33 T
-0.67 (the \322debugOnReset\323 variable is non-zero, or \322other\323 for some other cause \050e.g.) 180 514.33 P
(\322debug\323 being invoked from within a function\051.) 180 501.33 T
81 484.98 531 489.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 484.98 531 489.99 R
7 X
0 0 0 1 0 0 0 K
V
50 488.98 609.01 488.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 476.98 T
0 F
(debugOnError) 99 476.98 T
0 10 Q
(Usage:) 99 459.32 T
1 F
(var debugOnError [\0500|1\051]) 180 459.32 T
0 F
(Examples:) 99 439.32 T
1 F
(\322var debugOnError 1\323) 180 419.32 T
(T) 243 407.32 T
(urn on debugging when there\325) 248.96 407.32 T
(s a T) 386.74 407.32 T
(cl error) 408.35 407.32 T
(.) 441.3 407.32 T
0 F
(Synopsis:) 99 388.32 T
1 F
(Enter debug mode when Swat encounters a T) 180 388.32 T
(cl error) 389.21 388.32 T
(.) 422.16 388.32 T
0 F
(Notes:) 99 368.32 T
2 F
(u) 180 348.32 T
1 F
(The 0|1 simply is a false|true to stop and debug upon encountering an) 198 348.32 T
(error in a T) 198 336.32 T
(cl command.) 250.34 336.32 T
2 F
(u) 180 317.32 T
1 F
-0.24 (If an error is caught with the catch command, Swat will not enter debug) 198 317.32 P
(mode.) 198 305.32 T
0 F
(See Also:) 99 286.32 T
1 F
(debugger) 180 286.32 T
(.) 221.85 286.32 T
81 256.98 531 261.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 256.98 531 261.98 R
7 X
0 0 0 1 0 0 0 K
V
50 260.98 609.01 260.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 248.97 T
0 F
(defcmd) 99 248.97 T
0 10 Q
(Usage:) 99 231.31 T
1 F
(defcmd <name> <args> <help-class> <help-string> <body>) 180 231.31 T
0 F
(Examples:) 99 211.31 T
1 F
-0.03 (Look at almost any .tcl \336le in the system library for an example; a complete) 180 211.31 P
(example set would be too large to give here.) 180 198.31 T
0 F
(Synopsis:) 99 178.31 T
1 F
-0.51 (This creates a new T) 180 178.31 P
-0.51 (cl procedure with on-line help whose name the user may) 272.92 178.31 P
(abbreviate when invoking.) 180 165.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "103" 29
%%Page: "104" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(104) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Notes:) 99 641.33 T
2 F
(u) 180 621.33 T
1 F
(<help-class> is a T) 198 621.33 T
(cl list of places in which to store the <help-string>,) 283.4 621.33 T
(with the levels in the help tree separated by periods. The leaf node for) 198 609.33 T
-0.27 (each path is added by this command and is <name>, so a command \322foo\323) 198 597.33 P
(with the <help-class> \322prog.tcl\323 would have its <help-string> stored as) 198 585.33 T
(\322prog.tcl.foo.\323) 198 573.33 T
2 F
(u) 180 554.33 T
1 F
-0.43 (Because the name you choose for a procedure de\336ned in this manner can) 198 554.33 P
(have an impact on the unique abbreviation for another command, you) 198 542.33 T
(should use this sparingly) 198 530.33 T
(.) 313.01 530.33 T
0 F
(See Also:) 99 511.33 T
1 F
(defcommand, proc, help.) 180 511.33 T
81 494.99 531 500 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 494.99 531 500 R
7 X
0 0 0 1 0 0 0 K
V
50 498.99 609.01 498.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 486.99 T
0 F
(defcommand) 99 486.99 T
0 10 Q
(Usage:) 99 469.33 T
1 F
(defcommand <name> <args> <help-class> <help-string> <body>) 180 469.33 T
0 F
(Examples:) 99 449.33 T
1 F
(Look at Swat Display) 180 449.33 T
(5-) 282.08 449.33 T
(3, Swat Display) 290.97 449.33 T
(5-) 366.56 449.33 T
(4, or almost any .tcl \336le in the) 375.45 449.33 T
-0.1 (system library for an example; a complete example set would be too large to) 180 436.33 P
(give here.) 180 423.33 T
0 F
(Synopsis:) 99 403.33 T
1 F
-0.8 (This creates a new T) 180 403.33 P
-0.8 (cl procedure with on-line help whose name must be given) 271.75 403.33 P
(exactly when the user wishes to invoke it.) 180 390.33 T
0 F
(Notes:) 99 370.33 T
1 F
(<help-class> is a T) 180 370.33 T
(cl list of places in which to store the <help-string>, with) 265.4 370.33 T
(the levels in the help tree separated by periods. The leaf node for each path) 180 357.33 T
(is added by this command and is <name>, so a command \322foo\323 with the) 180 344.33 T
(<help-class> \322prog.tcl\323 would have its <help-string> stored as \322prog.tcl.foo.\323) 180 331.33 T
0 F
(See Also:) 99 311.33 T
1 F
(defcmd, proc, help.) 180 311.33 T
81 294.98 531 299.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 294.98 531 299.99 R
7 X
0 0 0 1 0 0 0 K
V
50 298.98 609.01 298.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 286.98 T
0 F
(defhelp) 99 286.98 T
0 10 Q
(Usage:) 99 269.32 T
1 F
(defhelp <topic> <help-class> <help-string>) 180 269.32 T
0 F
(Examples:) 99 249.32 T
1 F
(\322defhelp breakpoint top {Commands relating to the setting of breakpoints}\323) 180 229.32 T
-0.48 (Sets the help for \322breakpoint\323 in the \322top\323 category to the given) 243 217.32 P
(string.) 243 205.32 T
0 F
(Synopsis:) 99 186.32 T
1 F
(This is used to de\336ne the help string for an internal node of the help tree \050a) 180 186.32 T
-0.43 (node that is used in the path for some other real topic, such as a command or) 180 173.32 P
(a variable\051.) 180 160.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "104" 30
%%Page: "105" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(105) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Notes:) 99 641.33 T
2 F
(u) 180 621.33 T
1 F
(This cannot override a string that resides in the) 198 621.33 T
3 F
(/pcgeos/tcl/doc) 422.28 621.33 T
1 F
( \336le.) 497.49 621.33 T
2 F
(u) 180 602.33 T
1 F
-0.68 (Y) 198 602.33 P
-0.68 (ou only really need this if you have de\336ned your own help-topic category) 203.93 602.33 P
-0.68 (.) 528.22 602.33 P
2 F
(u) 180 583.33 T
1 F
(<help-class> is a T) 198 583.33 T
(cl list of places in which to store the <help-string>,) 283.4 583.33 T
(with the levels in the help tree separated by periods. The leaf node for) 198 571.33 T
-0.27 (each path is added by this command and is <name>, so a command \322foo\323) 198 559.33 P
(with the <help-class> \322prog.tcl\323 would have its <help-string> stored as) 198 547.33 T
(\322prog.tcl.foo.\323) 198 535.33 T
0 F
(See Also:) 99 516.33 T
1 F
(help.) 180 516.33 T
81 499.99 531 505 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 499.99 531 505 R
7 X
0 0 0 1 0 0 0 K
V
50 503.99 609.01 503.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 491.99 T
0 F
(defsubr) 99 491.99 T
1 F
(This is a T) 163.88 491.99 T
(cl primitive. See \322T) 221.6 491.99 T
(ool Command Language,\323 Chapter) 326.52 491.99 T
(5.) 520.99 491.99 T
81 477.98 531 482.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 477.98 531 482.99 R
7 X
0 0 0 1 0 0 0 K
V
50 481.98 609.01 481.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 469.98 T
0 F
(defvar) 99 469.98 T
0 10 Q
(Usage:) 99 452.32 T
1 F
(defvar <name> <value> [<help-class> <help-string>]) 180 452.32 T
0 F
(Examples:) 99 432.32 T
1 F
(\322defvar printRegions 0\323) 180 412.32 T
-0.46 (De\336ne \322printRegions\323 as a global variable and give it the value) 243 400.32 P
(zero, if it didn\325) 243 388.32 T
(t have a value already) 309.49 388.32 T
(.) 411 388.32 T
0 F
(Synopsis:) 99 369.32 T
1 F
(This command is used in .tcl \336les to de\336ne a global variable and give it an) 180 369.32 T
(initial value, should the variable not have been de\336ned before.) 180 356.32 T
0 F
(Notes:) 99 336.32 T
2 F
(u) 180 316.32 T
1 F
(If the variable is one the user may want to change, give it on-line help) 198 316.32 T
(using the <help-class> and <help-string> arguments.) 198 304.32 T
2 F
(u) 180 285.32 T
1 F
(<help-class> is a T) 198 285.32 T
(cl list of places in which to store the <help-string>,) 283.4 285.32 T
(with the levels in the help tree separated by periods. The leaf node for) 198 273.32 T
-0.27 (each path is added by this command and is <name>, so a command \322foo\323) 198 261.32 P
(with the <help-class> \322variable.output\323 would have its <help-string>) 198 249.32 T
(stored as \322variable.output.foo.\323) 198 237.32 T
0 F
(See Also:) 99 218.32 T
1 F
(var) 180 218.32 T
(, help.) 194.63 218.32 T
81 201.98 531 206.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 201.98 531 206.98 R
7 X
0 0 0 1 0 0 0 K
V
50 205.98 609.01 205.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 193.97 T
0 F
(delassoc) 99 193.97 T
0 10 Q
(Usage:) 99 176.31 T
1 F
(delassoc <list> <key> [<foundvar> [<elvar>]]) 180 176.31 T
0 F
(Examples:) 99 156.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "105" 31
%%Page: "106" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(106) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322delassoc $val murphy\323) 180 641.33 T
(Returns $val without the sublist whose \336rst element is the) 243 629.33 T
(string \322murphy) 243 617.33 T
(.\323) 312.81 617.33 T
0 F
(Synopsis:) 99 598.33 T
1 F
(Deletes an entry from an associative list.) 180 598.33 T
0 F
(Notes:) 99 578.33 T
2 F
(u) 180 558.33 T
1 F
-0.04 ( <foundvar>, if given, is the name of a variable in the caller) 198 558.33 P
-0.04 (\325) 472.23 558.33 P
-0.04 (s scope that) 473.9 558.33 P
(is to be set non-zero if an element in <list> was found whose <key>) 198 546.33 T
(matched the given one. If no such element was found \050and therefore) 198 534.33 T
(deleted\051, the variable is set zero.) 198 522.33 T
2 F
(u) 180 503.33 T
1 F
(<elvar>, if given, is the name of a variable in the caller) 198 503.33 T
(\325) 451.83 503.33 T
(s scope that) 453.5 503.33 T
(receives the element that was deleted from the list. If no element was) 198 491.33 T
(deleted, the variable remains untouched.) 198 479.33 T
0 F
(See Also:) 99 460.33 T
1 F
(assoc.) 180 460.33 T
81 443.99 531 449 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 443.99 531 449 R
7 X
0 0 0 1 0 0 0 K
V
50 447.99 609.01 447.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 435.99 T
0 F
(detach) 99 435.99 T
0 10 Q
(Usage:) 99 418.33 T
1 F
(detach [<options>]) 180 418.33 T
0 F
(Examples:) 99 398.33 T
1 F
(\322detach cont\323) 180 378.33 T
(continue) 243 366.33 T
1 9 Q
(GEOS) 285.59 366.33 T
1 10 Q
( and quit swat) 311.76 366.33 T
0 F
(Synopsis:) 99 347.33 T
1 F
(Detach swat from the) 180 347.33 T
1 9 Q
(PC) 282.42 347.33 T
1 10 Q
(.) 294.92 347.33 T
0 F
(Notes:) 99 327.33 T
2 F
(u) 180 307.33 T
1 F
(The <option> argument may be one of the following:) 198 307.33 T
4 F
(continue) 441.82 307.33 T
1 F
(: continue) 480.88 307.33 T
1 9 Q
(GEOS) 198 295.33 T
1 10 Q
( and detach swat;) 224.17 295.33 T
4 F
(leave) 308.08 295.33 T
1 F
(: keep) 331.22 295.33 T
1 9 Q
(GEOS) 361.23 295.33 T
1 10 Q
( stopped and detach swat.) 387.4 295.33 T
(Anything else causes swat to just detach.) 198 283.33 T
0 F
(See Also:) 99 264.33 T
1 F
(attach, quit.) 180 264.33 T
81 247.98 531 252.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 247.98 531 252.99 R
7 X
0 0 0 1 0 0 0 K
V
50 251.98 609.01 251.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 239.98 T
0 F
(dirs) 99 239.98 T
0 10 Q
(Usage:) 99 222.32 T
1 F
(dirs) 180 222.32 T
0 F
(Synopsis:) 99 202.32 T
1 F
(Prints the directory stack for the current thread.) 180 202.32 T
0 F
(See Also:) 99 182.32 T
1 F
(pwd, stdpaths) 180 182.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "106" 32
%%Page: "107" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(107) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(discard-state) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(discard-state) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322discard-state\323) 180 577.33 T
-0.76 (Throw away the values for all the thread\325) 243 565.33 P
-0.76 (s registers as saved by) 428.29 565.33 P
(the most recent call to) 243 553.33 T
3 F
(save-state) 348.38 553.33 T
1 F
(.) 400.04 553.33 T
0 F
(Synopsis:) 99 534.33 T
1 F
(Throw away the state saved by the most-recent) 180 534.33 T
3 F
(save-state) 401.33 534.33 T
1 F
( command.) 452.99 534.33 T
0 F
(Notes:) 99 514.33 T
1 F
(This is usually only used in response to an error that makes it pointless to) 180 514.33 T
(return to the point where the) 180 501.33 T
3 F
(save-state) 317.78 501.33 T
1 F
( was performed.) 369.44 501.33 T
0 F
(See Also:) 99 481.33 T
1 F
(save-state, restore-state.) 180 481.33 T
81 464.98 531 469.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 464.98 531 469.99 R
7 X
0 0 0 1 0 0 0 K
V
50 468.98 609.01 468.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 456.98 T
0 F
(diskwalk) 99 456.98 T
0 10 Q
(Usage:) 99 439.32 T
1 F
(diskwalk <drive>) 180 439.32 T
0 F
(Examples:) 99 419.32 T
1 F
(\322diskwalk) 180 399.32 T
(F\323) 243 399.32 T
(Prints the disks registered in drive F) 243 387.32 T
(.) 412.83 387.32 T
(\322diskwalk\323) 180 368.32 T
(Prints all the disks registered with the system.) 243 368.32 T
0 F
(Synopsis:) 99 349.32 T
1 F
(Prints out the information on registered disks.) 180 349.32 T
0 F
(Notes:) 99 329.32 T
1 F
(The Flags column is a string of single-character \337ags with the following) 180 329.32 T
(meanings:) 180 316.32 T
3 F
(w) 180 296.32 T
1 F
(The disk is writable.) 243 296.32 T
3 F
(V) 180 277.32 T
1 F
(The disk is always valid, i.e. it\325) 243 277.32 T
(s not removable.) 384.91 277.32 T
3 F
(S) 180 258.32 T
1 F
(The disk is stale. This is set if the drive for the disk has been) 243 258.32 T
(deleted.) 243 246.32 T
3 F
(u) 180 227.32 T
1 F
-0.27 (The disk is unnamed, so the system has made up a name for it.) 243 227.32 P
0 F
(See Also:) 99 208.32 T
1 F
(drivewalk, fsdwalk.) 180 208.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "107" 33
%%Page: "108" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(108) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(display) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(display <lines> <command>) 180 617.33 T
(display list) 180 604.33 T
(display del <num>) 180 591.33 T
0 F
(Examples:) 99 571.33 T
1 F
(\322display list\323) 180 551.33 T
(list all the commands displayed) 243 539.33 T
(\322display 1 {piv V) 180 520.33 T
(is VCNI_viewHeight}\323) 255.5 520.33 T
(always display the view height) 243 508.33 T
(\322display del 2\323) 180 489.33 T
(delete the second display command) 243 477.33 T
0 F
(Synopsis:) 99 458.33 T
1 F
(Manipulate the display at the bottom of Swat\325) 180 458.33 T
(s screen.) 391.72 458.33 T
0 F
(Notes:) 99 438.33 T
2 F
(u) 180 418.33 T
1 F
-0.86 (If you give a numeric <lines> argument, the next argument, <command>,) 198 418.33 P
-0.01 (is a standard T) 198 406.33 P
-0.01 (cl command to execute each time the machine halts. The) 267.18 406.33 P
-0.83 (output of the command is directed to a window <lines> lines high, usually) 198 394.33 P
(located at the bottom of the screen.) 198 382.33 T
2 F
(u) 180 363.33 T
1 F
-0.35 (Y) 198 363.33 P
-0.35 (ou can list all the active displays by giving \322list\323 instead of a number as) 203.93 363.33 P
(the \336rst argument.) 198 351.33 T
2 F
(u) 180 332.33 T
1 F
(If the \336rst argument is \322del\323, you can give the number of a display to) 198 332.33 T
-0.26 (delete as the <num> argument. <num> comes either from the value this) 198 320.33 P
(command returned when the display was created, or from the list of) 198 308.33 T
(active displays shown by typing \322display list\323.) 198 296.33 T
0 F
(See Also:) 99 277.33 T
1 F
(wtop, wcreate.) 180 277.33 T
81 260.98 531 265.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 260.98 531 265.99 R
7 X
0 0 0 1 0 0 0 K
V
50 264.98 609.01 264.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 252.98 T
0 F
(doc) 99 252.98 T
0 10 Q
(Usage:) 99 235.32 T
1 F
(doc [<keyword>]) 180 235.32 T
0 F
(Examples:) 99 215.32 T
1 F
(\322doc) 180 195.32 T
1 9 Q
(MSG_VIS_OPEN) 201.85 195.32 T
1 10 Q
(\323) 274.69 195.32 T
(Brings up technical documentation for) 243 183.32 T
1 9 Q
(MSG_VIS_OPEN) 423.18 183.32 T
1 10 Q
(.) 496.02 183.32 T
0 F
(Synopsis:) 99 164.32 T
1 F
-0.42 (Finds technical documentation for <keyword>. If it \336nds multiple entries for) 180 164.32 P
(the keyword in the documentation, hit <Return> or use) 180 151.32 T
3 F
(doc-next) 438.43 151.32 T
1 F
( and) 483.06 151.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "108" 34
%%Page: "109" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(109) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
-0.09 (doc-previous) 180 641.33 P
1 F
-0.09 ( to see the additional entries. The documentation retrieved is) 247.04 641.33 P
(in) 180 628.33 T
1 9 Q
(ASCII) 192.04 628.33 T
1 10 Q
( form\321\336gures will be missing, but the complete text appears.) 218.03 628.33 T
0 F
(See Also:) 99 608.33 T
1 F
(doc-next, doc-previous.) 180 608.33 T
81 591.99 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 591.99 531 597 R
7 X
0 0 0 1 0 0 0 K
V
50 595.99 609.01 595.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 583.99 T
0 F
(doc-next) 99 583.99 T
0 10 Q
(Usage:) 99 566.33 T
1 F
(doc-next) 180 566.33 T
0 F
(Examples:) 99 546.33 T
1 F
(\322doc) 180 526.33 T
1 9 Q
(MSG_VIS_OPEN) 201.85 526.33 T
1 10 Q
(\323) 274.69 526.33 T
(Brings up technical documentation for) 243 514.33 T
1 9 Q
(MSG_VIS_OPEN) 423.18 514.33 T
1 10 Q
(.) 496.02 514.33 T
(\322doc-next\323) 180 495.33 T
(Brings up more technical documentation if available.) 243 483.33 T
0 F
(Synopsis:) 99 464.33 T
1 F
(Finds additional technical documentation for <keyword>.) 180 464.33 T
0 F
(See Also:) 99 444.33 T
1 F
(doc, doc-previous.) 180 444.33 T
81 427.98 531 432.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 427.98 531 432.99 R
7 X
0 0 0 1 0 0 0 K
V
50 431.98 609.01 431.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 419.98 T
0 F
(doc-previous) 99 419.98 T
0 10 Q
(Usage:) 99 402.32 T
1 F
(doc-next) 180 402.32 T
0 F
(Examples:) 99 382.32 T
1 F
(\322doc) 180 362.32 T
1 9 Q
(MSG_VIS_OPEN) 201.85 362.32 T
1 10 Q
(\323) 274.69 362.32 T
(Brings up technical documentation for) 243 350.32 T
1 9 Q
(MSG_VIS_OPEN) 423.18 350.32 T
1 10 Q
(.) 496.02 350.32 T
(\322doc-next\323) 180 331.32 T
(Brings up more technical documentation if available.) 243 331.32 T
(\322doc-previous\323) 180 312.32 T
(Brings back previous \050in this case, the \336rst\051 entry) 243 300.32 T
(.) 470.97 300.32 T
0 F
(Synopsis:) 99 281.32 T
1 F
(Finds additional technical documentation for <keyword>.) 180 281.32 T
0 F
(See Also:) 99 261.32 T
1 F
(doc, doc-next.) 180 261.32 T
81 244.98 531 249.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.98 531 249.98 R
7 X
0 0 0 1 0 0 0 K
V
50 248.98 609.01 248.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 236.97 T
0 F
(dosMem) 99 236.97 T
0 10 Q
(Usage:) 99 219.31 T
1 F
(dosMem) 180 219.31 T
0 F
(Examples:) 99 199.31 T
1 F
(\322dosMem\323) 180 179.31 T
0 F
(Synopsis:) 99 160.31 T
1 F
(T) 180 160.31 T
(raverse) 186.05 160.31 T
1 9 Q
(DOS) 223.27 160.31 T
1 10 Q
(\325 chain of memory blocks, providing information about each.) 242.94 160.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "109" 35
%%Page: "110" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(110) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(down) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(down [<frame offset>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322down\323) 180 577.33 T
(move the frame one frame down the stack) 243 577.33 T
(\322down 4\323) 180 558.33 T
(move the frame four frames down the stack) 243 558.33 T
0 F
(Synopsis:) 99 539.33 T
1 F
(Move the frame down the stack.) 180 539.33 T
0 F
(Notes:) 99 519.33 T
2 F
(u) 180 499.33 T
1 F
(The frame offset argument is the number of frames to move down the) 198 499.33 T
-0.44 (stack. If no argument is given then the current frame is moved down one) 198 487.33 P
(frame.) 198 475.33 T
2 F
(u) 180 456.33 T
1 F
(This command may be repeated by pressing <Return>.) 198 456.33 T
0 F
(See Also:) 99 437.33 T
1 F
(backtrace, up.) 180 437.33 T
81 420.98 531 425.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 420.98 531 425.99 R
7 X
0 0 0 1 0 0 0 K
V
50 424.98 609.01 424.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 412.98 T
0 F
(drivewalk) 99 412.98 T
0 10 Q
(Usage:) 99 395.32 T
1 F
(drivewalk) 180 395.32 T
0 F
(Examples:) 99 375.32 T
1 F
(\322drivewalk\323) 180 355.32 T
(Prints the table of drives known to the system.) 243 343.32 T
0 F
(Synopsis:) 99 324.32 T
1 F
(Prints out all disk drives known to the system, along with their current) 180 324.32 T
(status.) 180 311.32 T
0 F
(Notes:) 99 291.32 T
2 F
(u) 180 271.32 T
1 F
-0.01 (The Flags column is a string of single character \337ags with the following) 198 271.32 P
(meanings:) 198 259.32 T
(L) 202.24 240.32 T
(The drive is accessible to the local machine only) 243 240.32 T
(, i.e. it\325) 463.03 240.32 T
(s not) 493.79 240.32 T
(visible over a network.) 243 228.32 T
(R) 210.58 209.32 T
(The drive is read-only) 243 209.32 T
(.) 343.19 209.32 T
(F) 210.58 190.32 T
(Disks may be formatted in the drive.) 243 190.32 T
( A) 207.8 171.32 T
(The drive is actually an alias for a path on another drive.) 243 171.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "110" 36
%%Page: "111" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(111) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
( B) 207.8 641.33 T
-0.74 (The drive is busy) 243 641.33 P
-0.74 (, performing some extended operation, such as) 318.94 641.33 P
(formatting or copying a disk.) 243 629.33 T
( r) 210.58 610.33 T
(The drive uses disks that may be removed by the user) 243 610.33 T
(.) 491.37 610.33 T
(n) 210.58 591.33 T
( The drive is accessed over the network.) 243 591.33 T
2 F
(u) 180 572.33 T
1 F
(The Locks column can re\337ect one of three states:) 198 572.33 T
(none) 207.8 553.33 T
(The drive isn\325) 243 553.33 T
(t being accessed by any thread.) 305.79 553.33 T
(Excl) 207.8 534.33 T
(The drive is locked for exclusive access by a single thread.) 243 534.33 T
( <num>) 205.02 515.33 T
(The drive is locked for shared access for a particular disk,) 243.81 515.33 T
(whose handle is the number) 243 503.33 T
(. This is followed by the volume) 372.46 503.33 T
(name of the disk, in square brackets.) 243 491.33 T
0 F
(See Also:) 99 472.33 T
1 F
(diskwalk, fsdwalk.) 180 472.33 T
81 455.99 531 461 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 455.99 531 461 R
7 X
0 0 0 1 0 0 0 K
V
50 459.99 609.01 459.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 447.99 T
0 F
(dumpstack) 99 447.99 T
0 10 Q
(Usage:) 99 430.33 T
1 F
(dumpstack [<address>] [<length>]) 180 430.33 T
0 F
(Examples:) 99 410.33 T
1 F
(\322dumpstack\323) 180 390.33 T
(dump the stack at) 243 378.33 T
1 9 Q
(SS:SP) 329.5 378.33 T
1 10 Q
(\322ds ds:si 10\323) 180 359.33 T
(dump ten words starting at) 243 347.33 T
1 9 Q
(DS:SI) 372.46 347.33 T
0 10 Q
(Synopsis:) 99 328.33 T
1 F
(Dump the stack and perform some simple interpretation upon it.) 180 328.33 T
0 F
(Notes:) 99 308.33 T
2 F
(u) 180 288.33 T
1 F
-0.59 (The <address> argument is the address of the list of words to dump. This) 198 288.33 P
(defaults to) 198 276.33 T
1 9 Q
( SS:SP) 247.08 276.33 T
1 10 Q
(.) 273.81 276.33 T
2 F
(u) 180 257.33 T
1 F
-0.61 (The <length> argument is the number of words to dump. This defaults to) 198 257.33 P
(50.) 198 245.33 T
2 F
(u) 180 226.33 T
1 F
-0.04 (This dumps the stack and tries to make symbolic sense of the values, in) 198 226.33 P
(terms of handles, segments, and routines.) 198 214.33 T
2 F
(u) 180 195.33 T
1 F
(After doing a dumpstack, if you just hit return without entering a new) 198 195.33 T
(command, by default you will see a continuation of the dumpstack.) 198 183.33 T
0 F
(See Also:) 99 164.33 T
1 F
(backtrace.) 180 164.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "111" 37
%%Page: "112" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(112) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(dwordIsPtr) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(var dwordIsPtr [\0500|1\051]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322var dwordIsPtr 1\323) 180 577.33 T
(T) 243 565.33 T
(ells \322print\323 to print all double-word variables as if they were) 248.75 565.33 T
(far pointers \050segment:offset\051.) 243 553.33 T
0 F
(Synopsis:) 99 534.33 T
1 F
-0.79 (Controls whether dword \050a.k.a. long\051 variables are printed as 32-bit unsigned) 180 534.33 P
(integers or untyped far pointers.) 180 521.33 T
0 F
(Notes:) 99 501.33 T
2 F
(u) 180 481.33 T
1 F
-0.55 (For debugging C code, a value of 0 is more appropriate, while 1 is best for) 198 481.33 P
(debugging assembly language.) 198 469.33 T
2 F
(u) 180 450.33 T
1 F
(The default value for this variable is 1.) 198 450.33 T
0 F
(See Also:) 99 431.33 T
1 F
(intFormat, print.) 180 431.33 T
81 414.98 531 419.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 414.98 531 419.99 R
7 X
0 0 0 1 0 0 0 K
V
50 418.98 609.01 418.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 406.98 T
0 F
(dwords) 99 406.98 T
0 10 Q
(Usage:) 99 389.32 T
1 F
(dwords [<address>] [<length>]) 180 389.32 T
0 F
(Examples:) 99 369.32 T
1 F
(\322dwords\323) 180 349.32 T
(lists 4 double words at) 243 349.32 T
1 9 Q
(DS:SI) 349.51 349.32 T
1 10 Q
(\322dwords ds:di 8\323) 180 330.32 T
(lists 8 double words at) 243 318.32 T
1 9 Q
(DS:DI) 349.51 318.32 T
0 10 Q
(Synopsis:) 99 299.32 T
1 F
(Examine memory as a dump of double words \05032 bit hex numbers\051.) 180 299.32 T
0 F
(Notes:) 99 279.32 T
2 F
(u) 180 259.32 T
1 F
-0.05 (The <address> argument is the address to examine. If not speci\336ed, the) 198 259.32 P
(address after the last examined memory location is used. If no address) 198 247.32 T
(has be examined then) 198 235.32 T
1 9 Q
(DS:SI) 301.91 235.32 T
1 10 Q
( is used for the address.) 326.42 235.32 T
2 F
(u) 180 216.32 T
1 F
-0.16 (The <length> argument is the number of dwords to examine. It defaults) 198 216.32 P
(to 4.) 198 204.32 T
2 F
(u) 180 185.32 T
1 F
(Pressing <Return> after this command continues the list.) 198 185.32 T
0 F
(See Also:) 99 166.32 T
1 F
(bytes, words, imem, assign.) 180 166.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "112" 38
%%Page: "113" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(113) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(ec) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(ec [<args>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322ec\323) 180 577.33 T
(list the error checking turned on) 243 577.33 T
(\322ec +vm\323) 180 558.33 T
(add vmem \336le structure checking) 243 558.33 T
(\322ec all\323) 180 539.33 T
(turn on all error checking \050slow\051) 243 539.33 T
(\322ec save none\323) 180 520.33 T
(save the current error checking and then use none) 243 508.33 T
(\322ec restore\323) 180 489.33 T
(use the saved error checking \337ags) 243 489.33 T
0 F
(Synopsis:) 99 470.33 T
1 F
(Get or set the error checking level active in the kernel.) 180 470.33 T
0 F
(Notes:) 99 450.33 T
1 F
(The following arguments may occur in any combination:) 180 450.33 T
( <) 180 430.33 T
7 F
(\337ag) 188.84 430.33 T
1 F
(>) 208.47 430.33 T
(turn on <\337ag>) 243 430.33 T
(+<) 180 411.33 T
7 F
(\337ag) 192.12 411.33 T
1 F
(>) 211.75 411.33 T
(turn on <\337ag>) 243 411.33 T
(-<) 180 392.33 T
7 F
(\337ag) 189.39 392.33 T
1 F
(>) 209.02 392.33 T
(turn off <\337ag>) 243 392.33 T
3 F
(all) 180 373.33 T
1 F
(turn on all error checking \337ags) 243 373.33 T
1 9 Q
(ALL) 180 354.33 T
1 10 Q
(turn on all error checking \337ags) 243 354.33 T
3 F
(none) 180 335.33 T
1 F
(turn off all error checking \337ags) 243 335.33 T
3 F
(sum) 180 316.33 T
1 F
( <) 201.48 316.33 T
7 F
(handle) 210.32 316.33 T
1 F
(>) 246.44 316.33 T
(turn on checksum checking for the memory block with the) 243 304.33 T
(given handle \050\322ec sum bx\323\051. The current contents of the block) 243 292.33 T
(will be summed and that sum regenerated and checked for) 243 280.33 T
(changes at strategic points in the system \050e.g. when a call) 243 268.33 T
(between modules occurs\051.) 243 256.33 T
(-) 180 237.33 T
3 F
(sum) 183.33 237.33 T
1 F
(turn off checksum checking) 243 237.33 T
3 F
(save) 180 218.33 T
1 F
(save the current error checking) 243 218.33 T
3 F
(restore) 180 199.33 T
1 F
(restore the saved error checking \337ags) 243 199.33 T
( where <\337ag> may be one of the following:) 135 180.33 T
3 F
(analVM) 180 161.33 T
1 F
(perform over) 243 161.33 T
(-aggressive checking of vmem \336les) 302.25 161.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "113" 39
%%Page: "114" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(114) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
(graphics) 180 641.33 T
1 F
(graphics checking) 243 641.33 T
3 F
(heapFree) 180 622.33 T
1 F
(heap free block checking) 243 622.33 T
3 F
(lmemFree) 180 603.33 T
1 F
(lmem free area checking) 243 603.33 T
3 F
(lmemInternal) 180 584.33 T
1 F
(internal lmem error checking) 243 572.33 T
3 F
(lmemObject) 180 553.33 T
1 F
(lmem object checking) 243 541.33 T
3 F
(normal) 180 522.33 T
1 F
(normal error checking) 243 522.33 T
3 F
(region) 180 503.33 T
1 F
(region checking segment extensive) 243 503.33 T
3 F
(segment) 180 484.33 T
1 F
(register checking) 243 484.33 T
3 F
(lmemMove) 180 465.33 T
1 F
(force lmem blocks to move whenever possible) 243 465.33 T
3 F
(unlockMove) 180 446.33 T
1 F
(force unlocked blocks to move whenever possible) 243 434.33 T
3 F
(vm) 180 415.33 T
1 F
(vmem \336le structure checking) 243 415.33 T
3 F
(vmemDiscard) 180 396.33 T
1 F
(force vmem blocks to be discarded if possible) 243 384.33 T
2 F
(u) 180 365.33 T
1 F
(If there isn\325) 198 365.33 T
(t an argument, \324ec\325 reports the current error checking \337ags.) 251.15 365.33 T
2 F
(u) 180 346.33 T
1 F
(Each time) 198 346.33 T
1 9 Q
(GEOS) 247.82 346.33 T
1 10 Q
( is run the ec \337ags are cleared. The saved \337ags are) 273.99 346.33 T
-0.57 (preserved between sessions. The ec \337ags may be saved and then restored) 198 334.33 P
(after restarting) 198 322.33 T
1 9 Q
(GEOS) 272.26 322.33 T
1 10 Q
( so that the \337ag settings are not lost when) 298.43 322.33 T
(restarting) 198 310.33 T
1 9 Q
(GEOS) 247.26 310.33 T
1 10 Q
(.) 273.43 310.33 T
0 F
(See Also:) 99 291.33 T
1 F
(why) 180 291.33 T
(.) 198.15 291.33 T
81 274.99 531 280 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 274.99 531 280 R
7 X
0 0 0 1 0 0 0 K
V
50 278.99 609.01 278.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 266.99 T
0 F
(echo) 99 266.99 T
0 10 Q
(Usage:) 99 249.33 T
1 F
(echo [-n] <string>+) 180 249.33 T
0 F
(Examples:) 99 229.33 T
1 F
(\322echo -n yes?\323) 180 209.33 T
(Prints \322yes?\323 without a newline.) 243 197.33 T
(\322echo hi mom\323) 180 178.33 T
(Prints \322hi mom\323 followed by a newline.) 243 166.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "114" 40
%%Page: "115" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(115) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Synopsis:) 99 641.33 T
1 F
(Prints its arguments, separated by spaces.) 180 641.33 T
0 F
(Notes:) 99 621.33 T
1 F
(If the \336rst argument is \322-n\323, no newline is printed after the arguments.) 180 621.33 T
0 F
(See Also:) 99 601.33 T
1 F
(\337ush-output) 180 601.33 T
81 584.99 531 590 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 584.99 531 590 R
7 X
0 0 0 1 0 0 0 K
V
50 588.99 609.01 588.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 576.99 T
0 F
(elist) 99 576.99 T
0 10 Q
(Usage:) 99 559.33 T
1 F
(elist [<patient>]) 180 559.33 T
0 F
(Examples:) 99 539.33 T
1 F
(\322elist\323) 180 519.33 T
(list the events for the current thread and patient) 243 519.33 T
(\322elist ui\323) 180 500.33 T
(list the events for the last thread of the ui patient) 243 500.33 T
(\322elist :1\323) 180 481.33 T
(list the events for the \336rst thread of the current patient) 243 481.33 T
(\322elist geos:2\323) 180 462.33 T
(list the events for the second thread of the) 243 450.33 T
1 9 Q
(GEOS) 440.6 450.33 T
1 10 Q
( patient) 466.77 450.33 T
0 F
(Synopsis:) 99 431.33 T
1 F
(Display all events pending for a patient.) 180 431.33 T
0 F
(Notes:) 99 411.33 T
1 F
(The <patient> argument is of the form \324patient:thread\325. Each part of the) 180 411.33 T
-0.25 (patient name is optional, and if nothing is speci\336ed then the current patient) 180 398.33 P
(is listed.) 180 385.33 T
0 F
(See Also:) 99 365.33 T
1 F
(showcalls.) 180 365.33 T
81 348.98 531 353.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 348.98 531 353.99 R
7 X
0 0 0 1 0 0 0 K
V
50 352.98 609.01 352.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 340.98 T
0 F
(ensure-swat-attached) 99 340.98 T
0 10 Q
(Usage:) 99 323.32 T
1 F
(ensure-swat-attached) 180 323.32 T
0 F
(Examples:) 99 303.32 T
1 F
(\322ensure-swat-attached\323) 180 283.32 T
(Stop if Swat isn\325) 243 271.32 T
(t attached to) 318.03 271.32 T
1 9 Q
(GEOS) 379.34 271.32 T
1 10 Q
(.) 405.51 271.32 T
0 F
(Synopsis:) 99 252.32 T
1 F
(If Swat is not attached to) 180 252.32 T
1 9 Q
(GEOS) 299.47 252.32 T
1 10 Q
(, display an error and stop a command.) 325.64 252.32 T
0 F
(Notes:) 99 232.32 T
1 F
-0.74 (Use this command at the start of any other command that accesses the target) 180 232.32 P
1 9 Q
(PC) 180 219.32 T
1 10 Q
(. Doing so protects the user from the numerous warnings that can result) 192.5 219.32 T
(from an attempt to read memory when not attached.) 180 206.32 T
81 189.98 531 194.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 189.98 531 194.98 R
7 X
0 0 0 1 0 0 0 K
V
50 193.98 609.01 193.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 181.97 T
0 F
(eq\336nd) 99 181.97 T
0 10 Q
(Usage:) 99 164.31 T
1 F
(eq\336nd [-p]) 180 164.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "115" 41
%%Page: "116" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(116) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Examples:) 99 641.33 T
1 F
(\322eq\336nd\323 list all event queues in the system.) 180 621.33 T
( \322eq\336nd -p\323 list and print all event queues in the system.) 180 602.33 T
0 F
(Synopsis:) 99 583.33 T
1 F
(Display all event queues in the system.) 180 583.33 T
0 F
(See Also:) 99 563.33 T
1 F
(elist, eqlist, er\336nd.) 180 563.33 T
81 546.99 531 552 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 546.99 531 552 R
7 X
0 0 0 1 0 0 0 K
V
50 550.99 609.01 550.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 538.99 T
0 F
(eqlist) 99 538.99 T
0 10 Q
(Usage:) 99 521.33 T
1 F
(eqlist <queue handle> <name>) 180 521.33 T
0 F
(Examples:) 99 501.33 T
1 F
(\322eqlist 8320 geos:2\323) 180 481.33 T
(show the event list for geos:2) 243 469.33 T
0 F
(Synopsis:) 99 450.33 T
1 F
(Display all events in a queue.) 180 450.33 T
0 F
(Notes:) 99 430.33 T
2 F
(u) 180 410.33 T
1 F
(The queue handle argument is the handle to a queue.) 198 410.33 T
2 F
(u) 180 391.33 T
1 F
(The name argument is the name of the queue.) 198 391.33 T
0 F
(See Also:) 99 372.33 T
1 F
(elist.) 180 372.33 T
81 355.98 531 360.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 355.98 531 360.99 R
7 X
0 0 0 1 0 0 0 K
V
50 359.98 609.01 359.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 347.98 T
0 F
(er\336nd) 99 347.98 T
0 10 Q
(Usage:) 99 330.32 T
1 F
(er\336nd [-p]) 180 330.32 T
0 F
(Examples:) 99 310.32 T
1 F
(\322er\336nd\323 list all recorded event handles in the system.) 180 290.32 T
(\322er\336nd -p\323 list and print all recorded event handles in the system.) 180 271.32 T
0 F
(Synopsis:) 99 252.32 T
1 F
(Display all record event handles in the system. These are events that have) 180 252.32 T
(been recorded but not necessarily sent anywhere, so they will not appear in) 180 239.32 T
(the queue of any thread.) 180 226.32 T
0 F
(See Also:) 99 206.32 T
1 F
(elist, eqlist, eq\336nd, pevent.) 180 206.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "116" 42
%%Page: "117" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(117) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(error) 99 634.99 T
1 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
0 F
(eval) 99 612.98 T
1 F
(This is a T) 163.88 612.98 T
(cl primitive. See \322T) 221.6 612.98 T
(ool Command Language,\323 Chapter) 326.52 612.98 T
(5.) 520.99 612.98 T
81 598.97 531 603.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 598.97 531 603.98 R
7 X
0 0 0 1 0 0 0 K
V
50 602.97 609.01 602.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 590.97 T
0 F
(event) 99 590.97 T
1 F
(This is a T) 143 590.97 T
(cl primitive data structure. See \322T) 200.72 590.97 T
(ool Command Language,\323) 388.75 590.97 T
(Chapter) 472.1 578.97 T
(5.) 520.99 578.97 T
81 564.97 531 569.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 564.97 531 569.97 R
7 X
0 0 0 1 0 0 0 K
V
50 568.97 609.01 568.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 556.97 T
0 F
(exec) 99 556.97 T
1 F
(This is a T) 163.88 556.97 T
(cl primitive. See \322T) 221.6 556.97 T
(ool Command Language,\323 Chapter) 326.52 556.97 T
(5.) 520.99 556.97 T
81 542.96 531 547.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 542.96 531 547.97 R
7 X
0 0 0 1 0 0 0 K
V
50 546.96 609.01 546.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 534.96 T
0 F
(exit) 99 534.96 T
0 10 Q
(Usage:) 99 517.29 T
1 F
(exit <patient>) 180 517.29 T
0 F
(Examples:) 99 497.29 T
1 F
(\322exit faxmon\323) 180 477.29 T
(Causes the faxmon application to exit.) 243 465.29 T
0 F
(Synopsis:) 99 446.29 T
1 F
(Sends messages required to make an application quit.) 180 446.29 T
0 F
(Notes:) 99 426.29 T
1 F
(This command does nothing when you\325re stopped at) 180 426.29 T
3 F
(FatalError) 421.69 426.29 T
1 F
(, as it will) 477.44 426.29 T
(wait until the machine is idle before attempting to send) 180 413.29 T
1 9 Q
(MSG_MET) 439.86 413.29 T
(A_QUIT) 486.03 413.29 T
1 10 Q
(;) 520.48 413.29 T
(continuing from) 180 400.29 T
3 F
(FatalError) 256.66 400.29 T
1 F
( will cause the system to exit.) 313.15 400.29 T
0 F
(See Also:) 99 380.29 T
1 F
(run.) 180 380.29 T
81 363.95 531 368.96 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 363.95 531 368.96 R
7 X
0 0 0 1 0 0 0 K
V
50 367.95 609.01 367.95 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 355.95 T
0 F
(exit-thread) 99 355.95 T
0 10 Q
(Usage:) 99 338.28 T
1 F
(exit-thread [<exit-code>]) 180 338.28 T
0 F
(Examples:) 99 318.28 T
1 F
(\322exit-thread\323) 180 298.28 T
(Exit the current thread, returning zero to its parent.) 243 286.28 T
(\322exit-thread 1\323) 180 267.28 T
(Exit the current thread, returning one to its parent.) 243 255.28 T
0 F
(Synopsis:) 99 236.28 T
1 F
(Exit the current thread.) 180 236.28 T
0 F
(Notes:) 99 216.28 T
2 F
(u) 180 196.28 T
1 F
(The exit code argument is the status to return to the current thread\325) 198 196.28 T
(s) 513.2 196.28 T
(parent, which defaults to zero.) 198 184.28 T
2 F
(u) 180 165.28 T
1 F
(Do not invoke this function for an event-driven thread; send it a) 198 165.28 T
1 9 Q
(MSG_MET) 198 153.28 T
(A_DET) 244.17 153.28 T
(ACH) 274.18 153.28 T
1 10 Q
( instead.) 294.67 153.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "117" 43
%%Page: "118" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(118) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(See Also:) 99 641.33 T
1 F
(quit.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
0 F
(explain) 99 616.99 T
0 10 Q
(Usage:) 99 599.33 T
1 F
(explain) 180 599.33 T
0 F
(Examples:) 99 579.33 T
1 F
(\322explain\323) 180 579.33 T
0 F
(Synopsis:) 99 559.33 T
1 F
(Print a more detailed description of why the system crashed, if possible.) 180 559.33 T
0 F
(Notes:) 99 539.33 T
2 F
(u) 180 519.33 T
1 F
(This must be run from within the frame of the) 198 519.33 T
3 F
(FatalError\050\051) 414.5 519.33 T
1 F
( function.) 478.77 519.33 T
(Sometimes) 198 507.33 T
1 9 Q
(GEOS) 251.53 507.33 T
1 10 Q
( is not quite there. In this case, step an instruction or) 277.7 507.33 T
(two and then try the \322why\323 command again.) 198 495.33 T
2 F
(u) 180 476.33 T
1 F
(This simply looks up the enumerated constant for the error code in the) 198 476.33 T
1 9 Q
(AX) 198 464.33 T
1 10 Q
( register in the) 210.83 464.33 T
3 F
(FatalErrors) 282.13 464.33 T
1 F
( enumerated type de\336ned by the geode) 343.62 464.33 T
-0.22 (that called) 198 452.33 P
3 F
-0.22 (FatalError\050\051) 249.62 452.33 P
1 F
-0.22 (. For example, if a function in the kernel called) 313.89 452.33 P
3 F
(FatalError\050\051) 198 440.33 T
1 F
(,) 262.27 440.33 T
1 9 Q
(AX) 267.83 440.33 T
1 10 Q
( would be looked up in geos::FatalErrors, while if a) 280.66 440.33 T
(function in your application called) 198 428.33 T
3 F
(FatalError\050\051) 358.75 428.33 T
1 F
(, this function would) 423.02 428.33 T
(look it up in the FatalErrors type de\336ned by your application. Each) 198 416.33 T
(assembly application de\336nes this enumerated type by virtue of having) 198 404.33 T
(included) 198 392.33 T
3 F
(ec.def) 240.22 392.33 T
1 F
(.) 270.6 392.33 T
2 F
(u) 180 373.33 T
1 F
(This command also relies on programmers having explained their) 198 373.33 T
(FatalErrors when de\336ning them.) 198 361.33 T
2 F
(u) 180 342.33 T
1 F
(For certain fatal errors, additional information is provided by invoking) 198 342.33 T
(the command <patient>::<error code name>, if it exists.) 198 330.33 T
81 314.98 531 319.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 314.98 531 319.99 R
7 X
0 0 0 1 0 0 0 K
V
50 318.98 609.01 318.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 306.98 T
0 F
(explode) 99 306.98 T
0 10 Q
(Usage:) 99 289.32 T
1 F
(explode <string> [<sep-set>]) 180 289.32 T
0 F
(Examples:) 99 269.32 T
1 F
(\322explode $args\323) 180 249.32 T
-0.04 (Breaks the string stored in the variable \322args\323 into a list of its) 243 237.32 P
(individual letters.) 243 225.32 T
( \322explode $\336le /\323) 180 206.32 T
(Breaks the string stored in the variable \322\336le\323 into a list of its) 243 194.32 T
(components, using \322/\323 as the boundary between components) 243 182.32 T
(when performing the split.) 243 170.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "118" 44
%%Page: "119" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(119) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Synopsis:) 99 641.33 T
1 F
( Breaks a string into a list of its component letters, allowing them to be) 180 641.33 T
(handled quickly via a foreach loop, or the map or mapconcat commands.) 180 628.33 T
0 F
(Notes:) 99 608.33 T
1 F
(This is especially useful for parsing command switches.) 180 608.33 T
0 F
(See Also:) 99 588.33 T
1 F
(foreach, index, range.) 180 588.33 T
81 571.99 531 577 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 571.99 531 577 R
7 X
0 0 0 1 0 0 0 K
V
50 575.99 609.01 575.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 563.99 T
0 F
(expr) 99 563.99 T
1 F
(This is a T) 163.88 563.99 T
(cl primitive. See \322T) 221.6 563.99 T
(ool Command Language,\323 Chapter) 326.52 563.99 T
(5.) 520.99 563.99 T
81 549.98 531 554.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 549.98 531 554.99 R
7 X
0 0 0 1 0 0 0 K
V
50 553.98 609.01 553.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 541.98 T
0 F
(fatalerr_auto_explain) 99 541.98 T
0 10 Q
(Usage:) 99 524.32 T
1 F
(var fatalerr_auto_explain [\0500|1\051]) 180 524.32 T
0 F
(Examples:) 99 504.32 T
1 F
(\322var fatalerr_auto_explain 0\323) 180 484.32 T
(T) 243 472.32 T
(urn off automatic generation of the explanation for any) 248.96 472.32 T
(fatal-error hit.) 243 460.32 T
0 F
(Synopsis:) 99 441.32 T
1 F
(Determines if the \322why\323 command will automatically provide you with an) 180 441.32 T
(explanation of any fatal error you encounter) 180 428.32 T
(. If non-zero, they will be) 383.34 428.32 T
(provided whenever) 180 415.32 T
3 F
(FatalError) 270.55 415.32 T
1 F
( is hit.) 327.04 415.32 T
0 F
(Notes:) 99 395.32 T
2 F
(u) 180 375.32 T
1 F
-0.31 (Explanations are loaded from <patient>.fei \336les stored in the system T) 198 375.32 P
-0.31 (cl) 520.93 375.32 P
(library directory when an error in <patient> is encountered.) 198 363.32 T
2 F
(u) 180 344.32 T
1 F
(Y) 198 344.32 T
(ou can also obtain an explanation of an error via the \322explain\323) 203.93 344.32 T
(command.) 198 332.32 T
81 316.98 531 321.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 316.98 531 321.98 R
7 X
0 0 0 1 0 0 0 K
V
50 320.98 609.01 320.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 308.98 T
0 F
(fetch-optr) 99 308.98 T
0 10 Q
(Usage:) 99 291.31 T
1 F
(fetch-optr <handle> <offset>) 180 291.31 T
0 F
(Examples:) 99 271.31 T
1 F
(\322fetch-optr $h $o.GI_comp.CP_\336rstChild\323) 180 251.31 T
( Fetch the optr from the GI_comp.CP_\336rstChild \336eld of the) 243 239.31 T
(object at ^h$h:$o.) 243 227.31 T
0 F
(Synopsis:) 99 208.31 T
1 F
(Extracts an optr from memory) 180 208.31 T
(, coping with the data in the block that holds) 319.44 208.31 T
(the optr not having been relocated yet.) 180 195.31 T
0 F
(Notes:) 99 175.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "119" 45
%%Page: "120" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(120) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(<offset> is an actual offset, not a chunk handle, while <handle> is a) 198 641.33 T
(handle) 198 629.33 T
1 9 Q
(ID) 232.45 629.33 T
1 10 Q
(, not a handle token.) 243.12 629.33 T
2 F
(u) 180 610.33 T
1 F
-0.6 (Returns a two-list {<handle> <chunk>}, where <handle> is the handle) 198 610.33 P
1 9 Q
-0.54 (ID) 518.16 610.33 P
1 10 Q
-0.6 (from the optr) 198 598.33 P
-0.6 (, and <chunk> is the chunk handle \050low word\051 from the optr) 257.35 598.33 P
-0.6 (.) 526.04 598.33 P
2 F
(u) 180 579.33 T
1 F
(W) 198 579.33 T
(e decide whether to relocate the optr ourselves based on the) 207.26 579.33 T
1 9 Q
-0.61 (LMF_RELOCA) 198 567.33 P
-0.61 (TED) 261.5 567.33 P
1 10 Q
-0.68 ( bit in the) 281.01 567.33 P
4 9 Q
-0.61 (LMBH) 326.29 567.33 P
4 10 Q
-0.68 (_\337ags) 354.78 567.33 P
1 F
-0.68 ( \336eld of the block\325) 381.44 567.33 P
-0.68 (s header) 458.94 567.33 P
-0.68 (. There) 496.79 567.33 P
(are times, e.g. during the call to) 198 555.33 T
1 9 Q
(MSG_MET) 347.84 555.33 T
(A_RELOCA) 394.01 555.33 T
(TE) 443.51 555.33 T
1 10 Q
( for an object,) 456.01 555.33 T
-0.16 (when this bit doesn\325) 198 543.33 P
-0.16 (t accurately re\337ect the state of the class pointer and) 289.59 543.33 P
(we will return an error when we should not.) 198 531.33 T
81 515.99 531 521 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 515.99 531 521 R
7 X
0 0 0 1 0 0 0 K
V
50 519.99 609.01 519.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 507.99 T
0 F
(fhandle) 99 507.99 T
0 10 Q
(Usage:) 99 490.33 T
1 F
(fhandle <handle id>) 180 490.33 T
0 F
(Examples:) 99 470.33 T
1 F
(\322fhandle 3290h\323) 180 470.33 T
0 F
(Synopsis:) 99 450.33 T
1 F
(Print out a \336le handle.) 180 450.33 T
0 F
(Notes:) 99 430.33 T
2 F
(u) 180 410.33 T
1 F
-0.3 (The <handle id> argument is the handle number) 198 410.33 P
-0.3 (. File handles are listed) 421 410.33 P
(in the \336rst column of the \324fwalk\325 command.) 198 398.33 T
0 F
(See Also:) 99 379.33 T
1 F
(fwalk.) 180 379.33 T
81 362.98 531 367.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 362.98 531 367.99 R
7 X
0 0 0 1 0 0 0 K
V
50 366.98 609.01 366.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 354.98 T
0 F
(\336eld) 99 354.98 T
0 10 Q
(Usage:) 99 337.32 T
1 F
(\336eld <list> <\336eld name>) 180 337.32 T
0 F
(Examples:) 99 317.32 T
1 F
(\322\336eld [value fetch ds:si MyBox] topLeft\323) 180 297.32 T
(return the offset of the topLeft \336eld in MyBox) 243 285.32 T
0 F
(Synopsis:) 99 266.32 T
1 F
(Return the value for the \336eld\325) 180 266.32 T
(s offset in the structure.) 316.3 266.32 T
0 F
(Notes:) 99 246.32 T
2 F
(u) 180 226.32 T
1 F
-0.16 (The <list> argument is a structure-value list from the \322value\323 command.) 198 226.32 P
2 F
(u) 180 207.32 T
1 F
(The <\336eld name> argument is the \336eld in the structure.) 198 207.32 T
0 F
(See Also:) 99 188.32 T
1 F
(value, pobject, piv) 180 188.32 T
(.) 262.05 188.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "120" 46
%%Page: "121" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(121) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(\336eldwin) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(\336eldwin) 180 617.33 T
0 F
(Synopsis:) 99 597.33 T
1 F
(Print the address of the target machine\325) 180 597.33 T
(s current top-most \336eld window) 364.09 597.33 T
(.) 509.28 597.33 T
81 580.98 531 585.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 580.98 531 585.99 R
7 X
0 0 0 1 0 0 0 K
V
50 584.98 609.01 584.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 572.98 T
0 F
(\336le) 99 572.98 T
1 F
(This is a T) 163.88 572.98 T
(cl primitive. See \322T) 221.6 572.98 T
(ool Command Language,\323 Chapter) 326.52 572.98 T
(5.) 520.99 572.98 T
81 558.97 531 563.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 558.97 531 563.98 R
7 X
0 0 0 1 0 0 0 K
V
50 562.97 609.01 562.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 550.97 T
0 F
(\336nd) 99 550.97 T
0 10 Q
(Usage:) 99 533.31 T
1 F
(\336nd [-ir] <string> [<\336lename>]) 180 533.31 T
0 F
(Examples:) 99 513.31 T
1 F
(\322\336nd FileRead\323) 180 493.31 T
(Find next occurrence of string \322FileRead\323 in currently viewed) 243 481.31 T
(\336le) 243 469.31 T
(\322\336nd FI_foo poof.goc\323) 180 450.31 T
( \336nd \336rst occurrence of string \322FI_foo\323 in \336le poof.goc.) 243 438.31 T
( \322\336nd -ir myobject\323) 180 419.31 T
(case-insensitive reverse search for most recent occurrence of) 243 407.31 T
(string \322myobject\323 in currently viewed \336le) 243 395.31 T
0 F
(Synopsis:) 99 376.31 T
1 F
(Finds a string in a \336le and brings the line with that string to the middle of) 180 376.31 T
(Swat\325) 180 363.31 T
(s source window) 205.2 363.31 T
(.) 279.65 363.31 T
0 F
(Notes:) 99 343.31 T
2 F
(u) 180 323.31 T
1 F
(If no \336le argument is speci\336ed, \336nd will \336nd the next instance of the) 198 323.31 T
(string in the already viewed \336le starting from the current \336le position.) 198 311.31 T
2 F
(u) 180 292.31 T
1 F
(There must already be a source window displayed for \336nd to work.) 198 292.31 T
2 F
(u) 180 273.31 T
1 F
(Possible options to \336nd are:) 198 273.31 T
3 F
(-r) 207.8 254.31 T
1 F
(reverse search) 243 254.31 T
3 F
(-i) 207.8 235.31 T
1 F
(case insensitive search) 243 235.31 T
81 219.97 531 224.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 219.97 531 224.97 R
7 X
0 0 0 1 0 0 0 K
V
50 223.97 609.01 223.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 211.97 T
0 F
(\336nd-opcode) 99 211.97 T
0 10 Q
(Usage:) 99 194.3 T
1 F
(\336nd-opcode <addr> <byte>+) 180 194.3 T
0 F
(Synopsis:) 99 174.3 T
1 F
-0.5 (Locates the mnemonic for an opcode and decodesit. Accepts the address from) 180 174.3 P
(which the opcode bytes were fetched, and one or more opcode bytes as) 180 161.3 T
(arguments. Returns a list of data from the opcode descriptor:) 180 148.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "121" 47
%%Page: "122" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(122) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
( {name length branch-type args modrm bRead bW) 180 641.33 T
(ritten inst}) 410.39 641.33 T
4 F
(length) 180 621.33 T
1 F
( is the length of the instruction.) 208.88 621.33 T
4 F
(branch) 180 601.33 T
1 F
(-) 212.4 601.33 T
4 F
(type) 215.73 601.33 T
1 F
( is one of:) 234.43 601.33 T
3 F
(1) 180 581.33 T
1 F
( none \050\337ow passes to next instruction\051) 243 581.33 T
3 F
(j) 180 562.33 T
1 F
(absolute jump) 243 562.33 T
3 F
(b) 180 543.33 T
1 F
( pc-relative jump \050branch\051) 243 543.33 T
3 F
(r) 180 524.33 T
1 F
(near return) 243 524.33 T
3 F
(R) 180 505.33 T
1 F
(far return) 243 505.33 T
3 F
(i) 180 486.33 T
1 F
( interrupt return) 243 486.33 T
3 F
(I) 180 467.33 T
1 F
(interrupt instruction) 243 467.33 T
(Any argument descriptor that doesn\325) 180 448.33 T
(t match is to be taken as a literal. E.g.) 349.45 448.33 T
1 9 Q
(AX) 180 435.33 T
1 10 Q
( as a descriptor means) 192.83 435.33 T
1 9 Q
(AX) 299.14 435.33 T
1 10 Q
( is that operand.) 311.98 435.33 T
(modrm is the modrm byte for the opcode.) 180 415.33 T
4 F
-0.59 (bRead) 180 395.33 P
1 F
-0.59 ( is the number of bytes that may be read by the instruction, if one of its) 209.26 395.33 P
(operands is in memory) 180 382.33 T
(.) 284.08 382.33 T
4 F
-0.68 (bW) 182.1 362.33 P
-0.68 (ritten) 196.18 362.33 P
1 F
-0.68 ( is the number of bytes that may be written by the instruction, if one) 221.54 362.33 P
(of its operands is in memory) 180 349.33 T
(.) 309.64 349.33 T
4 F
-0.19 (inst) 180 329.33 P
1 F
-0.19 ( is the decoded form of the instruction. If not enough bytes were given to) 197.4 329.33 P
(decode the instruction,) 180 316.33 T
4 F
(inst) 287.96 316.33 T
1 F
( is returned as empty) 305.36 316.33 T
(.) 402.96 316.33 T
81 299.99 531 305 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 299.99 531 305 R
7 X
0 0 0 1 0 0 0 K
V
50 303.99 609.01 303.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 291.99 T
0 F
(\336nish) 99 291.99 T
0 10 Q
(Usage:) 99 274.33 T
1 F
(\336nish [<frame num>]) 180 274.33 T
0 F
(Examples:) 99 254.33 T
1 F
(\322\336nish\323) 180 234.33 T
(\336nish executing the current frame) 243 234.33 T
(\322\336nish 3\323) 180 215.33 T
(\336nish executing up to the third frame) 243 215.33 T
0 F
(Synopsis:) 99 196.33 T
1 F
(Finish the execution of a frame.) 180 196.33 T
0 F
(Notes:) 99 176.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "122" 48
%%Page: "123" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(123) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
-0.45 (The <frame num> argument is the number of the frame to \336nish. If none) 198 641.33 P
(is speci\336ed then the current frame is \336nished up. The number to use is) 198 629.33 T
(the number which appears in a backtrace.) 198 617.33 T
2 F
(u) 180 598.33 T
1 F
(The machine continues to run until the frame above is reached.) 198 598.33 T
0 F
(See Also:) 99 579.33 T
1 F
(backtrace.) 180 579.33 T
81 562.99 531 568 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 562.99 531 568 R
7 X
0 0 0 1 0 0 0 K
V
50 566.99 609.01 566.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 554.99 T
0 F
(\336nishframe) 99 554.99 T
0 10 Q
(Usage:) 99 537.33 T
1 F
(\336nishframe [<frame-token>]) 180 537.33 T
0 F
(Examples:) 99 517.33 T
1 F
(\322\336nishframe $cur\323) 180 497.33 T
(Run the machine to continue until it has returned from a) 243 485.33 T
(particular stack frame.) 243 473.33 T
0 F
(Synopsis:) 99 454.33 T
1 F
-0.28 (Allows the machine to continue until it has returned from a particular stack) 180 454.33 P
(frame.) 180 441.33 T
0 F
(Notes:) 99 421.33 T
2 F
(u) 180 401.33 T
1 F
(No) 198 401.33 T
1 9 Q
(FULLSTOP) 213.93 401.33 T
1 10 Q
( event is dispatched when the machine actually \336nishes) 263.95 401.33 T
-0.5 (executing in the given frame. The caller must dispatch it itself, using the) 198 389.33 P
(\322event\323 command.) 198 377.33 T
2 F
(u) 180 358.33 T
1 F
-0.66 (The command returns zero if the machine \336nished executing in the given) 198 358.33 P
(frame; non-zero if it was interrupted before that could happen.) 198 346.33 T
2 F
(u) 180 327.33 T
1 F
(The argument is a frame token, as returned by the \322frame\323 command.) 198 327.33 T
0 F
(See Also:) 99 308.33 T
1 F
(event, frame, \336nish.) 180 308.33 T
81 291.98 531 296.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 291.98 531 296.99 R
7 X
0 0 0 1 0 0 0 K
V
50 295.98 609.01 295.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 283.98 T
0 F
(\337agwin) 99 283.98 T
0 10 Q
(Usage:) 99 266.32 T
1 F
(\337agwin [<on>|off]) 180 266.32 T
0 F
(Synopsis:) 99 246.32 T
1 F
-0.45 (T) 180 246.32 P
-0.45 (urns on or off a window providing a continuous display of the machine \337ags) 185.96 246.32 P
(\050e.g. zero, carry\051.) 180 233.32 T
0 F
(See Also:) 99 213.32 T
1 F
(p\337ags.) 180 213.32 T
81 196.98 531 201.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 196.98 531 201.98 R
7 X
0 0 0 1 0 0 0 K
V
50 200.98 609.01 200.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 188.97 T
0 F
(\337owobj) 99 188.97 T
0 10 Q
(Usage:) 99 171.31 T
1 F
(\337owobj) 180 171.31 T
0 F
(Examples:) 99 151.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "123" 49
%%Page: "124" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(124) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322pobject [\337owobj]\323) 180 641.33 T
(print out the \337ow object.) 243 629.33 T
0 F
(Synopsis:) 99 610.33 T
1 F
(Prints out address of the uiFlowObj, which is the object which grabs the) 180 610.33 T
(mouse.) 180 597.33 T
0 F
(Notes:) 99 577.33 T
1 F
(This command is normally used with) 180 577.33 T
3 F
(pobject) 353.73 577.33 T
1 F
( to print out the object.) 392.07 577.33 T
81 560.99 531 566 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 560.99 531 566 R
7 X
0 0 0 1 0 0 0 K
V
50 564.99 609.01 564.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 552.99 T
0 F
(\337ush-output) 99 552.99 T
0 10 Q
(Usage:) 99 535.33 T
1 F
(\337ush-output) 180 535.33 T
0 F
(Examples:) 99 515.33 T
1 F
(\322\337ush-output\323) 180 495.33 T
(Forces pending output to be displayed.) 243 483.33 T
0 F
(Synopsis:) 99 464.33 T
1 F
(Flushes any pending output \050e.g. waiting for a newline\051 to the screen.) 180 464.33 T
0 F
(See Also:) 99 444.33 T
1 F
(echo.) 180 444.33 T
81 427.98 531 432.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 427.98 531 432.99 R
7 X
0 0 0 1 0 0 0 K
V
50 431.98 609.01 431.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 419.98 T
0 F
(fmtoptr) 99 419.98 T
0 10 Q
(Usage:) 99 402.32 T
1 F
(fmtoptr <handle-id> <chunk>) 180 402.32 T
0 F
(Examples:) 99 382.32 T
1 F
(\322fmtoptr 3160h o\323) 180 362.32 T
(Prints a description of the object whose address is ^l3160h:0) 243 350.32 T
(\050likely a thread/process\051.) 243 338.32 T
0 F
(Synopsis:) 99 319.32 T
1 F
(T) 180 319.32 T
(akes a global and a local handle and prints a description of the object) 186.05 319.32 T
(described by that optr) 180 306.32 T
(.) 280.75 306.32 T
0 F
(Notes:) 99 286.32 T
2 F
(u) 180 266.32 T
1 F
(If the global handle is a thread or a process, the thread\325) 198 266.32 T
(s name \050process) 453.59 266.32 T
-0.7 (thread for a process handle\051 and the chunk handle \050as an additional word) 198 254.32 P
(of data for the message\051 are printed.) 198 242.32 T
2 F
(u) 180 223.32 T
1 F
(If the global handle is a queue handle, the queue handle and the chunk) 198 223.32 T
(handle are printed, with a note that the thing\325) 198 211.32 T
(s a queue.) 411 211.32 T
2 F
(u) 180 192.32 T
1 F
(If Swat can determine the object\325) 198 192.32 T
(s class, the optr) 349.68 192.32 T
(, full classname, and) 421.17 192.32 T
(current far pointer are printed. In addition, if the chunk has its low bit) 198 180.32 T
-0.44 (set, the word \322parent\323 is placed before the output, to denote that the optr) 198 168.32 P
-0.52 (likely came from a link and is the parent of the object containing the optr) 198 156.32 P
-0.52 (.) 528.22 156.32 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "124" 50
%%Page: "125" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(125) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(See Also:) 99 641.33 T
1 F
(print.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
0 F
(fmtval) 99 616.99 T
0 10 Q
(Usage:) 99 599.33 T
1 F
(fmtval <value-list> <type-token> <indent> [<tail> [<one-line>]]) 180 599.33 T
0 F
(Examples:) 99 579.33 T
1 F
(\322fmtval [value fetch foo] [symbol \336nd type FooStruct] 0\323) 180 559.33 T
(Prints the value of the variable foo, which is assumed to be of) 243 547.33 T
(type FooStruct.) 243 535.33 T
0 F
(Synopsis:) 99 516.33 T
1 F
(This is the primary means of producing nicely-formatted output of data in) 180 516.33 T
(Swat. It is used by both the \322print\323 and \322_print\323 commands and is helpful if) 180 503.33 T
-0.12 (you want to print the value of a variable without entering anything into the) 180 490.33 P
(value history) 180 477.33 T
(.) 239.45 477.33 T
0 F
(Notes:) 99 457.33 T
2 F
(u) 180 437.33 T
1 F
(<value-list> is the return value from \322value fetch\323. Y) 198 437.33 T
(ou can, of course,) 439.77 437.33 T
(construct one of these if you feel so inclined.) 198 425.33 T
2 F
(u) 180 406.33 T
1 F
-0.81 (<type-token> is the token for the type-description used when fetching the) 198 406.33 P
(value.) 198 394.33 T
2 F
(u) 180 375.33 T
1 F
-0.58 (<indent> is the base indentation for all output. When \322fmtval\323 calls itself) 198 375.33 P
(recursively) 198 363.33 T
(, it increases this by 4 for each recursive call.) 247.99 363.33 T
2 F
(u) 180 344.33 T
1 F
(<tail> is an optional parameter that exists solely for use in formatting) 198 344.33 T
(nested arrays. It is a string to print after the entire value has been) 198 332.33 T
(formatted. Y) 198 320.33 T
(ou will almost always omit it or pass the empty string.) 255.23 320.33 T
2 F
(u) 180 301.33 T
1 F
(<one-line> is another optional parameter used almost exclusively for) 198 301.33 T
-0.27 (recursive calls. It indicates if the value being formatted is expected to \336t) 198 289.33 P
(on a single line, and so \322fmtval\323 should not force a newline to be output) 198 277.33 T
(at the end of the value. The value should be 0 or 1.) 198 265.33 T
0 F
(See Also:) 99 246.33 T
1 F
(print, _print, fmtoptr) 180 246.33 T
(, threadname.) 277.22 246.33 T
81 229.98 531 234.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 229.98 531 234.99 R
7 X
0 0 0 1 0 0 0 K
V
50 233.98 609.01 233.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 221.98 T
0 F
(focus) 99 221.98 T
0 10 Q
(Usage:) 99 204.32 T
1 F
(focus [<object>]) 180 204.32 T
0 F
(Examples:) 99 184.32 T
1 F
(\322focus\323) 180 164.32 T
(print focus hierarchy from the system object down) 243 164.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "125" 51
%%Page: "126" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(126) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
( \322focus -i\323) 180 641.33 T
(print focus hierarchy from implied grab down) 243 641.33 T
( \322focus ^l4e10h:20h\323) 180 622.33 T
(print focus hierarchy from ^l4e10h:20h down) 243 610.33 T
( \322focus [content]\323) 180 591.33 T
(print focus hierarchy from content under mouse.) 243 579.33 T
0 F
(Synopsis:) 99 560.33 T
1 F
(Prints the focus hierarchy below an object.) 180 560.33 T
0 F
(Notes:) 99 540.33 T
2 F
(u) 180 520.33 T
1 F
(If no argument is speci\336ed, the system object is used.) 198 520.33 T
2 F
(u) 180 501.33 T
1 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 501.33 P
(\337ags, see pobject.) 198 489.33 T
2 F
(u) 180 470.33 T
1 F
(Remember that the object you start from may have the focus within its) 198 470.33 T
-0.25 (part of the hierarchy) 198 458.33 P
-0.25 (, but still not have the focus because something in a) 292.06 458.33 P
(different part of the tree has it.) 198 446.33 T
2 F
(u) 180 427.33 T
1 F
-0.65 (The variable \322printNamesInObjT) 198 427.33 P
-0.65 (rees\323 can be used to print out the actual) 349.81 427.33 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 415.33 T
(This variable defaults to false.) 198 396.33 T
0 F
(See Also:) 99 377.33 T
1 F
(target, model, mouse, keyboard, pobject.) 180 377.33 T
81 360.99 531 366 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 360.99 531 366 R
7 X
0 0 0 1 0 0 0 K
V
50 364.99 609.01 364.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 352.99 T
0 F
(focusobj) 99 352.99 T
0 10 Q
(Usage:) 99 335.33 T
1 F
(focusobj) 180 335.33 T
0 F
(Examples:) 99 315.33 T
1 F
(\322focusobj\323) 180 295.33 T
(print model hierarchy from system object down) 243 295.33 T
(\322pobj [focusobj]\323) 180 276.33 T
(Do a pobject on the focus object \050equivalent to \322pobj -f\323\051.) 243 264.33 T
0 F
(Synopsis:) 99 245.33 T
1 F
(Returns the object with the focus.) 180 245.33 T
0 F
(See Also:) 99 225.33 T
1 F
(focus, target, model, targetobj, modelobj.) 180 225.33 T
81 208.98 531 213.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 208.98 531 213.99 R
7 X
0 0 0 1 0 0 0 K
V
50 212.98 609.01 212.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 200.98 T
0 F
(fonts) 99 200.98 T
0 10 Q
(Usage:) 99 183.32 T
1 F
(fonts [<args>]) 180 183.32 T
0 F
(Examples:) 99 163.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "126" 52
%%Page: "127" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(127) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322fonts\323) 180 641.33 T
(summarize general font usage) 243 641.33 T
(\322fonts -u\323) 180 622.33 T
(list fonts currently in use) 243 622.33 T
0 F
(Synopsis:) 99 603.33 T
1 F
(Print various font info.) 180 603.33 T
0 F
(Notes:) 99 583.33 T
2 F
(u) 180 563.33 T
1 F
(The <args> argument may be any of the following:) 198 563.33 T
3 F
( -a) 208.7 544.33 T
1 F
(list of fonts available) 243 544.33 T
3 F
(-d) 211.57 525.33 T
1 F
(list of font drivers available) 243 525.33 T
3 F
(-u) 211.57 506.33 T
1 F
([<) 243 506.33 T
1 9 Q
(ID) 252.39 506.33 T
1 10 Q
(>] list of fonts currently in use. Optional font) 263.05 506.33 T
1 9 Q
(ID) 473.02 506.33 T
1 10 Q
( to match.) 483.68 506.33 T
3 F
(-s) 214.44 487.33 T
1 F
(summary of above information) 243 487.33 T
( If no argument is speci\336ed the default is to show the summary) 180 468.33 T
(.) 470.58 468.33 T
2 F
(u) 180 449.33 T
1 F
-0.61 ( When using other commands you probably need to pass them the handle) 198 449.33 P
(in) 198 437.33 T
4 F
(FIUE_dataHandle) 210.04 437.33 T
1 F
(. When you don\325) 296.32 437.33 T
(t have the font\325) 369.66 437.33 T
(s handle ready) 438.93 437.33 T
(, the) 505.79 437.33 T
(best way is to use \322fonts -u\323 to \336nd the font at the right point size and) 198 425.33 T
(then grab the handle from there.) 198 413.33 T
0 F
(See Also:) 99 394.33 T
1 F
(pfont, pfontinfo, pusage, pchar) 180 394.33 T
(, pfontinfo.) 320.37 394.33 T
81 377.99 531 383 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 377.99 531 383 R
7 X
0 0 0 1 0 0 0 K
V
50 381.99 609.01 381.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 369.99 T
0 F
(for) 99 369.99 T
1 F
(This is a T) 163.88 369.99 T
(cl primitive. See \322T) 221.6 369.99 T
(ool Command Language,\323 Chapter) 326.52 369.99 T
(5.) 520.99 369.99 T
81 355.98 531 360.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 355.98 531 360.99 R
7 X
0 0 0 1 0 0 0 K
V
50 359.98 609.01 359.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 347.98 T
0 F
(foreach) 99 347.98 T
1 F
(This is a T) 163.88 347.98 T
(cl primitive. See \322T) 221.6 347.98 T
(ool Command Language,\323 Chapter) 326.52 347.98 T
(5.) 520.99 347.98 T
81 333.98 531 338.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 333.98 531 338.98 R
7 X
0 0 0 1 0 0 0 K
V
50 337.98 609.01 337.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 325.98 T
0 F
(format) 99 325.98 T
1 F
(This is a T) 163.88 325.98 T
(cl primitive. See \322T) 221.6 325.98 T
(ool Command Language,\323 Chapter) 326.52 325.98 T
(5.) 520.99 325.98 T
81 311.97 531 316.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 311.97 531 316.98 R
7 X
0 0 0 1 0 0 0 K
V
50 315.97 609.01 315.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 303.97 T
0 F
(fpstack) 99 303.97 T
0 10 Q
(Usage:) 99 286.3 T
1 F
(fpstack) 180 286.3 T
0 F
(Examples:) 99 266.3 T
1 F
(\322fpstack\323) 180 246.3 T
-0.13 (Prints out the hardware and software \337oating point stacks for) 243 246.3 P
(the patient.) 243 234.3 T
0 F
(Synopsis:) 99 215.3 T
1 F
(Prints out the hardware and software \337oating point stacks for the patient.) 180 215.3 T
0 F
(See Also:) 99 195.3 T
1 F
(fpstack, p\337oat.) 180 195.3 T
81 178.96 531 183.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 178.96 531 183.97 R
7 X
0 0 0 1 0 0 0 K
V
50 182.96 609.01 182.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 170.96 T
0 F
(fpu-state) 99 170.96 T
0 10 Q
(Usage:) 99 153.29 T
1 F
(fpustate [<mode>]) 180 153.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "127" 53
%%Page: "128" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(128) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Examples:) 99 641.33 T
1 F
(\322fpustate\323) 180 621.33 T
(Print out the state of the coprocessor) 243 621.33 T
(.) 412.26 621.33 T
(\322fpustate w\323) 180 602.33 T
(Dumps actual words of the numbers.) 243 602.33 T
0 F
(Synopsis:) 99 583.33 T
1 F
(Prints out the current state of the coprocessor) 180 583.33 T
(, if any) 391.1 583.33 T
(.) 421.85 583.33 T
0 F
(See Also:) 99 563.33 T
1 F
(fpstack, p\337oat.) 180 563.33 T
81 546.99 531 552 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 546.99 531 552 R
7 X
0 0 0 1 0 0 0 K
V
50 550.99 609.01 550.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 538.99 T
0 F
(frame) 99 538.99 T
0 10 Q
(Usage:) 99 521.33 T
1 F
(frame top) 180 521.33 T
(frame cur) 180 508.33 T
(frame get <ss> <sp> <cs> <ip>) 180 495.33 T
(frame next <frame>) 180 482.33 T
(frame prev <frame>) 180 469.33 T
(frame function [<frame>]) 180 456.33 T
(frame funcsym [<frame>]) 180 443.33 T
(frame scope [<frame>]) 180 430.33 T
(frame info [<frame>]) 180 417.33 T
(frame patient [<frame>]) 180 404.33 T
(frame register <regName> [<frame>]) 180 391.33 T
(frame set [<frame>]) 180 378.33 T
(frame setreg <regName> <value> [<frame>]) 180 365.33 T
(frame +<number>) 180 352.33 T
(frame -<number>) 180 339.33 T
(frame <number>) 180 326.33 T
0 F
(Examples:) 99 306.33 T
1 F
(\322var f [frame top]\323) 180 286.33 T
( Fetches the token for the frame at the top of the current) 243 274.33 T
(thread\325) 243 262.33 T
(s stack and stores it in the variable \322f\323) 275.41 262.33 T
( \322var f [frame next $f]\323) 180 243.33 T
-0.06 ( Fetches the token for the next frame up the stack \050away from) 243 231.33 P
(the top\051 from that whose token is in $f) 243 219.33 T
( \322frame register ax $f\323) 180 200.33 T
(Returns the value of the) 243 188.33 T
1 9 Q
(AX) 357.82 188.33 T
1 10 Q
( register in the given frame.) 370.65 188.33 T
( \322frame 1\323) 180 169.33 T
-0.8 (Sets the current frame for the current thread to be the top-most) 243 169.33 P
(one.) 243 157.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "128" 54
%%Page: "129" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(129) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Synopsis:) 99 641.33 T
1 F
-0.31 (This command provides access to the stack-decoding functions of swat. Most) 180 641.33 P
(of the subcommands deal with frame tokens, but a few also handle frame) 180 628.33 T
(numbers, for the convenience of the user) 180 615.33 T
(.) 366.47 615.33 T
0 F
(Notes:) 99 595.33 T
2 F
(u) 180 575.33 T
1 F
(Subcommands may be abbreviated uniquely) 198 575.33 T
(.) 401.01 575.33 T
2 F
(u) 180 556.33 T
1 F
(Stack decoding works by a heuristic method, rather than relying on the) 198 556.33 T
(presence of a created stack frame pointed to by) 198 544.33 T
1 9 Q
(BP) 417.46 544.33 T
1 10 Q
( in each function.) 429.96 544.33 T
(Because of this, it can occasionally get confused.) 198 532.33 T
2 F
(u) 180 513.33 T
1 F
-0.41 (Frame tokens are valid only while the target machine is stopped and are) 198 513.33 P
(invalidated when it is continued.) 198 501.33 T
2 F
(u) 180 482.33 T
1 F
(Each frame records the address on the stack where each register was) 198 482.33 T
-0.82 (most-recently pushed \050i.e. by the frame closest to it on the way toward the) 198 470.33 P
(top of the stack\051. Register pushes are looked for only at the start of a) 198 458.33 T
(function in what can be considered the function prologue.) 198 446.33 T
2 F
(u) 180 427.33 T
1 F
-0.36 (\322frame register\323 and \322frame setreg\323 allow you to get or set the value held) 198 427.33 P
(in a register in the given frame. For \322setreg\323, <value> is a standard) 198 415.33 T
(address expression, only the offset of which is used to set the register) 198 403.33 T
(.) 516.53 403.33 T
2 F
(u) 180 384.33 T
1 F
(\322frame register\323 returns all registers but \322pc\323 as a decimal number) 198 384.33 T
(. \322pc\323) 504.32 384.33 T
-0.1 (is formatted as two hex numbers \050each preceded by \3220x\323\051 separated by a) 198 372.33 P
(colon.) 198 360.33 T
2 F
(u) 180 341.33 T
1 F
(\322frame info\323 prints out information on where the register values for) 198 341.33 T
(\322frame register\323 and \322frame setreg\323 are coming from/going to for the) 198 329.33 T
(given or currently-selected frame. Because of the speed that can be) 198 317.33 T
-0.14 (gained by only pushing registers when you absolutely have to, there are) 198 305.33 P
-0.45 (many functions in) 198 293.33 P
1 9 Q
-0.41 (GEOS) 282.94 293.33 P
1 10 Q
-0.45 ( that do not push the registers they save at their) 309.11 293.33 P
(start, so Swat does not notice that they are actually saved. It is good to) 198 281.33 T
(make sure a register value is coming from a reliable source before) 198 269.33 T
(deciding your program has a bug simply because the value returned by) 198 257.33 T
(\322frame register\323 is invalid.) 198 245.33 T
2 F
(u) 180 226.33 T
1 F
-0.88 (For any subcommand where the <frame> token is optional, the currently-) 198 226.33 P
(selected frame will be used if you give no token.) 198 214.33 T
2 F
(u) 180 195.33 T
1 F
(\322frame cur\323 returns the token for the currently-selected stack frame.) 198 195.33 T
2 F
(u) 180 176.33 T
1 F
(\322frame set\323 is what sets the current frame, when set by a T) 198 176.33 T
(cl procedure.) 469.45 176.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "129" 55
%%Page: "130" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(130) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(\322frame +<number>\323 selects the frame <number> frames up the stack) 198 641.33 T
-0.44 (\050away from the top\051 from the current frame. \322frame -<number>\323 goes the) 198 629.33 P
(other way) 198 617.33 T
(.) 242.82 617.33 T
2 F
(u) 180 598.33 T
1 F
(\322frame <number>\323 selects the frame with the given number) 198 598.33 T
(, where the) 472.73 598.33 T
(top-most frame is considered frame number 1 and numbers count up) 198 586.33 T
(from there.) 198 574.33 T
2 F
(u) 180 555.33 T
1 F
(\322frame funcsym\323 returns the symbol token for the function active in the) 198 555.33 T
(given \050or current\051 frame. If no known function is active, you get \322nil\323.) 198 543.33 T
2 F
(u) 180 524.33 T
1 F
-0.76 (\322frame scope\323 returns the full name of the scope that is active in the given) 198 524.33 P
-0.8 (\050or current\051 frame. This will be different from the function if, for example,) 198 512.33 P
(one is in the middle of an \322if\323 that contains variables that are local to it) 198 500.33 T
(only) 198 488.33 T
(.) 216.52 488.33 T
2 F
(u) 180 469.33 T
1 F
-0.18 (\322frame function\323 returns the name of the function active in the given \050or) 198 469.33 P
(current\051 frame. If no known function is active, you get the) 198 457.33 T
1 9 Q
(CS) 467.63 457.33 T
1 10 Q
(:) 479.8 457.33 T
1 9 Q
(IP) 482.58 457.33 T
1 10 Q
( for the) 492.24 457.33 T
(frame, formatted as two hex numbers separated by a colon.) 198 445.33 T
2 F
(u) 180 426.33 T
1 F
-0.12 (\322frame patient\323 returns the token for the patient that owns the function) 198 426.33 P
(in which the frame is executing.) 198 414.33 T
0 F
(See Also:) 99 395.33 T
1 F
(addr) 180 395.33 T
(-parse, switch.) 201.3 395.33 T
81 378.99 531 384 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 378.99 531 384 R
7 X
0 0 0 1 0 0 0 K
V
50 382.99 609.01 382.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 370.99 T
0 F
(framewin) 99 370.99 T
0 10 Q
(Usage:) 99 353.33 T
1 F
(framewin [del]) 180 353.33 T
0 F
(Examples:) 99 333.33 T
1 F
(\322framewin\323) 180 313.33 T
-0.02 (Creates a single-line window to display info about the current) 243 301.33 P
(stack frame.) 243 289.33 T
(\322framewin del\323) 180 270.33 T
(Deletes the window created by a previous \322framewin\323.) 243 258.33 T
0 F
(Synopsis:) 99 239.33 T
1 F
(Creates a window in which the current stack frame is always displayed.) 180 239.33 T
0 F
(Notes:) 99 219.33 T
2 F
(u) 180 199.33 T
1 F
(Only one frame window can be active at a time.) 198 199.33 T
0 F
(See Also:) 99 180.33 T
1 F
(display) 180 180.33 T
(, regwin, ewatch, srcwin) 212.23 180.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "130" 56
%%Page: "131" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(131) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(freeze) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(freeze [<patient>]) 180 617.33 T
(freeze :<n>) 180 604.33 T
(freeze <patient>:<n>) 180 591.33 T
(freeze <id>) 180 578.33 T
0 F
(Examples:) 99 558.33 T
1 F
(\322freeze\323) 180 538.33 T
(Freezes the current thread.) 243 538.33 T
(\322freeze term\323) 180 519.33 T
(Freezes the application thread for \322term\323) 243 507.33 T
(\322freeze :1\323) 180 488.33 T
(Freezes thread #1 of the current patient) 243 488.33 T
(\322freeze 16c0h\323) 180 469.33 T
(Freezes the thread whose handle is 16c0h.) 243 457.33 T
0 F
(Synopsis:) 99 438.33 T
1 F
-0.45 (Freezing a thread prevents a thread from running unless it\325) 180 438.33 P
-0.45 (s the only thread) 451.69 438.33 P
(that\325) 180 425.33 T
(s runnable in the entire system.) 201.12 425.33 T
0 F
(Notes:) 99 405.33 T
2 F
(u) 180 385.33 T
1 F
-0.46 (A frozen thread is not dead in the water) 198 385.33 P
-0.46 (, as it will still run if nothing else) 378.23 385.33 P
(is runnable.) 198 373.33 T
2 F
(u) 180 354.33 T
1 F
(Freezing a thread is most useful when debugging multi-threaded) 198 354.33 T
(applications where a bug appears to be caused by a timing problem or) 198 342.33 T
(race condition between the two threads. Freezing one of the threads) 198 330.33 T
(ensures a consistent timing relationship between the two threads and) 198 318.33 T
(allows the bug to be reproduced much more easily) 198 306.33 T
(.) 427.28 306.33 T
2 F
(u) 180 287.33 T
1 F
(The freezing of a thread is accomplished by setting its base and current) 198 287.33 T
(priorities to as high a number as possible \050255\051 thereby making the) 198 275.33 T
-0.18 (thread the least-favored thread in the system. The previous priority can) 198 263.33 P
(be restored using the \322thaw\323 command.) 198 251.33 T
0 F
(See Also:) 99 232.33 T
1 F
(thaw) 180 232.33 T
(.) 202.42 232.33 T
81 215.98 531 220.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 215.98 531 220.99 R
7 X
0 0 0 1 0 0 0 K
V
50 219.98 609.01 219.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 207.98 T
0 F
(fullscreen) 99 207.98 T
0 10 Q
(Usage:) 99 190.32 T
1 F
(fullscreen) 180 190.32 T
0 F
(Examples:) 99 170.32 T
1 F
(\322fullscreen\323) 180 150.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "131" 57
%%Page: "132" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(132) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Synopsis:) 99 641.33 T
1 F
(Prints the full screen hierarchy from the system object down.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
0 F
(func) 99 616.99 T
0 10 Q
(Usage:) 99 599.33 T
1 F
(func [<func name>]) 180 599.33 T
0 F
(Examples:) 99 579.33 T
1 F
(\322func\323) 180 559.33 T
(return the current function.) 243 559.33 T
(\322func ObjMessage\323) 180 540.33 T
(set the frame to the \336rst frame for ObjMessage.) 243 528.33 T
0 F
(Synopsis:) 99 509.33 T
1 F
(Get the current function or set the frame to the given function.) 180 509.33 T
0 F
(Notes:) 99 489.33 T
2 F
(u) 180 469.33 T
1 F
-0.22 (The <func name> argument is the name of a function in the stack frame) 198 469.33 P
(of the current patient. The frame is set to the \336rst occurrence of the) 198 457.33 T
(function from the top of the stack.) 198 445.33 T
2 F
(u) 180 426.33 T
1 F
( If no <func name> argument is given then \324func\325 returns the current) 198 426.33 T
(function.) 198 414.33 T
0 F
(See Also:) 99 395.33 T
1 F
(backtrace, up, down, \336nish.) 180 395.33 T
81 378.98 531 383.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 378.98 531 383.99 R
7 X
0 0 0 1 0 0 0 K
V
50 382.98 609.01 382.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 370.98 T
0 F
(fvardata) 99 370.98 T
0 10 Q
(Usage:) 99 353.32 T
1 F
(fvardata <token> [<address>]) 180 353.32 T
0 F
(Examples:) 99 333.32 T
1 F
(\322fvardata) 180 313.32 T
1 9 Q
(A) 226.12 313.32 T
(TTR_VIS_TEXT_STYLE_ARRA) 232.12 313.32 T
(Y) 364.97 313.32 T
1 10 Q
( *ds:si\323) 371.31 313.32 T
0 F
(Synopsis:) 99 294.32 T
1 F
-0.05 (Locates and returns the value list for the data stored under the given token) 180 294.32 P
(in the vardata of the given object.) 180 281.32 T
0 F
(Notes:) 99 261.32 T
2 F
(u) 180 241.32 T
1 F
-0.22 (If the data are found, returns a list {<token> <data>}, where <data> is a) 198 241.32 P
(standard value list for the type of data associated with the speci\336ed) 198 229.32 T
(token.) 198 217.32 T
2 F
(u) 180 198.32 T
1 F
-0.62 (Returns an empty list if the object has no vardata entry of the given type.) 198 198.32 P
2 F
(u) 180 179.32 T
1 F
(If no <address> is given, the default is *ds:si.) 198 179.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "132" 58
%%Page: "133" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(133) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(fwalk) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(fwalk [<patient>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322fwalk\323) 180 577.33 T
(list all open \336les.) 243 577.33 T
(\322fwalk geos\323) 180 558.33 T
(list all open \336les owned by the) 243 546.33 T
1 9 Q
(GEOS) 385.44 546.33 T
1 10 Q
( patient.) 411.61 546.33 T
0 F
(Synopsis:) 99 527.33 T
1 F
(Print the list of \336les open anywhere in the system.) 180 527.33 T
0 F
(Notes:) 99 507.33 T
2 F
(u) 180 487.33 T
1 F
(The patient argument may be used to restrict the list to a particular) 198 487.33 T
-0.69 (patient. The patient may be speci\336ed either as the patient name or as the) 198 475.33 P
(patient\325) 198 463.33 T
(s handle.) 233.01 463.33 T
2 F
(u) 180 444.33 T
1 F
-0.06 (fwalk differs from) 198 444.33 P
3 F
-0.06 (sys\336les) 283.18 444.33 P
1 F
-0.06 ( and) 320.4 444.33 P
3 F
-0.06 (geos\336les) 343.25 444.33 P
1 F
-0.06 ( in that it deals primarily with) 387.32 444.33 P
1 9 Q
(GEOS) 198 432.33 T
1 10 Q
( data structures.) 224.17 432.33 T
2 F
(u) 180 413.33 T
1 F
(The \324Other) 198 413.33 T
(\325 column shows if there is a) 248.37 413.33 T
1 9 Q
(VM) 375.98 413.33 T
1 10 Q
( handle bound to the \336le.) 390.97 413.33 T
2 F
(u) 180 394.33 T
1 F
(The letters in the \324Flags\325 column mean the following:) 198 394.33 T
3 F
(R) 210.58 375.33 T
(W) 218.36 375.33 T
1 F
(deny) 243 375.33 T
1 9 Q
(R) 268 375.33 T
(W) 274.17 375.33 T
3 10 Q
(R) 202.24 356.33 T
1 F
(deny) 243 356.33 T
1 9 Q
(R) 268 356.33 T
3 10 Q
(W) 202.24 337.33 T
1 F
(deny) 243 337.33 T
1 9 Q
(W) 268 337.33 T
3 10 Q
(N) 202.24 318.33 T
1 F
(deny none) 243 318.33 T
3 F
(rw) 210.58 299.33 T
1 F
(access) 243 299.33 T
1 9 Q
(R) 274.48 299.33 T
(W) 280.64 299.33 T
3 10 Q
(r) 202.24 280.33 T
1 F
(access) 243 280.33 T
1 9 Q
(R) 274.48 280.33 T
3 10 Q
(w) 202.24 261.33 T
1 F
(access) 243 261.33 T
1 9 Q
(R) 274.48 261.33 T
(W) 280.64 261.33 T
3 10 Q
(O) 202.24 242.33 T
1 F
(override, used to override normal exclusion normally used by) 243 242.33 T
3 F
(FileEnum\050\051) 243 230.33 T
1 F
( to check out \336le headers.) 301.88 230.33 T
3 F
(E) 202.24 211.33 T
1 F
(exclusive, used to prevent override. This is used by) 243 211.33 T
3 F
(swap.geo) 480.61 211.33 T
0 F
(See Also:) 99 192.33 T
1 F
(fhandle, geos\336les, sys\336les.) 180 192.33 T
81 175.98 531 180.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 175.98 531 180.99 R
7 X
0 0 0 1 0 0 0 K
V
50 179.98 609.01 179.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 167.98 T
0 F
(gc) 99 167.98 T
0 10 Q
(Usage:) 99 150.32 T
1 F
(gc [\050off|register|<extensive-heap-checking-\337ag>]) 180 150.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "133" 59
%%Page: "134" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(134) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Synopsis:) 99 641.33 T
1 F
(Implements a simple garbage collector to scavenge unreferenced symbols) 180 641.33 T
(and types. If given an argument other than \322off\323 or \322register) 180 628.33 T
(,\323 it turns on) 456.12 628.33 T
(extensive heap checking, which slows things down enormously but ensures) 180 615.33 T
(the heap is in good shape. The \322gc register\323 command can be use to register) 180 602.33 T
-0.73 (a type created by \322type make\323as something that is being used for an extended) 180 589.33 P
(period at the T) 180 576.33 T
(cl level, preventing the thing from being garbage-collected.) 247.72 576.33 T
81 559.99 531 565 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 559.99 531 565 R
7 X
0 0 0 1 0 0 0 K
V
50 563.99 609.01 563.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 551.99 T
0 F
(gentree) 99 551.99 T
0 10 Q
(Usage:) 99 534.33 T
1 F
(gentree [<address>] [<instance \336eld>]) 180 534.33 T
0 F
(Examples:) 99 514.33 T
1 F
(\322gentree\323) 180 494.33 T
(print the generic tree starting at) 243 494.33 T
1 9 Q
(*DS:SI) 396.34 494.33 T
1 10 Q
(\322gentree -i\323) 180 475.33 T
(print the generic tree under the mouse) 243 475.33 T
(\322gentree [systemobj]\323) 180 456.33 T
(print the generic tree starting at the system\325) 243 444.33 T
(s root) 448.2 444.33 T
(\322gentree @23 GI_states\323) 180 425.33 T
(print the generic tree with generic states) 243 413.33 T
(\322gentree *uiSystemObj\323) 180 394.33 T
(start the generic tree at the root of the system) 243 382.33 T
0 F
(Synopsis:) 99 363.33 T
1 F
(Print a generic tree.) 180 363.33 T
0 F
(Notes:) 99 343.33 T
2 F
(u) 180 323.33 T
1 F
(The <address> argument is the address to an object in the generic tree.) 198 323.33 T
(This defaults to) 198 311.33 T
1 9 Q
(*DS:SI) 273.2 311.33 T
1 10 Q
(. The \324-i\325 \337ag for an implied grab may be used.) 302.21 311.33 T
2 F
(u) 180 292.33 T
1 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 292.33 P
(\337ags, see pobject.) 198 280.33 T
2 F
(u) 180 261.33 T
1 F
(The <instance \336eld> argument is the offset to any instance data within) 198 261.33 T
(the GenInstance which should be printed out.) 198 249.33 T
2 F
(u) 180 230.33 T
1 F
-0.65 (The variable \322printNamesInObjT) 198 230.33 P
-0.65 (rees\323 can be used to print out the actual) 349.81 230.33 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 218.33 T
(This variable defaults to false.) 198 206.33 T
0 F
(See Also:) 99 187.33 T
1 F
(gup, vistree, impliedgrab, systemobj, pobject.) 180 187.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "134" 60
%%Page: "135" 61
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(135) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(geos\336les) 99 634.99 T
0 10 Q
(Usage:) 99 616.33 T
1 F
(geos\336les) 180 616.33 T
0 F
(Examples:) 99 596.33 T
1 F
(\322geos\336les\323) 180 596.33 T
0 F
(Synopsis:) 99 576.33 T
1 F
(Print out all the \336les for which) 180 576.33 T
1 9 Q
(I/O) 324.83 576.33 T
1 10 Q
( is currently pending in) 338 576.33 T
1 9 Q
(GEOS) 449.11 576.33 T
1 10 Q
(.) 475.28 576.33 T
0 F
(Notes:) 99 556.33 T
2 F
(u) 180 536.33 T
1 F
-0.45 (This looks at the same dos structure as sys\336les but this prints only those) 198 536.33 P
(\336les also listed in) 198 524.33 T
1 9 Q
(GEOS) 281.17 524.33 T
1 10 Q
(\325 job \336le table.) 307.34 524.33 T
0 F
(See Also:) 99 505.33 T
1 F
(sys\336les, sftwalk, fwalk.) 180 505.33 T
81 488.98 531 493.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 488.98 531 493.99 R
7 X
0 0 0 1 0 0 0 K
V
50 492.98 609.01 492.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 480.98 T
0 F
(geos-release) 99 480.98 T
0 10 Q
(Synopsis:) 99 463.32 T
1 F
-0.03 (This variable contains the major number of the version of) 180 463.32 P
1 9 Q
-0.03 (GEOS) 448.07 463.32 P
1 10 Q
-0.03 ( running on) 474.24 463.32 P
(the target) 180 450.32 T
1 9 Q
(PC) 228.71 450.32 T
1 10 Q
(.) 241.21 450.32 T
81 433.98 531 438.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 433.98 531 438.98 R
7 X
0 0 0 1 0 0 0 K
V
50 437.98 609.01 437.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 425.98 T
0 F
(geowatch) 99 425.98 T
0 10 Q
(Usage:) 99 408.31 T
1 F
(geowatch [<object>]) 180 408.31 T
0 F
(Examples:) 99 388.31 T
1 F
(\322geowatch *MyObj\323) 180 368.31 T
(Display geometry calls that have reached the object MyObj) 243 356.31 T
(\322geowatch\323) 180 337.31 T
(Display geometry calls that have reached *ds:si \050asm\051 or oself) 243 337.31 T
(\050goc\051) 243 325.31 T
0 F
(Synopsis:) 99 306.31 T
1 F
-0.23 (This displays geometry calls that have reached a particular object. Only one) 180 306.31 P
(object at a time can be watched in this way) 180 293.31 T
(.) 377.64 293.31 T
0 F
(Notes:) 99 273.31 T
2 F
(u) 180 253.31 T
1 F
(T) 198 253.31 T
(wo conditional breakpoints are used by this function \050see cbrk\051. The) 203.96 253.31 T
(tokens for these breakpoints are returned.) 198 241.31 T
2 F
(u) 180 222.31 T
1 F
-0.01 (The special object \337ags may be used to specify) 198 222.31 P
4 F
-0.01 (object) 413.29 222.31 P
1 F
-0.01 (.  For a list of these) 439.4 222.31 P
(\337ags, see pobject.) 198 210.31 T
0 F
(See Also:) 99 191.31 T
1 F
(objwatch, mwatch, cbrk, pobject.) 180 191.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "135" 61
%%Page: "136" 62
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(136) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(get-address) 99 634.99 T
1 10 Q
-0.34 (Used by the various memory-access commands. T) 180 617.33 P
-0.34 (akes one argument,) 406.07 617.33 P
1 9 Q
-0.3 (ADDR) 498.78 617.33 P
1 10 Q
-0.34 (,) 525.78 617.33 P
(being the address argument for the command. T) 180 604.33 T
(ypically) 402.09 604.33 T
(, the command is) 436.91 604.33 T
(declared as) 180 591.33 T
6 F
([defcmd cmd {{addr nil}} \311 ]) 216 575.33 T
1 F
(allowing the address to be unspeci\336ed. This function will return the given) 180 554.33 T
(address if it was, else it will return the last-accessed address \050stored in the) 180 541.33 T
(global) 180 528.33 T
4 F
(lastAddr) 210.57 528.33 T
1 F
( variable as a 3-tuple from addr) 251.3 528.33 T
(-parse\051 in the form of an) 397.26 528.33 T
(address expression. If no address is recorded \050) 180 515.33 T
4 F
(lastAddr) 392.21 515.33 T
1 F
( is nil\051, the) 432.94 515.33 T
(default-addr argument is used. If it is not speci\336ed then) 180 502.33 T
1 9 Q
(CS) 440.94 502.33 T
1 10 Q
(:) 453.11 502.33 T
1 9 Q
(IP) 455.89 502.33 T
1 10 Q
( will be used.) 465.55 502.33 T
81 485.98 531 490.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 485.98 531 490.99 R
7 X
0 0 0 1 0 0 0 K
V
50 489.98 609.01 489.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 477.98 T
0 F
(getcc) 99 477.98 T
0 10 Q
(Usage:) 99 460.32 T
1 F
(getcc <\337ag>) 180 460.32 T
0 F
(Examples:) 99 440.32 T
1 F
(\322getcc c\323) 180 420.32 T
(Get the carry \337ag.) 243 420.32 T
0 F
(Synopsis:) 99 401.32 T
1 F
(Get a \337ag from the target machine.) 180 401.32 T
0 F
(Notes:) 99 381.32 T
2 F
(u) 180 361.32 T
1 F
-0.02 (The \336rst argument is the \336rst letter of the \337ag to get. The following is a) 198 361.32 P
(list of the \337ags:) 198 349.32 T
3 F
(t) 225.92 330.32 T
1 F
(trap) 243 330.32 T
3 F
(i) 223.05 311.32 T
1 F
(interrupt enable) 243 311.32 T
3 F
(d) 208.7 292.32 T
1 F
( direction) 243 292.32 T
3 F
(o) 208.7 273.32 T
1 F
( over\337ow) 243 273.32 T
3 F
(s) 208.7 254.32 T
1 F
( sign) 243 254.32 T
3 F
(z) 208.7 235.32 T
1 F
( zero) 243 235.32 T
3 F
(a) 208.7 216.32 T
1 F
( auxiliary carry) 243 216.32 T
3 F
(p) 208.7 197.32 T
1 F
( parity) 243 197.32 T
3 F
(c) 208.7 178.32 T
1 F
( carry) 243 178.32 T
2 F
(u) 180 159.32 T
1 F
(This command is handy to run with a breakpoint to stop if a \337ag is set.) 198 159.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "136" 62
%%Page: "137" 63
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(137) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(See Also:) 99 641.33 T
1 F
(setcc, clrcc, compcc.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
0 F
(getenv) 99 616.99 T
0 10 Q
(Usage:) 99 599.33 T
1 F
(getenv <) 180 599.33 T
1 9 Q
(NAME) 219.58 599.33 T
1 10 Q
(>) 248.41 599.33 T
0 F
(Examples:) 99 579.33 T
1 F
(\322getenv) 180 559.33 T
1 9 Q
(PTTY) 217.41 559.33 T
1 10 Q
(\323) 241.76 559.33 T
(Fetches the value of the host machine\325) 243 547.33 T
(s) 419.5 547.33 T
1 9 Q
(PTTY) 426.91 547.33 T
1 10 Q
( environment) 451.26 547.33 T
(variable.) 243 535.33 T
0 F
(Synopsis:) 99 516.33 T
1 F
(Returns the value for a variable de\336ned in Swat\325) 180 516.33 T
(s environment.) 404.11 516.33 T
0 F
(Notes:) 99 496.33 T
1 F
(If the variable isn\325) 180 496.33 T
(t de\336ned, this returns the empty string.) 264.28 496.33 T
0 F
(See Also:) 99 476.33 T
1 F
(var) 180 476.33 T
(, string.) 194.63 476.33 T
81 459.98 531 464.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 459.98 531 464.99 R
7 X
0 0 0 1 0 0 0 K
V
50 463.98 609.01 463.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 451.98 T
0 F
(get-key-binding) 99 451.98 T
0 10 Q
(Usage:) 99 434.32 T
1 F
(get-key-binding <char>) 180 434.32 T
0 F
(Examples:) 99 414.32 T
1 F
(\322get-key-binding c\323) 180 394.32 T
(Gets key binding for the character c.) 243 382.32 T
(\322get-key-binding \134045\323) 180 363.32 T
(Gets key binding for the % key) 243 351.32 T
(.) 383.76 351.32 T
0 F
(Synopsis:) 99 332.32 T
1 F
(Gets key binding for given key) 180 332.32 T
(.) 319.65 332.32 T
0 F
(See Also:) 99 312.32 T
1 F
(alias, bind-key) 180 312.32 T
(, unbind-key) 246.69 312.32 T
(.) 303.55 312.32 T
81 295.98 531 300.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 295.98 531 300.98 R
7 X
0 0 0 1 0 0 0 K
V
50 299.98 609.01 299.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 287.98 T
0 F
(getvalue) 99 287.98 T
0 10 Q
(Usage:) 99 270.31 T
1 F
(getvalue <expr>) 180 270.31 T
0 F
(Examples:) 99 250.31 T
1 F
(\322getvalue) 180 230.31 T
1 9 Q
(MSG_MET) 226.12 230.31 T
(A_DET) 272.29 230.31 T
(ACH) 302.3 230.31 T
1 10 Q
(\323) 322.79 230.31 T
(Returns the integer value of the symbol) 243 218.31 T
1 9 Q
(MSG_MET) 428.94 218.31 T
(A_DET) 475.11 218.31 T
(ACH) 505.12 218.31 T
1 10 Q
(.) 525.61 218.31 T
0 F
(Synopsis:) 99 199.31 T
1 F
(This is a front-end to the \322addr) 180 199.31 T
(-parse\323 command that allows you to easily) 322.61 199.31 T
(obtain the integer value of any expression. It\325) 180 186.31 T
(s most useful for converting) 388.73 186.31 T
(something the user might have given you to a decimal integer for further) 180 173.31 T
(processing.) 180 160.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "137" 63
%%Page: "138" 64
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(138) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Notes:) 99 641.33 T
1 F
-0.02 (If the expression you give does not evaluate to an address \050whose offset will) 180 641.33 P
(be returned\051 or an integer) 180 628.33 T
(, the results of this function are unde\336ned.) 299.07 628.33 T
0 F
(See Also:) 99 608.33 T
1 F
(addr) 180 608.33 T
(-parse, addr) 201.3 608.33 T
(-preprocess.) 256.86 608.33 T
81 591.99 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 591.99 531 597 R
7 X
0 0 0 1 0 0 0 K
V
50 595.99 609.01 595.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 583.99 T
0 F
(global) 99 583.99 T
1 F
(This is a T) 163.88 583.99 T
(cl primitive. See \322T) 221.6 583.99 T
(ool Command Language,\323 Chapter) 326.52 583.99 T
(5.) 520.99 583.99 T
81 569.98 531 574.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 569.98 531 574.99 R
7 X
0 0 0 1 0 0 0 K
V
50 573.98 609.01 573.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 561.98 T
0 F
(go) 99 561.98 T
0 10 Q
(Usage:) 99 544.32 T
1 F
(go [<address expressions>]) 180 544.32 T
0 F
(Examples:) 99 524.32 T
1 F
(\322go\323) 180 504.32 T
(\322go drawLeftLine\323) 243 504.32 T
0 F
(Synopsis:) 99 485.32 T
1 F
(Go until an address is reached.) 180 485.32 T
0 F
(Notes:) 99 465.32 T
2 F
(u) 180 445.32 T
1 F
-0.3 (The <address expressions> argument is as many address expressions as) 198 445.32 P
(desired for breakpoints. Execution is continued until a breakpoint is) 198 433.32 T
(reached. These breakpoints are then removed when the machine stops) 198 421.32 T
(and are only active for the current patient.) 198 409.32 T
0 F
(See Also:) 99 390.32 T
1 F
(break, continue, det, quit.) 180 390.32 T
81 373.98 531 378.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 373.98 531 378.98 R
7 X
0 0 0 1 0 0 0 K
V
50 377.98 609.01 377.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 365.98 T
0 F
(grobjtree) 99 365.98 T
0 10 Q
(Usage:) 99 348.31 T
1 F
(grobjtree [<address>] [<instance \336eld>]) 180 348.31 T
0 F
(Examples:) 99 328.31 T
1 F
(\322grobjtree\323) 180 308.31 T
(Print the grobj tree starting at *ds:si) 243 308.31 T
0 F
(Synopsis:) 99 289.31 T
1 F
(Print out a GrObj tree.) 180 289.31 T
0 F
(Notes:) 99 269.31 T
2 F
(u) 180 249.31 T
1 F
(The address argument is the address of a GrObj Body This defaults to) 198 249.31 T
(*ds:si.) 198 237.31 T
2 F
(u) 180 218.31 T
1 F
(T) 198 218.31 T
(o get the address of the grobj body) 203.75 218.31 T
(, use the \322pbody\323 or \322target\323) 360.43 218.31 T
(commands.) 198 206.31 T
0 F
(See Also:) 99 187.31 T
1 F
(pbody) 180 187.31 T
(.) 206.3 187.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "138" 64
%%Page: "139" 65
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(139) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(gup) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(gup [<address>] [<instance \336eld>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322gup\323) 180 577.33 T
(print the generic object at *) 243 577.33 T
1 9 Q
(DS:SI) 370.04 577.33 T
1 10 Q
( and its ancestors) 394.55 577.33 T
( \322gup @23 GI_states\323) 180 558.33 T
(print the states of object @23 and its ancestors) 243 546.33 T
(\322gup -i\323) 180 527.33 T
(print the generic object under the mouse and the object\325) 243 527.33 T
(s) 499.67 527.33 T
(ancestors) 243 515.33 T
0 F
(Synopsis:) 99 496.33 T
1 F
(Print a list of the object and all of its generic ancestors.) 180 496.33 T
0 F
(Notes:) 99 476.33 T
2 F
(u) 180 456.33 T
1 F
-0.73 (The address argument is the address to an object in the generic tree. This) 198 456.33 P
(defaults to *) 198 444.33 T
1 9 Q
(DS:SI) 254.86 444.33 T
1 10 Q
(. The \324-i\325 \337ag for an implied grab may be used.) 279.37 444.33 T
2 F
(u) 180 425.33 T
1 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 425.33 P
(\337ags, see pobject.) 198 413.33 T
2 F
(u) 180 394.33 T
1 F
-0.3 (The instance \336eld argument is the offset to any instance data within the) 198 394.33 P
(GenInstance which should be printed out.) 198 382.33 T
0 F
(See Also:) 99 363.33 T
1 F
(gentree, vup, vistree, impliedgrab.) 180 363.33 T
81 346.98 531 351.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 346.98 531 351.99 R
7 X
0 0 0 1 0 0 0 K
V
50 350.98 609.01 350.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 338.98 T
0 F
(handle) 99 338.98 T
1 F
(This is a T) 163.88 338.98 T
(cl primitive. See \322T) 221.6 338.98 T
(ool Command Language,\323 Chapter) 326.52 338.98 T
(5.) 520.99 338.98 T
81 324.98 531 329.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 324.98 531 329.98 R
7 X
0 0 0 1 0 0 0 K
V
50 328.98 609.01 328.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 316.98 T
0 F
(handles) 99 316.98 T
0 10 Q
(Usage:) 99 299.31 T
1 F
(handles [<\337ags>] [<patient>]) 180 299.31 T
0 F
(Examples:) 99 279.31 T
1 F
(\322handles\323) 180 279.31 T
(\322handles -f\323) 180 266.31 T
(\322handles ui\323) 180 253.31 T
0 F
(Synopsis:) 99 233.31 T
1 F
(Print all handles in-use.) 180 233.31 T
0 F
(Notes:) 99 213.31 T
2 F
(u) 180 193.31 T
1 F
(The \337ags argument is a collection of \337ags, beginning with \324-\325, from the) 198 193.31 T
(following set:) 198 181.31 T
3 F
(s) 211.57 162.31 T
1 F
(print summary only) 243 162.31 T
(.) 334.3 162.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "139" 65
%%Page: "140" 66
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(140) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
(e) 211.57 641.33 T
1 F
(events only) 243 641.33 T
(.) 294.3 641.33 T
3 F
(p) 211.57 622.33 T
1 F
(don\325) 243 622.33 T
(t print prevPtr and nextPtr) 261.71 622.33 T
(.) 387.64 622.33 T
3 F
(f) 211.57 603.33 T
1 F
(fast print-out - this doesn\325) 243 603.33 T
(t try to \336gure out the block type.) 362.64 603.33 T
3 F
(r) 225.92 584.33 T
1 F
(reverse, i.e. starts at the end of the handle table.) 243 584.33 T
3 F
(u) 223.05 565.33 T
1 F
(print only those handles that are in-use.) 243 565.33 T
2 F
(u) 180 546.33 T
1 F
(The) 198 546.33 T
4 F
(patient) 218.56 546.33 T
1 F
( argument is a patient whose blocks are to be selectively) 250.96 546.33 T
-0.62 (printed \050either a name or a core-block\325) 198 534.33 P
-0.62 (s handle) 370.05 534.33 P
1 9 Q
-0.55 (ID) 410.68 534.33 P
1 10 Q
-0.62 (\051. The default is to print) 421.35 534.33 P
(all the blocks on the heap.) 198 522.33 T
2 F
(u) 180 503.33 T
1 F
(The following columns can appear in a listing:) 198 503.33 T
1 9 Q
(HANDLE) 180 484.33 T
1 10 Q
(The handle of the block) 243 484.33 T
1 9 Q
(ADDR) 180 465.33 T
1 10 Q
(The segment address of the block) 243 465.33 T
1 9 Q
(SIZE) 180 446.33 T
1 10 Q
(Size of the block in bytes) 243 446.33 T
1 9 Q
(PREV) 180 427.33 T
1 10 Q
(The previous block handle \050appears with the p \337ag\051) 243 427.33 T
1 9 Q
(NEXT) 180 408.33 T
1 10 Q
(The next block handle \050appears with the p \337ag\051) 243 408.33 T
1 9 Q
(FLAGS) 180 389.33 T
1 10 Q
(The following letters appears in the) 243 389.33 T
1 9 Q
(FLAGS) 410.43 389.33 T
1 10 Q
( column:) 441.61 389.33 T
3 F
(s) 243 377.33 T
1 F
(sharable,) 256.34 377.33 T
3 F
(S) 243 365.33 T
1 F
(swapable,) 255.23 365.33 T
3 F
(D) 243 353.33 T
1 F
(discardable,) 256.89 353.33 T
3 F
(L) 243 341.33 T
1 F
( contains local memory heap,) 253 341.33 T
3 F
(d) 243 329.33 T
1 F
( discarded) 255.23 329.33 T
-0.33 ( \050by LMem module: discarded blocks don\325) 273.58 317.33 P
-0.33 (t appear here\051,) 461.06 317.33 P
3 F
(a) 243 305.33 T
1 F
(attached \050notice given to swat whenever state changes\051) 257.45 305.33 T
1 9 Q
(LOCK) 180 286.33 T
1 10 Q
(Number of times the block is locked or n/a if) 243 286.33 T
1 9 Q
(FIXED) 449.33 286.33 T
1 10 Q
(.) 478.83 286.33 T
1 9 Q
(OWNER) 180 267.33 T
1 10 Q
(The process which owns the block) 243 267.33 T
1 9 Q
(IDLE) 180 248.33 T
1 10 Q
-0.1 (The time since the block has been accessed in minutes:seconds) 243 248.33 P
1 9 Q
(OINFO) 180 229.33 T
1 10 Q
(The) 243 229.33 T
4 F
(otherInfo) 263.56 229.33 T
1 F
( \336eld of the handle \050block type dependent\051) 305.58 229.33 T
1 9 Q
(TYPE) 180 210.33 T
1 10 Q
(T) 243 210.33 T
(ype of the block, for example: R#1 \050dgroup\051 resource number) 249.15 210.33 T
(one) 243 198.33 T
2 F
(u) 180 179.33 T
1 F
(This only prints those handles in memory while \324handles\325 prints all) 198 179.33 T
(handles used.) 198 167.33 T
2 F
(u) 180 148.33 T
1 F
(The handles may be printed with lhwalk and phandle.) 198 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "140" 66
%%Page: "141" 67
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(141) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(See Also:) 99 641.33 T
1 F
(lhwalk, phandle, hgwalk.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
0 F
(handsum) 99 616.99 T
0 10 Q
(Usage:) 99 599.33 T
1 F
(handsum) 180 599.33 T
0 F
(Examples:) 99 579.33 T
1 F
(\322handsum\323) 180 559.33 T
(Summarize the use to which the handle table is being put.) 243 559.33 T
0 F
(Synopsis:) 99 540.33 T
1 F
-0.24 (This command analyzes the handle table and prints out a list of the number) 180 540.33 P
(of handles being used by each geode, and for what purpose.) 180 527.33 T
0 F
(Notes:) 99 507.33 T
2 F
(u) 180 487.33 T
1 F
(The columns of the output are labeled somewhat obscurely) 198 487.33 T
(, owing to) 468.03 487.33 T
(horizontal-space constraints. The headings, and their meanings are:) 198 475.33 T
3 F
(Res) 182.78 456.33 T
1 F
(Resource handles \050i.e. handles for data stored in the geode\325) 243 456.33 T
(s) 513.76 456.33 T
(executable\051) 243 444.33 T
3 F
(Mem) 182.78 425.33 T
1 F
(Non-resource memory handles) 243 425.33 T
3 F
(File) 182.78 406.33 T
1 F
(Open \336les) 243 406.33 T
3 F
(Thds) 182.78 387.33 T
1 F
(Threads) 243 387.33 T
3 F
(Evs) 182.78 368.33 T
1 F
(Recorded events) 243 368.33 T
3 F
(Qs) 182.78 349.33 T
1 F
(Event queues) 243 349.33 T
3 F
(Sems) 182.78 330.33 T
1 F
(Semaphores) 243 330.33 T
3 F
(EDat) 182.78 311.33 T
1 F
(Data for recorded events) 243 311.33 T
3 F
(T) 182.78 292.33 T
(im) 189.75 292.33 T
1 F
(T) 243 292.33 T
(imers) 249.42 292.33 T
3 F
(SB) 182.78 273.33 T
1 F
(Saved blocks \050handles tracking memory/resource handles) 243 273.33 T
(whose contents will go to an application\325) 243 261.33 T
(s state \336le\051) 428.59 261.33 T
3 F
(VMF) 182.78 242.33 T
1 9 Q
(VM) 243 242.33 T
1 10 Q
( \336les) 257.99 242.33 T
2 F
(u) 180 223.33 T
1 F
(The \322handles\323 command is good at printing out all the handles for a) 198 223.33 T
-0.86 (particular geode, but it\325) 198 211.33 P
-0.86 (s generally too verbose to use for the entire handle) 303.42 211.33 P
(table. That\325) 198 199.33 T
(s why this command exists.) 250.62 199.33 T
2 F
(u) 180 180.33 T
1 F
(It\325) 198 180.33 T
(s a good idea to issue the command \322dcache length 4096\323 before) 207.63 180.33 T
-0.71 (executing this command, as it ensures the entire handle table will end up) 198 168.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "141" 67
%%Page: "142" 68
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(142) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(in Swat\325) 198 641.33 T
(s data cache, for quick access if you want to use the \322handles\323) 235.24 641.33 T
(command immediately afterward.) 198 629.33 T
81 613.99 531 619 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 613.99 531 619 R
7 X
0 0 0 1 0 0 0 K
V
50 617.99 609.01 617.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 605.99 T
0 F
(hbrk) 99 605.99 T
0 10 Q
(Usage:) 99 588.33 T
1 F
(hbrk <address> \050byte|word\051 \050match|mismatch\051 <value>) 180 588.33 T
0 F
(Examples:) 99 568.33 T
1 F
(\322hbrk scrollT) 180 548.33 T
(ab+10 byte match 0\323) 239.57 548.33 T
-0.09 (print message handlers until a zero is written at scrollT) 243 536.33 P
-0.09 (ab+10.) 499.92 536.33 P
(\322hbrk OLScrollButton+3 word mismatch 0x654f\323) 180 517.33 T
(Break when the word at OLScrollButton+3 is destroyed.) 243 505.33 T
0 F
(Synopsis:) 99 486.33 T
1 F
(Break when a memory location changes.) 180 486.33 T
0 F
(Notes:) 99 466.33 T
2 F
(u) 180 446.33 T
1 F
(The <address> argument is the address to watch for a change.) 198 446.33 T
2 F
(u) 180 427.33 T
1 F
(The \050byte|word\051 argument indicates whether to watch a byte or a word) 198 427.33 T
(for a change.) 198 415.33 T
2 F
(u) 180 396.33 T
1 F
-0.72 (The \050match|mismatch\051 argument indicates whether to break if the value) 198 396.33 P
(at the address matches or mismatches the value hbrk is called with.) 198 384.33 T
2 F
(u) 180 365.33 T
1 F
-0.35 (hbrk emulates a hardware breakpoint by checking at every message call) 198 365.33 P
-0.27 (to see if a location in memory has been written to. If so, swat breaks and) 198 353.33 P
(tells between which two messages the write occurred. The information) 198 341.33 T
-0.6 (and the return stack will hopefully guide you to the offending line of code.) 198 329.33 P
2 F
(u) 180 310.33 T
1 F
(The command creates two breakpoints. Remove these to get rid of the) 198 310.33 T
(hardware breakpoint.) 198 298.33 T
0 F
(See Also:) 99 279.33 T
1 F
(brk, mwatch, showcalls.) 180 279.33 T
81 262.98 531 267.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 262.98 531 267.99 R
7 X
0 0 0 1 0 0 0 K
V
50 266.98 609.01 266.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 254.98 T
0 F
(heapspace) 99 254.98 T
0 10 Q
(Usage:) 99 237.32 T
1 F
(heapspace <geode>) 180 237.32 T
(heapspace total) 180 224.32 T
(heapspace syslib) 180 211.32 T
0 F
(Examples:) 99 191.32 T
1 F
(\322heapspace geomanager\323) 180 171.32 T
(print out \322heapspace\323 value for geomanager) 243 159.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "142" 68
%%Page: "143" 69
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(143) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322heapspace total\323) 180 641.33 T
(print out maxT) 243 629.33 T
(otalHeapSpace) 312.46 629.33 T
(\322heapspace syslib\323) 180 610.33 T
(print out space being used by system libraries.) 243 598.33 T
0 F
(Synopsis:) 99 579.33 T
1 F
-0.8 (Prints out how much space the program requires on the heap. This value may) 180 579.33 P
(then be used in a \322heapspace\323 line of the program\325) 180 566.33 T
(s .gp \336eld. This command) 410.4 566.33 T
-0.81 (only determines present usage\321to determine the most heapspace your geode) 180 553.33 P
-0.43 (will ever use requires that you make it allocate as much space as it ever will.) 180 540.33 P
-0.09 (This means pulling down all menus, opening all dialog boxes, and generally) 180 527.33 P
(building out all) 180 514.33 T
1 9 Q
(UI) 253.54 514.33 T
1 10 Q
( gadgetry) 264.54 514.33 T
(. The value this command prints is roughly the) 306.95 514.33 T
(non-discardable heap usage by the app and any transient libraries that it) 180 501.33 T
(depends on, plus an additional amount for thread activity) 180 488.33 T
(.) 445.22 488.33 T
81 471.99 531 477 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 471.99 531 477 R
7 X
0 0 0 1 0 0 0 K
V
50 475.99 609.01 475.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 463.99 T
0 F
(help) 99 463.99 T
0 10 Q
(Usage:) 99 446.33 T
1 F
(help [<command>]) 180 446.33 T
0 F
(Synopsis:) 99 426.33 T
1 F
(This is the user) 180 426.33 T
(-level access to the on-line help facilities for Swat. If given a) 251.68 426.33 T
-0.16 (topic \050e.g. \322brk\323\051 as its argument, it will print all help strings de\336ned for the) 180 413.33 P
-0.39 (given topic \050there could be more than one if the same name is used for both a) 180 400.33 P
-0.52 (variable and a procedure, for instance\051. If invoked without arguments, it will) 180 387.33 P
(enter a browsing mode, allowing the user to work his/her way up and down) 180 374.33 T
(the documentation tree.) 180 361.33 T
81 344.98 531 349.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.98 531 349.99 R
7 X
0 0 0 1 0 0 0 K
V
50 348.98 609.01 348.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 336.98 T
0 F
(help-fetch) 99 336.98 T
0 10 Q
(Usage:) 99 319.32 T
1 F
(help-fetch <topic-path>) 180 319.32 T
0 F
(Examples:) 99 299.32 T
1 F
(\322help-fetch top.patient\323) 180 299.32 T
0 F
(Synopsis:) 99 279.32 T
1 F
(Fetches the help string for a given topic path in the help tree.) 180 279.32 T
0 F
(Notes:) 99 259.32 T
1 F
-0.06 (If there is more than one node with the given path in the help tree, only the) 180 259.32 P
(string for the \336rst node will be returned.) 180 246.32 T
81 229.98 531 234.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 229.98 531 234.98 R
7 X
0 0 0 1 0 0 0 K
V
50 233.98 609.01 233.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 221.97 T
0 F
(help-fetch-level) 99 221.97 T
0 10 Q
(Usage:) 99 204.31 T
1 F
(help-fetch-level) 180 204.31 T
0 F
(Examples:) 99 184.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "143" 69
%%Page: "144" 70
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(144) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322help-fetch-level top.prog.obscure\323) 180 641.33 T
(Returns the topics within the \322top.prog.obscure\323 level of the) 243 629.33 T
(help tree.) 243 617.33 T
0 F
(Synopsis:) 99 598.33 T
1 F
(Returns a list of the topics available at a given level in the help tree.) 180 598.33 T
0 F
(Notes:) 99 578.33 T
1 F
(The result is a list of node names without leading path components.) 180 578.33 T
0 F
(See Also:) 99 558.33 T
1 F
(help-fetch.) 180 558.33 T
81 541.99 531 547 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 541.99 531 547 R
7 X
0 0 0 1 0 0 0 K
V
50 545.99 609.01 545.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 533.99 T
0 F
(help-help) 99 533.99 T
0 10 Q
(Usage:) 99 516.33 T
1 F
(help-help) 180 516.33 T
0 F
(Synopsis:) 99 496.33 T
1 F
(Provides help about using the help command \050q.v) 180 496.33 T
(.\051) 406.51 496.33 T
0 F
(See Also:) 99 476.33 T
1 F
(help.) 180 476.33 T
81 459.98 531 464.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 459.98 531 464.99 R
7 X
0 0 0 1 0 0 0 K
V
50 463.98 609.01 463.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 451.98 T
0 F
(help-is-leaf) 99 451.98 T
0 10 Q
(Usage:) 99 434.32 T
1 F
(help-is-leaf <topic-path>) 180 434.32 T
0 F
(Examples:) 99 414.32 T
1 F
(\322help-is-leaf top.prog\323) 180 394.32 T
(See if top.prog is a leaf node in the help tree \050i.e. if it has no) 243 382.32 T
(children\051.) 243 370.32 T
0 F
(Synopsis:) 99 351.32 T
1 F
(Determines whether a given path refers to a help topic or a help category) 180 351.32 T
(.) 516.69 351.32 T
0 F
(Notes:) 99 331.32 T
1 F
(Returns one if the given path refers to a leaf node, zero if it is not.) 180 331.32 T
0 F
(See Also:) 99 311.32 T
1 F
(help-fetch, help-fetch-level.) 180 311.32 T
81 294.98 531 299.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 294.98 531 299.98 R
7 X
0 0 0 1 0 0 0 K
V
50 298.98 609.01 298.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 286.98 T
0 F
(help-minAspect) 99 286.98 T
0 10 Q
(Usage:) 99 269.31 T
1 F
(var help-minAspect [<ratio-times-ten>]) 180 269.31 T
0 F
(Synopsis:) 99 249.31 T
1 F
(If non-zero, contains the minimum aspect ratio to be maintained when) 180 249.31 T
(displaying tables in the help browser) 180 236.31 T
(. The ratio is expressed as the fraction) 350.03 236.31 T
6 F
(entries_per_column*10/number_of_columns) 216 220.31 T
1 F
(E.g. a minimum ratio of 1.5 would be 15. \050W) 180 199.31 T
(e multiply by ten because Swat) 383.02 199.31 T
(doesn\325) 180 186.31 T
(t support \337oating point numbers.\051) 208.34 186.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "144" 70
%%Page: "145" 71
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(145) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(help-scan) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(help-scan <pattern>) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322help-scan break\323) 180 577.33 T
(Looks for all nodes at any level of the help tree whose) 243 565.33 T
(documentation includes the pattern \322break\323.) 243 553.33 T
0 F
(Synopsis:) 99 534.33 T
1 F
(Scans all nodes in the help tree for those whose documentation matches a) 180 534.33 T
(given pattern.) 180 521.33 T
0 F
(Notes:) 99 501.33 T
2 F
(u) 180 481.33 T
1 F
(The result is a list of topic-paths.) 198 481.33 T
0 F
(See Also:) 99 462.33 T
1 F
(help-fetch.) 180 462.33 T
81 445.98 531 450.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 445.98 531 450.99 R
7 X
0 0 0 1 0 0 0 K
V
50 449.98 609.01 449.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 437.98 T
0 F
(help-verbose) 99 437.98 T
0 10 Q
(Usage:) 99 420.32 T
1 F
(var help-verbose [0|1\051]) 180 420.32 T
0 F
(Synopsis:) 99 400.32 T
1 F
(If non-zero, performs verbose prompting.) 180 400.32 T
81 383.98 531 388.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 383.98 531 388.98 R
7 X
0 0 0 1 0 0 0 K
V
50 387.98 609.01 387.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 375.98 T
0 F
(hex) 99 375.98 T
0 10 Q
(Usage:) 99 358.31 T
1 F
(hex <number>) 180 358.31 T
0 F
(Examples:) 99 338.31 T
1 F
(\322hex 034\323) 180 318.31 T
(print hex equivalent of octal 34.) 243 318.31 T
(\322hex 12\323) 180 299.31 T
(print hex equivalent of decimal 12.) 243 299.31 T
0 F
(Synopsis:) 99 280.31 T
1 F
(Print hexadecimal equivalent of a number) 180 280.31 T
(.) 374.29 280.31 T
81 263.97 531 268.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.97 531 268.97 R
7 X
0 0 0 1 0 0 0 K
V
50 267.97 609.01 267.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.97 T
0 F
(hgwalk) 99 255.97 T
0 10 Q
(Usage:) 99 238.3 T
1 F
(hgwalk) 180 238.3 T
0 F
(Examples:) 99 218.3 T
1 F
(\322hgwalk\323) 180 198.3 T
(print statistics on all geodes) 243 198.3 T
0 F
(Synopsis:) 99 179.3 T
1 F
(Print out all geodes and their memory usage.) 180 179.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "145" 71
%%Page: "146" 72
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(146) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(history) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(history [<args>]) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
( \322history 10\323) 180 577.33 T
(Prints the last 10 commands entered via the \322history subst\323) 243 565.33 T
(command.) 243 553.33 T
( \322history subst $line\323) 180 534.33 T
-0.59 ( Performs history substitution on the string in $line, enters the) 243 522.33 P
(result in the history queue and returns the result.) 243 510.33 T
( \322var n [history cur]\323) 180 491.33 T
-0.18 (Stores the number of the next string to be entered via \322history) 243 479.33 P
(subst\323 in the variable n.) 243 467.33 T
( \322history set 50\323) 180 448.33 T
(Limit the number of entries in the queue to 50.) 243 436.33 T
( \322history fetch 36\323) 180 417.33 T
(Returns the string entered as command number 36 in the) 243 405.33 T
(history queue.) 243 393.33 T
0 F
(Synopsis:) 99 374.33 T
1 F
(This command manipulates the history list. Options are:) 180 374.33 T
(<) 180 354.33 T
7 F
(number) 186.06 354.33 T
1 F
(>) 225.69 354.33 T
(Prints the most-recent <number> commands) 243 354.33 T
3 F
(set) 180 335.33 T
1 F
( <) 195 335.33 T
7 F
(queue-size) 203.84 335.33 T
1 F
(>) 256.63 335.33 T
(Sets the number of commands saved) 243 323.33 T
3 F
(subst) 180 304.33 T
1 F
( <) 207.59 304.33 T
7 F
(str) 216.43 304.33 T
1 F
(>) 230.5 304.33 T
(Performs history substitution on <str> and enters it into the) 243 304.33 T
(history queue.) 243 292.33 T
3 F
(cur) 180 273.33 T
1 F
(Returns the current history number) 243 273.33 T
(. If no argument is given,) 408.91 273.33 T
(all saved commands are printed.) 243 261.33 T
3 F
(fetch) 180 242.33 T
1 F
( <) 206.3 242.33 T
7 F
(n) 215.14 242.33 T
1 F
(>) 221.99 242.33 T
(Returns the string entered as command number <n> in the) 243 242.33 T
(history queue.) 243 230.33 T
0 F
(See Also:) 99 211.33 T
1 F
(top-level-read) 180 211.33 T
81 194.98 531 199.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 194.98 531 199.99 R
7 X
0 0 0 1 0 0 0 K
V
50 198.98 609.01 198.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 186.98 T
0 F
(hwalk) 99 186.98 T
0 10 Q
(Usage:) 99 169.32 T
1 F
(hwalk [<\337ags>] [<patient>]) 180 169.32 T
0 F
(Examples:) 99 149.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "146" 72
%%Page: "147" 73
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(147) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322hwalk\323) 180 641.33 T
(display the heap) 243 641.33 T
(\322hwalk -e\323) 180 622.33 T
(display the heap and perform error checking) 243 622.33 T
(\322hwalk -r ui\323) 180 603.33 T
(display the heap owned by the ui in reverse order) 243 591.33 T
0 F
(Synopsis:) 99 572.33 T
1 F
(Print the status of all blocks on the global heap.) 180 572.33 T
0 F
(Notes:) 99 552.33 T
2 F
(u) 180 532.33 T
1 F
-0.25 (The <\337ags> argument is a collection of \337ags, beginning with \324-\325, from the) 198 532.33 P
(following set:) 198 520.33 T
3 F
(r) 180 501.33 T
1 F
(print heap in reverse order \050decreasing order of addresses\051) 243 501.33 T
3 F
(p) 180 482.33 T
1 F
(print prevPtr and nextPtr as well.) 243 482.33 T
7 F
(e) 180 463.33 T
1 F
(do error) 243 463.33 T
(-checking on the heap.) 279.66 463.33 T
3 F
(l) 180 444.33 T
1 F
(just print out locked blocks) 243 444.33 T
3 F
(f) 180 425.33 T
1 F
(fast print-out\321this doesn\325) 243 425.33 T
(t try to \336gure out the block type) 363.75 425.33 T
3 F
(F) 180 406.33 T
1 F
(print out only \336xed \050or pseudo-\336xed\051 resources.) 243 406.33 T
3 F
(c) 180 387.33 T
1 F
(Print out only code resources \050discardable or \336xed non-lmem) 243 387.33 T
(non-dgroup resources\051.) 243 375.33 T
3 F
(s) 180 356.33 T
1 F
( <) 185 356.33 T
7 F
(num) 193.84 356.33 T
1 F
(>) 216.98 356.33 T
(start at block <num>) 243 356.33 T
2 F
(u) 180 337.33 T
1 F
(The patient argument is a patient whose blocks are to be selectively) 198 337.33 T
-0.62 (printed \050either a name or a core-block\325) 198 325.33 P
-0.62 (s handle) 370.05 325.33 P
1 9 Q
-0.55 (ID) 410.68 325.33 P
1 10 Q
-0.62 (\051. The default is to print) 421.35 325.33 P
(all the blocks on the heap.) 198 313.33 T
2 F
(u) 180 294.33 T
1 F
(The following columns can appear in a listing:) 198 294.33 T
1 9 Q
(HANDLE) 180 275.33 T
1 10 Q
(The handle of the block) 243 275.33 T
1 9 Q
(ADDR) 180 256.33 T
1 10 Q
(The segment address of the block) 243 256.33 T
1 9 Q
(SIZE) 180 237.33 T
1 10 Q
(Size of the block in bytes) 243 237.33 T
1 9 Q
(PREV) 180 218.33 T
1 10 Q
(The previous block handle \050appears with the p \337ag\051) 243 218.33 T
1 9 Q
(NEXT) 180 199.33 T
1 10 Q
(The next block handle \050appears with the p \337ag\051) 243 199.33 T
1 9 Q
(FLAGS) 180 180.33 T
1 10 Q
(The following letters appears in the) 243 180.33 T
1 9 Q
(FLAGS) 410.43 180.33 T
1 10 Q
( column:) 441.61 180.33 T
3 F
(s) 243 168.33 T
1 F
(sharable) 261.9 168.33 T
3 F
(S) 243 156.33 T
1 F
(swapable) 260.79 156.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "147" 73
%%Page: "148" 74
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(148) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
(D) 243 641.33 T
1 F
(discardable) 259.67 641.33 T
3 F
(L) 243 629.33 T
1 F
(contains local memory heap) 261.34 629.33 T
3 F
(d) 243 617.33 T
1 F
(discarded) 260.79 617.33 T
(\050by LMem module: discarded blocks don\325) 268.02 605.33 T
(t appear here\051) 454.71 605.33 T
3 F
(a) 243 593.33 T
1 F
(attached \050notice given to swat whenever state changes\051) 260.23 593.33 T
1 9 Q
(LOCK) 180 574.33 T
1 10 Q
(Number of times the block is locked or n/a if) 243 574.33 T
1 9 Q
(FIXED) 449.33 574.33 T
1 10 Q
(.) 478.83 574.33 T
1 9 Q
(OWNER) 180 555.33 T
1 10 Q
(The process which owns the block) 243 555.33 T
1 9 Q
(IDLE) 180 536.33 T
1 10 Q
-0.1 (The time since the block has been accessed in minutes:seconds) 243 536.33 P
1 9 Q
(OINFO) 180 517.33 T
1 10 Q
(The otherInfo \336eld of the handle \050block type dependent\051) 243 517.33 T
1 9 Q
(TYPE) 180 498.33 T
1 10 Q
(T) 243 498.33 T
(ype of the block, for example:) 249.15 498.33 T
(R#1 \050dgroup\051 Resource number one, named \322dgroup\323) 243 486.33 T
(Geode Internal control block for a geode) 243 474.33 T
1 9 Q
(WINDOW) 243 462.33 T
1 10 Q
(,) 284.55 462.33 T
1 9 Q
(GST) 290.11 462.33 T
(A) 308.29 462.33 T
(TE) 314.29 462.33 T
1 10 Q
(,) 326.79 462.33 T
(Internal structures of the given type) 251.34 450.33 T
1 9 Q
(GSTRING) 243 438.33 T
1 10 Q
(,) 286.17 438.33 T
1 9 Q
(FONT_BLK) 291.73 438.33 T
1 10 Q
(,) 342.08 438.33 T
1 9 Q
(FONT) 347.64 438.33 T
(OBJ) 376.76 438.33 T
1 10 Q
(\050write:0\051) 395.27 438.33 T
(Object block run by thread write:0) 251.34 426.33 T
1 9 Q
(VM) 243 414.33 T
1 10 Q
(\0503ef0h\051...) 257.99 414.33 T
1 9 Q
(VM) 251.34 402.33 T
1 10 Q
( block from) 266.33 402.33 T
1 9 Q
(VM) 320.41 402.33 T
1 10 Q
( \336le 3ef0h) 335.41 402.33 T
2 F
(u) 180 383.33 T
1 F
(This only prints those handles in memory while \324handles\325 prints all) 198 383.33 T
(handles used.) 198 371.33 T
2 F
(u) 180 352.33 T
1 F
(The handles may be printed with lhwalk and phandle.) 198 352.33 T
0 F
(See Also:) 99 333.33 T
1 F
(lhwalk, phandle, handles, hgwalk.) 180 333.33 T
81 316.99 531 322 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 316.99 531 322 R
7 X
0 0 0 1 0 0 0 K
V
50 320.99 609.01 320.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 308.99 T
0 F
(iacp) 99 308.99 T
0 10 Q
(Usage:) 99 291.33 T
1 F
(iacp -ac) 180 291.33 T
(prints all connections) 218.92 278.33 T
(iacp -l) 180 258.33 T
(prints all lists without connections) 216.14 245.33 T
(iacp -d) 180 225.33 T
(prints all open documents) 216.14 212.33 T
(iacp <obj>) 180 192.33 T
(prints all connections to which <obj> is party) 216.14 179.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "148" 74
%%Page: "149" 75
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(149) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(ibrk) 99 634.99 T
1 10 Q
-0.2 (Set a breakpoint interactively) 180 617.33 P
-0.2 (. At each instruction, you have several options:) 316.28 617.33 P
3 F
(q) 180 597.33 T
1 F
(Quit back to the command level.) 243 597.33 T
3 F
( n) 180 578.33 T
1 F
-0.34 (Go to next instruction \050this also happens if you just hit return\051.) 243 578.33 P
3 F
( p) 180 559.33 T
1 F
(Go to previous instruction.) 243 559.33 T
3 F
( P) 180 540.33 T
1 F
( Look for a different previous instruction.) 243 540.33 T
3 F
( ^D) 180 521.33 T
1 F
(Go down a \322page\323 of instructions. The size of the page is) 243 521.33 T
-0.54 (controlled by the global variable ibrkPageLen. It defaults to 10.) 243 509.33 P
3 F
( ^U) 180 490.33 T
1 F
(Go up a \322page\323 of instructions.) 243 490.33 T
3 F
( b) 180 471.33 T
1 F
-0.55 (Set an unconditional breakpoint at the current instruction and) 243 471.33 P
(go back to command level.) 243 459.33 T
3 F
( a) 180 440.33 T
1 F
(Like \325b\325, but the breakpoint is set for all patients.) 243 440.33 T
3 F
( t) 180 421.33 T
1 F
(Like \325b\325, except the breakpoint is temporary and will be) 243 421.33 T
(removed the next time the machine stops.) 243 409.33 T
3 F
( B) 180 390.33 T
1 F
-0.5 (Like \325b\325, but can be followed by a command to execute when the) 243 390.33 P
(breakpoint is hit.) 243 378.33 T
3 F
( A) 180 359.33 T
1 F
(Like \325B\325, but for all patients.) 243 359.33 T
3 F
( T) 180 340.33 T
1 F
(Like \325B\325, but breakpoint is temporary) 243 340.33 T
(.) 412.67 340.33 T
81 324.98 531 329.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 324.98 531 329.99 R
7 X
0 0 0 1 0 0 0 K
V
50 328.98 609.01 328.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 316.98 T
0 F
(ibrkPageLen) 99 316.98 T
0 10 Q
(Usage:) 99 299.32 T
1 F
(var ibrkPageLen [<number) 180 299.32 T
(-of-lines>]) 305.71 299.32 T
0 F
(Synopsis:) 99 279.32 T
1 F
-0.23 (Number of instructions to skip when using the) 180 279.32 P
1 9 Q
-0.21 (^D) 396.14 279.32 P
1 10 Q
-0.23 ( and) 408.6 279.32 P
1 9 Q
-0.21 (^U) 431.11 279.32 P
1 10 Q
-0.23 ( commands of ibrk.) 443.9 279.32 P
81 262.98 531 267.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 262.98 531 267.98 R
7 X
0 0 0 1 0 0 0 K
V
50 266.98 609.01 266.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 254.97 T
0 F
(if) 99 254.97 T
1 F
(This is a T) 163.88 254.97 T
(cl primitive. See \322T) 221.6 254.97 T
(ool Command Language,\323 Chapter) 326.52 254.97 T
(5.) 520.99 254.97 T
81 240.97 531 245.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 240.97 531 245.97 R
7 X
0 0 0 1 0 0 0 K
V
50 244.97 609.01 244.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 232.97 T
0 F
(ignerr) 99 232.97 T
0 10 Q
(Usage:) 99 215.3 T
1 F
(ignerr) 180 215.3 T
0 F
(Examples:) 99 195.3 T
1 F
(\322ignerr\323 ignore error and continue) 180 175.3 T
(\322ignerr MyFunc::done\323 ignore error and continue at MyFunc::done.) 180 156.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "149" 75
%%Page: "150" 76
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(150) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
0 10 Q
0 X
(Synopsis:) 99 641.33 T
1 F
(Ignore a fatal error and continue.) 180 641.33 T
0 F
(Notes:) 99 621.33 T
2 F
(u) 180 601.33 T
1 F
(The address argument is the address of where to continue execution. If) 198 601.33 T
(not speci\336ed then) 198 589.33 T
1 9 Q
(CS) 282.26 589.33 T
1 10 Q
(:) 294.43 589.33 T
1 9 Q
(IP) 297.21 589.33 T
1 10 Q
( is taken from the frame.) 306.87 589.33 T
2 F
(u) 180 570.33 T
1 F
(The stack is patched so that execution can continue in the frame above) 198 570.33 T
(the fatal error handling routine.) 198 558.33 T
0 F
(See Also:) 99 539.33 T
1 F
(why) 180 539.33 T
(, backtrace.) 198.15 539.33 T
81 522.99 531 528 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 522.99 531 528 R
7 X
0 0 0 1 0 0 0 K
V
50 526.99 609.01 526.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 514.99 T
0 F
(imem) 99 514.99 T
0 10 Q
(Usage:) 99 497.33 T
1 F
(imem [<address>] [<mode>]) 180 497.33 T
0 F
(Examples:) 99 477.33 T
1 F
(\322imem\323) 180 457.33 T
(enter imem mode at) 243 457.33 T
1 9 Q
(DS:SI) 338.57 457.33 T
1 10 Q
(\322imem ds:di\323) 180 438.33 T
(enter imem mode at) 243 426.33 T
1 9 Q
(DS:SI) 338.57 426.33 T
0 10 Q
(Synopsis:) 99 407.33 T
1 F
(Examine memory and modify memory interactively) 180 407.33 T
(.) 416.68 407.33 T
0 F
(Notes:) 99 387.33 T
2 F
(u) 180 367.33 T
1 F
(The address argument is the address to examine. If not speci\336ed, the) 198 367.33 T
(address after the last examined memory location is used. If no address) 198 355.33 T
(has been examined then) 198 343.33 T
1 9 Q
(DS:SI) 313.02 343.33 T
1 10 Q
( is used for the address.) 337.53 343.33 T
2 F
(u) 180 324.33 T
1 F
(The mode argument determines how the memory is displayed and) 198 324.33 T
(modi\336ed. Each of the four modes display the memory in various) 198 312.33 T
(appropriate formats. The modes are:) 198 300.33 T
2 F
(u) 180 178.29 T
1 F
(The default mode is swat\325) 198 178.29 T
(s best guess of what type of object is at the) 315.62 178.29 T
(address.) 198 166.29 T
81 144 531 648 C
180 193.96 531 296.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 151.99 531 284.49 R
7 X
0 0 0 1 0 0 0 K
V
0 10 Q
0 X
(T) 180 277.83 T
(able) 185.37 277.83 T
(4-) 208.16 277.83 T
(1) 217.05 277.83 T
4 F
(Memory Modes) 225.39 277.83 T
180 256.52 531 261.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180 256.52 531 261.49 R
7 X
0 0 0 1 0 0 0 K
V
152 259.48 755 259.48 2 L
V
0.5 H
2 Z
0 X
N
180 193.96 531 296.99 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Mode) 180 264.83 T
(Size) 216 264.83 T
(1st column) 252 264.83 T
(2nd column) 324 264.83 T
(3rd column) 396 264.83 T
1 F
(b) 180 247.85 T
(byte) 216 247.85 T
(hex byte) 252 247.85 T
(signed dec) 324 247.85 T
(ASCII character) 396 247.85 T
(w) 180 233.85 T
(word) 216 233.85 T
(hex word) 252 233.85 T
(unsigned dec) 324 233.85 T
(signed decimal) 396 233.85 T
(d) 180 219.85 T
(dword) 216 219.85 T
(segment:offset) 252 219.85 T
(signed dec) 324 219.85 T
(symbol) 396 219.85 T
(i) 180 205.85 T
(???) 216 205.85 T
(hex bytes) 252 205.85 T
(assembler instr.) 324 205.85 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "150" 76
%%Page: "151" 77
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(151) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(imem lets you conveniently examine memory at different locations and) 198 641.33 T
(assign it different values. imem displays the memory at the current) 198 629.33 T
(address according to the mode. From there you can move to another) 198 617.33 T
(memory address or you can assign the memory a value.) 198 605.33 T
2 F
(u) 180 586.33 T
1 F
(Y) 198 586.33 T
(ou may choose from the following single-character commands:) 203.93 586.33 T
3 F
(b) 180 567.33 T
1 F
(,) 186.48 567.33 T
3 F
(w) 192.04 567.33 T
1 F
(,) 200.01 567.33 T
3 F
(d) 205.57 567.33 T
1 F
(,) 212.24 567.33 T
3 F
(i) 215.02 567.33 T
1 F
(Sets the mode to the given one and redisplays the data.) 243 567.33 T
3 F
(n) 180 548.33 T
1 F
(,) 186.85 548.33 T
3 F
(j) 192.41 548.33 T
1 F
(, <) 195.93 548.33 T
3 F
(Return) 207.55 548.33 T
1 F
(>) 244.59 548.33 T
-0.61 (Advances to the next data item. The memory address advances) 243 536.33 P
(by the size of the mode.) 243 524.33 T
3 F
(p) 180 505.33 T
1 F
(,) 186.67 505.33 T
3 F
(k) 192.23 505.33 T
1 F
(Returns to the preceding data item. The memory address) 243 505.33 T
(decreases by the size of the mode. When displaying) 243 493.33 T
(instructions, a heuristic is applied to locate the preceding) 243 481.33 T
-0.49 (instruction. If it chooses the wrong one, use the \324P\325 command to) 243 469.33 P
(make it search again.) 243 457.33 T
(<) 180 438.33 T
3 F
(space) 186.06 438.33 T
1 F
(>) 215.14 438.33 T
(Clears the data display and allows you to enter a new value) 243 438.33 T
(appropriate to the current display mode. The \322assign\323) 243 426.33 T
-0.49 (command is used to perform the assignment, so the same rules) 243 414.33 P
(apply to it, with the exception of \324- and \322-quoted strings. A) 243 402.33 T
-0.45 (string with \324s around it \050\324hi mom\325\051 has its characters poked into) 243 390.33 P
(memory starting at the current address. A string with \322s) 243 378.33 T
(around it \050\322swat.exe\323\051 likewise has its characters poked into) 243 366.33 T
(memory) 243 354.33 T
(, with the addition of a null byte at the end. This) 279.48 354.33 T
(command is not valid in instruction mode.) 243 342.33 T
3 F
(q) 180 323.33 T
1 F
(quit imem and return to command level. The last address) 243 323.33 T
(accessed is recorded for use by the other memory-access) 243 311.33 T
(commands.) 243 299.33 T
3 F
(^D) 180 280.33 T
1 F
-0.39 (Display a \322page\323 of successive memory elements in the current) 243 280.33 P
(mode.) 243 268.33 T
3 F
(^U) 180 249.33 T
1 F
-0.15 (Display a \322page\323 of preceding memory elements in the current) 243 249.33 P
(mode.) 243 237.33 T
3 F
(h) 180 218.33 T
1 F
(,) 186.85 218.33 T
3 F
(?) 192.41 218.33 T
1 F
(This help list.) 243 218.33 T
( For ^D and ^U, the size of a \322page\323 is kept in the global variable) 180 199.33 T
4 F
(imemPageLen) 243 187.33 T
1 F
(, which defaults to 10.) 307.99 187.33 T
0 F
(See Also:) 99 168.33 T
1 F
(bytes, words, dwords, assign.) 180 168.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "151" 77
%%Page: "152" 78
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(152) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(imemPageLen) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(var imemPageLen [<numlines>]) 180 617.33 T
0 F
(Synopsis:) 99 597.33 T
1 F
(Contains the number of elements to display when imem is given the ^D or) 180 597.33 T
(^U command.) 180 584.33 T
81 567.98 531 572.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 567.98 531 572.99 R
7 X
0 0 0 1 0 0 0 K
V
50 571.98 609.01 571.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 559.98 T
0 F
(impliedgrab) 99 559.98 T
0 10 Q
(Usage:) 99 542.32 T
1 F
(impliedgrab) 180 542.32 T
0 F
(Examples:) 99 522.32 T
1 F
(\322gentree [impliedgrab]\323) 180 502.32 T
(print the generic tree under the mouse) 243 490.32 T
0 F
(Synopsis:) 99 471.32 T
1 F
(Print the address of the current implied grab, which is the screen object) 180 471.32 T
(grabbing the mouse.) 180 458.32 T
0 F
(Notes:) 99 438.32 T
2 F
(u) 180 418.32 T
1 F
-0.56 (This command is normally used with gentree to get the generic tree of an) 198 418.32 P
-0.74 (application by placing the mouse on application\325) 198 406.32 P
-0.74 (s window and issuing the) 415.06 406.32 P
(command.) 198 394.32 T
0 F
(See Also:) 99 375.32 T
1 F
(systemobj, gentree.) 180 375.32 T
81 358.98 531 363.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 358.98 531 363.98 R
7 X
0 0 0 1 0 0 0 K
V
50 362.98 609.01 362.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 350.98 T
0 F
(impliedwin) 99 350.98 T
0 10 Q
(Usage:) 99 333.31 T
1 F
(impliedwin) 180 333.31 T
0 F
(Notes:) 99 313.31 T
1 F
(\322wintree [impliedwin]\323) 180 293.31 T
(print the window tree of the window under the mouse) 243 281.31 T
0 F
(Synopsis:) 99 262.31 T
1 F
(Print the address of the current implied window \050the window under the) 180 262.31 T
(mouse\051.) 180 249.31 T
0 F
(Notes:) 99 229.31 T
2 F
(u) 180 209.31 T
1 F
(Note that a window handle is returned.) 198 209.31 T
2 F
(u) 180 190.31 T
1 F
-0.73 (This command is normally used with wintree. One may also use the print) 198 190.31 P
(command if they properly cast the handle.) 198 178.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "152" 78
%%Page: "153" 79
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(153) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(index) 99 634.99 T
1 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
0 F
(info) 99 612.98 T
1 F
(This is a T) 163.88 612.98 T
(cl primitive. See \322T) 221.6 612.98 T
(ool Command Language,\323 Chapter) 326.52 612.98 T
(5.) 520.99 612.98 T
81 598.97 531 603.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 598.97 531 603.98 R
7 X
0 0 0 1 0 0 0 K
V
50 602.97 609.01 602.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 590.97 T
0 F
(int) 99 590.97 T
0 10 Q
(Usage:) 99 573.31 T
1 F
(int [<int level> <state>]) 180 573.31 T
0 F
(Examples:) 99 553.31 T
1 F
(\322int\323) 180 533.31 T
(report the interrupt statuses) 243 533.31 T
(\322int 1:1 on\323) 180 514.31 T
(allow keyboard interrupt while in swat) 243 514.31 T
0 F
(Synopsis:) 99 495.31 T
1 F
-0.29 (Set or print the state of the two interrupt controllers for when then machine) 180 495.31 P
(is stopped in Swat.) 180 482.31 T
0 F
(Notes:) 99 462.31 T
2 F
(u) 180 442.31 T
1 F
(If no arguments are given, the current state is printed.) 198 442.31 T
2 F
(u) 180 423.31 T
1 F
(The <int level> argument is speci\336ed by their names or their numbers) 198 423.31 T
(with the form <controller>:<number>. <controller> is either 1 or 2, and) 198 411.31 T
(<number> ranges from 0 to 7. The interrupts and their numbers are:) 198 399.31 T
3 F
(T) 180 380.31 T
(imer 1:0) 186.97 380.31 T
1 F
(System timer) 243 380.31 T
(. Probably dangerous to enable.) 304.49 380.31 T
3 F
(Keybd 1:1) 180 361.31 T
1 F
(Keyboard input.) 243 361.31 T
3 F
(Slave 1:2) 180 342.31 T
1 F
(This is how devices on controller 2 interrupt. Disabling this) 243 342.31 T
(disables them all.) 243 330.31 T
3 F
(Com2 1:3) 180 311.31 T
1 F
(This is the port usually used by Swat, so it can\325) 243 311.31 T
(t be disabled.) 460.65 311.31 T
3 F
(Com1 1:4) 180 292.31 T
1 F
(The other serial port -- usually the mouse.) 243 292.31 T
3 F
(LPT2 1:5) 180 273.31 T
1 F
(The second parallel port) 243 273.31 T
3 F
(Floppy 1:6) 180 254.31 T
1 F
(Floppy-disk drive) 243 254.31 T
3 F
(LPT1 1:7) 180 235.31 T
1 F
(First parallel port) 243 235.31 T
3 F
(Clock 2:0) 180 216.31 T
1 F
(Real-time clock) 243 216.31 T
3 F
(Net 2:1) 180 197.31 T
1 F
(Network interfaces \050?\051) 243 197.31 T
3 F
(FP) 180 178.31 T
(A 2:5) 194.07 178.31 T
1 F
(Coprocessor) 243 178.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "153" 79
%%Page: "154" 80
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(154) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
(HardDisk 2:6) 180 641.33 T
1 F
(Hard-disk drive) 243 629.33 T
2 F
(u) 180 610.33 T
1 F
(The <state> argument is either on or off.) 198 610.33 T
81 594.99 531 600 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 594.99 531 600 R
7 X
0 0 0 1 0 0 0 K
V
50 598.99 609.01 598.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 586.99 T
0 F
(intFormat) 99 586.99 T
0 10 Q
(Usage:) 99 569.33 T
1 F
(var intFormat [<format-string>]) 180 569.33 T
0 F
(Examples:) 99 549.33 T
1 F
(\322var intFormat %d\323) 180 529.33 T
(Sets the default format for printing unsigned integers to) 243 517.33 T
(decimal.) 243 505.33 T
0 F
(Synopsis:) 99 486.33 T
1 F
($) 180 486.33 T
4 F
(intFormat) 185.56 486.33 T
1 F
( contains the string passed to the \322format\323 command to print an) 232.78 486.33 T
(integer) 180 473.33 T
(.) 212.22 473.33 T
0 F
(Notes:) 99 453.33 T
1 F
-0.57 (The default value is {%xh}, which prints the integer in hexadecimal, followed) 180 453.33 P
(by an \322h\323.) 180 440.33 T
0 F
(See Also:) 99 420.33 T
1 F
(print, byteAsChar) 180 420.33 T
(.) 263.15 420.33 T
81 403.98 531 408.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 403.98 531 408.99 R
7 X
0 0 0 1 0 0 0 K
V
50 407.98 609.01 407.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 395.98 T
0 F
(intr) 99 395.98 T
1 10 Q
-0.43 (Catch, ignore, or deliver an interrupt on the target) 180 378.32 P
1 9 Q
-0.38 (PC) 413.02 378.32 P
1 10 Q
-0.43 (. First argument is the) 425.52 378.32 P
(interrupt number) 180 365.32 T
(. Optional second argument is \322catch\323 to catch delivery of) 260.92 365.32 T
-0.09 (the interrupt, \322ignore\323 to ignore the delivery) 180 352.32 P
-0.09 (, or \322send\323 to send the interrupt) 382.58 352.32 P
(\050the machine will keep going once the interrupt has been handled\051. If no) 180 339.32 T
(second argument is given, the interrupt is delivered.) 180 326.32 T
81 309.98 531 314.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.98 531 314.98 R
7 X
0 0 0 1 0 0 0 K
V
50 313.98 609.01 313.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 301.98 T
0 F
(io) 99 301.98 T
0 10 Q
(Usage:) 99 284.31 T
1 F
(io [w] <port> [<value>]) 180 284.31 T
0 F
(Examples:) 99 264.31 T
1 F
(\322io 21h\323) 180 244.31 T
(Reads byte-sized) 243 244.31 T
1 9 Q
(I/O) 323.19 244.31 T
1 10 Q
( port 21h.) 336.36 244.31 T
(\322io 20h 10\323) 180 225.31 T
(W) 243 225.31 T
(rites decimal 10 to byte-sized) 252.26 225.31 T
1 9 Q
( I/O) 386.91 225.31 T
1 10 Q
( port 20h.) 402.58 225.31 T
0 F
(Synopsis:) 99 206.31 T
1 F
(Provides access to any) 180 206.31 T
1 9 Q
(I/O) 285.75 206.31 T
1 10 Q
( port on the) 298.92 206.31 T
1 9 Q
(PC) 355.22 206.31 T
1 10 Q
(.) 367.72 206.31 T
0 F
(Notes:) 99 186.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "154" 80
%%Page: "155" 81
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(155) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
2 10 Q
0 X
(u) 180 641.33 T
1 F
(If you give the optional \336rst argument \322w\323 then Swat will perform a) 198 641.33 T
(16-bit) 198 629.33 T
1 9 Q
(I/O) 227.83 629.33 T
1 10 Q
(read or write, rather than the default 8-bit access. Be aware) 243.5 629.33 T
(that most devices don\325) 198 617.33 T
(t handle this too well.) 300.24 617.33 T
2 F
(u) 180 598.33 T
1 F
(<port> must be a number \050in any radix\051; it cannot be a register or other) 198 598.33 T
(complex expression.) 198 586.33 T
2 F
(u) 180 567.33 T
1 F
(If you don\325) 198 567.33 T
(t give a <value>, you will be returned the contents of the) 246.15 567.33 T
1 9 Q
(I/O) 510.34 567.33 T
1 10 Q
(port \050it will not be printed to the screen\051.) 198 555.33 T
81 539.99 531 545 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 539.99 531 545 R
7 X
0 0 0 1 0 0 0 K
V
50 543.99 609.01 543.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 531.99 T
0 F
(irq) 99 531.99 T
0 10 Q
(Usage:) 99 514.33 T
1 F
(irq) 180 514.33 T
(irq \050no|yes\051) 180 501.33 T
(irq \050set|clear\051) 180 488.33 T
0 F
(Examples:) 99 468.33 T
1 F
(\322irq\323) 180 448.33 T
(Returns non-zero if an interrupt is pending.) 243 448.33 T
(\322irq no\323) 180 429.33 T
(Disable recognition and acting on a break request from the) 243 429.33 T
(keyboard.) 243 417.33 T
(\322irq set\323) 180 398.33 T
(Pretend the user typed Ctrl-C.) 243 398.33 T
0 F
(Synopsis:) 99 379.33 T
1 F
(Controls Swat\325) 180 379.33 T
(s behavior with respect to interrupt requests from the) 247.42 379.33 T
(keyboard.) 180 366.33 T
0 F
(Notes:) 99 346.33 T
2 F
(u) 180 326.33 T
1 F
(Swat maintains an interrupt-pending \337ag that is set when you type) 198 326.33 T
-0.59 (Ctrl+C \050it can also be set or cleared by this command\051. It delays acting on) 198 314.33 P
(the interrupt until the start of the next or the completion of the current) 198 302.33 T
(T) 198 290.33 T
(cl command, whichever comes \336rst.) 203.86 290.33 T
2 F
(u) 180 271.33 T
1 F
(When given no arguments, it returns the current state of the) 198 271.33 T
-0.63 (interrupt-pending \337ag. This will only ever be non-zero if Swat is ignoring) 198 259.33 P
-0.2 (the \337ag \050since the command wouldn\325) 198 247.33 P
-0.2 (t actually return if the \337ag were set) 364.98 247.33 P
(and being paid attention to, as the interpreter would act on the \337ag to) 198 235.33 T
(vault straight back to the command prompt\051.) 198 223.33 T
2 F
(u) 180 204.33 T
1 F
(If given \322no\323 or \322yes\323 as an argument, it causes Swat to ignore or pay) 198 204.33 T
(attention to the interrupt-pending \337ag, respectively) 198 192.33 T
(.) 435.6 192.33 T
2 F
(u) 180 173.33 T
1 F
(Y) 198 173.33 T
(ou can set or clear the \337ag by giving \322set\323 or \322clear\323 as an argument.) 203.93 173.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "155" 81
%%Page: "156" 82
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(156) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(is-obj-in-class) 99 634.99 T
0 10 Q
(Usage:) 99 617.33 T
1 F
(is-obj-in-class <obj-addr> <class-name>) 180 617.33 T
0 F
(Examples:) 99 597.33 T
1 F
(\322is-obj-in-class ^l4e10h:1eh GenPrimaryClass\323) 180 577.33 T
(see if the object at ^l4e10h:1eh is in) 243 565.33 T
3 F
(GenPrimaryClass) 411.14 565.33 T
1 F
(.) 502.99 565.33 T
0 F
(Synopsis:) 99 546.33 T
1 F
(Returns whether a given object in the speci\336ed class.) 180 546.33 T
0 F
(Notes:) 99 526.33 T
2 F
(u) 180 506.33 T
1 F
(Returns one if the object is in the speci\336ed class, zero otherwise. It will) 198 506.33 T
(return one if the object\325) 198 494.33 T
(s class is a subclass of the passed class.) 305.22 494.33 T
2 F
(u) 180 475.33 T
1 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 475.33 P
(\337ags, see pobject.) 198 463.33 T
0 F
(See Also:) 99 444.33 T
1 F
(psup.) 180 444.33 T
81 427.98 531 432.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 427.98 531 432.99 R
7 X
0 0 0 1 0 0 0 K
V
50 431.98 609.01 431.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 419.98 T
0 F
(istep) 99 419.98 T
0 10 Q
(Usage:) 99 402.32 T
1 F
(istep [<default command>]) 180 402.32 T
0 F
(Examples:) 99 382.32 T
1 F
(\322is\323) 180 362.32 T
(enter instruction step mode) 243 362.32 T
(\322istep n\323) 180 343.32 T
(enter instruction step mode, <ret> does a next command) 243 343.32 T
0 F
(Synopsis:) 99 324.32 T
1 F
-0.14 (Step through the execution of the current patient. This is) 180 324.32 P
1 9 Q
-0.12 (THE) 445.67 324.32 P
1 10 Q
-0.14 ( command for) 465.67 324.32 P
(stepping through assembly code.) 180 311.32 T
0 F
(Notes:) 99 291.32 T
2 F
(u) 180 271.32 T
1 F
-0.75 (The default command argument determines what pressing the <Return>) 198 271.32 P
(key does. By default, <Return> executes a step command. Any other) 198 259.32 T
(command listed below may be substituted by passing the letter of the) 198 247.32 T
(command.) 198 235.32 T
2 F
(u) 180 216.32 T
1 F
(Istep steps through the patient instruction by instruction, printing) 198 216.32 T
(where the ip is, what instruction will be executed, and what the) 198 204.32 T
(instruction arguments contain or reference. Istep waits for the user to) 198 192.32 T
-0.57 (type a command which it performs and then prints out again where istep) 198 180.32 P
(is executing.) 198 168.32 T
2 F
(u) 180 149.32 T
1 F
(This is a list of) 198 149.32 T
3 F
(istep) 268.95 149.32 T
1 F
( commands:) 294.32 149.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "156" 82
%%Page: "157" 83
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 453.74 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(157) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(!) 497.28 85 T
0 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(4.2) 546.55 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
(q) 180 641.33 T
1 F
(, <) 186.48 641.33 T
3 F
(Esc) 198.1 641.33 T
1 F
(>, \324 \324) 216.25 641.33 T
(Stops istep and returns to command level.) 243 641.33 T
3 F
(b) 180 622.33 T
1 F
(T) 243 622.33 T
(oggles a breakpoint at the current location.) 248.75 622.33 T
3 F
(c) 180 603.33 T
1 F
(Stops istep and continues execution.) 243 603.33 T
3 F
(n) 180 584.33 T
1 F
(Continues to the next instruction, skipping procedure calls,) 243 584.33 T
(repeated string instructions, and software interrupts. Using) 243 572.33 T
(this procedure, istep only stops when the machine returns to) 243 560.33 T
-0.15 (the right context \050i.e. the stack pointer and current thread are) 243 548.33 P
(the same as they are when the \322n\323 command was given\051.) 243 536.33 T
(Routines which change the stack pointer should use \322N\323) 243 524.33 T
(instead.) 243 512.33 T
3 F
(o) 180 493.33 T
1 F
(Like \322n\323 but steps over macros as well.) 243 493.33 T
3 F
(l) 180 474.33 T
1 F
(Goes to the next library routine.) 243 474.33 T
3 F
(N) 180 455.33 T
1 F
(Like \324n\325, but stops whenever the breakpoint is hit, whether) 243 455.33 T
(you\325re in the same frame or not.) 243 443.33 T
3 F
(O) 180 424.33 T
1 F
(Like \324N\325 but steps over macros as well.) 243 424.33 T
3 F
(m, M) 180 405.33 T
1 F
(Goes to the next method called. Doesn\325) 243 405.33 T
(t work when the) 421.18 405.33 T
(message is not handled anywhere.) 243 393.33 T
3 F
(F) 180 374.33 T
1 F
(Finishes the current message.) 243 374.33 T
3 F
(f) 180 355.33 T
1 F
(Finishes out the current stack frame.) 243 355.33 T
3 F
(s) 180 336.33 T
1 F
(, <) 185 336.33 T
3 F
(Return) 196.62 336.33 T
1 F
(>) 233.66 336.33 T
(Steps one instruction.) 243 336.33 T
3 F
(A) 180 317.33 T
1 F
(Aborts the current stack frame.) 243 317.33 T
3 F
(S) 180 298.33 T
1 F
(Skips the current instruction) 243 298.33 T
3 F
(B) 180 279.33 T
1 F
(Backs up an instruction \050opposite of \322S\323\051.) 243 279.33 T
3 F
(J) 180 260.33 T
1 F
(Jump on a conditional jump, even when \322W) 243 260.33 T
(ill not jump\323) 443.02 260.33 T
(appears. This does not change the condition codes.) 243 248.33 T
3 F
(g) 180 229.33 T
1 F
(Executes the \324go\325 command with the rest of the line as) 243 229.33 T
(arguments.) 243 217.33 T
3 F
(e) 180 198.33 T
1 F
(Executes a T) 243 198.33 T
(cl command and returns to the prompt.) 301.64 198.33 T
3 F
(r) 180 179.33 T
1 F
(Lists the registers \050uses the regs command\051) 243 179.33 T
3 F
(R) 180 160.33 T
1 F
(References either the function to be called or the function) 243 160.33 T
(currently executing.) 243 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "157" 83
%%Page: "158" 84
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(158) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(!) 56.28 85 T
0 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(4.2) 54.33 539.67 T
81 144 531 648 R
7 X
V
3 10 Q
0 X
(h) 180 641.33 T
1 F
(,) 186.85 641.33 T
3 F
(?) 192.41 641.33 T
1 F
(Displays a help message.) 243 641.33 T
2 F
(u) 180 622.33 T
1 F
-0.21 (If the current patient isn\325) 198 622.33 P
-0.21 (t the actual current thread,) 314.19 622.33 P
3 F
-0.22 (istep) 442.58 622.33 P
1 F
-0.21 ( waits for the) 467.95 622.33 P
(patient to wake up before single-stepping it.) 198 610.33 T
0 F
(See Also:) 99 591.33 T
1 F
(sstep, listi, ewatch.) 180 591.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "158" 84
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 84
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%+ Courier-BoldOblique
%%+ Courier
%%+ NewCenturySchlbk-BoldItalic
%%EOF
