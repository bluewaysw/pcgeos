%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 14 FMDOCUMENT
0 0 /NewCenturySchlbk-Roman FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /NewCenturySchlbk-Italic FMFONTDEFINE
5 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "159" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(159) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 625.99 531 631 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 625.99 531 631 R
7 X
0 0 0 1 0 0 0 K
V
50 629.99 609.01 629.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 617.99 T
2 F
(keyboard) 99 617.99 T
2 10 Q
(Usage:) 99 600.33 T
0 F
(keyboard [<object>]) 180 600.33 T
2 F
(Examples:) 99 580.33 T
0 F
(\322keyboard\323) 180 560.33 T
(print keyboard hierarchy from system object down) 243 560.33 T
(\322keyboard -i\323) 180 541.33 T
(print keyboard hierarchy from implied grab down) 243 541.33 T
(\322keyboard ^l4e10h:20h\323) 180 522.33 T
(print keyboard hierarchy from ^l4e10h:20h down.) 243 510.33 T
2 F
(Synopsis:) 99 491.33 T
0 F
(Prints the keyboard hierarchy below an object.) 180 491.33 T
2 F
(Notes:) 99 471.33 T
1 F
(u) 180 451.33 T
0 F
(If no object is speci\336ed, the system object is used.) 198 451.33 T
1 F
(u) 180 432.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 432.33 P
(\337ags, see pobject.) 198 420.33 T
1 F
(u) 180 401.33 T
0 F
-0.65 (The variable \322printNamesInObjT) 198 401.33 P
-0.65 (rees\323 can be used to print out the actual) 349.81 401.33 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 389.33 T
(This variable defaults to false.) 198 370.33 T
2 F
(See Also:) 99 351.33 T
0 F
(target, focus, mouse, model, pobject.) 180 351.33 T
81 334.98 531 339.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 334.98 531 339.99 R
7 X
0 0 0 1 0 0 0 K
V
50 338.98 609.01 338.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 326.98 T
2 F
(keyboardobj) 99 326.98 T
2 10 Q
(Usage:) 99 309.32 T
0 F
(keyboardobj) 180 309.32 T
2 F
(Examples:) 99 289.32 T
0 F
(\322keyboardobj\323) 180 269.32 T
(return object with keyboard grab) 243 257.32 T
(\322pobj [keyboardobj]\323) 180 238.32 T
-0.39 (do a) 243 226.32 P
3 F
-0.4 (pobject) 264.08 226.32 P
0 F
-0.39 ( on the object with the keyboard grab \050equivalent) 302.42 226.32 P
(to \322pobj -kg\323.) 243 214.32 T
2 F
(Synopsis:) 99 195.32 T
0 F
(Returns the object with the keyboard grab.) 180 195.32 T
2 F
(See Also:) 99 175.32 T
0 F
(target, focus, mouse, keyboard, mouseobj.) 180 175.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "159" 1
%%Page: "160" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(160) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(lastCommand) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
($lastCommand) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322var repeatCommand $lastCommand\323) 180 577.33 T
-0.67 (Set the current command as the command to execute next time.) 243 565.33 P
2 F
(Synopsis:) 99 546.33 T
0 F
($lastCommand stores the text of the command currently being executed.) 180 546.33 T
2 F
(Notes:) 99 526.33 T
0 F
(This variable is set by top-level-read. Setting it yourself will have no effect,) 180 526.33 T
(unless you call set-address or some similar routine that looks at it.) 180 513.33 T
2 F
(See Also:) 99 493.33 T
0 F
(repeatCommand, top-level-read.) 180 493.33 T
81 476.98 531 481.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 476.98 531 481.99 R
7 X
0 0 0 1 0 0 0 K
V
50 480.98 609.01 480.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 468.98 T
2 F
(length) 99 468.98 T
0 F
(This is a T) 163.88 468.98 T
(cl primitive. See \322T) 221.6 468.98 T
(ool Command Language,\323 Chapter) 326.52 468.98 T
(5.) 520.99 468.98 T
81 454.98 531 459.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 454.98 531 459.98 R
7 X
0 0 0 1 0 0 0 K
V
50 458.98 609.01 458.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 446.98 T
2 F
(lhwalk) 99 446.98 T
2 10 Q
(Usage:) 99 429.31 T
0 F
(lhwalk [<address>]) 180 429.31 T
2 F
(Examples:) 99 409.31 T
0 F
(\322lhwalk 1581h\323) 180 389.31 T
(list the lm heap at 1581h:0) 243 377.31 T
2 F
(Synopsis:) 99 358.31 T
0 F
(Prints out information about a local memory heap.) 180 358.31 T
2 F
(Notes:) 99 338.31 T
1 F
(u) 180 318.31 T
0 F
-0.29 (The address argument is the address of the block to print. The default is) 198 318.31 P
(the block pointed to by) 198 306.31 T
0 9 Q
(DS) 305.43 306.31 T
0 10 Q
(.) 318.1 306.31 T
2 F
(See Also:) 99 287.31 T
0 F
(hwalk, objwalk) 180 287.31 T
81 270.97 531 275.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 270.97 531 275.97 R
7 X
0 0 0 1 0 0 0 K
V
50 274.97 609.01 274.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 262.97 T
2 F
(link) 99 262.97 T
2 10 Q
(Usage:) 99 245.3 T
0 F
(link <library> [<patient>]) 180 245.3 T
2 F
(Examples:) 99 225.3 T
0 F
(\322link motif\323) 180 205.3 T
-0.54 (Makes the library \322motif\323 a library of the current patient as far) 243 205.3 P
(as Swat is concerned.) 243 193.3 T
2 F
(Synopsis:) 99 174.3 T
0 F
-0.2 (Allows you to link a patient to act as an imported library of another patient,) 180 174.3 P
(even though the other patient doesn\325) 180 161.3 T
(t actually import the patient. This is) 349.09 161.3 T
(useful only for symbol searches.) 180 148.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "160" 2
%%Page: "161" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(161) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(sym-default is a much better way to have Swat locate symbols for) 198 621.33 T
(libraries that are loaded by) 198 609.33 T
3 F
(GeodeUseLibrary\050\051) 326.55 609.33 T
0 F
(.) 425.99 609.33 T
1 F
(u) 180 590.33 T
0 F
-0.19 (Cycles are not allowed. I.e. don\325) 198 590.33 P
-0.19 (t link your application as a library of the) 342.27 590.33 P
0 9 Q
(UI) 198 578.33 T
0 10 Q
(, as it won\325) 209 578.33 T
(t work\321or if it does, it will make Swat die.) 258.1 578.33 T
1 F
(u) 180 559.33 T
0 F
-0.71 (The link persists across detach/attach sequences so long as the <patient>) 198 559.33 P
(isn\325) 198 547.33 T
(t recompiled and downloaded.) 213.75 547.33 T
1 F
(u) 180 528.33 T
0 F
-0.54 (If you don\325) 198 528.33 P
-0.54 (t give <patient>, then the current patient will be the one made) 245.08 528.33 P
(to import <library>) 198 516.33 T
1 F
(u) 180 497.33 T
0 F
(Both <library> and <patient> are patient) 198 497.33 T
4 F
(names) 391.9 497.33 T
0 F
(, not tokens.) 421.52 497.33 T
2 F
(See Also:) 99 478.33 T
0 F
(help-fetch.) 180 478.33 T
81 461.99 531 467 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.99 531 467 R
7 X
0 0 0 1 0 0 0 K
V
50 465.99 609.01 465.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.99 T
2 F
(list) 99 453.99 T
0 F
(This is a T) 163.88 453.99 T
(cl primitive. See \322T) 221.6 453.99 T
(ool Command Language,\323 Chapter) 326.52 453.99 T
(5.) 520.99 453.99 T
81 439.98 531 444.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.98 531 444.99 R
7 X
0 0 0 1 0 0 0 K
V
50 443.98 609.01 443.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.98 T
2 F
(listi) 99 431.98 T
2 10 Q
(Usage:) 99 414.32 T
0 F
(listi [<address>] [<length>]) 180 414.32 T
2 F
(Examples:) 99 394.32 T
0 F
(\322l\323) 180 374.32 T
(disassemble at the current point of execution) 243 374.32 T
(\322listi geos::Dispatch\323) 180 355.32 T
(disassemble at the kernel\325) 243 343.32 T
(s dispatch routine) 363.03 343.32 T
(\322listi DocClip:IsOut\323) 180 324.32 T
(disassemble at the local label) 243 312.32 T
(\322listi cs:ip 20\323) 180 293.32 T
-0.53 (disassemble 20 instructions from the current point of execution) 243 281.32 P
2 F
(Synopsis:) 99 262.32 T
0 F
(Disassemble at a memory address.) 180 262.32 T
2 F
(Notes:) 99 242.32 T
1 F
(u) 180 222.32 T
0 F
-0.05 (The <address> argument is the address to examine. If not speci\336ed, the) 198 222.32 P
(address after the last examined memory location is used. If no address) 198 210.32 T
(has be examined then) 198 198.32 T
0 9 Q
(CS:IP) 301.91 198.32 T
0 10 Q
( is used for the address.) 326.25 198.32 T
1 F
(u) 180 179.32 T
0 F
(The <length> argument is the number of instructions to list. It defaults) 198 179.32 T
(to 16.) 198 167.32 T
1 F
(u) 180 148.32 T
0 F
(Pressing <Return> after this command continues the list.) 198 148.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "161" 3
%%Page: "162" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(162) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(istep, sstep, skip, where.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(load) 99 616.99 T
2 10 Q
(Usage:) 99 598.33 T
0 F
(load <\336le>) 180 598.33 T
2 F
(Synopsis:) 99 578.33 T
0 F
(Load a \336le of T) 180 578.33 T
(cl commands.) 248.1 578.33 T
1 F
(u) 180 558.33 T
0 F
(If the \336le cannot be found as given, it is looked for in all the directories) 198 558.33 T
(mentioned in the \322load-path\323 variable. This variable is initialized from) 198 546.33 T
(the) 198 534.33 T
0 9 Q
(SW) 215.78 534.33 T
(A) 229.45 534.33 T
(TP) 235.45 534.33 T
(A) 246.79 534.33 T
(TH) 252.8 534.33 T
0 10 Q
( environment variable, which is in the form) 266.3 534.33 T
(<dir1>:<dir2>:...:<dirN>.) 198 522.33 T
1 F
(u) 180 503.33 T
0 F
(The Swat library directory is appended to this path so you need not) 198 503.33 T
(include it yourself. The \336le need not end in \322.tcl\323.) 198 491.33 T
1 F
(u) 180 472.33 T
0 F
(When searching,) 198 472.33 T
4 F
(\336le) 278.18 472.33 T
0 F
(,) 292.06 472.33 T
4 F
(\336le) 297.62 472.33 T
0 F
(.tcl, and) 311.5 472.33 T
4 F
(\336le) 351.51 472.33 T
0 F
(.tlc are searched for) 365.39 472.33 T
(. If) 455.94 472.33 T
3 F
(load) 471.68 472.33 T
0 F
( \336nds a) 494.09 472.33 T
4 F
(\336le) 198 460.33 T
0 F
(.tlc \336le, that \336le will be used only if it is more recent than any) 211.88 460.33 T
(corresponding) 198 448.33 T
4 F
(\336le) 265.95 448.33 T
0 F
(.tcl or) 279.83 448.33 T
4 F
(\336le) 309.09 448.33 T
0 F
( \336le.) 322.97 448.33 T
81 432.98 531 437.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 432.98 531 437.99 R
7 X
0 0 0 1 0 0 0 K
V
50 436.98 609.01 436.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 424.98 T
2 F
(loadapp) 99 424.98 T
0 10 Q
(Load an application from swat. Single argument is the \336le name of the) 180 407.32 T
-0.51 (application to launch \050application must reside in the appl subdirectory of the) 180 394.32 P
0 9 Q
(GEOS) 180 381.32 T
0 10 Q
( tree\051.) 206.17 381.32 T
(The application is opened in normal application mode. Note that the) 180 361.32 T
-0.35 (application will not be loaded until you continue the machine, as the loading) 180 348.32 P
(is accomplished by sending a message to the) 180 335.32 T
0 9 Q
(UI) 387.44 335.32 T
0 10 Q
(.) 398.44 335.32 T
81 318.98 531 323.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 318.98 531 323.98 R
7 X
0 0 0 1 0 0 0 K
V
50 322.98 609.01 322.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 310.98 T
2 F
(loadgeode) 99 310.98 T
0 10 Q
-0.13 (Load a geode from swat. Mandatory \336rst argument is the name of the \336le to) 180 293.31 P
-0.82 (load \050with path from top-level GEOS directory) 180 280.31 P
-0.82 (, using / instead of \134 as the path) 387.49 280.31 P
(separator\051.) 180 267.31 T
(Second and third arguments are the data words to pass to the geode. The) 180 247.31 T
(second argument is passed to the geode in cx, while the third argument is) 180 234.31 T
(passed in dx.) 180 221.31 T
(Both the second and third arguments are optional and default to 0. They) 180 201.31 T
(likely are unnecessary) 180 188.31 T
(.) 282.6 188.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "162" 4
%%Page: "163" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(163) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(locals) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(locals [<func>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322locals\323) 180 577.33 T
(Print the values of all local variables and arguments for the) 243 577.33 T
(current frame.) 243 565.33 T
(\322locals W) 180 546.33 T
(inOpen\323) 222.04 546.33 T
-0.46 (Print the names of all local variables for the given function. No) 243 534.33 P
(values are printed.) 243 522.33 T
2 F
(Synopsis:) 99 503.33 T
0 F
(Allows you to quickly \336nd the values or names of all the local variables of a) 180 503.33 T
(function or stack frame.) 180 490.33 T
2 F
(See Also:) 99 470.33 T
0 F
(print, frame info) 180 470.33 T
81 453.98 531 458.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 453.98 531 458.99 R
7 X
0 0 0 1 0 0 0 K
V
50 457.98 609.01 457.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 445.98 T
2 F
(localwin) 99 445.98 T
2 10 Q
(Usage:) 99 428.32 T
0 F
(localwin [<numlines>]) 180 428.32 T
2 F
(Examples:) 99 408.32 T
0 F
(\322localwin\323) 180 388.32 T
(Display local variables in a 10-line window) 243 388.32 T
( \322localwin 15\323) 180 369.32 T
(Display local variables in a 15-line window) 243 357.32 T
( \322localwin off\323) 180 338.32 T
(T) 243 326.32 T
(urn off the local variable display) 248.96 326.32 T
2 F
(Synopsis:) 99 307.32 T
0 F
(T) 180 307.32 T
(urn on or off the continuous display of local variables.) 185.96 307.32 T
2 F
(Notes:) 99 287.32 T
1 F
(u) 180 267.32 T
0 F
(Passing an optional numerical argument turns on display of that size.) 198 267.32 T
(The default size is 10 lines.) 198 255.32 T
1 F
(u) 180 236.32 T
0 F
(Only one local variable display may be active at a time.) 198 236.32 T
81 220.98 531 225.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 220.98 531 225.98 R
7 X
0 0 0 1 0 0 0 K
V
50 224.98 609.01 224.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 212.97 T
2 F
(loop) 99 212.97 T
0 10 Q
(Simple integer loop procedure. Usage is:) 180 195.31 T
( loop <loop-variable> <start>,<end> [step <step>] <body>) 180 182.31 T
(<start>, <end>, and <step> are integers. <body> is a string for T) 180 162.31 T
(cl to) 477.15 162.31 T
(evaluate. If no <step> is given, 1 or -1 \050depending as <start> is less than or) 180 149.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "163" 5
%%Page: "164" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(164) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(greater than <end>, respectively\051 is used. <loop-variable> is any legal T) 180 641.33 T
(cl) 510.51 641.33 T
(variable name.) 180 628.33 T
81 611.99 531 617 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 611.99 531 617 R
7 X
0 0 0 1 0 0 0 K
V
50 615.99 609.01 615.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 603.99 T
2 F
(map) 99 603.99 T
2 10 Q
(Usage:) 99 586.33 T
0 F
(map <var) 180 586.33 T
(-list> <data-list>+ <body>) 224.22 586.33 T
2 F
(Examples:) 99 566.33 T
0 F
(\322map {i j} {a b} {c d} {list $i $j}\323) 180 546.33 T
(Executes the command \322list $i $j\323 with i and j assigned to) 243 534.33 T
(successive elements of the lists {a b} and {c d}, respectively) 243 522.33 T
(,) 511.53 522.33 T
(merging the results into the list {{a c} {b d}}) 243 510.33 T
2 F
(Synopsis:) 99 491.33 T
0 F
-0.83 (This applies a command string to the successive elements of one or more lists,) 180 491.33 P
(binding each element in turn to a variable and evaluating the command) 180 478.33 T
(string. The results of all the evaluations are merged into a result list.) 180 465.33 T
2 F
(Notes:) 99 445.33 T
1 F
(u) 180 425.33 T
0 F
(The number of variables given in <var) 198 425.33 T
(-list> must match the number of) 374.83 425.33 T
(<data-list> arguments you give.) 198 413.33 T
1 F
(u) 180 394.33 T
0 F
-0.06 ( All the <data-list> arguments must have the same number of elements.) 198 394.33 P
1 F
(u) 180 375.33 T
0 F
-0.06 ( Y) 198 375.33 P
-0.06 (ou do not specify the result of the <body> with the \322return\323 command.) 206.65 375.33 P
(Rather) 198 363.33 T
(, the result of <body> is the result of the last command executed) 229.48 363.33 T
(within <body>.) 198 351.33 T
2 F
(See Also:) 99 332.33 T
0 F
(foreach, mapconcat.) 180 332.33 T
81 315.98 531 320.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 315.98 531 320.99 R
7 X
0 0 0 1 0 0 0 K
V
50 319.98 609.01 319.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 307.98 T
2 F
(mapconcat) 99 307.98 T
2 10 Q
(Usage:) 99 290.32 T
0 F
(mapconcat <var) 180 290.32 T
(-list> <data-list>+ <body>) 253.66 290.32 T
2 F
(Examples:) 99 270.32 T
0 F
(\322mapconcat {i j} {a b} {c d} {list $i $j}\323) 180 250.32 T
(Executes the command \322list $i $j\323 with i and j assigned to) 243 238.32 T
(successive elements of the lists {a b} and {c d}, respectively) 243 226.32 T
(,) 511.53 226.32 T
(merging the results into a string.) 243 214.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "164" 6
%%Page: "165" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(165) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(map-method) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(map-method <number> <object>) 180 617.33 T
(map-method <number> <class-name> [<object>]) 180 604.33 T
2 F
(Examples:) 99 584.33 T
0 F
(\322map-method ax ^lbx:si\323) 180 564.33 T
(Prints the name of the message in ax, from the object at) 243 552.33 T
(^lbx:si\325) 243 540.33 T
(s perspective.) 275.37 540.33 T
(\322map-method 293 GenClass\323) 180 521.33 T
(Prints the name of message number 293 from GenClass\325) 243 509.33 T
(s) 502.3 509.33 T
(perspective.) 243 497.33 T
2 F
(Synopsis:) 99 478.33 T
0 F
-0.7 (Maps a message number to a human-readable message name, returning that) 180 478.33 P
(name. This command is useful both for the user and for a T) 180 465.33 T
(cl procedure.) 453.11 465.33 T
2 F
(Notes:) 99 445.33 T
1 F
(u) 180 425.33 T
0 F
-0.56 (When called from a T) 198 425.33 P
-0.56 (cl procedure, the <class-name> argument should be) 294.05 425.33 P
(the fullname of the class symbol \050usually obtained with the obj-class) 198 413.33 T
-0.1 (function\051, and <object> should be the address of the object for which the) 198 401.33 P
(mapping is to take place. If no <object> argument is provided,) 198 389.33 T
(map-method will be unable to resolve messages de\336ned by one of the) 198 377.33 T
(object\325) 198 365.33 T
(s superclasses that lies beyond a variant superclass.) 226.52 365.33 T
1 F
(u) 180 346.33 T
0 F
(If no name can be found, the message number) 198 346.33 T
(, in decimal, is returned.) 409.5 346.33 T
1 F
(u) 180 327.33 T
0 F
-0.71 (The result is simply returned, not echoed. Y) 198 327.33 P
-0.71 (ou will need to echo the result) 394.68 327.33 P
(yourself if you call this function from anywhere but the command line.) 198 315.33 T
2 F
(See Also:) 99 296.33 T
0 F
(obj-class.) 180 296.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "165" 7
%%Page: "166" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(166) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(mcount) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(mcount [<args>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322mcount\323) 180 577.33 T
(start the method count or print the count) 243 577.33 T
(\322mcount reset\323) 180 558.33 T
(restart the method count) 243 546.33 T
(\322mcount stop\323) 180 527.33 T
(stop the method count) 243 515.33 T
(\322mcount MyAppRecalcSize\323) 180 496.33 T
(count messages handled by MyAppRecalcSize) 243 484.33 T
2 F
(Synopsis:) 99 465.33 T
0 F
(Keep a count of the methods called.) 180 465.33 T
2 F
(Notes:) 99 445.33 T
0 F
(The args argument may be one of the following:) 180 445.33 T
( nothing) 180 425.33 T
(start the method count or print the current count) 243 425.33 T
(\325reset\325) 180 406.33 T
(reset the count to zero) 243 406.33 T
(\325) 180 387.33 T
(stop\325) 181.67 387.33 T
(stop the method count and remove it\325) 243 387.33 T
(s breakpoint) 413.94 387.33 T
( message handler) 180 368.33 T
(start the method count for a particular method) 243 356.33 T
2 F
(See Also:) 99 337.33 T
0 F
(mwatch, showcalls.) 180 337.33 T
81 320.98 531 325.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 320.98 531 325.99 R
7 X
0 0 0 1 0 0 0 K
V
50 324.98 609.01 324.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 312.98 T
2 F
(memsize) 99 312.98 T
2 10 Q
(Usage:) 99 295.32 T
0 F
(memsize [<memory size>]) 180 295.32 T
2 F
(Examples:) 99 275.32 T
0 F
(\322memsize\323) 180 255.32 T
(\322memsize 512\323) 180 236.32 T
2 F
(Synopsis:) 99 217.32 T
0 F
(Change the amount of memory that) 180 217.32 T
0 9 Q
(GEOS) 347.98 217.32 T
0 10 Q
( thinks that it has.) 374.15 217.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "166" 8
%%Page: "167" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(167) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <memory size> argument is the size to make the heap. If none is) 198 621.33 T
(speci\336ed then the current memory size is returned.) 198 609.33 T
1 F
(u) 180 590.33 T
0 F
-0.53 (Memsize can only be run at startup, before the heap has been initialized.) 198 590.33 P
(Use this right after an \324att -s\325.) 198 578.33 T
1 F
(u) 180 559.33 T
0 F
(Memsize accounts for the size of the stub.) 198 559.33 T
81 543.99 531 549 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 543.99 531 549 R
7 X
0 0 0 1 0 0 0 K
V
50 547.99 609.01 547.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 535.99 T
2 F
(methods) 99 535.99 T
2 10 Q
(Usage:) 99 518.33 T
0 F
(methods <class>) 180 518.33 T
(methods <object>) 180 505.33 T
(methods <\337ags>) 180 492.33 T
2 F
(Examples:) 99 472.33 T
0 F
(\322methods -p\323) 180 452.33 T
(Print out methods de\336ned for process) 243 452.33 T
(\322methods ui::GenDocumentClass\323) 180 433.33 T
(Print out GenDocumentClass methods) 243 421.33 T
(\322methods 3ffch:072fh\323) 180 402.33 T
(Print out methods for class at addr) 243 390.33 T
(\322methods -a\323) 180 371.33 T
(Print methods of top class of app obj) 243 371.33 T
2 F
(Synopsis:) 99 352.33 T
0 F
(Prints out the method table for the class speci\336ed, or if an object is passed,) 180 352.33 T
(for the overall class of the object. Useful for getting a list of candidate) 180 339.33 T
(locations to breakpoint.) 180 326.33 T
81 309.98 531 314.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.98 531 314.99 R
7 X
0 0 0 1 0 0 0 K
V
50 313.98 609.01 313.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 301.98 T
2 F
(model) 99 301.98 T
2 10 Q
(Usage:) 99 284.32 T
0 F
(model [<object>]) 180 284.32 T
2 F
(Examples:) 99 264.32 T
0 F
(\322model\323) 180 244.32 T
(print model hierarchy from system object down) 243 244.32 T
( \322model -i\323) 180 225.32 T
(print model hierarchy from implied grab down) 243 225.32 T
( \322model ^l4e10h:20h\323) 180 206.32 T
(print model hierarchy from ^l4e10h:20h down.) 243 194.32 T
2 F
(Synopsis:) 99 175.32 T
0 F
(Prints the model hierarchy below an object.) 180 175.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "167" 9
%%Page: "168" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(168) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(If no object is speci\336ed, the system object is used.) 198 621.33 T
1 F
(u) 180 602.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 602.33 P
(\337ags, see pobject.) 198 590.33 T
1 F
(u) 180 571.33 T
0 F
(Remember that the object you start from may have the model exclusive) 198 571.33 T
(within its part of the hierarchy) 198 559.33 T
(, but still not have the exclusive because) 340.23 559.33 T
(something in a different part of the tree has it.) 198 547.33 T
1 F
(u) 180 528.33 T
0 F
-0.65 (The variable \322printNamesInObjT) 198 528.33 P
-0.65 (rees\323 can be used to print out the actual) 349.81 528.33 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 516.33 T
(This variable defaults to false.) 198 497.33 T
2 F
(See Also:) 99 478.33 T
0 F
(target, focus, mouse, keyboard, pobject.) 180 478.33 T
81 461.99 531 467 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.99 531 467 R
7 X
0 0 0 1 0 0 0 K
V
50 465.99 609.01 465.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.99 T
2 F
(modelobj) 99 453.99 T
2 10 Q
(Usage:) 99 436.33 T
0 F
(modelobj) 180 436.33 T
2 F
(Examples:) 99 416.33 T
0 F
(\322modelobj\323) 180 396.33 T
(print model hierarchy from system object down) 243 396.33 T
(\322pobj [modelobj]\323) 180 377.33 T
-0.57 (Do a) 243 365.33 P
3 F
-0.59 (pobject) 265.76 365.33 P
0 F
-0.57 ( on the object with the model grab \050the equivalent) 304.1 365.33 P
(of a \322pobj -m\323\051.) 243 353.33 T
2 F
(Synopsis:) 99 334.33 T
0 F
(Returns the object with the model grab.) 180 334.33 T
2 F
(See Also:) 99 314.33 T
0 F
(target, focus, model, focusobj, targetobj.) 180 314.33 T
81 297.98 531 302.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 297.98 531 302.99 R
7 X
0 0 0 1 0 0 0 K
V
50 301.98 609.01 301.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 289.98 T
2 F
(mouse) 99 289.98 T
2 10 Q
(Usage:) 99 272.32 T
0 F
(mouse [<object>]) 180 272.32 T
2 F
(Examples:) 99 252.32 T
0 F
(\322mouse\323) 180 232.32 T
(print mouse hierarchy from system object down) 243 232.32 T
(\322mouse -i\323) 180 213.32 T
(print mouse hierarchy from implied grab down) 243 213.32 T
(\322mouse ^l4e10h:20h\323) 180 194.32 T
(print mouse hierarchy from ^l4e10h:20h down.) 243 182.32 T
2 F
(Synopsis:) 99 163.32 T
0 F
(Prints the mouse hierarchy below an object.) 180 163.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "168" 10
%%Page: "169" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(169) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(If no object is speci\336ed, the system object is used.) 198 621.33 T
1 F
(u) 180 602.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 602.33 P
(\337ags, see pobject.) 198 590.33 T
1 F
(u) 180 571.33 T
0 F
-0.65 (The variable \322printNamesInObjT) 198 571.33 P
-0.65 (rees\323 can be used to print out the actual) 349.81 571.33 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 559.33 T
(This variable defaults to false.) 198 540.33 T
2 F
(See Also:) 99 521.33 T
0 F
(target, focus, model, keyboard, pobject.) 180 521.33 T
81 504.99 531 510 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 504.99 531 510 R
7 X
0 0 0 1 0 0 0 K
V
50 508.99 609.01 508.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 496.99 T
2 F
(mouseobj) 99 496.99 T
2 10 Q
(Usage:) 99 479.33 T
0 F
(mouseobj) 180 479.33 T
2 F
(Examples:) 99 459.33 T
0 F
(\322mouseobj\323) 180 439.33 T
(return object with mouse grab) 243 439.33 T
( \322pobj [mouseobj]\323) 180 420.33 T
(do a pobject on the object with the mouse grab \050equivalent to) 243 408.33 T
(\322pobj) 243 396.33 T
(-mg\323\051.) 268.93 396.33 T
2 F
(Synopsis:) 99 377.33 T
0 F
(Returns the object with the mouse grab.) 180 377.33 T
2 F
(See Also:) 99 357.33 T
0 F
(target, focus, mouse, keyboard, keyboardobj.) 180 357.33 T
81 340.98 531 345.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 340.98 531 345.99 R
7 X
0 0 0 1 0 0 0 K
V
50 344.98 609.01 344.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 332.98 T
2 F
(mwatch) 99 332.98 T
2 10 Q
(Usage:) 99 315.32 T
0 F
(mwatch <msg>+) 180 315.32 T
(mwatch add <msg>+) 180 302.32 T
(mwatch list) 180 289.32 T
(mwatch clear) 180 276.32 T
2 F
(Examples:) 99 256.32 T
0 F
(\322mwatch) 180 236.32 T
0 9 Q
(MSG_VIS_DRA) 223.34 236.32 T
(W) 288.51 236.32 T
(MSG_MET) 300.12 236.32 T
(AQUIT) 346.29 236.32 T
0 10 Q
(\323) 376.79 236.32 T
(watch these messages) 243 224.32 T
(\322mwatch add) 180 205.32 T
0 9 Q
(MSG_MET) 243.16 205.32 T
(A_ST) 289.33 205.32 T
(ART_SELECT) 311.51 205.32 T
0 10 Q
(\323) 372.17 205.32 T
(watch this message also) 243 193.32 T
(\322mwatch\323) 180 174.32 T
(clear all message watches) 243 174.32 T
2 F
(Synopsis:) 99 155.32 T
0 F
(Display all deliveries of a particular message.) 180 155.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "169" 11
%%Page: "170" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(170) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The) 198 621.33 T
4 F
(msg) 218.56 621.33 T
0 F
( argument is which messages to watch. Those speci\336ed replace) 237.26 621.33 T
(any messages watched before. If none are speci\336ed then any messages) 198 609.33 T
(watched will be cleared.) 198 597.33 T
1 F
(u) 180 578.33 T
0 F
(Y) 198 578.33 T
(ou may specify up to eight messages to be watched \050fewer if you have) 203.93 578.33 T
(other conditional breakpoints active\051. See cbrk for more information) 198 566.33 T
(about conditional breakpoints.) 198 554.33 T
1 F
(u) 180 535.33 T
0 F
(\322mwatch clear\323 will clear all message watches.) 198 535.33 T
1 F
(u) 180 516.33 T
0 F
(\322mwatch add\323 will add the speci\336ed messages to the watch list.) 198 516.33 T
1 F
(u) 180 497.33 T
0 F
(\322mwatch list\323 will return a list of breakpoints that have been set by) 198 497.33 T
(previous calls to mwatch.) 198 485.33 T
2 F
(See Also:) 99 466.33 T
0 F
(objwatch, objbrk, objmessagebrk, procmessagebrk.) 180 466.33 T
81 449.99 531 455 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 449.99 531 455 R
7 X
0 0 0 1 0 0 0 K
V
50 453.99 609.01 453.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 441.99 T
2 F
(next) 99 441.99 T
2 10 Q
(Usage:) 99 424.33 T
0 F
(next) 180 424.33 T
2 F
(Examples:) 99 404.33 T
0 F
(\322next\323) 180 384.33 T
(execute the next assembly instruction without entering it) 243 384.33 T
(\322n\323) 180 365.33 T
2 F
(Synopsis:) 99 346.33 T
0 F
-0.71 (Execute the patient by a single assembly instruction, skipping over any calls,) 180 346.33 P
(repeated instructions, or software interrupts.) 180 333.33 T
2 F
(Notes:) 99 313.33 T
1 F
(u) 180 293.33 T
3 F
(next) 198 293.33 T
0 F
( does not protect against recursion, so when the breakpoint for the) 220.96 293.33 T
(next instruction is hit, the frame of execution may be one lower) 198 281.33 T
(.) 489.32 281.33 T
2 F
(See Also:) 99 262.33 T
0 F
(step, istep.) 180 262.33 T
81 245.98 531 250.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 245.98 531 250.99 R
7 X
0 0 0 1 0 0 0 K
V
50 249.98 609.01 249.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 237.98 T
2 F
(noStructEnum) 99 237.98 T
2 10 Q
(Usage:) 99 220.32 T
0 F
(var noStructEnum [\0500|1\051]) 180 220.32 T
2 F
(Examples:) 99 200.32 T
0 F
(\322var noStructEnum 1\323) 180 180.32 T
-0.07 (Don\325) 243 168.32 P
-0.07 (t put \322struct\323 or \322enum\323 before the data type for variables) 263.75 168.32 P
(that are structures or enumerated types.) 243 156.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "170" 12
%%Page: "171" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(171) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Structure \336elds that are structures or enumerated types normally have) 180 641.33 T
-0.48 (\322struct\323 or \322enum\323 as part of their type description. This usually just clutters) 180 628.33 P
(up the display) 180 615.33 T
(, however) 244.64 615.33 T
(, so this variable shuts off this prepending.) 288.16 615.33 T
2 F
(Notes:) 99 595.33 T
0 F
(The default value of this variable is one.) 180 595.33 T
2 F
(See Also:) 99 575.33 T
0 F
(print.) 180 575.33 T
81 558.99 531 564 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 558.99 531 564 R
7 X
0 0 0 1 0 0 0 K
V
50 562.99 609.01 562.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 550.99 T
2 F
(null) 99 550.99 T
2 10 Q
(Usage:) 99 533.33 T
0 F
(null <val>) 180 533.33 T
2 F
(Examples:) 99 513.33 T
0 F
(\322null $sym\323) 180 493.33 T
-0.01 (Sees if the symbol token stored in $sym is the empty string or) 243 493.33 P
(\322nil.\323) 243 481.33 T
2 F
(Synopsis:) 99 462.33 T
0 F
(Checks to see if a string is either empty or \322nil,\323 special values returned by) 180 462.33 T
(many commands when something isn\325) 180 449.33 T
(t found or doesn\325) 355.21 449.33 T
(t apply) 431.51 449.33 T
(. Returns) 462.63 449.33 T
(non-zero if <val> is either of these special values.) 180 436.33 T
2 F
(Notes:) 99 416.33 T
0 F
(The notion of \322nil\323 as a value comes from lisp.) 180 416.33 T
2 F
(See Also:) 99 396.33 T
0 F
(index, range) 180 396.33 T
81 379.98 531 384.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 379.98 531 384.99 R
7 X
0 0 0 1 0 0 0 K
V
50 383.98 609.01 383.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 371.98 T
2 F
(objbrk) 99 371.98 T
2 10 Q
(Usage:) 99 354.32 T
0 F
(objbrk [<obj address>] [<message>]) 180 354.32 T
2 F
(Examples:) 99 334.32 T
0 F
(\322objbrk ds:si) 180 314.32 T
0 9 Q
(MSG_VIS_DRA) 239.83 314.32 T
(W) 305 314.32 T
0 10 Q
(\323) 313.83 314.32 T
(break when a) 243 302.32 T
0 9 Q
(MSG_VIS_DRA) 308.39 302.32 T
(W) 373.56 302.32 T
0 10 Q
( reaches the object) 382.39 302.32 T
(\322objbrk -p\323) 180 283.32 T
(Break when any message is sent to the process object.) 243 283.32 T
2 F
(Synopsis:) 99 264.32 T
0 F
(Break when a particular message reaches a particular object.) 180 264.32 T
2 F
(Notes:) 99 244.32 T
1 F
(u) 180 224.32 T
0 F
(If you do not give a <message> argument after the <obj> argument, the) 198 224.32 T
(machine will stop when any message is delivered to the object.) 198 212.32 T
1 F
(u) 180 193.32 T
0 F
(<obj> is the address of the object to watch.) 198 193.32 T
1 F
(u) 180 174.32 T
0 F
(The <objbrk> argument to \322objbrk del\323 is the token/number returned) 198 174.32 T
(when you set the breakpoint.) 198 162.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "171" 13
%%Page: "172" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(172) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(objwatch, objmessagebrk, mwatch.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(obj-class) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(objclass <obj-addr>) 180 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322var cs [obj-class ^lbx:si]\323) 180 559.33 T
-0.12 (Store the symbol token for the class of the object ^lbx:si in the) 243 547.33 P
(variable $cs.) 243 535.33 T
2 F
(Synopsis:) 99 516.33 T
0 F
-0.05 (Figures out the class of an object, coping with unrelocated object blocks and) 180 516.33 P
(the like.) 180 503.33 T
2 F
(Notes:) 99 483.33 T
1 F
(u) 180 463.33 T
0 F
(The value return is a symbol token, as one would pass to the \322symbol\323) 198 463.33 T
-0.57 (command. Using \322symbol name\323 or \322symbol fullname\323 you can obtain the) 198 451.33 P
(actual class name.) 198 439.33 T
1 F
(u) 180 420.33 T
0 F
(W) 198 420.33 T
(e decide whether to relocate the class pointer ourselves based on the) 207.26 420.33 T
0 9 Q
-0.58 (LMF_RELOCA) 198 408.33 P
-0.58 (TED) 261.5 408.33 P
0 10 Q
-0.64 ( bit in the) 281.01 408.33 P
4 9 Q
-0.58 (LMBH) 326.42 408.33 P
4 10 Q
-0.64 (_\337ags) 354.92 408.33 P
0 F
-0.64 ( \336eld of the object block\325) 381.58 408.33 P
-0.64 (s header) 488.2 408.33 P
-0.64 (.) 526.08 408.33 P
(There are times, e.g. during the call to) 198 396.33 T
0 9 Q
(MSG_MET) 377.84 396.33 T
(A_RELOCA) 424.01 396.33 T
(TE) 473.51 396.33 T
0 10 Q
( for an) 486.01 396.33 T
(object, when this bit doesn\325) 198 384.33 T
(t accurately re\337ect the state of the class) 322.47 384.33 T
(pointer and we will return an error when we should not.) 198 372.33 T
2 F
(See Also:) 99 353.33 T
0 F
(symbol.) 180 353.33 T
81 336.98 531 341.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 336.98 531 341.99 R
7 X
0 0 0 1 0 0 0 K
V
50 340.98 609.01 340.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 328.98 T
2 F
(objcount) 99 328.98 T
2 10 Q
(Usage:) 99 311.32 T
0 F
(objcount [-q] [-X] [-Y] [-b #] [-o #] [-p #]) 180 311.32 T
2 F
(Examples:) 99 291.32 T
0 F
(\322objcount\323) 180 271.32 T
(count all objects) 243 271.32 T
(\322objcount -p welcome\323) 180 252.32 T
(count all objects owned by welcome) 243 240.32 T
(\322objcount -o *desktop::DiskDrives\323) 180 221.32 T
(count this one object) 243 209.32 T
(\322objcount -b 0x3270\323) 180 190.32 T
(count all objects in this block.) 243 178.32 T
2 F
(Synopsis:) 99 159.32 T
0 F
(Count up instances of various objects on the heap.) 180 159.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "172" 14
%%Page: "173" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(173) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The \336rst argument speci\336es the options:) 198 621.33 T
3 F
(q) 213.36 602.33 T
0 F
(quiet operation - no progress output \050not applicable with X, Y\051) 243 602.33 T
3 F
(o #) 213.36 583.33 T
0 F
(check only object #) 243 583.33 T
3 F
( b #) 210.58 564.33 T
0 F
(check) 243 564.33 T
0 9 Q
(ONL) 271.7 564.33 T
(Y) 291.21 564.33 T
0 10 Q
( block #) 297.55 564.33 T
3 F
(p #) 213.36 545.33 T
0 F
(check only blocks for patient #) 243 545.33 T
3 F
(c #) 213.36 526.33 T
0 F
(check only objects of class #) 243 526.33 T
3 F
( C #) 210.58 507.33 T
0 F
(check only objects of top-level class #) 243 507.33 T
3 F
(X) 213.36 488.33 T
0 F
(show general verbose info) 243 488.33 T
3 F
(Y) 213.36 469.33 T
0 F
(show search verbose info) 243 469.33 T
1 F
(u) 180 450.33 T
0 F
(Output \336elds:) 198 450.33 T
3 F
(direct) 207.8 431.33 T
0 F
(number of direct instances of this class) 243 431.33 T
3 F
(indirect) 207.8 412.33 T
0 F
-0.15 (number if indirect instance of this class \050i.e object\325) 243 400.33 P
-0.15 (s superclass) 472.77 400.33 P
(is this class\051) 243 388.33 T
3 F
(size) 207.8 369.33 T
0 F
-0.46 (total size of instance data for this class \050excludes instance data) 243 369.33 P
(inherited from superclass\051) 243 357.33 T
1 F
(u) 180 338.33 T
0 F
(Status output:) 198 338.33 T
3 F
(.) 210.58 319.33 T
0 F
(processing heap block) 243 319.33 T
3 F
(,) 210.67 300.33 T
0 F
(processing matching object\325) 243 300.33 T
(s top-level class) 369.11 300.33 T
3 F
(;) 210.58 281.33 T
0 F
(processing matching object\325) 243 281.33 T
(s non-top-level class) 369.11 281.33 T
2 F
(See Also:) 99 262.33 T
0 F
(hwalk, objwalk, lhwalk.) 180 262.33 T
81 245.99 531 251 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 245.99 531 251 R
7 X
0 0 0 1 0 0 0 K
V
50 249.99 609.01 249.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 237.99 T
2 F
(obj-foreach-class) 99 237.99 T
2 10 Q
(Usage:) 99 220.33 T
0 F
(obj-foreach-class <function> <object> [<args>]) 180 220.33 T
2 F
(Examples:) 99 200.33 T
0 F
(\322obj-foreach-class foo-callback ^lbx:si\323) 180 180.33 T
(calls foo-callback with each class in turn to which the object) 243 168.33 T
(^lbx:si belongs.) 243 156.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "173" 15
%%Page: "174" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(174) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Processes all the classes to which an object belongs, calling a callback) 180 641.33 T
(procedure for each class symbol in turn.) 180 628.33 T
2 F
(Notes:) 99 608.33 T
1 F
(u) 180 588.33 T
0 F
(<function> is called with the symbol for the current class as its \336rst) 198 588.33 T
-0.77 (argument, <object> as its second, and the arguments that follow <object>) 198 576.33 P
(as its third and subsequent arguments.) 198 564.33 T
1 F
(u) 180 545.33 T
0 F
(<function> should return an empty string to continue up the class tree.) 198 545.33 T
1 F
(u) 180 526.33 T
0 F
(obj-foreach-class returns whatever <function> returned, if it halted) 198 526.33 T
(processing before the root of the class tree was reached. It returns the) 198 514.33 T
(empty string if <function> never returned a non-empty result.) 198 502.33 T
2 F
(See Also:) 99 483.33 T
0 F
(obj-class.) 180 483.33 T
81 466.99 531 472 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 466.99 531 472 R
7 X
0 0 0 1 0 0 0 K
V
50 470.99 609.01 470.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 458.99 T
2 F
(objmessagebrk) 99 458.99 T
2 10 Q
(Usage:) 99 441.33 T
0 F
(objmessagebrk [<address>]) 180 441.33 T
2 F
(Examples:) 99 421.33 T
0 F
(\322objmessagebrk MyObj\323) 180 401.33 T
(break whenever a message is sent to MyObj) 243 389.33 T
(\322objmessagebrk\323) 180 370.33 T
(stop intercepting messages) 243 358.33 T
2 F
(Synopsis:) 99 339.33 T
0 F
(Break whenever a message is sent to a particular object via ObjMessage.) 180 339.33 T
2 F
(Notes:) 99 319.33 T
1 F
(u) 180 299.33 T
0 F
(The <address> argument is the address to an object to watch for) 198 299.33 T
-0.03 (messages being sent to it. If no argument is speci\336ed then the watching) 198 287.33 P
(is stopped.) 198 275.33 T
1 F
(u) 180 256.33 T
0 F
-0.24 (This breaks whenever a message is sent \050before they get on the message) 198 256.33 P
(queue. This enables one to track identical messages to an object which) 198 244.33 T
(can be removed.) 198 232.33 T
2 F
(See Also:) 99 213.33 T
0 F
(objwatch, mwatch, procmessagebrk, pobject.) 180 213.33 T
81 196.98 531 201.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 196.98 531 201.99 R
7 X
0 0 0 1 0 0 0 K
V
50 200.98 609.01 200.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 188.98 T
2 F
(objwalk) 99 188.98 T
2 10 Q
(Usage:) 99 171.32 T
0 F
(objwalk [<address>]) 180 171.32 T
2 F
(Examples:) 99 151.32 T
0 F
(\322objwalk\323) 180 151.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "174" 16
%%Page: "175" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(175) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Prints out information about an object block.) 180 641.33 T
2 F
(Notes:) 99 621.33 T
1 F
(u) 180 601.33 T
0 F
-0.43 (The <address> argument is the address of the block to print. The default) 198 601.33 P
(is the block pointed at by) 198 589.33 T
0 9 Q
(DS) 316.55 589.33 T
0 10 Q
(.) 329.22 589.33 T
2 F
(See Also:) 99 570.33 T
0 F
(lhwalk, pobject) 180 570.33 T
81 553.99 531 559 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 553.99 531 559 R
7 X
0 0 0 1 0 0 0 K
V
50 557.99 609.01 557.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 545.99 T
2 F
(objwatch) 99 545.99 T
2 10 Q
(Usage:) 99 528.33 T
0 F
(objwatch [<address>]) 180 528.33 T
2 F
(Examples:) 99 508.33 T
0 F
(\322objwatch ds:si\323) 180 488.33 T
(watch the messages which reach the object at) 243 476.33 T
0 9 Q
(DS:SI) 456.17 476.33 T
0 10 Q
(\322objwatch MyObject\323) 180 457.33 T
(watch the messages which reach MyObject) 243 445.33 T
(\322objwatch\323) 180 426.33 T
(W) 243 414.33 T
(atch the messages which reach the process object.) 252.07 414.33 T
2 F
(Synopsis:) 99 395.33 T
0 F
(Display message calls that have reached a particular object.) 180 395.33 T
2 F
(Notes:) 99 375.33 T
1 F
(u) 180 355.33 T
0 F
(The <address> argument is the address of the object to watch.) 198 355.33 T
1 F
(u) 180 336.33 T
0 F
(This returns the token of the breakpoint being used to watch message) 198 336.33 T
-0.77 (deliveries to the object. Use the \322brk\323 command to enable, disable, or turn) 198 324.33 P
(off the watching of the object.) 198 312.33 T
2 F
(See Also:) 99 293.33 T
0 F
(brk, mwatch, objmessagebrk, procmessagebrk, pobject.) 180 293.33 T
81 276.98 531 281.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 276.98 531 281.99 R
7 X
0 0 0 1 0 0 0 K
V
50 280.98 609.01 280.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 268.98 T
2 F
(omfq) 99 268.98 T
2 10 Q
(Usage:) 99 251.32 T
0 F
(omfq <message> <object> <args>*) 180 251.32 T
2 F
(Examples:) 99 231.32 T
0 F
(\322omfq MSG_MET) 180 211.32 T
(A_QUIT *HelloApp\323) 260.75 211.32 T
( Sends) 243 199.32 T
0 9 Q
(MSG_MET) 276.34 199.32 T
(A_QUIT) 322.51 199.32 T
0 10 Q
( to the *) 357.51 199.32 T
3 F
(HelloApp) 394.74 199.32 T
0 F
( object.) 443.26 199.32 T
2 F
(Synopsis:) 99 180.32 T
0 F
(Forces a message for an object onto its event queue.) 180 180.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "175" 17
%%Page: "176" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(176) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(This command calls ObjMessage, passing it) 198 621.33 T
(di=mask) 198 609.33 T
0 9 Q
(MF_FORCE_QUEUE) 240.74 609.33 T
0 10 Q
(.) 331.41 609.33 T
1 F
(u) 180 590.33 T
0 F
(<args> is the set of additional parameters to pass to ObjMessage. It) 198 590.33 T
(consists of <variable/register> <value> pairs, which are passed to the) 198 578.33 T
(\322assign\323 command. As a special case, if the variable is \322push\323, the value) 198 566.33 T
(\050a word\051 is pushed onto the stack and is popped when the message has) 198 554.33 T
(been queued.) 198 542.33 T
1 F
(u) 180 523.33 T
0 F
-0.71 (The registers active before you issued this command are always restored,) 198 523.33 P
(regardless of whether the call to) 198 511.33 T
3 F
(ObjMessage) 349.49 511.33 T
0 F
(completes successfully) 414.2 511.33 T
(.) 516.6 511.33 T
(This is in contrast to the \322call\323 command, which leaves you where the) 198 499.33 T
(machine stopped with the previous state lost.) 198 487.33 T
2 F
(See Also:) 99 468.33 T
0 F
(call.) 180 468.33 T
81 451.99 531 457 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 451.99 531 457 R
7 X
0 0 0 1 0 0 0 K
V
50 455.99 609.01 455.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 443.99 T
2 F
(pappcache) 99 443.99 T
2 10 Q
(Usage:) 99 426.33 T
0 F
(pappcache) 180 426.33 T
2 F
(Examples:) 99 406.33 T
0 F
(\322pappcache\323) 180 386.33 T
(Print out current state of the app-cache) 243 386.33 T
2 F
(Synopsis:) 99 367.33 T
0 F
(Prints out the current state of the system application cache, for systems) 180 367.33 T
(operating in transparent launch mode.) 180 354.33 T
2 F
(Notes:) 99 334.33 T
0 F
(Speci\336cally) 180 334.33 T
(, this command prints out:) 231.3 334.33 T
1 F
(u) 180 314.33 T
0 F
(Applications in the cache \050First choice for detaching\051) 198 314.33 T
1 F
(u) 180 295.33 T
0 F
(T) 198 295.33 T
(op full-screen App \050Not detached except by another full screen app\051) 203.75 295.33 T
1 F
(u) 180 276.33 T
0 F
(Desk accessories \050detached only as last resort\051) 198 276.33 T
1 F
(u) 180 257.33 T
0 F
(Application geodes in the process of detaching) 198 257.33 T
81 241.98 531 246.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 241.98 531 246.99 R
7 X
0 0 0 1 0 0 0 K
V
50 245.98 609.01 245.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 233.98 T
2 F
(patch) 99 233.98 T
2 10 Q
(Usage:) 99 216.32 T
0 F
(patch [<addr>]) 180 216.32 T
(patch del <addr>*) 180 203.32 T
2 F
(Synopsis:) 99 183.32 T
0 F
(Patch assists in creating breakpoints that invisibly make small changes to) 180 183.32 T
-0.44 (code. This can help the programmer \336nd several bugs without remaking and) 180 170.32 P
(redownloading.) 180 157.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "176" 18
%%Page: "177" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(177) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.05 (If you give no <addr> when creating a patch, the patch will be placed at) 198 621.33 P
(the most-recently accessed address, as set by the command that) 198 609.33 T
(most-recently accessed memory \050e.g. bytes, words, listi, imem, etc.\051) 198 597.33 T
1 F
(u) 180 578.33 T
0 F
(When creating a patch, you are prompted for its contents, each line of) 198 578.33 T
(which comes from the following command set: \050see T) 198 566.33 T
(able) 439.43 566.33 T
(4-) 461.48 566.33 T
(2\051) 470.37 566.33 T
2 F
(T) 81 549.33 T
(able) 86.37 549.33 T
(4-) 109.16 549.33 T
(2) 118.05 549.33 T
4 F
(Patch Command Set) 126.39 549.33 T
81 528.02 531 533 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 528.02 531 533 R
7 X
0 0 0 1 0 0 0 K
V
53 530.98 656 530.98 2 L
V
0.5 H
2 Z
0 X
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Form) 81 536.33 T
(Meaning) 189 536.33 T
(Example) 297 536.33 T
0 F
(<reg> = <value>) 81 519.36 T
(assign value to reg) 189 519.36 T
(ax = bx) 297 519.36 T
(dl = 5) 369 519.36 T
(push <reg>|<value>) 81 505.36 T
(push value) 189 505.36 T
(push ax) 297 505.36 T
(push 45) 369 505.36 T
(pop <reg>|<value>) 81 491.36 T
(pop value) 189 491.36 T
(pop ax) 297 491.36 T
(pop 45) 369 491.36 T
(pop) 81 477.36 T
(pop nothing \050sp=sp+2\051) 189 477.36 T
(pop) 297 477.36 T
(jmp <address>) 81 463.36 T
(change ip) 189 463.36 T
(jmp UI_Attach+45) 297 463.36 T
(scall <address> <regs>) 81 449.36 T
(call routine \050save\051) 189 449.36 T
(scall MemLock ax = 3) 297 449.36 T
(mcall<address> <regs>) 81 435.36 T
(call routine \050modify\051) 189 435.36 T
(mcall MemLock ax = 3) 297 435.36 T
(xchg <reg> <reg>) 81 421.36 T
(swap two registers) 189 421.36 T
(xchg ax bx) 297 421.36 T
(set <flag>) 81 407.36 T
(set condition flag) 189 407.36 T
(set CF) 297 407.36 T
(set ZF) 369 407.36 T
(reset <flag>) 81 393.36 T
(reset condition flag) 189 393.36 T
(reset CF) 297 393.36 T
(reset ZF) 369 393.36 T
(if <flag>) 81 379.36 T
(if flag set then \311) 189 379.36 T
(if CF) 297 379.36 T
(if !<flag>) 81 365.36 T
(if flag reset then \311) 189 365.36 T
(if !ZF) 297 365.36 T
(if <expr>) 81 351.36 T
(if expr then \311) 189 351.36 T
(if foo == 4) 297 351.36 T
(else) 81 337.36 T
(endif) 81 323.36 T
(ret) 81 309.36 T
(make function return) 189 309.36 T
(ret) 297 309.36 T
($) 81 295.36 T
(terminate input) 189 295.36 T
(a) 81 281.36 T
(abort) 189 281.36 T
(<other>) 81 267.36 T
(tcl command) 189 267.36 T
(echo $foo) 297 267.36 T
4 F
(<\337ag> is taken from the set TF) 81 253.36 T
(, IF) 220.52 253.36 T
(, DF) 235.53 253.36 T
(, OF) 254.25 253.36 T
(, SF) 272.97 253.36 T
(, ZF) 290.58 253.36 T
(, PF) 308.19 253.36 T
(, AF) 325.8 253.36 T
(, CF and must be in upper-case.) 343.78 253.36 T
0 F
(The \322scall\323 command has no effect on the current registers \050not even for) 180 234.36 T
(purposes of return values\051, while the \322mcall\323 command changes whatever) 180 221.36 T
(registers the function called modi\336es. See the \322call\323 documentation for the) 180 208.36 T
(format of <regs>.) 180 195.36 T
81 179.02 531 184.03 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 179.02 531 184.03 R
7 X
0 0 0 1 0 0 0 K
V
50 183.02 609.01 183.02 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 171.02 T
2 F
(patchin) 99 171.02 T
0 10 Q
(Patchin undoes the work of patchout.) 180 153.35 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "177" 19
%%Page: "178" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(178) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(patchout) 99 634.99 T
0 10 Q
(This command causes a RET to be placed at the start of a routine.) 180 617.33 T
81 600.98 531 605.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 600.98 531 605.99 R
7 X
0 0 0 1 0 0 0 K
V
50 604.98 609.01 604.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 592.98 T
2 F
(patient) 99 592.98 T
0 F
(This is a T) 163.88 592.98 T
(cl primitive. See \322T) 221.6 592.98 T
(ool Command Language,\323 Chapter) 326.52 592.98 T
(5.) 520.99 592.98 T
81 578.97 531 583.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 578.97 531 583.98 R
7 X
0 0 0 1 0 0 0 K
V
50 582.97 609.01 582.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 570.97 T
2 F
(patient-default) 99 570.97 T
2 10 Q
(Usage:) 99 553.31 T
0 F
(patient-default [<geode-name>]) 180 553.31 T
2 F
(Examples:) 99 533.31 T
0 F
(\322patient-default hello2\323) 180 513.31 T
(Makes \322hello2\323 the default patient.) 243 501.31 T
(\322patient-default\323) 180 482.31 T
(Prints the names of the current default patient.) 243 470.31 T
2 F
(Synopsis:) 99 451.31 T
0 F
(Speci\336es the default patient. The) 180 451.31 T
3 F
(send) 335.95 451.31 T
0 F
( and) 360.21 451.31 T
3 F
(run) 383.18 451.31 T
0 F
( commands will use this as) 402.07 451.31 T
(the default patient to operate on if none is passed to them.) 180 438.31 T
81 421.97 531 426.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 421.97 531 426.98 R
7 X
0 0 0 1 0 0 0 K
V
50 425.97 609.01 425.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 413.97 T
2 F
(pbitmap) 99 413.97 T
2 10 Q
(Usage:) 99 396.3 T
0 F
(pbitmap <address>) 180 396.3 T
2 F
(Synopsis:) 99 376.3 T
0 F
(Print a bitmap graphically) 180 376.3 T
(.) 301.88 376.3 T
2 F
(Notes:) 99 356.3 T
1 F
(u) 180 336.3 T
0 F
(The address argument is the address of the Bitmap or CBitmap) 198 336.3 T
(structure.) 198 324.3 T
1 F
(u) 180 305.3 T
0 F
(Color bitmaps are printed with a letter representing the color as well.) 198 305.3 T
(The letters are index from the string \050kbgcrvnAaBGCR) 198 293.3 T
(VYW\051.) 452.26 293.3 T
81 277.96 531 282.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 277.96 531 282.97 R
7 X
0 0 0 1 0 0 0 K
V
50 281.96 609.01 281.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 269.96 T
2 F
(pbody) 99 269.96 T
2 10 Q
(Usage:) 99 252.29 T
0 F
(pbody [<address>]) 180 252.29 T
2 F
(Examples:) 99 232.29 T
0 F
(\322pbody\323) 180 212.29 T
(prints the GrObjBody given a GrObj block at) 243 212.29 T
0 9 Q
(DS) 452.66 212.29 T
0 10 Q
(.) 465.33 212.29 T
( \322pbody ^hbx\323) 180 193.29 T
-0.23 (Prints the GrObjBody given a GrObj block whose handle is) 243 181.29 P
0 9 Q
-0.21 (BX) 515.39 181.29 P
0 10 Q
-0.23 (.) 528.22 181.29 P
2 F
(Synopsis:) 99 162.29 T
0 F
(Finds the GrObjBody\321prints its) 180 162.29 T
0 9 Q
(OD) 333.9 162.29 T
0 10 Q
( and its instance data.) 347.9 162.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "178" 20
%%Page: "179" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(179) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
0 F
(If no arguments are given, then) 180 641.33 T
0 9 Q
(DS) 329.08 641.33 T
0 10 Q
( is assumed to point to an object block) 341.75 641.33 T
(containing GrObjects.) 180 628.33 T
81 611.99 531 617 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 611.99 531 617 R
7 X
0 0 0 1 0 0 0 K
V
50 615.99 609.01 615.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 603.99 T
2 F
(pcarray) 99 603.99 T
2 10 Q
(Usage:) 99 586.33 T
0 F
(pcarray [-eth] [<address>]) 180 586.33 T
2 F
(Examples:) 99 566.33 T
0 F
(\322pcarray\323) 180 546.33 T
(Print the chunk array at *) 243 546.33 T
0 9 Q
(DS:SI) 364.68 546.33 T
0 10 Q
( \050header only\051) 389.19 546.33 T
(\322pcarray es:di\323) 180 527.33 T
(Print the chunk array at) 243 515.33 T
0 9 Q
(ES:DI) 359.68 515.33 T
0 10 Q
( \050header only\051) 385.02 515.33 T
(\322pcarray -e\323) 180 496.33 T
(Print the chunk array at *) 243 496.33 T
0 9 Q
(DS:SI) 364.68 496.33 T
0 10 Q
( and print the elements in the) 389.19 496.33 T
(array) 243 484.33 T
(\322pcarray -tMyStruct\323) 180 465.33 T
-0.05 (Print the chunk array at *) 243 453.33 P
0 9 Q
-0.05 (DS:SI) 364.4 453.33 P
0 10 Q
-0.05 ( and print the elements where) 388.91 453.33 P
(the elements are of type MyStruct) 243 441.33 T
(\322pcarry -tMyStruct -TMyExtraStruct\323) 180 422.33 T
(Like above, but data after MyStruct is printed as an array of) 243 410.33 T
(MyExtraStruct structures.) 243 398.33 T
(\322pcarray -e3\323) 180 379.33 T
(Print the chunk array at *) 243 367.33 T
0 9 Q
(DS:SI) 364.68 367.33 T
0 10 Q
( and print the third element) 389.19 367.33 T
(\322pcarray -hMyHeader\323) 180 348.33 T
-0.74 (Print the chunk array at *) 243 336.33 P
0 9 Q
-0.67 (DS:SI) 360.96 336.33 P
0 10 Q
-0.74 ( \050header only\051 where the header) 385.47 336.33 P
(is of type MyHeader) 243 324.33 T
2 F
(Synopsis:) 99 305.33 T
0 F
(Print information about a chunk array) 180 305.33 T
(.) 357.43 305.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "179" 21
%%Page: "180" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(180) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.03 (The \337ags argument can be any combination of the \337ags \322e\323, \322t\323, and \322h\323.) 198 621.33 P
-0.29 (The \322e\323 \337ag prints all elements. If followed by a number \050e.g. \322-e3\323\051, then) 198 609.33 P
(only the third element will be printed.) 198 597.33 T
1 F
(u) 180 578.33 T
0 F
(The \324t\325 \337ag speci\336es the elements\325 type. It should be followed) 198 578.33 T
( immediately by the element type. Y) 198 566.33 T
(ou can also use \322-tgstring\323 if) 364.15 566.33 T
( the elements are GString Elements.) 198 554.33 T
1 F
(u) 180 535.33 T
0 F
-0.13 ( The \324h\325 \337ag speci\336es the header type. It should be followed immediately) 198 535.33 P
(by the element type.) 198 523.33 T
1 F
(u) 180 504.33 T
0 F
( The \324l\325 \337ag speci\336es how many elements to print. It can be used in) 198 504.33 T
(conjunction with the \324e\325 \337ag to print a range of element numbers.) 198 492.33 T
1 F
(u) 180 473.33 T
0 F
( The \324H\325 \337ag suppresses printing of the header) 198 473.33 T
(.) 410.42 473.33 T
1 F
(u) 180 454.33 T
0 F
( All \337ags are optional and may be combined.) 198 454.33 T
1 F
(u) 180 435.33 T
0 F
-0.14 (The address argument is the address of the chunk array) 198 435.33 P
-0.14 (. If not speci\336ed) 455.45 435.33 P
(then *ds:si is used.) 198 423.33 T
81 407.99 531 413 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 407.99 531 413 R
7 X
0 0 0 1 0 0 0 K
V
50 411.99 609.01 411.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 399.99 T
2 F
(pcbitmap) 99 399.99 T
2 10 Q
(Usage:) 99 382.33 T
0 F
(pcbitmap <address> <width> <height> [<no space \337ag>]) 180 382.33 T
2 F
(Examples:) 99 362.33 T
0 F
(\322pcbitmap *ds:si 64 64 t\323) 180 342.33 T
(print the bitmap without spaces) 243 330.33 T
2 F
(Synopsis:) 99 311.33 T
0 F
(Print out a one-bit deep packbits-compacted bitmap.) 180 311.33 T
2 F
(Notes:) 99 291.33 T
1 F
(u) 180 271.33 T
0 F
(The <address> argument is the address to the bitmap data.) 198 271.33 T
1 F
(u) 180 252.33 T
0 F
(The <width> argument is the width of the bitmap in pixels.) 198 252.33 T
1 F
(u) 180 233.33 T
0 F
(The <height> argument is the height of the bitmap in pixels.) 198 233.33 T
1 F
(u) 180 214.33 T
0 F
(The <no space \337ag> argument removes the space normally printed) 198 214.33 T
(between the pixels. Anything \050like \322t\323\051 will activate the \337ag.) 198 202.33 T
2 F
(See Also:) 99 183.33 T
0 F
(pncbitmap.) 180 183.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "180" 22
%%Page: "181" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(181) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pcelldata) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pcelldata [<addr>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pcelldata *es:di\323) 180 577.33 T
(Print cell data for cell at *es:di.) 243 565.33 T
2 F
(Synopsis:) 99 546.33 T
0 F
(Prints data for a spreadsheet data.) 180 546.33 T
2 F
(Notes:) 99 526.33 T
0 F
(If no address is given, *es:di is used.) 180 526.33 T
2 F
(See Also:) 99 506.33 T
0 F
(content, pcelldeps.) 180 506.33 T
81 489.98 531 494.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 489.98 531 494.99 R
7 X
0 0 0 1 0 0 0 K
V
50 493.98 609.01 493.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 481.98 T
2 F
(pcelldeps) 99 481.98 T
2 10 Q
(Usage:) 99 464.32 T
0 F
(pcelldeps <\336lehan> [<addr>]) 180 464.32 T
2 F
(Examples:) 99 444.32 T
0 F
(\322pcelldeps 4be0h *es:di\323) 180 424.32 T
( print dependencies of cell in \336le 4be0h.) 243 412.32 T
2 F
(Synopsis:) 99 393.32 T
0 F
(Prints dependencies for a cell in the spreadsheet.) 180 393.32 T
2 F
(Notes:) 99 373.32 T
0 F
(If no address is given, *es:di is used.) 180 373.32 T
2 F
(See Also:) 99 353.32 T
0 F
(content, pcelldata.) 180 353.32 T
81 336.98 531 341.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 336.98 531 341.98 R
7 X
0 0 0 1 0 0 0 K
V
50 340.98 609.01 340.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 328.98 T
2 F
(pclass) 99 328.98 T
2 10 Q
(Usage:) 99 311.31 T
0 F
(pclass [<address>]) 180 311.31 T
2 F
(Examples:) 99 291.31 T
0 F
(\322pclass\323) 180 271.31 T
(prints the class of *) 243 271.31 T
0 9 Q
(DS:SI) 332.82 271.31 T
0 10 Q
(\322pclass ^l4ac0h:001eh\323) 180 252.31 T
(Print the class of the object at the given address.) 243 240.31 T
2 F
(Synopsis:) 99 221.31 T
0 F
(Print the object\325) 180 221.31 T
(s class.) 253.34 221.31 T
2 F
(Notes:) 99 201.31 T
1 F
(u) 180 181.31 T
0 F
-0.07 (The <address> argument is the address of the object to \336nd the class of.) 198 181.31 P
(This defaults to *) 198 169.31 T
0 9 Q
(DS:SI) 278.2 169.31 T
0 10 Q
(.) 302.71 169.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "181" 23
%%Page: "182" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(182) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pdb) 99 634.99 T
0 10 Q
-0.4 (Produces useful information about a DBase block. For now) 180 617.33 P
-0.4 (, only information) 446.83 617.33 P
-0.62 (about the map block of the DBase \336le is produced. First arg) 180 604.33 P
0 9 Q
-0.55 (H) 450.06 604.33 P
0 10 Q
-0.62 ( is the) 457.56 604.33 P
0 9 Q
-0.55 (SIF_FILE) 486.83 604.33 P
0 10 Q
(or) 180 591.33 T
0 9 Q
(SIG_VM) 192.22 591.33 T
0 10 Q
( handle\325) 228.05 591.33 T
(s) 264.17 591.33 T
0 9 Q
(ID) 271.58 591.33 T
0 10 Q
(. Second arg) 282.24 591.33 T
0 9 Q
(B) 341.32 591.33 T
0 10 Q
( is the) 347.82 591.33 T
0 9 Q
(VM) 378.94 591.33 T
0 10 Q
( block handle for which) 393.94 591.33 T
(information is desired.) 180 578.33 T
81 561.98 531 566.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 561.98 531 566.99 R
7 X
0 0 0 1 0 0 0 K
V
50 565.98 609.01 565.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 553.98 T
2 F
(pdisk) 99 553.98 T
2 10 Q
(Usage:) 99 536.32 T
0 F
(pdisk <disk-handle>) 180 536.32 T
2 F
(Examples:) 99 516.32 T
0 F
(\322pdisk 00a2h\323) 180 496.32 T
(Prints information about the disk whose handle is 00a2h.) 243 484.32 T
2 F
(Synopsis:) 99 465.32 T
0 F
(Prints out information about a registered disk, given its handle.) 180 465.32 T
2 F
(Notes:) 99 445.32 T
0 F
(The Flags column is a string of single-character \337ags with the following) 180 445.32 T
(meanings:) 180 432.32 T
3 F
(w) 210.58 412.32 T
0 F
(The disk is writable.) 243 412.32 T
3 F
(V) 210.58 393.32 T
0 F
(The disk is always valid, i.e. it\325) 243 393.32 T
(s not removable.) 384.91 393.32 T
3 F
(S) 210.58 374.32 T
0 F
(The disk is stale. This is set if the drive for the disk has been) 243 374.32 T
(deleted.) 243 362.32 T
3 F
(u) 210.58 343.32 T
0 F
-0.27 (The disk is unnamed, so the system has made up a name for it.) 243 343.32 P
2 F
(See Also:) 99 324.32 T
0 F
(diskwalk, drivewalk.) 180 324.32 T
81 307.98 531 312.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 307.98 531 312.98 R
7 X
0 0 0 1 0 0 0 K
V
50 311.98 609.01 311.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 299.98 T
2 F
(pdrive) 99 299.98 T
2 10 Q
(Usage:) 99 282.31 T
0 F
(pdrive <drive-handle>) 180 282.31 T
(pdrive <drive-name>) 180 269.31 T
(pdrive <drive-number>) 180 256.31 T
2 F
(Examples:) 99 236.31 T
0 F
(\322pdrive si\323) 180 216.31 T
( Print a description of the drive whose handle is in SI) 243 216.31 T
(\322pdrive al\323) 180 197.31 T
( Print a description of the drive whose number is in AL) 243 197.31 T
(\322pdrive C\323) 180 178.31 T
(Print a description of drive C) 243 178.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "182" 24
%%Page: "183" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(183) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Provides the same information as \322drivewalk,\323 but for a single drive, given) 180 641.33 T
(the offset to its DriveStatusEntry structure in the FSInfoResource.) 180 628.33 T
2 F
(Notes:) 99 608.33 T
0 F
(This is intended for use by implementors of IFS drivers, as no one else is) 180 608.33 T
(likely to ever see a drive handle.) 180 595.33 T
2 F
(See Also:) 99 575.33 T
0 F
(drivewalk.) 180 575.33 T
81 558.99 531 564 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 558.99 531 564 R
7 X
0 0 0 1 0 0 0 K
V
50 562.99 609.01 562.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 550.99 T
2 F
(penum) 99 550.99 T
2 10 Q
(Usage:) 99 533.33 T
0 F
(penum <type> <value>) 180 533.33 T
2 F
(Examples:) 99 513.33 T
0 F
(\322penum FatalErrors 0\323) 180 493.33 T
(print the \336rst FatalErrors enumeration) 243 481.33 T
2 F
(Synopsis:) 99 462.33 T
0 F
(Print an enumeration constant given a numerical value.) 180 462.33 T
2 F
(Notes:) 99 442.33 T
1 F
(u) 180 422.33 T
0 F
(The <type> argument is the type of the enumeration.) 198 422.33 T
1 F
(u) 180 403.33 T
0 F
(The <value> argument is the value of the enumeration in a numerical) 198 403.33 T
(format.) 198 391.33 T
2 F
(See Also:) 99 372.33 T
0 F
(print, precord.) 180 372.33 T
81 355.98 531 360.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 355.98 531 360.99 R
7 X
0 0 0 1 0 0 0 K
V
50 359.98 609.01 359.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 347.98 T
2 F
(pevent) 99 347.98 T
2 10 Q
(Usage:) 99 330.32 T
0 F
(pevent <handle>) 180 330.32 T
2 F
(Examples:) 99 310.32 T
0 F
(\322pevent 39a0h\323) 180 290.32 T
(Print event with handle.) 243 278.32 T
2 F
(Synopsis:) 99 259.32 T
0 F
(Print an event given its handle.) 180 259.32 T
2 F
(See Also:) 99 239.32 T
0 F
(elist, eqlist, eq\336nd, er\336nd.) 180 239.32 T
81 222.98 531 227.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 222.98 531 227.98 R
7 X
0 0 0 1 0 0 0 K
V
50 226.98 609.01 226.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 214.97 T
2 F
(p\337ags) 99 214.97 T
2 10 Q
(Usage:) 99 197.31 T
0 F
(p\337ags) 180 197.31 T
2 F
(Synopsis:) 99 177.31 T
0 F
(Prints the current machine \337ags \050carry) 180 177.31 T
(, zero, etc.\051.) 359.62 177.31 T
2 F
(See Also:) 99 157.31 T
0 F
(setcc, getcc.) 180 157.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "183" 25
%%Page: "184" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(184) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pfont) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pfont [-c] [<address>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pfont\323) 180 577.33 T
(print bitmaps of the characters of the font in) 243 577.33 T
0 9 Q
(BX.) 451.53 577.33 T
0 10 Q
(\322pfont -c ^h1fd0h\323) 180 558.33 T
(list the characters in the font at ^h1fd0h.) 243 546.33 T
2 F
(Synopsis:) 99 527.33 T
0 F
(Print all the bitmaps of the characters in a font.) 180 527.33 T
2 F
(Notes:) 99 507.33 T
1 F
(u) 180 487.33 T
0 F
-0.36 (The \322-c\323 \337ag causes pfont to list which characters are in the font and any) 198 487.33 P
(special status \050i.e.) 198 475.33 T
0 9 Q
(NOT BUIL) 283.76 475.33 T
(T) 329.61 475.33 T
0 10 Q
(\051.) 335.61 475.33 T
1 F
(u) 180 456.33 T
0 F
(The <address> argument is the address of the font. If none is speci\336ed) 198 456.33 T
(then ^hbx is used.) 198 444.33 T
2 F
(See Also:) 99 425.33 T
0 F
(fonts, pusage, pfontinfo.) 180 425.33 T
81 408.98 531 413.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 408.98 531 413.99 R
7 X
0 0 0 1 0 0 0 K
V
50 412.98 609.01 412.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 400.98 T
2 F
(pfontinfo) 99 400.98 T
2 10 Q
(Usage:) 99 383.32 T
0 F
(pfontinfo <font ID>) 180 383.32 T
2 F
(Examples:) 99 363.32 T
0 F
(\322pfontinfo FID_BERKELEY\323) 180 363.32 T
2 F
(Synopsis:) 99 343.32 T
0 F
(Prints font header information for a font. Also lists all sizes built.) 180 343.32 T
2 F
(Notes:) 99 323.32 T
1 F
(u) 180 303.32 T
0 F
-0.25 (The <font) 198 303.32 P
0 9 Q
-0.23 (ID) 245.23 303.32 P
0 10 Q
-0.25 (> argument must be supplied. If not known, use \324fonts -u\325 to) 255.89 303.32 P
(list all the fonts with their) 198 291.32 T
0 9 Q
(ID) 322.84 291.32 T
0 10 Q
(s.) 333.51 291.32 T
2 F
(See Also:) 99 272.32 T
0 F
(fonts, pfont.) 180 272.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "184" 26
%%Page: "185" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(185) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pgen) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pgen <element> [<object>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pgen GI_states @65\323) 180 577.33 T
(print the states of object 65) 243 565.33 T
(\322pgen GI_visMoniker\323) 180 546.33 T
(print the moniker of the object at *) 243 534.33 T
0 9 Q
(DS:SI) 403.94 534.33 T
0 10 Q
(\322pgen GI_states -i\323) 180 515.33 T
(print the states of the object at the implied grab) 243 503.33 T
2 F
(Synopsis:) 99 484.33 T
0 F
(Print an element of the generic instance data.) 180 484.33 T
2 F
(Notes:) 99 464.33 T
1 F
(u) 180 444.33 T
0 F
(The <element> argument speci\336es which element in the object to print) 198 444.33 T
1 F
(u) 180 425.33 T
0 F
(The <object> argument is the address to the object to print out. It) 198 425.33 T
-0.4 (defaults to *) 198 413.33 P
0 9 Q
-0.36 (DS:SI) 254.06 413.33 P
0 10 Q
-0.4 ( and is optional. The \324-i\325 \337ag for an implied grab may be) 278.56 413.33 P
(used.) 198 401.33 T
2 F
(See Also:) 99 382.33 T
0 F
(gentree, gup, pobject, piv) 180 382.33 T
(, pvis.) 294.45 382.33 T
81 365.98 531 370.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 365.98 531 370.99 R
7 X
0 0 0 1 0 0 0 K
V
50 369.98 609.01 369.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 357.98 T
2 F
(pgs) 99 357.98 T
2 10 Q
(Usage:) 99 340.32 T
0 F
(pgs <address>) 180 340.32 T
2 F
(Examples:) 99 320.32 T
0 F
(\322pgs\323) 180 300.32 T
(List the graphics string at) 243 300.32 T
0 9 Q
(DS:SI) 366.72 300.32 T
0 10 Q
(\322pgs ^hdi\323) 180 281.32 T
(Lift the graphics string whose handle is in) 243 281.32 T
0 9 Q
(DI) 441.54 281.32 T
0 10 Q
(, starting at the) 452.2 281.32 T
(current position.) 243 269.32 T
(\322pgs -s ^hdi\323) 180 250.32 T
(List the graphics string whose handle is in) 243 250.32 T
0 9 Q
(DI) 442.84 250.32 T
0 10 Q
(, starting at the) 453.51 250.32 T
(beginning of the graphics string.) 243 238.32 T
(\322pgs -l3 ^hdi\323) 180 219.32 T
(List three elements of the graphics string whose handle is in) 243 207.32 T
0 9 Q
(DI) 243 195.32 T
0 10 Q
(, starting at the current position.) 253.66 195.32 T
2 F
(Synopsis:) 99 176.32 T
0 F
(List the contents of a graphics string.) 180 176.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "185" 27
%%Page: "186" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(186) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <address> argument is the address of a graphics string. If none is) 198 621.33 T
(speci\336ed then) 198 609.33 T
0 9 Q
(DS:SI) 264.48 609.33 T
0 10 Q
( is used as a pointer to a graphics string.) 288.99 609.33 T
1 F
(u) 180 590.33 T
0 F
-0.16 (The passed address may also be the base of a gstate \050e.g. \322^hdi\323\051. In this) 198 590.33 P
(case, the gstring that is associated with the gstate will be printed.) 198 578.33 T
1 F
(u) 180 559.33 T
0 F
-0.53 (The -s option can be used to specify that the gstring should be listed from) 198 559.33 P
-0.26 (the beginning of the string. By default, gstrings will be listed starting at) 198 547.33 P
(the current position.) 198 535.33 T
1 F
(u) 180 516.33 T
0 F
(The -g option can be used to specify that the passed address is the) 198 516.33 T
-0.71 (address of a GrObj \050GStringClass\051 object\321 the gstring for that object will) 198 504.33 P
(be listed.) 198 492.33 T
2 F
(See Also:) 99 473.33 T
0 F
(pbitmap.) 180 473.33 T
81 456.99 531 462 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 456.99 531 462 R
7 X
0 0 0 1 0 0 0 K
V
50 460.99 609.01 460.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 448.99 T
2 F
(phandle) 99 448.99 T
2 10 Q
(Usage:) 99 431.33 T
0 F
(phandle <handle ID>) 180 431.33 T
2 F
(Examples:) 99 411.33 T
0 F
(\322phandle 1a8ch\323) 180 391.33 T
(print the handle 1a8ch) 243 379.33 T
2 F
(Synopsis:) 99 360.33 T
0 F
(Print out a handle.) 180 360.33 T
2 F
(Notes:) 99 340.33 T
1 F
(u) 180 320.33 T
0 F
-0.84 (The <handle) 198 320.33 P
0 9 Q
-0.75 (ID>) 257.39 320.33 P
0 10 Q
-0.84 ( argument is just the handle number) 273.51 320.33 P
-0.84 (. Make sure that the) 437.95 320.33 P
(proper radix is used.) 198 308.33 T
1 F
(u) 180 289.33 T
0 F
(The size is in paragraphs.) 198 289.33 T
2 F
(See Also:) 99 270.33 T
0 F
(hwalk, lhwalk.) 180 270.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "186" 28
%%Page: "187" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(187) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pharray) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pharray [<\337ags>] [<vm\336le> <dirblk>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pharray\323) 180 577.33 T
(Print the huge array at ^vbx:di \050header only\051) 243 577.33 T
(\322pharray dx cx\323) 180 558.33 T
(Print the huge array at ^vdx:cx \050header only\051) 243 546.33 T
(\322pharray -e\323) 180 527.33 T
(Print the huge array at ^vbx:di and print the elements in the) 243 527.33 T
(array) 243 515.33 T
(\322pharray -tMyStruct\323) 180 496.33 T
(Print the huge array at ^vbx:di and print the elements where) 243 484.33 T
(the elements are of type MyStruct) 243 472.33 T
(\322pharray -e3\323) 180 453.33 T
(Print the huge array at ^vbx:di and print the third element) 243 441.33 T
(\322pharray -h\323) 180 422.33 T
-0.75 (Print the header of the HugeArray at ^vbx:di, using the default) 243 422.33 P
(header type \050HugeArrayDirectory\051.) 243 410.33 T
(\322pharray -hMyHeader\323) 180 391.33 T
-0.6 (Print the huge array at ^vbx:di \050header only\051 where the header) 243 379.33 P
(is of type MyHeader) 243 367.33 T
(\322pharray -d\323) 180 348.33 T
(Print the directory elements of a HugeArray) 243 348.33 T
(\322pharray -e5 -l8\323) 180 329.33 T
(Print 8 HugeArray elements starting with number 5) 243 317.33 T
2 F
(Synopsis:) 99 298.33 T
0 F
(Print information about a huge array) 180 298.33 T
(.) 351.32 298.33 T
2 F
(Notes:) 99 278.33 T
1 F
(u) 180 258.33 T
0 F
-0.66 (The \337ags argument can be any combination of the \337ags \324e\325, \324t\325, and \324h\325. The) 198 258.33 P
(\324e\325 \337ag prints all elements. If followed by a number \322-e3\323, then only the) 198 246.33 T
(third element is printed.) 198 234.33 T
-0.71 (The \324t\325 \337ag speci\336es the elements\325 type. It should be followed immediately) 198 215.33 P
(by the element type. Y) 198 203.33 T
(ou can also use \322gstring\323, in which case the) 300.8 203.33 T
(elements will be interpreted as GString Elements.) 198 191.33 T
(The \324h\325 \337ag speci\336es the header type. It should be followed immediately) 198 172.33 T
(by the element type. If no options are speci\336ed, then) 198 160.33 T
-0.05 (\322-hHugeArrayDirectory\323 is used. If any other options are speci\336ed, then) 198 148.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "187" 29
%%Page: "188" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(188) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(the printing of the header is disabled. So, for example, if you want both) 198 641.33 T
(the header and the third element, use \322-h -e3\323.) 198 629.33 T
(The \324d\325 \337ag speci\336es that the HugeArray directory entries should be) 198 610.33 T
(printed out.) 198 598.33 T
(The \324l\325 \337ag speci\336ed how many elements to print.) 198 579.33 T
(The \324s\325 \337ag requests that a summary table be printed.) 198 560.33 T
(All \337ags are optional and may be combined.) 198 541.33 T
1 F
(u) 180 522.33 T
0 F
-0.06 (The address arguments are the) 198 522.33 P
0 9 Q
-0.05 (VM) 345.14 522.33 P
0 10 Q
-0.06 ( \336le handle and the) 360.13 522.33 P
0 9 Q
-0.05 (VM) 452.09 522.33 P
0 10 Q
-0.06 ( block handle) 467.08 522.33 P
(for the directory block. If nothing is speci\336ed, then bx:di is used) 198 510.33 T
81 494.99 531 500 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 494.99 531 500 R
7 X
0 0 0 1 0 0 0 K
V
50 498.99 609.01 498.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 486.99 T
2 F
(pini) 99 486.99 T
2 10 Q
(Usage:) 99 469.33 T
0 F
(pini [<category>]) 180 469.33 T
2 F
(Examples:) 99 449.33 T
0 F
(\322pini Lights Out\323) 180 429.33 T
(Print out the contents of the Lights Out category in each .ini) 243 417.33 T
(\336le) 243 405.33 T
( \322pini\323) 180 386.33 T
(Print out each currently loaded .ini \336le.) 243 386.33 T
2 F
(Synopsis:) 99 367.33 T
0 F
(Provides you with the contents of the .ini \336les being used by the current) 180 367.33 T
0 9 Q
(GEOS) 180 354.33 T
0 10 Q
( session.) 206.17 354.33 T
2 F
(Notes:) 99 334.33 T
0 F
(<category> may contain spaces and other such fun things. In fact, if you) 180 334.33 T
-0.58 (attempt to quote the argument \050e.g. \322pini {Lights Out}\323\051, this will not \336nd the) 180 321.33 P
(category) 180 308.33 T
(.) 217.96 308.33 T
81 291.98 531 296.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 291.98 531 296.99 R
7 X
0 0 0 1 0 0 0 K
V
50 295.98 609.01 295.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 283.98 T
2 F
(pinst) 99 283.98 T
2 10 Q
(Usage:) 99 266.32 T
0 F
(pinst [<address>]) 180 266.32 T
2 F
(Examples:) 99 246.32 T
0 F
(\322pinst\323) 180 226.32 T
(print the last master level of instance data of the object at) 243 226.32 T
(*) 243 214.32 T
0 9 Q
(DS:SI) 248 214.32 T
0 10 Q
(\322pinst *MyObject\323) 180 195.32 T
(print the last master level of instance data of MyObject.) 243 183.32 T
(\322pinst -i\323) 180 164.32 T
-0.46 (print the last master level of the windowed object at the mouse) 243 164.32 P
(pointer) 243 152.32 T
(.) 275.59 152.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "188" 30
%%Page: "189" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(189) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Print out all the instance data to the last level of the object.) 180 641.33 T
2 F
(Notes:) 99 621.33 T
1 F
(u) 180 601.33 T
0 F
(The <address> argument is the address of the object to examine. If not) 198 601.33 T
(speci\336ed then pinst will use a default address. If you are debugging a) 198 589.33 T
0 9 Q
(C) 520.63 589.33 T
0 10 Q
-0.05 (method, then the oself value will be used. Otherwise, *) 198 577.33 P
0 9 Q
-0.05 (DS:SI) 449.97 577.33 P
0 10 Q
-0.05 ( is assumed) 474.48 577.33 P
(to be an object.) 198 565.33 T
1 F
(u) 180 546.33 T
0 F
(This command is useful for classes you\325ve created and you are not) 198 546.33 T
(interested in the data in the master levels which pobject would display) 198 534.33 T
(.) 523.6 534.33 T
1 F
(u) 180 515.33 T
0 F
(The following special values are accepted for <address>:) 198 515.33 T
3 F
(-a) 210.58 496.33 T
0 F
(the current patient\325) 243 496.33 T
(s application object) 333 496.33 T
3 F
(-i) 210.58 477.33 T
0 F
-0.61 (the current \322implied grab\323: the windowed object over which the) 243 477.33 P
(mouse is currently located.) 243 465.33 T
3 F
(-f) 210.58 446.33 T
0 F
(the leaf of the keyboard-focus hierarchy) 243 446.33 T
3 F
(-t) 210.58 427.33 T
0 F
(the leaf of the target hierarchy) 243 427.33 T
3 F
(-m) 210.58 408.33 T
0 F
(the leaf of the model hierarchy) 243 408.33 T
3 F
(-c) 210.58 389.33 T
0 F
(the content for the view over which the mouse is currently) 243 389.33 T
(located) 243 377.33 T
3 F
(-kg) 210.58 358.33 T
0 F
(the leaf of the keyboard-grab hierarchy) 243 358.33 T
3 F
(-mg) 210.58 339.33 T
0 F
( the leaf of the mouse-grab hierarchy) 243 339.33 T
1 F
(u) 180 320.33 T
3 F
(pinst) 198 320.33 T
0 F
( prints out the same information as \322pobj l\323.) 224.48 320.33 T
2 F
(See Also:) 99 301.33 T
0 F
(pobject, piv) 180 301.33 T
(.) 231.3 301.33 T
81 284.99 531 290 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 284.99 531 290 R
7 X
0 0 0 1 0 0 0 K
V
50 288.99 609.01 288.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 276.99 T
2 F
(piv) 99 276.99 T
2 10 Q
(Usage:) 99 259.33 T
0 F
(piv <master> <iv> [<address>]) 180 259.33 T
2 F
(Examples:) 99 239.33 T
0 F
(\322piv V) 180 219.33 T
(is VCNI_viewHeight\323) 207.71 219.33 T
(print V) 243 207.33 T
(is.VCNI_viewHeight at *) 275.89 207.33 T
0 9 Q
(DS:SI) 391.27 207.33 T
2 10 Q
(Synopsis:) 99 188.33 T
0 F
(This prints out the value of the instance variable speci\336ed.) 180 188.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "189" 31
%%Page: "190" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(190) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <master> argument expects the name of a master level. The name) 198 621.33 T
-0.5 (may be found using) 198 609.33 P
3 F
-0.52 (pobject) 289.15 609.33 P
0 F
-0.5 ( to print the levels, and then using the name) 327.49 609.33 P
(that appears after \322master part:\323 and before the \322_offset\323.) 198 597.33 T
1 F
(u) 180 578.33 T
0 F
(The <iv> argument expects the name of the instance variable to print.) 198 578.33 T
1 F
(u) 180 559.33 T
0 F
(The <address> argument is the address of the object to examine. If not) 198 559.33 T
(speci\336ed then *) 198 547.33 T
0 9 Q
(DS:SI) 269.48 547.33 T
0 10 Q
( assumed to be an object.) 293.99 547.33 T
1 F
(u) 180 528.33 T
0 F
(This command is useful for when you know what instance variable you) 198 528.33 T
(want to see but don\325) 198 516.33 T
(t want to wade through a whole pobject command.) 290.25 516.33 T
2 F
(See Also:) 99 497.33 T
0 F
(pobject, pinst.) 180 497.33 T
2 F
(Synopsis:) 99 477.33 T
0 F
(Prints a keyboard map in assembly-language format.) 180 477.33 T
81 460.99 531 466 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 460.99 531 466 R
7 X
0 0 0 1 0 0 0 K
V
50 464.99 609.01 464.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 452.99 T
2 F
(plines) 99 452.99 T
2 10 Q
(Usage:) 99 435.33 T
0 F
(plines <start> [<obj-address>]) 180 435.33 T
2 F
(Examples:) 99 415.33 T
0 F
(\322plines 12\323) 180 395.33 T
(Print lines starting at line 12.) 243 395.33 T
(\322plines 12 ^l6340h:0020h\323) 180 376.33 T
(Print lines starting at line 12 of object at given address.) 243 364.33 T
2 F
(Synopsis:) 99 345.33 T
0 F
(Print information about the lines in a text object.) 180 345.33 T
2 F
(Notes:) 99 325.33 T
0 F
(The printed line-starts are) 180 325.33 T
4 F
(not) 305.75 325.33 T
0 F
( correct.) 320.38 325.33 T
2 F
(See Also:) 99 305.33 T
0 F
(ptext.) 180 305.33 T
81 288.98 531 293.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 288.98 531 293.99 R
7 X
0 0 0 1 0 0 0 K
V
50 292.98 609.01 292.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 280.98 T
2 F
(plist) 99 280.98 T
0 10 Q
(Prints out a list of structures stored in an lmem chunk. It takes two) 180 263.32 T
(arguments, the structure type that makes up the list, and the lmem handle) 180 250.32 T
(of the chunk. e.g. plist FontsInUseEntry ds:di) 180 237.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "190" 32
%%Page: "191" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(191) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pncbitmap) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pncbitmap <address> <width> <height> [<no space \337ag>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pncbitmap *ds:si 64 64 t\323) 180 577.33 T
(print the bitmap without spaces) 243 565.33 T
2 F
(Synopsis:) 99 546.33 T
0 F
(Print out a one-bitdeep noncompacted bitmap.) 180 546.33 T
2 F
(Notes:) 99 526.33 T
1 F
(u) 180 506.33 T
0 F
(The <address> argument is the address to the bitmap data.) 198 506.33 T
1 F
(u) 180 487.33 T
0 F
(The <width> argument is the width of the bitmap in pixels.) 198 487.33 T
1 F
(u) 180 468.33 T
0 F
(The <height> argument is the height of the bitmap in pixels.) 198 468.33 T
1 F
(u) 180 449.33 T
0 F
(The <no space \337ag> argument removes the space normally printed) 198 449.33 T
(between the pixels. Anything \050like \324t\325\051 will activate the \337ag.) 198 437.33 T
2 F
(See Also:) 99 418.33 T
0 F
(pcbitmap.) 180 418.33 T
81 401.98 531 406.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 401.98 531 406.99 R
7 X
0 0 0 1 0 0 0 K
V
50 405.98 609.01 405.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 393.98 T
2 F
(pnormal) 99 393.98 T
2 10 Q
(Usage:) 99 376.32 T
0 F
(pnormal [-v]) 180 376.32 T
2 F
(Examples:) 99 356.32 T
0 F
(\322pnormal -v\323) 180 336.32 T
(Print out verbose information about the current normal) 243 324.32 T
(transfer item.) 243 312.32 T
2 F
(Synopsis:) 99 293.32 T
0 F
(Prints out information about the current \322normal\323 transfer item on the) 180 293.32 T
(clipboard.) 180 280.32 T
2 F
(Notes:) 99 260.32 T
0 F
(If you give the \322-v\323 \337ag, this will print out the contents of the different) 180 260.32 T
(transfer formats, rather than just an indication of their types.) 180 247.32 T
2 F
(See Also:) 99 227.32 T
0 F
(pquick, print-clipboard-item.) 180 227.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "191" 33
%%Page: "192" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(192) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pobjarray) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pobjarray [<address>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pobjarray\323) 180 577.33 T
(Print the array of) 243 577.33 T
0 9 Q
(OD) 327.08 577.33 T
0 10 Q
(s at *ds:si.) 341.08 577.33 T
2 F
(Synopsis:) 99 558.33 T
0 F
(Print out an array of objects.) 180 558.33 T
2 F
(See Also:) 99 538.33 T
0 F
(pbody) 180 538.33 T
(.) 206.3 538.33 T
81 521.98 531 526.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 521.98 531 526.99 R
7 X
0 0 0 1 0 0 0 K
V
50 525.98 609.01 525.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 513.98 T
2 F
(pobject) 99 513.98 T
2 10 Q
(Usage:) 99 496.32 T
0 F
(pobject [<address>] [<detail>]) 180 496.32 T
2 F
(Examples:) 99 476.32 T
0 F
(\322pobj\323) 180 456.32 T
(print the object at *ds:si from Gen down if Gen is one of its) 243 456.32 T
(master levels; else, print all levels) 243 444.32 T
(\322pobj *MyGenObject\323) 180 425.32 T
(print MyGenObject from Gen down) 243 413.32 T
(\322pobj Gen\323) 180 394.32 T
(print the Gen level for the object at *ds:si) 243 394.32 T
(\322pobj last\323) 180 375.32 T
( print the last master level for the object at *ds:si) 243 375.32 T
(\322pobj *MyObject\323) 180 356.32 T
( all print all levels of MyObject) 243 344.32 T
(\322pobj -i sketch\323) 180 325.32 T
(print the master level headings of the windowed object at the) 243 313.32 T
(mouse pointer) 243 301.32 T
(\322pobj *MyObject FI_foo\323) 180 282.32 T
( print the FI_foo instance variable for MyObject) 243 270.32 T
(\322pobj) 180 251.32 T
0 9 Q
(HINT_FOO) 205.93 251.32 T
0 10 Q
(\323) 254.93 251.32 T
-0.59 (print the HINT_FOO variable data entry for the object at *ds:si) 243 239.32 P
(\322pobj v\323) 180 220.32 T
(print the variable data for the object at *ds:si) 243 220.32 T
2 F
(Synopsis:) 99 201.32 T
0 F
(Print all or part of an object\325) 180 201.32 T
(s instance and variable data.) 310.39 201.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "192" 34
%%Page: "193" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(193) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <address> argument is the address of the object to examine. If not) 198 621.33 T
(speci\336ed then oself is used, unless the current function is written in) 198 609.33 T
(assembly) 198 597.33 T
(, in which case *) 239.68 597.33 T
0 9 Q
(DS) 315.06 597.33 T
0 10 Q
(:) 327.73 597.33 T
0 9 Q
(SI) 330.51 597.33 T
0 10 Q
( .) 339.85 597.33 T
1 F
(u) 180 578.33 T
0 F
(The following \337ag values are accepted in lieu of an address:) 198 578.33 T
3 F
(-a) 210.58 559.33 T
0 F
(the current patient\325) 243 559.33 T
(s application object) 333 559.33 T
3 F
(-i) 210.58 540.33 T
0 F
-0.61 (the current \322implied grab\323: the windowed object over which the) 243 540.33 P
(mouse is currently located.) 243 528.33 T
3 F
(-f) 210.58 509.33 T
0 F
(the leaf of the keyboard-focus hierarchy) 243 509.33 T
3 F
(-t) 210.58 490.33 T
0 F
(the leaf of the target hierarchy) 243 490.33 T
3 F
(-m) 210.58 471.33 T
0 F
(the leaf of the model hierarchy) 243 471.33 T
3 F
(-c) 210.58 452.33 T
0 F
(the content for the view over which the mouse is currently) 243 452.33 T
(located) 243 440.33 T
3 F
(-kg) 210.58 421.33 T
0 F
(the leaf of the keyboard-grab hierarchy) 243 421.33 T
3 F
(-mg) 210.58 402.33 T
0 F
( the leaf of the mouse-grab hierarchy) 243 402.33 T
1 F
(u) 180 383.33 T
0 F
(The) 198 383.33 T
4 F
(detail) 218.56 383.33 T
0 F
( argument speci\336es what information should be printed out) 245.03 383.33 T
-0.22 (about the object. If none is speci\336ed, all levels of the object from the Gen) 198 371.33 P
-0.31 (level down will be printed if Gen is one of the object\325) 198 359.33 P
-0.31 (s master levels; else,) 434.44 359.33 P
(the whole object will be printed.) 198 347.33 T
1 F
(u) 180 328.33 T
0 F
(The following values are accepted for) 198 328.33 T
4 F
(detail) 371.9 328.33 T
0 F
(:) 398.37 328.33 T
3 F
(all) 210.58 309.33 T
0 F
( \050or) 223.73 309.33 T
3 F
(a) 242.06 309.33 T
0 F
(\051) 248.17 309.33 T
(all master levels) 243 297.33 T
3 F
(last) 210.58 278.33 T
0 F
( \050or) 229.47 278.33 T
3 F
(l) 247.8 278.33 T
0 F
(\051) 251.32 278.33 T
(last master level only) 243 266.33 T
3 F
(sketch) 210.58 247.33 T
0 F
( \050or) 244.66 247.33 T
3 F
(s) 262.99 247.33 T
0 F
(\051) 267.99 247.33 T
(master level headings only) 243 235.33 T
3 F
(vardata) 210.58 216.33 T
0 F
( \050or) 251.14 216.33 T
3 F
(v) 269.47 216.33 T
0 F
(\051) 275.58 216.33 T
(vardata only) 243 204.33 T
(a master level name) 210.58 185.33 T
(an instance variable name) 210.58 166.33 T
(a variable data entry name) 210.58 147.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "193" 35
%%Page: "194" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(194) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(pinst, piv) 180 641.33 T
(, pvardata.) 222.23 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(pobjmon) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(pobjmon [<address>] [<text only>]) 180 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322pobjmon\323) 180 559.33 T
(print the V) 243 559.33 T
(isMoniker from the gentree object at *) 293.67 559.33 T
0 9 Q
(DS:SI) 469.97 559.33 T
2 10 Q
(Notes:) 99 540.33 T
1 F
(u) 180 520.33 T
0 F
(The <address> argument is the address of an object with a V) 198 520.33 T
(isMoniker) 478.23 520.33 T
(.) 524.34 520.33 T
(If none is speci\336ed then *) 198 508.33 T
0 9 Q
(DS:SI) 315.22 508.33 T
0 10 Q
( is used.) 339.73 508.33 T
1 F
(u) 180 489.33 T
0 F
(The <text only> argument returns a shortened description of the) 198 489.33 T
-0.32 (structure. T) 198 477.33 P
-0.32 (o set it use something other than \3240\325 for the second argument.) 251.94 477.33 P
1 F
(u) 180 458.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 458.33 P
(\337ags, see pobject.) 198 446.33 T
2 F
(See Also:) 99 427.33 T
0 F
(pvismon, pobject, vistree, gup, gentree, impliedgrab, systemobj.) 180 427.33 T
81 410.98 531 415.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 410.98 531 415.99 R
7 X
0 0 0 1 0 0 0 K
V
50 414.98 609.01 414.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 402.98 T
2 F
(pod) 99 402.98 T
2 10 Q
(Usage:) 99 385.32 T
0 F
(pod <address>) 180 385.32 T
2 F
(Examples:) 99 365.32 T
0 F
(\322pod ds:si\323) 180 345.32 T
2 F
(Synopsis:) 99 326.32 T
0 F
-0.14 (Print in output descriptor format \050^l<handle>:<chunk>\051 the address passed.) 180 326.32 P
2 F
(Notes:) 99 306.32 T
0 F
(The address argument is the address of an object.) 180 306.32 T
81 289.98 531 294.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 289.98 531 294.98 R
7 X
0 0 0 1 0 0 0 K
V
50 293.98 609.01 293.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 281.98 T
2 F
(ppath) 99 281.98 T
2 10 Q
(Usage:) 99 264.31 T
0 F
(ppath \050current|docClip|winClip\051 [<gstate>]) 180 264.31 T
2 F
(Examples:) 99 244.31 T
0 F
(\322ppath\323) 180 224.31 T
(print the current path of the GState in ^hdi) 243 224.31 T
( \322ppath docClip ^hgstate\323) 180 205.31 T
-0.19 ( print the document clip path of the GState with handle) 243 193.31 P
4 F
-0.19 (gstate) 501.19 193.31 P
0 F
-0.19 (.) 528.22 193.31 P
( \322ppath winClip ds\323) 180 174.31 T
(print the window clip path of the GState in the) 243 162.31 T
0 9 Q
(DS) 462.48 162.31 T
0 10 Q
( register) 475.15 162.31 T
(.) 513.11 162.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "194" 36
%%Page: "195" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(195) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Print the structure of a path.) 180 641.33 T
2 F
(Notes:) 99 621.33 T
0 F
(Unique abbreviations for the path to be printed are allowed.) 180 621.33 T
81 604.99 531 610 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 604.99 531 610 R
7 X
0 0 0 1 0 0 0 K
V
50 608.99 609.01 608.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 596.99 T
2 F
(pquick) 99 596.99 T
2 10 Q
(Usage:) 99 579.33 T
0 F
(pquick [-v]) 180 579.33 T
2 F
(Examples:) 99 559.33 T
0 F
(\322pquick -v\323) 180 539.33 T
-0.45 (Print out verbose information about the current quick transfer) 243 539.33 P
(item.) 243 527.33 T
2 F
(Synopsis:) 99 508.33 T
0 F
(Prints out information about the current \322quick\323 transfer item on the) 180 508.33 T
(clipboard.) 180 495.33 T
2 F
(Notes:) 99 475.33 T
0 F
(If you give the \322-v\323 \337ag, this will print out the contents of the different) 180 475.33 T
(transfer formats, rather than just an indication of their types.) 180 462.33 T
2 F
(See Also:) 99 442.33 T
0 F
(pnormal, print-clipboard-item.) 180 442.33 T
81 425.98 531 430.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 425.98 531 430.99 R
7 X
0 0 0 1 0 0 0 K
V
50 429.98 609.01 429.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 417.98 T
2 F
(precord) 99 417.98 T
2 10 Q
(Usage:) 99 400.32 T
0 F
(precord <type> <value> [<silent>]) 180 400.32 T
2 F
(Examples:) 99 380.32 T
0 F
(\322precord GSControl c0h\323) 180 360.32 T
(print the) 243 348.32 T
3 F
(GSControl) 286.89 348.32 T
0 F
( record with the top two bits set) 341.71 348.32 T
2 F
(Synopsis:) 99 329.32 T
0 F
(Print a record using a certain value.) 180 329.32 T
2 F
(Notes:) 99 309.32 T
1 F
(u) 180 289.32 T
0 F
(The <type> argument is the type of the record.) 198 289.32 T
1 F
(u) 180 270.32 T
0 F
(The <value> argument is the value of the record.) 198 270.32 T
1 F
(u) 180 251.32 T
0 F
-0.07 (The <silent> argument will suppress the text indicating the record type) 198 251.32 P
-0.42 (and value. This is done by passing a non zero value like \3241\325. This is useful) 198 239.32 P
(when precord is used by other functions.) 198 227.32 T
2 F
(See Also:) 99 208.32 T
0 F
(print, penum.) 180 208.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "195" 37
%%Page: "196" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(196) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(preg) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(preg [-g] <addr>) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
( \322preg *es:W_appReg\323) 180 577.33 T
(Prints the application-de\336ned clipping region for the window) 243 565.33 T
(pointed to by es.) 243 553.33 T
( \322preg -g ds:si\323) 180 534.33 T
(Prints a \322graphical\323 representation of the region beginning at) 243 522.33 T
(ds:si) 243 510.33 T
2 F
(Synopsis:) 99 491.33 T
0 F
-0.41 (Decodes a graphics) 180 491.33 P
0 9 Q
-0.37 (GEOS) 269.7 491.33 P
0 10 Q
-0.41 ( region and prints it out, either numerically) 295.87 491.33 P
-0.41 (, or as a) 493.56 491.33 P
(series of x\325) 180 478.33 T
(s and spaces.) 227.78 478.33 T
2 F
(Notes:) 99 458.33 T
1 F
(u) 180 438.33 T
0 F
(This command can deal with parameterized regions. When printing a) 198 438.33 T
(parameterized region with the -g \337ag, the region is printed as if it were) 198 426.33 T
(unparameterized, with the offsets from the various) 198 414.33 T
0 9 Q
(P) 436.34 414.33 T
(ARAM) 441.68 414.33 T
0 10 Q
( constants) 469.67 414.33 T
(used as the coordinates.) 198 402.33 T
1 F
(u) 180 383.33 T
0 F
(If no address is given, this will use the last-accessed address \050as the) 198 383.33 T
-0.1 (\322bytes\323 and \322words\323 commands do\051. It sets the last-accessed address, for) 198 371.33 P
(other commands to use, to the \336rst byte after the region de\336nition.) 198 359.33 T
81 343.98 531 348.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 343.98 531 348.99 R
7 X
0 0 0 1 0 0 0 K
V
50 347.98 609.01 347.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 335.98 T
2 F
(print) 99 335.98 T
2 10 Q
(Usage:) 99 318.32 T
0 F
(print <expression>) 180 318.32 T
2 F
(Examples:) 99 298.32 T
0 F
(\322print 56h\323) 180 278.32 T
(print the constant 56h in various formats) 243 278.32 T
(\322print ax - 10\323) 180 259.32 T
(print ax less 10 decimal) 243 247.32 T
(\322print ^l31a0h:001eh\323) 180 228.32 T
(print the absolute address of the pointer) 243 216.32 T
2 F
(Synopsis:) 99 197.32 T
0 F
(Print the value of an expression.) 180 197.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "196" 38
%%Page: "197" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(197) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.54 (The <expression> argument is usually an address that has a type or that) 198 621.33 P
(is given a type by casting and may span multiple arguments. The) 198 609.33 T
-0.4 (contents of memory of the given type at that address is what\325) 198 597.33 P
-0.4 (s printed. If) 474.97 597.33 P
(the expression has no type, its offset part is printed in both hex and) 198 585.33 T
(decimal. This is used for printing registers, for example.) 198 573.33 T
1 F
(u) 180 554.33 T
0 F
-0.03 (The \336rst argument may contain the following \337ags \050which start with \324-\325\051:) 198 554.33 P
3 F
(x) 180 535.33 T
0 F
(integers \050bytes, words, dwords if dwordIsPtr false\051 printed in) 243 535.33 T
(hex) 243 523.33 T
3 F
(d) 180 504.33 T
0 F
(integers printed in decimal) 243 504.33 T
3 F
(o) 180 485.33 T
0 F
(integers printed in octal c bytes printed as characters \050byte) 243 485.33 T
(arrays printed as strings, byte variables/\336elds printed as) 243 473.33 T
(character followed by integer equivalent\051) 243 461.33 T
3 F
(C) 180 442.33 T
0 F
(bytes treated as integers) 243 442.33 T
3 F
(a) 180 423.33 T
0 F
(align structure \336elds) 243 423.33 T
3 F
(A) 180 404.33 T
0 F
(Don\325) 243 404.33 T
(t align structure \336elds) 263.75 404.33 T
3 F
(p) 180 385.33 T
0 F
(dwords are far pointers) 243 385.33 T
3 F
(P) 180 366.33 T
0 F
(dwords aren\325) 243 366.33 T
(t far pointers) 302.08 366.33 T
3 F
(r) 180 347.33 T
0 F
(parse regions) 243 347.33 T
3 F
(R) 180 328.33 T
0 F
(don\325) 243 328.33 T
(t try to parse regions) 261.71 328.33 T
1 F
(u) 180 309.33 T
0 F
( These \337ags operate on the following T) 198 309.33 T
(cl variables:) 375.18 309.33 T
3 F
(intFormat) 180 290.33 T
0 F
(A printf format string for integers.) 243 290.33 T
3 F
(bytesAsChar) 180 271.33 T
0 F
(T) 243 259.33 T
(reat bytes as characters if non-zero.) 249.05 259.33 T
3 F
(alignFields) 180 240.33 T
0 F
(Align structure \336elds if non-zero.) 243 228.33 T
3 F
(dwordIsPtr) 180 209.33 T
0 F
(DW) 243 209.33 T
(ords are far pointers if non-zero.) 260.04 209.33 T
3 F
(noStructEnum) 180 190.33 T
0 F
-0.68 (If non-zero, doesn\325) 243 178.33 P
-0.68 (t print the \322struct\323, \322enum\323 or \322record\323 before) 325.52 178.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "197" 39
%%Page: "198" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(198) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
-0.64 (the name of a structured/enumerated type -- just gives the type) 243 641.33 P
(name.) 243 629.33 T
3 F
(printRegions) 180 610.33 T
0 F
(If non-zero, prints what a Region points to \050bounds and so on\051.) 243 598.33 T
3 F
(condenseSpecial) 180 579.33 T
0 F
(If non-zero, condense special structures \050Rectangles,) 243 567.33 T
(OutputDescriptors, ObjectDescriptors, TMatrixes and all) 243 555.33 T
(\336xed-point numbers\051 to one line.) 243 543.33 T
1 F
(u) 180 524.33 T
0 F
(This does not print enumerations. Use penum for that.) 198 524.33 T
2 F
(See Also:) 99 505.33 T
0 F
(precord, penum, _print.) 180 505.33 T
81 488.99 531 494 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 488.99 531 494 R
7 X
0 0 0 1 0 0 0 K
V
50 492.99 609.01 492.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 480.99 T
2 F
(print-cell) 99 480.99 T
2 10 Q
(Usage:) 99 463.33 T
0 F
(print-cell [row column <cfp ds:si>]) 180 463.33 T
2 F
(Examples:) 99 443.33 T
0 F
(\322print-cell 1 1\323) 180 423.33 T
(print the cell <1,1>) 243 411.33 T
(\322print-cell 1 2 *ds:si\323) 180 392.33 T
(print the cell <1,2> given *) 243 380.33 T
0 9 Q
(DS:SI) 366.99 380.33 T
2 10 Q
(Synopsis:) 99 361.33 T
0 F
(Print information about a cell) 180 361.33 T
2 F
(See Also:) 99 341.33 T
0 F
(print-row) 180 341.33 T
(, print-row-block, print-cell-params, print-column-element) 222.96 341.33 T
81 324.98 531 329.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 324.98 531 329.99 R
7 X
0 0 0 1 0 0 0 K
V
50 328.98 609.01 328.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 316.98 T
2 F
(print-cell-params) 99 316.98 T
2 10 Q
(Usage:) 99 299.32 T
0 F
(print-cell-params [<address>]) 180 299.32 T
2 F
(Examples:) 99 279.32 T
0 F
(\322print-cell-params\323) 180 259.32 T
(print the) 243 247.32 T
3 F
(CellFunctionParameters) 286.89 247.32 T
0 F
( at ds:si.) 415.41 247.32 T
(\322print-cell-params ds:bx\323) 180 228.32 T
(print the) 243 216.32 T
3 F
(CellFunctionParameters) 286.89 216.32 T
0 F
( at ds:bx.) 415.41 216.32 T
2 F
(Synopsis:) 99 197.32 T
0 F
(Print a) 180 197.32 T
3 F
(CellFunctionParameters) 215.38 197.32 T
0 F
( block.) 343.9 197.32 T
2 F
(See Also:) 99 177.32 T
0 F
(print-row) 180 177.32 T
(, print-column-element, print-row-block, print-cell.) 222.96 177.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "198" 40
%%Page: "199" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(199) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(print-clipboard-item) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(print-clipboard-item [-v] <vm\336le> <vmblock>) 180 617.33 T
(print-clipboard-item [-v] <memhandle>) 180 604.33 T
(print-clipboard-item [-v] <addr>) 180 591.33 T
2 F
(Examples:) 99 571.33 T
0 F
(\322print-clipboard-item bx\323) 180 551.33 T
-0.4 (Print out info about the transfer item whose memory handle is) 243 539.33 P
(in the) 243 527.33 T
0 9 Q
(BX) 272.82 527.33 T
0 10 Q
( register) 285.65 527.33 T
(.) 323.61 527.33 T
2 F
(Synopsis:) 99 508.33 T
0 F
(Prints out information about a transfer item.) 180 508.33 T
2 F
(Notes:) 99 488.33 T
1 F
(u) 180 468.33 T
0 F
(If you give the \322-v\323 \337ag, this will print out the contents of the different) 198 468.33 T
(transfer formats, rather than just an indication of their types.) 198 456.33 T
1 F
(u) 180 437.33 T
0 F
(The -v \337ag will not work unless the transfer item is in a) 198 437.33 T
0 9 Q
(VM) 458.6 437.33 T
0 10 Q
( \336le.) 473.59 437.33 T
2 F
(See Also:) 99 418.33 T
0 F
(pnormal, pquick.) 180 418.33 T
81 401.98 531 406.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 401.98 531 406.99 R
7 X
0 0 0 1 0 0 0 K
V
50 405.98 609.01 405.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 393.98 T
2 F
(print-column-element) 99 393.98 T
2 10 Q
(Usage:) 99 376.32 T
0 F
(print-column-element [<address>]) 180 376.32 T
2 F
(Examples:) 99 356.32 T
0 F
(\322print-column-element\323) 180 336.32 T
(Print the) 243 324.32 T
3 F
(ColumnArrayElement) 287.82 324.32 T
0 F
( at ds:si.) 402.08 324.32 T
(\322print-column-element ds:bx\323 print the) 180 305.32 T
3 F
(ColumnArrayElement) 362.04 305.32 T
0 F
( at ds:bx) 476.3 305.32 T
2 F
(Synopsis:) 99 286.32 T
0 F
(Print a single) 180 286.32 T
3 F
(ColumnArrayElement) 245.57 286.32 T
0 F
( at a given address.) 359.83 286.32 T
81 269.98 531 274.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 269.98 531 274.98 R
7 X
0 0 0 1 0 0 0 K
V
50 273.98 609.01 273.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 261.97 T
2 F
(print-db-group) 99 261.97 T
2 10 Q
(Usage:) 99 244.31 T
0 F
(print-db-group \336le group) 180 244.31 T
2 F
(Examples:) 99 224.31 T
0 F
(\322print-db-group ax bx\323) 180 204.31 T
(print the group at bx/ax.) 243 192.31 T
2 F
(Synopsis:) 99 173.31 T
0 F
(Print information about a dbase group block.) 180 173.31 T
2 F
(See Also:) 99 153.31 T
0 F
(print-db-item.) 180 153.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "199" 41
%%Page: "200" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(200) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(print-db-item) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(print-db-item \336le group item) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322print-db-item bx ax di\323) 180 577.33 T
(print the item at bx/ax/di) 243 565.33 T
2 F
(Synopsis:) 99 546.33 T
0 F
(Print information about a single dbase item) 180 546.33 T
2 F
(See Also:) 99 526.33 T
0 F
(print-db-group) 180 526.33 T
81 509.98 531 514.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 509.98 531 514.99 R
7 X
0 0 0 1 0 0 0 K
V
50 513.98 609.01 513.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 501.98 T
2 F
(print-eval-dep-list) 99 501.98 T
2 10 Q
(Usage:) 99 484.32 T
0 F
(print-eval-dep-list [<addr>]) 180 484.32 T
2 F
(Examples:) 99 464.32 T
0 F
(\322print-eval-dep-list es:0\323) 180 444.32 T
(Print dependency list at) 243 432.32 T
0 9 Q
(ES) 356.9 432.32 T
0 10 Q
(:0.) 369.07 432.32 T
2 F
(Synopsis:) 99 413.32 T
0 F
(Prints a dependency list used for evaluation.) 180 413.32 T
2 F
(See Also:) 99 393.32 T
0 F
(content, pcelldeps.) 180 393.32 T
81 376.98 531 381.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 376.98 531 381.98 R
7 X
0 0 0 1 0 0 0 K
V
50 380.98 609.01 380.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 368.98 T
2 F
(printNamesInObjT) 99 368.98 T
(rees) 202.36 368.98 T
2 10 Q
(Usage:) 99 351.31 T
0 F
(var printNamesInObjT) 180 351.31 T
(rees \0500|1\051) 286.24 351.31 T
2 F
(Examples:) 99 331.31 T
0 F
(\322var printNamesInObjT) 180 311.31 T
(rees 1\323) 290.13 311.31 T
(Sets \322gentree,\323 \322vistree,\323 etc. commands to print object names) 243 299.31 T
(\050where available\051.) 243 287.31 T
2 F
(Synopsis:) 99 268.31 T
0 F
-0.33 (Determines whether object names are printed \050where available\051 rather than) 180 268.31 P
(class names when using the following commands: vistree, gentree, focus,) 180 255.31 T
(target, model, mouse, keyboard.) 180 242.31 T
2 F
(Notes:) 99 222.31 T
0 F
(The default value for this variable is zero.) 180 222.31 T
2 F
(See Also:) 99 202.31 T
0 F
(gentree, vistree, focus, target, model, mouse, keyboard.) 180 202.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "200" 42
%%Page: "201" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(201) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(print-obj-and-method) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(print-obj-and-method <handle> <chunk> <message> [<cx> [<dx>) 180 617.33 T
([<bp> [<class>]]]]) 321.78 604.33 T
2 F
(Examples:) 99 584.33 T
0 F
(\322print-obj-and-method [read-reg bx] [read-reg si]\323) 180 564.33 T
(Prints a description of the object ^lbx:si with the value stored) 243 552.33 T
(and a hex representation.) 243 540.33 T
(\322print-obj-and-method $h $c $m [read-reg cx] [read-reg dx] [read-reg bp]\323) 180 521.33 T
(Prints a description of the object ^l$h:$c and the name of the) 243 509.33 T
(message whose number is in $c. This is followed by the three) 243 497.33 T
(words of data in cx, dx, and bp.) 243 485.33 T
2 F
(Synopsis:) 99 466.33 T
0 F
(Prints a nicely formatted representation of an object, with option message,) 180 466.33 T
-0.6 (register data, label, hex address, & carriage return. The class indication may) 180 453.33 P
(also be overriden.) 180 440.33 T
2 F
(Notes:) 99 420.33 T
1 F
(u) 180 400.33 T
0 F
(Y) 198 400.33 T
(ou may specify anywhere from 0 to 5 arguments after the message) 203.93 400.33 T
-0.37 (number) 198 388.33 P
-0.37 (. These are interpreted as the value of the message, the registers) 233.37 388.33 P
0 9 Q
(CX) 198 376.33 T
0 10 Q
(,) 210.83 376.33 T
0 9 Q
(DX) 216.39 376.33 T
0 10 Q
( and) 229.73 376.33 T
0 9 Q
(BP) 252.7 376.33 T
0 10 Q
(, and the symbol token of the class to print, respectively) 263.91 376.33 T
(.) 520.24 376.33 T
1 F
(u) 180 357.33 T
0 F
(All arguments must be integers, as this is expected to be called by) 198 357.33 T
(another procedure, not by the user) 198 345.33 T
(, so the extra time required to call) 357.07 345.33 T
3 F
-0.51 (getvalue) 198 333.33 P
0 F
-0.49 ( would normally be wasted. \050The user should call) 242.44 333.33 P
3 F
-0.51 (pobj) 466.73 333.33 P
0 F
-0.49 (,) 489.51 333.33 P
3 F
-0.51 (gup) 494.58 333.33 P
0 F
-0.49 (, or) 514.21 333.33 P
(other such functions for this sort of print out.\051) 198 321.33 T
2 F
(See Also:) 99 302.33 T
0 F
(mwatch, map-method, objwatch.) 180 302.33 T
81 285.98 531 290.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 285.98 531 290.99 R
7 X
0 0 0 1 0 0 0 K
V
50 289.98 609.01 289.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 277.98 T
2 F
(printRegions) 99 277.98 T
2 10 Q
(Usage:) 99 260.32 T
0 F
(var printRegions [\0500|1\051]) 180 260.32 T
2 F
(Examples:) 99 240.32 T
0 F
(\322var printRegions 1\323) 180 220.32 T
(If a structure contains a pointer to a region, \322print\323 will) 243 208.32 T
(attempt to determine its bounding box.) 243 196.32 T
2 F
(Synopsis:) 99 177.32 T
0 F
(Controls whether \322print\323 parses regions to \336nd their bounding rectangle.) 180 177.32 T
2 F
(Notes:) 99 157.32 T
0 F
(The default value for this variable is one.) 180 157.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "201" 43
%%Page: "202" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(202) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(print, condenseSpecial.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(print-row) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(print-row [<address *) 180 599.33 T
0 9 Q
(DS:SI) 279.57 599.33 T
0 10 Q
(>]) 304.08 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322print-row\323) 180 559.33 T
(print the row at *) 243 559.33 T
0 9 Q
(DS:SI) 324.12 559.33 T
0 10 Q
(\322print-row ds:si\323) 180 540.33 T
(print the row at) 243 528.33 T
0 9 Q
(DS:SI) 319.12 528.33 T
2 10 Q
(Synopsis:) 99 509.33 T
0 F
(Print a single row in the cell \336le given a pointer to the row) 180 509.33 T
(.) 448.93 509.33 T
2 F
(See Also:) 99 489.33 T
0 F
(print-column-element print-cell-params print-row-block print-cell) 180 489.33 T
81 472.98 531 477.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 472.98 531 477.99 R
7 X
0 0 0 1 0 0 0 K
V
50 476.98 609.01 476.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 464.98 T
2 F
(print-row-block) 99 464.98 T
2 10 Q
(Usage:) 99 447.32 T
0 F
(print-row-block [<address ds>]) 180 447.32 T
2 F
(Examples:) 99 427.32 T
0 F
(\322print-row-block\323) 180 407.32 T
(print the row-block at) 243 395.32 T
0 9 Q
(DS) 346.53 395.32 T
0 10 Q
(:0) 359.2 395.32 T
(\322print-row-block es\323) 180 376.32 T
(print the row-block at) 243 364.32 T
0 9 Q
(ES) 346.53 364.32 T
0 10 Q
(:0) 358.7 364.32 T
2 F
(Synopsis:) 99 345.32 T
0 F
(Print a row-block.) 180 345.32 T
2 F
(See Also:) 99 325.32 T
0 F
(print-row) 180 325.32 T
(, print-cell-params, print-column-element, print-cell.) 222.96 325.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "202" 44
%%Page: "203" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(203) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(printStop) 99 634.99 T
2 10 Q
(Synopsis:) 99 617.33 T
0 F
-0.74 (This variable controls how the current machine state is printed each time the) 180 617.33 P
(machine comes to a complete stop. Possible values:) 180 604.33 T
3 F
(asm) 180 584.33 T
0 F
(Print the current assembly-language instruction, complete) 243 584.33 T
(with the values for the instruction operands.) 243 572.33 T
3 F
(src) 182.78 553.33 T
0 F
-0.25 (Print the current source line, if it\325) 243 553.33 P
-0.25 (s available. If the source line) 396.89 553.33 P
(is not available, the current assembly-language instruction is) 243 541.33 T
(displayed as above.) 243 529.33 T
3 F
(why) 182.78 510.33 T
0 F
-0.55 (Print only the reason for the stopping, not the current machine) 243 510.33 P
(state. \322asm\323 and \322src\323 modes also print this.) 243 498.33 T
3 F
(nil) 182.78 479.33 T
0 F
(Don\325) 243 479.33 T
(t print anything.) 263.75 479.33 T
81 463.98 531 468.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 463.98 531 468.99 R
7 X
0 0 0 1 0 0 0 K
V
50 467.98 609.01 467.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 455.98 T
2 F
(proc) 99 455.98 T
0 F
(This is a T) 163.88 455.98 T
(cl primitive. See \322T) 221.6 455.98 T
(ool Command Language,\323 Chapter) 326.52 455.98 T
(5.) 520.99 455.98 T
81 441.98 531 446.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 441.98 531 446.98 R
7 X
0 0 0 1 0 0 0 K
V
50 445.98 609.01 445.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 433.98 T
2 F
(procmessagebrk) 99 433.98 T
2 10 Q
(Usage:) 99 416.31 T
0 F
(procmessagebrk [<handle>]) 180 416.31 T
2 F
(Examples:) 99 396.31 T
0 F
(\322procmessagebrk MyObj\323) 180 376.31 T
(break whenever a message is sent to MyObj) 243 364.31 T
(\322procmessagebrk\323) 180 345.31 T
(stop intercepting messages) 243 333.31 T
2 F
(Synopsis:) 99 314.31 T
0 F
(Break whenever a message is) 180 314.31 T
4 F
(sent) 319.28 314.31 T
0 F
( to a particular process via ObjMessage.) 337.79 314.31 T
2 F
(Notes:) 99 294.31 T
1 F
(u) 180 274.31 T
0 F
-0.46 (The <handle> argument is the handle to a process to watch for messages) 198 274.31 P
-0.41 (being sent to it. If no argument is speci\336ed then the watching is stopped.) 198 262.31 P
-0.41 (The process\325 handle may be found by typing \322ps -p\323. The process\325) 198 250.31 P
-0.41 (s handle) 489.97 250.31 P
(is the number before the process\325) 198 238.31 T
(s name.) 349.67 238.31 T
1 F
(u) 180 219.31 T
0 F
-0.67 (This command breaks whenever a message is sent \050before they get on the) 198 219.31 P
-0.59 (message queue. This enables one to track identical messages to a process) 198 207.31 P
(which can be removed.) 198 195.31 T
2 F
(See Also:) 99 176.31 T
0 F
(objwatch, mwatch, objmessagebrk, pobject.) 180 176.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "203" 45
%%Page: "204" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(204) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(protect) 99 634.99 T
0 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
2 F
(ps) 99 612.98 T
2 10 Q
(Usage:) 99 595.32 T
0 F
(ps [<\337ags>]) 180 595.32 T
2 F
(Examples:) 99 575.32 T
0 F
(\322ps -t\323) 180 555.32 T
(list all threads in) 243 555.32 T
0 9 Q
(GEOS) 325.43 555.32 T
0 10 Q
(.) 351.6 555.32 T
2 F
(Synopsis:) 99 536.32 T
0 F
(Print out) 180 536.32 T
0 9 Q
(GEOS) 224.82 536.32 T
0 10 Q
(\325 system status.) 250.99 536.32 T
2 F
(Notes:) 99 516.32 T
0 F
(The \337ags argument may be one of the following:) 180 516.32 T
3 F
(-t) 180 496.32 T
0 F
(Prints out info on all threads. May be followed by a list of) 243 496.32 T
(patients whose threads are to be displayed.) 243 484.32 T
3 F
(-p) 180 465.32 T
0 F
(Prints out info on all patients. May be followed by a list of) 243 465.32 T
(patients to be displayed.) 243 453.32 T
3 F
(-h) 180 434.32 T
0 F
(Prints out info on all handles. May be followed by a list of) 243 434.32 T
(patients whose handles are to be displayed.) 243 422.32 T
( The default is \324-p\325.) 180 403.32 T
2 F
(See Also:) 99 384.32 T
0 F
(switch, sym-default.) 180 384.32 T
81 367.98 531 372.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 367.98 531 372.98 R
7 X
0 0 0 1 0 0 0 K
V
50 371.98 609.01 371.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 359.98 T
2 F
(pscope) 99 359.98 T
2 10 Q
(Usage:) 99 342.31 T
0 F
(pscope [<scope-name> [<sym-class>]]) 180 342.31 T
2 F
(Examples:) 99 322.31 T
0 F
(\322pscope W) 180 302.31 T
(inOpen\323) 226.66 302.31 T
-0.45 (Prints out all the local labels, variables, and arguments within) 243 290.31 P
(the) 243 278.31 T
3 F
(W) 260.78 278.31 T
(inOpen\050\051) 270.22 278.31 T
0 F
( procedure) 316.14 278.31 T
2 F
(Synopsis:) 99 259.31 T
0 F
(This prints out all the symbols contained in a particular scope.) 180 259.31 T
2 F
(Notes:) 99 239.31 T
1 F
(u) 180 219.31 T
0 F
-0.04 (This can be useful when you want to know just the \336elds in a structure,) 198 219.31 P
-0.73 (and not the \336elds within those \336elds, or if you know the segment in which) 198 207.31 P
(a variable lies, but not its name. Admittedly) 198 195.31 T
(, this could be overkill.) 401.02 195.31 T
1 F
(u) 180 176.31 T
4 F
(sym-class) 198 176.31 T
0 F
( can be a list of symbol classes to restrict the output. For) 242.05 176.31 T
(example, \322pscope Filemisc proc\323 will print out all the procedures within) 198 164.31 T
(the Filemisc resource.) 198 152.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "204" 46
%%Page: "205" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(205) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(whatis, locals.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(psize) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(psize <structure>) 180 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322psize FontsInUseEntry\323) 180 579.33 T
2 F
(Synopsis:) 99 559.33 T
0 F
(Print the size of the passed structure.) 180 559.33 T
81 542.98 531 547.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 542.98 531 547.99 R
7 X
0 0 0 1 0 0 0 K
V
50 546.98 609.01 546.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 534.98 T
2 F
(pssheet) 99 534.98 T
2 10 Q
(Usage:) 99 517.32 T
0 F
(pssheet [-isSfrcvd] <address>) 180 517.32 T
2 F
(Examples:) 99 497.32 T
0 F
(\322pssheet -s ^l3ce0h:001eh\323) 180 477.32 T
(print style attributes.) 243 465.32 T
(\322pssheet -f -i 94e5h:0057h\323) 180 446.32 T
(print \336le info from instance data.) 243 434.32 T
2 F
(Synopsis:) 99 415.32 T
0 F
(Prints out information about a spreadsheet object.) 180 415.32 T
2 F
(Notes:) 99 395.32 T
1 F
(u) 180 375.32 T
0 F
(If you are in the middle of debugging a spreadsheet routine and have a) 198 375.32 T
(pointer to the Spreadsheet instance, the \322-i\323 \337ag can be used to specify) 198 363.32 T
(the object using that pointer) 198 351.32 T
(.) 328.38 351.32 T
1 F
(u) 180 332.32 T
0 F
( If you simply have the OD of the spreadsheet object, use that.) 198 332.32 T
1 F
(u) 180 313.32 T
0 F
(Alternatively) 198 313.32 T
(, you can do:) 258.19 313.32 T
5 F
( pssheet <flags> [targetobj]) 216 298.32 T
2 F
(See Also:) 99 277.32 T
0 F
(content, targetobj.) 180 277.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "205" 47
%%Page: "206" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(206) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(psup) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(psup [<object>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322psup\323) 180 577.33 T
(print superclasses of object at *ds:si.) 243 577.33 T
(\322psup -i\323) 180 558.33 T
(print superclasses of object under mouse.) 243 558.33 T
(\322psup ^l4e10h:20h\323) 180 539.33 T
(print superclasses of object at ^l4e10h:20h.) 243 527.33 T
2 F
(Synopsis:) 99 508.33 T
0 F
(Prints superclasses of an object.) 180 508.33 T
2 F
(Notes:) 99 488.33 T
0 F
(If no object is speci\336ed, *ds:si is used.) 180 488.33 T
2 F
(See Also:) 99 468.33 T
0 F
(is-obj-in-class.) 180 468.33 T
81 451.98 531 456.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 451.98 531 456.99 R
7 X
0 0 0 1 0 0 0 K
V
50 455.98 609.01 455.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 443.98 T
2 F
(ptext) 99 443.98 T
2 10 Q
(Usage:) 99 426.32 T
0 F
(ptext [-lsrtcegR] <address>) 180 426.32 T
2 F
(Synopsis:) 99 406.32 T
0 F
(Prints out a text object) 180 406.32 T
2 F
(Notes:) 99 386.32 T
0 F
(The \337ag may be one of the following:) 180 386.32 T
(-) 180 366.32 T
3 F
(c) 183.33 366.32 T
0 F
(Print out the characters \050the default\051.) 243 366.32 T
(-) 180 347.32 T
3 F
(e) 183.33 347.32 T
0 F
(print out elements in addition to runs.) 243 347.32 T
(-) 180 328.32 T
3 F
(l) 183.33 328.32 T
0 F
(print out line and \336eld structures.) 243 328.32 T
(-) 180 309.32 T
3 F
(s) 183.33 309.32 T
0 F
(print out char attr structures.) 243 309.32 T
(-) 180 290.32 T
3 F
(r) 183.33 290.32 T
0 F
(print out para attr structures.) 243 290.32 T
(-) 180 271.32 T
3 F
(g) 183.33 271.32 T
0 F
(print out graphics structures.) 243 271.32 T
(-) 180 252.32 T
3 F
(t) 183.33 252.32 T
0 F
(print out type structures.) 243 252.32 T
(-) 180 233.32 T
3 F
(R) 183.33 233.32 T
0 F
(print out region structures.) 243 233.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "206" 48
%%Page: "207" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(207) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pthread) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pthread <id>) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pthread 16c0h\323) 180 577.33 T
(Prints information about the thread whose handle is 16c0h.) 243 565.33 T
2 F
(Synopsis:) 99 546.33 T
0 F
(Provides various useful pieces of information about a particular thread) 180 546.33 T
(including its current priority and its current registers.) 180 533.33 T
2 F
(Notes:) 99 513.33 T
0 F
(<id> is the thread\325) 180 513.33 T
(s handle) 264.54 513.33 T
0 9 Q
(ID) 306.4 513.33 T
0 10 Q
(, as obtained with the \322ps -t\323 or \322threadstat\323) 317.07 513.33 T
(command.) 180 500.33 T
2 F
(See Also:) 99 480.33 T
0 F
(os, threadstat.) 180 480.33 T
81 463.98 531 468.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 463.98 531 468.99 R
7 X
0 0 0 1 0 0 0 K
V
50 467.98 609.01 467.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 455.98 T
2 F
(ptimer) 99 455.98 T
2 10 Q
(Usage:) 99 438.32 T
0 F
(ptimer <handle>) 180 438.32 T
2 F
(Examples:) 99 418.32 T
0 F
(\322ptimer bx\323) 180 398.32 T
(Print out information about the timer whose handle is in the) 243 398.32 T
(BX register) 243 386.32 T
(.) 295.22 386.32 T
2 F
(Synopsis:) 99 367.32 T
0 F
-0.6 (Prints out information about a timer registered with the system: when it will) 180 367.32 P
(\336re, what it will do when it \336res, etc.) 180 354.32 T
2 F
(Notes:) 99 334.32 T
0 F
(<handle> may be a variable, register) 180 334.32 T
(, or constant.) 349.38 334.32 T
2 F
(See Also:) 99 314.32 T
0 F
(twalk, phandle.) 180 314.32 T
81 297.98 531 302.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 297.98 531 302.98 R
7 X
0 0 0 1 0 0 0 K
V
50 301.98 609.01 301.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 289.98 T
2 F
(ptrans) 99 289.98 T
2 10 Q
(Usage:) 99 272.31 T
0 F
(ptrans [<\337ags>] [<address>]) 180 272.31 T
2 F
(Examples:) 99 252.31 T
0 F
(\322ptrans\323) 180 232.31 T
(print the normal transform for the object at *ds:si.) 243 232.31 T
( \322ptrans -s\323) 180 213.31 T
(print the sprite transform for the GrObj object at *ds:si.) 243 213.31 T
( \322ptrans ^lbx:cx\323) 180 194.31 T
(print the normal transform for the object whose) 243 182.31 T
0 9 Q
(OD) 466.15 182.31 T
0 10 Q
( is ^lbx:cx.) 480.15 182.31 T
2 F
(Synopsis:) 99 163.31 T
0 F
(Prints the) 180 163.31 T
3 F
(ObjectT) 229.45 163.31 T
(ransform) 269.94 163.31 T
0 F
( data structure as speci\336ed.) 317.91 163.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "207" 49
%%Page: "208" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(208) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.23 (The -s \337ag can be used to print the \322sprite\323 transform \050the \322sprite\323 is the) 198 621.33 P
(shape\325) 198 609.33 T
(s outline which is drawn to give feedback to the user when said) 226.71 609.33 T
(user is moving/rotating/etc. the GrObj\051.) 198 597.33 T
1 F
(u) 180 578.33 T
0 F
(<address> defaults to *ds:si) 198 578.33 T
2 F
(See Also:) 99 559.33 T
0 F
(pobject.) 180 559.33 T
81 542.99 531 548 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 542.99 531 548 R
7 X
0 0 0 1 0 0 0 K
V
50 546.99 609.01 546.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 534.99 T
2 F
(ptreg) 99 534.99 T
2 10 Q
(Usage:) 99 517.33 T
0 F
(ptreg <start> [<obj-addr>]) 180 517.33 T
2 F
(Examples:) 99 497.33 T
0 F
(\322ptreg 12\323) 180 477.33 T
(Print lines for region 12) 243 477.33 T
(\322ptreg 12 ^lcx:dx\323) 180 458.33 T
(Print lines for region 12 of object ^lcx:dx) 243 446.33 T
2 F
(Synopsis:) 99 427.33 T
0 F
(Print information about the lines in a region.) 180 427.33 T
2 F
(See Also:) 99 407.33 T
0 F
(ptext.) 180 407.33 T
81 390.98 531 395.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 390.98 531 395.99 R
7 X
0 0 0 1 0 0 0 K
V
50 394.98 609.01 394.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 382.98 T
2 F
(pusage) 99 382.98 T
2 10 Q
(Usage:) 99 365.32 T
0 F
(pusage [<address>]) 180 365.32 T
2 F
(Examples:) 99 345.32 T
0 F
(\322pusage\323) 180 325.32 T
(print the usage of characters in the font) 243 325.32 T
2 F
(Synopsis:) 99 306.32 T
0 F
(List the characters in a font and when they were last used.) 180 306.32 T
2 F
(Notes:) 99 286.32 T
1 F
(u) 180 266.32 T
0 F
(The <address> argument is the address of a font. If none is given then) 198 266.32 T
(^hbx is used.) 198 254.32 T
2 F
(See Also:) 99 235.32 T
0 F
(fonts, pfont, pfontinfo, plist.) 180 235.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "208" 50
%%Page: "209" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(209) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pvardata) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pvardata [<entry>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pvardata ds:si\323) 180 577.33 T
( Prints vardata of object at *ds:si) 243 565.33 T
(\322pvardata -i\323) 180 546.33 T
( Prints vardata of object with implied grab.) 243 534.33 T
2 F
(Notes:) 99 515.33 T
1 F
(u) 180 495.33 T
0 F
-0.57 (The address argument is the address of an object with variable data. The) 198 495.33 P
(default is *ds:si.) 198 483.33 T
81 467.98 531 472.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 467.98 531 472.99 R
7 X
0 0 0 1 0 0 0 K
V
50 471.98 609.01 471.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 459.98 T
2 F
(pvardentry) 99 459.98 T
2 10 Q
(Usage:) 99 442.32 T
0 F
(pvardentry <address> <object>) 180 442.32 T
2 F
(Examples:) 99 422.32 T
0 F
(\322pvardentry ds:bx *ds:si\323) 180 402.32 T
2 F
(Notes:) 99 383.32 T
1 F
(u) 180 363.32 T
0 F
(The address argument is the address of a variable data entry in an) 198 363.32 T
(object\325) 198 351.32 T
(s variable data storage area. The default is ds:bx.) 226.52 351.32 T
1 F
(u) 180 332.32 T
0 F
-0 (The <object> argument is required to determine the name of the tag for) 198 332.32 P
(the entry) 198 320.32 T
(, as well as the type of data stored with it.) 239.48 320.32 T
81 304.98 531 309.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 304.98 531 309.98 R
7 X
0 0 0 1 0 0 0 K
V
50 308.98 609.01 308.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 296.98 T
2 F
(pvis) 99 296.98 T
2 10 Q
(Usage:) 99 279.31 T
0 F
(pvis <element> [<object>]) 180 279.31 T
2 F
(Examples:) 99 259.31 T
0 F
(\322pvis VI_bounds @65\323) 180 239.31 T
(print the bounds of object 65) 243 227.31 T
(\322pvis VI_optFlags\323) 180 208.31 T
(print the \337ags of the object at *) 243 196.31 T
0 9 Q
(DS:SI) 387.09 196.31 T
0 10 Q
(\322pvis VI_attrs -i\323) 180 177.31 T
(print the attributes of the object at the implied grab) 243 165.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "209" 51
%%Page: "210" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(210) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Print an element of the visual instance data.) 180 641.33 T
2 F
(Notes:) 99 621.33 T
1 F
(u) 180 601.33 T
0 F
(The <element> argument speci\336es which element in the object to print) 198 601.33 T
1 F
(u) 180 582.33 T
0 F
(The <object> argument is the address to the object to print out. It) 198 582.33 T
-0.4 (defaults to *) 198 570.33 P
0 9 Q
-0.36 (DS:SI) 254.06 570.33 P
0 10 Q
-0.4 ( and is optional. The \324-i\325 \337ag for an implied grab may be) 278.56 570.33 P
(used.) 198 558.33 T
2 F
(See Also:) 99 539.33 T
0 F
(vistree, vup, pobject, piv) 180 539.33 T
(, pgen.) 291.12 539.33 T
81 522.99 531 528 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 522.99 531 528 R
7 X
0 0 0 1 0 0 0 K
V
50 526.99 609.01 526.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 514.99 T
2 F
(pvismon) 99 514.99 T
2 10 Q
(Usage:) 99 497.33 T
0 F
(pvismon [<address>] [<text only>]) 180 497.33 T
2 F
(Examples:) 99 477.33 T
0 F
(\322pvismon\323) 180 457.33 T
(print the moniker at *) 243 457.33 T
0 9 Q
(DS:SI) 345.42 457.33 T
0 10 Q
(\322pvismon -i 1\323) 180 438.33 T
(print a short description of the implied grab object.) 243 426.33 T
2 F
(Synopsis:) 99 407.33 T
0 F
(Print a visual moniker structure at an absolute address.) 180 407.33 T
2 F
(Notes:) 99 387.33 T
1 F
(u) 180 367.33 T
0 F
(The <address> argument is the address to an object in the visual tree.) 198 367.33 T
(This defaults to *) 198 355.33 T
0 9 Q
(DS:SI) 278.2 355.33 T
0 10 Q
(. The \324-i\325 \337ag for an implied grab may be used.) 302.71 355.33 T
1 F
(u) 180 336.33 T
0 F
(The <text only> argument returns a shortened description of the) 198 336.33 T
(structure. Pass a non-zero value to turn on this \337ag.) 198 324.33 T
1 F
(u) 180 305.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 305.33 P
(\337ags, see pobject.) 198 293.33 T
2 F
(See Also:) 99 274.33 T
0 F
(pobjmon, pobject, vistree, gup, gentree, impliedgrab, systemobj.) 180 274.33 T
81 257.98 531 262.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 257.98 531 262.99 R
7 X
0 0 0 1 0 0 0 K
V
50 261.98 609.01 261.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 249.98 T
2 F
(pvmb) 99 249.98 T
2 10 Q
(Synopsis:) 99 232.32 T
0 F
-0.66 (Prints out the VMBlockHandle for a) 180 232.32 P
0 9 Q
-0.6 (VM) 346.21 232.32 P
0 10 Q
-0.66 ( block given the \336le handle) 361.2 232.32 P
4 F
-0.66 (H) 483.91 232.32 P
0 F
-0.66 ( and the) 492.24 232.32 P
0 9 Q
(VM) 180 219.32 T
0 10 Q
( block handle) 194.99 219.32 T
4 F
(B) 259.08 219.32 T
0 F
(.) 266.3 219.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "210" 52
%%Page: "211" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(211) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pvmt) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pvmt [-p] [-a] [-s] [-c] \050<handle> | <segment>\051) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pvmt bx\323) 180 577.33 T
-0.34 (Print out all used blocks for the open VM \336le whose \336le handle) 243 577.33 P
(is in BX.) 243 565.33 T
(\322pvmt -as ds\323) 180 546.33 T
(Print out all blocks for the open) 243 534.33 T
0 9 Q
(VM) 391.91 534.33 T
0 10 Q
( \336le the segment of whose) 406.9 534.33 T
(header block is in DS.) 243 522.33 T
2 F
(Synopsis:) 99 503.33 T
0 F
(Prints out a map of the) 180 503.33 T
0 9 Q
(VM) 289.65 503.33 T
0 10 Q
( block handles for a) 304.64 503.33 T
0 9 Q
(VM) 397.25 503.33 T
0 10 Q
( \336le.) 412.25 503.33 T
2 F
(Notes:) 99 483.33 T
1 F
(u) 180 463.33 T
0 F
(The -p \337ag will only print out blocks that have the Preserve \337ag set.) 198 463.33 T
(Useful for examining object blocks in GeoCalc \336les, for example.) 198 451.33 T
1 F
(u) 180 432.33 T
0 F
-0.37 (The -a \337ag causes pvmt to print out all block handles, not just those that) 198 432.33 P
-0.29 (have been allocated. The other two types of block handles are \322assigned\323) 198 420.33 P
(\050meaning they\325re available for use, but currently are tracking unused) 198 408.33 T
(space in the \336le\051 and \322unassigned\323 \050they\325re available for use\051.) 198 396.33 T
1 F
(u) 180 377.33 T
0 F
(The -s indicates the \336nal argument is a segment, not a \336le handle. This) 198 377.33 T
(is used only if you\325re inside the VM subsystem of the kernel.) 198 365.33 T
1 F
(u) 180 346.33 T
0 F
(The -c \337ag requests a count of the different types of blocks at the end of) 198 346.33 T
(the printout.) 198 334.33 T
1 F
(u) 180 315.33 T
0 F
(The blocks are printed in a table with the following columns:) 198 315.33 T
3 F
(han) 180 296.33 T
0 F
(VM block handle \050in hex\051) 243 296.33 T
3 F
(\337ags) 180 277.33 T
0 F
(D if the block is dirty) 243 277.33 T
(,) 339.5 277.33 T
(C if the block is clean,) 243 265.33 T
(- if the block is non-resident,) 243 253.33 T
(L if the block is LMem,) 243 241.33 T
(B if the block has a backup,) 243 229.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "211" 53
%%Page: "212" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(212) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(P if the preserve handle bit is set for the block,) 243 641.33 T
(! if the block is locked) 243 629.33 T
3 F
(memhan) 180 610.33 T
0 F
-0.55 (Associated memory handle. Followed by \322\050d\051\323 if the memory for) 243 610.33 P
(the block was discarded but the handle retained. Followed by) 243 598.33 T
(\050s\051 if the memory has been swapped out.) 243 586.33 T
3 F
(block type) 180 567.33 T
0 F
(The type of block:) 243 567.33 T
0 9 Q
(VMBT_USED) 216.14 548.33 T
0 10 Q
( a normal in-use block,) 274.64 548.33 T
0 9 Q
-0.74 (VMBT_DUP) 215.32 529.33 P
0 10 Q
-0.82 ( an in-use block that has been backed up or allocated since) 267.65 529.33 P
(the last call to) 243 517.33 T
3 F
(VMSave\050\051) 311.54 517.33 T
0 9 Q
(VMBT_BACKUP) 216.14 498.33 T
0 10 Q
( a place-holder to keep track of the previous version) 287.97 498.33 T
-0.31 (of a) 243 486.33 P
0 9 Q
-0.28 (VMBT_DUP) 261.83 486.33 P
0 10 Q
-0.31 ( block. The uid is the) 314.17 486.33 P
0 9 Q
-0.28 (VM) 411.42 486.33 P
0 10 Q
-0.31 ( block handle to which) 426.41 486.33 P
(the \336le space used to belong.) 243 474.33 T
0 9 Q
-0.31 (VMBT_ZOMBIE) 215.8 455.33 P
0 10 Q
-0.34 ( a block that has been freed since the last) 285.45 455.33 P
3 F
-0.35 (VMSave\050\051) 475.97 455.33 P
0 F
-0.34 (.) 525.78 455.33 P
(The handle is preserved in case of a) 243 443.33 T
3 F
(VMRevert\050\051) 410.61 443.33 T
0 F
( \050a) 470.98 443.33 T
0 9 Q
(VMBT_BACKUP) 243 431.33 T
0 10 Q
( block retains the \336le space\051.) 314.83 431.33 T
3 F
(uid) 180 412.33 T
0 F
(The \322used ID\323 bound to the block.) 243 412.33 T
3 F
(size) 180 393.33 T
0 F
(Number of bytes allocated for the block in the \336le.) 243 393.33 T
3 F
(pos) 180 374.33 T
0 F
(The position of those bytes in the \336le.) 243 374.33 T
2 F
(See Also:) 99 355.33 T
0 F
(pgs.) 180 355.33 T
81 338.99 531 344 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 338.99 531 344 R
7 X
0 0 0 1 0 0 0 K
V
50 342.99 609.01 342.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 330.99 T
2 F
(pvsize) 99 330.99 T
2 10 Q
(Usage:) 99 313.33 T
0 F
(pvsize [<object>]) 180 313.33 T
2 F
(Examples:) 99 293.33 T
0 F
(\322pvsize\323) 180 273.33 T
(print the dimensions of the visual object at *ds:si.) 243 273.33 T
2 F
(Synopsis:) 99 254.33 T
0 F
(Print out the dimensions of a visual object.) 180 254.33 T
2 F
(Notes:) 99 234.33 T
1 F
(u) 180 214.33 T
0 F
-0.04 (The object argument is the address to the object to print out. It defaults) 198 214.33 P
(to *ds:si and is optional. The \324-i\325 \337ag for an implied grab may be used.) 198 202.33 T
1 F
(u) 180 183.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 183.33 P
(\337ags, see pobject.) 198 171.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "212" 54
%%Page: "213" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(213) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(pwd) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(pwd) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322pwd\323) 180 597.33 T
2 F
(Synopsis:) 99 577.33 T
0 F
(Prints the current working directory for the current thread.) 180 577.33 T
2 F
(See Also:) 99 557.33 T
0 F
(dirs, stdpaths.) 180 557.33 T
81 540.98 531 545.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 540.98 531 545.99 R
7 X
0 0 0 1 0 0 0 K
V
50 544.98 609.01 544.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 532.98 T
2 F
(quit) 99 532.98 T
2 10 Q
(Usage:) 99 515.32 T
0 F
(quit [<options>]) 180 515.32 T
2 F
(Examples:) 99 495.32 T
0 F
(\322quit cont\323) 180 475.32 T
(continue) 243 475.32 T
0 9 Q
(GEOS) 285.59 475.32 T
0 10 Q
( and quit swat) 311.76 475.32 T
(\322quit det\323) 180 456.32 T
(detach from the) 243 456.32 T
0 9 Q
(PC) 318.74 456.32 T
0 10 Q
( and quit swat.) 331.24 456.32 T
2 F
(Synopsis:) 99 437.32 T
0 F
(Stop the debugger and exit.) 180 437.32 T
2 F
(Notes:) 99 417.32 T
1 F
(u) 180 397.32 T
0 F
(The <option> argument may be one of the following:) 198 397.32 T
4 F
(continue) 198 385.32 T
0 F
(: continue) 237.06 385.32 T
0 9 Q
(GEOS) 285.21 385.32 T
0 10 Q
( and exit swat;) 311.38 385.32 T
4 F
(leave) 198 373.32 T
0 F
(: keep) 221.14 373.32 T
0 9 Q
(GEOS) 251.15 373.32 T
0 10 Q
( stopped and exit swat.) 277.32 373.32 T
1 F
(u) 180 354.32 T
0 F
( Anything else causes swat to detach and exit.) 198 354.32 T
2 F
(See Also:) 99 335.32 T
0 F
(detach.) 180 335.32 T
81 318.98 531 323.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 318.98 531 323.98 R
7 X
0 0 0 1 0 0 0 K
V
50 322.98 609.01 322.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 310.98 T
2 F
(range) 99 310.98 T
0 F
(This is a T) 163.88 310.98 T
(cl primitive. See \322T) 221.6 310.98 T
(ool Command Language,\323 Chapter) 326.52 310.98 T
(5.) 520.99 310.98 T
81 296.97 531 301.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 296.97 531 301.98 R
7 X
0 0 0 1 0 0 0 K
V
50 300.97 609.01 300.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 288.97 T
2 F
(read-char) 99 288.97 T
2 10 Q
(Usage:) 99 271.3 T
0 F
(read-char [<echo>]) 180 271.3 T
2 F
(Examples:) 99 251.3 T
0 F
(\322read-char 0\323) 180 231.3 T
(Read a single character from the user and don\325) 243 219.3 T
(t echo it.) 458.57 219.3 T
2 F
(Synopsis:) 99 200.3 T
0 F
(Reads a character from the user) 180 200.3 T
(.) 327.59 200.3 T
2 F
(Notes:) 99 180.3 T
0 F
(If <echo> is non-zero or absent, the character typed will be echoed.) 180 180.3 T
2 F
(See Also:) 99 160.3 T
0 F
(read-line.) 180 160.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "213" 55
%%Page: "214" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(214) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(read-line) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(read-line [<isT) 180 617.33 T
(cl> [<initial input> [<special chars>]]]) 247.29 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322read-line\323) 180 577.33 T
(reads a single line of text.) 243 577.33 T
(\322read-line 1\323) 180 558.33 T
(reads a T) 243 558.33 T
(cl command.) 285.35 558.33 T
(\322read-line 1 {go}\323) 180 539.33 T
(reads a T) 243 527.33 T
(cl command that starts with \322go \322) 285.35 527.33 T
(\322read-line 1 {} {\134e\1344}\323) 180 508.33 T
(reads a T) 243 496.33 T
(cl command, considering escape and control-d cause) 285.35 496.33 T
(for immediate return, regardless of whether braces and) 243 484.33 T
(brackets are balanced) 243 472.33 T
2 F
(Synopsis:) 99 453.33 T
0 F
(Reads a single line of input from the user) 180 453.33 T
(. If optional argument is non-zero,) 370.2 453.33 T
(the line is interpreted as a T) 180 440.33 T
(cl command and will not be returned until all) 310.88 440.33 T
-0.28 (braces/brackets are balanced. The \336nal newline is stripped. Optional second) 180 427.33 P
(argument is input to be placed in the buffer \336rst. This input must also be) 180 414.33 T
(on-screen following the prompt, else it will be lost.) 180 401.33 T
2 F
(Notes:) 99 381.33 T
1 F
(u) 180 361.33 T
0 F
-0.69 (If <isT) 198 361.33 P
-0.69 (cl> is non-zero, the input may span multiple lines, as read-line will) 227.2 361.33 P
-0.49 (not return until all braces and brackets are properly balanced, according) 198 349.33 P
(to the rules of T) 198 337.33 T
(cl. This behavior may be overridden by the <special) 270.53 337.33 T
(chars> argument.) 198 325.33 T
1 F
(u) 180 306.33 T
0 F
(If <initial input> is given and non-empty) 198 306.33 T
(, it is taken to be the initial) 385.88 306.33 T
-0.69 (contents of the input line and may be edited by the user just as if s/he had) 198 294.33 P
(typed it in. The string is not automatically displayed; that is up to the) 198 282.33 T
(caller) 198 270.33 T
(.) 223 270.33 T
1 F
(u) 180 251.33 T
0 F
(<special chars> is an optional string of characters that will cause this) 198 251.33 T
-0.37 (routine to return immediately) 198 239.33 P
-0.37 (. The character that caused the immediate) 334.49 239.33 P
(return is left as the last character of the string returned. Y) 198 227.33 T
(ou may use) 468.38 227.33 T
(standard backslash escapes to specify the characters. This will return) 198 215.33 T
(even if the user is entering a multi-line T) 198 203.33 T
(cl command whose braces and) 387.58 203.33 T
(brackets are not yet balanced.) 198 191.33 T
1 F
(u) 180 172.33 T
0 F
(The user) 198 172.33 T
(\325) 239.29 172.33 T
(s input is returned as a single string with the \336nal newline) 240.96 172.33 T
(stripped off.) 198 160.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "214" 56
%%Page: "215" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(215) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(top-level-read) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(read-reg) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(read-reg <register>) 180 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322read-reg ax\323) 180 559.33 T
(return the value of) 243 547.33 T
0 9 Q
(AX) 332.63 547.33 T
0 10 Q
(\322read-reg) 180 528.33 T
0 9 Q
(CC) 225.55 528.33 T
0 10 Q
(\323) 238.55 528.33 T
(return the value of the conditional \337ags) 243 516.33 T
2 F
(Synopsis:) 99 497.33 T
0 F
(Return the value of a register in decimal.) 180 497.33 T
2 F
(Notes:) 99 477.33 T
1 F
(u) 180 457.33 T
0 F
(The <register> argument is the two letter name of a register in either) 198 457.33 T
(upper or lower case.) 198 445.33 T
2 F
(See Also:) 99 426.33 T
0 F
(frame register) 180 426.33 T
(, assign, setcc, clrcc.) 245.18 426.33 T
81 409.98 531 414.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 409.98 531 414.99 R
7 X
0 0 0 1 0 0 0 K
V
50 413.98 609.01 413.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 401.98 T
2 F
(regs) 99 401.98 T
2 10 Q
(Usage:) 99 384.32 T
0 F
(regs) 180 384.32 T
2 F
(Synopsis:) 99 364.32 T
0 F
(Print the current registers, \337ags, and instruction.) 180 364.32 T
2 F
(See Also:) 99 344.32 T
0 F
(assign, setcc, clrcc, read-reg.) 180 344.32 T
81 327.98 531 332.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 327.98 531 332.98 R
7 X
0 0 0 1 0 0 0 K
V
50 331.98 609.01 331.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 319.98 T
2 F
(regwin) 99 319.98 T
2 10 Q
(Usage:) 99 302.31 T
0 F
(regwin [off]) 180 302.31 T
2 F
(Examples:) 99 282.31 T
0 F
(\322regwin\323) 180 282.31 T
(\322regwin off\323) 180 269.31 T
2 F
(Synopsis:) 99 249.31 T
0 F
(T) 180 249.31 T
(urn the continuous display of registers on or off.) 185.96 249.31 T
2 F
(Notes:) 99 229.31 T
1 F
(u) 180 209.31 T
0 F
(If you give the optional argument \322off\323, you will turn off any active) 198 209.31 T
(register display) 198 197.31 T
(.) 268.93 197.31 T
1 F
(u) 180 178.31 T
0 F
(If you give no argument, the display will be turned on.) 198 178.31 T
1 F
(u) 180 159.31 T
0 F
(Only one register display may be active at a time.) 198 159.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "215" 57
%%Page: "216" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(216) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(display) 180 641.33 T
(.) 212.23 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(repeatCommand) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(var repeatCommand <string>) 180 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322var repeatCommand [list foo nil]\323) 180 559.33 T
-0.07 (Execute the command \322foo nil\323 if the user just hits <Enter> at) 243 547.33 P
(the next command prompt.) 243 535.33 T
2 F
(Synopsis:) 99 516.33 T
0 F
(This variable holds the command Swat should execute if the user enters an) 180 516.33 T
(empty command. It is used by all the memory-referencing commands to) 180 503.33 T
-0.64 (display the next chunk of memory) 180 490.33 P
-0.64 (, and can be used for other purposes as well.) 332.89 490.33 P
2 F
(Notes:) 99 470.33 T
1 F
(u) 180 450.33 T
4 F
(repeatCommand) 198 450.33 T
0 F
( is emptied just before) 274.28 450.33 T
3 F
(top-level-read) 379.29 450.33 T
0 F
( returns the) 451.33 450.33 T
(command the interpreter should execute and must be reset by the) 198 438.33 T
-0.14 (repeated command if it wishes to continue to be executed when the user) 198 426.33 P
(just hits <Enter>.) 198 414.33 T
1 F
(u) 180 395.33 T
0 F
(The text of the current command is stored in) 198 395.33 T
4 F
(lastCommand) 407.08 395.33 T
0 F
(, should you) 472.07 395.33 T
(wish to use it when setting up) 198 383.33 T
4 F
(repeatCommand) 339.69 383.33 T
0 F
(.) 415.97 383.33 T
2 F
(See Also:) 99 364.33 T
0 F
(target, focus, mouse, keyboard.) 180 364.33 T
81 347.98 531 352.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 347.98 531 352.99 R
7 X
0 0 0 1 0 0 0 K
V
50 351.98 609.01 351.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 339.98 T
2 F
(require) 99 339.98 T
2 10 Q
(Usage:) 99 322.32 T
0 F
(require <name> [<\336le>]) 180 322.32 T
2 F
(Examples:) 99 302.32 T
0 F
(\322require fmtval print\323) 180 282.32 T
(Ensure the procedure \322fmtval\323 is de\336ned, loading the \336le) 243 270.32 T
(\322print.tcl\323 if it is not.) 243 258.32 T
2 F
(Synopsis:) 99 239.32 T
0 F
-0.67 (This ensures that a particular function, not normally invoked by the user but) 180 239.32 P
(present in some \336le in the system library) 180 226.32 T
(, is actually loaded.) 368.54 226.32 T
2 F
(Notes:) 99 206.32 T
0 F
-0.42 (If no <\336le> is given, a \336le with the same name \050possibly suf\336xed \322.tcl\323\051 as the) 180 206.32 P
(function is assumed.) 180 193.32 T
2 F
(See Also:) 99 173.32 T
0 F
(autoload.) 180 173.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "216" 58
%%Page: "217" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(217) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(restore-state) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(restore-state) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322restore-state\323) 180 577.33 T
(Set all registers for the current thread to the values saved by) 243 565.33 T
(the most recent save-state.) 243 553.33 T
2 F
(Synopsis:) 99 534.33 T
0 F
(Pops all the registers for a thread from the internal state stack.) 180 534.33 T
2 F
(Notes:) 99 514.33 T
1 F
(u) 180 494.33 T
0 F
(This is the companion to the \322save-state\323 command.) 198 494.33 T
1 F
(u) 180 475.33 T
0 F
(All the thread\325) 198 475.33 T
(s registers are affected by this command.) 264.49 475.33 T
2 F
(See Also:) 99 456.33 T
0 F
(save-state.) 180 456.33 T
81 439.98 531 444.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.98 531 444.99 R
7 X
0 0 0 1 0 0 0 K
V
50 443.98 609.01 443.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.98 T
2 F
(ret) 99 431.98 T
2 10 Q
(Usage:) 99 414.32 T
0 F
(ret [<function name>]) 180 414.32 T
2 F
(Examples:) 99 394.32 T
0 F
(\322ret\323) 180 394.32 T
(\322ret ObjMessage\323) 180 381.32 T
2 F
(Synopsis:) 99 361.32 T
0 F
(Return from a function and stop.) 180 361.32 T
1 F
(u) 180 341.32 T
0 F
-0.49 (The <function name> argument is the name of a function in the patient\325) 198 341.32 P
-0.49 (s) 524.08 341.32 P
-0.65 (stack after which swat should stop. If none is speci\336ed then Swat returns) 198 329.32 P
(from the current function.) 198 317.32 T
1 F
(u) 180 298.32 T
0 F
(The function returned from is the \336rst frame from the top of the stack) 198 298.32 T
(which calls the function \050like the \322\336nish\323 command\051.) 198 286.32 T
1 F
(u) 180 267.32 T
0 F
(This command does not force a return. The machine continues until it) 198 267.32 T
(reaches the frame above the function.) 198 255.32 T
2 F
(See Also:) 99 236.32 T
0 F
(\336nish, backtrace.) 180 236.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "217" 59
%%Page: "218" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(218) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(return) 99 634.99 T
0 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
2 F
(return-to-top-level) 99 612.98 T
2 10 Q
(Usage:) 99 595.32 T
0 F
(return-to-top-level) 180 595.32 T
2 F
(Examples:) 99 575.32 T
0 F
(\322return-to-top-level\323) 180 555.32 T
(Returns to the top-level interpreter) 243 543.32 T
(.) 405.4 543.32 T
2 F
(Synopsis:) 99 524.32 T
0 F
(Forces execution to return to the top-level interpreter loop, unwinding) 180 524.32 T
(intermediate calls \050protected commands still have their protected clauses) 180 511.32 T
(executed, but nothing else is\051.) 180 498.32 T
2 F
(See Also:) 99 478.32 T
0 F
(top-level, protect.) 180 478.32 T
81 461.98 531 466.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.98 531 466.98 R
7 X
0 0 0 1 0 0 0 K
V
50 465.98 609.01 465.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.98 T
2 F
(rs) 99 453.98 T
2 10 Q
(Usage:) 99 436.31 T
0 F
(rs) 180 436.31 T
2 F
(Examples:) 99 416.31 T
0 F
(\322rs\323) 180 396.31 T
(restart) 243 396.31 T
0 9 Q
(GEOS) 277.63 396.31 T
0 10 Q
( without attaching) 303.8 396.31 T
2 F
(Synopsis:) 99 377.31 T
0 F
(Restart) 180 377.31 T
0 9 Q
(GEOS) 217.41 377.31 T
0 10 Q
( without attaching.) 243.58 377.31 T
2 F
(See Also:) 99 357.31 T
0 F
(att, attach.) 180 357.31 T
81 340.97 531 345.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 340.97 531 345.98 R
7 X
0 0 0 1 0 0 0 K
V
50 344.97 609.01 344.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 332.97 T
2 F
(run) 99 332.97 T
2 10 Q
(Usage:) 99 315.3 T
0 F
(run [<patient-name>]) 180 315.3 T
2 F
(Examples:) 99 295.3 T
0 F
(\322run uki\323) 180 275.3 T
(Run the application with patient name \322uki\323.) 243 263.3 T
(\322run -e uki\323) 180 244.3 T
(run EC Uki) 243 244.3 T
(\322run -n uki\323) 180 225.3 T
(run non-EC Uki) 243 225.3 T
(\322run -p games\134ukiec.geo) 180 206.3 T
(\322) 293.47 206.3 T
(run games\134ukiec.geo) 243 194.3 T
(\322run\323) 180 175.3 T
(run the default patient, as speci\336ed by the patient-default) 243 175.3 T
(command.) 243 163.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "218" 60
%%Page: "219" 61
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(219) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
-0.88 (\322Runs\323 an application by loading it via a call to) 180 641.33 P
3 F
-0.91 (UserLoadApplication\050\051) 390.9 641.33 P
0 F
-0.88 ( and) 509.79 641.33 P
(stopping when the app reaches the GenProcess handler for) 180 628.33 T
0 9 Q
-0.5 (MSG_MET) 180 615.33 P
-0.5 (A_A) 226.17 615.33 P
-0.5 (TT) 243.17 615.33 P
-0.5 (ACH) 254.68 615.33 P
0 10 Q
-0.55 (. Return patient created, if any \050In the examples shown,) 275.17 615.33 P
(this would be \322uki\323\051.) 180 602.33 T
2 F
(Notes:) 99 582.33 T
1 F
(u) 180 562.33 T
0 F
-0.6 (May be used even if stopped inside the loader) 198 562.33 P
-0.6 (, in which case) 402.5 562.33 P
0 9 Q
-0.54 (GEOS) 470.49 562.33 P
0 10 Q
-0.6 ( will be) 496.66 562.33 P
-0.27 (allowed to continue starting up,  and the speci\336ed app run after) 198 550.33 P
0 9 Q
-0.24 (GEOS) 492.02 550.33 P
0 10 Q
-0.27 ( is) 518.2 550.33 P
(Idle.) 198 538.33 T
1 F
(u) 180 519.33 T
0 F
-0.81 (If the machine stops for any other reason other than the call\325) 198 519.33 P
-0.81 (s completion,) 469.28 519.33 P
(you are left wherever the machine stopped.) 198 507.33 T
2 F
(See Also:) 99 488.33 T
0 F
(patient-default, send, spawn, switch.) 180 488.33 T
81 471.99 531 477 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 471.99 531 477 R
7 X
0 0 0 1 0 0 0 K
V
50 475.99 609.01 475.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 463.99 T
2 F
(rwatch) 99 463.99 T
2 10 Q
(Usage:) 99 446.33 T
0 F
(rwatch [\050on|off\051]) 180 446.33 T
2 F
(Examples:) 99 426.33 T
0 F
(\322rwatch on\323) 180 406.33 T
(W) 243 406.33 T
(atch text-recalculation as it happens) 252.07 406.33 T
( \322rwatch off\323) 180 387.33 T
(T) 243 387.33 T
(urn output off) 248.96 387.33 T
( \322rwatch\323) 180 368.33 T
(See what the status is) 243 368.33 T
2 F
(Synopsis:) 99 330.33 T
0 F
(Displays information about text recalculation. Speci\336cally designed for) 180 330.33 T
(tracking bugs in the rippling code.) 180 317.33 T
2 F
(See Also:) 99 297.33 T
0 F
(ptext.) 180 297.33 T
81 280.98 531 285.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 280.98 531 285.99 R
7 X
0 0 0 1 0 0 0 K
V
50 284.98 609.01 284.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 272.98 T
2 F
(save) 99 272.98 T
2 10 Q
(Usage:) 99 255.32 T
0 F
(save \050<#lines>|<\336lename>\051) 180 255.32 T
2 F
(Examples:) 99 235.32 T
0 F
(\322save 500\323) 180 215.32 T
(Save the last 500 lines that scroll off the screen.) 243 215.32 T
(\322save /dumps/puffball\323) 180 196.32 T
-0.64 (Save the contents of the entire scroll buffer to the \336le \322puffball\323.) 243 184.32 P
2 F
(Synopsis:) 99 165.32 T
0 F
-0.61 (Controls the scrollback buffer Swat maintains for its main command window) 180 165.32 P
-0.61 (.) 528.22 165.32 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "219" 61
%%Page: "220" 62
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(220) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.83 (If the argument is numeric, it sets the number of lines to save \050the default) 198 621.33 P
(is 1,000\051.) 198 609.33 T
1 F
(u) 180 590.33 T
0 F
(If the argument is anything else, it\325) 198 590.33 T
(s taken to be the name of a \336le in) 361.17 590.33 T
(which the current buffer contents \050including the command window\051) 198 578.33 T
(should be saved. If the <\336lename> is relative, it is taken relative to the) 198 566.33 T
(directory in which the executable for the patient to which the current) 198 554.33 T
(stack frame\325) 198 542.33 T
(s function belongs is located. If the \336le already exists, it is) 254.12 542.33 T
(overwritten.) 198 530.33 T
81 514.99 531 520 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 514.99 531 520 R
7 X
0 0 0 1 0 0 0 K
V
50 518.99 609.01 518.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 506.99 T
2 F
(save-state) 99 506.99 T
2 10 Q
(Usage:) 99 489.33 T
0 F
(save-state) 180 489.33 T
2 F
(Examples:) 99 469.33 T
0 F
(\322save-state\323) 180 449.33 T
(Push the current register state onto the thread\325) 243 437.33 T
(s state stack.) 461.71 437.33 T
2 F
(Synopsis:) 99 418.33 T
0 F
-0.37 (Records the state of the current thread \050all its registers\051 for later restoration) 180 418.33 P
(by \322restore-state\323.) 180 405.33 T
2 F
(Notes:) 99 385.33 T
1 F
(u) 180 365.33 T
0 F
(Swat maintains an internal state stack for each thread it knows, so) 198 365.33 T
(calling this has no effect on the target) 198 353.33 T
0 9 Q
(PC) 375.61 353.33 T
0 10 Q
(.) 388.11 353.33 T
1 F
(u) 180 334.33 T
0 F
(This won\325) 198 334.33 T
(t save any memory contents, just the state of the thread\325) 242.09 334.33 T
(s) 502.12 334.33 T
(registers.) 198 322.33 T
2 F
(See Also:) 99 303.33 T
0 F
(restore-state, discard-state.) 180 303.33 T
81 286.98 531 291.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 286.98 531 291.99 R
7 X
0 0 0 1 0 0 0 K
V
50 290.98 609.01 290.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 278.98 T
2 F
(sbwalk) 99 278.98 T
2 10 Q
(Usage:) 99 261.32 T
0 F
(sbwalk [<patient>]) 180 261.32 T
2 F
(Examples:) 99 241.32 T
0 F
(\322sbwalk\323) 180 221.32 T
(list the saved blocks of the current patient.) 243 221.32 T
(\322sbwalk geos\323) 180 202.32 T
(list the saved blocks of the) 243 190.32 T
0 9 Q
(GEOS) 367.84 190.32 T
0 10 Q
( patient.) 394.01 190.32 T
2 F
(Synopsis:) 99 171.32 T
0 F
(List all the saved blocks in a patient.) 180 171.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "220" 62
%%Page: "221" 63
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(221) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <patient> argument is any) 198 621.33 T
0 9 Q
(GEOS) 345.33 621.33 T
0 10 Q
( patient. If none is speci\336ed then) 371.5 621.33 T
(the current patient is used.) 198 609.33 T
81 593.99 531 599 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 593.99 531 599 R
7 X
0 0 0 1 0 0 0 K
V
50 597.99 609.01 597.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 585.99 T
2 F
(scan) 99 585.99 T
0 F
(This is a T) 163.88 585.99 T
(cl primitive. See \322T) 221.6 585.99 T
(ool Command Language,\323 Chapter) 326.52 585.99 T
(5.) 520.99 585.99 T
81 571.98 531 576.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 571.98 531 576.99 R
7 X
0 0 0 1 0 0 0 K
V
50 575.98 609.01 575.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 563.98 T
2 F
(scope) 99 563.98 T
2 10 Q
(Usage:) 99 546.32 T
0 F
(scope [<scope-name>]) 180 546.32 T
2 F
(Examples:) 99 526.32 T
0 F
(\322scope\323) 180 506.32 T
(Returns the name of the current auxiliary scope.) 243 506.32 T
2 F
(Synopsis:) 99 487.32 T
0 F
(This changes the auxiliary scope in which Swat looks \336rst when trying to) 180 487.32 T
(resolve a symbol name in an address expression.) 180 474.32 T
2 F
(Notes:) 99 454.32 T
1 F
(u) 180 434.32 T
0 F
(This command isn\325) 198 434.32 T
(t usually typed by users, but it is the reason you can) 284.5 434.32 T
(reference local labels after you\325ve listed a function unrelated to the) 198 422.32 T
(current one.) 198 410.32 T
1 F
(u) 180 391.32 T
0 F
(Y) 198 391.32 T
(ou most likely want to use the set-address T) 203.93 391.32 T
(cl procedure, rather than) 406.86 391.32 T
(this command.) 198 379.32 T
1 F
(u) 180 360.32 T
0 F
(If <scope-name> is \322..\323, the auxiliary scope will change to be the lexical) 198 360.32 T
(parent of the current scope.) 198 348.32 T
2 F
(See Also:) 99 329.32 T
0 F
(set-address, addr) 180 329.32 T
(-parse, whatis.) 259.45 329.32 T
81 312.98 531 317.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 312.98 531 317.98 R
7 X
0 0 0 1 0 0 0 K
V
50 316.98 609.01 316.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 304.98 T
2 F
(screenwin) 99 304.98 T
2 10 Q
(Usage:) 99 287.31 T
0 F
(screenwin) 180 287.31 T
2 F
(Synopsis:) 99 267.31 T
0 F
(Print the address of the current top-most screen window) 180 267.31 T
(.) 439.63 267.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "221" 63
%%Page: "222" 64
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(222) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(send) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(send [-enpr] <geode-name>) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322send icon\323) 180 577.33 T
(send) 243 565.33 T
0 9 Q
(EC) 267.26 565.33 T
0 10 Q
( Icon Editor if running in) 280.26 565.33 T
0 9 Q
(EC) 399.14 565.33 T
0 10 Q
( mode; send non-) 412.13 565.33 T
0 9 Q
(EC) 489.91 565.33 T
0 10 Q
( Icon) 502.91 565.33 T
(Editor if running in non-) 243 553.33 T
0 9 Q
(EC) 357.25 553.33 T
0 10 Q
( mode.) 370.25 553.33 T
(\322send -r icon\323) 180 534.33 T
(send appropriate icon editor) 243 522.33 T
(, then run it. \050See documentation) 372.26 522.33 T
(for \322run\323 above.\051) 243 510.33 T
(\322send -e icon\323) 180 491.33 T
(send) 243 479.33 T
0 9 Q
(EC) 267.26 479.33 T
0 10 Q
( Icon editor) 280.26 479.33 T
(.) 331.92 479.33 T
(\322send -n icon\323) 180 460.33 T
(send non-) 243 448.33 T
0 9 Q
(EC) 287.81 448.33 T
0 10 Q
( Icon Editor) 300.81 448.33 T
(\322send -p c:/pcgeos/appl/icon/icon.geo\323) 180 429.33 T
(send c:/pcgeos/appl/icon/icon.geo) 243 417.33 T
(\322send\323) 180 398.33 T
(send the default patient \050as set by the) 243 398.33 T
3 F
(patient-default) 420.81 398.33 T
0 F
(command\051.) 243 386.33 T
2 F
(Synopsis:) 99 367.33 T
0 F
(Send a geode from the host to target machine.) 180 367.33 T
81 350.98 531 355.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 350.98 531 355.99 R
7 X
0 0 0 1 0 0 0 K
V
50 354.98 609.01 354.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 342.98 T
2 F
(send-\336le) 99 342.98 T
2 10 Q
(Usage:) 99 325.32 T
0 F
(send-\336le <\336le> <targ\336lename>) 180 325.32 T
2 F
(Examples:) 99 305.32 T
0 F
(\322send-\336le /pcgeos/appl/sdk/mess1/mess1.geo) 180 285.32 T
0 9 Q
(WORLD) 384.66 285.32 T
0 10 Q
(/soundapp.geo\323) 419.99 285.32 T
(Send the) 243 273.32 T
3 F
(mess1.geo) 286.71 273.32 T
0 F
( \336le on the host machine to the) 338.56 273.32 T
0 9 Q
(WORLD) 483.95 273.32 T
0 10 Q
(directory of the host machine, where it will be called) 243 261.32 T
3 F
(soundapp.geo) 243 249.32 T
0 F
(.) 314.67 249.32 T
2 F
(Synopsis:) 99 230.32 T
0 F
(Sends a \336le from the host machine to the target.) 180 230.32 T
81 213.98 531 218.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 213.98 531 218.98 R
7 X
0 0 0 1 0 0 0 K
V
50 217.98 609.01 217.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 205.97 T
2 F
(set-address) 99 205.97 T
0 10 Q
-0.36 (Set the last-accessed address recorded for memory-access commands. Single) 180 188.31 P
(argument is an address expression to be used by the next memory-access) 180 175.31 T
(command \050except via <return>\051.) 180 162.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "222" 64
%%Page: "223" 65
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(223) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(setcc) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(setcc <\337ag> [<value>]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322setcc c\323) 180 577.33 T
(set the carry \337ag) 243 577.33 T
(\322setcc z 0\323) 180 558.33 T
(clear the zero \337ag) 243 558.33 T
2 F
(Synopsis:) 99 539.33 T
0 F
(Set a \337ag in the computer) 180 539.33 T
(.) 298.72 539.33 T
2 F
(Notes:) 99 519.33 T
1 F
(u) 180 499.33 T
0 F
(The \336rst argument is the \336rst letter of the \337ag to set. The following is a) 198 499.33 T
(list of the \337ags:) 198 487.33 T
3 F
(t) 208.7 468.33 T
0 F
(trap) 243 468.33 T
3 F
(i) 208.7 449.33 T
0 F
(interrupt enable) 243 449.33 T
3 F
(d) 208.7 430.33 T
0 F
(direction) 243 430.33 T
3 F
(o) 208.7 411.33 T
0 F
(over\337ow) 243 411.33 T
3 F
(s) 208.7 392.33 T
0 F
(sign) 243 392.33 T
3 F
(z) 208.7 373.33 T
0 F
(zero) 243 373.33 T
3 F
(a) 208.7 354.33 T
0 F
(auxiliary carry) 243 354.33 T
3 F
(p) 208.7 335.33 T
0 F
(parity) 243 335.33 T
3 F
(c) 208.7 316.33 T
0 F
(carry) 243 316.33 T
1 F
(u) 180 297.33 T
0 F
-0.65 (The second argument is the value to assign the \337ag. It defaults to one but) 198 297.33 P
(may be zero to clear the \337ag.) 198 285.33 T
2 F
(See Also:) 99 266.33 T
0 F
(clrcc, compcc.) 180 266.33 T
81 249.98 531 254.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 249.98 531 254.99 R
7 X
0 0 0 1 0 0 0 K
V
50 253.98 609.01 253.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 241.98 T
2 F
(set-masks) 99 241.98 T
2 10 Q
(Usage:) 99 224.32 T
0 F
(set-masks <mask1> <mask2>) 180 224.32 T
2 F
(Examples:) 99 204.32 T
0 F
(\322set-masks 0xff 0xff\323) 180 184.32 T
-0.56 (Allow no hardware interrupts to be handled while the machine) 243 172.32 P
(is stopped.) 243 160.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "223" 65
%%Page: "224" 66
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(224) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
-0.85 (Sets the interrupt masks used while the Swat stub is active. Users should use) 180 641.33 P
(the \322int\323 command.) 180 628.33 T
2 F
(Notes:) 99 608.33 T
1 F
(u) 180 588.33 T
0 F
(<mask1> is the mask for the \336rst interrupt controller) 198 588.33 T
(, with a 1 bit) 444.21 588.33 T
(indicating the interrupt should be held until the stub returns the) 198 576.33 T
(machine to) 198 564.33 T
0 9 Q
(GEOS) 251.71 564.33 T
0 10 Q
(. <mask2> is the mask for the second interrupt) 277.88 564.33 T
(controller) 198 552.33 T
(.) 241.88 552.33 T
1 F
(u) 180 533.33 T
0 F
-0.09 (These masks are active only while the machine is executing in the stub,) 198 533.33 P
(which usually means only while the machine is stopped.) 198 521.33 T
2 F
(See Also:) 99 502.33 T
0 F
(int.) 180 502.33 T
81 485.99 531 491 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 485.99 531 491 R
7 X
0 0 0 1 0 0 0 K
V
50 489.99 609.01 489.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 477.99 T
2 F
(set-repeat) 99 477.99 T
0 10 Q
(Sets the command to be repeated using a template string and the) 180 460.33 T
-0.48 (lastCommand variable. The variables $0\311$n substitute the \336elds 0\311n from) 180 447.33 P
(the lastCommand variable. The \336nal result is placed in repeatCommand) 180 434.33 T
(which will be executed should the user type Enter) 180 421.33 T
(.) 410.01 421.33 T
81 404.98 531 409.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 404.98 531 409.99 R
7 X
0 0 0 1 0 0 0 K
V
50 408.98 609.01 408.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 396.98 T
2 F
(set-startup-ec) 99 396.98 T
2 10 Q
(Usage:) 99 379.32 T
0 F
(set-startup-ec [<args>]) 180 379.32 T
2 F
(Examples:) 99 359.32 T
0 F
(\322set-startup-ec +vm\323) 180 339.32 T
( turn on) 243 327.32 T
0 9 Q
(VM) 283 327.32 T
0 10 Q
( error checking when starting up) 297.99 327.32 T
(\322set-startup-ec none\323) 180 308.32 T
( turn off all ec code when starting up) 243 296.32 T
2 F
(Synopsis:) 99 277.32 T
0 F
-0.62 (Executes the \322ec\323 command upon startup, to allow one to override the default) 180 277.32 P
(error checking \337ags.) 180 264.32 T
2 F
(See Also:) 99 244.32 T
0 F
(ec.) 180 244.32 T
81 227.98 531 232.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 227.98 531 232.98 R
7 X
0 0 0 1 0 0 0 K
V
50 231.98 609.01 231.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 219.97 T
2 F
(sftwalk) 99 219.97 T
2 10 Q
(Usage:) 99 202.31 T
0 F
(sftwalk) 180 202.31 T
2 F
(Examples:) 99 182.31 T
0 F
(\322sftwalk\323) 180 182.31 T
2 F
(Synopsis:) 99 162.31 T
0 F
(Print the) 180 162.31 T
0 9 Q
(SFT) 224.82 162.31 T
0 10 Q
( out by blocks.) 242.5 162.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "224" 66
%%Page: "225" 67
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(225) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.28 (This is different than sys\336les in that it shows less details of the \336les and) 198 621.33 P
(instead shows where the) 198 609.33 T
0 9 Q
(SFT) 314.68 609.33 T
0 10 Q
( blocks are and what \336les are in them.) 332.36 609.33 T
2 F
(See Also:) 99 590.33 T
0 F
(sys\336les, geos\336les, fwalk.) 180 590.33 T
81 573.99 531 579 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 573.99 531 579 R
7 X
0 0 0 1 0 0 0 K
V
50 577.99 609.01 577.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 565.99 T
2 F
(showcalls) 99 565.99 T
2 10 Q
(Usage:) 99 548.33 T
0 F
(showcalls [<\337ags>] [<args>]) 180 548.33 T
2 F
(Examples:) 99 528.33 T
0 F
(\322showcalls -o\323) 180 508.33 T
(show all calls using ObjMessage and ObjCall*) 243 496.33 T
(\322showcalls -ml\323) 180 477.33 T
(show all calls changing global and local memory) 243 465.33 T
(\322showcalls\323) 180 446.33 T
(stop showing any calls) 243 446.33 T
2 F
(Synopsis:) 99 427.33 T
0 F
(Display calls to various parts of) 180 427.33 T
0 9 Q
(GEOS) 328.73 427.33 T
0 10 Q
(.) 354.9 427.33 T
2 F
(Notes:) 99 407.33 T
1 F
(u) 180 387.33 T
0 F
(The <\337ags> argument determines the types of calls displayed. Multiple) 198 387.33 T
-0.56 (\337ags must all be speci\336ed in the \336rst argument such as \322showcalls -vl\323. If) 198 375.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "225" 67
%%Page: "226" 68
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(226) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
-0.29 (no \337ags are passed then showcalls stops watching. The \337ags may be any) 198 641.33 P
(of the following:) 198 629.33 T
3 F
(-p) 180 610.33 T
0 F
(Modify all other \337ags to work for the current patient only) 243 610.33 T
3 F
(-b) 180 591.33 T
0 F
(Monitors vis builds) 243 591.33 T
3 F
(-s) 180 572.33 T
0 F
(Monitors shutdown:) 243 572.33 T
0 9 Q
(MSG_DET) 338.37 572.33 T
(ACH) 383.05 572.33 T
0 10 Q
(,) 403.54 572.33 T
0 9 Q
(DET) 409.1 572.33 T
(ACH_COMPLETE) 428.11 572.33 T
0 10 Q
(,) 506.1 572.33 T
0 9 Q
(ACK) 243 560.33 T
0 10 Q
(,) 263 560.33 T
0 9 Q
(DET) 268.56 560.33 T
(ACH_ABORT) 287.57 560.33 T
3 10 Q
(-d) 180 541.33 T
0 F
(Show dispatching of threads) 243 541.33 T
3 F
(-e) 180 522.33 T
0 F
-0.29 (Show) 243 522.33 P
0 9 Q
-0.26 (FOCUS) 270.68 522.33 P
0 10 Q
-0.29 (,) 303.19 522.33 P
0 9 Q
-0.26 (T) 308.46 522.33 P
-0.26 (ARGET) 313.97 522.33 P
0 10 Q
-0.29 (,) 345.55 522.33 P
0 9 Q
-0.26 (MODAL) 350.82 522.33 P
0 10 Q
-0.29 (,) 385.83 522.33 P
0 9 Q
-0.26 (DEF) 391.1 522.33 P
-0.26 (AUL) 409.93 522.33 P
-0.26 (T) 429.27 522.33 P
0 10 Q
-0.29 (, etc. exclusive grabs) 434.36 522.33 P
(& releases) 243 510.33 T
3 F
(-g) 180 491.33 T
0 F
(Show geometry manager resizing things \050all sizes in hex\051) 243 491.33 T
3 F
(-l) 180 472.33 T
0 F
(Show local memory create, destroy) 243 472.33 T
(, relocate) 402.27 472.33 T
3 F
(-m) 180 453.33 T
0 F
(Show global memory alloc, free, realloc) 243 453.33 T
3 F
(-o) 180 434.33 T
0 F
(Show) 243 434.33 T
3 F
(ObjMessage\050\051) 270.97 434.33 T
0 F
( and ObjCall\311\050\051) 340.59 434.33 T
3 F
(-w) 180 415.33 T
0 F
(Show) 243 415.33 T
3 F
(W) 270.97 415.33 T
(inOpen\050\051) 280.41 415.33 T
0 F
(,) 326.33 415.33 T
3 F
(W) 331.89 415.33 T
(inClose\050\051) 341.33 415.33 T
0 F
(,) 387.81 415.33 T
3 F
(W) 393.37 415.33 T
(inMoveResize\050\051) 402.81 415.33 T
0 F
(,) 482.61 415.33 T
3 F
(W) 243 403.33 T
(inChangePriority\050\051) 252.44 403.33 T
0 F
(.) 352.06 403.33 T
3 F
(-N) 180 384.33 T
0 F
(Show navigation calls \050between \336elds, and between windows\051) 243 384.33 T
1 F
(u) 180 365.33 T
0 F
(The<args> argument is used to pass values for some of options.) 198 365.33 T
2 F
(See Also:) 99 346.33 T
0 F
(mwatch, objwatch.) 180 346.33 T
81 329.99 531 335 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 329.99 531 335 R
7 X
0 0 0 1 0 0 0 K
V
50 333.99 609.01 333.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 321.99 T
2 F
(showMethodNames) 99 321.99 T
2 10 Q
(Usage:) 99 304.33 T
0 F
(var showMethodNames) 180 304.33 T
2 F
(Synopsis:) 99 284.33 T
0 F
(If this variable is non-zero, Swat prints out the names of the method in the) 180 284.33 T
0 9 Q
(AX) 180 271.33 T
0 10 Q
( register when unassembling a message call.) 192.83 271.33 T
81 254.98 531 259.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 254.98 531 259.99 R
7 X
0 0 0 1 0 0 0 K
V
50 258.98 609.01 258.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 246.98 T
2 F
(skip) 99 246.98 T
2 10 Q
(Usage:) 99 229.32 T
0 F
(skip [<number of instructions>]) 180 229.32 T
2 F
(Examples:) 99 209.32 T
0 F
(\322skip\323) 180 189.32 T
(skip the current instruction) 243 189.32 T
(\322skip 6\323) 180 170.32 T
(skip the next six instructions) 243 170.32 T
2 F
(Synopsis:) 99 151.32 T
0 F
(Skip one or more instructions.) 180 151.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "226" 68
%%Page: "227" 69
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(227) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <number of instructions> argument defaults to one if not speci\336ed.) 198 621.33 T
2 F
(See Also:) 99 602.33 T
0 F
(istep, sstep, patch.) 180 602.33 T
81 585.99 531 591 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 585.99 531 591 R
7 X
0 0 0 1 0 0 0 K
V
50 589.99 609.01 589.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 577.99 T
2 F
(sleep) 99 577.99 T
2 10 Q
(Usage:) 99 560.33 T
0 F
(sleep <seconds>) 180 560.33 T
2 F
(Examples:) 99 540.33 T
0 F
(\322sleep 5\323) 180 520.33 T
(Pauses Swat for 5 seconds.) 243 520.33 T
2 F
(Synopsis:) 99 501.33 T
0 F
-0.02 (This pauses T) 180 501.33 P
-0.02 (cl execution for the given number of seconds, or until the user) 243.62 501.33 P
(types Ctrl-C.) 180 488.33 T
2 F
(Notes:) 99 468.33 T
1 F
(u) 180 448.33 T
0 F
-0.85 (Messages from the) 198 448.33 P
0 9 Q
-0.76 (PC) 284.71 448.33 P
0 10 Q
-0.85 ( continue to be processed, so a) 297.21 448.33 P
0 9 Q
-0.76 (FULLSTOP) 432.58 448.33 P
0 10 Q
-0.85 ( event will) 482.61 448.33 P
(be dispatched if the) 198 436.33 T
0 9 Q
(PC) 291.16 436.33 T
0 10 Q
( stops, but this command won\325) 303.66 436.33 T
(t return until the) 442.95 436.33 T
(given length of time has elapsed.) 198 424.33 T
1 F
(u) 180 405.33 T
0 F
(<seconds> is a real number) 198 405.33 T
(, so \3221.5\323 is a valid argument.) 323.65 405.33 T
1 F
(u) 180 386.33 T
0 F
(Returns non-zero if it slept for the entire time, or 0 if the sleep was) 198 386.33 T
(interrupted by the user) 198 374.33 T
(.) 305.22 374.33 T
81 358.98 531 363.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 358.98 531 363.99 R
7 X
0 0 0 1 0 0 0 K
V
50 362.98 609.01 362.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 350.98 T
2 F
(slist) 99 350.98 T
2 10 Q
(Usage:) 99 333.32 T
0 F
(slist [<args>]) 180 333.32 T
2 F
(Examples:) 99 313.32 T
0 F
(\322slist\323) 180 293.32 T
(list the current point of execution) 243 293.32 T
(\322slist foo.asm::15\323) 180 274.32 T
(list foo.asm at line 15) 243 262.32 T
(\322slist foo.asm::15,45\323) 180 243.32 T
(list foo.asm from lines 15 to 45) 243 231.32 T
2 F
(Synopsis:) 99 212.32 T
0 F
(List source \336le lines in swat.) 180 212.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "227" 69
%%Page: "228" 70
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(228) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The args argument can be any of the following:) 198 621.33 T
(<address>) 180 602.33 T
(Lists the 10 lines around the given address) 243 602.33 T
(<line>) 180 583.33 T
(Lists the given line in the current \336le) 243 583.33 T
(<\336le>::<line>) 180 564.33 T
(Lists the line in the given \336le) 243 552.33 T
(<line1>,<line2>) 180 533.33 T
-0.88 (Lists the lines between line1 and line2, inclusive, in the current) 243 521.33 P
(\336le) 243 509.33 T
(<\336le>::<line1>,<line2>) 180 490.33 T
(Lists the range from <\336le>) 243 478.33 T
1 F
(u) 180 459.33 T
0 F
( The default is to list the source lines around) 198 459.33 T
0 9 Q
(CS:IP) 407.47 459.33 T
0 10 Q
(.) 430.52 459.33 T
2 F
(See Also:) 99 440.33 T
0 F
(listi, istep, regs.) 180 440.33 T
81 423.99 531 429 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 423.99 531 429 R
7 X
0 0 0 1 0 0 0 K
V
50 427.99 609.01 427.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 415.99 T
2 F
(smatch) 99 415.99 T
2 10 Q
(Synopsis:) 99 398.33 T
0 F
-0.56 (Look for symbols of a given class by pattern. First argument <pattern> is the) 180 398.33 P
-0.67 (pattern for which to search \050it\325) 180 385.33 P
-0.67 (s a standard Swat pattern using shell wildcard) 316.67 385.33 P
(characters\051. Optional second argument <class> is the class of symbol for) 180 372.33 T
(which to search and is given directly to the \322symbol match\323 command.) 180 359.33 T
(Defaults to \322any\323.) 180 346.33 T
81 329.98 531 334.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 329.98 531 334.99 R
7 X
0 0 0 1 0 0 0 K
V
50 333.98 609.01 333.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 321.98 T
2 F
(source) 99 321.98 T
0 F
(This is a T) 163.88 321.98 T
(cl primitive. See \322T) 221.6 321.98 T
(ool Command Language,\323 Chapter) 326.52 321.98 T
(5.) 520.99 321.98 T
81 307.98 531 312.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 307.98 531 312.98 R
7 X
0 0 0 1 0 0 0 K
V
50 311.98 609.01 311.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 299.98 T
2 F
(sort) 99 299.98 T
2 10 Q
(Usage:) 99 282.31 T
0 F
(sort [-r] [-n] [-u] <list>) 180 282.31 T
2 F
(Examples:) 99 262.31 T
0 F
(\322sort -n $ids\323) 180 242.31 T
(Sorts the list in $ids into ascending numeric order) 243 230.31 T
(.) 473.94 230.31 T
2 F
(Synopsis:) 99 211.31 T
0 F
(This sorts a list into ascending or descending order) 180 211.31 T
(, lexicographically or) 414.64 211.31 T
(numerically) 180 198.31 T
(.) 234.26 198.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "228" 70
%%Page: "229" 71
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(229) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(If \322-r\323 is given, the sort will be in descending order) 198 621.33 T
(.) 429.49 621.33 T
1 F
(u) 180 602.33 T
0 F
(If \322-u\323 is given, duplicate elements will be eliminated.) 198 602.33 T
1 F
(u) 180 583.33 T
0 F
(If \322-n\323 is given, the elements are taken to be numbers \050with the usual) 198 583.33 T
(radix speci\336ers possible\051 and are sorted accordingly) 198 571.33 T
(.) 435.04 571.33 T
1 F
(u) 180 552.33 T
0 F
(The sorted list is returned.) 198 552.33 T
2 F
(See Also:) 99 533.33 T
0 F
(map, foreach, mapconcat.) 180 533.33 T
81 516.99 531 522 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 516.99 531 522 R
7 X
0 0 0 1 0 0 0 K
V
50 520.99 609.01 520.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 508.99 T
2 F
(spawn) 99 508.99 T
2 10 Q
(Usage:) 99 491.33 T
0 F
(spawn <processName> [<addr>]) 180 491.33 T
2 F
(Synopsis:) 99 471.33 T
0 F
-0.2 (Set a temporary breakpoint in a not-yet-existent process/thread, waiting for) 180 471.33 P
-0.8 (a new one to be created. First argument is the permanent name of the process) 180 458.33 P
(to watch for) 180 445.33 T
(. Second argument is an address expression specifying where to) 234.26 445.33 T
(place the breakpoint. If no second argument is present, the machine will be) 180 432.33 T
(stopped and Swat will return to the command level when the new thread is) 180 419.33 T
(spawned by) 180 406.33 T
0 9 Q
(GEOS) 237.05 406.33 T
0 10 Q
(.) 263.22 406.33 T
2 F
(Notes:) 99 386.33 T
1 F
(u) 180 366.33 T
0 F
(This can also be used to catch the spawning of a new thread.) 198 366.33 T
1 F
(u) 180 347.33 T
0 F
(If the machine stops before the breakpoint can be set, you\325ll have to do) 198 347.33 T
(this again.) 198 335.33 T
81 319.98 531 324.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 319.98 531 324.99 R
7 X
0 0 0 1 0 0 0 K
V
50 323.98 609.01 323.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 311.98 T
2 F
(src) 99 311.98 T
0 F
(This is a T) 327.24 311.98 T
(cl primitive. See page 316.) 384.96 311.98 T
81 297.98 531 302.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 297.98 531 302.98 R
7 X
0 0 0 1 0 0 0 K
V
50 301.98 609.01 301.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 289.98 T
2 F
(srcwin) 99 289.98 T
2 10 Q
(Usage:) 99 272.31 T
0 F
(srcwin <numLines>) 180 272.31 T
2 F
(Examples:) 99 252.31 T
0 F
(\322srcwin 6\323) 180 232.31 T
(Show 6 lines of source context around) 243 232.31 T
0 9 Q
(CS:IP) 419.86 232.31 T
0 10 Q
(\322srcwin 0\323) 180 213.31 T
(Show no source lines, i.e. turn the display off.) 243 213.31 T
2 F
(Synopsis:) 99 194.31 T
0 F
(Set the number of lines of source code to be displayed when the target) 180 194.31 T
(machine stops.) 180 181.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "229" 71
%%Page: "230" 72
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(230) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(Only one source display may be active at a time.) 198 621.33 T
2 F
(See Also:) 99 602.33 T
0 F
(display) 180 602.33 T
(, regwin, search.) 212.23 602.33 T
81 585.99 531 591 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 585.99 531 591 R
7 X
0 0 0 1 0 0 0 K
V
50 589.99 609.01 589.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 577.99 T
2 F
(sstep) 99 577.99 T
2 10 Q
(Usage:) 99 560.33 T
0 F
(sstep [<default command>]) 180 560.33 T
2 F
(Examples:) 99 540.33 T
0 F
(\322ss\323) 180 520.33 T
(enter source step mode) 243 520.33 T
(\322sstep n\323) 180 501.33 T
(enter source step mode, <ret> does a next command) 243 501.33 T
2 F
(Synopsis:) 99 482.33 T
0 F
-0.7 (Step through the execution of the current patient by source lines. This is) 180 482.33 P
0 9 Q
-0.63 (THE) 508.92 482.33 P
0 10 Q
(command for stepping through high-level \050e.g.,) 180 469.33 T
0 9 Q
(C) 398.52 469.33 T
0 10 Q
(\051 code.) 405.02 469.33 T
1 F
(u) 180 449.33 T
0 F
(The <default> command argument determines what pressing the) 198 449.33 T
-0.49 (<Return> key does. By default, <Return> executes a step command. Any) 198 437.33 P
(other command listed below may be substituted by passing the letter of) 198 425.33 T
(the command.) 198 413.33 T
1 F
(u) 180 394.33 T
0 F
(Sstep steps through the patient line by line, printing where the) 198 394.33 T
-0.16 (instruction pointer is and what line is to be executed Sstep waits for the) 198 382.33 P
(user to type a command which it performs and then prints out again) 198 370.33 T
(where sstep is executing.) 198 358.33 T
1 F
(u) 180 339.33 T
0 F
(This is a list of sstep commands:) 198 339.33 T
3 F
(q) 180 320.33 T
0 F
(, <) 186.48 320.33 T
3 F
(Esc) 198.1 320.33 T
0 F
(>,\324 \324) 216.25 320.33 T
(Stops sstep and returns to command level.) 243 320.33 T
3 F
(b) 180 301.33 T
0 F
(T) 243 301.33 T
(oggles a breakpoint at the current location.) 248.75 301.33 T
3 F
(c) 180 282.33 T
0 F
(Stops sstep and continues execution.) 243 282.33 T
3 F
(n) 180 263.33 T
0 F
(Continues to the next source line, skipping procedure calls,) 243 263.33 T
(repeated string instructions, and software interrupts. Only) 243 251.33 T
(stops when the machine returns to the right context \050i.e. the) 243 239.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "230" 72
%%Page: "231" 73
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(231) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
-0.86 (stack pointer and current thread are the same as they are when) 243 641.33 P
(the \324n\325 command was given\051.) 243 629.33 T
3 F
(l) 180 610.33 T
0 F
(Goes to the next library routine.) 243 610.33 T
3 F
(N) 180 591.33 T
0 F
(Like n, but stops whenever the breakpoint is hit, whether) 243 591.33 T
(you\325re in the same frame or not.) 243 579.33 T
3 F
(M) 180 560.33 T
0 F
(Goes to the next message called. Doesn\325) 243 560.33 T
(t work when the) 425.63 560.33 T
(message is not handled anywhere.) 243 548.33 T
3 F
(f) 180 529.33 T
0 F
(Finishes out the current stack frame.) 243 529.33 T
3 F
(s) 180 510.33 T
0 F
(, <) 185 510.33 T
3 F
(Ret) 196.62 510.33 T
0 F
(>) 214.77 510.33 T
(Steps one source line) 243 510.33 T
3 F
(S) 180 491.33 T
0 F
(Skips the current instruction) 243 491.33 T
3 F
(J) 180 472.33 T
0 F
(Jump on a conditional jump, even when \322W) 243 472.33 T
(ill not jump\323) 443.02 472.33 T
(appears. This does not change the condition codes.) 243 460.33 T
3 F
(g) 180 441.33 T
0 F
(Executes the \324go\325 command with the rest of the line as) 243 441.33 T
(arguments.) 243 429.33 T
3 F
(e) 180 410.33 T
0 F
(Executes a T) 243 410.33 T
(cl command and returns to the prompt.) 301.64 410.33 T
3 F
(R) 180 391.33 T
0 F
(References either the function to be called or the function) 243 391.33 T
(currently executing.) 243 379.33 T
3 F
(h) 180 360.33 T
0 F
(,) 186.85 360.33 T
3 F
(?) 192.41 360.33 T
0 F
(A help message.) 243 360.33 T
1 F
(u) 180 341.33 T
0 F
-0.77 (Emacs will load in the correct \336le executing and following the lines where) 198 341.33 P
(sstep is executing if its server is started and if ewatch is on in swat. If) 198 329.33 T
(ewatch is off emacs will not be updated.) 198 317.33 T
1 F
(u) 180 298.33 T
0 F
-0.1 (If the current patient isn\325) 198 298.33 P
-0.1 (t the actual current thread, sstep waits for the) 314.65 298.33 P
(patient to wake up before single-stepping it.) 198 286.33 T
2 F
(See Also:) 99 267.33 T
0 F
(istep, listi, ewatch.) 180 267.33 T
81 250.99 531 256 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 250.99 531 256 R
7 X
0 0 0 1 0 0 0 K
V
50 254.99 609.01 254.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 242.99 T
2 F
(stdpaths) 99 242.99 T
2 10 Q
(Usage:) 99 225.33 T
0 F
(stdpaths) 180 225.33 T
2 F
(Examples:) 99 205.33 T
0 F
(\322stdpaths\323) 180 205.33 T
2 F
(Synopsis:) 99 185.33 T
0 F
(Print out all paths set for standard directories) 180 185.33 T
2 F
(See Also:) 99 165.33 T
0 F
(pwd, dirs.) 180 165.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "231" 73
%%Page: "232" 74
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(232) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(step) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(step) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322step\323) 180 577.33 T
(execute the next instruction) 243 577.33 T
(\322s\323) 180 558.33 T
2 F
(Synopsis:) 99 539.33 T
0 F
(Execute the patient by a single machine instruction.) 180 539.33 T
2 F
(Notes:) 99 519.33 T
1 F
(u) 180 499.33 T
0 F
(If waitForPatient is non-zero, step waits for the machine to stop again.) 198 499.33 T
1 F
(u) 180 480.33 T
0 F
(This doesn\325) 198 480.33 T
(t do any of the checks for special conditions \050XchgT) 249.68 480.33 T
(opStack,) 483.95 480.33 T
(software interrupts, etc.\051 performed by the \324s\325 command in istep.) 198 468.33 T
2 F
(See Also:) 99 449.33 T
0 F
(istep, next.) 180 449.33 T
81 432.98 531 437.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 432.98 531 437.99 R
7 X
0 0 0 1 0 0 0 K
V
50 436.98 609.01 436.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 424.98 T
2 F
(step-patient) 99 424.98 T
2 10 Q
(Usage:) 99 407.32 T
0 F
(step-patient) 180 407.32 T
2 F
(Examples:) 99 387.32 T
0 F
(\322step-patient\323) 180 367.32 T
(Execute a single instruction on the target) 243 355.32 T
0 9 Q
(PC) 437.64 355.32 T
0 10 Q
(.) 450.14 355.32 T
2 F
(Synopsis:) 99 336.32 T
0 F
(Causes the) 180 336.32 T
0 9 Q
(PC) 233.71 336.32 T
0 10 Q
( to execute a single instruction, returning only when the) 246.21 336.32 T
(instruction has been executed.) 180 323.32 T
2 F
(Notes:) 99 303.32 T
1 F
(u) 180 283.32 T
0 F
(Unlike the continue-patient command, this command will not return) 198 283.32 T
(until the machine has stopped again.) 198 271.32 T
1 F
(u) 180 252.32 T
0 F
-0.56 (No other thread will be allowed to run, as timer interrupts will be turned) 198 252.32 P
(off while the instruction is being executed.) 198 240.32 T
2 F
(See Also:) 99 221.32 T
0 F
(help-fetch.) 180 221.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "232" 74
%%Page: "233" 75
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(233) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(step-until) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(step-until expression [byte|word]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322step-until ax=0\323) 180 577.33 T
(Single-step until ax is zero.) 243 565.33 T
(\322step-until ds:20h!=0 byte\323) 180 546.33 T
(Single-step until byte at ds:20h is non-zero) 243 534.33 T
(\322step-until ds:20h!=0 word\323) 180 515.33 T
(Single-step until word at ds:20h is non-zero) 243 503.33 T
(\322step-until c=0\323) 180 484.33 T
(Single-step until the carry is clear) 243 472.33 T
(\322step-until ax!=ax\323) 180 453.33 T
(Step forever) 243 441.33 T
(This command causes Swat to step until a condition is met.) 180 422.33 T
2 F
(Notes:) 99 402.33 T
0 F
(Useful for tracking memory or register trashing bugs.) 180 402.33 T
2 F
(See Also:) 99 382.33 T
0 F
(step-while) 180 382.33 T
81 365.98 531 370.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 365.98 531 370.99 R
7 X
0 0 0 1 0 0 0 K
V
50 369.98 609.01 369.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 357.98 T
2 F
(stop) 99 357.98 T
2 10 Q
(Usage:) 99 340.32 T
0 F
(stop in <class>::<message> [if <expr>]) 180 340.32 T
(stop in <procedure> [if <expr>]) 180 327.32 T
(stop in <address-history-token> [if <expr>]) 180 314.32 T
(stop at [<\336le>:]<line> [if <expr>]) 180 301.32 T
(stop <address> [if <expr>]) 180 288.32 T
2 F
(Examples:) 99 268.32 T
0 F
(\322stop in main\323) 180 268.32 T
(\322stop in @3\323) 180 255.32 T
(\322stop at /staff/pcgeos/Loader/main.asm:36 if { joe_local ==22}\323) 180 242.32 T
(\322stop at 25\323) 180 229.32 T
(\322stop MemAlloc+3 if {ax==3}\323) 180 216.32 T
2 F
(Synopsis:) 99 196.32 T
0 F
(Specify a place and condition at which the machine should stop executing.) 180 196.32 T
-0.7 (This command is intended primarily for setting breakpoints when debugging) 180 183.32 P
(a geode created in C or another high-level language, but may also be used) 180 170.32 T
(when debugging assembly-language geodes.) 180 157.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "233" 75
%%Page: "234" 76
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(234) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(\322stop in\323 will set a breakpoint at the beginning of a procedure,) 198 621.33 T
(immediately after the procedure\325) 198 609.33 T
(s stack frame has been set up.) 348.93 609.33 T
1 F
(u) 180 590.33 T
0 F
-0.11 (\322stop at\323 will set a breakpoint at the \336rst instruction of the given source) 198 590.33 P
-0.31 (line. If no <\336le> is speci\336ed, the source \336le for the current stack frame is) 198 578.33 P
(used.) 198 566.33 T
1 F
(u) 180 547.33 T
0 F
(If a condition is speci\336ed, by means of an \322if <expr>\323 clause, you should) 198 547.33 T
-0.28 (enclose the expression in {}\325) 198 535.33 P
-0.28 (s to prevent any nested commands, such as a) 322.98 535.33 P
-0.5 (\322value fetch\323 command, from being evaluated until the break-point is hit.) 198 523.33 P
1 F
(u) 180 504.33 T
0 F
(For convenience, \322stop in\323 also allows address-history tokens. This is) 198 504.33 T
(useful when used in conjunction with the \322methods\323 command.) 198 492.33 T
2 F
(See Also:) 99 473.33 T
0 F
(brk, ibrk) 180 473.33 T
81 456.99 531 462 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 456.99 531 462 R
7 X
0 0 0 1 0 0 0 K
V
50 460.99 609.01 460.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 448.99 T
2 F
(stop-catch) 99 448.99 T
2 10 Q
(Usage:) 99 431.33 T
0 F
(stop-catch <body>) 180 431.33 T
2 F
(Examples:) 99 411.33 T
0 F
(\322stop-catch {go ProcCallModuleRoutine}\323) 180 391.33 T
-0.55 (Let machine run until it reaches) 243 379.33 P
3 F
-0.57 (ProcCallModuleRoutine\050\051) 392.47 379.33 P
0 F
-0.55 (,) 525.99 379.33 P
(but do not issue a) 243 367.33 T
0 9 Q
(FULLSTOP) 327.28 367.33 T
0 10 Q
( event when it gets there.) 377.3 367.33 T
2 F
(Synopsis:) 99 348.33 T
0 F
(Allows a string of commands to execute without a) 180 348.33 T
0 9 Q
(FULLSTOP) 411.88 348.33 T
0 10 Q
( event being) 461.9 348.33 T
(generated while they execute.) 180 335.33 T
2 F
(Notes:) 99 315.33 T
0 F
(Why is this useful? A number of things happen when a) 180 315.33 T
0 9 Q
(FULLSTOP) 435.94 315.33 T
0 10 Q
( event is) 485.96 315.33 T
-0.16 (dispatched, including notifying the user where the machine stopped. This is) 180 302.33 P
-0.44 (inappropriate in something like \322istep\323 or \322cycles\323 that is single-stepping the) 180 289.33 P
(machine, for example.) 180 276.33 T
2 F
(See Also:) 99 256.33 T
0 F
(event, continue-patient, step-patient.) 180 256.33 T
81 239.98 531 244.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 239.98 531 244.99 R
7 X
0 0 0 1 0 0 0 K
V
50 243.98 609.01 243.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 231.98 T
2 F
(stop-patient) 99 231.98 T
2 10 Q
(Usage:) 99 214.32 T
0 F
(stop-patient) 180 214.32 T
2 F
(Examples:) 99 194.32 T
0 F
(\322stop-patient\323) 180 174.32 T
(Stops the target) 243 162.32 T
0 9 Q
(PC) 320.05 162.32 T
0 10 Q
(.) 332.55 162.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "234" 76
%%Page: "235" 77
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(235) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
-0.09 (Stops the target) 180 641.33 P
0 9 Q
-0.08 (PC) 256.77 641.33 P
0 10 Q
-0.09 (, in case you continued it and didn\325) 269.27 641.33 P
-0.09 (t wait for it to stop on) 428.84 641.33 P
(its own.) 180 628.33 T
2 F
(Notes:) 99 608.33 T
0 F
(This is different from the \322stop\323 subcommand of the \322patient\323 command.) 180 608.33 T
2 F
(See Also:) 99 588.33 T
0 F
(continue-patient.) 180 588.33 T
81 571.99 531 577 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 571.99 531 577 R
7 X
0 0 0 1 0 0 0 K
V
50 575.99 609.01 575.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 563.99 T
2 F
(stream) 99 563.99 T
2 10 Q
(Usage:) 99 546.33 T
0 F
(stream open <\336le> \050r|w|a|r+|w+\051) 180 546.33 T
(stream read \050line|list|char\051 <stream>) 180 533.33 T
(stream print <list> <stream>) 180 520.33 T
(stream write <string> <stream>) 180 507.33 T
(stream rewind <stream>) 180 494.33 T
(stream seek \050<posn>|+<incr>|-<decr>|end\051 <stream>) 180 481.33 T
(stream state <stream>) 180 468.33 T
(stream eof <stream>) 180 455.33 T
(stream close <stream>) 180 442.33 T
(stream \337ush <stream>) 180 429.33 T
(stream watch <stream> <what> <procName>) 180 416.33 T
(stream ignore <stream>) 180 403.33 T
2 F
(Examples:) 99 383.33 T
0 F
(\322var s [stream open kmap.def w]\323) 180 363.33 T
(Open the \336le \322kmap.def\323 for writing, creating it if it wasn\325) 243 351.33 T
(t) 509.34 351.33 T
(there before, and truncating any existing \336le.) 243 339.33 T
( \322stream write $line $s\323) 180 320.33 T
(W) 243 308.33 T
(rite the string in $line to the open stream.) 252.26 308.33 T
2 F
(Synopsis:) 99 289.33 T
0 F
-0.2 (This allows you to read, write, create, and otherwise manipulate \336les on the) 180 289.33 P
(host machine from Swat.) 180 276.33 T
2 F
(Notes:) 99 256.33 T
1 F
(u) 180 236.33 T
0 F
(Subcommands may be abbreviated uniquely) 198 236.33 T
(.) 401.01 236.33 T
1 F
(u) 180 217.33 T
0 F
(Streams are a precious resource, so you should be sure to always close) 198 217.33 T
(them when you are done. This means stream access should usually be) 198 205.33 T
(performed under the wings of a \322protect\323 command so the stream gets) 198 193.33 T
(closed even if the user types Ctrl+C.) 198 181.33 T
1 F
(u) 180 162.33 T
0 F
(Swat\325) 198 162.33 T
(s current directory changes as you change stack frames, with the) 223.2 162.33 T
(directory always being the one that holds the executable \336le for the) 198 150.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "235" 77
%%Page: "236" 78
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(236) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(patient to which the function in the current frame belongs. If the <\336le>) 198 641.33 T
(given to \322stream open\323 isn\325) 198 629.33 T
(t absolute, it will be affected by this.) 320.8 629.33 T
1 F
(u) 180 610.33 T
0 F
(The global variable \336le-init-dir contains the absolute path of the) 198 610.33 T
-0.53 (directory in which Swat was started. It can be quite useful when forming) 198 598.33 P
(the <\336le> argument to \322stream open\323.) 198 586.33 T
1 F
(u) 180 567.33 T
0 F
-0.37 (The second argument to \322stream open\323 is the access mode of the \336le. The) 198 567.33 P
(meanings of the 5 possible values are:) 198 555.33 T
3 F
(r) 210.58 536.33 T
0 F
(read-only access. The <\336le> must already exist.) 243 536.33 T
3 F
( w) 207.8 517.33 T
0 F
( write-only access. If <\336le> doesn\325) 243 517.33 T
(t already exist, it will be) 397.72 517.33 T
(created. If it does exist, it will be truncated.) 243 505.33 T
3 F
(a) 210.58 486.33 T
0 F
(append mode. The \336le is opened for writing only) 243 486.33 T
(. If <\336le>) 464.13 486.33 T
-0.2 (doesn\325) 243 474.33 P
-0.2 (t already exist, it will be created. If it does exist, writing) 271.34 474.33 P
(will commence at its end.) 243 462.33 T
3 F
(r+) 210.58 443.33 T
0 F
(read/write. The <\336le> must already exist. A single read/write) 243 443.33 T
-0.17 (position is maintained, and it starts out at the start of the \336le.) 243 431.33 P
3 F
(w+) 207.8 412.33 T
0 F
-0.64 (read/write. If <\336le> doesn\325) 243 412.33 P
-0.64 (t already exist, it will be created. If it) 362.1 412.33 P
(does exist, it will be truncated. A single read/write position is) 243 400.33 T
(maintained, and it starts out at the start of the \336le.) 243 388.33 T
1 F
(u) 180 369.33 T
0 F
(\322stream read\323 can read data from the stream in one of three formats:) 198 369.33 T
3 F
(line) 210.58 350.33 T
0 F
(Returns all the characters from the current position up to the) 243 350.33 T
(\336rst newline or the end of the \336le, whichever comes \336rst. The) 243 338.33 T
(newline, if seen, is placed at the end of the string as \134n. Any) 243 326.33 T
(other non-printable characters or backslashes are similarly) 243 314.33 T
(escaped.) 243 302.33 T
3 F
(list) 213.36 283.33 T
0 F
(Reads a single list from the stream, following all the usual) 243 283.33 T
(rules of T) 243 271.33 T
(cl list construction. If the character at the current) 286.08 271.33 T
-0.63 (read position is a left brace, this will read to the matching right) 243 259.33 P
(brace, bringing in newlines and other whitespace. If there is) 243 247.33 T
-0.08 (whitespace at the initial read position, it is skipped. Standard) 243 235.33 P
(T) 243 223.33 T
(cl comments before the start of the list are also skipped over) 248.86 223.33 T
(\050so if the \336rst non-whitespace character encountered is #, the) 243 211.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "236" 78
%%Page: "237" 79
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(237) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
-0.62 (characters up to the following newline or end-of-\336le will also be) 243 641.33 P
(skipped\051.) 243 629.33 T
3 F
(char) 213.36 610.33 T
0 F
-0.32 (This reads a single character from the stream. If the character) 243 610.33 P
(isn\325) 243 598.33 T
(t printable) 258.75 598.33 T
0 9 Q
(ASCII) 310.8 598.33 T
0 10 Q
(, it will be returned as one of the regular) 336.79 598.33 T
(T) 243 586.33 T
(cl backslash escapes.) 248.86 586.33 T
( If there\325) 198 567.33 T
(s nothing left to read, you will get an empty string back.) 237.07 567.33 T
1 F
(u) 180 548.33 T
0 F
(\322stream write\323 writes the string exactly as given, without interpreting) 198 548.33 T
(backslash escapes. If you want to include a newline or something of the) 198 536.33 T
(sort in the string, you\325ll need to use the \322format\323 command to generate) 198 524.33 T
(the string, or place the whole thing in braces and have the newlines in) 198 512.33 T
(there literally) 198 500.33 T
(.) 260.97 500.33 T
1 F
(u) 180 481.33 T
0 F
(While the syntax for \322stream print\323 is the same as for \322stream write\323,) 198 481.33 T
-0.66 (there is a subtle difference between the two. \322stream write\323 will write the) 198 469.33 P
(string as it\325) 198 457.33 T
(s given, while \322stream print\323 is intended to write out data to) 250.05 457.33 T
(be read back in by \322stream read list\323. Thus the command) 198 445.33 T
5 F
( stream write {foo biff} $s) 216 430.33 T
0 F
( would write the string \322foo biff\323 to the stream. In contrast,) 198 409.33 T
5 F
( stream print {foo biff} $s) 216 394.33 T
0 F
( would write \322{foo biff}\323 followed by a newline.) 198 373.33 T
1 F
(u) 180 354.33 T
0 F
(T) 198 354.33 T
(o ensure that all data you have written has made it to disk, use the) 203.75 354.33 T
(\322stream \337ush\323 command. Nothing is returned.) 198 342.33 T
1 F
(u) 180 323.33 T
0 F
( \322stream rewind\323 repositions the read/write position at the start of the) 198 323.33 T
(stream. \322stream seek\323 gives you \336ner control over the position. Y) 198 311.33 T
(ou can) 495.62 311.33 T
(set the stream to an absolute position \050obtained from a previous call to) 198 299.33 T
-0.56 (\322stream seek\323\051 by passing the byte number as a decimal number) 198 287.33 P
-0.56 (. Y) 488.4 287.33 P
-0.56 (ou can) 499.33 287.33 P
-0.69 (also move forward or backward in the \336le a relative amount by specifying) 198 275.33 P
(the number of bytes to move, preceded by a \322+\323, for forward, or a \322-\323, for) 198 263.33 T
(backward. Finally) 198 251.33 T
(, you can position the pointer at the end of the \336le by) 280.62 251.33 T
(specifying a position of \322end\323.) 198 239.33 T
1 F
(u) 180 220.33 T
0 F
(\322stream seek\323 returns the new read/write position, so a call of \322stream) 198 220.33 T
-0.27 (seek +0 $s\323 will get you the current position without changing anything.) 198 208.33 P
(If the seek couldn\325) 198 196.33 T
(t be performed, -1 is returned.) 281.71 196.33 T
1 F
(u) 180 177.33 T
0 F
(\322stream state\323 returns one of three strings: \322error\323, if there\325) 198 177.33 T
(s been some) 471.15 177.33 T
-0.46 (error accessing the \336le, \322eof\323 if the read/write position is at the end of the) 198 165.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "237" 79
%%Page: "238" 80
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(238) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(\336le, or \322ok\323 if everything\325) 198 641.33 T
(s \336ne. \322stream eof\323 is a shortcut for \336guring if) 312.27 641.33 T
(you\325ve reached the end of the \336le.) 198 629.33 T
1 F
(u) 180 610.33 T
0 F
-0.52 (\322stream close\323 shuts down the stream. The stream token should never be) 198 610.33 P
(used again.) 198 598.33 T
1 F
(u) 180 579.33 T
0 F
(\322stream watch\323 and \322stream ignore\323 are valid only on UNIX and only) 198 579.33 T
-0.05 (make sense if the stream is open to a device or a socket. \322stream watch\323) 198 567.33 P
(causes the procedure <procName> to be called whenever the stream is) 198 555.33 T
(ready for the access indicated by <what>, which is a list of conditions) 198 543.33 T
(chosen from the following set:) 198 531.33 T
3 F
(read) 210.58 512.33 T
0 F
( the stream has data that may be read.) 243 512.33 T
3 F
(write) 213.36 493.33 T
0 F
(the stream has room for data to be written to it.) 243.92 493.33 T
( When the stream is ready) 198 474.33 T
(, the procedure is called:) 319.12 474.33 T
5 F
( <procName> <stream> <what>) 216 459.33 T
0 F
( where <what> is the list of operations for which the stream is ready) 198 438.33 T
(.) 512.93 438.33 T
2 F
(See Also:) 99 419.33 T
0 F
(protect, source, \336le.) 180 419.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "238" 80
%%Page: "239" 81
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(239) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(string) 99 634.99 T
0 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
2 F
(switch) 99 612.98 T
2 10 Q
(Usage:) 99 595.32 T
0 F
(switch <thread-id>) 180 595.32 T
(switch [<patient>] [:<thread-num>]) 180 582.32 T
2 F
(Examples:) 99 562.32 T
0 F
(\322switch 3730h\323) 180 542.32 T
(Switches swat\325) 243 530.32 T
(s current thread to be the one whose handle) 310.61 530.32 T
0 9 Q
(ID) 516.18 530.32 T
0 10 Q
(is 3730h.) 243 518.32 T
( \322switch :1\323) 180 499.32 T
-0.11 ( Switches Swat\325) 243 499.32 P
-0.11 (s current thread to be thread number 1 for the) 314.85 499.32 P
(current patient.) 243 487.32 T
( \322switch parallel:2\323) 180 468.32 T
(Switches Swat\325) 243 456.32 T
(s current thread to be thread number 2 for the) 312.28 456.32 T
(patient \322parallel\323) 243 444.32 T
( \322switch write\323) 180 425.32 T
(Switches Swat\325) 243 413.32 T
(s current thread to be thread number 0 \050the) 312.28 413.32 T
(process thread\051 for the patient \322write\323) 243 401.32 T
( \322switch\323) 180 382.32 T
-0.62 ( Switches Swat\325) 243 382.32 P
-0.62 (s current thread to be the current thread on the) 313.83 382.32 P
(PC.) 243 370.32 T
2 F
(Synopsis:) 99 351.32 T
0 F
(Switches between applications/threads.) 180 351.32 T
2 F
(Notes:) 99 331.32 T
1 F
(u) 180 311.32 T
0 F
(T) 198 311.32 T
(akes a single argument of the form <patient>:<thread-num> or) 204.05 311.32 T
(<threadID>. W) 198 299.32 T
(ith the \336rst form, :<thread-num> is optional -- if the) 267.71 299.32 T
(patient has threads, the \336rst thread is selected. T) 198 287.32 T
(o switch to another) 426 287.32 T
-0.46 (thread of the same patient, give just :<thread-num>. Y) 198 275.32 P
-0.46 (ou can also switch) 446.14 275.32 P
-0.6 (to a patient/thread by specifying the thread handle) 198 263.32 P
0 9 Q
-0.54 (ID) 431.42 263.32 P
0 10 Q
-0.6 (.) 442.08 263.32 P
0 9 Q
-0.54 (NOTE) 447.05 263.32 P
0 10 Q
-0.6 (: The switch) 473.89 263.32 P
(doesn\325) 198 251.32 T
(t happen on the) 226.34 251.32 T
0 9 Q
(PC) 301.72 251.32 T
0 10 Q
(\321just inside swat.) 314.22 251.32 T
1 F
(u) 180 232.32 T
0 F
-0.34 (If you don\325) 198 232.32 P
-0.34 (t give an argument, it switches to the actual current thread in) 245.46 232.32 P
(the) 198 220.32 T
0 9 Q
(PC) 215.78 220.32 T
0 10 Q
(.) 228.28 220.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "239" 81
%%Page: "240" 82
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(240) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(symbol) 99 634.99 T
0 F
(This is a T) 163.88 634.99 T
(cl primitive. See \322T) 221.6 634.99 T
(ool Command Language,\323 Chapter) 326.52 634.99 T
(5.) 520.99 634.99 T
81 620.98 531 625.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 620.98 531 625.99 R
7 X
0 0 0 1 0 0 0 K
V
50 624.98 609.01 624.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 612.98 T
2 F
(symbolCompletion) 99 612.98 T
2 10 Q
(Usage:) 99 595.32 T
0 F
(var symbolCompletion [\0500|1\051]) 180 595.32 T
2 F
(Examples:) 99 575.32 T
0 F
(\322var symbolCompletion 1\323) 180 555.32 T
(Enable symbol completion in the top-level command reader) 243 543.32 T
(.) 515.99 543.32 T
2 F
(Synopsis:) 99 524.32 T
0 F
-0.78 (This variable controls whether you can ask Swat to complete a symbol for you) 180 524.32 P
(while you\325re typing a command. Completion is currently very slow and) 180 511.32 T
(resource-intensive, so you probably don\325) 180 498.32 T
(t want to enable it.) 363.9 498.32 T
2 F
(Notes:) 99 478.32 T
1 F
(u) 180 458.32 T
0 F
(Even when symbolCompletion is 0, \336le-name, variable-name, and) 198 458.32 T
(command- name completion are always enabled, using the keys) 198 446.32 T
(described below) 198 434.32 T
(.) 270.05 434.32 T
1 F
(u) 180 415.32 T
0 F
-0.49 (When completion is enabled, three keys cause the interpreter to take the) 198 415.32 P
(text immediately before the cursor and look for all symbols that begin) 198 403.32 T
(with those characters. The keys are:) 198 391.32 T
3 F
( Ctrl+D) 180 372.32 T
0 F
(Produces a list of all possible matches to the pre\336x.) 243 372.32 T
3 F
(Escape) 182.78 353.32 T
0 F
(Completes the command as best possible. If the characters) 243 353.32 T
(typed so far could be the pre\336x for more than one command,) 243 341.32 T
(Swat will \336ll in as many characters as possible.) 243 329.32 T
3 F
( Ctrl+]) 180 310.32 T
0 F
(Cycles through the list of possible symbols, in alphabetical) 243 310.32 T
(order) 243 298.32 T
(.) 266.88 298.32 T
2 F
(See Also:) 99 279.32 T
0 F
(top-level-read.) 180 279.32 T
81 262.98 531 267.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 262.98 531 267.98 R
7 X
0 0 0 1 0 0 0 K
V
50 266.98 609.01 266.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 254.97 T
2 F
(sym-default) 99 254.97 T
2 10 Q
(Usage:) 99 237.31 T
0 F
(sym-default [<name>]) 180 237.31 T
2 F
(Examples:) 99 217.31 T
0 F
(\322sym-default motif\323) 180 197.31 T
-0.78 (Make swat look for any unknown symbols in the patient named) 243 185.31 P
(\322motif\323 once all other usual places have been searched.) 243 173.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "240" 82
%%Page: "241" 83
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(241) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
-0.24 (Speci\336es an additional place to search for symbols when all the usual places) 180 641.33 P
(have been searched to no avail.) 180 628.33 T
2 F
(Notes:) 99 608.33 T
1 F
(u) 180 588.33 T
0 F
-0.36 (The named patient need not have been loaded yet when you execute this) 198 588.33 P
(command.) 198 576.33 T
1 F
(u) 180 557.33 T
0 F
(A typical use of this is to make whatever program you\325re working on be) 198 557.33 T
(the sym-default in your .swat \336le so you don\325) 198 545.33 T
(t need to worry about) 404.14 545.33 T
-0.57 (whether it\325) 198 533.33 P
-0.57 (s the current one, or reachable from the current one, when the) 247.25 533.33 P
(machine stops and you want to examine the patient\325) 198 521.33 T
(s state.) 438.6 521.33 T
1 F
(u) 180 502.33 T
0 F
(If you don\325) 198 502.33 T
(t give a name, you\325ll be returned the name of the current) 246.15 502.33 T
(sym-default.) 198 490.33 T
81 474.99 531 480 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 474.99 531 480 R
7 X
0 0 0 1 0 0 0 K
V
50 478.99 609.01 478.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 466.99 T
2 F
(sys\336les) 99 466.99 T
2 10 Q
(Usage:) 99 449.33 T
0 F
(sys\336les) 180 449.33 T
2 F
(Examples:) 99 429.33 T
0 F
(\322sys\336les\323) 180 429.33 T
2 F
(Synopsis:) 99 409.33 T
0 F
(Print out all open \336les from dos\325) 180 409.33 T
(s system \336le table.) 327.24 409.33 T
2 F
(Notes:) 99 389.33 T
0 F
(Normally) 180 389.33 T
0 9 Q
(SFT) 226.49 389.33 T
0 10 Q
( entries that aren\325) 244.17 389.33 T
(t in-use aren\325) 327.15 389.33 T
(t printed. If you give the) 387.9 389.33 T
-0.41 (optional argument \322all\323, however) 180 376.33 P
-0.41 (, all) 330.46 376.33 P
0 9 Q
-0.37 (SFT) 349.84 376.33 P
0 10 Q
-0.41 ( entries, including those that aren\325) 367.51 376.33 P
-0.41 (t) 524.74 376.33 P
(in-use, will be printed.) 180 363.33 T
2 F
(See Also:) 99 343.33 T
0 F
(geos\336les, sftwalk, fwalk.) 180 343.33 T
81 326.98 531 331.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 326.98 531 331.99 R
7 X
0 0 0 1 0 0 0 K
V
50 330.98 609.01 330.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 318.98 T
2 F
(systemobj) 99 318.98 T
2 10 Q
(Usage:) 99 301.32 T
0 F
(systemobj) 180 301.32 T
2 F
(Examples:) 99 281.32 T
0 F
(\322gentree [systemobj]\323) 180 261.32 T
(print the generic tree starting at the system\325) 243 249.32 T
(s root) 448.2 249.32 T
(\322pobject [systemobj]\323) 180 230.32 T
(print the system object) 243 218.32 T
2 F
(Synopsis:) 99 199.32 T
0 F
(Prints out the address of the uiSystemObj, which is the top level of the) 180 199.32 T
(generic tree.) 180 186.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "241" 83
%%Page: "242" 84
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(242) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.66 (This command is normally used with gentree as shown above to print out) 198 621.33 P
(the whole generic tree starting from the top.) 198 609.33 T
2 F
(See Also:) 99 590.33 T
0 F
(gentree, impliedgrab.) 180 590.33 T
81 573.99 531 579 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 573.99 531 579 R
7 X
0 0 0 1 0 0 0 K
V
50 577.99 609.01 577.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 565.99 T
2 F
(table) 99 565.99 T
0 F
(This is a T) 327.24 565.99 T
(cl primitive. See page 321.) 384.96 565.99 T
81 551.98 531 556.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 551.98 531 556.99 R
7 X
0 0 0 1 0 0 0 K
V
50 555.98 609.01 555.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 543.98 T
2 F
(target) 99 543.98 T
2 10 Q
(Usage:) 99 526.32 T
0 F
(target [<object>]) 180 526.32 T
2 F
(Examples:) 99 506.32 T
0 F
(\322target\323) 180 486.32 T
(print target hierarchy from the system object down) 243 486.32 T
( \322target -i\323) 180 467.32 T
(print target hierarchy from implied grab down) 243 467.32 T
( \322target ^l4e10h:20h\323) 180 448.32 T
(print target hierarchy from ^l4e10h:20h down) 243 436.32 T
( \322target [content]\323) 180 417.32 T
(print target hierarchy from content under mouse.) 243 405.32 T
2 F
(Synopsis:) 99 386.32 T
0 F
(Prints the target hierarchy below an object.) 180 386.32 T
2 F
(Notes:) 99 366.32 T
1 F
(u) 180 346.32 T
0 F
(If no argument is speci\336ed, the system object is used.) 198 346.32 T
1 F
(u) 180 327.32 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 327.32 P
(\337ags, see pobject.) 198 315.32 T
1 F
(u) 180 296.32 T
0 F
-0.14 (Remember that the object you start from may have the target within its) 198 296.32 P
(part of the hierarchy) 198 284.32 T
(, but still not have the target because something in) 292.81 284.32 T
(a different part of the tree has it.) 198 272.32 T
1 F
(u) 180 253.32 T
0 F
-0.65 (The variable \322printNamesInObjT) 198 253.32 P
-0.65 (rees\323 can be used to print out the actual) 349.81 253.32 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 241.32 T
(This variable defaults to false.) 198 222.32 T
2 F
(See Also:) 99 203.32 T
0 F
(focus, model, mouse, keyboard, pobject.) 180 203.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "242" 84
%%Page: "243" 85
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(243) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(targetobj) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(targetobj) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322targetobj\323) 180 577.33 T
(return object with target) 243 577.33 T
(\322pobj [targetobj]\323) 180 558.33 T
(do a pobject on the target object \050equivalent to \322pobj -t\323\051.) 243 546.33 T
2 F
(Synopsis:) 99 527.33 T
0 F
(Returns the object with the target.) 180 527.33 T
2 F
(See Also:) 99 507.33 T
0 F
(target, focus, focusobj, modelobj.) 180 507.33 T
81 490.98 531 495.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 490.98 531 495.99 R
7 X
0 0 0 1 0 0 0 K
V
50 494.98 609.01 494.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 482.98 T
2 F
(tbrk) 99 482.98 T
2 10 Q
(Usage:) 99 465.32 T
0 F
(tbrk <addr> <condition>*) 180 465.32 T
(tbrk del <tbrk>+) 180 452.32 T
(tbrk list) 180 439.32 T
(tbrk cond <tbrk> <condition>*) 180 426.32 T
(tbrk count <tbrk>) 180 413.32 T
(tbrk reset <tbrk>) 180 400.32 T
(tbrk address <tbrk>) 180 387.32 T
2 F
(Examples:) 99 367.32 T
0 F
( \322tbrk ObjCallMethodT) 180 347.32 T
(able\323) 285.88 347.32 T
(Count the number of times ObjCallMethodT) 243 335.32 T
(able\050\051 is called.) 446.84 335.32 T
(\322tbrk count 2\323) 180 316.32 T
(Find the number of times tally breakpoint number 2 was hit.) 243 304.32 T
( \322tbrk reset 2\323) 180 285.32 T
(Reset the counter for tbrk number 2 to 0.) 243 273.32 T
(\322tbrk list\323) 180 254.32 T
-0.69 (Print a list of the set tally breakpoints and their current counts.) 243 254.32 P
2 F
(Synopsis:) 99 235.32 T
0 F
-0.32 (This command manipulates breakpoints that tally the number of times they) 180 235.32 P
(are hit without stopping execution of the machine\321the breakpoint is noted) 180 222.32 T
(and the machine is immediately continued. Such a breakpoint allows for) 180 209.32 T
(real-time performance analysis, which is nice.) 180 196.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "243" 85
%%Page: "244" 86
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(244) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.22 (If you specify one or more <condition> arguments when setting the tally) 198 621.33 P
(breakpoint, only those stops that meet the conditions will be counted.) 198 609.33 T
1 F
(u) 180 590.33 T
0 F
-0.3 (The) 198 590.33 P
4 F
-0.3 (condition) 218.26 590.33 P
0 F
-0.3 ( argument is exactly as de\336ned by the \322brk\323 command, q.v) 261.21 590.33 P
-0.3 (..) 525.44 590.33 P
1 F
(u) 180 571.33 T
0 F
(When you\325ve set a tally breakpoint, you will be returned a token of the) 198 571.33 T
(form \322tbrk<n>\323, where <n> is some number) 198 559.33 T
(. Y) 398.18 559.33 T
(ou use this token, or just) 409.67 559.33 T
-0.08 (the <n>, if you\325re not a program, wherever <tbrk> appears in the Usage) 198 547.33 P
(description, above.) 198 535.33 T
1 F
(u) 180 516.33 T
0 F
(There are a limited number of tally breakpoints supported by the stub.) 198 516.33 T
(Y) 198 504.33 T
(ou\325ll know when you\325ve set too many) 203.93 504.33 T
(.) 371 504.33 T
1 F
(u) 180 485.33 T
0 F
(\322tbrk address\323 returns the address at which the tbrk was set, as a) 198 485.33 T
(symbolic address expression.) 198 473.33 T
2 F
(See Also:) 99 454.33 T
0 F
(brk, cbrk.) 180 454.33 T
81 437.99 531 443 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 437.99 531 443 R
7 X
0 0 0 1 0 0 0 K
V
50 441.99 609.01 441.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 429.99 T
2 F
(tcl-debug) 99 429.99 T
2 10 Q
(Usage:) 99 412.33 T
0 F
(tcl-debug top) 180 412.33 T
(tcl-debug next <tcl-frame>) 180 399.33 T
(tcl-debug prev <tcl-frame>) 180 386.33 T
(tcl-debug args <tcl-frame>) 180 373.33 T
(tcl-debug getf <tcl-frame>) 180 360.33 T
(tcl-debug setf <tcl-frame> <\337ags>) 180 347.33 T
(tcl-debug eval <tcl-frame> <expr>) 180 334.33 T
(tcl-debug complete <tcl-frame>) 180 321.33 T
(tcl-debug next-call) 180 308.33 T
2 F
(Examples:) 99 288.33 T
0 F
(\322var f [tcl-debug top]\323) 180 268.33 T
(Sets $f to be the frame at which the debugger was entered.) 243 256.33 T
(\322var f [tcl-debug next $f]\323) 180 237.33 T
-0.27 (Retrieves the next frame down \050away from the top\051 the T) 243 225.33 P
-0.27 (cl call) 502.09 225.33 P
(stack from $f.) 243 213.33 T
2 F
(Synopsis:) 99 194.33 T
0 F
(This provides access to the internals of the T) 180 194.33 T
(cl interpreter for the T) 385.69 194.33 T
(cl) 489.13 194.33 T
-0.34 (debugger \050which is written in T) 180 181.33 P
-0.34 (cl, not C\051. It will not function except after the) 322.88 181.33 P
(debugger has been entered.) 180 168.33 T
2 F
(See Also:) 99 148.33 T
0 F
(debug.) 180 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "244" 86
%%Page: "245" 87
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(245) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(text-\336xup) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
3 F
(1) 180 597.33 T
0 F
(Run geos under swat, run swat on the development system) 198 597.33 T
3 F
(2) 180 578.33 T
0 F
(Run GeoW) 198 578.33 T
(rite) 247.26 578.33 T
3 F
(3) 180 559.33 T
0 F
(Open the GeoW) 198 559.33 T
(rite \336le that needs \336xing) 270.23 559.33 T
3 F
(4) 180 540.33 T
0 F
(Set the breakpoint in swat:) 198 540.33 T
5 F
( patch text::CalculateRegions) 216 525.33 T
( => text-fixup) 216 511.33 T
0 F
( This will set a breakpoint at the right spot) 198 490.33 T
3 F
(5) 180 471.33 T
0 F
(T) 198 471.33 T
(urn on the error) 203.96 471.33 T
(-checking code in swat:) 278.21 471.33 T
5 F
( ec +text) 216 456.33 T
3 F
(6) 180 435.33 T
0 F
-0.06 (Enter a <space> into the document. This forces recalculation which will) 198 435.33 P
-0.32 (cause) 198 423.33 P
3 F
-0.33 (CalculateRegions\050\051) 226.2 423.33 P
0 F
-0.32 ( to be called which will cause text-\336xup to be) 325.09 423.33 P
(called.) 198 411.33 T
(If it worked, this code should patch together the \336le. If it\325) 180 392.33 T
(s not, you\325ll get a) 442.98 392.33 T
(FatalError right now) 180 379.33 T
(.) 276.86 379.33 T
3 F
(7) 180 359.33 T
0 F
(T) 198 359.33 T
(urn off the ec code and disable the \336xup breakpoint.) 203.96 359.33 T
5 F
( ec none) 216 344.33 T
( dis <breakpoint number>) 216 327.33 T
( continue) 216 310.33 T
3 F
(8) 180 289.33 T
0 F
(Delete the space and save the \336le.) 198 289.33 T
-0.77 (T) 180 270.33 P
-0.77 (o do another \336le, you can just enable the breakpoint once the new \336le is open) 185.75 270.33 P
(and turn on the ec code.) 180 257.33 T
2 F
(Synopsis:) 99 237.33 T
0 F
(Helps \336x up trashed GeoW) 180 237.33 T
(rite documents.) 303.71 237.33 T
81 220.98 531 225.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 220.98 531 225.99 R
7 X
0 0 0 1 0 0 0 K
V
50 224.98 609.01 224.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 212.98 T
2 F
(thaw) 99 212.98 T
2 10 Q
(Usage:) 99 195.32 T
0 F
(thaw [<patient>]) 180 195.32 T
(thaw :<n>) 180 182.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "245" 87
%%Page: "246" 88
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(246) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(thaw <patient>:<n>) 180 641.33 T
(thaw <id>) 180 628.33 T
2 F
(Examples:) 99 608.33 T
0 F
(\322thaw\323) 180 588.33 T
(Thaw the current thread.) 243 588.33 T
(\322thaw term\323) 180 569.33 T
(Allows the application thread for \322term\323 to run normally) 243 569.33 T
( \322thaw :1\323) 180 550.33 T
(Allows thread #1 of the current patient to run normally) 243 550.33 T
(\322thaw 16c0h\323) 180 531.33 T
(Allows the thread whose handle is 16c0h to run normally) 243.91 531.33 T
(.) 506.91 531.33 T
2 F
(Synopsis:) 99 512.33 T
0 F
(Thawing a thread restores its priority to what it was before the thread was) 180 512.33 T
(frozen.) 180 499.33 T
2 F
(See Also:) 99 479.33 T
0 F
(freeze.) 180 479.33 T
81 462.99 531 468 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 462.99 531 468 R
7 X
0 0 0 1 0 0 0 K
V
50 466.99 609.01 466.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 454.99 T
2 F
(thread) 99 454.99 T
0 F
(This is a T) 327.24 454.99 T
(cl primitive. See page 322.) 384.96 454.99 T
81 440.98 531 445.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 440.98 531 445.99 R
7 X
0 0 0 1 0 0 0 K
V
50 444.98 609.01 444.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 432.98 T
2 F
(threadname) 99 432.98 T
2 10 Q
(Usage:) 99 415.32 T
0 F
(threadname <id>) 180 415.32 T
2 F
(Examples:) 99 395.32 T
0 F
(\322threadname 21c0h\323) 180 375.32 T
(Returns the name of the thread whose handle id is 21c0h.) 243 363.32 T
2 F
(Synopsis:) 99 344.32 T
0 F
(Given a thread handle, produces the name of the thread, in the form) 180 344.32 T
(<patient>:<n>) 180 331.32 T
2 F
(Notes:) 99 311.32 T
0 F
(If the handle is not one of those swat knows to be for a thread, this returns) 180 311.32 T
(the string \322unknown.\323) 180 298.32 T
2 F
(See Also:) 99 278.32 T
0 F
(thread, patient.) 180 278.32 T
81 261.98 531 266.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 261.98 531 266.98 R
7 X
0 0 0 1 0 0 0 K
V
50 265.98 609.01 265.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 253.97 T
2 F
(threadstat) 99 253.97 T
2 10 Q
(Usage:) 99 236.31 T
0 F
(threadstat) 180 236.31 T
2 F
(Examples:) 99 216.31 T
0 F
(\322threadstat\323) 180 196.31 T
2 F
(Synopsis:) 99 177.31 T
0 F
(Provides information about all threads and various thread queues and) 180 177.31 T
(synchronization points in the system.) 180 164.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "246" 88
%%Page: "247" 89
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(247) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(ps.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(timebrk) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(timebrk <start-addr> <end-addr>+) 180 599.33 T
( timebrk del <timebrk>+) 180 586.33 T
( timebrk list) 180 573.33 T
( timebrk time <timebrk>) 180 560.33 T
( timebrk reset <timebrk>) 180 547.33 T
2 F
(Examples:) 99 527.33 T
0 F
(\322timebrk LoadResourceData -f\323) 180 507.33 T
(Calculate the time required to process a call to) 243 495.33 T
3 F
(LoadResourceData\050\051) 243 483.33 T
0 F
(.) 350.04 483.33 T
( \322timebrk time 2\323) 180 464.33 T
(Find the amount of time accumulated for timing breakpoint) 243 452.33 T
(number 2.) 243 440.33 T
( \322timebrk reset 2\323) 180 421.33 T
(Reset the counter for timebrk number two to zero.) 243 409.33 T
( \322timebrk list\323) 180 390.33 T
(Print a list of the set timing breakpoints and their current) 243 378.33 T
(counts and time.) 243 366.33 T
2 F
(Synopsis:) 99 347.33 T
0 F
(This command manipulates breakpoints that calculate the amount of time) 180 347.33 T
(executing between their starting point and a speci\336ed ending point. The) 180 334.33 T
(breakpoints also record the number of times their start is hit, so you can) 180 321.33 T
(\336gure the average amount of time per hit.) 180 308.33 T
2 F
(Notes:) 99 288.33 T
1 F
(u) 180 268.33 T
0 F
-0.04 (Y) 198 268.33 P
-0.04 (ou can specify a place at which timing should end either as an address) 203.93 268.33 P
(or as \322-f\323. If you use \322-f\323, timing will continue until the \336nish of the) 198 256.33 T
(routine at whose start you\325ve placed the breakpoint. Such a breakpoint) 198 244.33 T
(may only be set at the start of a routine, as the stub hasn\325) 198 232.33 T
(t the) 464.55 232.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "247" 89
%%Page: "248" 90
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(248) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(wherewithal to determine what the return address is at an arbitrary) 198 641.33 T
(point within the function.) 198 629.33 T
1 F
(u) 180 610.33 T
0 F
(Y) 198 610.33 T
(ou may specify more than one ending point. T) 203.93 610.33 T
(iming will stop when) 414.44 610.33 T
(execution reaches any of those points.) 198 598.33 T
1 F
(u) 180 579.33 T
0 F
-0.32 (When you\325ve set a timing breakpoint, you will be returned a token of the) 198 579.33 P
(form \322timebrk<n>\323, where <n> is some number) 198 567.33 T
(. Y) 415.22 567.33 T
(ou use this token, or) 426.71 567.33 T
-0.54 (just the <n>, if you\325re not a program, wherever <timebrk> appears in the) 198 555.33 P
(Usage description, above.) 198 543.33 T
2 F
(See Also:) 99 524.33 T
0 F
(brk, cbrk, tbrk.) 180 524.33 T
81 507.99 531 513 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 507.99 531 513 R
7 X
0 0 0 1 0 0 0 K
V
50 511.99 609.01 511.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 499.99 T
2 F
(timingProcessor) 99 499.99 T
2 10 Q
(Usage:) 99 482.33 T
0 F
(var timingProcessor [i86|i88|i286|V20]) 180 482.33 T
2 F
(Synopsis:) 99 462.33 T
0 F
(The processor for which to generate cycle counts.) 180 462.33 T
81 445.98 531 450.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 445.98 531 450.99 R
7 X
0 0 0 1 0 0 0 K
V
50 449.98 609.01 449.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 437.98 T
2 F
(tmem) 99 437.98 T
2 10 Q
(Usage:) 99 420.32 T
0 F
(tmem) 180 420.32 T
2 F
(Examples:) 99 400.32 T
0 F
(\322tmem\323) 180 380.32 T
(turn on memory tracing.) 243 380.32 T
2 F
(Synopsis:) 99 361.32 T
0 F
(T) 180 361.32 T
(race memory usage.) 186.05 361.32 T
2 F
(Notes:) 99 341.32 T
0 F
(The tmem command catches calls to DebugMemory) 180 341.32 T
(, printing out the) 416.5 341.32 T
(parameters passed \050move, free, realloc, discard, swapout, swapin, modify\051.) 180 328.32 T
81 311.98 531 316.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 311.98 531 316.98 R
7 X
0 0 0 1 0 0 0 K
V
50 315.98 609.01 315.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 303.98 T
2 F
(top-level) 99 303.98 T
2 10 Q
(Usage:) 99 286.31 T
0 F
(top-level) 180 286.31 T
2 F
(Examples:) 99 266.31 T
0 F
(\322top-level\323) 180 246.31 T
(Begin reading and interpreting T) 243 246.31 T
(cl commands in a nested) 395.9 246.31 T
(interpreter) 243 234.31 T
(.) 293.36 234.31 T
2 F
(Synopsis:) 99 215.31 T
0 F
(This is the top-most read-eval-print loop of the Swat T) 180 215.31 T
(cl interpreter) 430.15 215.31 T
(.) 490.88 215.31 T
2 F
(Notes:) 99 195.31 T
0 F
(This command will only return if the user issues the \322break\323 command.) 180 195.31 T
-0.1 (Otherwise it loops in\336nitely) 180 182.31 P
-0.1 (, reading and executing and printing the results) 307.32 182.31 P
(of T) 180 169.31 T
(cl commands.) 196.97 169.31 T
2 F
(See Also:) 99 149.31 T
0 F
(top-level-read.) 180 149.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "248" 90
%%Page: "249" 91
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(249) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(tundocalls) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(tundocalls [-acPCrR]) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322tundocalls -a\323 Print out all text undo calls) 180 577.33 T
(\322tundocalls -r\323 Print run undo calls) 180 558.33 T
(\322tundocalls -R\323 Print replace undo calls) 180 539.33 T
(\322tundocalls -c\323 Print info when undo information is created) 180 520.33 T
(\322tundocalls -cP\323 Print info about para attributes only) 180 501.33 T
(\322tundocalls -cC\323 Print info about char attributes only) 180 482.33 T
(\322tundocalls\323) 180 463.33 T
2 F
(Synopsis:) 99 444.33 T
0 F
(Prints out information about each undo call made to the text object.) 180 444.33 T
2 F
(See Also:) 99 424.33 T
0 F
(ptext, showcalls.) 180 424.33 T
81 407.98 531 412.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 407.98 531 412.99 R
7 X
0 0 0 1 0 0 0 K
V
50 411.98 609.01 411.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 399.98 T
2 F
(twalk) 99 399.98 T
2 10 Q
(Usage:) 99 382.32 T
0 F
(twalk) 180 382.32 T
2 F
(Examples:) 99 362.32 T
0 F
(\322twalk\323) 180 342.32 T
(print all the timers in the system.) 243 342.32 T
(\322twalk -o ui\323) 180 323.32 T
(print all the timers in the system for the ui thread.) 243 323.32 T
( \322twalk -a\323) 180 304.32 T
(print all the timers with the \322real\323 data for the time for time) 243 304.32 T
(remaining rather than maintaining a total.) 243 292.32 T
2 F
(Synopsis:) 99 273.32 T
0 F
(List all the timers in) 180 273.32 T
0 9 Q
(GEOS) 278.36 273.32 T
0 10 Q
(.) 304.53 273.32 T
81 256.98 531 261.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 256.98 531 261.98 R
7 X
0 0 0 1 0 0 0 K
V
50 260.98 609.01 260.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 248.97 T
2 F
(type) 99 248.97 T
0 F
(This is a T) 163.88 248.97 T
(cl primitive. See \322T) 221.6 248.97 T
(ool Command Language,\323 Chapter) 326.52 248.97 T
(5.) 520.99 248.97 T
81 234.97 531 239.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 234.97 531 239.97 R
7 X
0 0 0 1 0 0 0 K
V
50 238.97 609.01 238.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 226.97 T
2 F
(unalias) 99 226.97 T
2 10 Q
(Usage:) 99 209.3 T
0 F
(unalias <name>+) 180 209.3 T
2 F
(Examples:) 99 189.3 T
0 F
(\322unalias p\323) 180 169.3 T
(Removes \322p\323 as an alias for print.) 243 169.3 T
2 F
(Synopsis:) 99 150.3 T
0 F
(This removes an alias.) 180 150.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "249" 91
%%Page: "250" 92
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(250) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
-0.36 (In fact, this actually can be used to delete any command at all, including) 198 621.33 P
-0.64 (T) 198 609.33 P
-0.64 (cl procedures and Swat built-in commands. Once they\325re gone, however) 203.86 609.33 P
-0.64 (,) 526.08 609.33 P
(there\325) 198 597.33 T
(s no way to get them back.) 224.11 597.33 T
2 F
(See Also:) 99 578.33 T
0 F
(alias.) 180 578.33 T
81 561.99 531 567 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 561.99 531 567 R
7 X
0 0 0 1 0 0 0 K
V
50 565.99 609.01 565.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 553.99 T
2 F
(unassemble) 99 553.99 T
2 10 Q
(Usage:) 99 536.33 T
0 F
(unassemble [<addr> [<decode-args>]]) 180 536.33 T
2 F
(Examples:) 99 516.33 T
0 F
(\322unassemble cs:ip 1\323) 180 496.33 T
(Disassemble the instruction at) 243 484.33 T
0 9 Q
(CS) 387.47 484.33 T
0 10 Q
(:) 399.64 484.33 T
0 9 Q
(IP) 402.42 484.33 T
0 10 Q
( and return a string that) 412.08 484.33 T
(shows the values of the arguments involved.) 243 472.33 T
2 F
(Synopsis:) 99 453.33 T
0 F
(This decodes data as machine instructions and returns them to you for you) 180 453.33 T
(to display as you like. It is not usually typed from the command line.) 180 440.33 T
2 F
(Notes:) 99 420.33 T
1 F
(u) 180 400.33 T
0 F
(The return value is always a four) 198 400.33 T
(-element list:) 351.73 400.33 T
5 F
( {<symbolic-addr> <instruction> <size> <args>}) 216 385.33 T
0 F
-0.17 ( where <symbolic-addr> is the address expressed as an offset from some) 198 364.33 P
(named symbol, <instruction> is the decoded instruction \050without any) 198 352.33 T
(leading whitespace\051, <size> is the size of the instruction \050in bytes\051 and) 198 340.33 T
(<args> is a string displaying the values of the instruction operands, if) 198 328.33 T
(<decode-args> was given and non-zero \050it is the empty string if) 198 316.33 T
(<decode-args> is missing or 0\051.) 198 304.33 T
1 F
(u) 180 285.33 T
0 F
-0.25 (If <addr> is missing or \322nil\323, the instruction at the current frame\325) 198 285.33 P
-0.25 (s) 496.69 285.33 P
0 9 Q
-0.22 (CS) 503.85 285.33 P
0 10 Q
-0.25 (:) 516.02 285.33 P
0 9 Q
-0.22 (IP) 518.8 285.33 P
0 10 Q
(is returned.) 198 273.33 T
2 F
(See Also:) 99 254.33 T
0 F
(listi.) 180 254.33 T
81 237.98 531 242.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 237.98 531 242.99 R
7 X
0 0 0 1 0 0 0 K
V
50 241.98 609.01 241.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 229.98 T
2 F
(unbind-key) 99 229.98 T
2 10 Q
(Usage:) 99 212.32 T
0 F
(unbind-key <ascii_value>) 180 212.32 T
2 F
(Examples:) 99 192.32 T
0 F
(\322unbind-key \134321\323) 180 172.32 T
(Unbinds scroll-down key on host machine.) 243 160.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "250" 92
%%Page: "251" 93
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(251) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Unbinds the passed) 180 641.33 T
0 9 Q
(ASCII) 274.09 641.33 T
0 10 Q
( value.) 300.08 641.33 T
2 F
(See Also:) 99 621.33 T
0 F
(alias, bind-key) 180 621.33 T
(, get-key-binding.) 246.69 621.33 T
81 604.99 531 610 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 604.99 531 610 R
7 X
0 0 0 1 0 0 0 K
V
50 608.99 609.01 608.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 596.99 T
2 F
(undebug) 99 596.99 T
2 10 Q
(Usage:) 99 579.33 T
0 F
(undebug <proc-name>+) 180 579.33 T
2 F
(Examples:) 99 559.33 T
0 F
(\322undebug fooproc\323) 180 539.33 T
(Cease halting execution each time \322fooproc\323 is executing.) 243 527.33 T
2 F
(Synopsis:) 99 508.33 T
0 F
(Removes a T) 180 508.33 T
(cl breakpoint set by a previous \322debug\323 command.) 238.09 508.33 T
2 F
(See Also:) 99 488.33 T
0 F
(debug.) 180 488.33 T
81 471.98 531 476.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 471.98 531 476.99 R
7 X
0 0 0 1 0 0 0 K
V
50 475.98 609.01 475.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 463.98 T
2 F
(up) 99 463.98 T
2 10 Q
(Usage:) 99 446.32 T
0 F
(up [<frame offset>]) 180 446.32 T
2 F
(Examples:) 99 426.32 T
0 F
(\322up\323) 180 406.32 T
(move the frame one frame up the stack) 243 406.32 T
(\322up 4\323) 180 387.32 T
(move the frame four frames up the stack) 243 387.32 T
2 F
(Synopsis:) 99 368.32 T
0 F
(Move the frame up the stack.) 180 368.32 T
2 F
(Notes:) 99 348.32 T
1 F
(u) 180 328.32 T
0 F
(The <frame offset> argument is the number of frame to move up the) 198 328.32 T
-0.08 (stack. If none is speci\336ed then the current frame is moved up one frame.) 198 316.32 P
1 F
(u) 180 297.32 T
0 F
(This command may be repeated by pressing <Return>.) 198 297.32 T
2 F
(See Also:) 99 278.32 T
0 F
(backtrace, down.) 180 278.32 T
81 261.98 531 266.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 261.98 531 266.98 R
7 X
0 0 0 1 0 0 0 K
V
50 265.98 609.01 265.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 253.97 T
2 F
(value) 99 253.97 T
2 10 Q
(Usage:) 99 236.31 T
0 F
(value fetch <addr> [<type>]) 180 236.31 T
(value store <addr> <value> [<type>]) 180 223.31 T
(value hfetch <num>) 180 210.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "251" 93
%%Page: "252" 94
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(252) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(value hstore <addr) 180 641.33 T
(-list>) 267.18 641.33 T
(value hset <number) 180 628.33 T
(-saved>) 272.37 628.33 T
2 F
(Examples:) 99 608.33 T
0 F
(\322value fetch ds:si [type word]\323) 180 588.33 T
(Fetch a word from ds:si) 243 576.33 T
(\322value store ds:si 0 [type word]\323) 180 557.33 T
(Store 0 to the word at ds:si) 243 545.33 T
(\322value hfetch 36\323) 180 526.33 T
(Fetch the 36th address list stored in the value history) 243 514.33 T
(.) 490.44 514.33 T
(\322value hstore $a\323) 180 495.33 T
(Store the address list in $a into the value history) 243 483.33 T
(.) 468.41 483.33 T
(\322value hset 50\323) 180 464.33 T
(Keep track of up to 50 address lists in the value history) 243 452.33 T
(.) 497.67 452.33 T
2 F
(Synopsis:) 99 433.33 T
0 F
-0.44 (This command allows you to fetch and alter values in the target) 180 433.33 P
0 9 Q
-0.4 (PC) 472.3 433.33 P
0 10 Q
-0.44 (. It is also) 484.8 433.33 P
(the maintainer of the value history) 180 420.33 T
(, which you normally access via) 340.76 420.33 T
(@<number> terms in address expressions.) 180 407.33 T
2 F
(Notes:) 99 387.33 T
1 F
(u) 180 367.33 T
0 F
(\322value fetch\323 returns a value list that contains the data at the given) 198 367.33 T
(address. If the address has an implied data type \050it involves a named) 198 355.33 T
(variable or a structure \336eld\051, then you do not need to give the <type>) 198 343.33 T
(argument.) 198 331.33 T
(All integers and enumerated types are returned in decimal. 32-bit) 198 312.33 T
-0.12 (pointers are returned as a single decimal integer whose high 16 bits are) 198 300.33 P
(the high 16 bits \050segment or handle\051 of the pointer) 198 288.33 T
(. 16-bit pointers are) 429.69 288.33 T
(likewise returned as a single decimal integer) 198 276.33 T
(.) 404.51 276.33 T
(Characters are returned as characters, with non-printable characters) 198 257.33 T
-0.02 (converted to the appropriate backslash escapes \050for example, newline is) 198 245.33 P
(returned as \134n\051.) 198 233.33 T
-0.74 (Arrays are returned as a list of value lists, one element per element of the) 198 214.33 P
(array) 198 202.33 T
(.) 222.26 202.33 T
-0.45 (Structures, unions and records are returned as a list of elements, each of) 198 183.33 P
-0.51 (which is a 3-element list: {<\336eld-name> <type> <value>} <\336eld-name> is) 198 171.33 P
-0.28 (the name of the \336eld, <type> is the type token for the type of data stored) 198 159.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "252" 94
%%Page: "253" 95
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(253) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
0 10 Q
0 X
(in the \336eld, and <value> is the value list for the data in the \336eld,) 198 641.33 T
(appropriate to its data type.) 198 629.33 T
1 F
(u) 180 610.33 T
0 F
-0.53 (Y) 198 610.33 P
-0.53 (ou will note that the description of value lists is recursive. For example,) 203.93 610.33 P
-0.17 (if a structure has a \336eld that is an array) 198 598.33 P
-0.17 (, the <value> element in the list) 381.51 598.33 P
-0.59 (that describes that particular \336eld will be itself a list whose elements are) 198 586.33 P
-0.3 (the elements of the array) 198 574.33 P
-0.3 (. If that array were an array of structures, each) 312.17 574.33 P
(element of that list would again be a list of {<\336eld-name> <type>) 198 562.33 T
(<value>} lists.) 198 550.33 T
1 F
(u) 180 531.33 T
0 F
(The \322\336eld\323 command is very useful when you want to extract the value) 198 531.33 T
(for a structure \336eld from a value list.) 198 519.33 T
1 F
(u) 180 500.33 T
0 F
(As for \322value fetch\323, you do not need to give the <type> argument to) 198 500.33 T
1 F
(u) 180 481.33 T
0 F
( \322value store\323 if the <addr> has an implied data type. The <value>) 198 481.33 T
(argument is a value list appropriate to the type of data being stored, as) 198 469.33 T
(described above.) 198 457.33 T
1 F
(u) 180 438.33 T
0 F
(\322value hstore\323 returns the number assigned to the stored address list.) 198 438.33 T
(These numbers always increase, starting from 1.) 198 426.33 T
1 F
(u) 180 407.33 T
0 F
(If no address list is stored for a given number) 198 407.33 T
(, \322value hfetch\323 will) 407.27 407.33 T
(generate an error) 198 395.33 T
(.) 278.18 395.33 T
1 F
(u) 180 376.33 T
0 F
(\322value hset\323 controls the maximum number of address lists the value) 198 376.33 T
-0.68 (history will hold. The value history is a FIFO queue; if it holds 50 entries,) 198 364.33 P
(and the 51st entry is added to it, the 1st entry will be thrown out.) 198 352.33 T
2 F
(See Also:) 99 333.33 T
0 F
(addr) 180 333.33 T
(-parse, assign, \336eld.) 201.3 333.33 T
81 316.99 531 322 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 316.99 531 322 R
7 X
0 0 0 1 0 0 0 K
V
50 320.99 609.01 320.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 308.99 T
2 F
(var) 99 308.99 T
0 F
(This is a T) 163.88 308.99 T
(cl primitive. See \322T) 221.6 308.99 T
(ool Command Language,\323 Chapter) 326.52 308.99 T
(5.) 520.99 308.99 T
81 294.98 531 299.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 294.98 531 299.99 R
7 X
0 0 0 1 0 0 0 K
V
50 298.98 609.01 298.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 286.98 T
2 F
(varwin) 99 286.98 T
2 10 Q
(Usage:) 99 269.32 T
0 F
(varwin <num-lines> <var) 180 269.32 T
(-name>) 297.82 269.32 T
81 252.98 531 257.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 252.98 531 257.98 R
7 X
0 0 0 1 0 0 0 K
V
50 256.98 609.01 256.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 244.97 T
2 F
(view) 99 244.97 T
2 10 Q
(Usage:) 99 227.31 T
0 F
(view [<args>]) 180 227.31 T
2 F
(Examples:) 99 207.31 T
0 F
(\322view foo.goc\323) 180 187.31 T
(Bring up) 243 175.31 T
3 F
(foo.goc) 286.7 175.31 T
0 F
( in the source window) 323.37 175.31 T
(.) 423.01 175.31 T
2 F
(Synopsis:) 99 156.31 T
0 F
(V) 180 156.31 T
(iew a \336le in Swat.) 186.78 156.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "253" 95
%%Page: "254" 96
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(254) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(See Also:) 99 641.33 T
0 F
(view-line, view-default, srcwin.) 180 641.33 T
81 624.99 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 624.99 531 630 R
7 X
0 0 0 1 0 0 0 K
V
50 628.99 609.01 628.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 616.99 T
2 F
(view-default) 99 616.99 T
2 10 Q
(Usage:) 99 599.33 T
0 F
(view-default [patient]) 180 599.33 T
2 F
(Examples:) 99 579.33 T
0 F
(\322view-default spool\323) 180 559.33 T
( sets the default view to the spool patient.) 243 547.33 T
(\322view-default\323) 180 528.33 T
( turns off the view default.) 243 516.33 T
2 F
(Synopsis:) 99 497.33 T
0 F
-0.74 (If the view-default is set the view command will automatically look for source) 180 497.33 P
-0.55 (\336les from that patient. If it\325) 180 484.33 P
-0.55 (s not set then the view command will look for \336les) 303.36 484.33 P
(from the current patient.) 180 471.33 T
2 F
(See Also:) 99 451.33 T
0 F
(view) 180 451.33 T
(, view-line, srcwin.) 200.38 451.33 T
81 434.98 531 439.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 434.98 531 439.99 R
7 X
0 0 0 1 0 0 0 K
V
50 438.98 609.01 438.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 426.98 T
2 F
(view-size) 99 426.98 T
2 10 Q
(Usage:) 99 409.32 T
0 F
(view-size <number) 180 409.32 T
(-of-lines>) 266.99 409.32 T
2 F
(Examples:) 99 389.32 T
0 F
(\322view-size 10\323) 180 369.32 T
(Makes the view window 10 lines high.) 243 357.32 T
2 F
(See Also:) 99 338.32 T
0 F
(view) 180 338.32 T
(, view-line, view-default, srcwin.) 200.38 338.32 T
81 321.98 531 326.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 321.98 531 326.98 R
7 X
0 0 0 1 0 0 0 K
V
50 325.98 609.01 325.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 313.98 T
2 F
(vistree) 99 313.98 T
2 10 Q
(Usage:) 99 296.31 T
0 F
(vistree [<address>] [<instance \336eld>]) 180 296.31 T
2 F
(Examples:) 99 276.31 T
0 F
(\322vistree\323) 180 256.31 T
(print the visual tree starting at *) 243 256.31 T
0 9 Q
(DS:SI) 395.8 256.31 T
0 10 Q
(\322vistree -i\323) 180 237.31 T
(print the visual tree under the mouse) 243 237.31 T
(\322vistree @23 VI_optFlags\323) 180 218.31 T
(print the visual tree with opt \337ags) 243 206.31 T
(\322vistree *uiSystemObj\323) 180 187.31 T
(starts the visual tree at the root of the system.) 243 175.31 T
2 F
(Synopsis:) 99 156.31 T
0 F
(Print out a visual tree.) 180 156.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "254" 96
%%Page: "255" 97
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(255) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(The <address> argument is the address to an object in the generic tree.) 198 621.33 T
(This defaults to *) 198 609.33 T
0 9 Q
(DS:SI) 278.2 609.33 T
0 10 Q
(. The \324-i\325 \337ag for an implied grab may be used.) 302.71 609.33 T
1 F
(u) 180 590.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 590.33 P
(\337ags, see pobject.) 198 578.33 T
1 F
(u) 180 559.33 T
0 F
(The <instance \336eld> argument is the offset to any instance data within) 198 559.33 T
(the V) 198 547.33 T
(isInstance which should be printed out.) 222.56 547.33 T
1 F
(u) 180 528.33 T
0 F
-0.65 (The variable \322printNamesInObjT) 198 528.33 P
-0.65 (rees\323 can be used to print out the actual) 349.81 528.33 P
(app-de\336ned labels for the objects, instead of the class, where available.) 198 516.33 T
(This variable defaults to false.) 198 504.33 T
2 F
(See Also:) 99 485.33 T
0 F
(vup, gentree, impliedgrab, pobject.) 180 485.33 T
81 468.99 531 474 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 468.99 531 474 R
7 X
0 0 0 1 0 0 0 K
V
50 472.99 609.01 472.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 460.99 T
2 F
(vup) 99 460.99 T
2 10 Q
(Usage:) 99 443.33 T
0 F
(vup [<address>] [<instance \336eld>]) 180 443.33 T
2 F
(Examples:) 99 423.33 T
0 F
(\322vup\323) 180 403.33 T
(print the visual object at *) 243 403.33 T
0 9 Q
(DS:SI) 364.5 403.33 T
0 10 Q
( and its ancestors) 389.01 403.33 T
(\322vup @23 VI_optFlags\323) 180 384.33 T
(print the states of object @23 and its ancestors) 243 372.33 T
( \322vup -i\323) 180 353.33 T
( print the visual object under the mouse and the object\325) 243 353.33 T
(s) 496.91 353.33 T
(ancestors) 243 341.33 T
2 F
(Synopsis:) 99 322.33 T
0 F
(Print a list of the object and all of its visual ancestors.) 180 322.33 T
2 F
(Notes:) 99 302.33 T
1 F
(u) 180 282.33 T
0 F
(The <address> argument is the address to an object in the visual tree.) 198 282.33 T
(This defaults to *) 198 270.33 T
0 9 Q
(DS:SI) 278.2 270.33 T
0 10 Q
(. The \324-i\325 \337ag for an implied grab may be used.) 302.71 270.33 T
1 F
(u) 180 251.33 T
0 F
-0.82 (The special object \337ags may be used to specify <object>.  For a list of these) 198 251.33 P
(\337ags, see pobject.) 198 239.33 T
1 F
(u) 180 220.33 T
0 F
(The <instance \336eld> argument is the offset to any instance data within) 198 220.33 T
(the GenInstance which should be printed out.) 198 208.33 T
2 F
(See Also:) 99 189.33 T
0 F
(vistree, gup, gentree, impliedgrab, pobject.) 180 189.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "255" 97
%%Page: "256" 98
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(256) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(wait) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(wait) 180 617.33 T
2 F
(Examples:) 99 597.33 T
0 F
(\322wait\323) 180 577.33 T
(W) 243 577.33 T
(ait for the target) 252.07 577.33 T
0 9 Q
( PC) 328.93 577.33 T
0 10 Q
( to halt.) 343.93 577.33 T
2 F
(Synopsis:) 99 558.33 T
0 F
-0.52 (This is used after the machine has been continued with \322continue-patient\323 to) 180 558.33 P
-0.39 (wait for the machine to stop again. Its use is usually hidden by calling \322cont\323) 180 545.33 P
(or \322next\323.) 180 532.33 T
2 F
(Notes:) 99 512.33 T
1 F
(u) 180 492.33 T
0 F
(This returns 0 if the patient halted naturally \050because it hit a) 198 492.33 T
(breakpoint\051, and 1 if it was interrupted \050by the user typing Ctrl+C to) 198 480.33 T
(Swat\051.) 198 468.33 T
1 F
(u) 180 449.33 T
0 F
(Most procedures won\325) 198 449.33 T
(t need to use this function.) 297.81 449.33 T
2 F
(See Also:) 99 430.33 T
0 F
(brk, ibrk) 180 430.33 T
81 413.98 531 418.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.98 531 418.99 R
7 X
0 0 0 1 0 0 0 K
V
50 417.98 609.01 417.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.98 T
2 F
(waitForPatient) 99 405.98 T
2 10 Q
(Usage:) 99 388.32 T
0 F
(var waitForPatient [\0501|0\051]) 180 388.32 T
2 F
(Examples:) 99 368.32 T
0 F
(\322var waitForPatient 0\323) 180 348.32 T
(T) 243 336.32 T
(ells Swat to return to the command prompt after continuing) 248.75 336.32 T
(the machine.) 243 324.32 T
2 F
(Synopsis:) 99 305.32 T
0 F
(Determines whether the command-level patient-continuation commands) 180 305.32 T
(\050step, next, and cont, for example\051 will wait for the machine to stop before) 180 292.32 T
(returning.) 180 279.32 T
2 F
(Notes:) 99 259.32 T
1 F
(u) 180 239.32 T
0 F
-0.07 (The effect of this is to return to the command prompt immediately after) 198 239.32 P
-0.37 (having issued the command. This allows you to periodically examine the) 198 227.32 P
(state of the machine without actually halting it.) 198 215.32 T
1 F
(u) 180 196.32 T
0 F
(The output when the machine does stop \050e.g. when it hits a breakpoint\051) 198 196.32 T
(can be somewhat confusing. Furthermore, this isn\325) 198 184.32 T
(t fully tested, so it) 431.54 184.32 T
(should probably be set to 0 only in somewhat odd circumstances.) 198 172.32 T
2 F
(See Also:) 99 153.32 T
0 F
(step, next, cont, int.) 180 153.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "256" 98
%%Page: "257" 99
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(257) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(wakeup) 99 634.99 T
0 10 Q
-0.07 (W) 180 617.33 P
-0.07 (ait for a given patient/thread to wake up. WHO is of the same form as the) 189.07 617.33 P
-0.12 (argument to the \322switch\323 command, \050\322help switch\323 to \336nd out more\051. Leaves) 180 604.33 P
(you stopped in the kernel in the desired thread\325) 180 591.33 T
(s context unless something) 398.72 591.33 T
(else causes the machine to stop before the patient/thread wakes up. WHO) 180 578.33 T
(defaults to the current thread.) 180 565.33 T
81 548.98 531 553.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 548.98 531 553.99 R
7 X
0 0 0 1 0 0 0 K
V
50 552.98 609.01 552.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 540.98 T
2 F
(wakeup-thread) 99 540.98 T
0 10 Q
(Subroutine to actually wake up a thread. Argument WHO is as for the) 180 523.32 T
-0.65 (\322switch\323command. Returns non-zero if the wakeup was successful and zero if) 180 510.32 P
(the machine stopped for some other reason.) 180 497.32 T
81 480.98 531 485.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 480.98 531 485.98 R
7 X
0 0 0 1 0 0 0 K
V
50 484.98 609.01 484.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 472.98 T
2 F
(wclear) 99 472.98 T
2 10 Q
(Usage:) 99 455.31 T
0 F
(wclear) 180 455.31 T
2 F
(Synopsis:) 99 435.31 T
0 F
(Clears the current window) 180 435.31 T
(.) 302.41 435.31 T
81 418.97 531 423.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 418.97 531 423.98 R
7 X
0 0 0 1 0 0 0 K
V
50 422.97 609.01 422.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 410.97 T
2 F
(wcreate) 99 410.97 T
2 10 Q
(Usage:) 99 393.3 T
0 F
(wcreate <height>) 180 393.3 T
2 F
(Synopsis:) 99 373.3 T
0 F
-0.39 (Create a window of the given height and return a token for it. The window is) 180 373.3 P
(placed just above the command window) 180 360.3 T
(, if there\325) 361.88 360.3 T
(s room. If there aren\325) 402.81 360.3 T
(t that) 499.48 360.3 T
(many lines free on the screen, an error is returned.) 180 347.3 T
81 330.96 531 335.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 330.96 531 335.97 R
7 X
0 0 0 1 0 0 0 K
V
50 334.96 609.01 334.96 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 322.96 T
2 F
(wdelete) 99 322.96 T
2 10 Q
(Usage:) 99 305.29 T
0 F
(wdelete <window>) 180 305.29 T
2 F
(Synopsis:) 99 285.29 T
0 F
(Delete the given window) 180 285.29 T
(. All windows below it move up and the command) 292.8 285.29 T
(window enlarges.) 180 272.29 T
81 255.95 531 260.96 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 255.95 531 260.96 R
7 X
0 0 0 1 0 0 0 K
V
50 259.95 609.01 259.95 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 247.95 T
2 F
(whatat) 99 247.95 T
2 10 Q
(Usage:) 99 230.28 T
0 F
(whatat [<address>]) 180 230.28 T
2 F
(Examples:) 99 210.28 T
0 F
(\322whatat\323) 180 190.28 T
(name of variable at *) 243 190.28 T
0 9 Q
(DS:SI) 340.25 190.28 T
0 10 Q
(\322whatat ^l2ef0h:002ah\323) 180 171.28 T
(name of variable at the speci\336ed address) 243 159.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "257" 99
%%Page: "258" 100
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(258) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
(Print the name of the variable at the address.) 180 641.33 T
2 F
(Notes:) 99 621.33 T
1 F
(u) 180 601.33 T
0 F
-0.56 (The <address> argument speci\336es where to \336nd a variable name for) 198 601.33 P
-0.56 (. The) 506.01 601.33 P
(address defaults to *) 198 589.33 T
0 9 Q
(DS:SI) 293.38 589.33 T
0 10 Q
(.) 317.89 589.33 T
1 F
(u) 180 570.33 T
0 F
(If no appropriate variable is found for the address, \324*nil*\325 is returned.) 198 570.33 T
2 F
(See Also:) 99 551.33 T
0 F
(pobject, hwalk, lhwalk.) 180 551.33 T
81 534.99 531 540 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 534.99 531 540 R
7 X
0 0 0 1 0 0 0 K
V
50 538.99 609.01 538.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 526.99 T
2 F
(whatis) 99 526.99 T
2 10 Q
(Usage:) 99 509.33 T
0 F
(whatis \050<symbol>|<addr>\051) 180 509.33 T
2 F
(Examples:) 99 489.33 T
0 F
(\322whatis W) 180 489.33 T
(inColorFlags\323) 227.23 489.33 T
2 F
(Synopsis:) 99 469.33 T
0 F
(This produces a human-readable description of a symbol, giving whatever) 180 469.33 T
(information is pertinent to its type.) 180 456.33 T
2 F
(Notes:) 99 436.33 T
1 F
(u) 180 416.33 T
0 F
-0.52 (For type symbols \050e.g. structures and enumerated types\051, the description) 198 416.33 P
(of the type is fully displayed, so if a structure has a \336eld with an) 198 404.33 T
-0.76 (enumerated type, all the members of the enumerated type will be printed) 198 392.33 P
-0.22 (as well. Also all \336elds of nested structures will be printed. If this level of) 198 380.33 P
(detail isn\325) 198 368.33 T
(t what you need, use the \322pscope\323 command instead.) 243.02 368.33 T
1 F
(u) 180 349.33 T
0 F
(It\325) 198 349.33 T
(s not clear why you\325d need the ability to \336nd the type of an) 207.63 349.33 T
-0.09 (address-expression, since those types always come from some symbol or) 198 337.33 P
(other) 198 325.33 T
(, but if you want to type more, you certainly may) 221.7 325.33 T
(.) 445.44 325.33 T
81 309.98 531 314.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.98 531 314.99 R
7 X
0 0 0 1 0 0 0 K
V
50 313.98 609.01 313.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 301.98 T
2 F
(where) 99 301.98 T
0 F
(Common alias for \322backtrace\323) 366.76 301.98 T
81 287.98 531 292.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 287.98 531 292.98 R
7 X
0 0 0 1 0 0 0 K
V
50 291.98 609.01 291.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 279.97 T
2 F
(why) 99 279.97 T
2 10 Q
(Usage:) 99 262.31 T
0 F
(why) 180 262.31 T
2 F
(Examples:) 99 242.31 T
0 F
(\322why\323) 180 242.31 T
2 F
(Synopsis:) 99 222.31 T
0 F
(Print a description of why the system crashed.) 180 222.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "258" 100
%%Page: "259" 101
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(259) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Notes:) 99 641.33 T
1 F
(u) 180 621.33 T
0 F
(This must be run from within the frame of the FatalError function.) 198 621.33 T
(Sometimes) 198 609.33 T
0 9 Q
(GEOS) 251.53 609.33 T
0 10 Q
( is not quite there. In this case, step an instruction or) 277.7 609.33 T
(two and then try the \322why\323 command again.) 198 597.33 T
1 F
(u) 180 578.33 T
0 F
-0.43 (This simply looks up the enumerated constant for the error code in) 198 578.33 P
0 9 Q
-0.38 (AX) 504.2 578.33 P
0 10 Q
-0.43 ( in) 517.03 578.33 P
(the \322FatalErrors\323 enumerated type de\336ned by the geode that called) 198 566.33 T
-0.56 (FatalError) 198 554.33 P
-0.56 (. For example, if a function in the kernel called FatalError) 247.63 554.33 P
-0.56 (,) 510.95 554.33 P
0 9 Q
-0.5 (AX) 515.95 554.33 P
0 10 Q
(would be looked up in geos::FatalErrors, while if a function in your) 198 542.33 T
(application called FatalError) 198 530.33 T
(, this function would look it up in the) 331.72 530.33 T
(FatalErrors type de\336ned by your application. Each application de\336nes) 198 518.33 T
(this enumerated type by virtue of having included) 198 506.33 T
3 F
(ec.def) 432.09 506.33 T
0 F
(or) 465.34 506.33 T
3 F
( ec.goh) 474.78 506.33 T
0 F
(.) 510.8 506.33 T
1 F
(u) 180 487.33 T
0 F
(For certain fatal errors, additional information is provided by invoking) 198 487.33 T
(the command <patient>::<error code name>, if it exists.) 198 475.33 T
2 F
(See Also:) 99 456.33 T
0 F
(regs, backtrace, explain.) 180 456.33 T
81 439.99 531 445 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.99 531 445 R
7 X
0 0 0 1 0 0 0 K
V
50 443.99 609.01 443.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.99 T
2 F
(wintree) 99 431.99 T
2 10 Q
(Usage:) 99 414.33 T
0 F
(wintree <window handle> [<data \336eld>]) 180 414.33 T
2 F
(Examples:) 99 394.33 T
0 F
(\322wintree ^hd060h\323) 180 374.33 T
(print a window tree starting at the handle d060h) 243 362.33 T
2 F
(Synopsis:) 99 343.33 T
0 F
(Print a window tree starting with the root speci\336ed.) 180 343.33 T
2 F
(Notes:) 99 323.33 T
1 F
(u) 180 303.33 T
0 F
(The <window address> argument is the address to a window) 198 303.33 T
(.) 477.2 303.33 T
1 F
(u) 180 284.33 T
0 F
(The <data \336eld> argument is the offset to any instance data within a) 198 284.33 T
(window \050like W_ptrFlags\051.) 198 272.33 T
2 F
(See Also:) 99 253.33 T
0 F
(vistree, gentree.) 180 253.33 T
81 236.98 531 241.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 236.98 531 241.99 R
7 X
0 0 0 1 0 0 0 K
V
50 240.98 609.01 240.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 228.98 T
2 F
(winverse) 99 228.98 T
2 10 Q
(Usage:) 99 211.32 T
0 F
(winverse) 180 211.32 T
2 F
(Synopsis:) 99 191.32 T
0 F
(Sets the inverse-mode of the current window \050whether newly-echoed) 180 191.32 T
(characters are displayed in inverse video\051 on or off, depending on its) 180 178.32 T
(argument \0501 is on\051.) 180 165.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "259" 101
%%Page: "260" 102
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(260) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(wmove) 99 634.99 T
2 10 Q
(Usage:) 99 617.33 T
0 F
(wmove [\050+|-\051] <x-coord> [\050+|-\051] <y-coord>) 180 617.33 T
2 F
(Synopsis:) 99 597.33 T
0 F
(Moves the cursor for the current window) 180 597.33 T
(. T) 367.02 597.33 T
(akes two arguments: the new) 378.63 597.33 T
4 F
( x) 514.21 597.33 T
0 F
-0.04 (position and the new) 180 584.33 P
4 F
-0.04 ( y) 276.18 584.33 P
0 F
-0.04 ( position. These positions may be absolute or relative) 283.92 584.33 P
(\050absolute positions begin with + or -\051. If you attempt to move outside the) 180 571.33 T
-0.72 (current window) 180 558.33 P
-0.72 (, an error is generated. This command returns the new cursor) 251.13 558.33 P
(position as {) 180 545.33 T
4 F
(x y) 235.75 545.33 T
0 F
(}.) 248.53 545.33 T
81 528.98 531 533.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 528.98 531 533.99 R
7 X
0 0 0 1 0 0 0 K
V
50 532.98 609.01 532.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 520.98 T
2 F
(words) 99 520.98 T
2 10 Q
(Usage:) 99 503.32 T
0 F
(words [<address>] [<length>]) 180 503.32 T
2 F
(Examples:) 99 483.32 T
0 F
(\322words\323) 180 463.32 T
(lists 8 words at) 243 463.32 T
0 9 Q
(DS:SI) 316.17 463.32 T
0 10 Q
(\322words ds:di 16\323) 180 444.32 T
(lists 16 words starting at) 243 432.32 T
0 9 Q
(DS:DI) 361.55 432.32 T
2 10 Q
(Synopsis:) 99 413.32 T
0 F
(Examine memory as a dump of words.) 180 413.32 T
2 F
(Notes:) 99 393.32 T
1 F
(u) 180 373.32 T
0 F
-0.05 (The <address> argument is the address to examine. If not speci\336ed, the) 198 373.32 P
(address after the last examined memory location is used. If no address) 198 361.32 T
(has been examined then) 198 349.32 T
0 9 Q
(DS:SI) 313.02 349.32 T
0 10 Q
( is used for the address.) 337.53 349.32 T
1 F
(u) 180 330.32 T
0 F
-0.36 (The <length> argument is the number of bytes to examine. It defaults to) 198 330.32 P
(8.) 198 318.32 T
1 F
(u) 180 299.32 T
0 F
(Pressing <Return> after this command continues the list.) 198 299.32 T
2 F
(See Also:) 99 280.32 T
0 F
(bytes, dwords, imem, assign.) 180 280.32 T
81 263.98 531 268.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.98 531 268.98 R
7 X
0 0 0 1 0 0 0 K
V
50 267.98 609.01 267.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.97 T
2 F
(wpop) 99 255.97 T
2 10 Q
(Usage:) 99 238.31 T
0 F
(wpop) 180 238.31 T
2 F
(Synopsis:) 99 218.31 T
0 F
(Revert the current window to its previously pushed value.) 180 218.31 T
81 201.97 531 206.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 201.97 531 206.97 R
7 X
0 0 0 1 0 0 0 K
V
50 205.97 609.01 205.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 193.97 T
2 F
(wpush) 99 193.97 T
2 10 Q
(Usage:) 99 176.3 T
0 F
(wpush <window>) 180 176.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "260" 102
%%Page: "261" 103
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(261) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(!) 497.28 85 T
2 24 Q
(T) 438.77 110 T
(ools) 451.66 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
81 144 531 648 R
V
2 10 Q
0 X
(Synopsis:) 99 641.33 T
0 F
-0.82 (Switch to a new window) 180 641.33 P
-0.82 (, saving the old current-window) 287.49 641.33 P
-0.82 (. Use) 429.59 641.33 P
3 F
-0.85 (wpop) 454.07 641.33 P
0 F
-0.82 ( to go back) 482.41 641.33 P
(to the previous window) 180 628.33 T
(. All) 286.31 628.33 T
0 9 Q
( I/O) 305.39 628.33 T
0 10 Q
( goes through the current window) 321.06 628.33 T
(.) 476.06 628.33 T
81 598.99 531 604 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 598.99 531 604 R
7 X
0 0 0 1 0 0 0 K
V
50 602.99 609.01 602.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 590.99 T
2 F
(wrefresh) 99 590.99 T
2 10 Q
(Usage:) 99 573.33 T
0 F
(wrefresh) 180 573.33 T
2 F
(Synopsis:) 99 553.33 T
0 F
(Synchronizes the current window with the screen. This need only be) 180 553.33 T
(performed if you don\325) 180 540.33 T
(t echo a newline, as echoing a newline refreshes the) 277.59 540.33 T
(current window) 180 527.33 T
(.) 251.85 527.33 T
81 510.98 531 515.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 510.98 531 515.99 R
7 X
0 0 0 1 0 0 0 K
V
50 514.98 609.01 514.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 502.98 T
2 F
(wtop) 99 502.98 T
2 10 Q
(Usage:) 99 484.32 T
0 F
(wtop <\337ag>) 180 484.32 T
2 F
(Synopsis:) 99 464.32 T
0 F
-0.55 (Sets where windows go. If argument is non-zero, windows go at the top of the) 180 464.32 P
-0.6 (screen and work down. Else windows go at the bottom of the screen and work) 180 451.32 P
(up) 180 438.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "261" 103
%%Page: "262" 104
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Swat Reference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(262) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(!) 56.28 85 T
2 24 Q
(T) 102 110 T
(ools) 114.89 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "262" 104
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 104
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ Helvetica-Bold
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%+ Courier
%%EOF
