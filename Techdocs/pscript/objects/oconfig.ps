%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /NewCenturySchlbk-Roman FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /NewCenturySchlbk-Italic FMFONTDEFINE
6 0 /Courier-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1259" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
162 666.34 558 678.01 R
V
0 10 Q
0 X
(1259) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
(Not all users are the same; not all computing environments are the same.) 180 618.3 T
(Often some part of an application allows the user to tailor the) 180 605.3 T
0 9 Q
(UI) 467.64 605.3 T
0 10 Q
( to his) 478.64 605.3 T
(wishes. The user may wish to specify some preferences at a system level) 180 592.3 T
(rather than on an application level. T) 180 579.3 T
(o do this, the user will look to the) 352.26 579.3 T
(Preferences Manager application. The) 180 566.3 T
3 F
(con\336g) 358.71 566.3 T
0 F
( library provides mechanisms) 390.19 566.3 T
(for writing Preferences modules.) 180 553.3 T
(Normally the purpose of a Preferences module\325) 180 533.3 T
(s gadgetry is to set up some) 395.56 533.3 T
-0.27 (information in the user) 180 520.3 P
-0.27 (\325) 287.16 520.3 P
-0.27 (s .) 288.83 520.3 P
0 9 Q
-0.24 (INI) 298.75 520.3 P
0 10 Q
-0.27 ( \336le. If you are encouraging other developers to) 313.41 520.3 P
(take advantage of the con\336guration done by your module, be sure to) 180 507.3 T
(document the .) 180 494.3 T
0 9 Q
(INI) 248.52 494.3 T
0 10 Q
( \336le categories and keys affected.) 263.18 494.3 T
(There are three main tasks involved in writing a Preferences module:) 180 474.3 T
1 F
(u) 180 454.3 T
0 F
-0.22 (Providing a tree of) 198 454.3 P
0 9 Q
-0.2 (UI) 285.46 454.3 P
0 10 Q
-0.22 ( gadgetry which will act as the module\325) 296.45 454.3 P
-0.22 (s dialog box.) 474.57 454.3 P
1 F
(u) 180 435.3 T
0 F
(Providing information Preferences will use to construct the module\325) 198 435.3 T
(s) 509.3 435.3 T
(button.) 198 423.3 T
1 F
(u) 180 404.3 T
0 F
-0.82 (Providing any underlying functionality other than writing information to) 198 404.3 P
(the .) 198 392.3 T
0 9 Q
(INI) 218.56 392.3 T
0 10 Q
( \336le.) 233.22 392.3 T
-0.39 (The \336rst two routines exported in the module\325) 180 373.3 P
-0.39 (s .gp \336le will be responsible for) 388.55 373.3 P
-0.8 (carrying out the \336rst two of these tasks. The \336nal task is dif\336cult to de\336ne\321it) 180 360.3 P
(will depend on the nature of your module.) 180 347.3 T
-0.12 (Preferences modules written in C will need one more thing. T) 180 327.3 P
-0.12 (o indicate that) 461.55 327.3 P
(the preferences module is compatible with the standard) 180 314.3 T
0 9 Q
(GEOS) 440.02 314.3 T
0 10 Q
( 2.0) 466.19 314.3 T
-0.33 (Preferences Manager applications, the module will need a local.mk make\336le) 180 301.3 P
(for compilation, and that local.mk \336le should include a line that reads:) 180 288.3 T
4 F
(_PROTO = 2.0) 216 272.3 T
0 F
(For information about local.mk \336les, see \322Using T) 180 252.3 T
(ools,\323 Chapter) 408.57 252.3 T
(10 of the) 476.54 252.3 T
(T) 180 239.3 T
(ools book.) 185.75 239.3 T
(Before you try to write a Preference module, there are some things you) 180 219.3 T
-0.52 (should already know) 180 206.3 P
-0.52 (. Each module is a library) 273.99 206.3 P
-0.52 (, so be sure to read \322Libraries,\323) 389.21 206.3 P
(Chapter) 180 193.3 T
(C of the Concepts Book to \336nd out how to write a) 220.74 193.3 T
0 9 Q
(GEOS) 449.28 193.3 T
0 10 Q
( library) 475.45 193.3 T
(. T) 508.79 193.3 T
(o) 520.1 193.3 T
(use the information your module will write to the .) 180 180.3 T
0 9 Q
(INI) 413.36 180.3 T
0 10 Q
( \336le, read the) 428.02 180.3 T
(Initialization File section of \322Applications and Geodes,\323 Chapter) 180 167.3 T
(6 of the) 478.37 167.3 T
(Concepts Book.) 180 154.3 T
81 144 531 648 C
235.51 643.97 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.97 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
81 175 171 229 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
79.39 227.03 170.5 227.03 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
1 X
90 450 13.5 13.5 101.25 201.3 G
4 H
0 Z
90 450 13.5 13.5 101.25 201.3 A
0 0 0 1 0 0 0 K
81 181.18 121.5 221.68 R
1 H
0 X
N
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1259" 1
%%Page: "1260" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1260) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 14 Q
0 X
(22.1) 134.76 632 T
2 24 Q
(Providing the UI) 180 632 T
0 10 Q
-0.71 (There are two steps to providing the) 180 606.33 P
0 9 Q
-0.64 (UI) 345.2 606.33 P
0 10 Q
-0.71 ( for your preferences module. The \336rst) 356.2 606.33 P
(is to declare the objects you will use. The second is to write and export a) 180 593.33 T
(routine which returns the head of the tree of) 180 580.33 T
0 9 Q
(UI) 388.33 580.33 T
0 10 Q
( gadgetry) 399.33 580.33 T
(.) 441.74 580.33 T
2 14 Q
(22.1.1) 123.08 390 T
2 18 Q
(Designing the UI T) 180 390 T
(ree.) 337.03 390 T
0 10 Q
-0.42 (Preferences modules present a dialog box to the user) 180 366.33 P
-0.42 (. Y) 419.05 366.33 P
-0.42 (ou will need to design) 430.12 366.33 P
-0.59 (the dialog for your module. As you do so, you may \336nd objects of the following) 180 353.33 P
-0.31 (classes useful. Each of the following classes is based upon one of the Generic) 180 340.33 P
0 9 Q
(UI) 180 327.33 T
0 10 Q
( classes.) 191 327.33 T
(GenClass provides mechanisms by which objects will read and write values) 180 307.33 T
-0.21 (to the .) 180 294.33 P
0 9 Q
-0.19 (INI) 211.81 294.33 P
0 10 Q
-0.21 ( \336le. Pref- classes provide further functionality) 226.47 294.33 P
-0.21 (, such as storing an) 439.64 294.33 P
(\322original\323 value to revert to if the user decides to Cancel their changes.) 180 281.33 T
(The following Pref- classes are available:) 180 261.33 T
3 F
(PrefDialogClass) 180 241.33 T
0 F
-0.48 (This class specializes in acting as the root of a Pref module\325) 243 229.33 P
-0.48 (s) 510.76 229.33 P
0 9 Q
-0.43 (UI) 517.7 229.33 P
0 10 Q
-0.74 (tree. It has been set up to provide \322) 243 217.33 P
0 9 Q
-0.66 (OK) 398.99 217.33 P
0 10 Q
-0.74 (\323 and \322Cancel\323 triggers by) 412.99 217.33 P
-0.14 (default. It has a mechanism to restart the system on an Apply) 243 205.33 P
(if the module speci\336es that such a reset will be necessary to) 243 193.33 T
(implement the user) 243 181.33 T
(\325) 334.11 181.33 T
(s changes.) 335.78 181.33 T
-0.24 (Often a module will use a subclass of) 243 169.33 P
3 F
-0.24 (PrefDialogClass) 414.48 169.33 P
0 F
-0.24 ( as the) 498.18 169.33 P
(head of its) 243 157.33 T
0 9 Q
(UI) 293.75 157.33 T
0 10 Q
( tree\321often the subclass intercepts) 304.75 157.33 T
81 144 531 648 C
180 429 531 577 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Figure) 180 432.33 T
(22-) 213.34 432.33 T
(1) 227.79 432.33 T
5 F
(Preferences Dialog) 236.13 432.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  6508     
525 257 252 123.36 0 180 447.35 BEGINBITMAPBWc
j"
O304"Z"
7FO2F7J"
O3F4J"
O3F7J"
O3F4"j"
78O2F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4"Z#
7BO1FEF7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F47"b"J"
FE01O)F78,=#9$;"<"8"=%9"9%
FFFFFFFBFFFFFFFDFFE0199E7FE7FF9FF93CFCE7F3FFFC9FFC7FFEF4;";#=#J"9%
FDFCF99FFFDFFF9FFFEF78"8"=58"
7FFEO$1E0F0783FE0E070E70703C1FE7070FF39C1CE7F8391E0E0781C1FE1C8F07F873981E0FF8381E07F03C1C8F07399C1C8FF070F48"8#;58"
BFFF7FO%F8CCE67339FCE6739E673399CFE6739FF399CCE7F398CDE673399CFF3C6673FCF399CCE7F799CCE7F399CC66F33999CC7FE739F78"9";"8">">$;"<#;#9":"
DFBFF97FFFF9CE06E6F819E703FFF48"9$;$<%=#8"9":$9%>"
EFDFF7010707019C1FE603CCE6800307F399980CE673F78"9%:$<%A"9":";#8"="
F7EFF6807DFFF33F9FCFE67F9F7FFF99FC93F48"9%:$<"8"<":"9":"<"8"="
FBF7EF7F1DE673399973999C73E7CCC7F78)958"
FD55555553EFFFCDO$CE0F0783FE0E07C670739C1FE707C7F81C1E07F839CE067381C1FF8CE707FE38181E0FF819CE07F03C1CE703EF9C1CFFF079F48)S#T"R"R"Z8"
FEAAAAAAA9E7FFE5FE7F9FF9991F78)H">"<"J"
FF55555554F7FFF1F339F34F48)H#="<#I"
FEAAAAAAAA73FFF9F83F83F839F78)>#>#="<#I"
7F5500500579FFFDFFFFFFFFFFFFFFF48'J"
BFAABE29F2BCO+F78(J"
DFD51F14F95E7FO*F48(J"
EFEA8F8A7CAF3FO*F78(J"
F7F547C53E578FO*F48(8-J"
FBFAA2A29527C7E73839CC8FE003C1CE70783FJF78(9,J"
FDFD50050013F13399CC7FE7399CCE67339FJF48(<";"J"
FEFEA8028029F8FFF3KF78)@$J"
FF7F55555554FE7D70701FJF49(@$J"
BFAAAAAAAAFE3D7F33FFJF79'A$J"
DFDFFFFFFF7F673399JF49-9&J"
EFD55555553F9DFFF0383C0CC1E0707839JF79'8#UJ"
F7CAAA0AAABFFF3FJF49*J"
FBD55405553FCDFFE7O'F79'8#J"
FDCAA88AAA9FF07FO&F48,J"
0000D5544555000DFFFFFFO&F77*J"
FFFFFF4AA822AA87CFO)F4:&J"
9554115503O*F7:'J"
C0000C0001DBO)F4:'J"
E0000F00009BO)F7:'J"
FC000780003BO)F4:'J"
FE0001F00067O)F7:'J"
FFC0007F80C7O)F4;&J"
FFFF0FFF8FO)F7=$J"
C07E1FO)F4=$J"
F8003FO)F7=$J"
FF80FFO)F4>"J"
FFO*F7J"
O3F49#J"
F9E7O.F79#J"
F8C7O.F4:%J"
06199830O+F79'J"
F924C993E67FO*F4:%J"
E4C99860O+F7<$J"
9F27FFO*F4:%J"
E61C1070O+F79PJ"
O+F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4?#8+F#;$F"
FC0F9FCFFFF8399FFCFFF00CE01F1F9F3FF7@";$8#F#:$G"
E7F399FFFE7FFCFFFE7F8EF4A0D.B"
073981CE0FF3F99C1CE7FE7CC00783F9CC0F07FC1C3F843839CE0F07F7@'8$8$F,B"
E673399CCCE799CCCFCE7339E673F9CE7F913399CCE673F4:'?#;'b>"9#b":"
FE000000001CFC9F0000000001F09BFE7203F7;&;":":(R:"9"8$R":"
FFFFFFFFFC073F01FFFFFFFFFDF7039FCE0E03FBF4E":":"G"<$B"
FF9F3F7FCFE67FF7E':"G"<$B"
E7F39999CCCF3973CCE673F4@,:"D'8&B"
0F078181CE0FF8399C1CE783FC0C0F07FC1E383C0E0F07F7?ZC$VB"
1FFFFCCF4J"J"
HF98F7J#J"
HFC1C7F4J#J"
HFFFF7F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4<%9(9$8"9#;$J"
F7FF073FFEFFCF9FFFE67FFDFF81F3F83F9FF3E77F7<$:(9$<#<#J"
E3FE73FD7FC71FFFE7FFFAFF9FF39FF1C77F4<5:.I"
7C1FE7F3839CE7FFBBFC21C1E06673001FFF77F9FC1E0E1F9CC8C8E0E070FF0870739C1E0F7<"8#81<-H"
803399F7DFC899CCE667339CFFEFBF9FBCCE737C7CE6739FF22673399CCE67F4<$:$='<#9#8"J"
007F07EFEFCDDFDF83C0CFF3FCFCF3669F4F7;%:&;&?"9"8$H"
FE003FF3DFF7CF980CBFEF9F9CE006E6C1C07FF4;$;&;#8#>"<$H"
FF007FEFEFCF99FCDFDFFE73FEFCCFFFF7<$:#8";#8";"9"<$H"
80FE73F7DFCCEFBFCE99E69CCE67F4</9'90H"
C1FF07383C00FFFBBFCF9C1E0670F77F9FC0E0F8F83C0CFCFE0E73C7F3E70781C1E0E7F7<"Q#S"P9ZH"
E3FD7FFA/F4<"<#>"J"
F7FEFFFDIF7<"<"?"J"
FFFFFFIF4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"8#8$9#H"
@F3FCE7E7FF819F3FF7?j">";"9"I"
107FF9C8EF4?"Z"<3D"
7F0F3F83C0CC3C1E0E47F9CCE707F843839CE0F07F7J3D"
AF399CCE79CCE633F81CE673F913399CCE673F4J%8#9"E"
FCFE73F9CFF9BFEF7J";$8$D"
E80707F9FCE0E03F4J";#9$D"
E9F7F3FCFE67FF7?#8+8"A$9":$D"
7E07CFE7FFFC1CCFFE7FF807CF9CCE6767CCE673F4@";$8#?4D"
73F9CCFFFF3FF0383C0CF1C1E0E73F81E0707F9F383C0E0F07F7A+8$<%ZD"
839CC0E707F9FCCE0E73078387FFFFFFCF/F4A&8)>"J"
399CCE6673CCE667FF3E7339CFF9>F7I#9"?#J"
FE4F3FFC1F=F4E":"8#?#J"
031F0383FFFF=F7E":"8#J"
7F4F7FF9HF4E'8#J"
73F9CCCCE6677339HF7@1J"
0783C0C0E707FC1CCE0E73FF3F0783E3GF4?"ZJ"
7F0GF7J"
O3F4J"
O3F7J"
O3F4J"
O3F7?j"J"
103FF4?"J$8"8#8"J"
806F83FFCF99FC0F94F7?Z;#=#J"
2F39FCE7F6F4J-J"
AFC1CE0F070F0781FCE7072304F7J.I"
AF9CCCE6739E7339FCE6731F9E7F4J#9"9$J"
@F839F9C0E7335F7J%8"8"9"I"
@FF980CC0E0CFFFF4J(J"
A99FCCFE7F9E7F39F7;j+;"I"
901F7F399CCCE6739E733E7F4:Z0I"
;F7F83C1CE0F07C70781FCFF073FC67F7JYI"
@F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J%:&8$8#A"
@F3CFFF3FE7FFF9FF1FE79FCF9FF9F7J"@#:"9"A"
@F1FE7FFFFFF4J5="
@:F0CE0E1FE0783C1E070781FC38391FC391CE0FF819199CE0E47FF7J5="
@:F24CE73FE73399CCE67339FE7398FFE78CCCE7F398F99CCE63FFF4J#A"8&9">"
@F30C999CCCFFF39967F7>#;"9"9#>"9&=#:"?"
FCF9E0FCF9E78C30180CE603CE0FC0F4?";#=">"9&=#9$>"
71CE7FFFCC33F9FCE67FCFE7C9CFE7F7?3A%=":$>"
21C1CE70783FCE70783C1CE0E47070E7070399CCE673CCE3CE67F4?3<5>"
899CCE67339FCE673399CCCE63EF39E673398CE0F8FE7383C1E070781FE7839FFF19CCE0FF819F9F7E0E7F7:'9'8#:&Z>"
FE0000001CD9F39FC067F3F967F000000001F79F4;&8%8&:%J"
FFFFFFFCF970701FCEF80CC067E7FFFFFFFDBF7B$9%J"
7F33FFF9FCCFE7KF4B$8&J"
67339F3399CCCE67KF7@1J"
C1E070783FCE70783C1CE0E7F03C6707GF4>ZJ"
3FF7J"
O3F4J"
O3F7J"dD"
IC0F4J"S#C"
IDFFE7FF7J"
O3F4J"
O3F7J"
O3F4J"
O3F7J#J"
JC1CF5F4J"J"
J9C6F7<%9(9$8"C(F"
F7FF073FFEFFCF9FFFE67FFDFF81F39FC8F0703C0E0FF4<$:(9$G'F"
EBFE73FC7FC71FFFE7FFFAFF9FC66F3399CCE7F7<5D#J"
7DDFE7F3839CE7FF83FC21C1E06673001FFF77F9FC1E0E1CE704F4<"8#81E"9"F"
BE3399F01FC899CCE667339CFFEFBF9FBCCE736707F7<$:$='I"F"
7F7F07E00FCDDFDF83C0CFF3FFF4;%:&;&D";$D"
FEFFBFF3C007CF980CBFEF9F9CE09CE6667EF7;$;&;#8#C(F"
FF7F7FE00FCF99FCDFDFFE73C1CE70339C0E0EF4<$:#8";#8"DP%D"
BEFE73F01FCCEFBFCECFFFFFFEF7</9'G"H"
DDFF07383C00FFF83FCF9C1E0670F77F9FC0E0F8F9F4<"Q#S"PG#G"
EBFC7FFAFC1FF7<"<#>"J#G"
F7FEFFFD6FFFFF4<"<"?"J"
FFFFFFIF7J"dD"
IC0F4J"J"
IE07F7JVC"
IF4J"
O3F7J"
O3F4J"
O3F7J"
O3F4J"
O3F7;j#j":"
901F0<03F4:Z:"
O+F7J"
O3F4J"
O3F7"j#
7AO102F4"Z#
7BO1FEF7>'J"
800000000007O%F4>'J"
BFFFFFFFFFF7O%F7J"
O3F4>&>"a">"a">%>"
BE00000003F01F8003F0000007F7?%>"Q">"Q">%>"
FFFFFFF9F7CFBFF9F7FFFFF3F4?%J"
EAAAAAB9O&F7?%J"
DFFFFFF9O&F4?"8"J"
FFB9O&F7?"8"J#?"
DFF9IFC3FF4?%?#9"@":"@#?"
FE0E79B9E07F3F83F9F81FF7?%?#D"E#?"
DCE673F9E73F39F18FF4?%@&@'@#?"
FCE667B9383C1E0E1F3FC1C0F07839F3CFF7?%@&A&J"
DCE64FF93399CCE73FBCCE6733995F4?%?%C"8"A#?"
FCE61FB9E07399FCC0F3FF8FF7?%?&B"8#A"?"
DCE64FF9E1F01C1C079CF0191FF4?%?&E#@#?"
FCE667B9E4F3FFCCFFF3F9FE3FF7?%?&A"9#A"?"
DCE673F9E67399CCE73933997FF4?%?'@'@#?"
FE0E79B9E7383C1E0F8F83C0CE707839FFFFF7?%?Q@Q@#?"
DFFFFFF9FE7FF4?"8"J"
FFB9O&F7?"8"J#?"
DFF9IFFFFF4?%J"
EAAAAAB9O&F7?%J"
FFFFFFF9O&F4?%>"a">"a">%>"
00000001F00F8001F0000003F7>"B"E"E"A"
BFF8C0F8F4?%>S>S>%>"
FFFFFFFFFFFFFFFFF7J"
O3F4>'J"
800000000007O%F7>QJ"
O%F4J"
O3F7J"
O3F4"j"
78O2F7"Z"
7FO2F4J"
O3F7J"
O3F4J"
O3F7j"
O304
ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1260" 2
%%Page: "1261" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Providing the UI) 450.65 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1261) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
-0.72 (MSG_GEN_APPL) 243 641.33 P
-0.72 (Y) 317.68 641.33 P
0 10 Q
-0.8 ( to ensure valid user choices and to take other) 324.02 641.33 P
(appropriate actions.) 243 629.33 T
3 F
(PrefV) 180 610.33 T
(alueClass) 209.08 610.33 T
0 F
-0.65 (PrefV) 243 598.33 P
-0.65 (alue objects act like objects of) 268.74 598.33 P
3 F
-0.67 (GenV) 403.77 598.33 P
-0.67 (alueClass) 431.36 598.33 P
0 F
-0.65 (. However) 480.99 598.33 P
-0.65 (,) 526.09 598.33 P
(these objects have the ability to reset their values to that) 243 586.33 T
(originally stored in the .) 243 574.33 T
0 9 Q
(INI) 354.31 574.33 T
0 10 Q
( \336le \050in case the user wants to) 368.97 574.33 T
(cancel\051. They can handle only word-length values.) 243 562.33 T
3 F
(PrefItemGroupClass) 180 543.33 T
0 F
(Objects of this class act like GenItemGroups. In addition, this) 243 531.33 T
(class has the ability to store an \322original\323 value.) 243 519.33 T
3 F
(PrefStringItemClass) 180 500.33 T
0 F
-0.41 (A PrefItemGroup normally writes data about selected items in) 243 488.33 P
(the form of an integer) 243 476.33 T
(. However) 343 476.33 T
(, if its children are) 388.74 476.33 T
(PrefStringItem objects, the PrefItemGroup can instead write) 243 464.33 T
(out a special string associated with each PrefStringItem,) 243 452.33 T
(resulting in a more readable .) 243 440.33 T
0 9 Q
(INI) 379.69 440.33 T
0 10 Q
( \336le.) 394.35 440.33 T
3 F
(PrefBooleanGroupClass) 180 421.33 T
0 F
-0.3 (This class acts like) 243 409.33 P
3 F
-0.31 (GenBooleanGroupClass) 331.63 409.33 P
0 F
-0.3 ( with the ability) 455.33 409.33 P
(to store an \322original\323 value.) 243 397.33 T
3 F
(PrefDynamicListClass) 180 378.33 T
0 F
(Use objects of this class where you might otherwise use a) 243 366.33 T
(GenDynamicList. This class will not work together with) 243 354.33 T
(PrefStringItem objects.) 243 342.33 T
3 F
(PrefT) 180 323.33 T
(ocListClass) 208.71 323.33 T
0 F
-0.77 (This class presents an alphabetized list of \336les or driver names.) 243 311.33 P
-0.5 (It is used to provide lists of devices, such as the list of available) 243 299.33 P
(printers. It can also be used to show a list of \336les with a given) 243 287.33 T
(token in a given directory) 243 275.33 T
(.) 360.23 275.33 T
3 F
(T) 180 256.33 T
(itledGlyphClass) 186.97 256.33 T
0 F
-0.13 (This specialized subclass of GenGlyph shows both an icon and) 243 244.33 P
(a text moniker) 243 232.33 T
(. It is used to present the icon and name at the) 310.05 232.33 T
(top of a typical Preferences module dialog box.) 243 220.33 T
3 F
(PrefInteractionClass) 180 201.33 T
0 F
-0.06 (This class acts like) 243 189.33 P
3 F
-0.06 (GenInteractionClass) 332.59 189.33 P
0 F
-0.06 (, but also will relay) 439.99 189.33 P
(certain messages to its children which GenInteraction would) 243 177.33 T
(not. Those objects which will need to work with the .) 243 165.33 T
0 9 Q
(INI) 484.89 165.33 T
0 10 Q
( \336le) 499.55 165.33 T
(should receive these messages, so any Gen- objects which will) 243 153.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1261" 3
%%Page: "1262" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1262) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
-0.02 (work with the .) 243 641.33 P
0 9 Q
-0.02 (INI) 313.15 641.33 P
0 10 Q
-0.02 ( \336le and any Pref objects should be grouped) 327.81 641.33 P
(under PrefInteractions instead of GenInteractions.) 243 629.33 T
3 F
(PrefT) 180 610.33 T
(extClass) 208.71 610.33 T
0 F
-0.34 (This class behaves like) 243 598.33 P
3 F
-0.35 (GenT) 350.21 598.33 P
-0.35 (extClass) 377.43 598.33 P
0 F
-0.34 (, except that it will load) 420.95 598.33 P
(and save its value based upon that stored in the .) 243 586.33 T
0 9 Q
(INI) 470.27 586.33 T
0 10 Q
( \336le.) 484.93 586.33 T
3 F
(PrefT) 180 567.33 T
(riggerClass) 209.01 567.33 T
0 F
(This class acts as does GenT) 243 555.33 T
(riggerClass, but has an extra) 373.89 555.33 T
(action, so that two separate messages will be sent when the) 243 543.33 T
(trigger is activated.) 243 531.33 T
3 F
(PrefControlClass) 180 512.33 T
0 F
(This class acts as a cross between) 243 500.33 T
3 F
(PrefClass) 401.18 500.33 T
0 F
( and) 451 500.33 T
3 F
(GenControlClass) 243 488.33 T
0 F
(.) 331.15 488.33 T
3 F
(PrefT) 180 469.33 T
(imeDateControlClass) 209.38 469.33 T
0 F
(This class allows the user to set the system date and time.) 243 457.33 T
3 F
(PrefClass) 180 438.33 T
(PrefClass) 243 438.33 T
0 F
( is something like) 292.82 438.33 T
3 F
(GenClass) 377.1 438.33 T
0 F
(\321while never used) 425.43 438.33 T
(directly) 243 426.33 T
(, it is the superclass of all the other Pref- classes, and) 277.07 426.33 T
(sets up several of the mechanisms which all will use.) 243 414.33 T
-0.55 (There aren\325) 180 395.33 P
-0.55 (t any special restrictions on what sorts of objects appear in the) 232.43 395.33 P
0 9 Q
-0.49 (UI) 517.77 395.33 P
0 10 Q
(tree of a Preferences module. However) 180 382.33 T
(, the following rules will prove useful) 357.03 382.33 T
(in constructing modules that correctly write their data to the .) 180 369.33 T
0 9 Q
(INI) 467.05 369.33 T
0 10 Q
( \336le and) 481.71 369.33 T
(have a look and feel consistent with existing modules. For an example, see) 180 356.33 T
(Code Display) 180 343.33 T
(22-) 243.9 343.33 T
(1.) 258.35 343.33 T
1 F
(u) 180 323.33 T
0 F
(As a rule of thumb, the top object of the tree should be a PrefDialog.) 198 323.33 T
1 F
(u) 180 304.33 T
0 F
-0.01 (For a consistent look, the upper portion of the dialog should contain the) 198 304.33 P
(module\325) 198 292.33 T
(s icon, name, and some brief help text. This is normally done) 233.56 292.33 T
(using a T) 198 280.33 T
(itledGlyph and a GenT) 240.91 280.33 T
(ext object.) 345.94 280.33 T
1 F
(u) 180 261.33 T
0 F
-0.12 (Generally the easiest way to specify the .) 198 261.33 P
0 9 Q
-0.11 (INI) 386.06 261.33 P
0 10 Q
-0.12 ( \336le category and key to use) 400.73 261.33 P
(is by means of) 198 249.33 T
0 9 Q
(A) 266.35 249.33 T
(TTR_GEN_INIT_FILE_CA) 272.35 249.33 T
(TEGOR) 385.02 249.33 T
(Y) 417.69 249.33 T
0 10 Q
( and) 424.03 249.33 T
0 9 Q
(A) 198 237.33 T
(TTR_GEN_INIT_FILE_KEY) 204 237.33 T
0 10 Q
(. Assuming that the module will work with) 322.9 237.33 T
-0.47 (just one category) 198 225.33 P
-0.47 (, it is suf\336cient to declare an) 274.28 225.33 P
0 9 Q
-0.42 (A) 404.71 225.33 P
-0.42 (TTR_GEN_INIT_FILE) 410.71 225.33 P
0 10 Q
-0.47 ( \336eld) 506.38 225.33 P
(for just the top object of the module\325) 198 213.33 T
(s) 363.19 213.33 T
0 9 Q
(UI) 370.6 213.33 T
0 10 Q
( tree.) 381.6 213.33 T
1 F
(u) 180 194.33 T
0 F
(Because of the way messages are relayed, you should use) 198 194.33 T
(PrefInteractions instead of GenInteractions if any objects under the) 198 182.33 T
(interaction will be saving data to the .) 198 170.33 T
0 9 Q
(INI) 373.6 170.33 T
0 10 Q
( \336le.) 388.26 170.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1262" 4
%%Page: "1263" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Providing the UI) 450.65 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1263) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(22-) 147.13 629.31 T
(1 Pref Module UI Framework) 161.58 629.31 T
4 9 Q
(@object MPMDialogClass MPMRoot = {) 81 614.98 T
(GI_states = @default & ~GS_USABLE;) 125 603.98 T
(GI_comp = @MPMTitleGroup, @MPMOtherStuff;) 125 592.98 T
(HINT_INTERACTION_SINGLE_USAGE;) 125 581.98 T
(HINT_INTERACTION_COMPLEX_PROPERTIES;) 125 570.98 T
(HINT_ORIENT_CHILDREN_VERTICALLY;) 125 559.98 T
(HINT_LEFT_JUSTIFY_CHILDREN;) 125 548.98 T
(ATTR_GEN_HELP_CONTEXT = \322myPrefModule\323;) 125 537.98 T
(ATTR_GEN_INIT_FILE_CATEGORY = \322myPref\323;) 125 526.98 T
(}) 81 515.98 T
(@object GenInteractionClass MPMTitleGroup = {) 81 497.98 T
(GI_comp = @MPMTitle, @MPMHelp;) 125 486.98 T
(HINT_ORIENT_CHILDREN_HORIZONTALLY;) 125 475.98 T
(HINT_EXPAND_WIDTH_TO_FIT_PARENT;) 125 464.98 T
(}) 81 453.98 T
(@object TitledGlyphClass MPMTitle = {) 81 435.98 T
(GI_visMoniker = list {) 125 424.98 T
(@FontTextMoniker, @FontLCMoniker, @FontLMMoniker, @FontLCGAMoniker) 168.98 413.98 T
(}) 125 402.98 T
(}) 81 391.98 T
(@object GenTextClass MPMHelp = {) 81 373.98 T
(GI_attrs = @default | GA_READ_ONLY;) 125 362.98 T
(GTXI_text = \322Do such and such to configure your so and so.\322;) 125 351.98 T
(HINT_EXPAND_WIDTH_TO_FIT_PARENT;) 125 340.98 T
(/* Might want HINT_MINIMUM_SIZE */) 125 329.98 T
(}) 81 318.98 T
81 294.95 531 306.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 294.95 531 306.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 302.2 617.5 305.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(22.1.2) 123.08 254.95 T
2 18 Q
(UI Fetch Routine) 180 254.95 T
0 10 Q
-0.4 (Once you have constructed the) 180 231.28 P
0 9 Q
-0.36 (UI) 322.45 231.28 P
0 10 Q
-0.4 ( tree, write a routine that returns the head) 333.45 231.28 P
-0.71 (of that tree. This should be the \336rst routine exported in your module\325) 180 218.28 P
-0.71 (s .gp \336le.) 489.24 218.28 P
(The Preferences Manager knows to call the \336rst exported routine when it) 180 205.28 T
(needs the) 180 192.28 T
0 9 Q
(UI) 227.04 192.28 T
0 10 Q
( tree for a module.) 238.04 192.28 T
(The routine should have the parameters) 180 172.28 T
4 F
(optr _pascal \050void\051) 216 156.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1263" 5
%%Page: "1264" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1264) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
(For an example of such a routine, see Code Display) 180 641.33 T
(22-) 418.92 641.33 T
(2.) 433.37 641.33 T
81 608.98 531 621 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 608.98 531 621 R
7 X
0 0 0 1 0 0 0 K
V
76.5 616.23 617.5 619.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 602.31 T
(22-) 147.13 602.31 T
(2 UI Fetch Routine) 161.58 602.31 T
4 9 Q
(optr _pascal MPMGetPrefUITree\050void\051 { return \050@MPMRoot\051;}) 81 587.98 T
81 563.95 531 575.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 563.95 531 575.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 571.2 617.5 574.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(22.2) 134.76 513.95 T
2 24 Q
(Module Information Routine) 180 513.95 T
0 10 Q
(The Preferences application needs to know some information about each) 180 488.29 T
(module to present the trigger which allows the user into said module.) 180 475.29 T
(Preferences does this by calling the second routine exported by the module) 180 462.29 T
(library) 180 449.29 T
(. Preferences expects this routine to \336ll in a blank) 210.56 449.29 T
3 F
(PrefModuleInfo) 443.18 449.29 T
0 F
(structure.) 180 436.29 T
-0.43 (By \336lling in this structure, the routine describes the button that Preferences) 180 416.29 P
(will use to represent the module. Also, you may specify a User Level for the) 180 403.29 T
-0.13 (module, so it will be presented only to users with enough expertise to use it.) 180 390.29 P
(Y) 180 377.29 T
(ou may also ask that only users with certain privileges be given access to) 185.93 377.29 T
(the module; without the proper privileges, they won\325) 180 364.29 T
(t see it.) 421.32 364.29 T
(The Routine should have the parameters) 180 344.29 T
4 F
(void _pascal \050*PrefModuleInfo\051) 216 328.29 T
0 F
(For an example of such a routine, see Code Display) 180 308.29 T
(22-) 418.92 308.29 T
(3.) 433.37 308.29 T
81 275.93 531 287.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 275.93 531 287.95 R
7 X
0 0 0 1 0 0 0 K
V
76.5 283.18 617.5 286.68 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 269.26 T
(22-) 147.13 269.26 T
(3 Module Information Routine) 161.58 269.26 T
4 9 Q
(void _pascal MPMGetModuleInfo\050PrefModuleInfo *info\051) 81 254.93 T
({) 81 236.93 T
(/* We\325ll set up this structure for both system and user information */) 125 236.93 T
(moduleInfo->PMI_requiredFeatures = 0;) 125 225.93 T
(moduleInfo->PMI_prohibitedFeatures = 0;) 125 214.93 T
(moduleInfo->PMI_minLevel = UIIL_ADVANCED;) 125 203.93 T
(moduleInfo->PMI_maxLevel = UIIL_MAX_LEVEL;) 125 192.93 T
(moduleInfo->PMI_monikerList = @MPMMonikerList;) 125 181.93 T
(moduleInfo->PMI_monikerToken = moduleToken;) 125 170.93 T
(}) 81 159.93 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1264" 6
%%Page: "1265" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Module Information Routine) 372.11 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1265) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(const GeodeToken moduleToken = { \322MyPf\323, MANUFACTURER_ID_MINE };) 81 642 T
81 617.98 531 630 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 617.98 531 630 R
7 X
0 0 0 1 0 0 0 K
V
76.5 625.23 617.5 628.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
-0.03 (The following information about the) 180 304.31 P
3 F
-0.04 (PrefModuleInfo) 349.3 304.31 P
0 F
-0.03 ( structure may prove) 431.7 304.31 P
(useful when writing the routine:) 180 291.31 T
5 9 Q
(PMI) 180 271.31 T
5 10 Q
(_requiredFeatures) 198.16 271.31 T
0 F
(This \336eld allows you to restrict the display of your module so) 243 259.31 T
(that it will only appear to users which have certain privileges.) 243 247.31 T
0 9 Q
(PMF_HARDW) 191.12 228.31 T
(ARE) 251.62 228.31 T
0 10 Q
(These settings are for a user who has permissions to actually) 243 216.31 T
(change the con\336guration of the workstation. In a network) 243 204.31 T
(environment where users log in to different machines at) 243 192.31 T
(different times, normal users would be prevented from) 243 180.31 T
(changing the mouse drivers, video drivers, etc.) 243 168.31 T
81 144 531 648 C
99 317.98 531 613.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Figure) 180 334.64 T
(22-) 213.34 334.64 T
(2) 227.79 334.64 T
5 F
(Preferences Buttons) 236.13 334.64 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  10948    
406 303 345.69 257.99 0 178 350.32 BEGINBITMAPBWc
j"
O$02%Z&
7FFFFFFEJFDFFFFFFFBJ"
O$FAJ"
O$FBJ"
O$FA"j"
78O#7B(J,
7BFFFFFEFFFFFFA0FFFFFF7FFFFFDFFFFFF7AJ"
O$7BJ"
O$7A;#J#:%
F803BFC3FE0001F7BJ#:%
IF81FEFFFCF7A:$A"8"I#="
F80607FC0EF18F7B:$A"8"I#="
FFF0FFC618F3CF7A;#B,E":"
E01F6E3E3C7C6E3E3F0F87C3E00F7B7'B,A#8":"
C0003EE0183F706318C670633198CC6630FF8F677A:$A#9"9$B"="
FFC07FFC60600C66001F7B;#A(8$A#8":"
83FFC0607F18FE607F0FE3E0FE3F077A7'C&8$B"8":"
FFFFFE80678F6018C060600C00307F877B:$C&8#B#8":"
FF001F6318C66063CC66FFFFFF7A:$C+A#:%
FE003F3E187C603E318F87C3E0FE7FE0000F7B<"AgG"8"
7FF07A:$J#:%
FFFFFFBFFFFFFFFFF7BJ"
O$7AJ"
O$7BbJe"
A02"Z"
7BO#7BJ"
O$7AJ"
O$7BJ"
O$7AJ"
O$7B7$J"
FC0CCFO 7A8"J"
FFO!7B8$J"
FCCE0FM7A9#J"
CCE7M7B8"J"
1CO!7A8$J"
FCCC07M7B:"J"
FFM7A:"J"
E7M7B9#J"
CE0FM7A7%J"
FFFFFFFFM7B7#J"
F80FO!7A7#J"
FFFFO!7BJ"
O$7AJ"
O$7B"j"
78O#7A"Z"
7BO#7BJ"
O$7AJ"
O$7B7"j%
80M1E00077AB"@#@#@%
7E03F01F80DE55577B7"U"U#U#T&
9F3EF9F7CFBFFE5EA8A77A7"t"J$
9D5557D50577B7"UJ$
9BDA6277A7"?"J$
9FF7D56577B7#b#8"b"8"b"9"b"8$
9BF807FFC03FFE01F00FAF277A7#R#8*9)9"R"8$
9FFBF7F7D7EEEEFF7BFF7A83BFFFFFFFFBFFFFFFFDF7EF4F177B7"8#;"8)="H$
9BFE01FFCEFDDDDEE71FB507FD9F877A7&8"8"8):"8">$=$
9FFBC7FB803BF7CDFBBBBFDEFFD60F7FFEFC003F5F977B7,8):"8#=$=$
9BFB8011C1FFFC0001F7FFDBBF7777B9C7E81FBFFF7FF3FFC1BFC77A7':"9(:"9"=%<$
9FFB0006C3F9F77EEEEFF7BF107FDFBFEE00FE073FC77B7,8):"9$;&;$
9BFBE03DDCF080000BF7FFD6EFDDDDEE78E0FFEFDFF701D80007F87F7FE77A7"8)8(;"9%:&;$
9F31FFE000001BF7F7CEDFBBBBFDF621F7EFF6807DB000001F8F00077B7"8$8$8(;"9%:&;$
9B01FFF40FF7FFCDBBF7777BC9C3FBF7EF7F1D60018001F380077A7":"8$8(;):&;$
9FE807F7F7DBB7EEEEFFB703FD55555553EFFFCD40007C001C00077B7$8"8$9';)9(:$
9BFB80400FF7FF6EFDDDDE6C07FEAAAAAAA9E7FFE5F69FF083E0073F7FE77A7"8$8$8(;):'<"
9F07FF801BF7F7D6EDFBBBBD9A0FFF55555554F7FFF1E00E801E01CF7B7"8$:"9';):'<"
9B1FFF39FFDBBF777B641FFEAAAAAAAA73FFF9C0014001C0777A7"8$8$8(;):'<"
9F3FFF7E2BF7F7DDBB7EEEF6D83F7F5500500579FFFD8000C00030097B7,9';'<'<"
9BFBC0FFFF1F80001FF7FFB6EFDDEDB07FBFAABE29F2BCFFF020000C067A7(9"8(;(;(;"
9FFBCEFFFE0000F7CF6EDFBBDB60FFDFD51F14F95E7FC00C3E0003013F7B7,8'<(;(;"
9BFBCF7FFC0044000FF7FFD76DBBF7B6C1EFEA8F8A7CAF3F02A37FF000C0DF7A7%8&8'<(;(;"
9FFBCBFF01003FF7F7CBDBB7EF6D83F7F547C53E578F05517FFE00302F7B7,8'<(:);"
9BFBE7FFF80023847FF7FFD5DB6EFEDB07FBFAA2A29527C7F702A0FFFFC008177A7$9&8'<(;#8$;"
9FFBFB0FCE77F7F7CAF6EDFDB60FFDFD50050013F18001F8000B7B7,8(;(;#8$;"
9BFBFD1FFC0007DFF3F7FFC576DBBB6C1F7FFEFEA8028029F8E007FE10057A7,8'<):#8$;"
9FFBFE07FE000FFEEBF7F7D2BDBB7AD83CFF7F55555554FE7DFFFFFF20017B7"8$8$8'=(?#;"
9B03FFC0DFF7FFD95DB6F5B07EBFAAAAAAAAFE3DBE007A7"8)8'='@#;"
9F01FFE01FFE52F7F7DCAF6EED60FEDFDFFFFFFF7F41807B7"8)8(<(9#9$;"
9B007FF01FFF7737FFDE576DDAC1FEFFEFD55555553F9DF003FE80607A7";&8'=':$9#;"
9F3FFFC737F7DF2BDBD583FCF7CAAA0AAABFF7FC1FFE107B7&9$9%>(:#9#;"
9BFBFF00FFFFF7FF95DBAB07FBD55405553FCDFFE081887A7"8"8&9(;'<#8#;"
9F802FFFFC77F7CAF756087C87F0FDCAA88AAA9FFF0780447B7#b#9)9)9"`$:"
9BF807FFE57754173C73CE3F0000D5544555000DF08A220F7A7,9)8*9*:"
9FFFFFC1FFF07FFFC03FF7F2BEA82F39F19EBFFFFFFF4AA822AA87CFFFFFFFFEFFFF4512FF7B7":#9"9(<&<#8#;"
9BF8FFFFF95E507F39F9BF9554115503F801A29A7A7"8$:"9(<';#8$:"
9FC3FFF9F7FCAD60FE79FB3FC0000C0001DB87FFD0057F7B7":"8$8*;';"9$:"
9BFF987FFFC00052C0300808203FE0000F00009B7FEC1BBF7A7"8":$8*;';"9$:"
9FC7FCFFF7FFFF2987CE7BF33FFFFC000780003B9FF3E77F7B7"8":$:&=';"9$:"
9BE7FDFFFF950F9EF3E7FE0001F00067E3FC1EBF7A7"=$:'<';#8$:"
9FFFFFF7CA1F98F3CF1EFFC0007F80C7FC0FFFFD7F7B7"8"<":'=&;(:"
9BF5FFE43F84703F81FFFF0FFF8FFFF00FFAAAAAFF7A7"8"<":'?$<&;"
9FFBF7F17FFFFFFFFFC07E1FFFF00555557B7"8"<":#C$=%;"
9BFFFFFBFFF8003FFFFFFFFF7A7"?":"D$F"
9FF7FFFF80FF7B7"?"J"G"
9BFF4FF7A7"?"J"
9FF7F7B7$9&:%=#@$>"
9B3FE7E67FFFFE7FF81FFFE7F9E73CFFF37A7";#8":#?#@"@"
9FE7FF77FE7FF8C7187B7,;$>%=&<"
9B20C30C9070C26183867F7866430619983000C3830C017A7,;$='<&<"
9F266664733E664C99F2777330E7F924C993E67F24993264CC7B7"8$9#;#?%="8"="
9B04F330827F7039E4C998603C047A7"8$9#;#A$?"="
9F7CF326327773F09F27FF7C7B7,;$>%>$="
9B26730CF330726199827F786673E61C1070C3830C7A7"T":%=P=P<"
9FF7FFFFFFFF7B7"t"J"
9AAAAFF7A7"UJ"
9FF7B7"e"e#e#e9"
803E01F00F807A7"@"A"A"C"
A03FF8C07B7"Z"8"
BFMDE7AJ"
O$7B7"e"e#e#e9"
807E03F01F807A7"U"U#U#T#8"
9F3EF9F7CFBFFE5E7BJ"
O$7AJ"
O$7BJ"
O$7A8"b"9"b"8"b"9"b":"
F807C03FFE01F00F7B8"R"9"R"9R"9"R":"
FBF7DFBFFDF7EF7AE'J"
F80000000001=7BE'J">"
F3FFFFFFFFFC4FC7AE(I#="
E400000000027FF07F7BE'J#="
E8FFFFFFFFF94E00F7AE$8#I#="
EBFFF1FD3FE2177B;$=(I#="
C00007E9FFC0FF9FFD1FC60B7A;$?%J#="
BFFFE3807000054C5157B9&>&<'>#="
F80000FFCBF73875FFD580000000001F86FB7A9&=(;'>#="
FBFFFEFF95EAF73C3000010F7FFFFFFFFFEF857F7B="=';#:">#="
29E9A37E37FFD1FEFFF78AFF7A9&=';";"=#>"
FD55557F5DE85211357D51FDFBFC017B9&>&;";">#="
FE2AAABEBDA077269E91FBFD00BF7A9&>&;";"=$="
FF95555D7D0477255D01F7FEFE015F7B:&=&;";#<$="
E00002F800AA66069E11EFFF7DFF0ABF7A:'<&;"<"=#="
FFE557F8547F0676055FC1DFBD15FF7B;%<';"a"=">"
CAAFF2A9E9A804261FD1801D1B7A:&=%<"Q"=">"
F800000052AB1807FFBFDD157B:&<&<)=">"
F7FFFFFE25EA010106BEB55555555555555D1B7A:"8#=&;)<#>"
EFFC4A520F055D51AAAAAAAAA800009DFE357B:"8#<&<)=">"
DFF915E9A41FE6AAB55555555060005D2B7A:"8#=%<)=">"
BFF2AAA81F554DAAAAAAAAA800809D377B:&<&<)=">"
AAAAAAA455E8587FA68CB5555555507EBC5D2B7A:';';)<#>"
5555554A2AFFE9407F461FD1AAAAAAAAA800009DFC377B:&<';&8"=">"
0000001414E890EE800005A0000000005D6B7A9(;';&8"=">"
FEFFFFFFC42A1FE910CD07EBD1AAAAAAAAA89D577B9"9#<';)=">"
FD9414E8609A000001A000000000AAA85D6F7A8#9%:';)9"b":"
F803A4280007E9200440C0312AAAAAAAA80000C1F00F7B8*:':*9*:"
FFFAABE82292403FFFE860084081C1FFB55555555555555FFFFFFFF86FFFFFFFFF7A9(;';r"=">"
FB55D44128801FE94060400F01AA8FD77B9(;&<"a"=">"
FAAAAAAA95003FE840F880188007AF7A9(:*9"<"<#>"
F80000002A007FC0090EFE001E01003FC003F1DF7B9(:*9"<";$>"
FA8AAAA29403FFFFE83F1B0003F10FFFFC01FE71BF7A9'<';"C#>"
F95555552807E9381D000011FE215F7B9'<$8";"C#>"
FA8AAAA2900FE4000002FF03BF7A9'<(;R;$>"
F80000000007F3FFFFFFBAEC1FFF057F7B9'<"`I#>"
FC0FFFFE08FFF88AFF7A9P=#J"?"
FF807FD7BF":"H"?"
E0FFFF7AD$P"9":"=%="
07FFF9CFF0E7F07FFF9F7BD"A#A#?"
33E67FF3FF7A:%=)9)<%<"
83FCFF9F0E199824C3320E0FE7E1803066430C9FE1830C1F7B:#>*:(;&<"
99FF07E4C93323993264CFCC99932666647FF0CC9999FF7A;&:&C#;"8#<"
24830C327F3304F8732704FFF39C3F7B:':%>#:"?#<"
831C999991FF3264C933E64C7C9F9F7A:&;*9(=%<"
9F3C9998130706199827C382660FF0E1999070730CE199C83F7B=#;*9(<P<"
99F3FFFFFFFF3FFFFFFFFFFFFFFFF3FFFFFF7A=#>#J"
CC33F87F?7B:P>#@"J"
FFFFFF47AJ"
O$7BJ"
O$7A7"e"e#e#e9"
803E01F00F807B7"@"A"A"C"
A03FF8C07A7"Z"8"
BFMDE7BJ"
O$7A7"e"e#e#e9"
807E03F01F807B7"U"U#U#T#8"
9F3EF9F7CFBFFE5E7AJ"
O$7BJ"
O$7AJ"
O$7B8"b"9"b"8"b"9"b":"
F807C03FFE01F00F7A8*9*9R"9$@"
FBFFFFFFEEFFFFFFF7DE8FF52277050F1DBFFDF7FFF47B<#<*G&;"
C47FDD47CA2A0A121E3B3F71CE739CE77A<#>';"B&;"
823FA4142489BC76E7618C6318C67B<#<):$A&;"
011FDE8F134913A878ECFE77FC41084210847A;$<):%@`;"
FE008FDF1F50275050F1D8FF301D0B7B;$<);$@':"
FC0047CFFCA2A0A121E3B0C7E1FD7C739CE739CF7A;$<);%?':"
F80023D7FA4742489BC760EF3FF83F786318C6318F7B;$<);%?':"
F0FE11DBF131913A878EC0FFDFF6DF70421084210F7A;$<*;$?`;"
E7FF88DDF508F505171D80BFFFF01F7B;%;)=#=#@"
CDFFE47FDEFA1C7A120A3B01F7DFF8007A;%;)F&="
9BFFF23FDF7C247C89A47603F55EAEA8807B;%<(=">(;"
27FFF91FBF481FA973EC07EFE0000000BFFFFF7A:&<(=">(;"
FE4DFFFC8FDF708FD291D80FE7DFFFFFFE0000007B:#8"<(="@$="
FC8B47EFA1C46523B01FF7FDFE407A:&<(F&="
F893FFFE23F7C2423DC7603FD01FFA7E007B:#8"<(F):"
F04611FBF4871E8EC07FD7DFF7BE1FFFFFEF7A:&<(>"=):"
E189FFFF08FDF70F1F1D80FFEFD45F07CE0000000F7B:';'?"=%>"
C113BFFF047FFEFA123FFB01CFD7DE53F67A:';'?$;):"
81237FFF023FFF7C247FF603DFFFC7D45CA96E1FFFFFEF7B:'<&>"8";$?"
0044EFFF011FBF481FEC07F6BBD7D9547A:'<&>"8";'<"
8188DFFF023FDF708FD80FF445D45AAA1E000F7B:'<&>"8";'<"
C1113BFF047FEFA1C7B01FF739D7D9541E1FF77A:'<&=&;'<"
E12237FF08FFF7C247603FE00FC01F7DD01AA83E1F0F7B:&=&<';'<"
F0C44EFE11FBF48EC07FFC0AA7CAA1F9DFF9503E1EFF7A:&=&<'<';"
F8888DDA23FDF71D80FFF15557D5FE05FCA83E1F00077B:&=%='<#8#;"
FC91113647FEFA3B01EAAAB7CFFFFBFE50FFFB7A:&=%='<#9";"
FE62226C8FFF7C7603F155F7D7FF07FF00077B8*9*9)<"8#;"
F80000244488000007C000003FEC0000003F00001FF7CFE00001F8FEFF7A8*9*8*:%>"
FFFFFF9888123FFFFFFFFFFFDFD83FFFFFFFFFFFFE600000107FFFEFFFFE3C7B;%>$=';(;"
C911247FEFB07FFF9FFFFAA1FFF7FFFFF81FF01F7A;%>$>%<(;"
E722C8FFF760FFC7FFF503F80000003FEEEF7B;$?#?%;#9%:"
F0EE11F801F03FE00FF000000EE80F7A;$?#?%;#9%:"
F80023FF03FC00003FFFFFFFE007FF7B;$@"?%=';"
FC0047FFFFE007FFC00001FFCAA77A;$J#>';"
FE008F5FFFFFFFFFFFFD5537B;$J#;"
FF011FCC0037A<#J#;"
823FCD5537B<#J#;"
C47FCE0037A<#J%;"
EEFFAE3FFF0077B;%;%9":)9*:"
860C387FFCE7FFF3E7CF3FCFCFFFC3FF3FE7FFFE7FCDFC1FFFCF7A;%<"A"9"?$<"
3279933FCFFF99C9FCFF7B;"8"<(;(:(;"
3EFF9E199070E193073041860F99321FC38667E3FCF8707A;%<(;(:):"
2219987F3CC993267C8E67264CCCFF99333F99324FE2FC33264F7B;%<#8#>#?&;"
32799F3F9C09609ECE1F1FC9FCF0207A="=#8"?#?':"
93CCF94CCFCF4FC8FCF3E7CF7B;%<(:)9);"
860C387FE61C1070E09F07C1304CE41FC3839FE0C38667E67CF8707A;%;):$P9T:"
FFFFFFFFFFFFFF9FFFFFFFFFFFFE7F7BF#?#J"
FC3FF0FF57AF#?"J"
FFFFFF67BJ"
O$7AJ"
O$7B7"e"e#e#e9"
803E01F00F807A7"@"A"A"C"
A03FF8C07B7"Z"8"
BFMDE7AJ"
O$7B7"e"e#e"D"
807E03F01F7A7"U"U#U"D"
9F3EF9F7CF7BJ"
O$7AJ"
O$7BJ"
O$7A8"b"9"b"8"b"F"
F807C03FFE017B8"R"9):R"F"
FBF7D5555FFFF95557F9FD7A;">)<%H"
C7CAAA9FFFFAAAABF2F800000F7B;">)<%H"
D9D5553FFFFD555585F7FFFFF77A;#=*;"8"H"
DE7FCAAABFFFFCAAAA2ABFEFFB7B;#=)<"8"H"
D79FC5557FFFFE554155DFFD7A;#=#9$<"8"H"
D1E7D02AA80AA9BFFE7B;#=$8$<&G"
D479DF80FF015509000000007F7A<#=(<%H"
1E7FFF000000AAA8497FFFFFFF7B;$<(<#9"G"
D8679FDBFFFF55555542FEFFBF7A;$<(=%H"
DE7987C177FFAAAAAAB2F00000077B;$<(=%H"
D79E83C4A2EE44444430E57D40FB7A;#=)<%H"
D1E6C111440000003809CAFEA0FD7B;$<)<$I"
D478A3C3B39055113A2E49D57D407A<"=(=$I"
1EC7B3CA20A27256CAFEA07B<#>&=$I"
6783D41A517872D57D407A<">(<$I"
79B00A7EA2727269CAFEA07B<"=)<$I"
7EC583D47E50027421D57D407AD)<$I"
C632007EA3063428CAFEA07B="<'>$I"
A3C3B18066538ED57D407AD*;$I"
C7D3C256A3EE4C493FCAFEA07BD)<$I"
C553F65153EE3E79D57D407A:#>(=$I"
F814C453FE64A3C05ECAFEA07B:#>)<$I"
E7D4C553806953B06E78D57D407A:#>)<$I"
EBF4C1B33E34037A2E7ECAFEA07B:#>)<$I"
D5F0C7F2DE55F1B22E78D57D407A:"@(<%H"
DBF36E55F2B85E76C0007FA97B:"@(?"H"
DFF12E2BF2B03F88557A8*9):#9$F"
F8000FE00080000007DFF15E07F17A7E700000A980017B8*9*8%8$F"
FFFFE7C03E87FFFFFFCFF2FE7FF3FFE180BFFFFFFEE053BFFF7A:$=#9$<%H"
F8015FD07FFC1E03F00000077B:$=)<%H"
FC02AFCF80FFFFFE03E00FFFFFFFFF7A:$=*:#9"G"
FF06DFC07F000001FC00003FFF7F7F7B;#=*;&G"
FEFFF800FFFFFE000FFFFF800000000F7A;$<(=&G"
FF7F07FFC000000001FFFEEFAA80077B<">#8">&G"
3EFF80FFFDE75140037A<#>$?&G"
C00FFFFFFFFBF80AA0077B<"J&G"
E05F7FFF5580F7A<#J&G"
F83F4E0000000077B<#J"
FFFFJ7A"9#8":+;&G"
03F87FF3FC0FFFE7FE1FFF33FE7F327CFFFFFF03"9#=#8%=#H$
7BF33FFF3FFCCFFFF333FC00077A;%;*;%H"
F0CC83833C38267CF99921860F3260C3877B:&;*<$H"
F8664C99333F93E4FE19993332674C99337A:#>&8">"G$
FF263C1861FFC93E817FE77B:"?%9"<$G$
F3399F24FC32864C9FBFC77A:&;)<%F$
F870E099833C10667E1C033986CE60C3873FC77B:P;T;%F$
FFFFFFFF9F877AJ$
O"5F977BJ$
O"AF277AJ$
O"4F177BJ$
O"A6277A7"e"e#e"B$
803E01F00F56577B7"@"A"J$
A03FF87A8A77A7"ZB$
BFB50577BJ$
O"AAA77A7"j%
80M1E00077B7Z"
O#7AJ"
O$7BJ"
O$7A"j"
78O#7B%Z&
7FFFFFFDJFBFFFFFFFAJ"
O$FBJ"
O$FAJ"
O$FBj"
O$02
ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1265" 7
%%Page: "1266" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1266) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
(PMF_SYSTEM) 191.12 641.33 T
0 10 Q
(These changes are more complex and potentially more) 243 629.33 T
-0.45 (damaging than the basic \322user\323 changes, therefore, some users) 243 617.33 P
(may be prevented from using these settings.) 243 605.33 T
0 9 Q
(PMF_NETWORK) 191.12 586.33 T
0 10 Q
(These are network settings. Generally only the system) 243 574.33 T
(administrator should see these settings, as they affect the) 243 562.33 T
(entire network.) 243 550.33 T
0 9 Q
(PMF_USER) 191.12 531.33 T
0 10 Q
-0.76 (These are basic user changes. These settings are the most basic) 243 531.33 P
(and least dangerous, controlling user preferences such as) 243 519.33 T
(background color and screen saver types.) 243 507.33 T
5 9 Q
(PMI) 180 488.33 T
5 10 Q
(_prohibitedFeatures) 198.16 488.33 T
0 F
-0.25 (This \337ag \336eld allows you to restrict the display of your module) 243 476.33 P
(so that it will only appear to users who) 243 464.33 T
5 F
(don\325) 425.63 464.33 T
(t) 444.52 464.33 T
0 F
( have certain) 448.04 464.33 T
-0.54 (privileges. If you had two modules, advanced) 243 452.33 P
0 9 Q
-0.48 (UI) 449.27 452.33 P
0 10 Q
-0.54 ( and simple) 460.27 452.33 P
0 9 Q
-0.48 (UI) 514.98 452.33 P
0 10 Q
-0.54 (,) 525.97 452.33 P
-0.66 (one might be for the sysop and the other for normal users\321this) 243 440.33 P
(would keep the sysop\325) 243 428.33 T
(s Preferences from being \322cluttered\323 by) 342.83 428.33 T
(the plain user module. The \337ags available are the same as) 243 416.33 T
(those for) 243 404.33 T
5 9 Q
(PMI) 285.96 404.33 T
5 10 Q
(_requiredFeatures) 304.12 404.33 T
0 F
(.) 387.79 404.33 T
5 9 Q
(PMI) 180 385.33 T
5 10 Q
(_minLevel) 198.16 385.33 T
0 F
-0.11 (This \336eld allows you to specify the minimum User UI Level in) 243 373.33 P
(which your module should appear) 243 361.33 T
(. If the module\325) 398.56 361.33 T
(s UI is very) 467.64 361.33 T
-0.54 (complicated and will confuse novice users, use this \336eld to hide) 243 349.33 P
(it from them.) 243 337.33 T
5 9 Q
(PMI) 180 318.33 T
5 10 Q
(_maxLevel) 198.16 318.33 T
0 F
(;) 246.86 318.33 T
-0.25 (This \336eld allows you to specify the) 243 306.33 P
5 F
-0.25 (maximum) 402.59 306.33 P
0 F
-0.25 ( User UI Level in) 449.44 306.33 P
(which your module should appear) 243 294.33 T
(. If you have two versions of) 398.56 294.33 T
(your module\321one for advanced users and one for novice) 243 282.33 T
(users\321use this \336eld to hide the novice module from the) 243 270.33 T
(advanced users.) 243 258.33 T
5 9 Q
(PMI) 180 239.33 T
5 10 Q
(_monikerList) 198.16 239.33 T
0 F
(Like the moniker list for an application, this will provide the) 243 227.33 T
(icon shown on the main Preferences screen. Create this using) 243 215.33 T
(the Icon editor) 243 203.33 T
(. Y) 309.66 203.33 T
(ou should have icon formats 64x40 color) 321.15 203.33 T
(,) 505.06 203.33 T
(64x40 monochrome, and 64x18 monochrome.) 243 191.33 T
5 9 Q
(PMI) 180 172.33 T
5 10 Q
(_monikerT) 198.16 172.33 T
(oken) 246.89 172.33 T
0 F
(A four character token and manufacturer) 243 160.33 T
0 9 Q
(ID) 436.88 160.33 T
0 10 Q
( by which to) 447.55 160.33 T
(recognize the module.) 243 148.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1266" 8
%%Page: "1267" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Important Messages) 422.63 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1267) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 14 Q
0 X
(22.3) 134.76 632 T
2 24 Q
(Important Messages) 180 632 T
0 10 Q
(If you\325re going to create a subclass for use in a Preferences module, the) 180 606.33 T
-0.09 (following messages will be of special interest, as they signal that the user is) 180 593.33 P
(carrying out certain important actions.) 180 580.33 T
0 9 Q
(MSG_PREF_INIT) 180 560.33 T
0 10 Q
(When a dialog box containing Pref objects is brought up, each) 243 548.33 T
(object will receive) 243 536.33 T
0 9 Q
(MSG_PREF_INIT) 327.82 536.33 T
0 10 Q
(. Developers can subclass) 402.73 536.33 T
0 9 Q
(MSG_PREF_INIT) 243 524.33 T
0 10 Q
( to perform basic initialization procedures.) 318.83 524.33 T
0 9 Q
(MSG_MET) 180 505.33 T
(A_LOAD_OPTIONS) 226.17 505.33 T
0 10 Q
(Generic objects \050and by inheritance, Pref- objects\051 respond to) 243 493.33 T
0 9 Q
(MSG_MET) 243 481.33 T
(A_LOAD_OPTIONS) 289.17 481.33 T
0 10 Q
( by loading a value from the) 373.85 481.33 T
(appropriate place in the .) 243 469.33 T
0 9 Q
(INI) 359.31 469.33 T
0 10 Q
( \336le. This place is determined by) 373.97 469.33 T
(the object\325) 243 457.33 T
(s) 289.3 457.33 T
0 9 Q
(A) 296.71 457.33 T
(TTR_GEN_INIT_FILE_KEY) 302.71 457.33 T
0 10 Q
( \336eld. If the object has) 422.72 457.33 T
(an) 243 445.33 T
0 9 Q
(A) 257.45 445.33 T
(TTR_GEN_INIT_FILE_CA) 263.45 445.33 T
(TEGOR) 376.12 445.33 T
(Y) 408.79 445.33 T
0 10 Q
( \336eld, that category will) 415.13 445.33 T
-0.49 (be used; otherwise the default handler will look up the Generic) 243 433.33 P
(tree for an object with a) 243 421.33 T
0 9 Q
(A) 355.79 421.33 T
(TTR_GEN_INIT_FILE_CA) 361.79 421.33 T
(TEGOR) 474.46 421.33 T
(Y) 507.13 421.33 T
0 10 Q
(\336eld de\336ned and will use the value stored there.) 243 409.33 T
(Unlike a GenInteraction, a PrefInteraction will relay this) 243 397.33 T
-0.48 (message to its children. When it\325) 243 385.33 P
-0.48 (s time to load options from the) 390.81 385.33 P
(.) 243 373.33 T
0 9 Q
(INI) 245.78 373.33 T
0 10 Q
( \336le, a) 260.44 373.33 T
0 9 Q
(MSG_MET) 291.38 373.33 T
(A_LOAD_OPTIONS) 337.55 373.33 T
0 10 Q
( will be sent to the top) 422.23 373.33 T
(level of the module\325) 243 361.33 T
(s) 331.9 361.33 T
0 9 Q
(UI) 339.31 361.33 T
0 10 Q
( tree. This message should be) 350.31 361.33 T
-0.86 (propagated down the tree to reach all objects which should read) 243 349.33 P
(their values from the .) 243 337.33 T
0 9 Q
(INI) 345.97 337.33 T
0 10 Q
( \336le. This is why it is suggested that) 360.63 337.33 T
(you use PrefInteractions in place of GenInteractions if any) 243 325.33 T
(Pref- objects will be underneath. If you create a new sort of) 243 313.33 T
-0.59 (object which should relay this message to other objects, be sure) 243 301.33 P
(to do so.) 243 289.33 T
0 9 Q
(MSG_MET) 180 270.33 T
(A_SA) 226.17 270.33 T
(VE_OPTIONS) 248.34 270.33 T
0 10 Q
(Generic objects \050and by inheritance, Pref- objects\051 respond to) 243 258.33 T
0 9 Q
(MSG_MET) 243 246.33 T
(A_SA) 289.17 246.33 T
(VE_OPTIONS) 311.34 246.33 T
0 10 Q
( by saving a value to the) 371.51 246.33 T
(appropriate place in the .) 243 234.33 T
0 9 Q
(INI) 359.31 234.33 T
0 10 Q
( \336le. This place is determined by) 373.97 234.33 T
(the object\325) 243 222.33 T
(s) 289.3 222.33 T
0 9 Q
(A) 296.71 222.33 T
(TTR_GEN_INIT_FILE_KEY) 302.71 222.33 T
0 10 Q
( \336eld. If the object has) 422.72 222.33 T
(an) 243 210.33 T
0 9 Q
(A) 257.45 210.33 T
(TTR_GEN_INIT_FILE_CA) 263.45 210.33 T
(TEGOR) 376.12 210.33 T
(Y) 408.79 210.33 T
0 10 Q
( \336eld, that category will) 415.13 210.33 T
-0.49 (be used; otherwise the default handler will look up the Generic) 243 198.33 P
(tree for an object with a) 243 186.33 T
0 9 Q
(A) 355.79 186.33 T
(TTR_GEN_INIT_FILE_CA) 361.79 186.33 T
(TEGOR) 474.46 186.33 T
(Y) 507.13 186.33 T
0 10 Q
(\336eld de\336ned and will use the value stored there.) 243 174.33 T
(Unlike a GenInteraction, a PrefInteraction will relay this) 243 162.33 T
(message to its children. When it\325) 243 150.33 T
(s time to save options to the) 393.2 150.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1267" 9
%%Page: "1268" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1268) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
(.) 243 641.33 T
0 9 Q
(INI) 245.78 641.33 T
0 10 Q
( \336le, a) 260.44 641.33 T
0 9 Q
(MSG_MET) 291.38 641.33 T
(A_SA) 337.55 641.33 T
(VE_OPTIONS) 359.72 641.33 T
0 10 Q
( will be sent to the top) 419.89 641.33 T
(level of the module\325) 243 629.33 T
(s) 331.9 629.33 T
0 9 Q
(UI) 339.31 629.33 T
0 10 Q
( tree. This message should be) 350.31 629.33 T
(propagated down the tree to reach all objects which should) 243 617.33 T
(write their values to the .) 243 605.33 T
0 9 Q
(INI) 360.24 605.33 T
0 10 Q
( \336le. This is why it is suggested) 374.9 605.33 T
-0.74 (that you use PrefInteractions in place of GenInteractions if any) 243 593.33 P
(Pref- objects will be underneath. If you create a new sort of) 243 581.33 T
-0.59 (object which should relay this message to other objects, be sure) 243 569.33 P
(to do so.) 243 557.33 T
(Often, interceptors of this message will carry out whatever) 243 545.33 T
(actions are necessary to carry out the user) 243 533.33 T
(\325) 439.29 533.33 T
(s wishes in those) 440.96 533.33 T
-0.08 (cases where writing something to the .) 243 521.33 P
0 9 Q
-0.07 (INI) 420.5 521.33 P
0 10 Q
-0.08 ( \336le is not enough to) 435.17 521.33 P
(bring the change about.) 243 509.33 T
0 9 Q
(MSG_GEN_RESET) 180 490.33 T
0 10 Q
-0.37 (If the user clicks on a \322Revert\323 or \322Cancel\323 button, all values in) 243 478.33 P
0 9 Q
-0.72 (UI) 243 466.33 P
0 10 Q
-0.8 ( gadgets should revert to those values originally stored in the) 254 466.33 P
(.) 243 454.33 T
0 9 Q
(INI) 245.78 454.33 T
0 10 Q
( \336le. Y) 260.44 454.33 T
(ou will note that many Pref- objects have an extra) 288.97 454.33 T
-0.37 (\336eld to store their \322original\323 value. If you create your own kind) 243 442.33 P
(of Preferences object, keep in mind that it will need some way) 243 430.33 T
(to store the \322original\323 value \050probably initialized while) 243 418.33 T
(handling) 243 406.33 T
0 9 Q
(MSG_MET) 287.08 406.33 T
(A_LOAD_OPTIONS) 333.25 406.33 T
0 10 Q
(\051 and should intercept) 417.93 406.33 T
0 9 Q
-0.35 (MSG_GEN_RESET) 243 394.33 P
0 10 Q
-0.39 ( to replace its value with the \322original\323 value.) 325.17 394.33 P
0 9 Q
(MSG_GEN_LOAD_OPTIONS) 180 375.33 T
0 10 Q
(Generic objects \050and thus Pref- objects\051 respond to) 243 363.33 T
0 9 Q
(MSG_MET) 243 351.33 T
(A_LOAD_OPTIONS) 289.17 351.33 T
0 10 Q
( by sending themselves this) 373.85 351.33 T
-0.07 (message. This message is only meant to be used for managing) 243 339.33 P
(the .INI \336le; any other functionality should occur in the) 243 327.33 T
(handling of) 243 315.33 T
0 9 Q
(MSG_MET) 298.19 315.33 T
(A_LOAD_OPTIONS) 344.36 315.33 T
0 10 Q
(.) 429.04 315.33 T
0 9 Q
(MSG_GEN_SA) 180 296.33 T
(VE_OPTIONS) 242.17 296.33 T
0 10 Q
(Generic objects \050and thus Pref- objects\051 respond to) 243 284.33 T
0 9 Q
(MSG_MET) 243 272.33 T
(A_SA) 289.17 272.33 T
(VE_OPTIONS) 311.34 272.33 T
0 10 Q
( by sending themselves this) 371.51 272.33 T
-0.07 (message. This message is only meant to be used for managing) 243 260.33 P
(the .) 243 248.33 T
0 9 Q
(INI) 263.56 248.33 T
0 10 Q
( \336le; any other functionality should occur in the) 278.22 248.33 T
(handling of) 243 236.33 T
0 9 Q
(MSG_MET) 298.19 236.33 T
(A_SA) 344.36 236.33 T
(VE_OPTIONS) 366.53 236.33 T
0 10 Q
(.) 426.7 236.33 T
-0.21 (If you are interested in detecting certain user actions, the following list may) 180 217.33 P
(prove useful:) 180 204.33 T
3 F
(User Opens Dialog) 180 184.33 T
0 F
-0.49 (Any objects which need to do some initialization when the user) 243 172.33 P
(\336rst opens the module\325) 243 160.33 T
(s dialog box should intercept) 347.45 160.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1268" 10
%%Page: "1269" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1269) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
(MSG_PREF_INIT) 243 641.33 T
0 10 Q
(. After receiving) 317.91 641.33 T
0 9 Q
(MSG_PREF_INIT) 394.94 641.33 T
0 10 Q
(, each object) 469.86 641.33 T
(will receive a) 243 629.33 T
0 9 Q
(MSG_MET) 306.53 629.33 T
(A_LOAD_OPTIONS) 352.7 629.33 T
0 10 Q
(.) 437.38 629.33 T
3 F
(User clicks Apply) 180 610.33 T
0 F
-0.4 (Assuming the top object of the module\325) 243 598.33 P
-0.4 (s UI tree is a PrefDialog) 418.76 598.33 P
-0.45 (and that the dialog has been set up as a Properties dialog \050as it) 243 586.33 P
(is by default\051, then this object will receive a) 243 574.33 T
0 9 Q
(MSG_GEN_APPL) 446.55 574.33 T
(Y) 521.23 574.33 T
0 10 Q
(when the user activates the Apply trigger) 243 562.33 T
(. The Pref dialog) 434.49 562.33 T
(responds to this message by sending itself a) 243 550.33 T
0 9 Q
(MSG_MET) 243 538.33 T
(A_SA) 289.17 538.33 T
(VE_OPTIONS) 311.34 538.33 T
0 10 Q
(, which it will then pass on to its) 371.51 538.33 T
(children.) 243 526.33 T
3 F
(User clicks Cancel or Reset) 180 507.33 T
0 F
(All Gen- and Pref- objects within the) 243 495.33 T
0 9 Q
(UI) 415.05 495.33 T
0 10 Q
( tree will receive a) 426.05 495.33 T
0 9 Q
(MSG_GEN_RESET) 243 483.33 T
0 10 Q
(.) 324.25 483.33 T
2 14 Q
(22.4) 134.76 432 T
2 24 Q
(Object Class Reference) 180 432 T
0 10 Q
-0.62 (If you will use any of the Pref- classes in your module, the following reference) 180 406.33 P
(material may prove useful.) 180 393.33 T
2 14 Q
(22.4.1) 123.08 351 T
2 18 Q
(PrefClass) 180 351 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
3 10 Q
-0.3 (PrefClass) 180 320.33 P
0 F
-0.29 ( de\336nes several \336elds of instance data which will be used by all of) 229.82 320.33 P
(its subclasses.) 180 307.33 T
(There are several variable data \336elds which make sure that a given) 180 287.33 T
-0.01 (Preference gadget will not be usable by those without the proper privileges;) 180 274.33 P
-0.26 (other \336elds make sure that the gadgets will not appear to those users whose) 180 261.33 P
0 9 Q
(UI) 180 248.33 T
0 10 Q
( levels indicate that they would be confused by the presence of such an) 191 248.33 T
(object. Keep in mind that if all gadgets in your module demand some) 180 235.33 T
(privilege or User level, you should re\337ect this in the routine which provide) 180 222.33 T
(Preferences module information about your module.) 180 209.33 T
81 176.98 531 189 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 176.98 531 189 R
7 X
0 0 0 1 0 0 0 K
V
76.5 184.23 617.5 187.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 170.31 T
(22-) 147.13 170.31 T
(4 PrefClass Instance Data) 161.58 170.31 T
4 9 Q
(@class PrefClass, GenClass, master, variant;) 81 155.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1269" 11
%%Page: "1270" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1270) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(@instance PrefAttributes PI_attrs = \050PA_LOAD_IF_USABLE|PA_SAVE_IF_USABLE\051;) 81 642 T
(typedef ByteFlags PrefAttributes;) 81 624 T
(#define PA_REBOOT_IF_CHANGED 0x80) 81 613 T
(/* This bit signals that changes in the state of) 81 602 T
( * this object requires a system reboot to take effect. */) 81 591 T
(#define PA_LOAD_IF_USABLE 0x40) 81 573 T
( /* Load options only if this object is usable \050this is ON by default\051. */) 81 562 T
(#define PA_SAVE_IF_USABLE 0x20) 81 544 T
( /* Save options only if this object is usable \050this is ON by default\051 */) 81 533 T
(#define PA_SAVE_IF_ENABLED 0x10) 81 515 T
( /* Save options only if this object is enabled */) 81 504 T
(#define PA_SAVE_IF_CHANGED 0x08) 81 486 T
( /* Save options only if this object has changed. */) 81 475 T
(@vardata optr ATTR_PREF_REBOOT_STRING;) 81 457 T
(/* This is the string passed to MSG_PREF_MGR_DO_REBOOT_DIALOG -- the) 81 446 T
( * string must be in a SHARABLE LMEM resource and is incorporated into the) 81 435 T
( * middle of another sentence. In English, the sentence is \322The system software) 81 424 T
( * will shut down and restart to change the <reboot_string>. Do you wish) 81 413 T
( * to proceed?\323) 81 402 T
( *) 81 391 T
( * If an object has its PA_REBOOT_IF_CHANGED attribute set, it will scan for) 81 380 T
( * this attribute, first in itself, then up the generic tree, until it) 81 369 T
( * finds one. */) 81 358 T
(@reloc ATTR_PREF_REBOOT_STRING, 0, optr;) 81 347 T
(@vardata PrefMgrFeatures ATTR_PREF_REQUIRED_FEATURES;) 81 329 T
(/* features bits that must be set for this object to be usable. */) 81 318 T
(@vardata PrefMgrFeatures ATTR_PREF_PROHIBITED_FEATURES;) 81 300 T
(/* features bits that must not be set for this object to be usable. */) 81 289 T
(@vardata UIInterfaceLevel ATTR_PREF_MIN_LEVEL;) 81 271 T
(/* interface level below which this object will not be usable */) 81 260 T
(@vardata UIInterfaceLevel ATTR_PREF_MAX_LEVEL;) 81 242 T
(/* interface level above which this object will not be usable */) 81 231 T
81 206.98 531 219 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 206.98 531 219 R
7 X
0 0 0 1 0 0 0 K
V
76.5 214.23 617.5 217.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1270" 12
%%Page: "1271" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1271) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
-0.75 (In addition to the instance data \336elds, there are messages which allow for the) 180 641.33 P
(dynamic retrieval and updating of these \336elds.) 180 628.33 T
81 611.99 531 617 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 611.99 531 617 R
7 X
0 0 0 1 0 0 0 K
V
50 615.99 609.01 615.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 603.99 T
2 F
(MSG_PREF_SET_INIT_FILE_CA) 99 603.99 T
(TEGOR) 280.15 603.99 T
(Y) 322.38 603.99 T
4 10 Q
(void MSG_PREF_SET_INIT_FILE_CATEGORY\050) 99 589.33 T
4 9 Q
(const char *category\051;) 153 578.99 T
0 10 Q
-0.09 (Pref objects automatically respond to this message by changing the value of) 180 561.33 P
(the) 180 548.33 T
0 9 Q
(A) 197.78 548.33 T
(TTR_GEN_INIT_FILE_CA) 203.78 548.33 T
(TEGOR) 316.45 548.33 T
(Y) 349.12 548.33 T
0 10 Q
( variable data \336eld. This is a utility) 355.46 548.33 T
(message; similar functionality is available via) 180 535.33 T
0 9 Q
(MSG_MET) 394.69 535.33 T
(A_ADD_V) 440.86 535.33 T
(AR_DA) 482.36 535.33 T
(T) 512.86 535.33 T
(A) 518.37 535.33 T
0 10 Q
(.) 524.87 535.33 T
2 9 Q
(Source:) 153 518.33 T
0 10 Q
(Anywhere) 207 518.33 T
2 9 Q
(Destination:) 153 501.33 T
0 10 Q
(Any) 207 501.33 T
3 F
(PrefClass) 228.48 501.33 T
0 F
( object.) 278.3 501.33 T
2 9 Q
(Parameters:) 153 484.33 T
5 10 Q
(category) 207 484.33 T
0 F
(Null-terminated category string.) 297 484.33 T
2 9 Q
(Return:) 153 467.33 T
0 10 Q
(Nothing.) 207 467.33 T
81 450.98 531 455.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 450.98 531 455.99 R
7 X
0 0 0 1 0 0 0 K
V
50 454.98 609.01 454.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 442.98 T
2 F
(MSG_PREF_HAS_ST) 99 442.98 T
(A) 218.14 442.98 T
(TE_CHANGED) 225.91 442.98 T
4 10 Q
(Boolean MSG_PREF_HAS_STATE_CHANGED\050\051;) 99 428.32 T
0 F
(This message determines whether the object or any of its children have) 180 410.32 T
-0.08 (changed since the last time options were loaded. This is used in conjunction) 180 397.32 P
(with the) 180 384.32 T
0 9 Q
(P) 221.49 384.32 T
(A_REBOOT_IF_CHANGED) 226.83 384.32 T
0 10 Q
( \337ag that can be set for an object\321this) 344.32 384.32 T
(\337ag signals that, if the object changes state, then) 180 371.32 T
0 9 Q
(GEOS) 409.3 371.32 T
0 10 Q
( should be restarted) 435.47 371.32 T
(for the change to go into effect.) 180 358.32 T
2 9 Q
(Source:) 153 341.32 T
3 10 Q
(PrefClass) 207 341.32 T
0 F
( object sends this message to itself when handling) 256.82 341.32 T
0 9 Q
(MSG_PREF_GET_REBOOT_INFO) 207 328.32 T
0 10 Q
(.) 354.18 328.32 T
2 9 Q
(Destination:) 153 311.32 T
0 10 Q
(Self.) 207 311.32 T
2 9 Q
(Parameters:) 153 294.32 T
0 10 Q
(None.) 207 294.32 T
2 9 Q
(Return:) 153 277.32 T
0 10 Q
(Should return) 207 277.32 T
5 F
(true) 274.96 277.32 T
0 F
( \050i.e. non-zero\051 if state has changed,) 293.47 277.32 T
5 F
(false) 459.96 277.32 T
0 F
( \050i.e. zero\051) 481.24 277.32 T
(otherwise.) 207 264.32 T
2 9 Q
(Interception:) 153 247.32 T
0 10 Q
-0.68 (New) 207.5 247.32 P
3 F
-0.7 (PrefClass) 230.54 247.32 P
0 F
-0.68 ( subclasses will use this to compare the object\325) 280.36 247.32 P
-0.68 (s current) 487.74 247.32 P
(state against the \322original\323 state, assuming one was stored.) 207 234.32 T
81 217.98 531 222.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 217.98 531 222.98 R
7 X
0 0 0 1 0 0 0 K
V
50 221.98 609.01 221.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 209.97 T
2 F
(MSG_PREF_GET_REBOOT_INFO) 99 209.97 T
4 10 Q
(optr MSG_PREF_GET_REBOOT_INFO\050\051;) 99 195.31 T
0 F
(This message asks whether the system will need to reboot as a result of) 180 177.31 T
(changes. If a reboot is necessary) 180 164.31 T
(, the dialog will then notify the user of the) 327.6 164.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1271" 13
%%Page: "1272" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1272) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
-0.01 (reboot, and give the user a chance to abort \050since the system reset may be a) 180 641.33 P
(lengthy process on some systems\051.) 180 628.33 T
2 9 Q
(Source:) 153 611.33 T
0 10 Q
(PrefDialog sends this message to all children on an apply) 207 611.33 T
(.) 470.56 611.33 T
2 9 Q
(Destination:) 153 594.33 T
0 10 Q
(Any Pref- object.) 207 594.33 T
2 9 Q
(Interception:) 153 577.33 T
0 10 Q
(Subclasses should check the) 207.5 577.33 T
0 9 Q
(P) 340.29 577.33 T
(A_REBOOT_IF_CHANGED) 345.63 577.33 T
0 10 Q
( \337ag\321if the) 463.13 577.33 T
-0.07 (\337ag is set, the object should compare its present value to its \322original\323) 207 564.33 P
(value. If a reboot is never needed, then do nothing.) 207 551.33 T
(If a reboot is necessary) 207 538.33 T
(, the method should return the string to use) 311.82 538.33 T
(when rebooting. The standard way to do this is via) 207 525.33 T
0 9 Q
(MSG_PREF_GET_REBOOT_STRING) 207 512.33 T
0 10 Q
(.) 366.35 512.33 T
(If possible, developers should try to avoid situations where a system) 207 499.33 T
(reset is necessary) 207 486.33 T
(, and use mechanisms such as the General Change) 287.37 486.33 T
(Noti\336cation instead.) 207 473.33 T
2 9 Q
(Parameters:) 153 456.33 T
0 10 Q
(None.) 207 456.33 T
2 9 Q
(Return:) 153 439.33 T
0 10 Q
(Zero if no reboot needed; otherwise the) 207 439.33 T
0 9 Q
(OD) 388.86 439.33 T
0 10 Q
( of string to insert in the) 402.86 439.33 T
(con\336rm-shutdown dialog box. The string will be inserted into a) 207 426.33 T
-0.6 (sentence; the string should describe what is changing. Y) 207 413.33 P
-0.6 (ou may wish to) 460.77 413.33 P
(use the value of) 207 400.33 T
0 9 Q
(A) 282.38 400.33 T
(TTR_PREF_REBOOT_STRING) 288.38 400.33 T
0 10 Q
(.) 421.06 400.33 T
2 9 Q
(See Also:) 153 383.33 T
0 F
(MSG_PREF_GET_REBOOT_STRING) 207 383.33 T
0 10 Q
(,) 366.35 383.33 T
0 9 Q
(A) 371.9 383.33 T
(TTR_PREF_REBOOT_STRING) 377.91 383.33 T
0 10 Q
(.) 510.59 383.33 T
81 366.99 531 372 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 366.99 531 372 R
7 X
0 0 0 1 0 0 0 K
V
50 370.99 609.01 370.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 358.99 T
2 F
(MSG_PREF_GET_REBOOT_STRING) 99 358.99 T
4 10 Q
(optr MSG_PREF_GET_REBOOT_STRING\050\051;) 99 344.33 T
0 F
(This message should return the optr of a string in a sharable local memory) 180 326.33 T
-0.44 (resource. This string will display in the dialog box which asks the user if it is) 180 313.33 P
-0.82 (all right to shut down. If a given object doesn\325) 180 300.33 P
-0.82 (t know of a good string to supply) 382.69 300.33 P
-0.82 (,) 526.26 300.33 P
-0.71 (it should forward the message on to its parent in the generic tree. The default) 180 287.33 P
3 F
(PrefClass) 180 274.33 T
0 F
( handler returns the value stored in) 229.82 274.33 T
0 9 Q
(A) 180 261.33 T
(TTR_PREF_REBOOT_STRING) 186 261.33 T
0 10 Q
(.) 318.68 261.33 T
2 9 Q
(Source:) 153 244.33 T
0 10 Q
(Pref- object sends this message to itself.) 207 244.33 T
2 9 Q
(Destination:) 153 227.33 T
0 10 Q
(Any) 207 227.33 T
3 F
(PrefClass) 228.48 227.33 T
0 F
( object.) 278.3 227.33 T
2 9 Q
(Parameters:) 153 210.33 T
0 10 Q
(Nothing.) 207 210.33 T
2 9 Q
(Return:) 153 193.33 T
0 10 Q
(Object Pointer of string \050or) 207 193.33 T
0 9 Q
(NULL) 333.48 193.33 T
0 10 Q
( if not found\051.) 360.16 193.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1272" 14
%%Page: "1273" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1273) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(MSG_PREF_INIT) 99 634.99 T
4 10 Q
(void MSG_PREF_INIT\050) 99 620.33 T
4 9 Q
(PrefMgrFeatures) 153 609.99 T
(features,) 261 609.99 T
(UIInterfaceLevel) 153 599.99 T
(level\051;) 261 599.99 T
0 10 Q
(This message initializes the object. The object should perform any required) 180 582.33 T
(set-up to appear on-screen. The PrefDialog object will send this object to all) 180 569.33 T
(of its children when the dialog is \336rst initiated.) 180 556.33 T
2 9 Q
(Source:) 153 539.33 T
0 10 Q
(Generic Parent) 207 539.33 T
2 9 Q
(Destination:) 153 522.33 T
0 10 Q
(Any Pref- object.) 207 522.33 T
2 9 Q
(Parameters:) 153 505.33 T
5 10 Q
(features) 207 505.33 T
0 F
-0.32 (This structure tells you a bit what sorts of changes) 297 505.33 P
(the user prepared to make.) 297 492.33 T
5 F
(level) 207 476.33 T
0 F
(The user) 297 476.33 T
(\325) 338.29 476.33 T
(s User Level.) 339.96 476.33 T
2 9 Q
(Return:) 153 459.33 T
0 10 Q
(None.) 207 459.33 T
2 9 Q
(Interception:) 153 442.33 T
0 10 Q
(Default behavior is to determine whether to make the object usable) 207.5 442.33 T
-0.87 (based on) 207 429.33 P
0 9 Q
-0.78 (UI) 248.43 429.33 P
0 10 Q
-0.87 ( level and features \050or will be, when implemented\051. Subclass) 259.43 429.33 P
(should call superclass before handling, as subclass behavior may be) 207 416.33 T
(different if the object is not usable,) 207 403.33 T
81 386.98 531 391.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 386.98 531 391.99 R
7 X
0 0 0 1 0 0 0 K
V
50 390.98 609.01 390.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 378.98 T
2 F
(MSG_PREF_NOTIFY_DIALOG_CHANGE) 99 378.98 T
4 10 Q
(void MSG_PREF_NOTIFY_DIALOG_CHANGE\050) 99 364.32 T
4 9 Q
(PrefDialogChangeType) 153 353.98 T
(type\051;) 279 353.98 T
0 10 Q
(This message goes out via) 180 336.32 T
0 9 Q
(PDGCNL) 302.62 336.32 T
(T_DIALOG_CHANGE) 341.97 336.32 T
0 10 Q
( list bound to) 435.47 336.32 T
-0.55 (PrefDialog object telling interested parties of a change in the box\325) 180 323.32 P
-0.55 (s state. It is) 475.98 323.32 P
(sent when the dialog box is being opened, closed, or destroyed.) 180 310.32 T
2 9 Q
(Source:) 153 293.32 T
0 10 Q
(PrefDialog object.) 207 293.32 T
2 9 Q
(Destination:) 153 276.32 T
0 10 Q
(Any Pref- object registered on) 207 276.32 T
0 9 Q
(PDCGCNL) 346.99 276.32 T
(T_DIALOG_CHANGE) 392.84 276.32 T
0 10 Q
(.) 486.34 276.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1273" 15
%%Page: "1274" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1274) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 9 Q
0 X
(Interception:) 153 641.33 T
0 10 Q
(This message has no default handler; it must be intercepted to do) 207.5 641.33 T
(anything useful.) 207 628.33 T
2 9 Q
(Structures:) 153 611.33 T
4 10 Q
(typedef enum {) 216 595.33 T
(PDCT_OPEN,) 252 582.33 T
(PDCT_CLOSE,) 252 569.33 T
(PDCT_DESTROY,) 252 556.33 T
(PDCT_RESTART,) 252 543.33 T
(PDCT_SHUTDOWN) 252 530.33 T
(} PrefDialogChangeType;) 216 517.33 T
81 500.99 531 506 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 500.99 531 506 R
7 X
0 0 0 1 0 0 0 K
V
50 504.99 609.01 504.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 492.99 T
2 F
(MSG_PREF_SET_ORIGINAL_ST) 99 492.99 T
(A) 281.48 492.99 T
(TE) 289.26 492.99 T
4 10 Q
(void MSG_PREF_SET_ORIGINAL_STATE\050\051;) 99 478.33 T
0 F
(This message copies the object\325) 180 460.33 T
(s current state to the \322original\323 value \336eld,) 322.24 460.33 T
(which will be used on a) 180 447.33 T
0 9 Q
(MSG_GEN_RESET) 290.21 447.33 T
0 10 Q
(.) 371.46 447.33 T
2 9 Q
(Parameters:) 153 430.33 T
0 10 Q
(None.) 207 430.33 T
2 9 Q
(Return:) 153 413.33 T
0 10 Q
(Nothing.) 207 413.33 T
2 9 Q
(Interception:) 153 396.33 T
0 10 Q
(Subclasses should respond to this message by copying their current) 207.5 396.33 T
(value to whatever instance \336eld represents the \322original\323 state of the) 207 383.33 T
(object.) 207 370.33 T
2 14 Q
(22.4.2) 123.08 327.99 T
2 18 Q
(PrefV) 180 327.99 T
(alueClass) 226.03 327.99 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(PrefV) 180 297.33 T
(alue objects behave like GenV) 205.74 297.33 T
(alue objects except that they have the) 343.18 297.33 T
(ability to store an \322original\323 value in the) 180 284.33 T
5 9 Q
(PVI) 368.75 284.33 T
5 10 Q
(_originalV) 384.75 284.33 T
(alue) 432.15 284.33 T
0 F
( instance data) 451.77 284.33 T
(\336eld. Unlike GenV) 180 271.33 T
(alue objects, PrefV) 265.02 271.33 T
(alues can only handle single word) 350.4 271.33 T
(values.) 180 258.33 T
81 225.97 531 237.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 225.97 531 237.99 R
7 X
0 0 0 1 0 0 0 K
V
76.5 233.22 617.5 236.72 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 219.3 T
(22-) 147.13 219.3 T
(5 PrefV) 161.58 219.3 T
(alueClass Instance Data) 195.49 219.3 T
4 9 Q
(@class PrefValueClass, PrefClass;) 81 204.97 T
(@instance word PVI_originalValue = 0;) 81 186.97 T
(@vardata void ATTR_PREF_VALUE_ORIG_IS_INDETERMINATE;) 81 168.97 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1274" 16
%%Page: "1275" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1275) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(@vardata word ATTR_PREF_VALUE_ROUND;) 81 642 T
(/* Specifies an integer value to which the value will be rounded on .INI file) 81 631 T
( * reads/writes. For instance, with a value for 10 here, the value would always) 81 620 T
( * round off to the nearest 10. Note that the user can still type in an illegal) 81 609 T
( * value, but this value will be rounded before saving to the .INI file.*/) 81 598 T
81 573.98 531 586 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 573.98 531 586 R
7 X
0 0 0 1 0 0 0 K
V
76.5 581.23 617.5 584.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
81 557.97 531 562.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 557.97 531 562.98 R
7 X
0 0 0 1 0 0 0 K
V
50 561.97 609.01 561.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 549.97 T
2 F
(MSG_PREF_V) 99 549.97 T
(ALUE_SET_ORIGINAL_V) 178.8 549.97 T
(ALUE) 320.6 549.97 T
4 10 Q
(void MSG_PREF_VALUE_SET_ORIGINAL_VALUE\050) 99 535.3 T
4 9 Q
(word) 153 524.97 T
(orig,) 261 524.97 T
(Boolean) 153 514.97 T
(indeterminate\051;) 261 514.97 T
0 10 Q
(This message sets the \322original\323 value of the object\321it also sets the value) 180 497.3 T
(stored by the superclass.) 180 484.3 T
2 14 Q
(22.4.3) 123.08 441.97 T
2 18 Q
(PrefItemGroupClass) 180 441.97 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(This class acts like) 180 411.3 T
3 F
(GenItemGroupClass) 269.84 411.3 T
0 F
(, but has extended functionality) 375.39 411.3 T
-0.64 (for reading/writing strings to the .) 180 398.3 P
0 9 Q
-0.57 (INI) 334.4 398.3 P
0 10 Q
-0.64 ( \336le. When the user triggers the dialog\325) 349.06 398.3 P
-0.64 (s) 524.23 398.3 P
(Apply trigger \050when the PrefItemGroup receives a) 180 385.3 T
0 9 Q
-0.56 (MSG_MET) 180 372.3 P
-0.56 (A_SA) 226.17 372.3 P
-0.56 (VE_OPTIONS) 248.34 372.3 P
0 10 Q
-0.62 (\051, the PrefItemGroup will respond by writing out) 308.51 372.3 P
-0.06 (strings based upon which of its children items are presently selected. These) 180 359.3 P
(strings can be taken from the items\325 monikers or from strings used with) 180 346.3 T
3 F
(PrefStringItemClass) 180 333.3 T
0 F
( objects.) 286.67 333.3 T
(When loading options, if either the) 180 313.3 T
0 9 Q
(PIFF_USE_ITEM_MONIKERS) 343.16 313.3 T
0 10 Q
( or) 474.66 313.3 T
0 9 Q
(PIFF_USE_ITEM_STRINGS) 180 300.3 T
0 10 Q
( is set for the item group, then it will select its) 301.18 300.3 T
-0.67 (children based on the strings stored in the .) 180 287.3 P
0 9 Q
-0.6 (INI) 375.59 287.3 P
0 10 Q
-0.67 ( \336le.Otherwise, the item group) 390.25 287.3 P
(will default to the) 180 274.3 T
3 F
(GenItemGroupClass) 265.02 274.3 T
0 F
( functionality) 370.57 274.3 T
(, which uses the) 431.5 274.3 T
(identi\336er of the items as a basis for selection.) 180 261.3 T
81 228.94 531 240.97 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 228.94 531 240.97 R
7 X
0 0 0 1 0 0 0 K
V
76.5 236.19 617.5 239.69 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 222.28 T
(22-) 147.13 222.28 T
(6 PrefItemGroupClass Instance Data) 161.58 222.28 T
4 9 Q
(@instance PrefInitFileFlags PIGI_initFileFlags = 0;) 81 207.94 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1275" 17
%%Page: "1276" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1276) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(typedef ByteFlags PrefInitFileFlags;) 81 642 T
(#define PIFF_USE_ITEM_STRINGS 0x80) 81 631 T
(/*) 81 620 T
( * If set, then the item group\325s children must be of class PrefStringItemClass,) 81 609 T
( * and their strings will be used to interact with the .INI file. */) 81 598 T
(#define PIFF_USE_ITEM_MONIKERS 0x40) 81 580 T
(/* If set, the monikers of the items are used to interact with the .INI file. */) 81 569 T
(#define PIFF_APPEND_TO_KEY 0x20) 81 551 T
(/* If set, the strings in this list will be ADDED) 81 540 T
( * to strings that may already exist for this key */) 81 529 T
(#define PIFF_ABSENT_KEY_OVERRIDES_DEFAULTS 0x10) 81 511 T
(/* If set, an absent key for the item group will cause it to) 81 500 T
( * behave as if an empty key were in the .INI file, effectively) 81 489 T
( * overriding any default values stored with the group when it was) 81 478 T
( * compiled. Used primarily by those groups where one subclasses) 81 467 T
( * MSG_PREF_STRING_ITEM_CHECK_IF_IN_INIT_FILE_KEY to determine the) 81 456 T
( * initial setting, rather than looking in the .INI file. */) 81 445 T
(@instance word PIGI_originalSelection = 0;) 81 427 T
(@instance word PIGI_originalNumSelections = 0;) 81 409 T
(@instance byte PIGI_suspendCount = 0;) 81 391 T
(/* When suspend count is nonzero, the item group won\325t update text objects, nor) 81 380 T
( * will it enable/disable objects when the selection changes. */) 81 369 T
(@vardata PrefEnableData ATTR_PREF_ITEM_GROUP_ENABLE;) 81 351 T
(/* allows setting up an object to be enabled/disabled when) 81 340 T
( * settings are made in the item group */) 81 329 T
(typedef struct {) 81 311 T
(word) 125 300 T
(PED_item;) 212.5 300 T
(/* Identifier of the item that controls) 301 300 T
( * enabling/disabling of object. If this) 301 289 T
( * is GIGS_NONE, then the action will be) 301 278 T
( * performed if no items are selected. */) 301 267 T
(ChunkHandle) 125 256 T
(PED_lptr;) 212.5 256 T
(/* Object to be enabled/disabled */) 301 256 T
(PrefEnableFlags) 125 245 T
(PED_flags;) 212.5 245 T
(} PrefEnableData;) 81 234 T
(typedef ByteFlags PrefEnableFlags;) 81 216 T
(#define PEF_DISABLE_IF_SELECTED 0x80) 81 198 T
(/* Disable the object if the associated item is selected,) 81 187 T
( * otherwise do the opposite. */) 81 176 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1276" 18
%%Page: "1277" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1277) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(#define PEF_DISABLE_IF_NONE 0x40) 81 642 T
(/* If this flag is set, then the PED_item field is ignored.) 81 631 T
( * Instead, the item group will disable the specified object if) 81 620 T
( * no items are selected -- or if there are no items in the list. */) 81 609 T
(@vardata word ATTR_PREF_ITEM_GROUP_OVERRIDE;) 81 591 T
(/* This attribute is used to specify an item which will act) 81 580 T
( * as an OVERRIDE for all other items \050in a non-exclusive) 81 569 T
( * item group\051.) 81 558 T
( *) 81 547 T
( * When the specified item is SELECTED, then all other items are DE-SELECTED.) 81 536 T
( * When any other item is SELECTED, the override item is DE-SELECTED.) 81 525 T
( * If all items are DE-SELECTED, the override item becomes SELECTED */) 81 514 T
(@vardata ChunkHandle ATTR_PREF_ITEM_GROUP_TEXT_DISPLAY;) 81 496 T
(/* chunk handle of a GenText object that will be updated) 81 485 T
( * with the moniker of the currently selected item on APPLY/RESET. */) 81 474 T
(@vardata ChunkHandle ATTR_PREF_ITEM_GROUP_STATUS_TEXT;) 81 456 T
(/* chunk handle of a GenText object that will be updated every) 81 445 T
( * time this object receives a MSG_GEN_ITEM_GROUP_SEND_STATUS_MSG. */) 81 434 T
(@vardata char ATTR_PREF_ITEM_GROUP_EXTRA_STRING_SECTION[];) 81 416 T
(/* If a string is given -- the string will always be written) 81 405 T
( * out as the FIRST string section for the .INI file key. For) 81 394 T
( * example, the \322Memory\323 item group uses this to always insert) 81 383 T
( * \322disk.geo\323 whenever writing out the memory types. Note:) 81 372 T
( * this item is only written if the item group has either the) 81 361 T
( * PIFF_USE_ITEM_MONIKERS or PIFF_USE_ITEM_STRINGS set. */) 81 350 T
81 325.98 531 338 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 325.98 531 338 R
7 X
0 0 0 1 0 0 0 K
V
76.5 333.23 617.5 336.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
81 309.97 531 314.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.97 531 314.98 R
7 X
0 0 0 1 0 0 0 K
V
50 313.97 609.01 313.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 301.97 T
2 F
(MSG_PREF_ITEM_GROUP_SET_ORIGINAL_SELECTION) 99 301.97 T
4 10 Q
(void) 99 287.3 T
(MSG_PREF_ITEM_GROUP_SET_ORIGINAL_SELECTION\050) 153 287.3 T
(word selection\051;) 189 276.3 T
0 F
(Set the \322originalSelection\323 \336eld of the item group. Also, sends) 180 258.3 T
0 9 Q
(MSG_GEN_ITEM_GROUP_SET_SINGLE_SELECTION) 180 245.3 T
0 10 Q
( to superclass. This) 417.02 245.3 T
(message can only be used with exclusive item groups\321for other types, use) 180 232.3 T
(the GenItemGroup messages, and then send the object) 180 219.3 T
0 9 Q
(MSG_PREF_SET_ORIGINAL_ST) 180 206.3 T
(A) 321.18 206.3 T
(TE) 327.19 206.3 T
0 10 Q
(.) 339.69 206.3 T
2 9 Q
(Source:) 153 189.3 T
0 10 Q
(Anywhere.) 207 189.3 T
2 9 Q
(Destination:) 153 172.3 T
0 10 Q
(An exclusive PrefItemGroup.) 207 172.3 T
2 9 Q
(Parameters:) 153 155.3 T
5 10 Q
(selection) 207 155.3 T
0 F
(Which item to select.) 297 155.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1277" 19
%%Page: "1278" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1278) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 9 Q
0 X
(Return:) 153 641.33 T
0 10 Q
(Nothing.) 207 641.33 T
2 9 Q
(Interception:) 153 624.33 T
0 10 Q
(Unlikely) 207.5 624.33 T
(.) 246.4 624.33 T
81 607.99 531 613 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 607.99 531 613 R
7 X
0 0 0 1 0 0 0 K
V
50 611.99 609.01 611.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 599.99 T
2 F
(MSG_PREF_ITEM_GROUP_GET_SELECTED_ITEM_TEXT) 99 599.99 T
4 10 Q
(word) 99 585.33 T
(MSG_PREF_ITEM_GROUP_GET_SELECTED_ITEM_TEXT\050) 153 585.33 T
4 9 Q
(char) 153 574.99 T
(*buffer,) 189 574.99 T
(word) 153 564.99 T
(bufSize\051;) 189 564.99 T
0 10 Q
-0.35 (This message returns the text in the moniker of the selected item. The value) 180 547.33 P
-0.33 (returned is the number of characters in the string. If nothing is selected, the) 180 534.33 P
(value returned is zero.) 180 521.33 T
81 504.98 531 509.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 504.98 531 509.99 R
7 X
0 0 0 1 0 0 0 K
V
50 508.98 609.01 508.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 496.98 T
2 F
(MSG_PREF_ITEM_GROUP_GET_ITEM_MONIKER) 99 496.98 T
4 10 Q
(word MSG_PREF_ITEM_GROUP_GET_ITEM_MONIKER\050@stack) 99 482.32 T
4 9 Q
(char) 153 471.98 T
(*buffer,) 189 471.98 T
(word) 153 461.98 T
(bufSize,) 189 461.98 T
(word) 153 451.98 T
(identifier\051;) 189 451.98 T
0 10 Q
(This message retrieves the text in the moniker of one of the items of a) 180 434.32 T
-0.47 (PrefItemGroup. This works for dynamic list subclasses as well. The message) 180 421.32 P
(returns the number of characters in the returned text.) 180 408.32 T
2 9 Q
(Parameters:) 153 391.32 T
5 10 Q
(buffer) 207 391.32 T
0 F
(Buffer in which to return moniker text.) 297 391.32 T
5 F
(bufSize) 207 375.32 T
0 F
(Size of buffer) 297 375.32 T
(.) 357.18 375.32 T
5 F
(identi\336er) 207 359.32 T
0 F
(Identi\336er of item whose moniker should be) 297 359.32 T
(returned.) 297 346.32 T
2 9 Q
(Return:) 153 329.32 T
0 10 Q
(Size of item\325) 207 329.32 T
(s moniker) 262.75 329.32 T
(.) 307.94 329.32 T
81 312.98 531 317.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 312.98 531 317.98 R
7 X
0 0 0 1 0 0 0 K
V
50 316.98 609.01 316.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 304.98 T
2 F
(MSG_PREF_ITEM_GROUP_UPDA) 99 304.98 T
(TE_TEXT) 290.81 304.98 T
4 10 Q
(void MSG_PREF_ITEM_GROUP_UPDATE_TEXT\050) 99 290.31 T
4 9 Q
(ChunkHandle) 153 279.97 T
(textObject\051;) 261 279.97 T
0 10 Q
(This message updates the speci\336ed text object with text of the currently) 180 262.31 T
(selected item. The PrefItemGroup sends this to itself in conjunction with) 180 249.31 T
(either) 180 236.31 T
0 9 Q
(A) 210.37 236.31 T
(TTR_PREF_ITEM_GROUP_TEXT_DISPLA) 216.37 236.31 T
(Y) 399.73 236.31 T
0 10 Q
( or) 406.07 236.31 T
0 9 Q
-0.31 (A) 180 223.31 P
-0.31 (TTR_PREF_ITEM_GROUP_ST) 186 223.31 P
-0.31 (A) 317.19 223.31 P
-0.31 (TUS_TEXT) 323.19 223.31 P
0 10 Q
-0.35 (. By default, this message will also) 370.62 223.31 P
(cause the text object to send out its status message.) 180 210.31 T
2 9 Q
(Source:) 153 193.31 T
0 10 Q
(Self.) 207 193.31 T
2 9 Q
(Destination:) 153 176.31 T
0 10 Q
(Self.) 207 176.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1278" 20
%%Page: "1279" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1279) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 9 Q
0 X
(Interception:) 153 641.33 T
0 10 Q
(Default behavior is to fetch the moniker of the current selection, and) 207.5 641.33 T
(sent that to the text. The subclasser can use different text, if desired.) 207 628.33 T
2 14 Q
(22.4.4) 123.08 586 T
2 18 Q
(PrefStringItemClass) 180 586 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(Objects of this class, used together with a PrefItemGroup with its) 180 555.33 T
0 9 Q
-0.39 (PIFF_USE_ITEM_STRINGS) 180 542.33 P
0 10 Q
-0.43 ( \337ag set, allow for objects which act like GenItems) 301.18 542.33 P
(but can write an arbitrary string out to the .) 180 529.33 T
0 9 Q
(INI) 384.29 529.33 T
0 10 Q
( \336le if the user selects them.) 398.95 529.33 T
81 496.98 531 509 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 496.98 531 509 R
7 X
0 0 0 1 0 0 0 K
V
76.5 504.23 617.5 507.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 490.31 T
(22-) 147.13 490.31 T
(7 PrefStringItemClass Instance Data) 161.58 490.31 T
4 9 Q
(@class PrefStringItemClass, GenItemClass;) 81 475.98 T
(@instance ChunkHandle PSII_initFileString = 0;) 81 457.98 T
81 433.95 531 445.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 433.95 531 445.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 441.2 617.5 444.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
81 417.94 531 422.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 417.94 531 422.95 R
7 X
0 0 0 1 0 0 0 K
V
50 421.94 609.01 421.94 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 409.94 T
2 F
(MSG_PREF_STRING_ITEM_SET_INIT_FILE_STRING) 99 409.94 T
4 10 Q
(void MSG_PREF_STRING_ITEM_SET_INIT_FILE_STRING\050) 99 395.28 T
4 9 Q
(const char) 153 384.94 T
(*str\051;) 261 384.94 T
0 10 Q
(This message sets the string that is read and written in the .) 180 367.28 T
0 9 Q
(INI) 460.42 367.28 T
0 10 Q
( \336le.) 475.08 367.28 T
2 9 Q
(Interception:) 153 350.28 T
0 10 Q
-0.65 (Unlikely but possible. Default behavior sets the string and then checks) 207.5 350.28 P
(again with the .) 207 337.28 T
0 9 Q
(INI) 279.8 337.28 T
0 10 Q
( \336le to make sure item should be selected.) 294.46 337.28 T
81 320.94 531 325.94 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 320.94 531 325.94 R
7 X
0 0 0 1 0 0 0 K
V
50 324.94 609.01 324.94 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 312.94 T
2 F
(MSG_PREF_STRING_ITEM_CHECK_IF_IN_INIT_FILE_KEY) 99 312.94 T
4 10 Q
(Boolean MSG_PREF_STRING_ITEM_CHECK_IF_IN_INIT_FILE_KEY\050) 99 298.27 T
4 9 Q
(PrefItemGroupStringVars) 153 287.94 T
(*vars\051;) 297 287.94 T
0 10 Q
-0.23 (This message checks the passed string to see if the string bound to this item) 180 270.27 P
(is in one of its pieces. A PrefItemGroup will send this object when loading) 180 257.27 T
(options if it has the) 180 244.27 T
0 9 Q
(PIFF_USE_ITEM_STRINGS) 272.24 244.27 T
0 10 Q
( \337ag set.) 393.42 244.27 T
2 9 Q
(Source:) 153 227.27 T
0 10 Q
(PrefItemGroup object.) 207 227.27 T
2 9 Q
(Destination:) 153 210.27 T
0 10 Q
(PrefStringItem object.) 207 210.27 T
2 9 Q
(Interception:) 153 193.27 T
0 10 Q
-0.7 (May be intercepted if the subclass needs to check other things to decide) 207.5 193.27 P
(whether it should be selected. If you also wish to have the default) 207 180.27 T
-0.76 (behavior) 207 167.27 P
-0.76 (, you may call the superclass either before or after you\325ve made) 246.45 167.27 P
(your own decision, as appropriate.) 207 154.27 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1279" 21
%%Page: "1280" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1280) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 9 Q
0 X
(Parameters:) 153 641.33 T
5 10 Q
(vars) 207 641.33 T
0 F
(Information about the string.) 297 641.33 T
2 9 Q
(Return:) 153 624.33 T
0 10 Q
(Returns) 207 624.33 T
5 F
(true) 247.18 624.33 T
0 F
( \050i.e. non-zero\051 if bound string is within the string stored) 265.69 624.33 T
(in the local variable.) 207 611.33 T
2 14 Q
(22.4.5) 123.08 569 T
2 18 Q
(PrefBooleanGroupClass) 180 569 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(This class behaves as GenBooleanGroup, except that it saves its original) 180 538.33 T
(state and handles) 180 525.33 T
0 9 Q
(MSG_GEN_RESET) 265.02 525.33 T
0 10 Q
( appropriately) 347.19 525.33 T
(. It can also use item) 411.64 525.33 T
(strings or monikers when loading and saving options.) 180 512.33 T
81 479.98 531 492 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 479.98 531 492 R
7 X
0 0 0 1 0 0 0 K
V
76.5 487.23 617.5 490.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 473.31 T
(22-) 147.13 473.31 T
(8 PrefBooleanGroupClass Instance Data) 161.58 473.31 T
4 9 Q
(@class PrefBooleanGroupClass, PrefClass;) 81 458.98 T
(@instance PrefInitFileFlags) 81 447.98 T
(PBGI_initFileFlags = 0;) 256.5 447.98 T
(@instance word) 81 436.98 T
(PBGI_originalState = 0;) 256.5 436.98 T
81 412.95 531 424.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 412.95 531 424.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 420.2 617.5 423.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
81 396.94 531 401.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 396.94 531 401.95 R
7 X
0 0 0 1 0 0 0 K
V
50 400.94 609.01 400.94 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 388.94 T
2 F
(MSG_PREF_BOOLEAN_GROUP_SET_ORIGINAL_ST) 99 388.94 T
(A) 398.83 388.94 T
(TE) 406.61 388.94 T
4 10 Q
(void MSG_PREF_BOOLEAN_GROUP_SET_ORIGINAL_STATE\050) 99 374.28 T
4 9 Q
(word state\051;) 153 363.94 T
0 10 Q
(This message sets the \322original\323 state of the Boolean group.) 180 346.28 T
2 14 Q
(22.4.6) 123.08 303.94 T
2 18 Q
(PrefDynamicListClass) 180 303.94 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(Objects of) 180 273.28 T
3 F
(PrefDynamicListClass) 228.15 273.28 T
0 F
( act like GenDynamicList objects, but) 344.44 273.28 T
(with the intelligence to write their data to the .) 180 260.28 T
0 9 Q
(INI) 397.63 260.28 T
0 10 Q
( \336le. Developers will) 412.29 260.28 T
-0.13 (generally not use this class directory) 180 247.28 P
-0.13 (, but instead will subclass, intercepting) 347.68 247.28 P
(the following messages:) 180 234.28 T
0 9 Q
(MSG_PREF_DYNAMIC_LIST_BUILD_ARRA) 180 214.28 T
(Y) 371.5 214.28 T
0 10 Q
(T) 243 202.28 T
(o build the data structures which will be used when later) 248.75 202.28 T
(supplying monikers) 243 190.28 T
0 9 Q
(MSG_PREF_ITEM_GROUP_GET_ITEM_MONIKER) 180 171.28 T
0 10 Q
(T) 243 159.28 T
(o supply the moniker for a requested item on demand) 248.75 159.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1280" 22
%%Page: "1281" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1281) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
(MSG_PREF_DYNAMIC_LIST_FIND_ITEM) 180 641.33 T
0 10 Q
(T) 243 629.33 T
(o \336nd a given item when passed its moniker) 248.75 629.33 T
(.) 451.19 629.33 T
(By handling these three messages, the developer will have a dynamic list) 180 610.33 T
-0.7 (that can properly load and save its selection and will scroll to the correct item) 180 597.33 P
(in response to keyboard input.) 180 584.33 T
(The load and save mechanism is currently only con\336gured for exclusive) 180 564.33 T
(dynamic lists.) 180 551.33 T
81 534.99 531 540 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 534.99 531 540 R
7 X
0 0 0 1 0 0 0 K
V
50 538.99 609.01 538.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 526.99 T
2 F
(MSG_PREF_DYNAMIC_LIST_BUILD_ARRA) 99 526.99 T
(Y) 343.91 526.99 T
4 10 Q
(void MSG_PREF_DYNAMIC_LIST_BUILD_ARRAY\050\051;) 99 512.33 T
0 F
(The PrefDynamicList sends itself this message in response to) 180 494.33 T
0 9 Q
(MSG_PREF_INIT) 180 481.33 T
0 10 Q
(.) 254.91 481.33 T
2 9 Q
(Source:) 153 464.33 T
0 10 Q
(Self.) 207 464.33 T
2 9 Q
(Destination:) 153 447.33 T
0 10 Q
(Self.) 207 447.33 T
2 9 Q
(Interception:) 153 430.33 T
0 10 Q
(The subclasser should create an array of item strings, ideally sorted.) 207.5 430.33 T
81 413.98 531 418.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.98 531 418.99 R
7 X
0 0 0 1 0 0 0 K
V
50 417.98 609.01 417.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.98 T
2 F
(MSG_PREF_DYNAMIC_LIST_FIND_ITEM) 99 405.98 T
4 10 Q
( Boolean MSG_PREF_DYNAMIC_LIST_FIND_ITEM\050) 99 391.32 T
4 9 Q
(word) 153 380.98 T
(*itemPtr,) 261 380.98 T
(const char) 153 370.98 T
(*str,) 261 370.98 T
(Boolean) 153 360.98 T
(ignoreCase\051;) 261 360.98 T
0 10 Q
(This message \336nds an item given a moniker) 180 343.32 T
(. It is normally used in the) 382.63 343.32 T
(context of loading options.) 180 330.32 T
2 9 Q
(Source:) 153 313.32 T
0 10 Q
(Self.) 207 313.32 T
2 9 Q
(Destination:) 153 296.32 T
0 10 Q
(Self.) 207 296.32 T
2 9 Q
(Parameters:) 153 279.32 T
5 10 Q
(itemPtr) 207 279.32 T
0 F
(Pointer to space in which to return a word.) 297 279.32 T
5 F
(str) 207 263.32 T
0 F
(String to search for) 297 263.32 T
(.) 385.7 263.32 T
5 F
(ignoreCase) 207 247.32 T
0 F
(Flag requesting a case-insensitive search.) 297 247.32 T
2 9 Q
(Return:) 153 230.32 T
0 10 Q
(Returns) 207 230.32 T
5 F
(true) 247.18 230.32 T
0 F
( \050i.e. non-zero\051 if an item was found with a moniker) 265.69 230.32 T
(matching the passed string;) 207 217.32 T
5 F
(itmPtr) 338.31 217.32 T
0 F
( will have been \336lled with the) 368.68 217.32 T
-0.05 (number of the matching item. If no such item was found, the message) 207 204.32 P
(will return) 207 191.32 T
5 F
(false) 259.78 191.32 T
0 F
( \050i.e. zero\051 and) 281.06 191.32 T
5 F
(itmPtr) 349.21 191.32 T
0 F
( will point to the \336rst item after) 379.58 191.32 T
(the requested item.) 207 178.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1281" 23
%%Page: "1282" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1282) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 14 Q
0 X
(22.4.7) 123.08 636 T
2 18 Q
(T) 180 636 T
(itledGlyphClass) 190.67 636 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(Each T) 180 605.33 T
(itledGlyph displays two monikers, one icon and one text.) 212.53 605.33 T
3 F
(T) 180 592.33 T
(itledGlyphClass) 186.97 592.33 T
0 F
( has no unique instance data or messages. Y) 269.75 592.33 T
(ou are) 472.94 592.33 T
-0.52 (expected to provide a list of monikers in the) 180 579.33 P
5 9 Q
-0.47 (GI) 379.97 579.33 P
5 10 Q
-0.52 (_visMoniker) 390.63 579.33 P
0 F
-0.52 ( \336eld, and this list) 446.91 579.33 P
(should include several icons and a text moniker) 180 566.33 T
(. Normally the same icon is) 399.28 566.33 T
(used as by the routine providing Preferences module information.) 180 553.33 T
2 14 Q
(22.4.8) 123.08 511 T
2 18 Q
(PrefInteractionClass) 180 511 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(If you have any Preferences objects which write out their values to the .) 180 480.33 T
0 9 Q
(INI) 510.57 480.33 T
0 10 Q
(\336le, and if you would normally have those objects appear under a) 180 467.33 T
-0.05 (GenInteraction, then you should have them appear under a PrefInteraction) 180 454.33 P
(instead.) 180 441.33 T
-0.01 (Objects of the class will forward the following messages on to their children:) 180 421.33 P
0 9 Q
(MSG_PREF_INIT) 180 401.33 T
0 10 Q
(,) 254.91 401.33 T
0 9 Q
(MSG_PREF_SET_ORIGINAL_ST) 260.47 401.33 T
(A) 401.66 401.33 T
(TE) 407.66 401.33 T
0 10 Q
-0.85 (Object will send these messages to every child that is a subclass) 243 389.33 P
(of) 243 377.33 T
3 F
(PrefClass) 254.11 377.33 T
0 F
(.) 303.93 377.33 T
0 9 Q
(MSG_MET) 180 358.33 T
(A_LOAD_OPTIONS) 226.17 358.33 T
0 10 Q
-0.69 (Object will send this to each child that satis\336es the appropriate) 243 346.33 P
(criteria \050based on the child\325) 243 334.33 T
(s) 368.38 334.33 T
0 9 Q
(P) 375.79 334.33 T
(A_LOAD_IF_USABLE) 381.13 334.33 T
0 10 Q
( \337ag\051.) 475.8 334.33 T
0 9 Q
(MSG_MET) 180 315.33 T
(A_SA) 226.17 315.33 T
(VE_OPTIONS) 248.34 315.33 T
0 10 Q
-0.69 (Object will send this to each child that satis\336es the appropriate) 243 303.33 P
(criteria \050based on the child\325) 243 291.33 T
(s) 368.38 291.33 T
0 9 Q
(P) 375.79 291.33 T
(A_SA) 381.13 291.33 T
(VE_IF_CHANGED) 403.29 291.33 T
0 10 Q
(,) 483.29 291.33 T
0 9 Q
(P) 243 279.33 T
(A_SA) 248.34 279.33 T
(VE_IF_ENABLED) 270.5 279.33 T
0 10 Q
(, and) 348.5 279.33 T
0 9 Q
(P) 374.25 279.33 T
(A_SA) 379.58 279.33 T
(VE_IF_USABLE) 401.75 279.33 T
0 10 Q
( \337ags\051.) 471.92 279.33 T
0 9 Q
(MSG_PREF_HAS_ST) 180 260.33 T
(A) 270.51 260.33 T
(TE_CHANGED) 276.52 260.33 T
0 10 Q
(,) 341.85 260.33 T
0 9 Q
(MSG_PREF_GET_REBOOT_INFO) 347.41 260.33 T
0 10 Q
(Propagates these messages to children, returning the value) 243 248.33 T
(from the \336rst child that returns a non-null response.) 243 236.33 T
81 204.98 531 217 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 204.98 531 217 R
7 X
0 0 0 1 0 0 0 K
V
76.5 212.23 617.5 215.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 198.31 T
(22-) 147.13 198.31 T
(9 PrefInteractionClass Instance Data) 161.58 198.31 T
4 9 Q
(@class PrefInteractionClass, PrefClass;) 81 183.98 T
(@instance PrefInteractionAttrs PII_attrs = 0;) 81 165.98 T
(typedef ByteFlags PrefInteractionAttrs;) 81 147.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1282" 24
%%Page: "1283" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1283) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(#define PIA_LOAD_OPTIONS_ON_INITIATE 0x80) 81 642 T
(/* If set, then the dialog will send MSG_PREF_INIT,) 81 631 T
( * followed by MSG_META_LOAD_OPTIONS to itself when it) 81 620 T
( * receives a MSG_GEN_INTERACTION_INITIATE */) 81 609 T
(#define PIA_SAVE_OPTIONS_ON_APPLY 0x40) 81 591 T
(/* This flag is normally OFF to allow non-dialog prefInteractions to reside inside) 81 580 T
( * other interactions without duplicate SAVE_OPTIONS messages being sent. */) 81 569 T
81 544.98 531 557 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 544.98 531 557 R
7 X
0 0 0 1 0 0 0 K
V
76.5 552.23 617.5 555.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 14 Q
0 X
0 0 0 1 0 0 0 K
(22.4.9) 123.08 504.98 T
2 18 Q
(PrefDialogClass) 180 504.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(The top level object of any Preferences module) 180 474.31 T
0 9 Q
(UI) 396.49 474.31 T
0 10 Q
( tree should probably be a) 407.49 474.31 T
-0.12 (PrefDialog object. If the user) 180 461.31 P
-0.12 (\325) 312.85 461.31 P
-0.12 (s changes will necessitate a system reset, then) 314.52 461.31 P
(this object will be responsible for rebooting the system.) 180 448.31 T
(On receiving) 180 428.31 T
0 9 Q
(MSG_GEN_APPL) 241.48 428.31 T
(Y) 316.16 428.31 T
0 10 Q
(, the dialog sends) 321.39 428.31 T
0 9 Q
-0.29 (MSG_PREF_GET_REBOOT_INFO) 180 415.31 P
0 10 Q
-0.32 ( to itself \050which is propagated to all children) 327.18 415.31 P
(via) 180 402.31 T
3 F
(PrefInteractionClass) 196.86 402.31 T
0 F
(\051. If any children require reboot, then the dialog) 305.75 402.31 T
-0.76 (sends) 180 389.31 P
0 9 Q
-0.69 (MSG_PREF_DIALOG_CONFIRM_REBOOT) 208.12 389.31 P
0 10 Q
-0.76 ( to itself, which normally puts) 394.46 389.31 P
(up a con\336rmation dialog box \050this can be subclassed to provide other) 180 376.31 T
(behavior\051. If user con\336rms reboot, then the dialog will send) 180 363.31 T
0 9 Q
(MSG_PREF_DIALOG_REBOOT) 180 350.31 T
0 10 Q
( to itself, and) 316.34 350.31 T
0 9 Q
(MSG_GEN_APPL) 379.69 350.31 T
(Y) 454.37 350.31 T
0 10 Q
( to its) 460.71 350.31 T
(superclass to save the options \050it being assumed that the) 180 337.31 T
0 9 Q
(PIA_SA) 180 324.31 T
(VE_OPTIONS_ON_APPL) 211.83 324.31 T
(Y) 319.02 324.31 T
0 10 Q
( \337ag is set\051.) 325.36 324.31 T
81 291.95 531 303.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 291.95 531 303.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 299.2 617.5 302.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 285.29 T
(22-) 147.13 285.29 T
(10 PrefDialogClass Instance Data) 161.58 285.29 T
4 9 Q
(@class PrefDialogClass, PrefInteractionClass;) 81 270.95 T
(@default GII_visibility = GIV_DIALOG;) 81 252.95 T
(@default GII_type = GIT_PROPERTIES;) 81 234.95 T
(@default GII_attrs = @default | GIA_NOT_USER_INITIATABLE | GIA_MODAL;) 81 216.95 T
(@default PII_attrs = @default | PIA_SAVE_OPTIONS_ON_APPLY;) 81 198.95 T
81 174.93 531 186.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 174.93 531 186.95 R
7 X
0 0 0 1 0 0 0 K
V
76.5 182.18 617.5 185.68 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1283" 25
%%Page: "1284" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1284) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(MSG_PREF_DIALOG_CONFIRM_REBOOT) 99 634.99 T
4 10 Q
(@message Boolean MSG_PREF_DIALOG_CONFIRM_REBOOT\050) 99 620.33 T
4 9 Q
(optr) 153 609.99 T
(string\051;) 261 609.99 T
0 10 Q
-0.77 (By default, the PrefDialog will respond to this message by putting up a dialog) 180 592.33 P
(box asking the user if he wants to restart the system.) 180 579.33 T
2 9 Q
(Parameters:) 153 562.33 T
5 10 Q
(string) 207 546.33 T
0 F
-0.08 (Object pointer of string which will be inserted in a) 297 546.33 P
-0.87 (sentence of the form \322The system software will shut) 297 533.33 P
(down and restart to change the) 297 520.33 T
5 F
(string) 444.05 520.33 T
0 F
(.\323) 471.26 520.33 T
2 9 Q
(Return:) 153 503.33 T
0 10 Q
-0.68 (Returns) 207 503.33 P
5 F
-0.68 (true) 246.5 503.33 P
0 F
-0.68 ( \050i.e. non-zero\051 to con\336rm the reboot; returns) 265.01 503.33 P
5 F
-0.68 (false) 467.14 503.33 P
0 F
-0.68 ( \050i.e. zero) 488.42 503.33 P
(to deny the reboot.) 207 490.33 T
81 473.98 531 478.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 473.98 531 478.99 R
7 X
0 0 0 1 0 0 0 K
V
50 477.98 609.01 477.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 465.98 T
2 F
(MSG_PREF_DIALOG_REBOOT) 99 465.98 T
4 10 Q
(void MSG_PREF_DIALOG_REBOOT\050\051;) 99 451.32 T
0 F
(This message causes) 180 433.32 T
0 9 Q
(GEOS) 278.35 433.32 T
0 10 Q
( to restart. This message does not return.) 304.52 433.32 T
2 14 Q
(22.4.10) 115.3 390.98 T
2 18 Q
(PrefT) 180 390.98 T
(extClass) 224.68 390.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
-0.03 (Objects of this class act like GenT) 180 360.32 P
-0.03 (ext objects, but have mechanisms to write) 335.05 360.32 P
(their text string to the .) 180 347.32 T
0 9 Q
(INI) 288.9 347.32 T
0 10 Q
( \336le.) 303.56 347.32 T
81 314.96 531 326.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 314.96 531 326.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 322.21 617.5 325.71 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 308.29 T
(22-) 147.13 308.29 T
(1) 161.58 308.29 T
(1 PrefT) 166.59 308.29 T
(extClass Instance Data) 199.75 308.29 T
4 9 Q
(@class PrefTextClass, PrefClass;) 81 293.96 T
(@instance ChunkHandle PTI_originalText = 0;) 81 275.96 T
(@vardata ChunkHandle ATTR_PREF_TEXT_INIT_FILE_CATEGORY_TARGET;) 81 257.96 T
(/* PrefTextClass has the wonderful ability that it can set another) 81 246.96 T
( * object\325s .INI. file category from its text. Category gets updated) 81 235.96 T
( * whenever the text object receives MSG_GEN_TEXT_SEND_STATUS_MSG.) 81 224.96 T
( * To make this happen, put the ChunkHandle of the object in this field. */) 81 213.96 T
81 189.94 531 201.96 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 189.94 531 201.96 R
7 X
0 0 0 1 0 0 0 K
V
76.5 197.19 617.5 200.69 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1284" 26
%%Page: "1285" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1285) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 14 Q
0 X
(22.4.1) 116.07 636 T
(1) 154.22 636 T
2 18 Q
(PrefControlClass) 180 636 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(This subclass of) 180 605.33 T
3 F
(PrefInteractionClass) 255.94 605.33 T
0 F
( acts like GenControl, but bypasses) 364.83 605.33 T
-0.82 (some GenControl functionality) 180 592.33 P
-0.82 (. This class is assumed not to be on noti\336cation) 319.3 592.33 P
(lists. Objects of this class will pass) 180 579.33 T
0 9 Q
(MSG_GEN_RESET) 342.26 579.33 T
0 10 Q
( to their children as a) 424.43 579.33 T
(normal GenInteraction would. This class has no special instance data or) 180 566.33 T
(messages.) 180 553.33 T
2 14 Q
(22.4.12) 115.3 511 T
2 18 Q
(PrefT) 180 511 T
(imeDateControlClass) 225.68 511 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 10 Q
(This controller allows the user to set the system time. This class\325 messages) 180 480.33 T
(and instance data \336elds are internal. T) 180 467.33 T
(o get and set the date and time) 359.3 467.33 T
(directly) 180 454.33 T
(, use) 214.07 454.33 T
3 F
(T) 238.15 454.33 T
(imerGetDateAndT) 245.12 454.33 T
(ime\050\051) 340.23 454.33 T
0 F
( and) 367.08 454.33 T
3 F
(T) 390.05 454.33 T
(imerSetDateAndT) 397.02 454.33 T
(ime\050\051) 490.47 454.33 T
0 F
(.) 517.32 454.33 T
2 14 Q
(22.4.13) 115.3 412 T
2 18 Q
(PrefT) 180 412 T
(riggerClass) 225.02 412 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
3 10 Q
(PrefT) 180 381.33 T
(riggerClass) 209.01 381.33 T
0 F
( is not a subclass of) 268.46 381.33 T
3 F
(PrefClass) 360.52 381.33 T
0 F
(; it is a subclass of) 410.34 381.33 T
3 F
(GenT) 180 368.33 T
(riggerClass) 207.52 368.33 T
0 F
(. It acts like a normal trigger except that when activated) 266.97 368.33 T
(it will send a second message if it has been set up with a) 180 355.33 T
0 9 Q
(A) 180 342.33 T
(TTR_PREF_TRIGGER_ACTION) 186 342.33 T
0 10 Q
( \336eld.) 323.17 342.33 T
81 309.98 531 322 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 309.98 531 322 R
7 X
0 0 0 1 0 0 0 K
V
76.5 317.23 617.5 320.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 303.31 T
(22-) 147.13 303.31 T
(12 PrefT) 161.58 303.31 T
(riggerClass Instance Data) 200.49 303.31 T
4 9 Q
(@class PrefTriggerClass, GenTriggerClass;) 81 288.98 T
(@vardata PrefTriggerAction ATTR_PREF_TRIGGER_ACTION;) 81 270.98 T
(typedef struct {) 81 252.98 T
(word PTA_message;) 125 241.98 T
(optr PTA_dest;) 125 230.98 T
(} PrefTriggerAction;) 81 219.98 T
81 195.95 531 207.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 195.95 531 207.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 203.2 617.5 206.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1285" 27
%%Page: "1286" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1286) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
2 14 Q
0 X
(22.4.14) 115.3 636 T
2 18 Q
(PrefT) 180 636 T
(ocListClass) 224.68 636 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
3 10 Q
(PrefT) 180 605.33 T
(ocListClass) 208.71 605.33 T
0 F
( allows users to choose a device driver by selecting the) 267.97 605.33 T
(appropriate device name. It is assumed that each driver can control one or) 180 592.33 T
-0.39 (more types of devices. When you set up each driver) 180 579.33 P
-0.39 (, you will set up strings to) 411.3 579.33 P
(describe which devices that driver can control.) 180 566.33 T
(This class is a fully functional subclass of) 180 546.33 T
3 F
(PrefDynamicListClass) 373.55 546.33 T
0 F
( \050i.e. it) 489.84 546.33 T
(handles those messages one must intercept to create a viable Preferences) 180 533.33 T
-0.5 (dynamic list class\051. It can be used to scan a list of \336les \050not necessarily device) 180 520.33 P
(drivers\051, as long as all of those \336les are in the same directory and have the) 180 507.33 T
(same characters in their token.) 180 494.33 T
81 378.96 531 390.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 378.96 531 390.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 386.21 617.5 389.71 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 372.29 T
(22-) 147.13 372.29 T
(13 PrefT) 161.58 372.29 T
(ocListClass Instance Data) 200.3 372.29 T
4 9 Q
(@class PrefTocListClass, PrefDynamicListClass;) 81 357.96 T
(@instance TocUpdateCategoryFlags PTLI_flags = 0;) 81 339.96 T
(typedef WordFlags TocUpdateCategoryFlags;) 81 310.96 T
(#define TUCF_EXTENDED_DEVICE_DRIVERS 0x8000) 81 299.96 T
(/* Files being enumerated are assumed to be extended device drivers. */) 81 288.96 T
(#define TUCF_CUSTOM_FILES 0x4000) 81 270.96 T
(/* The TUCP_fileArrayElementSize field will be used when creating the files array.) 81 259.96 T
( * Otherwise, each element of the files array will be of size TocFileStruct.) 81 248.96 T
( * NOTE: If this flag is used, the data structure used for each file) 81 237.96 T
( * element MUST contain TocFileStruct as its first element. */) 81 226.96 T
(#define TUCF_ADD_CALLBACK 0x2000) 81 208.96 T
(/* TUCP_addCallback contains a fptr to a callback) 81 197.96 T
( * routine that will be called when a file is added to the files array. */) 81 186.96 T
81 545.02 171 611.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(Advanced T) 81 558.45 T
(opic) 131.35 558.45 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81.5 610.95 170.5 610.95 2 L
1 H
2 Z
N
1 X
90 450 13.5 13.5 101.25 587.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 587.33 A
0 0 0 1 0 0 0 K
81 567.21 121.5 607.71 R
1 H
0 X
N
0 0 0 1 0 0 0 K
36 72 576 720 C
81 144 531 648 C
173.02 407.98 531 491 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
179 427 367 488 R
7 X
0 0 0 1 0 0 0 K
V
0.5 H
0 Z
0 X
N
2 10 Q
(Figure) 180.02 417.33 T
(22-) 213.36 417.33 T
(3) 227.81 417.33 T
5 F
(PrefT) 236.15 417.33 T
(ocList in Action) 260.99 417.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  3422     
386 115 185.28 55.2 0 180.69 429.4 BEGINBITMAPBWc
J"
O"CF





&J"
F03FF9FFE7KC8$J"
F39FFFMC97'
991981C3C1C87(
98F99CE79CC7CF#:"J"
F039CFIC8#9$J"
F3F980CFFFHC9;"
9F;$
9CCFCF:#
F1C1SJ"
HCF






"j%
E0L078001C0"z$
EALAAA79555"j$
E0L17AA29"J$
E8L079415"J"@"<$
E0:066017A989&8";'8%8#8)<$
E8F806003060C003006601F0600180C00C7E060F800006001830079595#E#9#:"9%?$
E18C031800006318C0000017ABC9185<$
E98C7E3E3F0F80603E1F0F8DC0C7C780500F8DCF1B98FC7E3E018631F0F8F1807C6E67E3C180793C518*8*=$
E18CC6633198C060433198CE00CC6300010CE061C198CC66303198C6180C6706631817A7E1#<%<&;"8%@$
E9FC3F3018CC00FCC061817E060F8C060797E5#9"8$8#9#;*A$
E18C9F631F1FCFE3018C67F01860318F8600CC17AFF1":#8'@#9#C#
E9980001980C18CC03660080C6078F";"8$8"9"=#8&9"<$
E1C03198CC6319300C98C618CC6630179FF958*=$
;E98C7E3E3F0F807E3F1F0F8C0F87C1C06601F0FCC039818FC7E3E01F0F838F87C6067E0E078001"j$c$<#
E0860000660006017A0"J"8"@"<#
E870C00000780"J#I$
E0707C0179FF9"z"
EALAAA7"Z"8"
EFLF7C7

H"A#?"
E7FE7FE77%8)9#:"80
07F9FFCF9FF9FCCFF07FFFFCE601C1F3FFCFFCE07FFFFE7C1FFFFE7FF9F3#?#;#:":%8&
EE73E73FCFCF9C8FFCE73F79CFFFFFFF8&;'85
81C1C0F07FF839187F9CE769CC0F07F9FE0E461FFCFF9E7383C1C39FE0E466070F98&;%8"8(:*
399CCE673FF798FCFF9FCE673F9FDE63F33399CE79FCE63E67397"@#A#:)=#
03F819E067E07399FE7C1CFE7E80017"9"<#:"9"8";'
7360F3993F60CEE7F39C1E7FCC;%C#?#A#
67FF9F3967FF9FCEAAA9<";":#:#;"8&9":#
3F33E67F3F9CFC99CE79CCE6F395558(8(8):+:#
81C1C0F07F8183F07819FE3FC00EC0C0F07FC1E067F8F83C1F1C1E0E7E607C73AAA9"Z#S#R$:#
EF3FCCFFE7FE7FFE79555J"?#?":#
49CFFFFFFAAA9J"J#
4C199555J#G"<#
4FFFFFFAAA9J#
O 9555J#
O AAA9J#
O 9555H"A#?":#
E7FE7FE7AAA97%8)9#:"80:#
07F9FFCF9FF9FCCFF07FFFFCE601C1F3FF87FCE07FFFFE7C1FFFFE7FF9F39555#?#;#:":%8&<#
EE73E73FCFCF9C33FCE73F79CFFFFFFFAAA98&;'85:#
81C1C0F07FF839187F9CE769CC0F07F9FE0E461FE73F9E7383C1C39FE0E466070F995558&;%8"8*8*;#
399CCE673FF798FCFF9FCE673F9FDE63F3FFF33399CE79FCE63E6739AAA97"@#A#8+=#
03F819E067E7F9E07399FE7C1CFE7E95557"9"<#:"9"8"9)?#
7360F3993F60CECFF9E7F39C1E7FCCAAA9;%C#;"9#A#
67FF9F3967FF9F9FCE9555<";":#:#:#8&9":#
3F33E67F3F9C3FFC99CE79CCE6F3AAA98(8(8+8+:#
81C1C0F07F8183F07819FE3FC00EC0C0F07FC1E067F8FE03F83C1F1C1E0E7E607C739555"Z#S#R$:#
EF3FCCFFE7FE7FFE7AAA9J"?#?":#
49CFFFFFF9555J"J#
4C19AAA9J#G"<#
4FFFFFF9555J#
O AAA9J#
O 9555J#
O AAA9J"@"A#
73FE795557'90:'A#
070383FE0E7FE7FFF9E607FF3C078FFF87F3FE703FF9F3FFFCFFF3AAA9':0:#E#
EE733F39FCE6FFFFF8E673FE3FCF3FFF33E3FE73FFF8E395559"85A#
3F=673001C0E707F86673FF3F9E7FFE73C3FCF3F03C1E0E07F84383C0E0F9AAA9=(9&8,A#
339CCE66F3F9261E07FFF393F399CCE673F913399CCE7995557$<&8+9"E#
0307316703F98607CE7307E733FCF07399FCB3AAA97$<&8+9"8"B#
733F396673F9C67FE673FFCE73FCF3F39C1CF3C09555C"<#9#<#A#
E69E019FCCCFF9AAA9F#8'=#A#
3CCE3FF3FE73F399CE7395558&8$:&8&9%A#
0383FE0E70C0E7033E1F07FE0370303C1E0E83C0E0F3AAA9"Q$X#T"A#
EF3FFFCF3FF3E79555<"F"@"A#
E7FFFFAAA9<#J#
F07FF9555<%D"J#
FFFFFFFFFF5AAA9J#
O 9555J#
O AAA9J#
O 9555J"=#C#
73FFE7FAAA97'95C#
070383FE0E7F7E7FFF9E607FF3C078FFF87F3FE73039F3F9F3FFFCFFF3F8001':-8%H#
EE733F39FCE6FFFFF8E673FE3FCF3FFF33E3398E3F8E9FF99"85C#
3F;673001C0E707F86673FF3F9E7FFE73C3FCF339843F84383C0E0F9F8FF1=(9&8)D"
339CCE66F3F9261E07FFF39303913F913399CCE7AF7$<&8&8%H#
0307316703F98607CE7307E733399B3F9B97E57$<&8&9$9"D#
733F396673F9C67FE673FFCE739F3F9F07A7E1C"<#?"D#
E69E01FF93C5F#8%=#C#
3CCE3FF3FE73E73FABC98&8$:&9"9%D#
0383FE0E70C0E7033E1F07FE0303383C0E0F9595"Q$X"R#C#
EF3FFFCF3FFE7FA989<"F"=#C#
E7FFFFFF9415<#J#
F07FFAA29<%J#
FFFFFFFFD9555"j%
E0L078001C0Z"
O"CF



ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1286" 28
%%Page: "1287" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1287) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(#define TUCF_DIRECTORY_NOT_FOUND 0x1000) 81 642 T
(/* Don\325t actually scan the directory, because it doesn\325t exist.) 81 631 T
( * Just create the category, and leave it empty. */) 81 620 T
(@instance TocCategoryStruct PTLI_tocInfo = {\322\322, 0, 0};) 81 602 T
(typedef struct {) 81 584 T
(TokenChars) 125 573 T
(TCS_tokenChars;) 212.5 573 T
(DBGroupAndItem) 125 562 T
(TCS_files;) 212.5 562 T
(/* file name array */) 301 562 T
(DBGroupAndItem) 125 551 T
(TCS_devices;) 212.5 551 T
(/* device name array--only if) 301 551 T
( * TCF_EXTENDED_DEVICE_DRIVERS is set. */) 301 540 T
(} TocCategoryStruct;) 81 529 T
(@vardata PrefTocExtraEntry ATTR_PREF_TOC_LIST_EXTRA_ENTRY_1;) 81 511 T
(@vardata PrefTocExtraEntry ATTR_PREF_TOC_LIST_EXTRA_ENTRY_2;) 81 500 T
(typedef struct {) 81 482 T
(ChunkHandle) 125 471 T
(PTEE_item;) 212.5 471 T
(/* lptr of item name. For device lists, this is) 125 460 T
( * the device. For others, this is the file name */) 125 449 T
(ChunkHandle) 125 431 T
(PTEE_driver;) 212.5 431 T
(/* Driver name \050for device lists ONLY\051 */) 125 420 T
(word) 125 402 T
(PTEE_info;) 212.5 402 T
(/* Extra word of information */) 125 391 T
(} PrefTocExtraEntry;) 81 380 T
(@vardata char ATTR_PREF_TOC_LIST_INFO_KEY[];) 81 362 T
(/* This key is used to write the \322info\323 word for device lists */) 81 351 T
81 326.98 531 339 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 326.98 531 339 R
7 X
0 0 0 1 0 0 0 K
V
76.5 334.23 617.5 337.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
-0.05 (Use) 180 309.31 P
0 9 Q
-0.04 (A) 200.51 309.31 P
-0.04 (TTR_GEN_P) 206.51 309.31 P
-0.04 (A) 260.19 309.31 P
-0.04 (TH_DA) 266.19 309.31 P
-0.04 (T) 297.2 309.31 P
-0.04 (A) 302.71 309.31 P
0 10 Q
-0.05 ( to tell the PrefT) 309.2 309.31 P
-0.05 (ocList object in which directory) 384.4 309.31 P
(to look for the device drivers. The PrefT) 180 296.31 T
(ocList will store the list of device) 362.42 296.31 T
-0.08 (drivers and device names in) 180 283.31 P
0 9 Q
-0.08 (DB) 311.81 283.31 P
0 10 Q
-0.08 ( items referenced in the) 325.31 283.31 P
5 9 Q
-0.08 (PTLI) 437.11 283.31 P
5 10 Q
-0.08 (_toolInfo) 458.95 283.31 P
0 F
-0.08 ( \336eld\325) 499.31 283.31 P
-0.08 (s) 523.67 283.31 P
5 9 Q
-0.12 (TCS) 180 270.31 P
5 10 Q
-0.13 (_\336les) 198.67 270.31 P
0 F
-0.13 ( and) 221.99 270.31 P
5 9 Q
-0.12 (TCS) 244.7 270.31 P
5 10 Q
-0.13 (_devices) 263.36 270.31 P
0 F
-0.13 ( slots\321it will do this automatically) 300.75 270.31 P
-0.13 (, so if you wish) 460.71 270.31 P
-0.7 (the default behavior) 180 257.31 P
-0.7 (, leave these as zero when declaring the object. If you will) 271.39 257.31 P
(write your own handlers for keeping track of driver information, you may) 180 244.31 T
-0.73 (wish to work with these \336elds as there are some routines which have been set) 180 231.31 P
(up to work with them.) 180 218.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1287" 29
%%Page: "1288" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1288) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
2 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(22-) 147.13 629.31 T
(14 PrefT) 161.58 629.31 T
(ocList Framework) 200.3 629.31 T
4 9 Q
(@object PrefTocListClass MyPrefToc = {) 81 614.98 T
(PTLI_flags) 125 603.98 T
(= @default | TUCF_EXTENDED_DEVICE_DRIVERS;) 212.5 603.98 T
(PTLI_tocInfo) 125 592.98 T
(= {\322) 212.5 592.98 T
6 F
(TOKN) 234.1 592.98 T
4 F
(\323, 0, 0};) 255.7 592.98 T
(HINT_ITEM_GROUP_SCROLLABLE;) 125 581.98 T
(ATTR_GEN_INIT_FILE_KEY = \322) 125 570.98 T
6 F
(keyName) 265.4 570.98 T
4 F
(\323;) 303.2 570.98 T
(ATTR_GEN_PATH_DATA = {) 125 559.98 T
6 F
(file path containing drivers) 249.2 559.98 T
4 F
( };) 400.4 559.98 T
(}) 81 548.98 T
81 524.95 531 536.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 524.95 531 536.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 532.2 617.5 535.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(The following routines are rather esoteric. Y) 180 507.29 T
(ou should only use them if you) 383.53 507.29 T
-0.35 (wish to subclass) 180 494.29 P
3 F
-0.36 (PrefT) 256.55 494.29 P
-0.36 (ocListClass) 285.26 494.29 P
0 F
-0.35 (\325 behavior and wish to continue using its) 344.52 494.29 P
(existing data structures.) 180 481.29 T
3 F
(T) 180 461.29 T
(ocSortedNameArrayAdd\050\051) 186.3 461.29 T
0 F
-0.21 (Use this routine to add a new name to a sorted array) 243 449.29 P
-0.21 (. The new) 483.85 449.29 P
-0 (name will be inserted in its correct place in the alphabetically) 243 437.29 P
(sorted array) 243 425.29 T
(.) 298.74 425.29 T
3 F
(T) 180 406.29 T
(ocSortedNameArrayFind\050\051) 186.3 406.29 T
0 F
(This routine determines whether a given name is in the) 243 394.29 T
0 9 Q
(TOC) 503.4 394.29 T
0 10 Q
(List\325) 243 382.29 T
(s sorted name array) 263.01 382.29 T
(, and will return the position of the) 354.5 382.29 T
(name\325) 243 370.29 T
(s element if found.) 270.23 370.29 T
3 F
(T) 180 351.29 T
(ocFindCategory\050\051) 186.3 351.29 T
0 F
(Use this routine to \336nd a category in the T) 243 339.29 T
(oc \336le. The) 438.77 339.29 T
5 9 Q
(TCS) 243 327.29 T
5 10 Q
(_tokenChars) 261.67 327.29 T
0 F
( \336eld of the passed) 319.25 327.29 T
3 F
(T) 407.78 327.29 T
(ocCategoryStruct) 414.08 327.29 T
0 F
(should already be \336lled in; this routine will \336ll in the other) 243 315.29 T
(\336elds.) 243 303.29 T
3 F
(T) 180 284.29 T
(ocNameArrayFind\050\051) 186.3 284.29 T
0 F
(Use this routine to get back the token associated with a name) 243 272.29 T
(in the name array) 243 260.29 T
(. If the name is not found, the routine will) 325.42 260.29 T
(return) 243 248.29 T
0 9 Q
(CA_NULL_ELEMENT) 275.77 248.29 T
0 10 Q
(.) 370.85 248.29 T
3 F
(T) 180 229.29 T
(ocNameArrayGetElement\050\051) 186.3 229.29 T
0 F
(This routine takes a name array and a token and returns) 243 217.29 T
(information about the name array element with the given) 243 205.29 T
(token.) 243 193.29 T
3 F
(T) 180 174.29 T
(ocUpdateCategory\050\051) 186.3 174.29 T
0 F
(This complicated routine will update a category using a) 243 162.29 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1288" 30
%%Page: "1289" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Object Class Reference) 401.61 692.67 T
162 666.34 558 678.01 R
7 X
V
0 10 Q
0 X
(1289) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
1 60 Q
0 X
(u) 502.86 85 T
2 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
2 8 Q
0 X
(22.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 10 Q
0 X
-0.19 (callback routine which you must write. It updates the \336le lists) 243 641.33 P
(by scanning the current directory) 243 629.33 T
(.) 396.32 629.33 T
3 F
(T) 180 610.33 T
(ocNameArrayAdd\050\051) 186.3 610.33 T
0 F
(Use this routine to add an element to a T) 243 598.33 T
(oc name array) 432.12 598.33 T
(.) 496.94 598.33 T
3 F
(T) 180 579.33 T
(ocDBLock\050\051) 186.3 579.33 T
0 F
(Use this routine to lock one of the name arrays.) 243 567.33 T
3 F
(T) 180 548.33 T
(ocDBLockGetRef\050\051) 186.3 548.33 T
0 F
-0.26 (This) 243 536.33 P
0 9 Q
-0.24 (C) 266.08 536.33 P
0 10 Q
-0.26 (-only routine does the same thing as) 272.58 536.33 P
3 F
-0.27 (T) 441.13 536.33 P
-0.27 (ocDBLock\050\051) 447.43 536.33 P
0 F
-0.26 ( and) 508.55 536.33 P
(also returns the) 243 524.33 T
0 9 Q
(DB) 319.3 524.33 T
0 10 Q
( item\325) 332.8 524.33 T
(s pointer and optr) 358.18 524.33 T
(.) 440.22 524.33 T
3 F
(T) 180 505.33 T
(ocGetFileHandle\050\051) 186.3 505.33 T
0 F
(Use this routine to get the handle of the \336le in which all T) 243 493.33 T
(oc) 510.27 493.33 T
(device driver information is stored.) 243 481.33 T
81 465.99 531 471 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 465.99 531 471 R
7 X
0 0 0 1 0 0 0 K
V
50 469.99 609.01 469.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 457.99 T
2 F
(MSG_PREF_T) 99 457.99 T
(OC_LIST_GET_SELECTED_ITEM_INFO) 178.8 457.99 T
4 10 Q
(Boolean MSG_PREF_TOC_LIST_GET_SELECTED_ITEM_INFO\050) 99 443.33 T
4 9 Q
(word) 153 432.99 T
(*infoPtr\051;) 261 432.99 T
0 10 Q
(This message returns the info word about the currently selected item. This) 180 415.33 T
(message can only be used with PrefT) 180 402.33 T
(ocList objects that have the) 349.66 402.33 T
0 9 Q
(TCF_EXTENDED_DEVICE_DRIVERS) 180 389.33 T
0 10 Q
(\337ag set.) 346.66 389.33 T
2 9 Q
(Parameters:) 153 372.33 T
0 10 Q
(infoPtr) 207 372.33 T
(Pointer to a word in which to return the info word.) 297 372.33 T
2 9 Q
(Return:) 153 355.33 T
0 10 Q
-0.36 (Returns) 207 355.33 P
5 F
-0.36 (false) 246.82 355.33 P
0 F
-0.36 ( \050i.e. zero\051 if item was found, returns) 268.1 355.33 P
5 F
-0.36 (true) 436.16 355.33 P
0 F
-0.36 ( \050i.e. non-zero\051 if) 454.67 355.33 P
(item was not found.) 207 342.33 T
81 325.98 531 330.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 325.98 531 330.99 R
7 X
0 0 0 1 0 0 0 K
V
50 329.98 609.01 329.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 317.98 T
2 F
(MSG_PREF_T) 99 317.98 T
(OC_LIST_GET_SELECTED_DRIVER_NAME) 178.8 317.98 T
4 10 Q
(word MSG_PREF_TOC_LIST_GET_SELECTED_DRIVER_NAME\050) 99 303.32 T
4 9 Q
(char) 153 292.98 T
(*buf,) 261 292.98 T
(word) 153 282.98 T
(bufSize\051;) 261 282.98 T
0 10 Q
(This message returns the name of the driver for the selected device. This) 180 265.32 T
(message may only be used if) 180 252.32 T
0 9 Q
(TCF_EXTENDED_DEVICE_DRIVERS) 313.73 252.32 T
0 10 Q
( is set.) 477.89 252.32 T
2 9 Q
(Parameters:) 153 235.32 T
5 10 Q
(buf) 207 235.32 T
0 F
(Pointer to buffer to \336ll with the driver name.) 297 235.32 T
5 F
(bufSize) 207 219.32 T
0 F
(The size of) 297 219.32 T
5 F
(buf) 349.04 219.32 T
0 F
(.) 364.04 219.32 T
2 9 Q
(Return:) 153 202.32 T
0 10 Q
-0.61 (If the device name \336ts in) 207 202.32 P
5 F
-0.61 (buf) 320.56 202.32 P
0 F
-0.61 (, then) 335.56 202.32 P
5 F
-0.61 (buf) 363.78 202.32 P
0 F
-0.61 ( is \336lled and the message returns) 378.78 202.32 P
(the size of the device name. If the device name doesn\325) 207 189.32 T
(t \336t, then the) 452.76 189.32 T
(message will return zero.) 207 176.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1289" 31
%%Page: "1290" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
2 14 Q
0 X
(Config Library) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
0 10 Q
0 X
(1290) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
1 60 Q
0 X
(u) 61.86 85 T
2 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
2 8 Q
0 X
(22.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
2 F
(MSG_PREF_T) 99 634.99 T
(OC_LIST_GET_SELECTED_ITEM_P) 178.8 634.99 T
(A) 380.63 634.99 T
(TH) 388.4 634.99 T
4 10 Q
(void MSG_PREF_TOC_LIST_GET_SELECTED_ITEM_PATH\050) 99 620.33 T
4 9 Q
(TocItemPath) 153 609.99 T
(*data\051;) 261 609.99 T
0 10 Q
(This message returns the absolute path of the selected driver or \336le.) 180 592.33 T
2 9 Q
(Structures:) 153 575.33 T
4 10 Q
(typedef struct {) 216 559.33 T
( word) 222 546.33 T
(TIP_disk; /* disk handle */) 324 546.33 T
( MemHandle) 222 530.33 T
(TIP_pathBlock;) 324 530.33 T
(/* Handle of block holding path \050locked\051 */) 252 517.33 T
( char) 222 501.33 T
(*TIP_path;) 324 501.33 T
(/* Locked null-terminated absolute path */) 252 488.33 T
(} TocItemPath;) 216 472.33 T
81 455.98 531 460.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 455.98 531 460.99 R
7 X
0 0 0 1 0 0 0 K
V
50 459.98 609.01 459.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 447.98 T
2 F
(MSG_PREF_T) 99 447.98 T
(OC_LIST_CHECK_DEVICE_A) 178.8 447.98 T
(V) 344.6 447.98 T
(AILABLE) 351.72 447.98 T
4 10 Q
(Boolean MSG_PREF_TOC_LIST_CHECK_DEVICE_AVAILABLE\050) 99 433.32 T
4 9 Q
(word) 153 422.98 T
(*retvalPtr\051;) 261 422.98 T
0 10 Q
-0.09 (This message determines if the device selected by the list is available in the) 180 405.32 P
(machine. This message may only be called for PrefT) 180 392.32 T
(ocList objects that have) 418.93 392.32 T
(the) 180 379.32 T
0 9 Q
(TCF_EXTENDED_DEVICE_DRIVERS) 197.78 379.32 T
0 10 Q
( \337ag set.) 361.94 379.32 T
2 9 Q
(Parameters:) 153 362.32 T
5 10 Q
(retV) 207 362.32 T
(alPtr) 225.15 362.32 T
0 F
(Pointer to a word which will be \336lled with the) 297 362.32 T
(return value.) 297 349.32 T
2 9 Q
(Return:) 153 332.32 T
0 10 Q
(Returns) 207 332.32 T
5 F
(true) 247.18 332.32 T
0 F
( \050i.e. non-zero if the device is available; if the driver is a) 265.69 332.32 T
-0.78 (video driver) 207 319.32 P
-0.78 (, *) 260.66 319.32 P
5 F
-0.78 (retV) 270.44 319.32 P
-0.78 (alPtr) 288.59 319.32 P
0 F
-0.78 ( is set to the device\325) 312.29 319.32 P
-0.78 (s) 397.84 319.32 P
3 F
-0.81 (DisplayT) 404.47 319.32 P
-0.81 (ype) 450.61 319.32 P
0 F
-0.78 (. If the device) 469.13 319.32 P
(is not available, returns) 207 306.32 T
5 F
(false) 320.36 306.32 T
0 F
( \050i.e. zero\051;) 341.64 306.32 T
5 F
(retV) 392.38 306.32 T
(alPtr) 410.53 306.32 T
0 F
( is zero of the device) 434.23 306.32 T
(doesn\325) 207 293.32 T
(t exist; otherwise it will be the value of the appropriate) 235.34 293.32 T
3 F
(GeodeLoadError) 207 280.32 T
0 F
( plus one.) 294.97 280.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1290" 32
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 32
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ Helvetica-Bold
%%+ NewCenturySchlbk-Bold
%%+ Courier
%%+ NewCenturySchlbk-Italic
%%+ Courier-Oblique
%%EOF
