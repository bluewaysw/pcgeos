%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Italic FMFONTDEFINE
4 0 /NewCenturySchlbk-Bold FMFONTDEFINE
5 0 /Courier FMFONTDEFINE
6 0 /Courier-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "361" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger Overview) 416.39 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(361) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.1) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
(The GenT) 180 605.36 T
(rigger object allows a user to initiate an action. In most graphical) 225.5 605.36 T
(user interfaces, a GenT) 180 592.36 T
(rigger is represented by a button; clicking on the) 287.35 592.36 T
(button initiates the action. This action sends a pre-speci\336ed message to a) 180 579.36 T
(pre-speci\336ed object or process in the trigger) 180 566.36 T
(\325) 381.64 566.36 T
(s instance data. Y) 383.31 566.36 T
(ou may also) 464.63 566.36 T
(customize a GenT) 180 553.36 T
(rigger to pass data along with the message.) 261.98 553.36 T
-0.03 (Y) 180 533.36 P
-0.03 (ou should be familiar with the function of generic objects in general before) 185.93 533.36 P
-0.61 (you begin reading this chapter) 180 520.37 P
-0.61 (. This can be accomplished by a cursory review) 317.94 520.37 P
-0.71 (of \322GenClass,\323 Chapter) 180 507.37 P
-0.71 (2. Y) 287.85 507.37 P
-0.71 (ou should at least read \322First Steps: Hello W) 304.19 507.37 P
-0.71 (orld,\323) 503.93 507.37 P
(Chapter) 180 494.37 T
(4 of the Concepts Book.) 220.74 494.37 T
0 14 Q
(5.1) 142.54 442.03 T
0 24 Q
(GenT) 180 442.03 T
(rigger Overview) 240.02 442.03 T
1 10 Q
(Whenever you need to allow the user to initiate a single action, you should) 180 416.37 T
(probably use a GenT) 180 403.37 T
(rigger) 274.96 403.37 T
(. When activated, a GenT) 301.99 403.37 T
(rigger simply sends a) 418.8 403.37 T
(message to another object or process. Both the message and its destination) 180 390.37 T
(can be set up in the GenT) 180 377.37 T
(rigger) 297.92 377.37 T
(\325) 326.24 377.37 T
(s instance data. The trigger can also send) 327.91 377.37 T
(data with the message. This is useful if several triggers send the same) 180 364.37 T
(message \050for example) 180 351.37 T
1 9 Q
(MSG_CHOOSE_COLOR) 282.23 351.37 T
1 10 Q
(\051 but send different data \050for) 385.57 351.37 T
(example \322Blue,\323 \322Red,\323 or \322Green\323\051.) 180 338.37 T
(In some cases, the use of triggers is readily apparent \050the \322) 180 199.35 T
1 9 Q
(OK) 451.13 199.35 T
1 10 Q
(\323 button in a) 465.13 199.35 T
(dialog box, for example, which will dismiss the dialog box\051 while at other) 180 186.35 T
-0.18 (times the use of triggers is not as obvious \050as menu items, for example\051. The) 180 173.35 P
(GenT) 180 160.35 T
(rigger is a simple and widely used object, appearing in menus, dialog) 204.94 160.35 T
81 144 531 648 C
235.51 643.03 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.03 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
81 144 531 648 C
180 216.02 531 335.03 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Figure) 180 247.37 T
(5-) 213.34 247.37 T
(1) 222.23 247.37 T
3 F
(Example GenT) 230.57 247.37 T
(riggers) 298 247.37 T
(A trigger) 180 233.37 T
(\325) 221.28 233.37 T
(s visual moniker can be either text or a graphics string.) 222.95 233.37 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  356      
49 40 49 40 0 450 272.03 BEGINBITMAPBWc
<"
9F
(
E0000000000390(
EFFFFFFFFFFB97
8#
F01F8#
85838#
63857$
FE99027%
FDF30B7F7%
FBF20BBF7%
F7F003DF7%
EFE0072F7%
ECC0078F7%
E840010F7%
D08001F78#
40037$
D400077$
DF000F8"
C08"
E09"
077%
EFE001EF8#
C0007%
E780006F7"8"
F75F7"
FB7"8"
FD3F7"8"
FE7F7%
FF4000FF8#
80018#
F00F8#
FFFF


(
E0000000000390Q"
9F


ENDBITMAP
%%EndBinary
%%BeginBinary:  562      
220 32 220 32 0 198 276.03 BEGINBITMAPBWc
J"
;F3


'
FE00000000037&
FFFFFFFFFB
7%8"e$`"
F8000000800FFFF8017%8"U$P"
FBFFFFFEBFEFFFFBFD8$
AAAAAE8$
7FFFFE8$
FFFFEE8$9#8$<"9"
70CE7E0E67F0FFCCF0FC8$8#9$<#
E64CEEBE66E67FCFE67F8$9+9&
6649FE6420E193E64184C3070FE7E183870C8$9+:%
E643EE66664C8FE64CCC993267CC9932648$;#:#:%
6643FE409F333FE0993E048$;"<":"8"
E649EE4FCFCC7C8$;";#9&
664CFE4C3267E64C9932648$8,9&
F0CE6EBF0F26619FF0C1E4C3330FF0E099870C8$9P&9P
7FFFFECFFFFFFFFF8$
FFFFEE8$>"
55555EFF8$
FFFFFE7%8"e$`"
F8000000800FFFF8017%8Z
FFFFFFFF4
7&
0000000003Q




ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "361" 1
%%Page: "362" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(362) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(boxes, and primary windows\321wherever you need a) 180 641.33 T
1 9 Q
(UI) 420.02 641.33 T
1 10 Q
( object whose sole) 431.02 641.33 T
(action is to send out a message, a GenT) 180 628.33 T
(rigger will probably suf\336ce.) 361.46 628.33 T
(Several GenT) 180 608.33 T
(riggers are shown in Figure) 242.54 608.33 T
(5-) 373.47 608.33 T
(1. Because of the trigger) 382.36 608.33 T
(\325) 495.32 608.33 T
(s basic) 496.99 608.33 T
-0.47 (role, they cannot have children. Note that this does not mean that activating) 180 595.33 P
(a trigger may not necessarily bring up an object indirectly \050such as a dialog) 180 582.33 T
-0.62 (box\051, but only that an object may not be directly attached below a GenT) 180 569.33 P
-0.62 (rigger) 501.07 569.33 P
(in a generic object tree.) 180 556.33 T
(Y) 180 536.33 T
(our application will choose the function of the trigger but it is left to the) 185.93 536.33 T
(Speci\336c) 180 523.33 T
1 9 Q
(UI) 217.96 523.33 T
1 10 Q
( to choose in what manner a trigger will be activated. \050For) 228.96 523.33 T
-0.47 (example, under) 180 510.33 P
1 9 Q
-0.43 (OSF/M) 253.5 510.33 P
1 10 Q
-0.47 (otif, a GenT) 283.17 510.33 P
-0.47 (rigger may be built as a button and will be) 336.43 510.33 P
(activated by clicking on the button.\051) 180 497.33 T
4 F
(GenT) 180 477.33 T
(riggerClass) 207.52 477.33 T
1 F
( provides two instance \336elds. These instance \336elds are) 266.97 477.33 T
(listed in Code Display) 180 464.33 T
(5-) 284.28 464.33 T
(1.) 293.17 464.33 T
81 431.98 531 444 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 431.98 531 444 R
7 X
0 0 0 1 0 0 0 K
V
76.5 439.23 617.5 442.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 425.31 T
(5-) 147.13 425.31 T
(1 GenT) 156.02 425.31 T
(rigger Instance Fields) 189.37 425.31 T
5 9 Q
(/* GenTrigger inherits all the instance fields of GenClass. */) 81 410.98 T
(@instance optr GTI_destination = 0;) 102.6 392.98 T
(@instance Message GTI_actionMsg = 0;) 102.6 381.98 T
(@vardata void HINT_TRIGGER_BRINGS_UP_WINDOW;) 81 363.98 T
(@vardata void ATTR_GEN_TRIGGER_IMMEDIATE_ACTION;) 81 352.98 T
(@vardata void HINT_TRIGGER_DESTRUCTIVE_ACTION;) 81 341.98 T
(@vardata word ATTR_GEN_TRIGGER_ACTION_DATA;) 81 330.98 T
(@vardata word ATTR_GEN_TRIGGER_INTERACTION_COMMAND;) 81 319.98 T
(@vardata Message ATTR_GEN_TRIGGER_CUSTOM_DOUBLE_PRESS;) 81 308.98 T
(/* Alias for messages with \322void \050word a, word b\051\323 */) 102.6 290.98 T
(typedef struct { word a, b; } TwoWordArgs;) 81 279.98 T
(@vardataAlias \050ATTR_GEN_TRIGGER_ACTION_DATA\051) 81 268.98 T
(TwoWordArgs ATTR_GEN_TRIGGER_ACTION_TWO_WORDS;) 168.98 257.98 T
(/* Alias for messages with \322void \050word a, word b, word c\051\323 */) 102.6 239.98 T
(typedef struct { word a, b, c; } ThreeWordArgs;) 81 228.98 T
(@vardataAlias \050ATTR_GEN_TRIGGER_ACTION_DATA\051) 81 217.98 T
(ThreeWordArgs ATTR_GEN_TRIGGER_ACTION_THREE_WORDS;) 168.98 206.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "362" 2
%%Page: "363" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger Usage) 436.63 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(363) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.2) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 9 Q
0 X
(/* Alias for messages with \322void \050optr output, word a\051\323 */) 102.6 642 T
(typedef struct { optr output; word a; } OptrWordArgs;) 81 631 T
(@vardataAlias \050ATTR_GEN_TRIGGER_ACTION_DATA\051) 81 620 T
(OptrWordArgs ATTR_GEN_TRIGGER_ACTION_OPTR_AND_WORD;) 212.5 609 T
81 584.98 531 597 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 584.98 531 597 R
7 X
0 0 0 1 0 0 0 K
V
76.5 592.23 617.5 595.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.62 (The) 180 567.31 P
3 9 Q
-0.56 (GTI) 199.94 567.31 P
3 10 Q
-0.62 (_actionMsg) 216.77 567.31 P
1 F
-0.62 ( instance \336eld sets the message for the trigger to send out) 269.16 567.31 P
(upon activation. The activation itself is determined by the speci\336c) 180 554.31 T
1 9 Q
(UI) 486.89 554.31 T
1 10 Q
(. The) 497.89 554.31 T
-0.11 (trigger will send this message to the output speci\336ed in the) 180 541.31 P
3 9 Q
-0.09 (GTI_) 455.35 541.31 P
3 10 Q
-0.11 (destination) 476.67 541.31 P
1 F
(instance \336eld.) 180 528.31 T
-0.53 (The) 180 508.31 P
3 9 Q
-0.48 (GTI) 200.03 508.31 P
3 10 Q
-0.53 (_destination) 216.86 508.31 P
1 F
-0.53 (instance) 275.75 508.31 P
-0.53 (\336eld sets the object or process for the trigger to) 316.89 508.31 P
-0.51 (send its message to upon activation. The trigger will send the message in the) 180 495.31 P
3 9 Q
(GTI) 180 482.31 T
3 10 Q
(_actionMsg) 196.83 482.31 T
1 F
( \336eld to this optr) 249.22 482.31 T
(. Often this will be a) 325.34 482.31 T
4 F
(T) 422.04 482.31 T
(ravelOption) 428.64 482.31 T
1 F
( or a) 491.23 482.31 T
4 F
(GenT) 180 469.31 T
(ravelOption) 207.52 469.31 T
1 F
(.) 270.11 469.31 T
0 14 Q
(5.2) 142.54 218.98 T
0 24 Q
(GenT) 180 218.98 T
(rigger Usage) 240.02 218.98 T
1 10 Q
(A simple GenT) 180 193.31 T
(rigger should contain a message to send out upon activation,) 248.28 193.31 T
-0.52 (a destination to send the message to, and a visual moniker to distinguish the) 180 180.31 P
(trigger from other objects \050and describe its function to the user\051.) 180 167.31 T
81 144 531 648 C
180 267.98 531 465.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Figure) 180.83 293.31 T
(5-) 214.17 293.31 T
(2) 223.06 293.31 T
3 F
(GenT) 231.4 293.31 T
(riggers as Menu Items.) 255.69 293.31 T
(GenT) 180.83 279.31 T
(riggers may become menu items within a) 205.12 279.31 T
3 9 Q
(GIV_POPUP) 394.9 279.31 T
3 10 Q
( GenInteraction.) 448.75 279.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  3459     
241 166 189 121 0 181.67 317.98 BEGINBITMAPBWc
J"
>9F

j"
>60



J&
403C0003060J&
406600038E0J*
5078F3DE79F1E3E79B0J*
50CD9B76CD9B366CDC0J*
5EFD9B267D99F66FD80J)
56C19B06CD9B366C1J";"
6D9CDJ*
403E78F3067D99F3E79Jb$
4060000J"
;3CJ"
;00

R'Z"
FEFFFFFFFFF719F


7%9*
FC3FF33FFC19FE7FF7F3E4FFF37%:":"
F99FF3FFCFE78&8$8&
906130C1C3C98667E483830CCC8&9#8%
9333264C99324F64993264<"9&
CF9E1FF7F224<"9"8#
F3E6F084<"9&
99324FF7F1C47'8+
FC307930CCC3198667F7F3E499830E017-Q
FFF3FFFFFFFFFEFFFFFFFFF77#;#9#
F803FC07F0037#;#9#
FFFFFFFFFFFF
j"
>60>Y"
F8
R"D"R"
FEFB9F
B"
E3B$
E1FC7FC"
F8B#
E000
@$
FC0000J"
>9E)8$@)
0C187060C1C33CF8FFFFE0FE7030FCFFF9FF9F'G%
64F327264C99FC7F267C"8"8"9%?"9%
7CE69C9FFFE1F8FE1990C3E77$9";"@(
333066D8FC7E70FCC9999953)8&@#8#
44F33F20C199CC88FFFFE3FFFF667C81FF"8#8":"A#9#
6427C320FF7CE69F878'E";#
2727C999E470CE9953)G'
04187067CCC3E4F8F0FC1C1CC3E7R"E)
FE9FFFFFFFFF9FFF9EJ"9%
7FFFC3FFF9FJ#
;FFFF
@"9$
C3833FCF@"9#
9999FF@(
9F860CCF9930CCA#8#
32642649E#
33C3c="<"b"
3CF860R"8":%9"R"
FE992649927FFB9F@(
C3860E0F8330CC@%P
FFFE7FCF@%
80FE7E1F@%
FFFFFFFF:"
FB:"9"h"
F1800B>"X"8"
BFEBC1:"I#
E0FE3EJ$
8F9F17F:#8$9&;%
C07FB3FF83FE7E0CFF3FF7BABFE0>$;"=&
B0FF9F67EF9DDF9F7E:#8,;'
803FB83F9F0C90070C3E64C333DFAEEF783D7F:#9+;'
8FBF0F86647332667E649927B797F6CEDABF:#8(8#;'
3FDFBC039E64F33306CF0F7BBF81B766DF:#9"9#8";(
7FFF003266F3FEFDBC2B6F08EF9#9">$:'
FEFFBE992649DAF155A2576F:":+:(
C0079F0CF333073E0CC332FF67CEA9DDA7DF9$8#U:'
FD807FBF03B7BF55EBD3BF:#9#C'
203F1181DB7FA8F7EB7F9$9#C'
FA401F98FFEEFFD56FF2FF9#9$f)
F8C08094400BFFF5FFEBDFF81F9$8$V)
F1801DFFFE3FFBFFF9FFF3BFFC079";"D'
F3FFFEFFFB07FCFF9$:"C&
E3801CFFFF3FF80078J"8"
987009%9";$<%
C380187F83E0CFF3E0007C01:";";#=%
C099E67FF0003F819%:*;"8"
83C0323F860E180387E64C333FF8FF:#;*;"
E0243264C99933E649927FFF9%9+<#
01F04C1F830266099903E64CF0FFC07F:#:*=#
F818873E64C9993FE64F30F0FF8&9#9';"
FE00FFF00F933233E64992649FFF:#:+
7FE0998666099987E0CC33248&9V
FC001F8007:#:"
0000808P9"
FF
"8&E%
FEFDFFFC7F36FE3FFC3F9&E%
FFFFFBBFBEFDDFFDDF)F'
FD6273499CFBA3A4F9CDD98C734F7(F'
6DAD3D6F7BADB496B43EB5AD3F&;":$<'
F82DA17D7C83FE0FF3D0B5D8B5A17F&;";#<&
FBADAF7D6B9967FFD7B5D6B5AF8&:+8'
B37D9C7C6D870E1C307E6492661C3FFE39CC38B5B3R"9+8R
FE3264C9933E647264C99F@&8%
83033CFC13F2640CFF@&:#
873FCCF993FF3F@%9%
933264C9F30CC99F@,
99870E1C133E0CF39E1C3F@V
A"
01A"
FF9%F"`"
F000003FFC1F9$G"P"
EFFFFFFDDF9&i)
DFFFFEBFFE03FDF07FF87FFFC79%R%P&
BFFFFD3FBFFFFEA7FDCF8FE7BF9%@"<$
000002BF4BBFE79F9%=%>$
7FFFF93F955554A77F39DF;#=%<&
FABFDFFFFF4B3E32BCF99F9%=%<&
6000193FDC2187277F31BFFE0F9%>$=%
6FFFDABFE4CF4B337B4FBC;#>$<'
D93F24CF273FB360673B47;#>$=%
DABFE1CF4B88F3EF769%>$<'
6C00D93FE4CF27BF88F7CE61C79%?#<'
6DFEDABF874B9F99E7DEE7479%=%<'
6C00D93FDFFFFF27CF99EF94A6C79%>$<&
6FFFDABF987F4BF3DDCF8C71;#>$<P
D93F1B3F279%>$
60001ABF9F3F4B9%>$
6FFFD93F9E7F27;#>$<&
DABF9CFF4BFE90142522;#>$<Q
D93F99BF279%>$<'
6C00DABF083F4B8000000000039%=%<'
6DFED93FBFFFFE277FFFFBFFFB8F9%@"<'
6C00DABF4B00001BFFF8179%=%<'
6FFFD93F7FFFFD27BFFFE0000027;#<&<'
DABFFE0000034BC000000001C79%<&<'
6000193FFFDFFFFF27E0000FFFFFC39&<%<$8"
7FFFFA2ABFC000004BFFFFFFC7;$<%;"`"
F8557FEFFFFFA7FC07<#<%;"
AAFFF000000BFF9%=%
00000155FD5555579%=%<Q
FFFFFFFFFFFFFFFF


7%=%>&
F1FFEFBFFC7FF867C7FFBEFEDF7%=%>"8"
EEFFE73FFBBFFBB7BBFF7(;';&
EFCE6AB31CE334F39BB6631CD3BF39D5A48C7(;';'
ECB5ADBD6F5AD32D6877AD6B4FB2D6D59EDB7F7(;';&
EE85AFB16C5A17A16BF62D685FBA16EBBED88';'<"8#
BDAFAD6B5AF7AF6BF5AD6BDFF6DBFF7(:'<#8"
F1CE6FB16C6337FC739BF62D6CC739EC7P#:R;P
FBFF<"
E7<"
FF


ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "363" 3
%%Page: "364" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(364) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Y) 180 641.33 T
(ou may use the prototype) 185.93 641.33 T
1 9 Q
(GEN_TRIGGER_ACTION) 305.57 641.33 T
1 10 Q
( to de\336ne the action) 415.57 641.33 T
-0.69 (message. This prototype passes the optr of the sending trigger in the variable) 180 628.33 P
(name \324trigger) 180 615.33 T
(\325 and can be accessed within a message handler) 242.59 615.33 T
(.) 460.59 615.33 T
(GenT) 180 595.33 T
(riggers may appear within GenPrimarys, GenV) 204.94 595.33 T
(iews, or) 423.78 595.33 T
(, most often,) 458.6 595.33 T
-0.45 (within a GenInteraction. If a GenT) 180 582.33 P
-0.45 (rigger is placed as a child of a) 338.62 582.33 P
1 9 Q
-0.41 (GIV_POPUP) 474.66 582.33 P
1 10 Q
(GenInteraction, the GenT) 180 569.33 T
(riggers may be represented as menu items. \050See) 298.83 569.33 T
(Figure) 180 556.33 T
(5-) 213.52 556.33 T
(2\051.) 222.41 556.33 T
81 523.98 531 536 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 523.98 531 536 R
7 X
0 0 0 1 0 0 0 K
V
76.5 531.23 617.5 534.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 517.31 T
(5-) 147.13 517.31 T
(2 Code for Basic GenT) 156.02 517.31 T
(riggers) 262.72 517.31 T
5 9 Q
(/* Use the prototype GEN_TRIGGER_ACTION to define a GenTrigger\325s action message.) 81 502.98 T
( * Within a method, you can retrieve this optr with the variable name \324trigger.\325 */) 81 491.98 T
(@message \050GEN_TRIGGER_ACTION\051 MSG_HELLO_CHANGE_TO_BLUE\050\051;) 81 473.98 T
(@message \050GEN_TRIGGER_ACTION\051 MSG_HELLO_CHANGE_TO_GOLD\050\051;) 81 462.98 T
(/* The GenInteraction object will contain the child GenTriggers. */) 81 444.98 T
(@object GenInteractionClass HelloColorBox = {) 81 426.98 T
(GI_comp = @HelloBlueTrigger, @HelloGoldTrigger;) 102.6 415.98 T
(GI_visMoniker = \325C\325, \322Color\323;) 102.6 404.98 T
(GII_visibility = GIV_DIALOG;) 102.6 393.98 T
(}) 81 382.98 T
(/* GenTriggers) 81 364.98 T
( * Buttons are implemented by GenTriggerClass. When the trigger is pushed by) 81 353.98 T
( * the user \050clicked on with the mouse\051, it will send the specified message) 81 342.98 T
( * to the specified destination object. In both cases below, the trigger will) 81 331.98 T
( * send an application-defined message to the application\325s Process) 81 320.98 T
( * object. A trigger\325s moniker is displayed within the trigger. In this) 81 309.98 T
( * case both are text, but any graphics string could also be used to create) 81 298.98 T
( * graphical triggers. */) 81 287.98 T
(@object GenTriggerClass HelloBlueTrigger = {) 81 269.98 T
(GI_visMoniker = \325B\325, \322Blue\323;) 102.6 258.98 T
(/* Send MSG_HELLO_CHANGE_TO_BLUE to the Process object. */) 125 247.98 T
(GTI_destination = process;) 102.6 236.98 T
(GTI_actionMsg = MSG_HELLO_CHANGE_TO_BLUE;) 102.6 225.98 T
(}) 81 214.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "364" 4
%%Page: "365" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Supplemental GenTrigger Usage) 340.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(365) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 9 Q
0 X
(@object GenTriggerClass HelloGoldTrigger = {) 81 642 T
(GI_visMoniker = \325G\325, \322Gold\323;) 102.6 631 T
(/* Send MSG_HELLO_CHANGE_TO_GOLD to the Process object. */) 125 620 T
(GTI_destination = process;) 102.6 609 T
(GTI_actionMsg = MSG_HELLO_CHANGE_TO_GOLD;) 102.6 598 T
(}) 81 587 T
81 562.98 531 575 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 562.98 531 575 R
7 X
0 0 0 1 0 0 0 K
V
76.5 570.23 617.5 573.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(5.3) 142.54 512.98 T
0 24 Q
(Supplemental GenT) 180 512.98 T
(rigger) 404.06 512.98 T
(Usage) 180 484.98 T
1 10 Q
-0.1 (GenT) 180 459.31 P
-0.1 (riggers may also perform other actions besides the simple sending of a) 204.94 459.31 P
(message to an object.) 180 446.31 T
( For example, your trigger may pass data along with its message; you may) 180 426.31 T
-0.69 (then use this data within a method to perform some additional work. In some) 180 413.31 P
(cases, this data may be interpreted by a GenInteraction object to provide) 180 400.31 T
(additional functionality to dialog boxes.) 180 387.31 T
(Y) 180 367.31 T
(ou may also alter the manner in which a trigger is initiated through the) 185.93 367.31 T
(implementation of hints and several messages. Y) 180 354.31 T
(ou can also modify the) 405.41 354.31 T
(trigger) 180 341.31 T
(\325) 212.21 341.31 T
(s instance data dynamically) 213.88 341.31 T
(, reassigning its action message and) 341.87 341.31 T
(destination.) 180 328.31 T
0 14 Q
(5.3.1) 130.86 285.98 T
0 18 Q
(Passing Data with a GenT) 180 285.98 T
(rigger) 399.08 285.98 T
5 10 Q
(ATTR_GEN_TRIGGER_ACTION_DATA,) 180 262.31 T
(ATTR_GEN_TRIGGER_ACTION_TWO_WORDS,) 180 249.31 T
(ATTR_GEN_TRIGGER_ACTION_THREE_WORDS,) 180 236.31 T
(ATTR_GEN_TRIGGER_ACTION_OPTR_AND_WORD) 180 223.31 T
1 F
(A GenT) 180 203.31 T
(rigger may pass data along with its message. Use) 214.94 203.31 T
1 9 Q
(A) 180 190.31 T
(TTR_GEN_TRIGGER_ACTION_DA) 186 190.31 T
(T) 336.51 190.31 T
(A) 342.02 190.31 T
1 10 Q
( to assign a word of data that you wish) 348.52 190.31 T
(to pass with the particular message. If you need to pass more than a single) 180 177.31 T
-0.05 (word of data, you will have to use) 180 164.31 P
4 F
-0.05 (@vardataAlias) 337.07 164.31 P
1 F
-0.05 (; this Goc keyword allows) 411.02 164.31 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "365" 5
%%Page: "366" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(366) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(A) 180 641.33 T
(TTR_GEN_TRIGGER_ACTION_DA) 186 641.33 T
(T) 336.51 641.33 T
(A) 342.02 641.33 T
1 10 Q
( to pass a structure instead of a single) 348.52 641.33 T
(word.) 180 628.33 T
(Several) 180 608.33 T
1 9 Q
(A) 217.6 608.33 T
(TTR_GEN_TRIGGER_ACTION_DA) 223.6 608.33 T
(T) 374.11 608.33 T
(A) 379.62 608.33 T
1 10 Q
( aliases already exist for your) 386.12 608.33 T
(use.) 180 595.33 T
1 9 Q
(A) 201.3 595.33 T
(TTR_GEN_TRIGGER_ACTION_TWO_WORDS) 207.3 595.33 T
1 10 Q
( and) 406.14 595.33 T
1 9 Q
(A) 180 582.33 T
(TTR_GEN_TRIGGER_ACTION_THREE_WORDS) 186 582.33 T
1 10 Q
( allow you to pass two or) 396 582.33 T
(three words of data along with the trigger) 180 569.33 T
(\325) 373.9 569.33 T
(s message.) 375.57 569.33 T
1 9 Q
-0.33 (A) 180 556.33 P
-0.33 (TTR_GEN_TRIGGER_ACTION_OPTR_AND_WORD) 186 556.33 P
1 10 Q
-0.37 ( allows you to pass an optr) 408.18 556.33 P
(and a word of data along with the trigger) 180 543.33 T
(\325) 370.58 543.33 T
(s message.) 372.25 543.33 T
(If you need to pass more than three words of data with a message, you will) 180 523.33 T
-0.47 (need to use the stack to pass arguments. T) 180 510.33 P
-0.47 (o do so, use the) 372.37 510.33 P
4 F
-0.49 (@stack) 442.8 510.33 P
1 F
-0.47 ( parameter) 477.86 510.33 P
-0.05 (within your message de\336nition; because of the implementation of the stack,) 180 497.33 P
(make sure to set up your structure to pass its arguments) 180 484.33 T
3 F
(in reverse order) 445.39 484.33 T
1 F
(.) 515.91 484.33 T
81 451.98 531 464 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 451.98 531 464 R
7 X
0 0 0 1 0 0 0 K
V
76.5 459.23 617.5 462.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 445.31 T
(5-) 147.13 445.31 T
(3 Passing Data from a GenT) 156.02 445.31 T
(rigger) 288.29 445.31 T
5 9 Q
(/* In a class declaration, you should define a message that passes data. */) 81 430.98 T
(@class MyProcessClass, GenProcessClass;) 81 412.98 T
(@message void MSG_SET_MY_DATA\050int myData\051;) 81 401.98 T
(@endc;) 81 390.98 T
(@object GenTriggerClass MyHundredTrigger = {) 81 372.98 T
(/* This trigger will pass 100 to the method for MSG_SET_MY_DATA. */) 125 361.98 T
(GI_visMoniker = \322Set My Data to 100\323;) 102.6 350.98 T
(GTI_actionMsg = MSG_SET_MY_DATA;) 102.6 339.98 T
(GTI_destination = process;) 102.6 328.98 T
(ATTR_GEN_TRIGGER_ACTION_DATA = 100;) 102.6 317.98 T
(/* This object\325s data is 100. */) 301 317.98 T
(}) 81 306.98 T
(@object GenTriggerClass MyTenTrigger = {) 81 288.98 T
(/* This trigger will pass \32410\325 to the method for MSG_SET_MY_DATA.*/) 125 277.98 T
(GI_visMoniker = \322Set My Data to 10\323;) 102.6 266.98 T
(GTI_actionMsg = MSG_SET_MY_DATA;) 102.6 255.98 T
(GTI_destination = process;) 102.6 244.98 T
(ATTR_GEN_TRIGGER_ACTION_DATA = 10;) 102.6 233.98 T
(/* This object\325s data is 10. */) 301 233.98 T
(}) 81 222.98 T
(@method MyProcessClass, MSG_SET_MY_DATA {) 81 204.98 T
(/* This message passes one parameter \050the integer myData\051. Goc knows) 125 193.98 T
( * that the data is located within the ATTR_GEN_TRIGGER_ACTION_DATA) 125 182.98 T
( * field. */) 125 171.98 T
(UpdateDisplay\050myData\051;) 102.6 160.98 T
(/* Use that data for your own purposes. */) 256.5 160.98 T
(}) 81 149.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "366" 6
%%Page: "367" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Supplemental GenTrigger Usage) 340.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(367) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 9 Q
0 X
(/* The following examples show how to pass longer structures than the above. */) 81 642 T
(/* Define the message. */) 125 624 T
(@message void MSG_CUSTOM_MESSAGE\050@stack char name[10], optr arg1, int arg2\051;) 81 613 T
(/* Define the structure you wish to pass with the message. If the) 125 602 T
( * message will pass parameters on the stack \050as in this case\051, you) 125 591 T
( * must define your structure to pass its elements in reverse order. */) 125 580 T
(typedef struct {) 81 569 T
(int) 102.6 558 T
(MS_arg2;) 168.98 558 T
(optr) 102.6 547 T
(MS_arg1;) 168.98 547 T
(char) 102.6 536 T
(MS_name[10]) 168.98 536 T
(} MyStruct;) 81 525 T
(/* Use @vardataAlias to define your own attribute \050ATTR_MY_STRUCT_TO_PASS\051) 125 507 T
( * to store the custom structure. */) 125 496 T
(@vardataAlias \050ATTR_GEN_TRIGGER_ACTION_DATA\051 MyStruct ATTR_MY_STRUCT_TO_PASS;) 81 485 T
(/* Declare your object and set the arguments to pass. */) 125 467 T
(@object GenTriggerClass MyTrigger = {) 81 456 T
(GI_visMoniker = \322Custom Trigger\323;) 102.6 445 T
(GTI_actionMsg = MSG_CUSTOM_MESSAGE;) 102.6 434 T
(GTI_destination = process;) 102.6 423 T
(ATTR_MY_STRUCT_TO_PASS = { 100, @ListObject, \322Zow!\323 }) 102.6 412 T
(}) 81 401 T
81 376.98 531 389 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 376.98 531 389 R
7 X
0 0 0 1 0 0 0 K
V
76.5 384.23 617.5 387.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(5.3.2) 130.86 336.98 T
0 18 Q
(Interaction Commands) 180 336.98 T
5 10 Q
(ATTR_GEN_TRIGGER_INTERACTION_COMMAND) 180 313.31 T
1 F
(A GenT) 180 293.31 T
(rigger may perform special actions within a GenInteraction object.) 214.94 293.31 T
(The) 180 280.31 T
1 9 Q
(A) 200.56 280.31 T
(TTR_GEN_TRIGGER_INTERACTION_COMMAND) 206.56 280.31 T
1 10 Q
( attribute sets the) 425.39 280.31 T
(special activity for these types of triggers. This attribute indicates that the) 180 267.31 T
-0.6 (GenT) 180 254.31 P
-0.6 (rigger is an Interaction command trigger for the parent GenInteraction) 204.94 254.31 P
-0.79 (object.) 180 241.31 P
1 9 Q
-0.71 (A) 211.62 241.31 P
-0.71 (TTR_GEN_TRIGGER_INTERACTION_COMMAND) 217.62 241.31 P
1 10 Q
-0.79 ( takes a word of data) 436.45 241.31 P
-0.66 (\050of type) 180 228.31 P
4 F
-0.68 (InteractionCommand) 215.9 228.31 P
1 F
-0.66 (\051 specifying the command type of the trigger) 327.75 228.31 P
-0.66 (.) 526.1 228.31 P
(A trigger with an) 180 215.31 T
4 F
(InteractionCommand) 262.6 215.31 T
1 F
( can perform one of several) 374.45 215.31 T
(standard actions. Most of these actions are speci\336c to dialog boxes.) 180 202.31 T
(The) 180 182.31 T
4 F
(InteractionCommand) 200.56 182.31 T
1 F
( types are) 312.41 182.31 T
1 9 Q
(IC_NULL) 180 162.31 T
1 10 Q
(This command is special, alerting an application that the) 243 162.31 T
-0.06 (interaction containing the trigger has been closed because the) 243 150.31 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "367" 7
%%Page: "368" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(368) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.77 (system is about to shut down. Y) 243 641.33 P
-0.77 (ou should never set any triggers) 384.33 641.33 P
(to this) 243 629.33 T
4 F
(InteractionCommand) 275.23 629.33 T
1 F
(.) 387.08 629.33 T
1 9 Q
(IC_DISMISS) 180 610.33 T
1 10 Q
(This command instructs the) 243 610.33 T
1 9 Q
(UI) 375.6 610.33 T
1 10 Q
( to dismiss the parent) 386.6 610.33 T
(GenInteraction. Set this if you want the trigger to dismiss an) 243 598.33 T
(Interaction or provide a custom \322Close\323 trigger) 243 586.33 T
(.) 457.44 586.33 T
1 9 Q
(IC_INTERACTION_COMPLETE) 180 567.33 T
1 10 Q
(This command is special, indicating to the UI that a single) 243 555.33 T
(interaction has been completed \050the user has clicked on an) 243 543.33 T
4 F
(InteractionCommand) 243 531.33 T
1 F
( trigger marked with) 354.85 531.33 T
1 9 Q
-0.43 (GA_SIGNAL_INTERACTION_COMPLETE) 243 519.33 P
1 10 Q
-0.48 (\051. Y) 426.17 519.33 P
-0.48 (ou should never set) 440.51 519.33 P
(any triggers to this) 243 507.33 T
4 F
(InteractionCommand) 334.12 507.33 T
1 F
(. If you wish a) 445.97 507.33 T
(trigger to exhibit this behavior) 243 495.33 T
(, set its) 384.13 495.33 T
3 9 Q
(GI_) 420.44 495.33 T
3 10 Q
(attrs) 435.61 495.33 T
1 F
( \336eld to include) 457.27 495.33 T
1 9 Q
(GA_SIGNAL_INTERACTION_COMPLETE) 243 483.33 T
1 10 Q
(. \050See section 2.2.1 of) 426.17 483.33 T
(chapter 2.\051) 243 471.33 T
1 9 Q
(IC_APPL) 180 452.33 T
(Y) 218.34 452.33 T
1 10 Q
-0.22 (This command instructs the UI to apply any properties within) 243 452.33 P
(a) 243 440.33 T
1 9 Q
(GIT_PROPERTIES) 251.34 440.33 T
1 10 Q
( Interaction. By default, this trigger will) 332.84 440.33 T
(send out a) 243 428.33 T
1 9 Q
(MSG_GEN_APPL) 293.38 428.33 T
(Y) 368.06 428.33 T
1 10 Q
(.) 373.29 428.33 T
1 9 Q
(IC_RESET) 180 409.33 T
1 10 Q
-0.4 (This command instructs the UI that this is a \322reset\323 trigger for) 243 409.33 P
(a properties Interaction; the application is responsible for) 243 397.33 T
(actual reset behavior) 243 385.33 T
(. Y) 339.68 385.33 T
(ou should provide a method to handle) 351.17 385.33 T
-0.58 (the message sent out by this trigger) 243 373.33 P
-0.58 (, set up the state of items to) 404.52 373.33 P
(reset, and call) 243 361.33 T
1 9 Q
(MSG_GEN_RESET) 310.79 361.33 T
1 10 Q
( within that handler) 392.96 361.33 T
(.) 486.31 361.33 T
1 9 Q
(IC_OK) 180 342.33 T
1 10 Q
(This command instructs the UI that the user has) 243 342.33 T
(acknowledged a) 243 330.33 T
1 9 Q
(GIT_NOTIFICA) 318.94 330.33 T
(TION) 386.28 330.33 T
1 10 Q
( and should take any) 410.28 330.33 T
(appropriate measures.) 243 318.33 T
1 9 Q
(IC_YES) 180 299.33 T
1 10 Q
(This command instructs the UI that the user has signalled a) 243 299.33 T
(positive response from a) 243 287.33 T
1 9 Q
(GIT_AFFIRMA) 357.82 287.33 T
(TION) 422.15 287.33 T
1 10 Q
( Interaction.) 446.15 287.33 T
1 9 Q
(IC_NO) 180 268.33 T
1 10 Q
(This command instructs the UI that the user has signalled a) 243 268.33 T
(negative response from a) 243 256.33 T
1 9 Q
(GIT_AFFIRMA) 361.34 256.33 T
(TION) 425.67 256.33 T
1 10 Q
( Interaction.) 449.67 256.33 T
1 9 Q
(IC_STOP) 180 237.33 T
1 10 Q
(This command instructs the UI to halt a) 243 237.33 T
1 9 Q
(GIT_PROGRESS) 432.1 237.33 T
1 10 Q
(Interaction; \050the application is responsible for halting any) 243 225.33 T
(ongoing operations related to that Interaction\051.) 243 213.33 T
1 9 Q
(IC_EXIT) 180 194.33 T
1 10 Q
(This command is special, causing the trigger to exit the) 243 194.33 T
(application. T) 243 182.33 T
(ypically) 306.2 182.33 T
(, the File menu already has a trigger set) 341.02 182.33 T
(to this command.) 243 170.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "368" 8
%%Page: "369" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Supplemental GenTrigger Usage) 340.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(369) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(IC_HELP) 180 641.33 T
1 10 Q
(This command indicates that this GenT) 243 641.33 T
(rigger brings up help,) 425.93 641.33 T
(searching for the proper help context) 243 629.33 T
-0.02 (\050) 243 617.33 P
1 9 Q
-0.02 (A) 246.33 617.33 P
-0.02 (TTR_GEN_HELP_CONTEXT) 252.33 617.33 P
1 10 Q
-0.02 (\051 and bringing up the help dialog) 376.85 617.33 P
(box with that context. Any contexts below the trigger) 243 605.33 T
(\325) 488.76 605.33 T
(s) 490.43 605.33 T
-0.33 (containing dialog are ignored, however; i.e. the lowest possible) 243 593.33 P
(context is the that on the dialog box itself. For more) 243 581.33 T
(information on Help, see \322Help Object Library) 243 569.33 T
(,\323 Chapter) 454.87 569.33 T
(15 of) 505.06 569.33 T
(the Concepts Book.) 243 557.33 T
-0.23 (In most cases, you should not provide a visual moniker for any triggers with) 180 538.33 P
(an) 180 525.33 T
4 F
(InteractionCommand) 194.45 525.33 T
1 F
(; the speci\336c) 306.3 525.33 T
1 9 Q
(UI) 365.93 525.33 T
1 10 Q
( will select an appropriate) 376.93 525.33 T
-0.07 (moniker) 180 512.33 P
-0.07 (. \050Y) 217.78 512.33 P
-0.07 (ou may supply a moniker if you wish to override the speci\336c) 232.53 512.33 P
1 9 Q
-0.06 (UI) 510.99 512.33 P
1 10 Q
-0.07 (\325) 521.99 512.33 P
-0.07 (s) 523.66 512.33 P
(selection, however) 180 499.33 T
(.\051) 263.89 499.33 T
(Activating an) 180 479.33 T
1 9 Q
(A) 245.38 479.33 T
(TTR_GEN_TRIGGER_INTERACTION_COMMAND) 251.38 479.33 T
1 10 Q
( trigger will) 470.21 479.33 T
(cause the) 180 466.33 T
1 9 Q
(UI) 226.3 466.33 T
1 10 Q
( to send) 237.3 466.33 T
1 9 Q
(MSG_GEN_GUP_INTERACTION_COMMAND) 276.01 466.33 T
1 10 Q
( to the) 474.67 466.33 T
-0.18 (trigger itself. This message will travel up to the appropriate GenInteraction) 180 453.33 P
(object, where it will be handled.) 180 440.33 T
(This activity only occurs if both the trigger) 180 420.33 T
(\325) 377.78 420.33 T
(s destination and its action) 379.45 420.33 T
-0.37 (message \336elds are null, however) 180 407.33 P
-0.37 (. If these \336elds are non-null \050specifying your) 327.63 407.33 P
(own action message and destination\051, the sending of the) 180 394.33 T
4 F
(InteractionCommand) 180 381.33 T
1 F
( will be overridden. Y) 291.85 381.33 T
(ou may want to do this to) 389.46 381.33 T
(replace the default functionality of a Speci\336c) 180 368.33 T
1 9 Q
(UI) 388.9 368.33 T
1 10 Q
(-supplied trigger) 399.9 368.33 T
(. For) 476.19 368.33 T
(complete usage of an) 180 355.33 T
4 F
(InteractionCommand) 278.9 355.33 T
1 F
( trigger within a) 390.75 355.33 T
(GenInteraction object, see \322GenInteraction,\323 Chapter) 180 342.33 T
(7.) 427.78 342.33 T
0 14 Q
(5.3.3) 130.86 300 T
0 18 Q
(Interpreting Double-Clicks) 180 300 T
5 10 Q
(ATTR_GEN_TRIGGER_CUSTOM_DOUBLE_PRESS) 180 276.33 T
1 F
-0.83 (Y) 180 256.33 P
-0.83 (our trigger sends out the message in the) 185.93 256.33 P
3 9 Q
-0.75 (GTI_) 368.17 256.33 P
3 10 Q
-0.83 (actionMsg) 389.5 256.33 P
1 F
-0.83 ( \336eld and data in the) 436.89 256.33 P
1 9 Q
(A) 180 243.33 T
(TTR_GEN_TRIGGER_ACTION_DA) 186 243.33 T
(T) 336.51 243.33 T
(A) 342.02 243.33 T
1 10 Q
( \336eld whenever the user clicks on the) 348.52 243.33 T
(trigger) 180 230.33 T
(, whether that click is a single or a double-click. If you wish your) 210.92 230.33 T
(trigger to send out an alternate message if the user double-clicks, use) 180 217.33 T
1 9 Q
(A) 180 204.33 T
(TTR_GEN_TRIGGER_CUSTOM_DOUBLE_PRESS) 186 204.33 T
1 10 Q
(.) 402.69 204.33 T
-0.48 (If you set a message for this attribute, the trigger may send out two different) 180 184.33 P
(messages: one for a single click action and another for a double-click action.) 180 171.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "369" 9
%%Page: "370" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(370) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(5-) 147.13 629.31 T
(4 A T) 156.02 629.31 T
(rigger with a Double-Click Message) 179.92 629.31 T
5 9 Q
(@object GenTriggerClass DoubleClickTrigger = {) 81 614.98 T
(/* If the user single-clicks on this trigger, MSG_MY_ACTION will be sent along) 81 596.98 T
( * with data1 to the process. If the user double-clicks,) 81 585.98 T
( * MSG_MY_DOUBLE_PRESS_ACTION will be sent instead. */) 81 574.98 T
(GTI_actionMsg = MSG_MY_ACTION;) 102.6 556.98 T
(GTI_destination = process;) 102.6 545.98 T
(GI_visMoniker = \322Single or Double Click!\323;) 102.6 534.98 T
(ATTR_GEN_TRIGGER_ACTION_DATA = data1;) 102.6 523.98 T
(ATTR_GEN_CUSTOM_DOUBLE_PRESS = MSG_MY_DOUBLE_PRESS_ACTION;) 102.6 512.98 T
(}) 81 501.98 T
81 477.95 531 489.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 477.95 531 489.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 485.2 617.5 488.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(5.3.4) 130.86 437.95 T
0 18 Q
(Initiating an Action) 180 437.95 T
5 10 Q
(MSG_GEN_TRIGGER_SEND_ACTION, MSG_GEN_ACTIVATE) 180 414.29 T
1 F
-0.77 (In almost all cases, the speci\336c) 180 394.29 P
1 9 Q
-0.69 (UI) 320.8 394.29 P
1 10 Q
-0.77 ( initiates the action of the GenT) 331.8 394.29 P
-0.77 (rigger) 473.83 394.29 P
-0.77 (. Once) 500.86 394.29 P
(the speci\336c) 180 381.29 T
1 9 Q
(UI) 234.07 381.29 T
1 10 Q
( determines that a trigger is activated, it will send a) 245.07 381.29 T
1 9 Q
-0.71 (MSG_GEN_TRIGGER_SEND_ACTION) 180 368.29 P
1 10 Q
-0.79 (to the object, which will in turn send the) 348.46 368.29 P
(message in) 180 355.29 T
3 9 Q
(GTI_) 233.9 355.29 T
3 10 Q
(actionMsg) 255.23 355.29 T
1 F
( to the object in) 302.62 355.29 T
3 9 Q
(GTI_) 376.52 355.29 T
3 10 Q
(destination) 397.85 355.29 T
1 F
(. In some rare) 449.5 355.29 T
-0.46 (cases, however) 180 342.29 P
-0.46 (, you may wish to manually \322trigger\323 the GenT) 247.32 342.29 P
-0.46 (rigger yourself.) 458.78 342.29 P
(This can be done by sending the object the) 180 329.29 T
1 9 Q
(MSG_GEN_TRIGGER_SEND_ACTION) 180 316.29 T
1 10 Q
(yourself.) 349.17 316.29 T
(Note that this message, in effect, skips the speci\336c) 180 296.29 T
1 9 Q
(UI) 415.77 296.29 T
1 10 Q
( and thus any speci\336c) 426.77 296.29 T
-0.64 (functionality de\336ned for activating a trigger will be ignored. In) 180 283.29 P
1 9 Q
-0.58 ( OSF/M) 464.21 283.29 P
1 10 Q
-0.64 (otif, for) 495.81 283.29 P
(example, a trigger may \322blink\323 \050display itself in reverse video\051 when) 180 270.29 T
(activated. T) 180 257.29 T
(o perform the default speci\336c) 233.91 257.29 T
1 9 Q
(UI) 370.94 257.29 T
1 10 Q
( behavior) 381.94 257.29 T
(, send the object a) 424.17 257.29 T
1 9 Q
(MSG_GEN_ACTIV) 180 244.29 T
(A) 259.16 244.29 T
(TE) 265.17 244.29 T
1 10 Q
( instead, which will perform the default activation for) 277.67 244.29 T
(an object and then call) 180 231.29 T
1 9 Q
(MSG_GEN_TRIGGER_SEND_ACTION) 287.24 231.29 T
1 10 Q
(.) 453.91 231.29 T
81 214.94 531 219.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 214.94 531 219.95 R
7 X
0 0 0 1 0 0 0 K
V
50 218.94 609.01 218.94 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 206.94 T
0 F
(MSG_GEN_TRIGGER_SEND_ACTION) 99 206.94 T
6 10 Q
(void) 99 193.28 T
5 F
(MSG_GEN_TRIGGER_SEND_ACTION\050) 153 193.28 T
5 9 Q
(Boolean doublePressFlag\051;) 153 182.94 T
1 10 Q
(This message causes a GenT) 189 167.28 T
(rigger to send its action message speci\336ed in) 320.63 167.28 T
3 9 Q
(GTI_) 189 155.28 T
3 10 Q
(actionMsg) 210.33 155.28 T
1 F
( to the output speci\336ed in) 257.72 155.28 T
3 9 Q
(GTI_) 378.1 155.28 T
3 10 Q
(destination) 399.43 155.28 T
1 F
(if the object is) 453.86 155.28 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "370" 10
%%Page: "371" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Supplemental GenTrigger Usage) 340.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(371) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(GS_USABLE) 189 515.33 T
1 10 Q
(. This message is sent automatically by the) 244.67 515.33 T
1 9 Q
(UI) 446.39 515.33 T
1 10 Q
( as part of the) 457.39 515.33 T
(default behavior when a GenT) 189 503.33 T
(rigger is activated by the speci\336c) 328.59 503.33 T
1 9 Q
(UI) 482.86 503.33 T
1 10 Q
(. If you) 493.86 503.33 T
-0.78 (wish to simulate a double-click, sending the message included in an object\325) 189 491.33 P
-0.78 (s) 524.37 491.33 P
1 9 Q
-0.53 (A) 189 479.33 P
-0.53 (TTR_GEN_TRIGGER_CUSTOM_DOUBLE_PRESS,) 195 479.33 P
1 10 Q
-0.59 (pass this message with a) 416.16 479.33 P
(value of) 189 467.33 T
3 F
(true) 228.08 467.33 T
1 F
(. Double-press messages may not pass any data in a trigger) 246.59 467.33 T
(\325) 521.45 467.33 T
(s) 523.12 467.33 T
1 9 Q
(A) 189 455.33 T
(TTR_GEN_TRIGGER_ACTION_DA) 195 455.33 T
(T) 345.51 455.33 T
(A) 351.02 455.33 T
1 10 Q
(.) 357.52 455.33 T
(Slightly more useful is the) 189 438.33 T
4 F
( GenClass) 311.05 438.33 T
1 F
( message) 362.25 438.33 T
1 9 Q
(MSG_GEN_ACTIV) 406.89 438.33 T
(A) 486.05 438.33 T
(TE) 492.06 438.33 T
1 10 Q
(,) 504.56 438.33 T
-0.68 (which activates the trigger at the speci\336c) 189 426.33 P
1 9 Q
-0.61 (UI) 377.44 426.33 P
1 10 Q
-0.68 (\325) 388.43 426.33 P
-0.68 (s level, performing any default) 390.1 426.33 P
(activation behavior \050such as making the trigger blink to show that it is) 189 414.33 T
(being activated\051.) 189 402.33 T
0 9 Q
(Source:) 153 386.33 T
1 10 Q
(Unrestricted. Usually the speci\336c) 207 386.33 T
1 9 Q
(UI) 364.41 386.33 T
1 10 Q
(.) 375.41 386.33 T
0 9 Q
(Destination:) 153 369.33 T
1 10 Q
(Any usable GenT) 207 369.33 T
(rigger object) 286.21 369.33 T
0 9 Q
(Parameters:) 153 352.33 T
3 10 Q
(doublePressFlag) 207 352.33 T
1 F
(Pass) 297 352.33 T
3 F
(true) 321.27 352.33 T
1 F
( to use the message stored in) 339.78 352.33 T
1 9 Q
(A) 297 339.33 T
(TTR_GEN_TRIGGER_CUSTOM_DOUBLE_PRESS) 303 339.33 T
1 10 Q
(rather than message in) 297 326.33 T
3 9 Q
(GTI_) 407.57 326.33 T
3 10 Q
(actionMsg) 428.9 326.33 T
1 9 Q
(.) 476.29 326.33 T
0 F
(Return:) 153 309.33 T
1 10 Q
(Nothing.) 207 309.33 T
0 9 Q
(Interception:) 153 292.33 T
1 10 Q
(Generally not intercepted.) 207.5 292.33 T
0 9 Q
(See Also:) 153 275.33 T
1 F
(MSG_GEN_ACTIV) 207 275.33 T
(A) 286.16 275.33 T
(TE) 292.17 275.33 T
0 14 Q
(5.3.5) 130.86 233 T
0 18 Q
(Setting a T) 180 233 T
(rigger As the Default) 271.03 233 T
5 10 Q
(MSG_GEN_TRIGGER_MAKE_DEFAULT_ACTION) 180 209.33 T
1 F
(Often, a dialog box or other windowed generic object will have several) 180 189.33 T
(triggers. Y) 180 176.33 T
(ou will likely want one of these triggers to be the default) 227.78 176.33 T
(action\321the default action is activated when the user double-clicks on some) 180 163.33 T
81 144 531 648 C
180 522 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Figure) 180 582.34 T
(5-) 213.34 582.34 T
(3) 222.23 582.34 T
3 F
(Default GenT) 230.57 582.34 T
(rigger activation.) 291.89 582.34 T
(A GenT) 180 568.34 T
(rigger in) 214.11 568.34 T
3 9 Q
(OSF/M) 256.5 568.34 T
3 10 Q
(otif might \322blink\323 when activated.) 289.46 568.34 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
%%BeginBinary:  228      
59 46 59 46 0 238.5 597 BEGINBITMAPBWc
="
E7


'
E0000000001F'
EFFFFFFFFFDF




8"
E08$
FFFF9F8$
E0FF878$
FFFFC1:#
C07F:#
E01F;"
07:"
F0;"
3F'
E0000000081F'
FFFFFFFFF88F:#
FCC7;"
E3:#
FFF1;"
F9;"
FF



















ENDBITMAP
%%EndBinary
%%BeginBinary:  231      
59 46 59 46 0 413.5 596.33 BEGINBITMAPBWc
="
E7


'
E0000000001F'
EFFFFFFFFFDF




8"
E08$
FFFF9F8$
E0FF878$
FFFFC1:#
C07F:#
E01F;"
07:"
F0;"
3F'
E0000000081F'
FFFFFFFFF88F:#
FCC7;"
E3:#
FFF1;"
F9;"
FF



















ENDBITMAP
%%EndBinary
%%BeginBinary:  209      
54 36 54 36 0 328.5 606.17 BEGINBITMAPBWc
<"
FC

'
C0000000003F



9#
01C0:"
308$
3E010C8$
0000838%
3E0080FF8%
0000403F;"
0F:"
20;"
7F:#
103F:#
111F:#
098F'
FFFFFFFFF9C7:#
FFE3;"
F3;"
FF












ENDBITMAP
%%EndBinary
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "371" 11
%%Page: "372" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(372) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(item in the dialog or when the user hits Return, typically) 180 641.33 T
(. \050Speci\336c) 442.62 641.33 T
1 9 Q
(UI) 489.47 641.33 T
1 10 Q
(s can) 500.47 641.33 T
(determine how the activation occurs.\051) 180 628.33 T
-0.81 (T) 180 608.33 P
-0.81 (o set a trigger the default, use) 185.75 608.33 P
1 9 Q
-0.73 (HINT_DEF) 321.55 608.33 P
-0.73 (AUL) 369.39 608.33 P
-0.73 (T_DEF) 388.73 608.33 P
-0.73 (AUL) 418.07 608.33 P
-0.73 (T_ACTION) 437.41 608.33 P
1 10 Q
-0.81 (; this only) 484.91 608.33 P
(works for the \336rst time the trigger is created, though. T) 180 595.33 T
(o set a trigger to be) 435.76 595.33 T
(the default action item dynamically) 180 582.33 T
(, use the message) 343.36 582.33 T
1 9 Q
(MSG_GEN_TRIGGER_MAKE_DEF) 180 569.33 T
(AUL) 330.5 569.33 T
(T_ACTION) 349.84 569.33 T
1 10 Q
(.) 397.34 569.33 T
81 552.99 531 558 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 552.99 531 558 R
7 X
0 0 0 1 0 0 0 K
V
50 556.99 609.01 556.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 544.99 T
0 F
(MSG_GEN_TRIGGER_MAKE_DEF) 99 544.99 T
(AUL) 292.37 544.99 T
(T_ACTION) 316.14 544.99 T
6 10 Q
(void) 99 531.33 T
5 F
(MSG_GEN_TRIGGER_MAKE_DEFAULT_ACTION\050\051;) 153 531.33 T
1 F
-0.61 (This message sets the trigger to be the default action in its windowed parent.) 180 513.33 P
(It is the message equivalent of) 180 500.33 T
1 9 Q
(HINT_DEF) 323.73 500.33 T
(AUL) 371.57 500.33 T
(T_DEF) 390.91 500.33 T
(AUL) 420.25 500.33 T
(T_ACTION) 439.59 500.33 T
1 10 Q
(, de\336ned) 487.09 500.33 T
(in) 180 487.33 T
4 F
(GenClass) 192.04 487.33 T
1 F
(.) 240.37 487.33 T
0 9 Q
(Source:) 153 470.33 T
1 10 Q
(Unrestricted.) 207 470.33 T
0 9 Q
(Destination:) 153 453.33 T
1 10 Q
(Any GenT) 207 453.33 T
(rigger object.) 253.42 453.33 T
0 9 Q
(Interception:) 153 436.33 T
1 10 Q
(Generally not intercepted.) 207.5 436.33 T
0 14 Q
(5.3.6) 130.86 393.99 T
0 18 Q
(Manipulating Instance Data) 180 393.99 T
5 10 Q
(MSG_GEN_TRIGGER_GET_ACTION_MSG,) 180 370.33 T
(MSG_GEN_TRIGGER_SET_ACTION_MSG,) 180 357.33 T
(MSG_GEN_TRIGGER_GET_DESTINATION,) 180 344.33 T
(MSG_GEN_TRIGGER_SET_DESTINATION) 180 331.33 T
1 F
(A GenT) 180 311.33 T
(rigger) 214.94 311.33 T
(\325) 243.26 311.33 T
(s instance data need not be static. The instance data can be) 244.93 311.33 T
(altered dynamically using the following messages of) 180 298.33 T
4 F
(GenT) 423.18 298.33 T
(riggerClass) 450.7 298.33 T
1 F
(.) 510.15 298.33 T
81 281.98 531 286.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 281.98 531 286.99 R
7 X
0 0 0 1 0 0 0 K
V
50 285.98 609.01 285.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 273.98 T
0 F
(MSG_GEN_TRIGGER_GET_ACTION_MSG) 99 273.98 T
6 10 Q
(Message) 99 260.32 T
5 F
( MSG_GEN_TRIGGER_GET_ACTION_MSG\050\051;) 141 260.32 T
1 F
(This message retrieves the) 189 244.32 T
3 9 Q
(GTI_) 315.68 244.32 T
3 10 Q
(actionMsg) 337.01 244.32 T
1 F
( instance data of the trigger) 384.4 244.32 T
(.) 512.19 244.32 T
0 9 Q
(Source:) 153 228.32 T
1 10 Q
(Unrestricted.) 207 228.32 T
0 9 Q
(Destination:) 153 211.32 T
1 10 Q
(Any GenT) 207 211.32 T
(rigger object.) 253.42 211.32 T
0 9 Q
(Parameters:) 153 194.32 T
1 10 Q
(None.) 207 194.32 T
0 9 Q
(Return:) 153 177.32 T
1 10 Q
(Message in) 207 177.32 T
3 9 Q
(GTI_) 261.45 177.32 T
3 10 Q
(actionMsg) 282.78 177.32 T
1 F
(.) 330.17 177.32 T
0 9 Q
(Interception:) 153 160.32 T
1 10 Q
(Generally not intercepted.) 207.5 160.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "372" 12
%%Page: "373" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Supplemental GenTrigger Usage) 340.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(373) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.3) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(MSG_GEN_TRIGGER_SET_ACTION_MSG) 99 634.99 T
6 10 Q
(void) 99 621.33 T
5 F
(MSG_GEN_TRIGGER_SET_ACTION_MSG\050) 153 621.33 T
5 9 Q
(Message message\051;) 153 610.99 T
1 10 Q
-0.19 (This message sets the) 189 595.33 P
3 9 Q
-0.17 (GTI_) 292.16 595.33 P
3 10 Q
-0.19 (actionMsg) 313.49 595.33 P
1 F
-0.19 ( instance \336eld of a GenT) 360.88 595.33 P
-0.19 (rigger to the) 471.56 595.33 P
(message passed.) 189 583.33 T
0 9 Q
(Source:) 153 567.33 T
1 10 Q
(Unrestricted.) 207 567.33 T
0 9 Q
(Destination:) 153 550.33 T
1 10 Q
(Any GenT) 207 550.33 T
(rigger object.) 253.42 550.33 T
0 9 Q
(Parameters:) 153 533.33 T
3 10 Q
(message) 207 533.33 T
1 F
(Message to assign) 297 533.33 T
3 9 Q
(GTI_) 383.03 533.33 T
3 10 Q
(actionMsg) 404.36 533.33 T
1 F
( to.) 451.75 533.33 T
0 9 Q
(Return:) 153 516.33 T
1 10 Q
(Nothing.) 207 516.33 T
0 9 Q
(Interception:) 153 499.33 T
1 10 Q
(Generally not intercepted.) 207.5 499.33 T
81 482.98 531 487.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 482.98 531 487.99 R
7 X
0 0 0 1 0 0 0 K
V
50 486.98 609.01 486.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 474.98 T
0 F
(MSG_GEN_TRIGGER_GET_DESTINA) 99 474.98 T
(TION) 310.15 474.98 T
6 10 Q
(optr) 99 461.32 T
5 F
(MSG_GEN_TRIGGER_GET_DESTINATION\050\051;) 153 461.32 T
1 F
(This message returns the) 189 445.32 T
3 9 Q
(GTI_) 309.38 445.32 T
3 10 Q
(destination) 330.71 445.32 T
1 F
( instance data \336eld of the) 382.36 445.32 T
(GenT) 189 433.32 T
(rigger) 213.94 433.32 T
(.) 240.97 433.32 T
0 9 Q
(Source:) 153 417.32 T
1 10 Q
(Unrestricted.) 207 417.32 T
0 9 Q
(Destination:) 153 400.32 T
1 10 Q
(Any GenT) 207 400.32 T
(rigger object.) 253.42 400.32 T
0 9 Q
(Parameters:) 153 383.32 T
1 10 Q
(The optr of destination object \050in) 207 383.32 T
3 9 Q
(GTI_) 360.53 383.32 T
3 10 Q
(destination) 381.86 383.32 T
1 F
(\051.) 433.51 383.32 T
0 9 Q
(Return:) 153 366.32 T
1 10 Q
(Nothing.) 207 366.32 T
0 9 Q
(Interception:) 153 349.32 T
1 10 Q
(Generally not intercepted.) 207.5 349.32 T
81 332.98 531 337.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 332.98 531 337.98 R
7 X
0 0 0 1 0 0 0 K
V
50 336.98 609.01 336.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 324.98 T
0 F
(MSG_GEN_TRIGGER_SET_DESTINA) 99 324.98 T
(TION) 308.82 324.98 T
6 10 Q
(void) 99 311.31 T
5 F
(MSG_GEN_TRIGGER_SET_DESTINATION\050) 153 311.31 T
5 9 Q
(optr dest\051;) 153 300.98 T
1 10 Q
(This message sets the) 189 285.31 T
3 9 Q
(GTI_) 292.91 285.31 T
3 10 Q
(destination) 314.24 285.31 T
1 F
( instance \336eld of the GenT) 365.89 285.31 T
(rigger to) 486.95 285.31 T
(the optr passed.) 189 273.31 T
0 9 Q
(Source:) 153 257.31 T
1 10 Q
(Unrestricted.) 207 257.31 T
0 9 Q
(Destination:) 153 240.31 T
1 10 Q
(Any GenT) 207 240.31 T
(rigger object.) 253.42 240.31 T
0 9 Q
(Parameters:) 153 223.31 T
3 10 Q
(dest) 207 223.31 T
1 F
(The optr of the new destination.) 297 223.31 T
0 9 Q
(Return:) 153 206.31 T
1 10 Q
(Nothing.) 207 206.31 T
0 9 Q
(Interception:) 153 189.31 T
1 10 Q
(Generally not intercepted.) 207.5 189.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "373" 13
%%Page: "374" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(374) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(5.3.7) 130.86 636 T
0 18 Q
(Other Hints) 180 636 T
5 10 Q
(HINT_TRIGGER_BRINGS_UP_WINDOW,) 180 612.33 T
(ATTR_GEN_TRIGGER_IMMEDIATE_ACTION,) 180 599.33 T
(HINT_TRIGGER_DESTRUCTIVE_ACTION) 180 586.33 T
1 F
(Besides the hints discussed in earlier sections and the hints inherited from) 180 566.33 T
4 F
-0.52 (GenClass) 180 553.33 P
1 F
-0.51 (,) 228.33 553.33 P
4 F
-0.52 (GenT) 233.38 553.33 P
-0.52 (riggerClass) 260.9 553.33 P
1 F
-0.51 ( provides two others, as well as one additional) 320.35 553.33 P
(attribute:) 180 540.33 T
2 F
(u) 180 520.33 T
1 9 Q
(HINT_TRIGGER_BRINGS_UP_WINDOW) 198 520.33 T
1 10 Q
(Use this hint if your trigger action indirectly brings up a window \050such) 198 508.33 T
(as a) 198 496.33 T
1 9 Q
(GIV_DIALOG) 219.31 496.33 T
1 10 Q
( GenInteraction or some other interaction window\051.) 278.14 496.33 T
-0.68 (This hint, depending on the speci\336c) 198 484.33 P
1 9 Q
-0.61 (UI) 360.78 484.33 P
1 10 Q
-0.68 (, may be used to display the button) 371.77 484.33 P
(with an ellipsis \322\311\323 to symbolize that the trigger leads to some other) 198 472.33 T
(interaction.) 198 460.33 T
2 F
(u) 180 441.33 T
1 9 Q
(A) 198 441.33 T
(TTR_GEN_TRIGGER_IMMEDIA) 204 441.33 T
(TE_ACTION) 343.83 441.33 T
1 10 Q
(Use this attribute if your trigger is in a menu \050) 198 429.33 T
1 9 Q
(GIV_POPUP) 413.95 429.33 T
1 10 Q
( interaction\051) 467.96 429.33 T
(and its action should take place immediately before other pending) 198 417.33 T
1 9 Q
(UI) 505.82 417.33 T
1 10 Q
(events. This will prevent default) 198 405.33 T
1 9 Q
(UI) 350.8 405.33 T
1 10 Q
( events from occurring before the) 361.8 405.33 T
-0.56 (trigger) 198 393.33 P
-0.56 (\325) 230.21 393.33 P
-0.56 (s action. For example, this attribute is used for the tack trigger in) 231.88 393.33 P
-0.19 (the menu box, to prevent the menu from being closed before it is tacked.) 198 381.33 P
2 F
(u) 180 362.33 T
1 F
(HINT_TRIGGER_DESTRUCTIVE_ACTION) 198 362.33 T
(Use this hint if your action may be potentially destructive. This hint) 198 350.33 T
(prevents the trigger from being recognized as the default trigger) 198 338.33 T
(.) 494.66 338.33 T
(For more information on other hints not speci\336c to GenT) 180 319.33 T
(riggers see) 440.87 319.33 T
-0.79 (\322Managing UI Geometry) 180 306.33 P
-0.79 (,\323 Chapter) 291.02 306.33 P
-0.79 (12 of the Concepts Book and hints de\336ned) 340.43 306.33 P
(under) 180 293.33 T
4 F
(GenClass) 210.18 293.33 T
1 F
(.) 258.51 293.33 T
0 14 Q
(5.4) 142.54 241 T
0 24 Q
(Customizations) 180 241 T
1 10 Q
-0.31 (Y) 180 215.33 P
-0.31 (ou may customize a GenT) 185.93 215.33 P
-0.31 (rigger using all the basic) 303.17 215.33 P
4 F
-0.32 (GenClass) 418.86 215.33 P
1 F
-0.31 (attributes as) 469.75 215.33 P
(shown in \322GenClass,\323 Chapter) 180 202.33 T
(2. Of special signi\336cance are the ways in) 322.61 202.33 T
-0.33 (which you can tailor a moniker to print a graphics string on a button, as in a) 180 189.33 P
1 9 Q
(DOS) 180 176.33 T
1 10 Q
( room icon. The moniker should have as its argument a GString. \050See) 199.67 176.33 T
(\322Graphics Environment,\323 Chapter) 180 163.33 T
(23 of the Concepts Book\051.) 340 163.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "374" 14
%%Page: "375" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Customizations) 453.77 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(375) 541.32 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(5.4) 546.55 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(5-) 147.13 629.31 T
(5 Code for a \322Graphic Button\323 GenT) 156.02 629.31 T
(rigger) 327.16 629.31 T
5 9 Q
(@start TriggerGraphicsMonikerResource, notDetachable;) 81 614.98 T
(@visMoniker TriggerGraphicsMoniker = {) 81 596.98 T
(size = standard;) 125 585.98 T
(color = color4;) 125 574.98 T
(aspectRatio = normal;) 125 563.98 T
(cachedSize = 95, 70;) 125 552.98 T
(gstring {) 125 541.98 T
(GSBeginString) 168.98 530.98 T
(GSDrawBitmapAtCP <\050EndTriggerGraphicsIcon-) 168.98 519.98 T
(StartTriggerGraphicsIcon\051>) 301 508.98 T
(StartTriggerGraphicsIcon label byte) 168.98 497.98 T
(<...Bitmap here...>) 168.98 486.98 T
(EndTriggerGraphicsIcon label byte) 168.98 475.98 T
(GSEndString) 168.98 464.98 T
(}) 125 453.98 T
(}) 81 442.98 T
(@end) 81 424.98 T
(TriggerGraphicsMonikerResource;) 125 424.98 T
(@object GenTriggerClass GraphicTrigger = {) 81 406.98 T
(GI_visMoniker = list) 125 395.98 T
({) 168.98 384.98 T
(TriggerGraphicsMoniker) 168.98 373.98 T
(}) 168.98 362.98 T
(GTI_actionMsg = MSG_CUSTOM_MESSAGE;) 125 351.98 T
(GTI_destination = process;) 125 340.98 T
(ATTR_GEN_TRIGGER_ACTION_DATA = {DataToPass};) 125 329.98 T
(}) 81 318.98 T
81 294.95 531 306.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 294.95 531 306.98 R
7 X
0 0 0 1 0 0 0 K
V
76.5 302.2 617.5 305.7 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "375" 15
%%Page: "376" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(GenTrigger) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(376) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(5.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "376" 16
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 16
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Italic
%%+ NewCenturySchlbk-Bold
%%+ Courier
%%+ Courier-Bold
%%EOF
