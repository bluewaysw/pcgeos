%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 20 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /NewCenturySchlbk-Italic FMFONTDEFINE
6 0 /Courier-Bold FMFONTDEFINE
7 0 /Courier-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1407" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisCompClass Features) 397.73 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1407) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
3 10 Q
0 X
-0.08 (V) 180 605.36 P
-0.08 (isCompClass) 187.15 605.36 P
1 F
-0.08 ( allows visible objects to have children. V) 253.45 605.36 P
-0.08 (isComp objects are) 441.77 605.36 P
(the grouping elements within visible object trees.) 180 592.36 T
(If you need to have a visible object tree with several levels, or if you need to) 180 572.36 T
(manage the geometry of visible objects, you will want to read this chapter) 180 559.36 T
(.) 519.31 559.36 T
(Y) 180 546.36 T
(ou should already be familiar with) 185.93 546.36 T
3 F
(V) 348 546.36 T
(isClass) 355.15 546.36 T
1 F
( and with visible object trees.) 391.26 546.36 T
-0.1 (Both of these topics are discussed in \322V) 180 533.36 P
-0.1 (isClass,\323 Chapter) 359.75 533.36 P
-0.1 (23. If you have not) 442.81 533.36 P
(yet read that chapter) 180 520.37 T
(, you should do so now) 277.23 520.37 T
(.) 379.47 520.37 T
0 14 Q
(24.1) 134.76 468.03 T
0 24 Q
(V) 180 468.03 T
(isCompClass Features) 195.58 468.03 T
1 10 Q
-0.51 (Composite visible objects provide several features and functions that normal) 180 442.37 P
-0.78 (visible objects can not.) 180 429.37 P
3 F
-0.81 (V) 283.36 429.37 P
-0.81 (isCompClass) 290.52 429.37 P
1 F
-0.78 ( has several instance data \336elds above) 356.82 429.37 P
(and beyond those found in) 180 416.37 T
3 F
(V) 304.27 416.37 T
(isClass) 311.42 416.37 T
1 F
( \050since) 347.53 416.37 T
3 F
(V) 379.75 416.37 T
(isCompClass) 386.9 416.37 T
1 F
( is a subclass of) 453.2 416.37 T
3 F
(V) 180 403.37 T
(isClass) 187.15 403.37 T
1 F
(, it inherits all its instance data and methods\051. Although it only) 223.26 403.37 T
(handles a few messages not de\336ned in) 180 390.37 T
3 F
(V) 359.1 390.37 T
(isClass) 366.25 390.37 T
1 F
(, it provides much more) 402.36 390.37 T
-0.55 (functionality) 180 377.37 P
-0.55 (. Some of the main features of composite objects are listed below:) 238.15 377.37 P
2 F
(u) 180 357.37 T
1 F
(They can have children.) 198 357.37 T
(Normal visible objects can exist only as leaves of a visible object tree.) 198 345.37 T
3 F
(V) 198 333.37 T
(isCompClass) 205.15 333.37 T
1 F
( can have children, allowing the tree to be built to any) 271.45 333.37 T
(number of levels. See section 23.5 of chapter 23 for full information on) 198 321.37 T
(visible trees.) 198 309.37 T
2 F
(u) 180 290.37 T
1 F
(They can manage their children\325) 198 290.37 T
(s geometry) 347.27 290.37 T
(.) 396.53 290.37 T
(A composite\325) 198 278.37 T
(s children can be managed arbitrarily by the composite, or) 255.41 278.37 T
(the composite can use the geometry manager to automatically position) 198 266.37 T
-0.14 (and size its children. Since a composite can have other composites as its) 198 254.37 P
-0.27 (children, this sizing can descend recursively throughout the visible tree,) 198 242.37 P
(making the entire tree\325) 198 230.37 T
(s geometry completely self-managed. See) 303.94 230.37 T
(\322Managing Geometry\323 on page 1417 for information on geometry) 198 218.37 T
(management.) 198 206.37 T
2 F
(u) 180 187.37 T
1 F
(They can create and manage their own windows.) 198 187.37 T
-0.62 (Composite objects can create their own graphics windows. Though this is) 198 175.37 P
(not typically done \050except in Speci\336c) 198 163.37 T
1 9 Q
(UI) 368.56 163.37 T
1 10 Q
( libraries\051, it is possible. See) 379.56 163.37 T
81 144 531 648 C
235.51 643.03 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.03 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1407" 1
%%Page: "1408" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1408) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(\322Managing Graphic W) 198 641.33 T
(indows\323 on page 1420 for more information on) 300.78 641.33 T
(windows.) 198 629.33 T
2 F
(u) 180 610.33 T
1 F
(They support other) 198 610.33 T
3 F
(V) 289.48 610.33 T
(isClass) 296.63 610.33 T
1 F
( functions.) 332.74 610.33 T
3 F
(V) 198 598.33 T
(isCompClass) 205.15 598.33 T
1 F
( inherits all the instance data \336elds and messages of) 271.45 598.33 T
3 F
-0.31 (V) 198 586.33 P
-0.31 (isClass) 205.15 586.33 P
1 F
-0.29 (. As such, it can do everything normal) 241.26 586.33 P
3 F
-0.31 (V) 416.69 586.33 P
-0.31 (isClass) 423.84 586.33 P
1 F
-0.29 ( objects can do.) 459.95 586.33 P
(See \322V) 198 574.33 T
(isClass,\323 Chapter) 227.75 574.33 T
(23 for full information on) 310.91 574.33 T
3 F
(V) 430.18 574.33 T
(isClass) 437.33 574.33 T
1 F
(.) 473.44 574.33 T
0 14 Q
(24.2) 134.76 523 T
0 24 Q
(V) 180 523 T
(isCompClass Instance Data) 195.58 523 T
1 10 Q
(As stated above,) 180 497.33 T
3 F
(V) 258.17 497.33 T
(isCompClass) 265.32 497.33 T
1 F
( inherits all the instance data \336elds from) 331.62 497.33 T
3 F
(V) 180 484.33 T
(isClass) 187.15 484.33 T
1 F
(. All of those \336elds may be set and reset as they could be for an) 223.26 484.33 T
(object of that class. Composite objects also have four other instance \336elds,) 180 471.33 T
(shown in Code Display) 180 458.33 T
(24-) 288.35 458.33 T
(1.) 302.8 458.33 T
81 425.98 531 438 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 425.98 531 438 R
7 X
0 0 0 1 0 0 0 K
V
76.5 433.23 617.5 436.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 419.31 T
(24-) 147.13 419.31 T
(1 V) 161.58 419.31 T
(isCompClass Instance Fields) 176.41 419.31 T
4 9 Q
(/* The VisCompClass instance data fields are shown below and are discussed in) 81 404.98 T
( * detail throughout the chapter. */) 81 393.98 T
(/* VCI_comp) 125 375.98 T
( * VCI_comp contains the link to the composite object\325s first child. */) 125 364.98 T
(@instance @composite) 102.6 346.98 T
(VCI_comp = VI_link;) 256.5 346.98 T
(/* VCI_gadgetExcl) 125 328.98 T
( * VCI_gadgetExcl is an optr to the object that currently has the gadget) 125 317.98 T
( * exclusive. This field is rarely used directly by applications. */) 125 306.98 T
(@instance optr) 102.6 288.98 T
(VCI_gadgetExcl;) 256.5 288.98 T
(/* VCI_window) 125 270.98 T
( * VCI_window contains the window handle of the graphics window associated) 125 259.98 T
( * with this object. This field is rarely accessed directly by) 125 248.98 T
( * applications; it is set by the visual update mechanism. */) 125 237.98 T
(@instance WindowHandle) 102.6 219.98 T
(VCI_window = NullHandle;) 256.5 219.98 T
(/* VCI_geoAttrs) 125 201.98 T
( * VCI_geoAttrs is a record that defines some of the geometry management) 125 190.98 T
( * information for the composite. None of its values are set by default;) 125 179.98 T
( * the possible flags in this record are shown after the definition. */) 125 168.98 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1408" 2
%%Page: "1409" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisCompClass Instance Data) 365.05 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1409) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(@instance VisCompGeoAttrs) 102.6 642 T
(VCI_geoAttrs = 0;) 256.5 642 T
(/* Possible flags:) 125 631 T
( *) 125 620 T
(VCGA_ORIENT_CHILDREN_VERTICALLY) 168.98 620 T
(0x80) 388 620 T
( *) 125 609 T
(VCGA_INCLUDE_ENDS_IN_CHILD_SPACING) 168.98 609 T
(0x40) 388 609 T
( *) 125 598 T
(VCGA_ALLOW_CHILDREN_TO_WRAP) 168.98 598 T
(0x20) 388 598 T
( *) 125 587 T
(VCGA_ONE_PASS_OPTIMIZATION) 168.98 587 T
(0x10) 388 587 T
( *) 125 576 T
(VCGA_CUSTOM_MANAGE_CHILDREN) 168.98 576 T
(0x08) 388 576 T
( *) 125 565 T
(VCGA_HAS_MINIMUM_SIZE) 168.98 565 T
(0x04) 388 565 T
( *) 125 554 T
(VCGA_WRAP_AFTER_CHILD_COUNT) 168.98 554 T
(0x02) 388 554 T
( *) 125 543 T
(VCGA_ONLY_DRAWS_IN_MARGINS) 168.98 543 T
(0x01) 388 543 T
( */) 125 532 T
(/* VCI_geoDimensionAttrs) 125 514 T
( * VCI_geoDimensionAttrs is a record that contains additional information) 125 503 T
( * about the composite\325s geometry. This field contains two two-bit fields) 125 492 T
( * among its other flags. The default settings are shown in the definition;) 125 481 T
( * all possible flags and settings are shown following. */) 125 470 T
(@instance VisCompGeoDimensionAttrs) 102.6 452 T
(VCI_geoDimensionAttrs = 0;) 301 452 T
(/* Possible flags:) 125 441 T
( * Width Justification flags \050mutually exclusive\051:) 125 430 T
( * VCGDA_WIDTH_JUSTIFICATION) 125 419 T
(0xc0) 388 419 T
( *) 125 408 T
(WJ_LEFT_JUSTIFY_CHILDREN) 168.98 408 T
(0x00) 388 408 T
( *) 125 397 T
(WJ_RIGHT_JUSTIFY_CHILDREN) 168.98 397 T
(0x40) 388 397 T
( *) 125 386 T
(WJ_CENTER_CHILDREN_HORIZONTALLY) 168.98 386 T
(0x80) 388 386 T
( *) 125 375 T
(WJ_FULL_JUSTIFY_CHILDREN_HORIZONTALLY) 168.98 375 T
(0xc0) 388 375 T
( *) 125 364 T
( * Height Justification flags \050mutually exclusive\051:) 125 353 T
( * VCGDA_HEIGHT_JUSTIFICATION) 125 342 T
(0x0c) 388 342 T
( *) 125 331 T
(HJ_TOP_JUSTIFY_CHILDREN) 168.98 331 T
(0x00) 388 331 T
( *) 125 320 T
(HJ_BOTTOM_JUSTIFY_CHILDREN,) 168.98 320 T
(0x04) 388 320 T
( *) 125 309 T
(HJ_CENTER_CHILDREN_VERTICALLY) 168.98 309 T
(0x08) 388 309 T
( *) 125 298 T
(HJ_FULL_JUSTIFY_CHILDREN_VERTICALLY) 168.98 298 T
(0x0c) 388 298 T
( *) 125 287 T
( * Other flags:) 125 276 T
( *) 125 265 T
(VCGDA_EXPAND_WIDTH_TO_FIT_PARENT) 168.98 265 T
(0x20) 388 265 T
( *) 125 254 T
(VCGDA_DIVIDE_WIDTH_EQUALLY) 168.98 254 T
(0x10) 388 254 T
( *) 125 243 T
(VCGDA_EXPAND_HEIGHT_TO_FIT_PARENT) 168.98 243 T
(0x02) 388 243 T
( *) 125 232 T
(VCGDA_DIVIDE_HEIGHT_EQUALLY) 168.98 232 T
(0x01) 388 232 T
( */) 125 221 T
(@default VI_typeFlags = VTF_IS_COMPOSITE;) 102.6 203 T
81 178.98 531 191 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 178.98 531 191 R
7 X
0 0 0 1 0 0 0 K
V
76.5 186.23 617.5 189.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1409" 3
%%Page: "1410" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1410) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(24.2.1) 123.08 636 T
0 18 Q
(VCI_comp) 180 636 T
1 10 Q
(Normal visible objects have just one instance \336eld for tree construction: the) 180 612.33 T
5 9 Q
(VI) 180 599.33 T
5 10 Q
(_link) 190 599.33 T
1 F
( \336eld that points to the object\325) 213.33 599.33 T
(s next sibling. For an object to have) 350.39 599.33 T
(children, it must also have an instance \336eld declared with the keyword) 180 586.33 T
3 F
-0.57 (@composite) 180 573.33 P
1 F
-0.55 (; this \336eld, in) 240.25 573.33 P
3 F
-0.57 (V) 301.76 573.33 P
-0.57 (isCompClass) 308.91 573.33 P
1 F
-0.55 (, is) 375.21 573.33 P
5 9 Q
-0.5 (VCI) 390.22 573.33 P
5 10 Q
-0.55 (_comp) 406.72 573.33 P
1 F
-0.55 (. The composite \336eld) 435.79 573.33 P
-0.31 (contains the optr of the object\325) 180 560.33 P
-0.31 (s \336rst child; the link \336eld contains a pointer to) 317.18 560.33 P
(either the object\325) 180 547.33 T
(s next sibling or its parent.) 256.67 547.33 T
(Applications should never access the) 180 527.33 T
5 9 Q
(VI) 352.04 527.33 T
5 10 Q
(_link) 362.04 527.33 T
1 F
( or) 385.37 527.33 T
5 9 Q
(VI) 400.37 527.33 T
5 10 Q
(_comp) 410.37 527.33 T
1 F
( \336elds directly;) 439.44 527.33 T
(instead, these \336elds can be altered or queried with the following messages) 180 514.33 T
(\050all de\336ned in) 180 501.33 T
3 F
(V) 246.49 501.33 T
(isClass) 253.64 501.33 T
1 F
(\051:) 289.75 501.33 T
1 9 Q
(MSG_VIS_ADD_CHILD) 180 481.33 T
1 10 Q
(This message adds a new child object to the composite.) 243 469.33 T
1 9 Q
(MSG_VIS_REMOVE_CHILD) 180 450.33 T
1 10 Q
(This message removes a child from the composite.) 243 438.33 T
1 9 Q
(MSG_VIS_MOVE_CHILD) 180 419.33 T
1 10 Q
(This message moves a child within the composite\325) 243 407.33 T
(s list of) 471.74 407.33 T
(children.) 243 395.33 T
1 9 Q
(MSG_VIS_GET_P) 180 376.33 T
(ARENT) 255.34 376.33 T
1 10 Q
(This message returns a pointer to the object\325) 243 364.33 T
(s parent.) 448.02 364.33 T
(Several other messages may also be used to change or query any visible) 180 345.33 T
(object\325) 180 332.33 T
(s) 208.52 332.33 T
5 9 Q
(VI) 215.93 332.33 T
5 10 Q
(_link) 225.93 332.33 T
1 F
( and) 249.26 332.33 T
5 9 Q
(VCI) 272.23 332.33 T
5 10 Q
(_comp) 288.73 332.33 T
1 F
( \336elds. These are discussed in \322W) 317.8 332.33 T
(orking with) 470.78 332.33 T
(V) 180 319.33 T
(isible Object T) 186.78 319.33 T
(rees\323 on page 1373 of \322V) 252.66 319.33 T
(isClass,\323 Chapter) 363.54 319.33 T
(23.) 446.7 319.33 T
0 14 Q
(24.2.2) 123.08 277 T
0 18 Q
(VCI_gadgetExcl) 180 277 T
1 10 Q
(Since the composite object must manage several other objects, it must also) 180 253.33 T
-0 (keep track of certain hierarchies used by the) 180 240.33 P
1 9 Q
-0 (UI) 388.51 240.33 P
1 10 Q
-0 (; the gadget exclusive is one) 399.51 240.33 P
-0.2 (of these. W) 180 227.33 P
-0.2 (ithin each branch of the visible object tree, only one visible object) 230.35 227.33 P
-0.01 (may have the gadget exclusive at a time. The gadget exclusive is kept track) 180 214.33 P
-0.53 (of via a path of pointers from the top of the tree down to the object having the) 180 201.33 P
(exclusive.) 180 188.33 T
(The) 180 168.33 T
5 9 Q
(VCI) 200.56 168.33 T
5 10 Q
(_gadgetExcl) 217.06 168.33 T
1 F
( \336eld determines which child of the composite has the) 272.6 168.33 T
(gadget exclusive. The child indicated in this \336eld may or may not actually) 180 155.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1410" 4
%%Page: "1411" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisCompClass Instance Data) 365.05 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1411) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(have the gadget exclusive for the entire visible tree; if the branch does not) 180 641.33 T
(have the exclusive, neither will the child object. The gadget exclusive is) 180 628.33 T
-0.24 (similar to the other hierarchies of the input manager and acts the same way) 180 615.33 P
-0.24 (.) 528.22 615.33 P
(Applications never access the) 180 595.33 T
5 9 Q
(VCI) 318.52 595.33 T
5 10 Q
(_gadgetExcl) 335.02 595.33 T
1 F
( \336eld of a composite directly) 390.56 595.33 T
(.) 518.16 595.33 T
(Instead, this \336eld may be set with the following three) 180 582.33 T
3 F
(V) 429.67 582.33 T
(isClass) 436.82 582.33 T
1 F
( messages:) 472.93 582.33 T
1 9 Q
(MSG_VIS_T) 180 562.33 T
(AKE_GADGET_EXCL) 231.51 562.33 T
1 10 Q
-0.02 (This message causes a visible object to set itself as having the) 243 550.33 P
(gadget exclusive. The object\325) 243 538.33 T
(s parent composite will set its) 373.57 538.33 T
5 9 Q
(VCI) 243 526.33 T
5 10 Q
(_gadgetExcl) 259.5 526.33 T
1 F
( \336eld appropriately) 315.04 526.33 T
(.) 402.27 526.33 T
1 9 Q
(MSG_VIS_RELEASE_GADGET_EXCL) 180 507.33 T
1 10 Q
(This message causes a visible object to relinquish its hold on) 243 495.33 T
-0.06 (the gadget exclusive. The object\325) 243 483.33 P
-0.06 (s parent composite will set its) 391.13 483.33 P
5 9 Q
(VCI) 243 471.33 T
5 10 Q
(_gadgetExcl) 259.5 471.33 T
1 F
( \336eld appropriately) 315.04 471.33 T
(.) 402.27 471.33 T
1 9 Q
(MSG_VIS_LOST_GADGET_EXCL) 180 452.33 T
1 10 Q
-0.02 (This message is sent to the object having the gadget exclusive) 243 440.33 P
(for that branch when it has lost the exclusive.) 243 428.33 T
(The above messages are detailed in \322The Gadget Exclusive and Focus) 180 409.33 T
(Hierarchy\323 on page 1364 of \322V) 180 396.33 T
(isClass,\323 Chapter) 318.65 396.33 T
(23.) 401.81 396.33 T
0 14 Q
(24.2.3) 123.08 354 T
0 18 Q
(VCI_window) 180 354 T
1 10 Q
-0.8 (Every visible object has a window associated with it in which it will be drawn.) 180 330.33 P
(Normal) 180 317.33 T
3 F
(V) 217.97 317.33 T
(isClass) 225.12 317.33 T
1 F
( objects have no control over what window they\325re) 261.23 317.33 T
(associated with; they must be in the same window as their composite) 180 304.33 T
(parents. Composites may need to appear in different windows from their) 180 291.33 T
(parents, however) 180 278.33 T
(. Thus,) 258.89 278.33 T
3 F
(V) 293.53 278.33 T
(isCompClass) 300.68 278.33 T
1 F
( has the) 366.98 278.33 T
5 9 Q
(VCI) 406.62 278.33 T
5 10 Q
(_window) 423.12 278.33 T
1 F
( \336eld, which) 464.23 278.33 T
(contains the window handle of the window in which the composite\325) 180 265.33 T
(s branch) 487.07 265.33 T
(will be drawn.) 180 252.33 T
(Applications will not access this \336eld directly) 180 232.33 T
(. T) 387.24 232.33 T
(ypically) 398.95 232.33 T
(, composites will be) 433.77 232.33 T
(drawn in the window associated with their parent composites or contents.) 180 219.33 T
-0.51 (Sometimes, however) 180 206.33 P
-0.51 (, an application will want a visible branch to appear in a) 273.76 206.33 P
-0.35 (window different from that of the rest of the visible tree. The composite then) 180 193.33 P
(must use other) 180 180.33 T
3 F
(V) 252.04 180.33 T
(isClass) 259.19 180.33 T
1 F
( messages for creating and associating a window) 295.3 180.33 T
(.) 518.3 180.33 T
(This process is discussed in more detail in section 24.3.2 on page 1420.) 180 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1411" 5
%%Page: "1412" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1412) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(24.2.4) 123.08 636 T
0 18 Q
(VCI_geoAttrs) 180 636 T
1 10 Q
(The most-used feature of composite objects is their ability to manage the) 180 612.33 T
(sizing and placement of their children. This is known as managing the) 180 599.33 T
(composite\325) 180 586.33 T
(s geometry) 227.41 586.33 T
(.) 276.67 586.33 T
-0.51 (The geometry management behavior implemented by a particular composite) 180 566.33 P
(object is determined by its) 180 553.33 T
5 9 Q
(VCI) 304.09 553.33 T
5 10 Q
(_geoAttrs) 320.59 553.33 T
1 F
( and) 363.36 553.33 T
5 9 Q
(VCI) 386.33 553.33 T
5 10 Q
(_geoDimensionAttrs) 402.82 553.33 T
1 F
( \336elds.) 495.02 553.33 T
-0.33 (Both of these \336elds may be set and altered by applications as their geometry) 180 540.33 P
(needs change. The) 180 527.33 T
5 9 Q
(VCI) 267.97 527.33 T
5 10 Q
(_geoAttrs) 284.47 527.33 T
1 F
( \336eld, speci\336cally) 327.24 527.33 T
(, determines the type of) 405.21 527.33 T
(geometry management employed by the composite.) 180 514.33 T
(The) 180 494.33 T
5 9 Q
(VCI) 200.56 494.33 T
5 10 Q
(_geoAttrs) 217.06 494.33 T
1 F
( \336eld may contain any or all of the following eight \337ags:) 259.83 494.33 T
1 9 Q
(VCGA_ORIENT_CHILDREN_VERTICALL) 180 474.33 T
(Y) 361.32 474.33 T
1 10 Q
(This \337ag indicates that the composite\325) 243 462.33 T
(s children should be) 418.03 462.33 T
(arranged vertically rather than the default \050horizontally\051.) 243 450.33 T
1 9 Q
(VCGA_INCLUDE_ENDS_IN_CHILD_SP) 180 431.33 T
(ACING) 352.5 431.33 T
1 10 Q
(When the composite is using full justi\336cation \050see) 243 419.33 T
5 9 Q
(VCI) 243 407.33 T
5 10 Q
(_geoDimensionAttrs) 259.5 407.33 T
1 F
(\051, this \337ag indicates that there should) 351.7 407.33 T
(be as much space before the \336rst child and after the last child) 243 395.33 T
-0.75 (as there is between the children. If this \337ag is not set, there will) 243 383.33 P
(be no space outside the \336rst and last children.) 243 371.33 T
1 9 Q
(VCGA_ALLOW_CHILDREN_TO_WRAP) 180 352.33 T
1 10 Q
(This \337ag will allow the children to wrap if their combined) 243 340.33 T
(lengths won\325) 243 328.33 T
(t allow them to \336t within the composite\325) 300.79 328.33 T
(s bounds.) 484.16 328.33 T
-0.73 (The composite will keep within the bounds of its parent, and its) 243 316.33 P
(children will wrap as necessary) 243 304.33 T
(. If this \337ag is not set, the) 387.27 304.33 T
(composite will try to grow to be as large as necessary to \336t all) 243 292.33 T
(children.) 243 280.33 T
1 9 Q
(VCGA_ONE_P) 180 261.33 T
(ASS_OPTIMIZA) 241.67 261.33 T
(TION) 310.34 261.33 T
1 10 Q
-0.02 (This \337ag makes the geometry manager make only one pass at) 243 249.33 P
-0.46 (managing the children. It should only be set if the children can) 243 237.33 P
(be guaranteed not to wrap or resize.) 243 225.33 T
1 9 Q
(VCGA_CUSTOM_MANAGE_CHILDREN) 180 206.33 T
1 10 Q
-0.28 (This \337ag indicates that the composite will manage its children) 243 194.33 P
(without using the geometry manager) 243 182.33 T
(. This allows the) 413.57 182.33 T
-0.66 (composite or its children to manually determine their positions) 243 170.33 P
(and sizes. If this \337ag is set, the composite will keep its own) 243 158.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1412" 6
%%Page: "1413" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisCompClass Instance Data) 365.05 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1413) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.77 (bounds in its) 243 641.33 P
5 9 Q
-0.69 (VI) 303.12 641.33 P
5 10 Q
-0.77 (_bounds) 313.12 641.33 P
1 F
-0.77 ( \336eld, just as other V) 351.45 641.33 P
-0.77 (is objects. This \337ag) 443.3 641.33 P
(in a composite indicates custom management for the) 243 629.33 T
(composite\325) 243 617.33 T
(s entire branch, not just its children.) 290.41 617.33 T
1 9 Q
(VCGA_HAS_MINIMUM_SIZE) 180 598.33 T
1 10 Q
-0.66 (This \337ag indicates that the composite has a minimum size. The) 243 586.33 P
-0.12 (geometry manager will query the composite for this minimum) 243 574.33 P
(and will ensure the object never gets smaller than that) 243 562.33 T
(regardless of the size of its children. The minimum size must) 243 550.33 T
-0.87 (be returned by a custom) 243 538.33 P
1 9 Q
-0.79 (MSG_VIS_COMP_GET_MINIMUM_SIZE) 353.28 538.33 P
1 10 Q
(handler) 243 526.33 T
(.) 278.37 526.33 T
1 9 Q
(VCGA_WRAP_AFTER_CHILD_COUNT) 180 507.33 T
1 10 Q
-1.02 (Used in conjunction with) 243 495.33 P
1 9 Q
-0.91 (VCGA_ALLOW_CHILDREN_TO_WRAP) 357.09 495.33 P
1 10 Q
-1.02 (,) 526.46 495.33 P
(this \337ag will cause child wrapping after a certain number of) 243 483.33 T
(children. This can cause wrapping based on the number of) 243 471.33 T
-0.2 (children rather than on child size. The geometry manager will) 243 459.33 P
-0.53 (query the composite with) 243 447.33 P
1 9 Q
-0.48 (MSG_VIS_COMP_GET_WRAP_COUNT) 360.14 447.33 P
1 10 Q
-0.53 (.) 528.22 447.33 P
1 9 Q
(VCGA_ONL) 180 428.33 T
(Y_DRA) 230.51 428.33 T
(WS_IN_MARGINS) 260.51 428.33 T
1 10 Q
(This \337ag is used for optimized visual updates. It causes only) 243 416.33 T
(the margins of the composite to be drawn when its image is) 243 404.33 T
(marked invalid; all children of the composite must have their) 243 392.33 T
(own images marked invalid if they are to be redrawn as well.) 243 380.33 T
0 14 Q
(24.2.5) 123.08 339 T
0 18 Q
(VCI_geoDimensionAttrs) 180 339 T
1 10 Q
-0.53 (The) 180 315.33 P
5 9 Q
-0.48 (VCI) 200.03 315.33 P
5 10 Q
-0.53 (_geoDimensionAttrs) 216.53 315.33 P
1 F
-0.53 ( \336eld determines how the composite manages its) 308.73 315.33 P
(children in each dimension. It provides the geometry information not given) 180 302.33 T
(in) 180 289.33 T
5 9 Q
(VCI) 192.04 289.33 T
5 10 Q
(_geoAttrs) 208.54 289.33 T
1 F
( such as child justi\336cation and certain sizing behavior) 251.31 289.33 T
(.) 499.29 289.33 T
-0.49 (It contains three \336elds for each dimension \050horizontal and vertical\051: The \336rst) 180 269.33 P
-0.21 (\336eld represents the justi\336cation of the children in that dimension. This \336eld) 180 256.33 P
(is two bits and can be one of four different enumerations. The second and) 180 243.33 T
(third \336elds are sizing \337ags. These \336elds are listed below:) 180 230.33 T
1 9 Q
(VCGDA_WIDTH_JUSTIFICA) 180 210.33 T
(TION) 305.33 210.33 T
1 10 Q
-0.4 (This is a two-bit \336eld that can be set to any one of four possible) 243 198.33 P
-0.16 (width justi\336cations. If the name of this \336eld is used in place of) 243 186.33 P
(one of the four values, full justi\336cation will be used. The) 243 174.33 T
(justi\336cation can be set as a normal \337ag. The four different) 243 162.33 T
(values are) 243 150.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1413" 7
%%Page: "1414" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1414) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(WJ_LEFT_JUSTIFY_CHILDREN) 243 641.33 T
1 10 Q
(Left justify the children.) 243 629.33 T
1 9 Q
(WJ_RIGHT_JUSTIFY_CHILDREN) 243 610.33 T
1 10 Q
(Right justify the children.) 243 598.33 T
1 9 Q
(WJ_CENTER_CHILDREN_HORIZONT) 243 579.33 T
(ALL) 410.66 579.33 T
(Y) 428.34 579.33 T
1 10 Q
(Center the children horizontally) 243 567.33 T
(.) 390.77 567.33 T
1 9 Q
(WJ_FULL_JUSTIFY_CHILDREN_HORIZONT) 243 548.33 T
(ALL) 441.19 548.33 T
(Y) 458.86 548.33 T
1 10 Q
(Full justify the children. Horizontal full justi\336cation is only) 243 536.33 T
(meaningful if the children are oriented horizontally \050by) 243 524.33 T
(clearing) 243 512.33 T
1 9 Q
(VCGA_ORIENT_CHILDREN_VERTICALL) 283 512.33 T
(Y) 464.32 512.33 T
1 10 Q
( in) 470.66 512.33 T
5 9 Q
(VCI) 243 500.33 T
5 10 Q
(_geoAttrs) 259.5 500.33 T
1 F
(\051.) 302.27 500.33 T
1 9 Q
(VCGDA_EXP) 180 481.33 T
(AND_WIDTH_TO_FIT_P) 236.17 481.33 T
(ARENT) 342.01 481.33 T
1 10 Q
(If this \337ag is set, the composite will try to expand to \336ll the) 243 469.33 T
-0.57 (available width of its parent. By default, this \337ag is not set; the) 243 457.33 P
(composite will be only as wide as its children require.) 243 445.33 T
1 9 Q
(VCGDA_DIVIDE_WIDTH_EQUALL) 180 426.33 T
(Y) 332.83 426.33 T
1 10 Q
-0.19 (If this \337ag is set, the composite will try to divide space equally) 243 414.33 P
(between all its manageable, horizontally-oriented children.) 243 402.33 T
(The composite will only suggest sizes\321the children may or) 243 390.33 T
(may not cooperate.) 243 378.33 T
1 9 Q
(VCGDA_HEIGHT_JUSTIFICA) 180 359.33 T
(TION) 310.5 359.33 T
1 10 Q
(This is a two-bit \336eld that can be set to any one of four height) 243 347.33 T
-0.18 (justi\336cations. If the name of this \336eld is used in place of one of) 243 335.33 P
-0.19 (the four values, full justi\336cation will be used. The justi\336cation) 243 323.33 P
(can be set as a normal \337ag. The four different values are) 243 311.33 T
1 9 Q
(HJ_TOP_JUSTIFY_CHILDREN) 243 292.33 T
1 10 Q
(Justify the children to the composite\325) 243 280.33 T
(s top bound.) 413.38 280.33 T
1 9 Q
(HJ_BOTTOM_JUSTIFY_CHILDREN) 243 261.33 T
1 10 Q
(Justify the children to the composite\325) 243 249.33 T
(s bottom bound.) 413.38 249.33 T
1 9 Q
(HJ_CENTER_CHILDREN_VERTICALL) 243 230.33 T
(Y) 412.66 230.33 T
1 10 Q
(Center the children vertically) 243 218.33 T
(.) 378.55 218.33 T
1 9 Q
(HJ_FULL_JUSTIFY_CHILDREN_VERTICALL) 243 199.33 T
(Y) 443.19 199.33 T
1 10 Q
(Full justify the children. V) 243 187.33 T
(ertical full justi\336cation is only) 364.86 187.33 T
(meaningful if the children are oriented vertically \050by setting) 243 175.33 T
1 9 Q
(VCGA_ORIENT_CHILDREN_VERTICALL) 243 163.33 T
(Y) 424.32 163.33 T
1 10 Q
( in) 430.66 163.33 T
5 9 Q
(VCI) 445.48 163.33 T
5 10 Q
(_geoAttrs) 461.98 163.33 T
1 F
(\051.) 504.75 163.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1414" 8
%%Page: "1415" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisCompClass Instance Data) 365.05 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1415) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(VCGDA_EXP) 180 641.33 T
(AND_HEIGHT_TO_FIT_P) 236.17 641.33 T
(ARENT) 347.17 641.33 T
1 10 Q
(If this \337ag is set, the composite will try to expand to \336ll the) 243 629.33 T
-0.8 (available height of its parent. By default, this \337ag is not set; the) 243 617.33 P
(composite will be only as tall as its children require.) 243 605.33 T
1 9 Q
(VCGDA_DIVIDE_HEIGHT_EQUALL) 180 586.33 T
(Y) 337.99 586.33 T
1 10 Q
-0.19 (If this \337ag is set, the composite will try to divide space equally) 243 574.33 P
(between all its manageable, vertically-oriented children. The) 243 562.33 T
-0.68 (composite will only suggest sizes\321the children may or may not) 243 550.33 P
(cooperate.) 243 538.33 T
0 14 Q
(24.2.6) 123.08 497 T
0 18 Q
(Managing Instance Data) 180 497 T
4 10 Q
(MSG_VIS_COMP_GET_GEO_ATTRS, MSG_VIS_COMP_SET_GEO_ATTRS) 180 473.33 T
1 F
(T) 180 453.33 T
(o retrieve the \337ags currently set in both) 185.75 453.33 T
5 9 Q
(VCI) 372.24 453.33 T
5 10 Q
(_geoAttrs) 388.74 453.33 T
1 F
( and) 431.51 453.33 T
5 9 Q
(VCI) 180 440.33 T
5 10 Q
(_geoDimensionAttrs) 196.5 440.33 T
1 F
(, use) 288.7 440.33 T
1 9 Q
(MSG_VIS_COMP_GET_GEO_A) 312.78 440.33 T
(TTRS) 446.28 440.33 T
1 10 Q
(. T) 470.46 440.33 T
(o set the) 481.77 440.33 T
(attributes in either or both \336elds, use) 180 427.33 T
1 9 Q
(MSG_VIS_COMP_SET_GEO_A) 355.58 427.33 T
(TTRS) 487.75 427.33 T
1 10 Q
(.) 511.93 427.33 T
(both of these messages are detailed below) 180 414.33 T
(.) 371.71 414.33 T
81 397.99 531 403 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 397.99 531 403 R
7 X
0 0 0 1 0 0 0 K
V
50 401.99 609.01 401.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 389.99 T
0 F
(MSG_VIS_COMP_SET_GEO_A) 99 389.99 T
(TTRS) 272.83 389.99 T
6 10 Q
(void) 99 376.33 T
4 F
(MSG_VIS_COMP_SET_GEO_ATTRS\050) 153 376.33 T
4 9 Q
(word) 153 365.99 T
(attrsToSet,) 189 365.99 T
(word) 153 355.99 T
(attrsToClear\051;) 189 355.99 T
1 10 Q
(This message sets the \337ags in the composite object\325) 180 338.33 T
(s) 415.22 338.33 T
5 9 Q
(VCI) 422.63 338.33 T
5 10 Q
(_geoAttrs) 439.13 338.33 T
1 F
( and) 481.9 338.33 T
5 9 Q
(VCI) 180 325.33 T
5 10 Q
(_geoDimensionAttrs) 196.5 325.33 T
1 F
( \336elds. The high byte of each parameter represents) 288.7 325.33 T
(the dimension attributes, and the low byte represents the geometry) 180 312.33 T
-0.17 (attributes. This message does not invalidate or update the object\325) 180 299.33 P
-0.17 (s geometry) 479.12 299.33 P
-0.17 (.) 528.22 299.33 P
0 9 Q
(Source:) 153 282.33 T
1 10 Q
(Unrestricted.) 207 282.33 T
0 9 Q
(Destination:) 153 265.33 T
1 10 Q
(Any visible composite object.) 207 265.33 T
0 9 Q
(Parameters:) 153 248.33 T
5 10 Q
(attrsT) 207 248.33 T
(oSet) 234.62 248.33 T
1 F
(A word of attributes that should be set for the) 297 248.33 T
(object. The high byte is a record of) 297 235.33 T
3 F
(V) 297 222.33 T
(isCompGeoDimensionAttrs) 304.15 222.33 T
1 F
(, and the low byte) 445.43 222.33 T
(is a record of) 297 209.33 T
3 F
(V) 358.85 209.33 T
(isCompGeoAttrs) 366 209.33 T
1 F
(. The attributes) 451.37 209.33 T
(set in this parameter will be set for the object.) 297 196.33 T
5 F
(attrsT) 207 180.33 T
(oClear) 234.62 180.33 T
1 F
-0.1 (A word of attributes to be cleared from the object\325) 297 180.33 P
-0.1 (s) 523.69 180.33 P
(instance data. It has the same form as) 297 167.33 T
5 F
(attrsT) 476.85 167.33 T
(oSet) 504.47 167.33 T
1 F
(,) 524.1 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1415" 9
%%Page: "1416" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1416) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(above. Any attribute set in this parameter will be) 297 641.33 T
(cleared in the instance \336elds.) 297 628.33 T
0 9 Q
(Return:) 153 611.33 T
1 10 Q
(Nothing.) 207 611.33 T
0 9 Q
(Interception:) 153 594.33 T
1 10 Q
(Unlikely) 207.5 594.33 T
(.) 246.4 594.33 T
81 577.99 531 583 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 577.99 531 583 R
7 X
0 0 0 1 0 0 0 K
V
50 581.99 609.01 581.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 569.99 T
0 F
(MSG_VIS_COMP_GET_GEO_A) 99 569.99 T
(TTRS) 274.16 569.99 T
6 10 Q
(word) 99 556.33 T
4 F
(MSG_VIS_COMP_GET_GEO_ATTRS\050\051;) 153 556.33 T
1 F
(This message retrieves the \337ags set in the object\325) 180 538.33 T
(s) 405.77 538.33 T
5 9 Q
(VCI) 413.18 538.33 T
5 10 Q
(_geoAttrs) 429.68 538.33 T
1 F
( and) 472.45 538.33 T
5 9 Q
(VCI) 180 525.33 T
5 10 Q
(_geoDimensionAttrs) 196.5 525.33 T
1 F
( \336elds. The high byte of the return value represents) 288.7 525.33 T
(the dimension attributes, and the low byte represents the geometry) 180 512.33 T
-0.17 (attributes. This message does not invalidate or update the object\325) 180 499.33 P
-0.17 (s geometry) 479.12 499.33 P
-0.17 (.) 528.22 499.33 P
0 9 Q
(Source:) 153 482.33 T
1 10 Q
(Unrestricted.) 207 482.33 T
0 9 Q
(Destination:) 153 465.33 T
1 10 Q
(Any visible composite object.) 207 465.33 T
0 9 Q
(Parameters:) 153 448.33 T
1 10 Q
(None.) 207 448.33 T
0 9 Q
(Return:) 153 431.33 T
1 10 Q
(A word of \337ags. The high word is a record of type) 207 431.33 T
3 F
(V) 207 418.33 T
(isCompGeoDimensionAttrs) 214.15 418.33 T
1 F
(; the low word is a record of type) 355.43 418.33 T
3 F
-0.86 (V) 207 405.33 P
-0.86 (isCompGeoAttrs) 214.15 405.33 P
1 F
-0.84 (. The high word represents the attributes set in the) 299.52 405.33 P
(object\325) 207 392.33 T
(s) 235.52 392.33 T
5 9 Q
(VCI) 242.93 392.33 T
5 10 Q
(_geoDimensionAttrs) 259.43 392.33 T
1 F
( \336eld, and the low byte represents the) 351.63 392.33 T
(attributes set in the object\325) 207 379.33 T
(s) 330.54 379.33 T
5 9 Q
(VCI) 337.95 379.33 T
5 10 Q
(_geoAttrs) 354.45 379.33 T
1 F
( \336eld.) 397.22 379.33 T
0 9 Q
(Interception:) 153 362.33 T
1 10 Q
(Unlikely) 207.5 362.33 T
(.) 246.4 362.33 T
0 14 Q
(24.3) 134.76 309.99 T
0 24 Q
(Using V) 180 309.99 T
(isCompClass) 268.92 309.99 T
1 10 Q
(W) 180 284.33 T
(ith the exception of the geometry \337ags mentioned above and the) 189.44 284.33 T
(management of children, the use of) 180 271.33 T
3 F
(V) 345.38 271.33 T
(isCompClass) 352.53 271.33 T
1 F
( is little different from) 418.83 271.33 T
(the use of) 180 258.33 T
3 F
(V) 227.41 258.33 T
(isClass) 234.56 258.33 T
1 F
(. In fact, most of the functionality designed for) 270.67 258.33 T
3 F
(V) 180 245.33 T
(isCompClass) 187.15 245.33 T
1 F
( is built directly into) 253.45 245.33 T
3 F
(V) 350.32 245.33 T
(isClass) 357.47 245.33 T
1 F
(; for example, nearly all) 393.58 245.33 T
-0.48 (geometry management and object tree management messages are de\336ned in) 180 232.33 P
3 F
(V) 180 219.33 T
(isClass) 187.15 219.33 T
1 F
(. Some reminders are listed below) 223.26 219.33 T
(, however) 378.66 219.33 T
(.) 422.18 219.33 T
-0.25 (Not all composite objects will have something to draw) 180 199.33 P
-0.25 (. Some composites will) 425.3 199.33 P
-0.71 (be used simply as grouping objects to manage visible children. In these cases,) 180 186.33 P
(you will not have to subclass) 180 173.33 T
3 F
(V) 315.03 173.33 T
(isCompClass) 322.18 173.33 T
1 F
( but can instead use the class) 388.48 173.33 T
(directly) 180 160.33 T
(.) 214.07 160.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1416" 10
%%Page: "1417" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using VisCompClass) 417.19 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1417) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.52 (Many composite objects will have something to draw) 180 641.33 P
-0.52 (, though. For example, a) 418.41 641.33 P
(composite may want to draw a box around its children or wash a different) 180 628.33 T
(background color behind them. If this is the case, the object must be a) 180 615.33 T
(subclass of) 180 602.33 T
3 F
(V) 232.6 602.33 T
(isCompClass) 239.75 602.33 T
1 F
( and must handle) 306.05 602.33 T
1 9 Q
(MSG_VIS_DRA) 389.77 602.33 T
(W) 454.94 602.33 T
1 10 Q
(.) 462.66 602.33 T
(One of the primary functions of) 180 582.33 T
3 F
(V) 327.59 582.33 T
(isCompClass) 334.74 582.33 T
1 F
( is to pass input events and) 401.04 582.33 T
(other messages down and up the tree to the proper objects. This is done) 180 569.33 T
(automatically) 180 556.33 T
(. Y) 242.61 556.33 T
(ou can, however) 254.1 556.33 T
(, change this behavior by subclassing) 327.62 556.33 T
3 F
(V) 180 543.33 T
(isCompClass) 187.15 543.33 T
1 F
( and intercepting the messages in which the object will be) 253.45 543.33 T
(interested.) 180 530.33 T
0 14 Q
(24.3.1) 123.08 488 T
0 18 Q
(Managing Geometry) 180 488 T
4 10 Q
(MSG_VIS_COMP_GET_CHILD_SPACING,) 180 464.33 T
(MSG_VIS_COMP_GET_MINIMUM_SIZE, MSG_VIS_COMP_GET_MARGINS,) 180 451.33 T
(MSG_VIS_COMP_GET_WRAP_COUNT) 180 438.33 T
1 F
-0.51 (A special feature of) 180 418.33 P
3 F
-0.53 (V) 269.63 418.33 P
-0.53 (isCompClass) 276.78 418.33 P
1 F
-0.51 (, and one that can be used in many ways,) 343.08 418.33 P
-0.46 (is its ability to automatically manage its children. By setting various \337ags in) 180 405.33 P
(the composite\325) 180 392.33 T
(s instance \336elds, you can have it control its children\325) 245.19 392.33 T
(s sizing) 486.32 392.33 T
(and position without additional code in your application.) 180 379.33 T
-0.5 (Most of the \337ags you can set in) 180 359.33 P
5 9 Q
-0.46 (VCI) 321.53 359.33 P
5 10 Q
-0.5 (_geoAttrs) 338.02 359.33 P
1 F
-0.5 ( and) 380.79 359.33 P
5 9 Q
-0.46 (VCI) 402.75 359.33 P
5 10 Q
-0.5 (_geoDimensionAttrs) 419.25 359.33 P
1 F
-0.5 ( are) 511.45 359.33 P
-0.13 (explained fully in section 24.2 on page 1408. Y) 180 346.33 P
-0.13 (ou should especially be aware) 391.81 346.33 P
(that if you do not want to use the geometry management capabilities of) 180 333.33 T
3 F
(V) 180 320.33 T
(isCompClass) 187.15 320.33 T
1 F
(, you should set) 253.45 320.33 T
1 9 Q
(VCGA_CUSTOM_MANAGE_CHILDREN) 328.09 320.33 T
1 10 Q
( in) 502.41 320.33 T
5 9 Q
(VCI) 180 307.33 T
5 10 Q
(_geoAttrs) 196.5 307.33 T
1 F
(.) 239.27 307.33 T
-0.66 (In addition to the messages provided in) 180 287.33 P
3 F
-0.68 (V) 360.38 287.33 P
-0.68 (isClass) 367.53 287.33 P
1 F
-0.66 ( for geometry management,) 403.64 287.33 P
3 F
-0.66 (V) 180 274.33 P
-0.66 (isCompClass) 187.15 274.33 P
1 F
-0.63 ( has four that return information about its current geometry) 253.45 274.33 P
-0.63 (.) 526.08 274.33 P
-0.75 (These are necessary because composites may be children of other composites,) 180 261.33 P
(and therefore they may be managed. These messages are detailed below) 180 248.33 T
(.) 512.1 248.33 T
(Most of the issues of geometry management are discussed in \322Positioning) 180 228.33 T
(V) 180 215.33 T
(isible Objects\323 on page 1338 of \322V) 186.78 215.33 T
(isClass,\323 Chapter) 340.27 215.33 T
(23.) 423.43 215.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1417" 11
%%Page: "1418" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1418) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(DWORD_CHILD_SP) 99 634.99 T
(ACING) 210.78 634.99 T
6 10 Q
(word) 99 621.33 T
4 F
(DWORD_CHILD_SPACING\050) 153 621.33 T
7 F
(val) 273 621.33 T
4 F
(\051;) 291 621.33 T
4 9 Q
(SpacingAsDWord) 153 610.99 T
7 F
(val) 234 610.99 T
4 F
(;) 250.2 610.99 T
1 10 Q
(This macro extracts the child spacing from the given) 180 593.33 T
3 F
(SpacingAsDW) 425.38 593.33 T
(ord) 497.23 593.33 T
1 F
(value. Use it with) 180 580.33 T
1 9 Q
(MSG_VIS_COMP_GET_CHILD_SP) 264.84 580.33 T
(ACING) 413.51 580.33 T
1 10 Q
(.) 444.51 580.33 T
81 563.98 531 568.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 563.98 531 568.99 R
7 X
0 0 0 1 0 0 0 K
V
50 567.98 609.01 567.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 555.98 T
0 F
(DWORD_WRAP_SP) 99 555.98 T
(ACING) 210.78 555.98 T
6 10 Q
(word) 99 542.32 T
4 F
(DWORD_WRAP_SPACING\050) 153 542.32 T
7 F
(val) 267 542.32 T
4 F
(\051;) 285 542.32 T
4 9 Q
(SpacingAsDWord) 153 531.98 T
7 F
(val) 234 531.98 T
4 F
(;) 250.2 531.98 T
1 10 Q
(This macro extracts the wrap spacing from the given) 180 514.32 T
3 F
(SpacingAsDW) 426.31 514.32 T
(ord) 498.16 514.32 T
1 F
(value. Use it with) 180 501.32 T
1 9 Q
(MSG_VIS_COMP_GET_CHILD_SP) 264.84 501.32 T
(ACING) 413.51 501.32 T
1 10 Q
(.) 444.51 501.32 T
81 484.98 531 489.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 484.98 531 489.98 R
7 X
0 0 0 1 0 0 0 K
V
50 488.98 609.01 488.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 476.98 T
0 F
(MAKE_SP) 99 476.98 T
(ACING_DWORD) 156.12 476.98 T
6 10 Q
(SpacingAsDWord) 99 463.31 T
4 F
( MAKE_SPACING_DWORD\050) 183 463.31 T
7 F
(child) 303 463.31 T
4 F
(,) 333 463.31 T
7 F
(wrap) 345 463.31 T
4 F
(\051;) 369 463.31 T
4 9 Q
(word) 153 452.98 T
7 F
(child) 189 452.98 T
4 F
(;) 216 452.98 T
(word) 153 442.98 T
7 F
(wrap) 189 442.98 T
4 F
(;) 210.6 442.98 T
1 10 Q
(This macro creates a) 180 425.31 T
3 F
(SpacingAsDW) 278.53 425.31 T
(ord) 350.38 425.31 T
1 F
( dword from the two given) 368.35 425.31 T
-0.52 (arguments. The) 180 412.31 P
5 F
-0.52 (child) 255.08 412.31 P
1 F
-0.52 ( argument is the child spacing, and the) 278.4 412.31 P
5 F
-0.52 (wrap) 457.41 412.31 P
1 F
-0.52 ( argument) 481.11 412.31 P
-0.13 (is the wrap spacing. Use this macro in your handler \050if any\051 for the message) 180 399.31 P
1 9 Q
(MSG_VIS_COMP_GET_CHILD_SP) 180 386.31 T
(ACING) 328.67 386.31 T
1 10 Q
(.) 359.67 386.31 T
81 369.97 531 374.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 369.97 531 374.98 R
7 X
0 0 0 1 0 0 0 K
V
50 373.97 609.01 373.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 361.97 T
0 F
(MSG_VIS_COMP_GET_CHILD_SP) 99 361.97 T
(ACING) 291.49 361.97 T
6 10 Q
(SpacingAsDWord) 99 348.3 T
4 F
( MSG_VIS_COMP_GET_CHILD_SPACING\050\051;) 183 348.3 T
1 F
-0.72 (This message returns the child spacing used by the composite. The high word) 180 330.3 P
-0.34 (of the return value is the spacing between lines of wrapped children; the low) 180 317.3 P
(word is the horizontal spacing between children.) 180 304.3 T
0 9 Q
(Source:) 153 287.3 T
1 10 Q
(Unrestricted.) 207 287.3 T
0 9 Q
(Destination:) 153 270.3 T
1 10 Q
(Any visible composite object\321typically sent by a composite to itself) 207 270.3 T
(during geometry calculations.) 207 257.3 T
0 9 Q
(Parameters:) 153 240.3 T
1 10 Q
(None.) 207 240.3 T
0 9 Q
(Return:) 153 223.3 T
1 10 Q
-0.76 (A dword containing the child spacing used by the composite. The dword) 207 223.3 P
-0.09 (contains two values: The child spacing\321the amount of spacing placed) 207 210.3 P
(between the composite\325) 207 197.3 T
(s children\321can be extracted from the return) 313.31 197.3 T
(value with the macro) 207 184.3 T
1 9 Q
(DWORD_CHILD_SP) 307.57 184.3 T
(ACING) 394.57 184.3 T
1 10 Q
(. The wrap) 425.57 184.3 T
(spacing\321the amount of space placed between lines of wrapped) 207 171.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1418" 12
%%Page: "1419" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using VisCompClass) 417.19 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1419) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(children\321can be extracted from the return value with the macro) 207 641.33 T
1 9 Q
(DWORD_WRAP_SP) 207 628.33 T
(ACING) 291.17 628.33 T
1 10 Q
(.) 322.16 628.33 T
0 9 Q
(Interception:) 153 611.33 T
1 10 Q
(If a composite wants special child or wrap spacing other than the) 207.5 611.33 T
-0.38 (default, it should subclass this message and return the desired values.) 207 598.33 P
(There is no need to call the superclass in the method.) 207 585.33 T
0 9 Q
(T) 153 568.33 T
(ips:) 158.34 568.33 T
1 10 Q
(In your handler) 207 568.33 T
(, you can use the macro) 279.03 568.33 T
1 9 Q
(MAKE_SP) 390.15 568.33 T
(ACING_DWORD) 434.15 568.33 T
1 10 Q
( to) 505.98 568.33 T
(form the return value from the two spacing values.) 207 555.33 T
81 538.99 531 544 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 538.99 531 544 R
7 X
0 0 0 1 0 0 0 K
V
50 542.99 609.01 542.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 530.99 T
0 F
(MSG_VIS_COMP_GET_MINIMUM_SIZE) 99 530.99 T
6 10 Q
(SizeAsDWord) 99 517.33 T
4 F
( MSG_VIS_COMP_GET_MINIMUM_SIZE\050\051;) 165 517.33 T
1 F
(This message returns the minimum size of the composite. It is used by the) 180 499.33 T
(geometry manager if the composite has) 180 486.33 T
1 9 Q
(VCGDA_HAS_MINIMUM_SIZE) 364.09 486.33 T
1 10 Q
( set.) 499.57 486.33 T
(This message does not invalidate or update the object\325) 180 473.33 T
(s geometry) 428.93 473.33 T
(.) 478.19 473.33 T
0 9 Q
(Source:) 153 456.33 T
1 10 Q
(Unrestricted.) 207 456.33 T
0 9 Q
(Destination:) 153 439.33 T
1 10 Q
(Any visible composite object\321typically sent by a composite to itself) 207 439.33 T
(during geometry calculations.) 207 426.33 T
0 9 Q
(Parameters:) 153 409.33 T
1 10 Q
(None.) 207 409.33 T
0 9 Q
(Return:) 153 392.33 T
1 10 Q
-0.44 (A dword containing the minimum size of the composite. The high word) 207 392.33 P
(is the width, and the low word is the height. Use the macros) 207 379.33 T
1 9 Q
-0.22 (DWORD_WIDTH) 207 366.33 P
1 10 Q
-0.25 ( and) 280.83 366.33 P
1 9 Q
-0.22 (DWORD_HEIGHT) 303.3 366.33 P
1 10 Q
-0.25 ( to extract the individual values) 382.29 366.33 P
(from the) 207 353.33 T
3 F
(SizeAsDW) 249.22 353.33 T
(ord) 300.88 353.33 T
1 F
( structure.) 318.85 353.33 T
0 9 Q
(Interception:) 153 336.33 T
1 10 Q
(Any composite that wants a minimum size should subclass this) 207.5 336.33 T
(message and return its desired size. There is no need to call the) 207 323.33 T
(superclass in your handler) 207 310.33 T
(.) 329.22 310.33 T
0 9 Q
(T) 153 293.33 T
(ips:) 158.34 293.33 T
1 10 Q
(In your handler) 207 293.33 T
(, use the macro) 279.03 293.33 T
1 9 Q
(MAKE_SIZE_DWORD) 352 293.33 T
1 10 Q
( to create the) 447.16 293.33 T
3 F
-0.91 (SizeAsDW) 207 280.33 P
-0.91 (ord) 258.66 280.33 P
1 F
-0.88 ( return value from the width and height. This macro has) 276.63 280.33 P
(the same format as) 207 267.33 T
1 9 Q
(MAKE_SP) 298.5 267.33 T
(ACING_DWORD) 342.5 267.33 T
1 10 Q
(.) 414.33 267.33 T
81 250.98 531 255.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 250.98 531 255.99 R
7 X
0 0 0 1 0 0 0 K
V
50 254.98 609.01 254.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 242.98 T
0 F
(MSG_VIS_COMP_GET_MARGINS) 99 242.98 T
6 10 Q
(void) 99 229.32 T
4 F
(MSG_VIS_COMP_GET_MARGINS\050) 153 229.32 T
4 9 Q
(Rectangle *retValue\051;) 153 218.98 T
1 10 Q
(This message returns the margins the composite should use when) 180 201.32 T
-0.55 (recalculating its child spacing. If you want a special left, top, right, or bottom) 180 188.32 P
(margin around the composite\325) 180 175.32 T
(s children, intercept this message and return) 317.23 175.32 T
(the margin\050s\051 in the appropriate \336eld\050s\051 of the) 180 162.32 T
3 F
(Rectangle) 395.19 162.32 T
1 F
( structure.) 447.23 162.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1419" 13
%%Page: "1420" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1420) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
(Source:) 153 641.33 T
1 10 Q
(Unrestricted.) 207 641.33 T
0 9 Q
(Destination:) 153 624.33 T
1 10 Q
(Any visible composite object\321typically sent by a composite to itself) 207 624.33 T
(during geometry calculations.) 207 611.33 T
0 9 Q
(Parameters:) 153 594.33 T
5 10 Q
(retV) 207 594.33 T
(alue) 225.15 594.33 T
1 F
(A pointer to an empty) 297 594.33 T
3 F
(Rectangle) 400.9 594.33 T
1 F
( structure that) 452.94 594.33 T
(will be \336lled with the composite\325) 297 581.33 T
(s desired margins.) 445.18 581.33 T
0 9 Q
(Return:) 153 564.33 T
1 10 Q
(The pointer to the \336lled Rectangle structure is preserved. The) 207 564.33 T
-0.27 (structure contains the four margins desired by the object outside of its) 207 551.33 P
(bounds \050e.g. if) 207 538.33 T
5 F
(retV) 274.23 538.33 T
(alue->R_top) 292.38 538.33 T
1 F
( is 100 upon return, the composite is) 348.06 538.33 T
(requesting 100 points of extra \322margin\323 spacing below its top bound) 207 525.33 T
(before its children are placed\051.) 207 512.33 T
0 9 Q
(Interception:) 153 495.33 T
1 10 Q
(Any composite that wants extra margin space added to its bounds) 207.5 495.33 T
-0.03 (when geometry is calculated should subclass this message and return) 207 482.33 P
(its desired margins. There is no need to call the superclass in your) 207 469.33 T
(handler) 207 456.33 T
(.) 242.37 456.33 T
81 439.99 531 445 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 439.99 531 445 R
7 X
0 0 0 1 0 0 0 K
V
50 443.99 609.01 443.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 431.99 T
0 F
(MSG_VIS_COMP_GET_WRAP_COUNT) 99 431.99 T
6 10 Q
(word) 99 418.33 T
4 F
(MSG_VIS_COMP_GET_WRAP_COUNT\050\051;) 153 418.33 T
1 F
-0.18 (This message returns the number of children to be counted before wrapping) 180 400.33 P
(if the composite has) 180 387.33 T
1 9 Q
(VCGA_WRAP_AFTER_CHILD_COUNT) 274.64 387.33 T
1 10 Q
( set.) 443.3 387.33 T
0 9 Q
(Source:) 153 370.33 T
1 10 Q
(Unrestricted.) 207 370.33 T
0 9 Q
(Destination:) 153 353.33 T
1 10 Q
(Any visible composite object\321typically sent by a composite to itself) 207 353.33 T
(during geometry calculations.) 207 340.33 T
0 9 Q
(Parameters:) 153 323.33 T
1 10 Q
(None.) 207 323.33 T
0 9 Q
(Return:) 153 306.33 T
1 10 Q
-0.8 (The number of children that will be allowed before the composite wraps) 207 306.33 P
(additional children to a new line.) 207 293.33 T
0 9 Q
(Interception:) 153 276.33 T
1 10 Q
(Any composite that wants to wrap after a certain number of children) 207.5 276.33 T
(should subclass this message and return the proper number of) 207 263.33 T
(children. There is no need to call the superclass in your handler.) 207 250.33 T
0 14 Q
(24.3.2) 123.08 207.99 T
0 18 Q
(Managing Graphic W) 180 207.99 T
(indows) 358.87 207.99 T
1 10 Q
-0.66 (It is very rare that a visible object will want to create its own window without) 180 184.33 P
-0.1 (using a generic object. This practice is highly discouraged as well because it) 180 171.33 P
-0.83 (will almost certainly violate some principles of most speci\336c) 180 158.33 P
1 9 Q
-0.75 (UI) 451.47 158.33 P
1 10 Q
-0.83 ( speci\336cations.) 462.47 158.33 P
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1420" 14
%%Page: "1421" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Using VisCompClass) 417.19 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1421) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(24.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Y) 180 641.33 T
(ou can, however) 185.93 641.33 T
(, set up a visible object to have its own window with the) 259.45 641.33 T
(following steps:) 180 628.33 T
3 F
(1) 180 608.33 T
1 F
(Set up the V) 198 608.33 T
(isComp object as a window group.) 255.16 608.33 T
(Either instantiate a new V) 198 596.33 T
(isComp object or set it up and load it in,) 321.1 596.33 T
-0.33 (off-screen. Then set the \337ags) 198 584.33 P
1 9 Q
-0.29 (VTF_IS_WINDOW) 331.73 584.33 P
1 10 Q
-0.33 ( and) 411.23 584.33 P
1 9 Q
-0.29 (VTF_IS_WIN_GROUP) 433.54 584.33 P
1 10 Q
(in the composite to make it a window and the top of the visible tree.) 198 572.33 T
3 F
(2) 180 553.33 T
1 F
(Add visible children to the window object.) 198 553.33 T
(Using) 198 541.33 T
1 9 Q
(MSG_VIS_ADD_CHILD) 228.19 541.33 T
1 10 Q
(, add any visible object children to the) 329.85 541.33 T
(window group as you need. If some of the children had possibly been) 198 529.33 T
(removed from the visible tree earlier) 198 517.33 T
(, you may have to mark them) 366.34 517.33 T
(invalid.) 198 505.33 T
3 F
(3) 180 486.33 T
1 F
(Add your window to the \336eld window) 198 486.33 T
(.) 368.39 486.33 T
(Determine the handle of the parent window you need, then set your) 198 474.33 T
(window group object as a child of the parent.) 198 462.33 T
3 F
(4) 180 443.33 T
1 F
(Set the top object in your window group visible.) 198 443.33 T
(Set) 198 431.33 T
1 9 Q
(V) 215.97 431.33 T
(A_VISIBLE) 221.47 431.33 T
1 10 Q
( using) 270.96 431.33 T
1 9 Q
(MSG_VIS_SET_A) 301.89 431.33 T
(TTR) 376.56 431.33 T
1 10 Q
( to mark the window group) 395.07 431.33 T
(visible. The window will be opened, and it will receive a) 198 419.33 T
1 9 Q
-0.31 (MSG_MET) 198 407.33 P
-0.31 (A_EXPOSED) 244.17 407.33 P
1 10 Q
-0.35 ( indicating that it and all its children should draw) 300.18 407.33 P
(themselves.) 198 395.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1421" 15
%%Page: "1422" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(VisComp) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1422) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(24.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1422" 16
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 16
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Bold
%%+ Courier
%%+ NewCenturySchlbk-Italic
%%+ Courier-Bold
%%+ Courier-Oblique
%%EOF
