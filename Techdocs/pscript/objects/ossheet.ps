%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 19 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /NewCenturySchlbk-Roman FMFONTDEFINE
2 1 /ZapfDingbats FMFONTDEFINE
3 0 /NewCenturySchlbk-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /NewCenturySchlbk-Italic FMFONTDEFINE
6 0 /Courier-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1209" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Overview) 407.82 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1209) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 X
(The spreadsheet objects provide most of the functionality that any) 180 610.3 T
(spreadsheet will need. They let the user enter information in cells without) 180 597.3 T
-0.45 (direct involvement by the application. They also manage all interaction with) 180 584.3 P
(the Parse library) 180 571.3 T
(. The application can then ignore these issues, or it can) 257.42 571.3 T
(intervene to add functionality) 180 558.3 T
(.) 316.49 558.3 T
(Before you read this chapter) 180 538.3 T
(, you should be familiar with the database) 310.55 538.3 T
(routines \050see \322Database Library) 180 525.3 T
(,\323 Chapter) 326.14 525.3 T
(19 of the Concepts Book\051. In) 376.33 525.3 T
(particular) 180 512.3 T
(, you should be familiar with the section on the cell library) 225.74 512.3 T
(. Y) 494.67 512.3 T
(ou) 506.16 512.3 T
(should also have read the \336rst few sections of the Parse Library chapter) 180 499.3 T
(\050\322Parse Library) 180 486.3 T
(,\323 Chapter) 250.38 486.3 T
(20 of the Concepts Book\051; you need not read the) 300.57 486.3 T
(\322Advanced Usage\323 section. Y) 180 473.3 T
(ou should also be familiar with Ruler objects) 310.94 473.3 T
(\050\322Ruler Object Library) 180 460.3 T
(,\323 Chapter) 282.41 460.3 T
(19\051 and V) 332.6 460.3 T
(isComp objects \050\322V) 376.8 460.3 T
(isComp,\323) 462.47 460.3 T
(Chapter) 180 447.3 T
(24\051.) 220.74 447.3 T
0 14 Q
(20.1) 134.76 394.97 T
0 24 Q
(Spreadsheet Overview) 180 394.97 T
1 10 Q
(The spreadsheet library provides a high-level interface with the Cell and) 180 369.3 T
-0.1 (Parse libraries. It also provides all the user interface for a spreadsheet. The) 180 356.3 P
(objects are subclassed from common V) 180 343.3 T
(is objects and inherit much of their) 356.6 343.3 T
-0.18 (functionality from them; this means that applications can alter spreadsheet) 180 330.3 P
(objects in a very intuitive way) 180 317.3 T
(. Applications can also use the spreadsheet) 317.8 317.3 T
-0.83 (objects in \322engine\323 mode. When the Spreadsheet is in engine mode, it does not) 180 304.3 P
-0.05 (provide any user interface, but it still provides a convenient interface to the) 180 291.3 P
(Cell and Parse libraries.) 180 278.3 T
-0.87 (There are three main spreadsheet objects; most spreadsheet applications will) 180 258.3 P
-0.67 (use all three. Applications which use the spreadsheet in engine mode will not) 180 245.3 P
(need to use all of the objects. There are also several controllers which work) 180 232.3 T
(with the spreadsheet objects. Most spreadsheet applications will end up) 180 219.3 T
(including all of these.) 180 206.3 T
81 144 531 648 C
235.51 643.97 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.97 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
81 144 531 648 C
36 72 576 720 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1209" 1
%%Page: "1210" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1210) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.1.1) 123.08 636 T
0 18 Q
(Quick Look at the Objects) 180 636 T
1 10 Q
(Three different classes of objects are provided for use with the spreadsheet.) 180 612.33 T
(Most spreadsheet applications will use all three of these. T) 180 599.33 T
(o see how the) 450.6 599.33 T
(objects are arranged, see Figure) 180 586.33 T
(20-) 330.75 586.33 T
(1 on page) 345.2 586.33 T
2 F
(u) 391.88 586.33 T
1 F
(1226) 402.54 586.33 T
3 F
(SpreadsheetClass) 180 566.33 T
1 F
(This is the main spreadsheet object, a subclass of) 243 554.33 T
3 F
-0.01 (V) 243 542.33 P
-0.01 (isCompClass) 250.15 542.33 P
1 F
-0.01 (. The spreadsheet object manages a cell \336le; it) 316.45 542.33 P
-0.15 (automatically looks up values for cells and displays them, and) 243 530.33 P
-0.13 (copies new data into the cell \336le. This object does the bulk of a) 243 518.33 P
(spreadsheet application\325) 243 506.33 T
(s work. Every open spreadsheet will) 354.68 506.33 T
(have its own Spreadsheet object; applications usually use the) 243 494.33 T
(Document Control to duplicate this object automatically for) 243 482.33 T
(every open \336le. All references in the text to the \322Spreadsheet) 243 470.33 T
(Object\323 are to this object.) 243 458.33 T
3 F
(SpreadSheetRuler) 180 439.33 T
1 F
-0.65 (This is a subclass of) 243 427.33 P
3 F
-0.67 ( V) 332.46 427.33 P
-0.67 (isRulerClass) 341.81 427.33 P
1 F
-0.65 (. It is usually placed just to) 407.37 427.33 P
-0.57 (the left of the Spreadsheet object. It usually contains the labels) 243 415.33 P
-0.17 (for the cell rows; however) 243 403.33 P
-0.17 (, it can be set to show measurements) 359.54 403.33 P
-0.37 (in any of the standard forms \050inches, centimeters, points, etc.\051.) 243 391.33 P
(Like all rulers, it is usually displayed in a RulerV) 243 379.33 T
(iew and is) 471.68 379.33 T
(usually the V) 243 367.33 T
(is child of a RulerContent. It is linked to the) 304.42 367.33 T
(Spreadsheet object, and thus it can automatically show) 243 355.33 T
(information about the active area of the spreadsheet. Most) 243 343.33 T
(applications will have two rulers, one horizontal and one) 243 331.33 T
-0.42 (vertical \050determined by settings of the) 243 319.33 P
1 9 Q
-0.37 (VRA_HORIZONT) 419.4 319.33 P
-0.37 (AL) 493.4 319.33 P
1 10 Q
-0.42 ( \337ag\051) 505.9 319.33 P
(One ruler will receive messages from the Spreadsheet; the) 243 307.33 T
-0.62 (other ruler will be its slave. For more information about rulers,) 243 295.33 P
(see \322Ruler Object Library) 243 283.33 T
(,\323 Chapter) 359.49 283.33 T
(19.) 409.68 283.33 T
3 F
(SSEditBarControlClass) 180 264.33 T
1 F
(This is a subclass of) 243 252.33 T
3 F
(GenControlClass) 337.84 252.33 T
1 F
(. The controller) 425.99 252.33 T
(displays the value or formula for the active cell. The user can) 243 240.33 T
-0.08 (use this controller to change the value in a cell. The controller) 243 228.33 P
-0.77 (is usually made a child of the Edit menu, if there is one. As with) 243 216.33 P
(all controllers, the user can put this controller wherever he) 243 204.33 T
-0.24 (prefers; it is usually put at the top of the primary window) 243 192.33 P
-0.24 (, just) 505.55 192.33 P
(below the menu bar) 243 180.33 T
(.) 333.76 180.33 T
3 F
(Other Controllers) 180 161.33 T
1 F
(The Spreadsheet library provides other controllers which do) 243 149.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1210" 2
%%Page: "1211" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Overview) 407.82 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1211) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.1) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.85 (such things as add notes to cells, change row and column width,) 243 641.33 P
(and sort rows or columns. Applications which include these) 243 629.33 T
(objects will not have to perform these tasks directly) 243 617.33 T
(.) 480.06 617.33 T
0 14 Q
(20.1.2) 123.08 576 T
0 18 Q
(Managing Cell Files) 180 576 T
1 10 Q
(As explained in \322Database Library) 180 552.33 T
(,\323 Chapter) 338.56 552.33 T
(19 of the Concepts Book, cell) 388.75 552.33 T
-0.39 (\336les are ways of accessing) 180 539.33 P
1 9 Q
-0.35 (DB) 300.84 539.33 P
1 10 Q
-0.39 ( items in a) 314.34 539.33 P
1 9 Q
-0.35 (VM) 364.28 539.33 P
1 10 Q
-0.39 ( \336le. Ordinarily) 379.28 539.33 P
-0.39 (, every) 448.88 539.33 P
1 9 Q
-0.35 (DB) 481.62 539.33 P
1 10 Q
-0.39 ( item is) 495.12 539.33 P
(accessed via two tokens: the) 180 526.33 T
1 9 Q
(VM) 312.43 526.33 T
1 10 Q
( handle of the item\325) 327.42 526.33 T
(s) 416.14 526.33 T
1 9 Q
(DB) 423.55 526.33 T
1 10 Q
( group, and the) 437.05 526.33 T
1 9 Q
(DB) 510.02 526.33 T
1 10 Q
-0.63 (handle of the item. When items are arranged in a cell \336le, the application can) 180 513.33 P
(access the items by a row and column address. In order to do this, the) 180 500.33 T
(application must do some bookkeeping; for example, the application has to) 180 487.33 T
(keep track of a) 180 474.33 T
3 F
(CellFunctionParameters) 250.94 474.33 T
1 F
( structure. If you use the) 379.46 474.33 T
(spreadsheet objects, you can avoid this bookkeeping.) 180 461.33 T
-0.31 (When you create a new spreadsheet \336le, the Spreadsheet object will allocate) 180 441.33 P
-0.41 (a \322spreadsheet map\323 block in the \336le. \050This is different from the ordinary) 180 428.33 P
1 9 Q
-0.37 (VM) 513.63 428.33 P
1 10 Q
-0.2 (map block; a \336le can have both a map block and a \322spreadsheet map\323 block.\051) 180 415.33 P
-0.39 (The spreadsheet objects will record essential bookkeeping information \050such) 180 402.33 P
(as the) 180 389.33 T
3 F
(CellFunctionParameters) 210.75 389.33 T
1 F
( structure\051 in this block. While it is) 339.27 389.33 T
(running, it will cache the information in its own instance data; however) 180 376.33 T
(,) 510.41 376.33 T
(whenever the \336le is saved or updated, it will write the cache back to this) 180 363.33 T
(block. The application should treat this block as entirely opaque.) 180 350.33 T
(When the spreadsheet object attaches a new \336le, it must be passed the) 180 330.33 T
-0.01 (handle of the spreadsheet map block. It can then read all the information it) 180 317.33 P
(needs about the \336le. The spreadsheet will automatically allocate cells when) 180 304.33 T
-0.72 (needed, and free them when appropriate. Note that since cells are ungrouped) 180 291.33 P
1 9 Q
(DB) 180 278.33 T
1 10 Q
( items, whenever a cell is allocated or resized, potentially any or all) 193.5 278.33 T
(ungrouped items in that) 180 265.33 T
1 9 Q
(VM) 295.01 265.33 T
1 10 Q
( \336le could be moved. For this reason, if you use) 310 265.33 T
(ungrouped items, you should not leave them locked; it\325) 180 252.33 T
(s probably safest not) 431.14 252.33 T
(to use ungrouped items at all, if you can avoid them. \050See section 19.2.4 of) 180 239.33 T
(\322Database Library) 180 226.33 T
(,\323 Chapter) 264.29 226.33 T
(19 of the Concepts Book.\051) 314.48 226.33 T
(Every cell in a spreadsheet can contain one of three possible values: a) 180 206.33 T
-0.64 (number) 180 193.33 P
-0.64 (, a text string, or a token string. The application may set a cell\325) 215.37 193.33 P
-0.64 (s value) 496.9 193.33 P
(with a message, or the user may set the selected cell\325) 180 180.33 T
(s value with the) 423.37 180.33 T
(SSEditBarControl. If the user entered a number in any acceptable format,) 180 167.33 T
(the spreadsheet will set the cell\325) 180 154.33 T
(s value to equal that number) 327.8 154.33 T
(. If the user) 460.61 154.33 T
81 215.67 171 336.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 9 Q
0 X
0 0 0 1 0 0 0 K
(W) 81 283.45 T
(arning) 89.16 283.45 T
1 F
(Y) 81 267.45 T
(ou should not keep) 86.34 267.45 T
(ungrouped DB items) 81 256.45 T
(locked.) 81 245.45 T
1 X
90 450 13.5 13.5 101.25 312.33 G
4 H
0 Z
90 450 13.5 13.5 101.25 312.33 A
0 0 0 1 0 0 0 K
81 292.21 121.5 332.71 R
1 H
0 X
N
0 0 0 0 1 1 1 K
0 36 Q
7 X
0 0 0 0 1 1 1 K
(!) 95.26 300.27 T
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1211" 3
%%Page: "1212" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1212) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.1) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(entered a character sequence which begins with an equals sign, the) 180 641.33 T
(spreadsheet will call the parser to parse all the characters after the equals) 180 628.33 T
-0.15 (sign. If the sequence is a well-formed expression, the token sequence will be) 180 615.33 P
(stored in the cell; otherwise an error will be displayed. If the user enters a) 180 602.33 T
(character sequence which is not a well-formed number and does not begin) 180 589.33 T
(with an equal sign, the spreadsheet object will interpret it as a string, and) 180 576.33 T
(copy the string verbatim to the cell.) 180 563.33 T
(In addition, every cell can have a note associated with it. The note may be) 180 543.33 T
-0.8 (any null-terminated string. The note does not affect how the cell is evaluated.) 180 530.33 P
(Users will generally add and view the notes with the SSNoteControl object.) 180 517.33 T
(Whenever the Spreadsheet changes any data in the \336le, it marks the) 180 497.33 T
-0.5 (appropriate block as dirty) 180 484.33 P
-0.5 (. If you use the Document Control objects, they will) 296.86 484.33 P
-0.31 (automatically take appropriate actions \050such as enabling the \322Save\323 trigger\051.) 180 471.33 P
0 14 Q
(20.1.3) 123.08 429 T
0 18 Q
(Parsing Expressions) 180 429 T
1 10 Q
(The Spreadsheet object automatically calls the appropriate Parse Library) 180 405.33 T
(routines to parse formula strings, as well as to evaluate and format token) 180 392.33 T
(strings. It performs all necessary interaction with the Parse library; for) 180 379.33 T
(example, when the Evaluator needs to know the current value of a cell, the) 180 366.33 T
(Spreadsheet \336nd\325) 180 353.33 T
(s the cell\325) 259.82 353.33 T
(s contents, performs any evaluations necessary) 302.42 353.33 T
(,) 518.91 353.33 T
(and returns the data to the Evaluator) 180 340.33 T
(.) 353.91 340.33 T
(When the user enters a formula into a cell \050i.e. a character sequence which) 180 320.33 T
(begins with an equals sign\051, the spreadsheet automatically calls the Parse) 180 307.33 T
(library routine to transform the character sequence into the corresponding) 180 294.33 T
(token sequence. It stores the token sequence in the cell. It then calls the) 180 281.33 T
(evaluator to simplify the token sequence. Finally) 180 268.33 T
(, it calls the formatter to) 404.67 268.33 T
(transform the simpli\336ed token sequence into a character string, and it) 180 255.33 T
(displays this string in the spreadsheet display area. If the formula is) 180 242.33 T
-0.45 (well-formed, but cannot be evaluated \050e.g. because it depends on a cell which) 180 229.33 P
-0.48 (has a bad value\051, it will display an appropriate error message in the cell. The) 180 216.33 P
(formula is reevaluated whenever a the value of a cell or variable in the) 180 203.33 T
(formula changes.) 180 190.33 T
-0.3 (If the user wants to see or edit the actual formula, he can select the cell. The) 180 170.33 P
-0.82 (spreadsheet will call the formatter to transform the formula\325) 180 157.33 P
-0.82 (s token sequence) 452.71 157.33 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1212" 4
%%Page: "1213" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Spreadsheet Objects) 389.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1213) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(back into a character string, which will be displayed in the edit bar) 180 641.33 T
(, where) 489.13 641.33 T
-0.8 (the user can edit it. When the user is done editing, the new formula will again) 180 628.33 P
(be parsed, and the new token sequence will be entered in the cell.) 180 615.33 T
(The Spreadsheet detects circular references; it can be instructed to break) 180 595.33 T
-0.46 (circular references, or to evaluate a set number of times through the circle to) 180 582.33 P
(approximate the \322true\323 value \050i.e. the value if the circuit were followed an) 180 569.33 T
(in\336nite number of times\051. Of course, this iteration is only useful if the cells\325) 180 556.33 T
(values converge.) 180 543.33 T
0 14 Q
(20.2) 134.76 491 T
0 24 Q
(The Spreadsheet Objects) 180 491 T
1 10 Q
(There are four basic objects in the Spreadsheet library) 180 465.33 T
(. These objects are) 430.39 465.33 T
-0.75 (fairly simple to use. Most of the functionality is in the Spreadsheet object; the) 180 452.33 P
(other objects are straightforward modi\336cations of classes which are) 180 439.33 T
(documented elsewhere.) 180 426.33 T
0 14 Q
(20.2.1) 123.08 384 T
0 18 Q
(SpreadsheetClass) 180 384 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
-0.16 (The spreadsheet object is the basis of the spreadsheet library) 180 353.33 P
-0.16 (. It does all the) 459.92 353.33 P
(interaction with the cell and parse libraries. The spreadsheet has a lot of) 180 340.33 T
-0.61 (instance data \336elds. Some of them are of interest to the application; some are) 180 327.33 P
(initialized by the application, and ignored thereafter; and some are of) 180 314.33 T
(interest only to the spreadsheet object\325) 180 301.33 T
(s internal code. The instance data is) 357.79 301.33 T
(shown in Code Display) 180 288.33 T
(20-) 288.35 288.33 T
(1. Those \336elds which are of interest to the) 302.8 288.33 T
(application are described in detail in the following sections.) 180 275.33 T
-0.44 (The spreadsheet object is a subclass of) 180 255.33 P
3 F
-0.45 (V) 357.14 255.33 P
-0.45 (isCompClass) 364.29 255.33 P
1 F
-0.44 (. If the spreadsheet is) 430.59 255.33 P
-0.55 (not being used in \322engine\323 mode, it should be linked to a GenV) 180 242.33 P
-0.55 (iew object, just) 461.16 242.33 P
(like any other V) 180 229.33 T
(isComp object would be. For more information, \322V) 253.83 229.33 T
(isComp,\323) 483.41 229.33 T
(Chapter) 180 216.33 T
(24.) 220.74 216.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1213" 5
%%Page: "1214" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1214) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 635.98 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 635.98 531 648 R
7 X
0 0 0 1 0 0 0 K
V
76.5 643.23 617.5 646.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 629.31 T
(20-) 147.13 629.31 T
(1 SpreadsheetClass Instance Data) 161.58 629.31 T
4 9 Q
(/* This is the instance data for the SpreadsheetClass object. Some of these fields) 81 614.98 T
( * must be initialized by the application; some are set and maintained entirely by) 81 603.98 T
( * the object. */) 81 592.98 T
(/* The first field of the spreadsheet object is always the CellFunctionParameters) 81 574.98 T
( * structure for the cell file. Therefore, a pointer to the instance data of a) 81 563.98 T
( * Spreadsheet object can be used as a pointer to the CellFunctionParameters. */) 81 552.98 T
(@instance CellFunctionParameters) 102.6 541.98 T
(SSI_cellParams= {0, 0, {0}};) 301 541.98 T
(/* SSI_maxRow and SSI_maxCol store the indices of the leftmost row and bottommost) 81 523.98 T
( * column allowed in the spreadsheet. The application may set these; they must be) 81 512.98 T
( * no larger than the spreadsheet library constants MAX_ROW \0508191\051 and MAX_COLUMN) 81 501.98 T
( * \050255\051. */) 81 490.98 T
(@instance word) 102.6 479.98 T
(SSI_maxRow = MAX_ROW;) 212.5 479.98 T
(@instance word) 102.6 468.98 T
(SSI_maxColumn = MAX_COLUMN;) 212.5 468.98 T
(/* SSI_mapBlock is the VM handle of the attached file\325s spreadsheet map block. The) 81 450.98 T
( * spreadsheet sets this when a spreadsheet file is initialized; applications must) 81 439.98 T
( * provide this when they instruct a spreadsheet object to open a file. */) 81 428.98 T
(@instance VMBlockHandle) 102.6 417.98 T
(SSI_mapBlock;) 232.2 417.98 T
(/* SSI_flags is a word-length record of SpreadsheetFlags. Some of these flags are) 81 399.98 T
( * set by the application; others are set automatically by the spreadsheet object.) 81 388.98 T
( * The application can change some of these at run-time. The SpreadsheetFlags are) 81 377.98 T
( * described at length in section 20.2.1.4 on page 1218. The following flags are) 81 366.98 T
( * available:) 81 355.98 T
( *) 81 344.98 T
(SF_MANUAL_RECALC) 168.98 344.98 T
(SF_ALLOW_ITERATION) 344 344.98 T
( *) 81 333.98 T
(SF_SUPPRESS_REDRAW) 168.98 333.98 T
(SF_APPLICATION_FUNCTIONS) 344 333.98 T
( *) 81 322.98 T
(SF_QUICK_DRAW_IN_PROGRESS) 168.98 322.98 T
(SF_DOING_FEEDBACK) 344 322.98 T
( *) 81 311.98 T
(SF_IN_VIEW) 168.98 311.98 T
(SF_IS_TARGET) 344 311.98 T
( *) 81 300.98 T
(SF_IS_FOCUS */) 168.98 300.98 T
(@instance SpreadsheetFlags) 102.6 289.98 T
(SSI_flags = 0;) 256.5 289.98 T
(/* SSI_drawFlags is a word-sized record of SpreadsheetDrawFlags. These flags) 81 271.98 T
( * specify how the spreadsheet will draw itself on-screen. The application can) 81 260.98 T
( * change some of these at run-time. The SpreadsheetDrawFlags are described at) 81 249.98 T
( * length in section 20.2.1.5 on page 1221. The following flags are available:) 81 238.98 T
( *) 81 227.98 T
(SDF_DRAW_GRAPHICS) 168.98 227.98 T
(SDF_DRAW_NOTE_BUTTON) 301 227.98 T
( *) 81 216.98 T
(SDF_DRAW_GRID) 168.98 216.98 T
(SDF_SIDEWAYS) 301 216.98 T
( *) 81 205.98 T
(SDF_SCALE_TO_FIT) 168.98 205.98 T
(SDF_DRAW_ROW_COLUMN_TITLES) 301 205.98 T
( *) 81 194.98 T
(SDF_SKIP_DRAW) 168.98 194.98 T
(SDF_CENTER_VERTICALLY) 301 194.98 T
( *) 81 183.98 T
(SDF_CENTER_HORIZONTALLY) 168.98 183.98 T
(SDF_CONTINUOUS) 301 183.98 T
( *) 81 172.98 T
(SDF_DRAW_HEADER) 168.98 172.98 T
(SDF_DRAW_FOOTER) 301 172.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1214" 6
%%Page: "1215" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Spreadsheet Objects) 389.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1215) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
( *) 81 642 T
(SDF_PRINT_DOCUMENT) 168.98 642 T
(SDF_PRINT_NOTES) 301 642 T
( *) 81 631 T
(SDF_DONE) 168.98 631 T
( */) 81 620 T
(@instance SpreadsheetDrawFlags) 102.6 609 T
(SSI_drawFlags = 0;) 264.6 609 T
(/* SSI_attributes is a byte-sized record of SpreadsheetAttributes flags. The flags) 81 591 T
( * are discussed at length in section 20.2.1.6 on page 1224. The following flags) 81 580 T
( * are available:) 81 569 T
( *) 81 558 T
(SA_TARGETABLE) 168.98 558 T
(SA_ENGINE_MODE */) 301 558 T
(@instance SpreadsheetAttributes) 102.6 547 T
(SSI_attributes = 0;) 301 547 T
(/* SSI_circCount specifies how many times the Spreadsheet should follow circular) 81 529 T
( * references to approximate the cells\325 values. This is ignored if the) 81 518 T
( * SF_ALLOW_ITERATION bit is not set. If the count is set to zero, circular) 81 507 T
( * references will be flagged as errors. */) 81 496 T
(@instance word) 102.6 485 T
(SSI_circCount = 0;) 212.5 485 T
(/* SSI_converge specifies how close an approximation we want with circular) 81 467 T
( * references. If each of the cells in a circular reference changes its value by) 81 456 T
( * less than the SSI_converge value, the spreadsheet will stop following the loop.) 81 445 T
( * If the converge value is left at zero, the spreadsheet will make the full) 81 434 T
( * SSI_circCount circuits. */) 81 423 T
(@instance FloatNum) 102.6 412 T
(SSI_converge = {0, 0, 0, 0, 0};) 212.5 412 T
(/* SSI_ruler must be set by the application when the objects are defined. This) 81 394 T
( * field holds an optr to one of the two SpreadsheetRuler objects; the other ruler) 81 383 T
( * should be a slave of this ruler. */) 81 372 T
(@instance optr) 102.6 361 T
(SSI_ruler;) 212.5 361 T
(/* The following instance data fields are for internal use by the spreadsheet.) 81 343 T
( * Applications should never set or change these fields, and should not count on) 81 332 T
( * values in these fields being consistent at any given time.*/) 81 321 T
(/* SSI_active contains a reference to the active cell. This field is automatically) 81 303 T
( * set and maintained by the spreadsheet object. */) 81 292 T
(@instance CellReference) 102.6 281 T
(SSI_active;) 256.5 281 T
(/* SSI_header and SSI_footer specify \322header\323 and \322footer\323 ranges of cells. These) 81 263 T
( * cells will automatically be printed at the top and bottom of each page \050when) 81 252 T
( * the spreadsheet is printed\051. Users will generally set these with the Header and) 81 241 T
( * Footer controllers. */) 81 230 T
(@instance CellRange) 102.6 219 T
(SSI_header = {0, 0, 0, 0};) 212.5 219 T
(@instance CellRange) 102.6 208 T
(SSI_footer = {0, 0, 0, 0};) 212.5 208 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1215" 7
%%Page: "1216" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1216) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* The spreadsheet object caches the CellFunctionParameters structure in its own) 81 642 T
( * instance data, and writes it to the spreadsheet map block whenever the file is) 81 631 T
( * saved or updated. The spreadsheet object initializes and updates this field) 81 620 T
( * automatically. */) 81 609 T
(@instance CellFunctionParameters) 102.6 598 T
(SSI_cellParams = {0, 0, {0}};) 280.8 598 T
(/*) 81 580 T
( * The following fields are intended to be entirely transparent to the) 81 569 T
( * application. Applications should not examine, set, or change these fields.) 81 558 T
( */) 81 547 T
(/* SSI_chunk is the chunk handle of the spreadsheet object. This is set and) 81 529 T
( * maintained by the object. */) 81 518 T
(@instance ChunkHandle) 102.6 507 T
(SSI_chunk = NullHandle;) 221.4 507 T
(/* SSI_styleArray, SSI_nameArray, SSI_formatArray, and SSI_nameArray store the) 81 489 T
( * handles of VM blocks within the spreadsheet file. These blocks contain) 81 478 T
( * information about the file. The handles are also stored in the spreadsheet map) 81 467 T
( * block. The spreadsheet object sets and maintains these fields automatically. */) 81 456 T
(@instance VMBlockHandle) 102.6 445 T
(SSI_styleArray;) 232.2 445 T
(@instance VMBlockHandle) 102.6 434 T
(SSI_rowArray;) 232.2 434 T
(@instance VMBlockHandle) 102.6 423 T
(SSI_formatArray;) 232.2 423 T
(@instance VMBlockHandle) 102.6 412 T
(SSI_nameArray;) 232.2 412 T
(/* SSI_offset is the offset to the visible portion of the spreadsheet. This field) 81 394 T
( * is maintained automatically by the spreadsheet object. */) 81 383 T
(@instance PointDWord) 102.6 372 T
(SSI_offset;) 216 372 T
(/* SSI_offset stores the row and column indices of the currently visible portion) 81 354 T
( * of the spreadsheet. This field is maintained automatically by the spreadsheet) 81 343 T
( * object. */) 81 332 T
(@instance CellRange) 102.6 321 T
(SSI_visible;) 212.5 321 T
(/* SSI_quickSource is used for bookkeeping during a quick move/copy. During the) 81 303 T
( * move, the row/column indices of the source area are stored here. */) 81 292 T
(@instance CellRange) 102.6 281 T
(SSI_quickSource;) 212.5 281 T
(/* SSI_selected contains the row/column indices of the currently selected region.) 81 263 T
( * This field is automatically set and maintained by the spreadsheet object. */) 81 252 T
(@instance CellRange) 102.6 241 T
(SSI_selected;) 210.6 241 T
(/* SSI_curAttrs contains the token for the current style attributes. All text) 81 223 T
( * entered will have this style. This field is automatically set and maintained by) 81 212 T
( * the spreadsheet object. */) 81 201 T
(@instance word) 102.6 190 T
(SSI_curAttrs;) 212.5 190 T
(/* SSI_gstate is used to cache the gstate handle used for drawing to the screen.) 81 172 T
( * This field is set and maintained by the spreadsheet object. */) 81 161 T
(@instance word) 102.6 150 T
(SSI_gstate;) 212.5 150 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1216" 8
%%Page: "1217" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Spreadsheet Objects) 389.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1217) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* SSI_gsRefCount is used to keep track of the number of references to the gstate;) 81 642 T
( * this lets the spreadsheet object know when to free the gstate. This field is) 81 631 T
( * set and maintained by the spreadsheet object. */) 81 620 T
(@instance byte) 102.6 609 T
(SSI_gsRefCount;) 212.5 609 T
(/* SSI_ancestorList, SSI_childList, and SSI_finalList are cached in the instance) 81 591 T
( * data for efficiency. Applications should ignore these fields. */) 81 580 T
(@instance word) 102.6 569 T
(SSI_ancestorList;) 212.5 569 T
(@instance word) 102.6 558 T
(SSI_childList;) 212.5 558 T
(@instance word) 102.6 547 T
(SSI_finalList;) 212.5 547 T
(/* SSI_bounds holds the bounds of the portion of the spreadsheet which contains) 81 529 T
( * data. This field is set and maintained by the spreadsheet. */) 81 518 T
(@instance RectDWord) 102.6 507 T
(SSI_bounds = {0, 0, 0, 0}) 212.5 507 T
81 482.98 531 495 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 482.98 531 495 R
7 X
0 0 0 1 0 0 0 K
V
76.5 490.23 617.5 493.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(20.2.1.1) 111.4 451.64 T
(SSI_mapBlock) 180 451.64 T
1 10 Q
(The spreadsheet object has to keep track of certain information about \336les) 180 429.31 T
(between executions. T) 180 416.31 T
(o do this, it writes data in a \322spreadsheet map block.\323) 281.13 416.31 T
-0.78 (This block may be any) 180 403.31 P
1 9 Q
-0.7 (VM) 282.08 403.31 P
1 10 Q
-0.78 ( block in the \336le containing the spreadsheet; it need) 297.07 403.31 P
(not be the \336le\325) 180 390.31 T
(s map block \050indeed, it usually is not\051. When the spreadsheet) 244.83 390.31 T
-0.33 (object initializes a new spreadsheet \336le, it allocates a map block and returns) 180 377.31 P
-0.03 (the spreadsheet map block\325) 180 364.31 P
-0.03 (s) 304.94 364.31 P
1 9 Q
-0.02 (VM) 312.32 364.31 P
1 10 Q
-0.03 ( handle. When you attach an existing \336le to) 327.32 364.31 P
-0.23 (the spreadsheet object \050with) 180 351.31 P
1 9 Q
-0.2 (MSG_SPREADSHEET_A) 312.06 351.31 P
-0.2 (TT) 418.56 351.31 P
-0.2 (ACH_FILE) 430.07 351.31 P
1 10 Q
-0.23 (\051, you must) 477.23 351.31 P
(provide this handle; the spreadsheet will lock the map block and get all) 180 338.31 T
(appropriate information from it. Applications may not access the) 180 325.31 T
(spreadsheet map block directly; they should never lock or unlock it.) 180 312.31 T
-0.75 (Initializing and attaching \336les is described at length in section 20.3.2 on page) 180 292.31 P
(1230.) 180 279.31 T
0 14 Q
(20.2.1.2) 111.4 245.64 T
(SSI_maxRow and SSI_maxColumn) 180 245.64 T
1 10 Q
(The application can specify the maximum dimensions for the spreadsheet.) 180 223.31 T
(The upper) 180 210.31 T
(-left corner of the spreadsheet is always cell A1 \050row index 0,) 227.41 210.31 T
-0.03 (column index 0\051. The application can specify the maximum row and column) 180 197.31 P
(indices allowed. These indices must be less than or equal to the constants) 180 184.31 T
1 9 Q
(MAX_ROW) 180 171.31 T
1 10 Q
( \0508191\051 and) 228.16 171.31 T
1 9 Q
(MAX_COL) 282.81 171.31 T
1 10 Q
( \050255\051.) 328.14 171.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1217" 9
%%Page: "1218" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1218) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.2.1.3) 111.4 638.67 T
(The Active Cell) 180 638.67 T
1 10 Q
-0.1 (One of the cells in a spreadsheet is always the \322active\323 cell. When a formula) 180 616.33 P
(or value is entered in the formula bar) 180 603.33 T
(, the value is copied to the active cell.) 352.61 603.33 T
(Similarly) 180 590.33 T
(, the formula bar displays the formula for the active cell \050whereas) 222.05 590.33 T
(the cell\325) 180 577.33 T
(s space in the spreadsheet displays the value to which the formula) 215.19 577.33 T
(evaluates\051. The active cell\325) 180 564.33 T
(s coordinates are stored in the \336elds) 301.32 564.33 T
5 9 Q
(SSI) 470.96 564.33 T
5 10 Q
(_curRow) 486.63 564.33 T
1 F
(and) 180 551.33 T
5 9 Q
(SSI) 200.19 551.33 T
5 10 Q
(_curCol) 215.86 551.33 T
1 F
(. Ordinarily) 251.4 551.33 T
(, the user\321not the application\321sets the active) 304.74 551.33 T
-0.12 (cell, not the application. However) 180 538.33 P
-0.12 (, the application can change the active cell) 333.61 538.33 P
(by sending the message) 180 525.33 T
1 9 Q
(MSG_SPREADSHEET_MOVE_ACTIVE_CELL.) 292.24 525.33 T
81 508.99 531 514 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 508.99 531 514 R
7 X
0 0 0 1 0 0 0 K
V
50 512.99 609.01 512.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 500.99 T
0 F
(MSG_SPREADSHEET_MOVE_ACTIVE_CELL) 99 500.99 T
6 10 Q
(void) 99 486.33 T
4 F
(MSG_SPREADSHEET_MOVE_ACTIVE_CELL\050) 153 486.33 T
4 9 Q
(word) 153 475.99 T
(row,) 189 475.99 T
(/* Move to cell with this row index */) 261 475.99 T
(word) 153 465.99 T
(column\051;) 189 465.99 T
(/* and this column index */) 261 465.99 T
1 10 Q
(This message instructs the spreadsheet to change the active cell.) 180 448.33 T
-0.01 (Applications should not usually need to send this message; they can rely on) 180 435.33 P
(the spreadsheet\325) 180 422.33 T
(s user interface for this.) 255.19 422.33 T
0 9 Q
(Source:) 153 405.33 T
1 10 Q
(Unrestricted.) 207 405.33 T
0 9 Q
(Destination:) 153 388.33 T
1 10 Q
(Any Spreadsheet object.) 207 388.33 T
0 9 Q
(Parameters:) 153 371.33 T
5 10 Q
(row) 207 371.33 T
1 F
-0.63 (The row index of the new active cell. This should be) 297 371.33 P
(speci\336ed in zero-based form; that is, the \336rst row) 297 358.33 T
(has an index of zero.) 297 345.33 T
5 F
(column) 207 329.33 T
1 F
-0.57 (The column index of new active cell. This should be) 297 329.33 P
(speci\336ed in zero-based form; that is, the \336rst) 297 316.33 T
(column has an index of zero.) 297 303.33 T
0 9 Q
(Interception:) 153 286.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 286.33 T
0 14 Q
(20.2.1.4) 111.4 252.66 T
(Recalculation and Iteration) 180 252.66 T
4 10 Q
(SpreadsheetFlags, SpreadsheetRecalcParams,) 180 230.33 T
(MSG_SPREADSHEET_CHANGE_RECALC_PARAMS,) 180 217.33 T
(MSG_SPREADSHEET_GET_RECALC_PARAMS, MSG_SPREADSHEET_RECALC) 180 204.33 T
1 F
-0.16 (The Spreadsheet object uses the) 180 184.33 P
3 F
-0.17 (SpreadsheetFlags) 330.49 184.33 P
1 F
-0.16 ( record to keep track of) 423.09 184.33 P
-0.21 (details about the Spreadsheet\325) 180 171.33 P
-0.21 (s current state. Some of these \336elds are saved) 319.02 171.33 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1218" 10
%%Page: "1219" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Spreadsheet Objects) 389.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1219) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.1 (to the Spreadsheet map block, and some are not. There are only a two \336elds) 180 641.33 P
(in this record that are of interest to the application:) 180 628.33 T
1 9 Q
(SF_MANUAL_RECALC) 180 608.33 T
1 10 Q
(If this \337ag is clear) 243 596.33 T
(, whenever a cell\325) 325.97 596.33 T
(s value is changed, the) 404.87 596.33 T
-0.58 (spreadsheet will automatically recalculate the cell\325) 243 584.33 P
-0.58 (s value \050and) 473.84 584.33 P
-0.19 (the values of all cells which depend on it\051. If the \337ag is set, the) 243 572.33 P
(application must force a recalculation by sending) 243 560.33 T
1 9 Q
(MSG_SPREADSHEET_RECALC) 243 548.33 T
1 10 Q
( to the spreadsheet object. By) 382 548.33 T
(default, the \337ag is clear) 243 536.33 T
(.) 351.35 536.33 T
1 9 Q
(SF_ALLOW_ITERA) 180 517.33 T
(TION) 263.67 517.33 T
1 10 Q
(If this \337ag is clear) 243 505.33 T
(, the spreadsheet will not allow circular cell) 325.97 505.33 T
-0.05 (references \050e.g. A1 = 10 + B1, B1 = 1/A1\051; all cells in a circular) 243 493.33 P
-0.29 (reference will evaluate to the error) 243 481.33 P
1 9 Q
-0.26 (PSEE_CIRCULAR_REF) 404.78 481.33 P
1 10 Q
-0.29 (, and) 505.83 481.33 P
(all cells which depend on these cells will evaluate to) 243 469.33 T
1 9 Q
(PSEE_CIRCULAR_DEP) 243 457.33 T
1 10 Q
(. If the \337ag is set, the spreadsheet will) 344.37 457.33 T
-0.4 (follow circular references for a set number of circuits \050speci\336ed) 243 445.33 P
(in) 243 433.33 T
5 9 Q
(SSI) 255.04 433.33 T
5 10 Q
(_circCount) 270.71 433.33 T
1 F
(\051 or until values converge within a speci\336ed) 320.32 433.33 T
(tolerance \050speci\336ed in) 243 421.33 T
5 9 Q
(SSI) 346.33 421.33 T
5 10 Q
(_converge) 362 421.33 T
1 F
(\051.) 406.43 421.33 T
(Both of these \337ags are saved in the spreadsheet map block; thus, when a) 180 402.33 T
-0.39 (spreadsheet \336le is opened, these \337ags will be set to their values as of the last) 180 389.33 P
(time the \336le was saved.) 180 376.33 T
(If you allow circular references, you must specify how many times a circuit) 180 356.33 T
(will be followed. Y) 180 343.33 T
(ou do this by setting two instance data \336elds,) 262.99 343.33 T
5 9 Q
(SSI) 180 330.33 T
5 10 Q
(_circCount) 195.67 330.33 T
1 F
( and) 245.28 330.33 T
5 9 Q
(SSI) 268.25 330.33 T
5 10 Q
(_converge) 283.92 330.33 T
1 F
(.) 328.35 330.33 T
5 9 Q
(SSI) 333.91 330.33 T
5 10 Q
(_circCount) 349.58 330.33 T
1 F
( speci\336es how many times a) 399.19 330.33 T
-0.74 (circuit should be followed in order to approximate the \322true\323 values. If you set) 180 317.33 P
5 9 Q
(SSI) 180 304.33 T
5 10 Q
(_circCount) 195.67 304.33 T
1 F
( to zero, the Spreadsheet will act the same as if) 245.28 304.33 T
1 9 Q
-0.19 (SF_ALLOW_ITERA) 180 291.33 P
-0.19 (TION) 263.67 291.33 P
1 10 Q
-0.21 ( had been cleared. Y) 287.68 291.33 P
-0.21 (ou can also set a threshold value) 379.09 291.33 P
(in the FloatNum datum) 180 278.33 T
5 9 Q
(SSI) 292.99 278.33 T
5 10 Q
(_converge) 308.66 278.33 T
1 F
(. If, during a circuit, none of the cells\325) 353.09 278.33 T
(values change by more than the amount speci\336ed in) 180 265.33 T
5 9 Q
(SSI) 422.99 265.33 T
5 10 Q
(_converge) 438.66 265.33 T
1 F
(, the) 483.09 265.33 T
(spreadsheet will accept the values as accurate \050even if it has not completed) 180 252.33 T
5 9 Q
(SSI) 180 239.33 T
5 10 Q
(_circCount) 195.67 239.33 T
1 F
( circuits\051. If) 245.28 239.33 T
5 9 Q
(SSI) 301.38 239.33 T
5 10 Q
(_converge) 317.05 239.33 T
1 F
( is set to zero, the spreadsheet will) 361.48 239.33 T
(make the full) 180 226.33 T
5 9 Q
(SSI) 244.46 226.33 T
5 10 Q
(_circCount) 260.13 226.33 T
1 F
( iterations.) 309.74 226.33 T
(T) 180 206.33 T
(o change the current recalculation parameters, send) 185.75 206.33 T
1 9 Q
-0.09 (MSG_SPREADSHEET_CHANGE_RECALC_P) 180 193.33 P
-0.09 (ARAMS) 374.66 193.33 P
1 10 Q
-0.1 ( to the spreadsheet object.) 408.32 193.33 P
(This message takes one argument, a pointer to a) 180 180.33 T
3 F
(SpreadsheetRecalcParams) 180 167.33 T
1 F
( structure:) 318.91 167.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1219" 11
%%Page: "1220" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1220) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 10 Q
0 X
(typedef struct {) 216 641.33 T
(SpreadsheetFlags) 252 628.33 T
(SRP_flags;) 360 628.33 T
(word) 252 615.33 T
(SRP_circCount;) 360 615.33 T
(FloatNum) 252 602.33 T
(SRP_converge;) 360 602.33 T
(} SpreadsheetRecalcParams;) 216 589.33 T
1 F
-0.73 (The spreadsheet object will set its) 180 569.33 P
5 9 Q
-0.66 (SSI) 335.08 569.33 P
5 10 Q
-0.73 (_circCount) 350.75 569.33 P
1 F
-0.73 ( instance datum to equal the) 400.36 569.33 P
-0.67 (setting of) 180 556.33 P
5 9 Q
-0.61 (SRP) 224.59 556.33 P
5 10 Q
-0.67 (_circCount) 243.26 556.33 P
1 F
-0.67 (, and will set) 292.87 556.33 P
5 9 Q
-0.61 (SSI) 352.24 556.33 P
5 10 Q
-0.67 (_converge) 367.91 556.33 P
1 F
-0.67 ( to equal) 412.34 556.33 P
5 9 Q
-0.61 (SRP) 452.94 556.33 P
5 10 Q
-0.67 (_converge) 471.61 556.33 P
1 F
-0.67 (. It) 516.04 556.33 P
(will also set its) 180 543.33 T
1 9 Q
(SF_MANUAL_RECALC) 251.88 543.33 T
1 10 Q
( and) 353.21 543.33 T
1 9 Q
(SF_ALLOW_ITERA) 376.18 543.33 T
(TION) 459.85 543.33 T
1 10 Q
( \337ags to) 483.86 543.33 T
-0.25 (match their settings in) 180 530.33 P
5 9 Q
-0.23 (SRP) 287.51 530.33 P
5 10 Q
-0.25 (_\337ags) 306.18 530.33 P
1 F
-0.25 (; it will not change any of the other \337ags in) 332.85 530.33 P
5 9 Q
(SSI) 180 517.33 T
5 10 Q
(_\337ags) 195.67 517.33 T
1 F
(.) 222.33 517.33 T
(T) 180 497.33 T
(o \336nd out the current recalculation/iteration settings, call) 185.75 497.33 T
1 9 Q
(MSG_SPREADSHEET_GET_RECALC_P) 180 484.33 T
(ARAMS) 352.84 484.33 T
1 10 Q
(. This message takes one) 386.5 484.33 T
(argument, namely a pointer to a) 180 471.33 T
3 F
(SpreadsheetRecalcParams) 332.25 471.33 T
1 F
( structure.) 471.16 471.33 T
(The spreadsheet object will copy its) 180 458.33 T
5 9 Q
(SSI) 346.5 458.33 T
5 10 Q
(_\337ags) 362.17 458.33 T
1 F
(,) 388.83 458.33 T
5 9 Q
(SSI) 394.39 458.33 T
5 10 Q
(_circCount) 410.06 458.33 T
1 F
(, and) 459.67 458.33 T
5 9 Q
(SSI) 180 445.33 T
5 10 Q
(_converge) 195.67 445.33 T
1 F
( data into the structure\325) 240.1 445.33 T
(s) 349.74 445.33 T
5 9 Q
(SRP) 357.15 445.33 T
5 10 Q
(_\337ags) 375.82 445.33 T
1 F
(,) 402.48 445.33 T
5 9 Q
(SRP) 408.04 445.33 T
5 10 Q
(_circCount) 426.72 445.33 T
1 F
(, and) 476.33 445.33 T
5 9 Q
(SRP) 180 432.33 T
5 10 Q
(_\337ags) 198.68 432.33 T
1 F
( \336elds.) 225.34 432.33 T
81 415.99 531 421 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 415.99 531 421 R
7 X
0 0 0 1 0 0 0 K
V
50 419.99 609.01 419.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 407.99 T
0 F
(MSG_SPREADSHEET_RECALC) 99 407.99 T
6 10 Q
(void) 99 393.33 T
4 F
(MSG_SPREADSHEET_RECALC\050\051) 153 393.33 T
1 F
-0.11 (This message instructs the spreadsheet to recalculate the values of all of its) 180 375.33 P
(cells. This message is needed if the spreadsheet has had automatic) 180 362.33 T
(recalculation disabled; otherwise, the spreadsheet will automatically) 180 349.33 T
(recalculate cells as needed.) 180 336.33 T
0 9 Q
(Source:) 153 319.33 T
1 10 Q
(Unrestricted.) 207 319.33 T
0 9 Q
(Destination:) 153 302.33 T
1 10 Q
(Any Spreadsheet object.) 207 302.33 T
0 9 Q
(Parameters:) 153 285.33 T
1 10 Q
(None.) 207 285.33 T
0 9 Q
(Return:) 153 268.33 T
1 10 Q
(Nothing.) 207 268.33 T
0 9 Q
(Interception:) 153 251.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 251.33 T
81 234.98 531 239.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 234.98 531 239.99 R
7 X
0 0 0 1 0 0 0 K
V
50 238.98 609.01 238.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 226.98 T
0 F
(MSG_SPREADSHEET_GET_RECALC_P) 99 226.98 T
(ARAMS) 324.82 226.98 T
6 10 Q
(void) 99 212.32 T
4 F
(MSG_SPREADSHEET_GET_RECALC_PARAMS\050) 153 212.32 T
4 9 Q
(SpreadsheetRecalcParams) 153 201.98 T
(*ssRecalcParams\051;) 279 201.98 T
1 10 Q
(This message gets the current values of the Spreadsheet object\325) 180 184.32 T
(s) 472.06 184.32 T
5 9 Q
(SSI) 479.47 184.32 T
5 10 Q
(_\337ags) 495.14 184.32 T
1 F
(,) 521.8 184.32 T
5 9 Q
(SSI) 180 171.32 T
5 10 Q
(_circCount) 195.67 171.32 T
1 F
(, and) 245.28 171.32 T
5 9 Q
(SSI) 271.03 171.32 T
5 10 Q
(_converge) 286.7 171.32 T
1 F
( \336elds. The \336elds are copied into the) 331.13 171.32 T
(corresponding \336elds of a) 180 158.32 T
3 F
(SpreadsheetRecalcParams) 294.81 158.32 T
1 F
( structure.) 433.72 158.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1220" 12
%%Page: "1221" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Spreadsheet Objects) 389.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1221) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
(Source:) 153 641.33 T
1 10 Q
(Unrestricted.) 207 641.33 T
0 9 Q
(Destination:) 153 624.33 T
1 10 Q
(Any Spreadsheet object.) 207 624.33 T
0 9 Q
(Parameters:) 153 607.33 T
5 10 Q
(ssRecalcParams) 207 607.33 T
1 F
(A pointer to a) 297 607.33 T
3 F
(SpreadsheetRecalcParams) 363.12 607.33 T
1 F
(structure. The data will be copied into this) 297 594.33 T
(structure.) 297 581.33 T
0 9 Q
(Return:) 153 564.33 T
1 10 Q
(Appropriate values copied into) 207 564.33 T
5 F
(*ssRecalcParams) 351.08 564.33 T
1 F
(.) 430.68 564.33 T
0 9 Q
(Structures:) 153 547.33 T
3 10 Q
(SpreadsheetRecalcParams) 207 547.33 T
1 F
( \050described on page 1220\051.) 345.91 547.33 T
0 9 Q
(Interception:) 153 530.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 530.33 T
81 513.99 531 519 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 513.99 531 519 R
7 X
0 0 0 1 0 0 0 K
V
50 517.99 609.01 517.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 505.99 T
0 F
(MSG_SPREADSHEET_CHANGE_RECALC_P) 99 505.99 T
(ARAMS) 352.14 505.99 T
6 10 Q
(void) 99 491.33 T
4 F
(MSG_SPREADSHEET_CHANGE_RECALC_PARAMS\050) 153 491.33 T
4 9 Q
(const SpreadsheetRecalcParams*) 153 480.99 T
(ssRecalcParams\051;) 333 480.99 T
1 10 Q
(This message changes the current values of the spreadsheet object\325) 180 463.33 T
(s) 488.72 463.33 T
5 9 Q
(SSI) 180 450.33 T
5 10 Q
(_\337ags) 195.67 450.33 T
1 F
(,) 222.33 450.33 T
5 9 Q
(SSI) 227.89 450.33 T
5 10 Q
(_circCount) 243.56 450.33 T
1 F
(, and) 293.17 450.33 T
5 9 Q
(SSI) 318.92 450.33 T
5 10 Q
(_converge) 334.59 450.33 T
1 F
( \336elds. The spreadsheet object) 379.02 450.33 T
(copies the) 180 437.33 T
3 F
(SpreadsheetRecalcParams) 228.52 437.33 T
1 F
( structure\325) 367.43 437.33 T
(s) 414.83 437.33 T
5 9 Q
(SRP) 422.24 437.33 T
5 10 Q
(_circCount) 440.92 437.33 T
1 F
(, and) 490.52 437.33 T
5 9 Q
(SRP) 180 424.33 T
5 10 Q
(_converge) 198.68 424.33 T
1 F
( \336elds into its own) 243.1 424.33 T
5 9 Q
(SSI) 330.35 424.33 T
5 10 Q
(_circCount) 346.01 424.33 T
1 F
( and) 395.62 424.33 T
5 9 Q
(SSI) 418.59 424.33 T
5 10 Q
(_converge) 434.26 424.33 T
1 F
( \336elds. It) 478.69 424.33 T
(also sets its) 180 411.33 T
1 9 Q
(SF_MANUAL_RECALC) 236.5 411.33 T
1 10 Q
( and) 337.83 411.33 T
1 9 Q
(SF_ALLOW_ITERA) 360.8 411.33 T
(TION) 444.47 411.33 T
1 10 Q
( \337ags to) 468.48 411.33 T
(correspond to the settings in) 180 398.33 T
5 9 Q
(SRP) 314.26 398.33 T
5 10 Q
(_\337ags) 332.93 398.33 T
1 F
(; it does not change any of the other) 359.6 398.33 T
(\337ags in) 180 385.33 T
5 9 Q
(SSI) 216.49 385.33 T
5 10 Q
(_\337ags) 232.16 385.33 T
1 F
(.) 258.82 385.33 T
0 9 Q
(Source:) 153 368.33 T
1 10 Q
(Unrestricted.) 207 368.33 T
0 9 Q
(Destination:) 153 351.33 T
1 10 Q
(Any Spreadsheet object.) 207 351.33 T
0 9 Q
(Parameters:) 153 334.33 T
5 10 Q
(ssRecalcParams) 207 334.33 T
1 F
(A pointer to a) 297 334.33 T
3 F
(SpreadsheetRecalcParams) 363.12 334.33 T
1 F
(structure. The settings will be copied from this) 297 321.33 T
(structure into the spreadsheet\325) 297 308.33 T
(s instance data.) 438.85 308.33 T
0 9 Q
(Return:) 153 291.33 T
1 10 Q
(Nothing.) 207 291.33 T
0 9 Q
(Structures:) 153 274.33 T
3 10 Q
(SpreadsheetRecalcParams) 207 274.33 T
1 F
( \050described on page 1220\051.) 345.91 274.33 T
0 9 Q
(Interception:) 153 257.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 257.33 T
0 14 Q
(20.2.1.5) 111.4 223.66 T
(SpreadsheetDrawFlags) 180 223.66 T
4 10 Q
(SpreadsheetDrawFlags, MSG_SPREADSHEET_GET_DRAW_FLAGS,) 180 201.33 T
(MSG_SPREADSHEET_ALTER_DRAW_FLAGS) 180 188.33 T
1 F
-0.78 (The application can specify how the spreadsheet should draw itself by setting) 180 168.33 P
(the) 180 155.33 T
3 F
(SpreadsheetDrawFlags) 197.78 155.33 T
1 F
(. Many of these \337ags are relevant only when) 318.9 155.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1221" 13
%%Page: "1222" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1222) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(the spreadsheet is being printed; they are ignored when the spreadsheet is) 180 641.33 T
(being drawn to the screen. The application can set these in the object) 180 628.33 T
(declaration, or it can change them at run-time by sending) 180 615.33 T
1 9 Q
(MSG_SPREADSHEET_AL) 180 602.33 T
(TER_DRA) 292.51 602.33 T
(W_FLAGS) 335.18 602.33 T
1 10 Q
(. It can also \336nd out the current) 379.68 602.33 T
(settings by sending) 180 589.33 T
1 9 Q
(MSG_SPREADSHEET_GET_DRA) 272.05 589.33 T
(W_FLAGS) 415.73 589.33 T
1 10 Q
(.) 460.23 589.33 T
3 F
(SpreadsheetDrawFlags) 180 569.33 T
1 F
( has the following \337ags:) 301.12 569.33 T
1 9 Q
(SDF_DRA) 180 549.33 T
(W_GRAPHICS) 222.35 549.33 T
1 10 Q
(Draw graphics associated with the spreadsheet.) 243 537.33 T
1 9 Q
(SDF_DRA) 180 518.33 T
(W_NOTE_BUTTON) 222.35 518.33 T
1 10 Q
-0.47 (Add glyphs in cells which contain notes, as well as in header or) 243 506.33 P
(footer cells.) 243 494.33 T
1 9 Q
(SDF_DRA) 180 475.33 T
(W_GRID) 222.35 475.33 T
1 10 Q
(Draw grid lines between cells.) 243 463.33 T
1 9 Q
(SDF_SIDEW) 180 444.33 T
(A) 234.01 444.33 T
(YS) 239.68 444.33 T
1 10 Q
(Draw the spreadsheet sideways. This is relevant only for) 243 432.33 T
(printing.) 243 420.33 T
1 9 Q
(SDF_SCALE_TO_FIT) 180 401.33 T
1 10 Q
(Scale the selected range to \336ll a page. This is signi\336cant only) 243 389.33 T
(for printing.) 243 377.33 T
(SDF_DRA) 180 358.33 T
(W_ROW_COLUMN_TITLES) 227.05 358.33 T
(Draw the row and column titles.) 243 346.33 T
1 9 Q
(SDF_SKIP_DRA) 180 327.33 T
(W) 249.18 327.33 T
1 10 Q
-0.45 (Do not draw anything to the screen. Set this if you want to \336nd) 243 315.33 P
-0.71 (out how the pages will lie, without actually drawing or printing) 243 303.33 P
(them.) 243 291.33 T
1 9 Q
(SDF_CENTER_VERTICALL) 180 272.33 T
(Y) 300.34 272.33 T
1 10 Q
-0.41 (Center each page\325) 243 260.33 P
-0.41 (s contents vertically) 323.86 260.33 P
-0.41 (. This is relevant only for) 414.72 260.33 P
(printing.) 243 248.33 T
1 9 Q
(SDF_CENTER_HORIZONT) 180 229.33 T
(ALL) 297.01 229.33 T
(Y) 314.68 229.33 T
1 10 Q
-0.41 (Center each page\325) 243 217.33 P
-0.41 (s contents vertically) 323.86 217.33 P
-0.41 (. This is relevant only for) 414.72 217.33 P
(printing.) 243 205.33 T
(SDF_CONTINUOUS) 180 186.33 T
(Print the spreadsheet continuously; that is, don\325) 243 174.33 T
(t leave space) 465.25 174.33 T
-0.03 (between pages or at the edges \050or leave as little margin as the) 243 162.33 P
(printer allows\051. This is relevant only for printing.) 243 150.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1222" 14
%%Page: "1223" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(The Spreadsheet Objects) 389.94 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1223) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.2) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 9 Q
0 X
(SDF_DRA) 180 641.33 T
(W_HEADER) 222.35 641.33 T
1 10 Q
(Print the header cells at the top of each page. This is relevant) 243 629.33 T
(only for printing.) 243 617.33 T
1 9 Q
(SDF_DRA) 180 598.33 T
(W_FOOTER) 222.35 598.33 T
1 10 Q
(Print the footer cells at the bottom of each page. This is) 243 586.33 T
(relevant only for printing.) 243 574.33 T
1 9 Q
(SDF_PRINT_DOCUMENT) 180 555.33 T
1 10 Q
-0.47 (This \337ag is never set or checked by the spreadsheet object. It is) 243 543.33 P
(provided for the convenience of objects which use the) 243 531.33 T
(spreadsheet.) 243 519.33 T
1 9 Q
(SDF_PRINT_NOTES) 180 500.33 T
1 10 Q
-0.47 (This \337ag is never set or checked by the spreadsheet object. It is) 243 488.33 P
(provided for the convenience of objects which use the) 243 476.33 T
(spreadsheet.) 243 464.33 T
81 448.99 531 454 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 448.99 531 454 R
7 X
0 0 0 1 0 0 0 K
V
50 452.99 609.01 452.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 440.99 T
0 F
(MSG_SPREADSHEET_GET_DRA) 99 440.99 T
(W_FLAGS) 286.37 440.99 T
6 10 Q
(SpreadsheetDrawFlags) 99 426.33 T
4 F
(MSG_SPREADSHEET_GET_DRAW_FLAGS\050\051) 225 426.33 T
1 F
-0.23 (This message returns the spreadsheet object\325) 180 408.33 P
-0.23 (s) 386.25 408.33 P
5 9 Q
-0.21 (SSI) 393.43 408.33 P
5 10 Q
-0.23 (_drawFlags) 409.1 408.33 P
1 F
-0.23 ( instance data) 463.72 408.33 P
(\336eld.) 180 395.33 T
0 9 Q
(Source:) 153 378.33 T
1 10 Q
(Unrestricted.) 207 378.33 T
0 9 Q
(Destination:) 153 361.33 T
1 10 Q
(Any Spreadsheet object.) 207 361.33 T
0 9 Q
(Parameters:) 153 344.33 T
1 10 Q
(None.) 207 344.33 T
0 9 Q
(Return:) 153 327.33 T
1 10 Q
(Spreadsheet object\325) 207 327.33 T
(s) 295.71 327.33 T
5 9 Q
(SSI) 303.12 327.33 T
5 10 Q
(_drawFlags) 318.79 327.33 T
1 F
( \336eld.) 373.41 327.33 T
0 9 Q
(Interception:) 153 310.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 310.33 T
81 293.98 531 298.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 293.98 531 298.99 R
7 X
0 0 0 1 0 0 0 K
V
50 297.98 609.01 297.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 285.98 T
0 F
(MSG_SPREADSHEET_AL) 99 285.98 T
(TER_DRA) 244.8 285.98 T
(W_FLAGS) 300.8 285.98 T
6 10 Q
(void) 99 271.32 T
4 F
(MSG_SPREADSHEET_ALTER_DRAW_FLAGS\050) 153 271.32 T
4 9 Q
(SpreadsheetDrawFlags) 153 260.98 T
(bitsToSet,) 279 260.98 T
(SpreadsheetDrawFlags) 153 250.98 T
(bitsToClear\051;) 279 250.98 T
1 10 Q
-0.78 (This message changes the settings of the spreadsheet object\325) 180 233.32 P
-0.78 (s) 452.09 233.32 P
5 9 Q
-0.7 (SSI) 458.71 233.32 P
5 10 Q
-0.78 (_drawFlags) 474.38 233.32 P
1 F
(\336eld. If the same bit is set in) 180 220.32 T
5 F
(bitsT) 314.66 220.32 T
(oSet) 337.47 220.32 T
1 F
( and) 357.1 220.32 T
5 F
(bitsT) 380.07 220.32 T
(oClear) 402.88 220.32 T
1 F
(, the results are) 432.31 220.32 T
(unde\336ned.) 180 207.32 T
0 9 Q
(Source:) 153 190.32 T
1 10 Q
(Unrestricted.) 207 190.32 T
0 9 Q
(Destination:) 153 173.32 T
1 10 Q
(Any Spreadsheet object.) 207 173.32 T
0 9 Q
(Parameters:) 153 156.32 T
5 10 Q
(bitsT) 207 156.32 T
(oSet) 229.81 156.32 T
1 F
(T) 297 156.32 T
(urn on these \337ags in) 302.96 156.32 T
5 9 Q
(SSI) 400.19 156.32 T
5 10 Q
(_drawFlags) 415.86 156.32 T
1 F
(.) 470.48 156.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1223" 15
%%Page: "1224" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1224) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.2) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
5 10 Q
0 X
(bitsT) 207 641.33 T
(oClear) 229.81 641.33 T
1 F
(T) 297 641.33 T
(urn off these \337ags in) 302.96 641.33 T
5 9 Q
(SSI) 400.74 641.33 T
5 10 Q
(_drawFlags) 416.41 641.33 T
1 F
(.) 471.03 641.33 T
0 9 Q
(Return:) 153 624.33 T
1 10 Q
(Nothing.) 207 624.33 T
0 9 Q
(Interception:) 153 607.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 607.33 T
0 14 Q
(20.2.1.6) 111.4 573.67 T
(Engine Mode) 180 573.67 T
4 10 Q
(SpreadsheetAttributes) 180 551.33 T
1 F
-0.71 (Some applications will want to use the spreadsheet object to manage cell \336les) 180 531.33 P
(and to interact with the parser) 180 518.33 T
(, but will not want to use its user) 321.68 518.33 T
(-interface.) 474.13 518.33 T
(These applications can run the spreadsheet in \322engine\323 mode. When the) 180 505.33 T
(spreadsheet is in engine mode, it does not draw anything to the screen.) 180 492.33 T
-0.81 (Applications must arrange for the spreadsheet object to get data for cells, and) 180 479.33 P
(must directly request data from the cells.) 180 466.33 T
(T) 180 446.33 T
(o run a spreadsheet in engine mode, set the) 185.75 446.33 T
1 9 Q
(SA_ENGINE_MODE) 389.66 446.33 T
1 10 Q
( bit in the) 478.16 446.33 T
(\336eld) 180 433.33 T
5 9 Q
(SSI) 202.78 433.33 T
5 10 Q
(_attributes) 218.45 433.33 T
1 F
(. This is the only \336eld in) 268.07 433.33 T
5 9 Q
(SSI) 382.54 433.33 T
5 10 Q
(_attributes) 398.21 433.33 T
1 F
( with which) 447.83 433.33 T
(applications need concern themselves.) 180 420.33 T
0 14 Q
(20.2.1.7) 111.4 386.67 T
(SSI_ruler) 180 386.67 T
1 10 Q
(The spreadsheet object needs to be linked to the SpreadsheetRuler objects.) 180 364.33 T
-0.6 (T) 180 351.33 P
-0.6 (o set up the link, put an optr to one of the rulers in) 185.75 351.33 P
5 9 Q
-0.54 (SSI) 414.59 351.33 P
5 10 Q
-0.6 (_ruler) 430.26 351.33 P
1 F
-0.6 (; have the other) 458.02 351.33 P
(ruler be a slave of the \336rst.) 180 338.33 T
0 14 Q
(20.2.2) 123.08 296 T
0 18 Q
(Spreadsheet Rulers) 180 296 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
(A special ruler object is de\336ned for use with spreadsheets,) 180 265.33 T
3 F
(SpreadsheetRulerClass) 180 252.33 T
1 F
(. Applications can treat this the same way they) 301.5 252.33 T
(treat ordinary ruler objects. Most applications will have two ruler objects,) 180 239.33 T
(one horizontal and one vertical. Each of these should be a child of a) 180 226.33 T
(RulerContent object, and should be displayed in a RulerV) 180 213.33 T
(iew) 445.32 213.33 T
(. For more) 460.33 213.33 T
(information about rulers, see \322Ruler Object Library) 180 200.33 T
(,\323 Chapter) 416.13 200.33 T
(19.) 466.32 200.33 T
(Each ruler has a single instance datum which ordinary rulers lack, namely) 180 180.33 T
5 9 Q
(SRI) 180 167.33 T
5 10 Q
(_spreadsheet) 196.34 167.33 T
1 F
(. This \336eld should be initialized to contain an optr to the) 255.2 167.33 T
(spreadsheet object.) 180 154.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1224" 16
%%Page: "1225" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Basic Use) 491.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1225) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.2.3) 123.08 636 T
0 18 Q
(The Spreadsheet Controller) 180 636 T
1 10 Q
(Users enter data and formulae into the spreadsheet by using the) 180 612.33 T
(Spreadsheet Edit-Bar Controller \050i.e.) 180 599.33 T
3 F
(SSEditBarControlClass) 353.52 599.33 T
1 F
(, a subclass) 475.39 599.33 T
-0.46 (of) 180 586.33 P
3 F
-0.47 (GenControlClass) 190.65 586.33 P
1 F
-0.46 (\051. The controller is usually displayed in the tool-palette) 278.8 586.33 P
(just below the menu bar; however) 180 573.33 T
(, as with all controllers, the user can put) 335.39 573.33 T
(the edit bar wherever he prefers.) 180 560.33 T
-0.7 (The edit bar has two main functions: it is used to) 180 540.33 P
5 F
-0.7 (display) 401.38 540.33 P
1 F
-0.7 ( the contents of cells,) 435.07 540.33 P
-0.58 (and it is used to) 180 527.33 P
5 F
-0.58 (change) 253.61 527.33 P
1 F
-0.58 ( the contents. The spreadsheet object does not exactly) 285.82 527.33 P
(display the contents of the cells. T) 180 514.33 T
(o be sure, if the cell contains a number or) 336.32 514.33 T
(a string, the spreadsheet will display this in the cell\325) 180 501.33 T
(s space; however) 421.71 501.33 T
(, if the) 498.01 501.33 T
(cell contains a formula, the spreadsheet will display not the formula, but) 180 488.33 T
(rather the value to which the cell evaluates. For example, if a cell contains) 180 475.33 T
-0.1 (the formula \322=) 180 462.33 P
-0.1 (1) 249.57 462.33 P
-0.1 (+) 257.91 462.33 P
-0.1 (1\323, the spreadsheet object will display the number two in) 266.75 462.33 P
(the cell. The edit bar) 180 449.33 T
(, on the other hand, displays the contents of the active) 275.02 449.33 T
(cell; in this case, it would display the text \322=) 180 436.33 T
(1) 387.03 436.33 T
(+) 395.37 436.33 T
(1\323.) 404.21 436.33 T
-0.37 (The edit bar is also used for changing the contents of cells. As noted, the edit) 180 416.33 P
(bar displays the contents of the active cell. The user can change this text at) 180 403.33 T
(will. The edit bar contains two special icons. One instructs the spreadsheet) 180 390.33 T
-0.58 (to store the new formula in the cell; this causes the edit bar to pass the string) 180 377.33 P
-0.14 (to the spreadsheet, which parses the string and stores the parsed version in) 180 364.33 P
-0.11 (the cell, then recalculates all affected cells. The other icon instructs the edit) 180 351.33 P
-0.01 (bar to throw out the changed version, and get the original formula from the) 180 338.33 P
(spreadsheet. The edit bar also displays the coordinates of the active cell.) 180 325.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
3 F
(SSEditBarControlClass) 180 300.33 T
1 F
( has no instance data \050beyond what) 301.87 300.33 T
3 F
(GenControlClass) 180 287.33 T
1 F
( has\051. It uses only one message which is of interest to) 268.15 287.33 T
(applications, namely) 180 274.33 T
1 9 Q
(MSG_SSEBC_INITIAL_KEYPRESS) 278.54 274.33 T
1 10 Q
(. This message is) 431.05 274.33 T
(described below on page 1235.) 180 261.33 T
0 14 Q
(20.3) 134.76 209 T
0 24 Q
(Basic Use) 180 209 T
1 10 Q
-0.24 (The spreadsheet objects are very simple to use. Once the application de\336nes) 180 183.33 P
(the objects, they almost run themselves. There are a few messages which) 180 170.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1225" 17
%%Page: "1226" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1226) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.19 (applications have to know to send; these are described below) 180 641.33 P
-0.19 (. There are also) 457.28 641.33 P
(some advanced utilities which applications may want to use.) 180 628.33 T
0 14 Q
(20.3.1) 123.08 586 T
0 18 Q
(Declaring the Objects) 180 586 T
1 10 Q
-0.03 (The Spreadsheet objects are all subclassed off of fairly common objects, and) 180 562.33 P
-0.32 (should be declared the way those objects would be. The SSEditBarControl is) 180 549.33 P
(generally the child of an \322edit menu\323 interaction, and is often placed in the) 180 536.33 T
(same resource as the edit menu; it should be run by the UI thread. The) 180 523.33 T
(Spreadsheet and SpreadsheetRuler objects are usually put in the same) 180 510.33 T
(resource. The rulers should be children of RulerContent objects. The) 180 497.33 T
-0.55 (spreadsheet object, as well as the ruler contents, should be displayed in their) 180 484.33 P
(own GenV) 180 471.33 T
(iew objects.) 227.34 471.33 T
81 144 531 648 C
180 144 531 468 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Figure) 180 214.31 T
(20-) 213.34 214.31 T
(1) 227.79 214.31 T
5 F
(Arranging Spreadsheet Objects) 236.13 214.31 T
(This is how the sample spreadsheet objects are arranged on the page. Each) 180 200.31 T
(Spreadsheet object \050except for the controllers\051 is displayed in its own view) 180 188.31 T
(.) 514.35 188.31 T
(Applications will also have to declare a special view to space the objects) 180 176.31 T
(properly) 180 164.31 T
(. For an example of how the objects are declared, see Code) 217.58 164.31 T
(Display) 180 152.31 T
(20-) 218.14 152.31 T
(2 on page) 232.59 152.31 T
2 F
(u) 278.89 152.31 T
5 F
(1227.) 289.55 152.31 T
313.08 262.83 457.08 379.83 R
7 X
V
0.5 H
0 Z
0 X
N
(SpreadsheetV) 346.05 317.65 T
(iew) 408.56 317.65 T
313.08 399.48 457.08 426.67 R
7 X
V
0 X
N
(HorizRulerV) 348.37 410.18 T
(iew) 406.24 410.18 T
268.17 262.83 294.08 379.83 R
7 X
V
0 X
N
268.17 399.67 294.08 426.67 R
7 X
V
0 X
N
(CornerV) 186.22 408.22 T
(iew) 224.29 408.22 T
(T) 304.82 449.38 T
(opInteraction) 310.78 449.38 T
(BottomInteraction) 246.26 233.88 T
(V) 181.6 323.38 T
(ertRulerV) 187.35 323.38 T
(iew) 231.9 323.38 T
259.33 255 465.17 384.17 R
N
259.33 393.33 465.17 431.67 R
N
262.8 415.85 268.17 413.17 263.16 409.86 262.98 412.85 4 Y
V
243.5 411.67 262.98 412.85 2 L
2 Z
N
392.51 437.39 394.33 431.67 388.47 432.95 390.49 435.17 4 Y
V
375.17 449.17 390.5 435.17 2 L
N
263.85 325.51 268.16 321.34 262.4 319.69 263.12 322.6 4 Y
V
250.17 325.83 263.13 322.59 2 L
N
356.26 254.7 362.25 255 359.52 249.66 357.89 252.18 4 Y
V
332.67 235.83 357.89 252.17 2 L
N
81 144 531 648 C
36 72 576 720 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1226" 18
%%Page: "1227" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Basic Use) 491.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1227) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(A simple usage of the spreadsheet objects is shown in Code Display) 180 641.33 T
(20-) 493.37 641.33 T
(2 on) 507.82 641.33 T
(page) 180 628.33 T
2 F
(u) 204.45 628.33 T
1 F
(1227. The arrangement of objects can be confusing; Figure) 215.11 628.33 T
(20-) 487.55 628.33 T
(1 on) 502 628.33 T
-0.25 (page) 180 615.33 P
2 F
-0.25 (u) 204.45 615.33 P
1 F
-0.25 (1226 is a diagram of the various GenV) 215.11 615.33 P
-0.25 (iews and GenInteractions and) 390.34 615.33 P
(how they are arranged.) 180 602.33 T
81 569.98 531 582 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 569.98 531 582 R
7 X
0 0 0 1 0 0 0 K
V
76.5 577.23 617.5 580.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Code Display) 81 563.31 T
(20-) 147.13 563.31 T
(2 Declaring the Spreadsheet Objects) 161.58 563.31 T
4 9 Q
(/* First, we declare the Generic UI objects. These will be run by the UI thread.) 81 548.98 T
( * Not all of the application\325s objects are shown here. */) 81 537.98 T
(@start Interface;) 81 519.98 T
(/* The SSEditBarControl is the child of an edit menu. It is declared just like any) 81 501.98 T
( * other controller. */) 81 490.98 T
(@object SampleEditBarControl SSEditBarControl = {) 81 479.98 T
(GI_visMoniker = "Edit bar";) 102.6 468.98 T
(GI_visibility = dialog;) 102.6 457.98 T
(HINT_EXPAND_WIDTH_TO_FIT_PARENT;) 102.6 446.98 T
(HINT_GEN_CONTROL_USE_DEFAULT_TOOLS;) 102.6 435.98 T
(}) 81 424.98 T
(@end Interface) 81 406.98 T
(/*****************************************************************************) 81 388.98 T
( *) 81 377.98 T
(View Objects) 125 377.98 T
( *****************************************************************************/) 81 366.98 T
(/* All of the views will be in a single resource. They will children of the) 81 348.98 T
( * GenPrimary; GenInteraction objects are used to arrange the objects on the) 81 337.98 T
( * screen. */) 81 326.98 T
(@start ViewResource;) 81 308.98 T
(/* This constant is used for sizing. */) 81 290.98 T
(#define RULER_WIDTH) 81 279.98 T
(40) 212.5 279.98 T
(#define DOCUMENT_WIDTH) 81 268.98 T
(MAX_COORD) 212.5 268.98 T
(#define DOCUMENT_HEIGHT) 81 257.98 T
(MAX_COORD) 212.5 257.98 T
(/* This GenInteraction contains all the Spreadsheet view objects. */) 81 221.98 T
(@object GenInteractionClass SampleOuterInteraction = {) 81 210.98 T
(GI_comp = TopInteraction, BottomInteraction;) 102.6 199.98 T
(HINT_ORIENT_CHILDREN_VERTICALLY;) 102.6 188.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1227" 19
%%Page: "1228" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1228) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(HINT_MINIMIZE_CHILD_SPACING;) 102.6 642 T
(HINT_EXPAND_WIDTH_TO_FIT_PARENT;) 102.6 631 T
(HINT_EXPAND_HEIGHT_TO_FIT_PARENT;) 102.6 620 T
(}) 81 609 T
(/* This GenInteraction contains the horizontal ruler view, as well as a) 81 591 T
( * space-filling corner view. */) 81 580 T
(@object GenInteractionClass TopInteraction = {) 81 569 T
(GI_comp = CornerView, HorizRulerView;) 102.6 558 T
(HINT_ORIENT_CHILDREN_HORIZONTALLY;) 102.6 547 T
(HINT_MINIMIZE_CHILD_SPACING;) 102.6 536 T
(HINT_EXPAND_WIDTH_TO_FIT_PARENT;) 102.6 525 T
(}) 81 514 T
(/* This GenInteraction contains the vertical ruler view and the Spreadsheet) 81 496 T
( * object\325s view. */) 81 485 T
(@object GenInteractionClass BottomInteraction = {) 81 474 T
(GI_comp = VertRulerView, SpreadsheetView;) 102.6 463 T
(HINT_ORIENT_CHILDREN_HORIZONTALLY;) 102.6 452 T
(HINT_MINIMIZE_CHILD_SPACING;) 102.6 441 T
(HINT_EXPAND_WIDTH_TO_FIT_PARENT;) 102.6 430 T
(HINT_EXPAND_HEIGHT_TO_FIT_PARENT;) 102.6 419 T
(}) 81 408 T
(/* The CornerView is used to make the space where the horizontal and vertical) 81 390 T
( * rulers meet. */) 81 379 T
(@object GenViewClass CornerView = {) 81 368 T
(GI_attrs = @default & ~GA_TARGETABLE;) 102.6 357 T
(GVI_attrs = @default | GVA_SAME_COLOR_AS_PARENT_WIN;) 102.6 346 T
(GVI_horizAttrs = @default | GVDA_NO_LARGER_THAN_CONTENT;) 102.6 335 T
(GVI_vertAttrs = @default | GVDA_NO_LARGER_THAN_CONTENT;) 102.6 324 T
(ATTR_GEN_VIEW_PAGE_SIZE = {RULER_WIDTH, RULER_WIDTH};) 102.6 313 T
(HINT_FIXED_SIZE = {HEADER_WIDTH, HEADER_WIDTH, 0};) 102.6 302 T
(}) 81 291 T
(/* These RulerViews are used to display the spreadsheet rulers. */) 81 273 T
(@object RulerViewClass HorizRulerView = {) 81 255 T
(ATTR_GEN_VIEW_PAGE_SIZE = {DOCUMENT_WIDTH, RULER_WIDTH};) 102.6 244 T
(HINT_FIXED_SIZE {0, HEADER_HEIGHT, 0};) 102.6 233 T
(GVI_content = HorizRulerContent;) 102.6 222 T
(}) 81 211 T
(@object RulerViewClass VertRulerView = {) 81 193 T
(ATTR_GEN_VIEW_PAGE_SIZE = {RULER_WIDTH, DOCUMENT_HEIGHT};) 102.6 182 T
(HINT_FIXED_SIZE {0, HEADER_HEIGHT, 0};) 102.6 171 T
(GVI_content = VertRulerContent;) 102.6 160 T
(}) 81 149 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1228" 20
%%Page: "1229" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Basic Use) 491.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1229) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* The spreadsheet is displayed in its own view. The content of this view is the) 81 642 T
( * spreadsheet object itself. As explained in section 20.3.3 on page 1234, this) 81 631 T
( * view must have a special handler for MSG_META_KBD_CHAR; for this reason, we use) 81 620 T
( * a subclass of GenViewClass. */) 81 609 T
(@object SampleSpreadsheetViewClass SpreadsheetView = {) 81 598 T
(GVI_attrs = @default | GVA_CONTROLLED | GVA_DONT_SEND_POINTER_RELEASES) 102.6 587 T
(| GVA_DRAG_SCROLLING | GVA_WINDOW_COORDINATE_MOUSE_EVENTS;) 168.98 576 T
(GVI_horizAttrs = @default | GVDA_SCROLLABLE;) 102.6 558 T
(GVI_vertAttrs = @default | GVDA_SCROLLABLE;) 102.6 547 T
(ATTR_GEN_VIEW_PAGE_SIZE = {DOCUMENT_WIDTH, DOCUMENT_HEIGHT};) 102.6 536 T
(HINT_DEFAULT_FOCUS;) 102.6 525 T
(HINT_DEFAULT_TARGET;) 102.6 514 T
(GVI_CONTENT = SampleSpreadsheet;) 102.6 503 T
(}) 81 492 T
(@end ViewResource) 81 474 T
(/*****************************************************************************) 81 456 T
( *) 81 445 T
(Vis Objects) 125 445 T
( *****************************************************************************/) 81 434 T
(/* These are the actual spreadsheet objects, as well as the contents in which the) 81 416 T
( * rulers are displayed. The spreadsheet object is itself a subclass of) 81 405 T
( * VisContent, so it need not be a child of a content. This resource is generally) 81 394 T
( * run by the application thread. */) 81 383 T
(@start VisResource;) 81 365 T
(/* The spreadsheet object can generally be left with its default settings. */) 81 347 T
(@object SpreadsheetClass SampleSpreadsheet = {) 81 336 T
(VI_bounds = {0,0,DOCUMENT_WIDTH, DOCUMENT_HEIGHT};) 102.6 325 T
(VI_attrs = @default & ~VA_MANAGED;) 102.6 314 T
(VI_optFlags = @default & ~VOF_GEOMETRY_INVALID & ~VOF_GEO_UPDATE_PATH;) 102.6 303 T
(SSI_drawFlags = SDF_DRAW_GRID | SDF_DRAW_NOTE_BUTTON;) 102.6 292 T
(SSI_ruler = HorizRuler;) 102.6 281 T
(}) 81 270 T
(/* Each ruler object is the child of a ruler content. */) 81 252 T
(@object RulerContentClass HorizRulerContent = {) 81 241 T
(VI_bounds = {0,0, DOCUMENT_WIDTH, RULER_WIDTH};) 102.6 230 T
(VI_attrs = @default & ~VA_MANAGED;) 102.6 219 T
(VI_optFlags = @default & ~VOF_GEOMETRY_INVALID & ~VOF_GEO_UPDATE_PATH;) 102.6 208 T
(VCI_comp = HorizRuler;) 102.6 197 T
(VCNI_attrs = VCNA_SAME_HEIGHT_AS_VIEW | VCNA_LARGE_DOCUMENT_MODEL \134) 102.6 186 T
(| VCNA_WINDOW_COORDINATE_MOUSE_EVENTS;) 168.98 175 T
(}) 81 164 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1229" 21
%%Page: "1230" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1230) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 9 Q
0 X
(/* We declare the HorizRuler as the \322master\323 ruler; the spreadsheet sends messages) 81 642 T
( * to it, and it relays them to the \322slave\323 VertRuler. \050It could as easily have) 81 631 T
( * been the other way around.\051 */) 81 620 T
(@object SpreadsheetRulerClass HorizRuler = {) 81 609 T
(VRI_type = VRT_CUSTOM;) 102.6 598 T
(VI_bounds = {0, 0, DOCUMENT_WIDTH, RULER_WIDTH};) 102.6 587 T
(VI_attrs = @default & ~ VA_MANAGED;) 102.6 576 T
(VI_optFlags = @default & ~VOF_GEOMETRY_INVALID & ~VOF_GEO_UPDATE_PATH;) 102.6 565 T
(SRI_spreadsheet = SampleSpreadsheet;) 102.6 554 T
(VRI_slave = VertRuler;) 102.6 543 T
(VRI_rulerAttrs = @default & ~\050VRA_SHOW_GRID | VRA_SHOW_MOUSE | VRA_HORIZONTAL\051;) 102.6 532 T
(}) 81 521 T
(/* This is the content object for the vertical ruler. */) 81 503 T
(@object RulerContentClass VertRulerContent = {) 81 492 T
(VI_bounds = {0,0, RULER_WIDTH, DOCUMENT_HEIGHT};) 102.6 481 T
(VI_attrs = @default & ~VA_MANAGED;) 102.6 470 T
(VI_optFlags = @default & ~VOF_GEOMETRY_INVALID & ~VOF_GEO_UPDATE_PATH;) 102.6 459 T
(VCI_comp = HorizRuler;) 102.6 448 T
(VCNI_rulerAttrs = VCNA_SAME_WIDTH_AS_VIEW | VCNA_LARGE_DOCUMENT_MODEL \134) 102.6 437 T
( | VCNA_WINDOW_COORDINATE_MOUSE_EVENTS;) 168.98 426 T
(}) 81 415 T
(/* We declare the VertRuler as the \322slave\323 ruler; it will get its messages from) 81 397 T
( * the \322master\323 HorizRuler. \050It could as easily have been the other way around.\051 */) 81 386 T
(@object SpreadsheetRulerClass VertRuler = {) 81 375 T
(VRI_type = VRT_CUSTOM;) 102.6 364 T
(VI_bounds = {0, 0, RULER_WIDTH, DOCUMENT_HEIGHT};) 102.6 353 T
(VI_attrs = @default & ~ VA_MANAGED;) 102.6 342 T
(VI_optFlags = @default & ~VOF_GEOMETRY_INVALID & ~VOF_GEO_UPDATE_PATH;) 102.6 331 T
(SRI_spreadsheet = SampleSpreadsheet;) 102.6 320 T
(VRI_rulerAttrs = \134) 102.6 309 T
(\050@default & ~\050VRA_SHOW_GRID | VRA_SHOW_MOUSE\051\051 | VRA_HORIZONTAL;) 125 298 T
(}) 81 287 T
(@end VisResource) 81 269 T
81 244.98 531 257 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.98 531 257 R
7 X
0 0 0 1 0 0 0 K
V
76.5 252.23 617.5 255.73 R
4 X
V
0.5 H
0 Z
N
36 72 576 720 C
0 14 Q
0 X
0 0 0 1 0 0 0 K
(20.3.2) 123.08 204.98 T
0 18 Q
(W) 180 204.98 T
(orking with Files) 196.67 204.98 T
4 10 Q
(SpreadsheetInitFile\050\051, SpreadsheetInitFileData,) 180 181.31 T
(MSG_SPREADSHEET_ATTACH_FILE, MSG_SPREADSHEET_GET_FILE,) 180 168.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1230" 22
%%Page: "1231" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Basic Use) 491.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1231) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
4 10 Q
0 X
(MSG_SPREADSHEET_READ_CACHED_DATA,) 180 641.33 T
(MSG_SPREADSHEET_WRITE_CACHED_DATA) 180 628.33 T
1 F
(The spreadsheet objects work with \336les almost transparently to the) 180 608.33 T
(application. The application need only take a few steps to set things up and) 180 595.33 T
(keep them working.) 180 582.33 T
-0.49 (When an application creates a new spreadsheet \336le, it must \336rst create a) 180 562.33 P
1 9 Q
-0.44 (VM) 513.71 562.33 P
1 10 Q
-0.15 (\336le, and then call) 180 549.33 P
3 F
-0.15 (SpreadsheetInitFile\050\051) 262.38 549.33 P
1 F
-0.15 (. This routine initializes a cell \336le) 374.23 549.33 P
-0.76 (in the) 180 536.33 P
1 9 Q
-0.69 (VM) 208.3 536.33 P
1 10 Q
-0.76 ( \336le; it also sets up the spreadsheet map block. It returns the handle) 223.29 536.33 P
(of the spreadsheet map block; applications must store this, since they will) 180 523.33 T
(need to pass it when they want to attach the \336le.) 180 510.33 T
3 F
(SpreadsheetInitFile\050\051) 180 490.33 T
1 F
( takes one argument: a pointer to a) 291.85 490.33 T
3 F
(SpreadsheetInitFileData) 180 477.33 T
1 F
( structure.) 308.88 477.33 T
3 F
(SpreadsheetInitFileData) 360.17 477.33 T
1 F
( has the) 489.05 477.33 T
(following \336elds:) 180 464.33 T
4 F
(typedef struct {) 216 448.33 T
(VMFileHandle) 252 435.33 T
(SIFD_file;) 360 435.33 T
(word) 252 422.33 T
(SIFD_numRows;) 360 422.33 T
(word) 252 409.33 T
(SIFD_numCols;) 360 409.33 T
(} SpreadsheetInitFileData;) 216 396.33 T
5 9 Q
(SIFD) 180 376.33 T
5 10 Q
(_\336le) 202.67 376.33 T
1 F
(This is the) 243 376.33 T
1 9 Q
(VM) 294.68 376.33 T
1 10 Q
( handle of the spreadsheet \336le.) 309.67 376.33 T
5 9 Q
(SIFD) 180 357.33 T
5 10 Q
(_numRows) 202.67 357.33 T
1 F
(This is the number of rows in the spreadsheet. It is ordinarily) 243 345.33 T
-0.32 (equal to the spreadsheet\325) 243 333.33 P
-0.32 (s instance data \336eld) 357.07 333.33 P
5 9 Q
-0.29 (SSI) 451.19 333.33 P
5 10 Q
-0.32 (_maxRow) 466.86 333.33 P
1 F
-0.32 ( + 1.) 511.67 333.33 P
5 9 Q
(SIFD) 180 314.33 T
5 10 Q
(_numCols) 202.67 314.33 T
1 F
(This is the number of columns in the spreadsheet. It is) 243 302.33 T
(ordinarily equal to the spreadsheet\325) 243 290.33 T
(s instance data \336eld) 406.91 290.33 T
5 9 Q
(SSI) 243 278.33 T
5 10 Q
(_maxCol) 258.67 278.33 T
1 F
( + 1.) 298.85 278.33 T
(When an application has just initialized a new spreadsheet \336le or opened a) 180 259.33 T
(pre-existing one, it must attach the \336le to the spreadsheet object. The) 180 246.33 T
-0.69 (application can do this by sending) 180 233.33 P
1 9 Q
-0.62 (MSG_SPREADSHEET_A) 335.67 233.33 P
-0.62 (TT) 442.18 233.33 P
-0.62 (ACH_FILE) 453.69 233.33 P
1 10 Q
-0.69 ( to the) 500.85 233.33 P
-0.37 (spreadsheet object. This message takes two arguments: the) 180 220.33 P
1 9 Q
-0.33 (VM) 453.76 220.33 P
1 10 Q
-0.37 ( \336le\325) 468.76 220.33 P
-0.37 (s handle,) 487.1 220.33 P
-0.47 (and the VMBlockHandle of the spreadsheet map block. The spreadsheet will) 180 207.33 P
(copy appropriate information from the spreadsheet map block into its own) 180 194.33 T
(instance data and will display the visible cells. Y) 180 181.33 T
(ou can \336nd out what \336le is) 403.95 181.33 T
(attached by sending) 180 168.33 T
1 9 Q
(MSG_SPREADSHEET_GET_FILE) 275.57 168.33 T
1 10 Q
( to the spreadsheet) 422.24 168.33 T
(object; this message returns the \336le\325) 180 155.33 T
(s handle.) 345.94 155.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1231" 23
%%Page: "1232" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1232) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
-0.19 (When you save the) 180 641.33 P
1 9 Q
-0.18 (VM) 269.41 641.33 P
1 10 Q
-0.19 ( \336le, you must make sure that the spreadsheet copies) 284.4 641.33 P
-0.17 (all of its cached data to the \336le. That way the spreadsheet will be able to get) 180 628.33 P
(up-to-date information when it restarts. T) 180 615.33 T
(o do this, send the message) 373.17 615.33 T
1 9 Q
-0.3 (MSG_SPREADSHEET_WRITE_CACHED_DA) 180 602.33 P
-0.3 (T) 374.49 602.33 P
-0.3 (A) 380 602.33 P
1 10 Q
-0.33 ( to the spreadsheet object. This) 386.5 602.33 P
-0.24 (message takes one argument, namely the handle of the) 180 589.33 P
1 9 Q
-0.21 (VM) 435.31 589.33 P
1 10 Q
-0.24 ( \336le. This may be) 450.31 589.33 P
(a new \336le if, for example, you are performing a \322save-as\323 operation; the) 180 576.33 T
-0.57 (spreadsheet will assume that the \336le handle you pass supersedes its existing) 180 563.33 P
(\336le handle. Applications which use the Document Control objects should) 180 550.33 T
(send this message in their handlers for) 180 537.33 T
1 9 Q
(MSG_GEN_DOCUMENT_WRITE_CACHED_DA) 180 524.33 T
(T) 385.66 524.33 T
(A_TO_FILE) 391.17 524.33 T
1 10 Q
( \050see) 441.84 524.33 T
(\322GenDocument,\323 Chapter) 180 511.33 T
(13\051.) 300.19 511.33 T
(At times, you may need to instruct the spreadsheet objects to reread its) 180 491.33 T
-0.12 (cached data from the \336le. For example, if you revert the \336le to its last-saved) 180 478.33 P
-0.49 (state, the spreadsheet will have to reread all its cached data. T) 180 465.33 P
-0.49 (o do this, send) 464.08 465.33 P
1 9 Q
(MSG_SPREADSHEET_READ_CACHED_DA) 180 452.33 T
(T) 369.49 452.33 T
(A) 375 452.33 T
1 10 Q
( to the spreadsheet object. This) 381.5 452.33 T
(message takes two arguments: the \336le handle, and the spreadsheet map) 180 439.33 T
(block\325) 180 426.33 T
(s) 205.75 426.33 T
3 F
(VMBlockHandle) 213.16 426.33 T
1 F
(. These supercede the handles stored in the) 297.79 426.33 T
(spreadsheet\325) 180 413.33 T
(s instance data. The spreadsheet responds to this message by) 237.41 413.33 T
(opening the speci\336ed map block and rereading its instance data from this) 180 400.33 T
-0.55 (block. Applications which use the Document Control objects should send this) 180 387.33 P
(message in their handlers for) 180 374.33 T
1 9 Q
(MSG_GEN_DOCUMENT_READ_CACHED_DA) 180 361.33 T
(T) 380.66 361.33 T
(A_FROM_FILE) 386.17 361.33 T
1 10 Q
(.) 451.84 361.33 T
81 344.99 531 350 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.99 531 350 R
7 X
0 0 0 1 0 0 0 K
V
50 348.99 609.01 348.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 336.99 T
0 F
(MSG_SPREADSHEET_A) 99 336.99 T
(TT) 237.47 336.99 T
(ACH_FILE) 251.24 336.99 T
6 10 Q
(void) 99 322.33 T
4 F
(MSG_SPREADSHEET_ATTACH_FILE\050) 153 322.33 T
4 9 Q
(VMBlockHandle) 153 311.99 T
(mapBlockHandle,) 261 311.99 T
(VMFileHandle) 153 301.99 T
(fileHandle\051;) 261 301.99 T
1 10 Q
-0.26 (This message instructs a spreadsheet object to attach itself to a spreadsheet) 180 284.33 P
(\336le. The spreadsheet object will copy the appropriate information from the) 180 271.33 T
(speci\336ed map block into its own instance data. Applications must send this) 180 258.33 T
(when they open any spreadsheet \336le, whether a newly-initialized one or a) 180 245.33 T
(pre-existing one.) 180 232.33 T
0 9 Q
(Source:) 153 215.33 T
1 10 Q
(Unrestricted.) 207 215.33 T
0 9 Q
(Destination:) 153 198.33 T
1 10 Q
(Any Spreadsheet object.) 207 198.33 T
0 9 Q
(Parameters:) 153 181.33 T
5 10 Q
(mapBlockHandle) 207 181.33 T
1 F
-0.48 (The VMBlockHandle of the spreadsheet map block.) 297 181.33 P
5 F
(\336leHandle) 207 165.33 T
1 F
(The VMFileHandle of the spreadsheet \336le.) 297 165.33 T
0 9 Q
(Interception:) 153 148.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 148.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1232" 24
%%Page: "1233" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Basic Use) 491.08 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1233) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.3) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(MSG_SPREADSHEET_GET_FILE) 99 634.99 T
6 10 Q
(VMFileHandle) 99 620.33 T
4 F
( MSG_SPREADSHEET_GET_FILE\050\051) 171 620.33 T
1 F
-0.23 (This message returns the VMFileHandle of the \336le attached to the recipient) 180 602.33 P
(Spreadsheet object.) 180 589.33 T
0 9 Q
(Source:) 153 572.33 T
1 10 Q
(Unrestricted.) 207 572.33 T
0 9 Q
(Destination:) 153 555.33 T
1 10 Q
(Any Spreadsheet object.) 207 555.33 T
0 9 Q
(Parameters:) 153 538.33 T
1 10 Q
(None.) 207 538.33 T
0 9 Q
(Return:) 153 521.33 T
1 10 Q
(The VMFileHandle of the attached \336le.) 207 521.33 T
0 9 Q
(Interception:) 153 504.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 504.33 T
81 487.98 531 492.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 487.98 531 492.99 R
7 X
0 0 0 1 0 0 0 K
V
50 491.98 609.01 491.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 479.98 T
0 F
(MSG_SPREADSHEET_READ_CACHED_DA) 99 479.98 T
(T) 344.8 479.98 T
(A) 351.24 479.98 T
6 10 Q
(void) 99 465.32 T
4 F
(MSG_SPREADSHEET_READ_CACHED_DATA\050) 153 465.32 T
4 9 Q
(VMFileHandle) 153 454.98 T
(fileHandle,) 261 454.98 T
(VMBlockHandle) 153 444.98 T
(mapBlockHandle\051;) 261 444.98 T
1 10 Q
-0.32 (This message instructs a spreadsheet object to read its cached data from the) 180 427.32 P
(speci\336ed \336le and block. The handles passed supersede the handles in the) 180 414.32 T
(Spreadsheet object\325) 180 401.32 T
(s instance data. Applications which use the Document) 268.71 401.32 T
(Control should send this message in their handlers for) 180 388.32 T
1 9 Q
(MSG_GEN_DOCUMENT_READ_CACHED_DA) 180 375.32 T
(T) 380.66 375.32 T
(A_FROM_FILE) 386.17 375.32 T
1 10 Q
(.) 451.84 375.32 T
0 9 Q
(Source:) 153 358.32 T
1 10 Q
(Unrestricted.) 207 358.32 T
0 9 Q
(Destination:) 153 341.32 T
1 10 Q
(Any Spreadsheet object.) 207 341.32 T
0 9 Q
(Parameters:) 153 324.32 T
5 10 Q
(\336leHandle) 207 324.32 T
1 F
(The VMFileHandle of the spreadsheet \336le.) 297 324.32 T
5 F
(mapBlockHandle) 207 308.32 T
1 F
-0.48 (The VMBlockHandle of the spreadsheet map block.) 297 308.32 P
0 9 Q
(Interception:) 153 291.32 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 291.32 T
81 274.98 531 279.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 274.98 531 279.98 R
7 X
0 0 0 1 0 0 0 K
V
50 278.98 609.01 278.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 266.97 T
0 F
(MSG_SPREADSHEET_WRITE_CACHED_DA) 99 266.97 T
(T) 349.46 266.97 T
(A) 355.91 266.97 T
6 10 Q
(void) 99 252.31 T
4 F
(MSG_SPREADSHEET_WRITE_CACHED_DATA\050) 153 252.31 T
4 9 Q
(VMFileHandle) 153 241.97 T
(file\051;) 261 241.97 T
1 10 Q
-0.75 (This message instructs the spreadsheet object to write any cached data to the) 180 224.31 P
(spreadsheet \336le. The \336le handle passed supersedes any \336le handle in the) 180 211.31 T
(spreadsheet\325) 180 198.31 T
(s instance data. Applications which use the Document Control) 237.41 198.31 T
(should send this message in their handlers for) 180 185.31 T
1 9 Q
(MSG_GEN_DOCUMENT_READ_CACHED_DA) 180 172.31 T
(T) 380.66 172.31 T
(A_FROM_FILE) 386.17 172.31 T
1 10 Q
(.) 451.84 172.31 T
0 9 Q
(Source:) 153 155.31 T
1 10 Q
(Unrestricted.) 207 155.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1233" 25
%%Page: "1234" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1234) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.3) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 9 Q
0 X
(Destination:) 153 641.33 T
1 10 Q
(Any Spreadsheet object.) 207 641.33 T
0 9 Q
(Parameters:) 153 624.33 T
5 10 Q
(\336leHandle) 207 624.33 T
1 F
(The VMFileHandle of the spreadsheet \336le.) 297 624.33 T
0 9 Q
(Interception:) 153 607.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 607.33 T
0 14 Q
(20.3.3) 123.08 565 T
0 18 Q
(Interacting with the Edit Bar) 180 565 T
1 10 Q
(The spreadsheet and the edit bar will work together with very little) 180 541.33 T
(intervention from the application. There is only one task which the) 180 528.33 T
(application needs see to personally) 180 515.33 T
(.) 339.65 515.33 T
(When the user) 180 495.33 T
(\325) 248.32 495.33 T
(s focus is on the spreadsheet, some of the keypresses will be) 249.99 495.33 T
-0.09 (for navigation; for example, the arrow keys change the active cell. However) 180 482.33 P
-0.09 (,) 525.53 482.33 P
(some keypresses will be intended for the formula bar) 180 469.33 T
(. For example, if the) 423.73 469.33 T
(focus is on the spreadsheet and the user types \322=2+2\323, the user expects this) 180 456.33 T
-0.24 (to be entered in the formula bar; he will not want to have to click on the edit) 180 443.33 P
-0.31 (bar every time he wants to enter a formula. The application must determine) 180 430.33 P
(if a keypress is intended for the spreadsheet or the edit bar) 180 417.33 T
(.) 452.43 417.33 T
(For this reason, the application should de\336ne a subclass of) 180 397.33 T
3 F
(GenV) 453 397.33 T
(iewClass) 481.07 397.33 T
1 F
(and have the spreadsheet displayed in one of these objects. The subclass) 180 384.33 T
(needs only one new thing: a handler for) 180 371.33 T
1 9 Q
(MSG_MET) 365.2 371.33 T
(A_KBD_CHAR) 411.37 371.33 T
1 10 Q
(. When the) 474.36 371.33 T
-0.15 (view receives this message, it should decide whether to transfer the focus to) 180 358.33 P
-0.32 (the edit bar) 180 345.33 P
-0.32 (. If the character is a keyboard accelerator) 232.53 345.33 P
-0.32 (, a navigational key) 424.95 345.33 P
-0.32 (, or) 513.85 345.33 P
(a key release, for example, the method should simply call its superclass) 180 332.33 T
(method. However) 180 319.33 T
(, if the keypress is intended for the edit bar \050i.e. if it is an) 260.37 319.33 T
(alphanumeric or punctuation character\051 the handler should send) 180 306.33 T
1 9 Q
(MSG_SSEBC_INITIAL_KEYPRESS) 180 293.33 T
1 10 Q
( to the edit bar) 332.51 293.33 T
(. This message takes the) 400.11 293.33 T
(same arguments as) 180 280.33 T
1 9 Q
(MSG_MET) 272.61 280.33 T
(A_KBD_CHAR) 318.78 280.33 T
1 10 Q
(, so the) 381.77 280.33 T
1 9 Q
(MSG_MET) 417.52 280.33 T
(A_KBD_CHAR) 463.69 280.33 T
1 10 Q
-0.75 (handler can simply pass its own arguments along. When the edit bar receives) 180 267.33 P
-0.82 (this message, it will take the focus away from the spreadsheet\325) 180 254.33 P
-0.82 (s view) 460.73 254.33 P
-0.82 (, and will) 487.7 254.33 P
-0.5 (process that keypress and all succeeding keypresses until a navigational key) 180 241.33 P
(is pressed. At that time, it will return the focus to the spreadsheet\325) 180 228.33 T
(s view) 487.44 228.33 T
(.) 515.23 228.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1234" 26
%%Page: "1235" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Other Spreadsheet Controllers) 354.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1235) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(MSG_SSEBC_INITIAL_KEYPRESS) 99 634.99 T
6 10 Q
(void) 99 620.33 T
4 F
(MSG_SSEBC_INITIAL_KEYPRESS\050) 153 620.33 T
4 9 Q
(word) 153 609.99 T
(character,) 189 609.99 T
(word) 153 599.99 T
(flags,) 189 599.99 T
(word) 153 589.99 T
(state\051;) 189 589.99 T
1 10 Q
(Spreadsheet objects are put in a subclass of) 180 572.33 T
3 F
(GenV) 383.73 572.33 T
(iewClass) 411.8 572.33 T
1 F
(. When this) 457.54 572.33 T
(subclassed V) 180 559.33 T
(iew receives a keypress \050via) 239.01 559.33 T
1 9 Q
(MSG_MET) 369.58 559.33 T
(A_KBD_CHAR) 415.75 559.33 T
1 10 Q
(\051, it must) 478.74 559.33 T
(decide whether to process the keypress itself \050by calling the superclass\325) 180 546.33 T
-0.49 (handler for) 180 533.33 P
1 9 Q
-0.44 (MSG_MET) 233.46 533.33 P
-0.44 (A_KBD_CHAR) 279.63 533.33 P
1 10 Q
-0.49 (\051 or hand the keypress and the focus over) 342.62 533.33 P
-0.47 (to the spreadsheet edit bar) 180 520.33 P
-0.47 (. This message gives the keypress and the focus to) 301.45 520.33 P
(the edit bar) 180 507.33 T
(.) 233.16 507.33 T
(The arguments are the same as those to) 180 487.33 T
1 9 Q
(MSG_MET) 367.81 487.33 T
(A_KBD_CHAR) 413.98 487.33 T
1 10 Q
(. Thus, the) 476.97 487.33 T
(V) 180 474.33 T
(iew can simply pass along the arguments it received with) 186.78 474.33 T
1 9 Q
(MSG_MET) 180 461.33 T
(A_KBD_CHAR) 226.17 461.33 T
1 10 Q
(.) 289.16 461.33 T
0 9 Q
(Source:) 153 444.33 T
1 10 Q
-0.11 (Subclass of) 207 444.33 P
3 F
-0.11 (GenV) 261.06 444.33 P
-0.11 (iewClass) 289.13 444.33 P
1 F
-0.11 ( whose content is Spreadsheet object; sent) 334.87 444.33 P
(by handler for) 207 431.33 T
1 9 Q
(MSG_MET) 275.15 431.33 T
(A_KBD_CHAR) 321.32 431.33 T
1 10 Q
(.) 384.31 431.33 T
0 9 Q
(Destination:) 153 414.33 T
1 10 Q
(SSEditBarControl object.) 207 414.33 T
0 9 Q
(Parameters:) 153 397.33 T
5 10 Q
(character) 207 397.33 T
1 F
(Key which was pressed. This is the) 297 397.33 T
5 F
(character) 461.47 397.33 T
1 F
(argument to) 297 384.33 T
1 9 Q
(MSG_MET) 356.82 384.33 T
(A_KBD_CHAR.) 402.99 384.33 T
5 10 Q
(\337ags) 207 368.33 T
1 F
(Character \337ags and shift state. This is the) 297 368.33 T
5 F
(\337ags) 495.18 368.33 T
1 F
(argument to) 297 355.33 T
1 9 Q
(MSG_MET) 356.82 355.33 T
(A_KBD_CHAR) 402.99 355.33 T
1 10 Q
(.) 465.98 355.33 T
5 F
(state) 207 339.33 T
1 F
(T) 297 339.33 T
(oggleState and scan code. This is the) 302.75 339.33 T
5 F
(state) 475.19 339.33 T
1 F
(argument to) 297 326.33 T
1 9 Q
(MSG_MET) 356.82 326.33 T
(A_KBD_CHAR) 402.99 326.33 T
1 10 Q
(.) 465.98 326.33 T
0 9 Q
(Return:) 153 309.33 T
1 10 Q
(Nothing.) 207 309.33 T
0 9 Q
(Interception:) 153 292.33 T
1 10 Q
(This message is not ordinarily subclassed.) 207.5 292.33 T
0 14 Q
(20.4) 134.76 239.99 T
0 24 Q
(Other Spreadsheet Controllers) 180 239.99 T
1 10 Q
-0.09 (The Spreadsheet Library provides several controllers which are designed to) 180 214.33 P
-0.79 (work with the Spreadsheet objects. These controllers act transparently to the) 180 201.33 P
-0.17 (application; you need merely declare them in your source code, and the user) 180 188.33 P
(will be able to use them to modify the spreadsheet at will. All of these) 180 175.33 T
(controllers should be on the application\325) 180 162.33 T
(s) 363.72 162.33 T
1 9 Q
(GAGCNL) 371.13 162.33 T
(T_SELF_LOAD_OPTIONS) 410.97 162.33 T
(GCN) 180 149.33 T
1 10 Q
( list.) 200.84 149.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1235" 27
%%Page: "1236" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1236) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
1 10 Q
0 X
(Other controllers are continually being added; as new ones are written,) 180 641.33 T
(applications will be able to incorporate them easily into existing) 180 628.33 T
(spreadsheets.) 180 615.33 T
0 14 Q
(20.4.1) 123.08 573 T
0 18 Q
(The SSEditControl) 180 573 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
(This object implements the) 180 542.33 T
1 9 Q
(UI) 307.98 542.33 T
1 10 Q
( for clearing, inserting, and deleting cells.) 318.98 542.33 T
0 14 Q
(20.4.2) 123.08 500 T
0 18 Q
(Notes and SSNoteControlClass) 180 500 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
-0.12 (Every cell in a spreadsheet actually contains two pieces of information. One) 180 469.33 P
(of these is the cell\325) 180 456.33 T
(s number) 264.27 456.33 T
(, string, or formula. It is this which is displayed) 307.05 456.33 T
-0.22 (in the spreadsheet window and in the formula bar; when we speak of a cell\325) 180 443.33 P
-0.22 (s) 523.81 443.33 P
-0.5 (value, we mean the cell\325) 180 430.33 P
-0.5 (s number or string, or the value to which the formula) 287.82 430.33 P
(evaluates.) 180 417.33 T
(However) 180 397.33 T
(, every cell can have another piece of information, namely a) 220.18 397.33 T
5 F
(note) 497.43 397.33 T
1 F
(.) 516.5 397.33 T
(The note is a null-terminated text string. The note does not have any effect) 180 384.33 T
(on the cell\325) 180 371.33 T
(s value; it is used entirely for commenting.) 229.08 371.33 T
(If you declare an SSNoteControl object, the user will be able to see and) 180 351.33 T
(change the notes. The SSNoteControl is much like the formula bar; it) 180 338.33 T
(automatically displays the note for the active cell, and the user will be able) 180 325.33 T
(to change it at will.) 180 312.33 T
0 14 Q
(20.4.3) 123.08 270 T
0 18 Q
(Row and Column Size) 180 270 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
(Most spreadsheets will want to use the SSRowHeightControl and) 180 239.33 T
(SSColumnW) 180 226.33 T
(idthControl objects. These objects allow the user to change the) 238.52 226.33 T
(height and width of the cells. As with the other controllers, these act) 180 213.33 T
(transparently to the application.) 180 200.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1236" 28
%%Page: "1237" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Other Spreadsheet Controllers) 354.17 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(1237) 535.76 671.34 T
324 684 580 684 2 L
7 X
V
3 H
2 Z
0 X
N
495 90 558 125 R
7 X
V
2 60 Q
0 X
(u) 502.86 85 T
0 24 Q
(Objects) 412.97 110 T
90 99 270 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
90.67 123.5 270.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
536.84 533.33 557.67 545 R
V
0 8 Q
0 X
(20.4) 542.1 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 14 Q
0 X
(20.4.4) 123.08 636 T
0 18 Q
(Sorting and SSSortControlClass) 180 636 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
-0.07 (A controller has been provided which allows users to sort a group of rows or) 180 605.33 P
(columns. The user can specify whether the sort is done in ascending or) 180 592.33 T
(descending order) 180 579.33 T
(. If you are sorting rows, the column containing the active) 257.95 579.33 T
(cell is the index column; it contains the values by which the rows will be) 180 566.33 T
-0.29 (sorted. \050For example, if the active cell is B4 and the user sorts \322ascending by) 180 553.33 P
(row) 180 540.33 T
(,\323 the row with the lowest value in column 4 will be \336rst.\051) 196.3 540.33 T
(The Sort controller automatically uses the localization libraries to sort) 180 520.33 T
(strings in the local language\325) 180 507.33 T
(s alphabetical order) 312.8 507.33 T
(.) 403.74 507.33 T
0 14 Q
(20.4.5) 123.08 465 T
0 18 Q
(De\336ning and Using Names) 180 465 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
(Users may often \336nd it convenient to use names for cells or values. For) 180 434.33 T
(example, a user may want to de\336ne \322Y) 180 421.33 T
(earT) 356.52 421.33 T
(otal\323 as a synonym for cell A1;) 377.27 421.33 T
(whenever he uses Y) 180 408.33 T
(earT) 270.56 408.33 T
(otal in an equation, the spreadsheet would use the) 291.31 408.33 T
(value in cell A1. The Spreadsheet object supports this with the Name) 180 395.33 T
-0.87 (controller) 180 382.33 P
-0.87 (. The user can use the SSDe\336neNameControl controller to associate) 223.88 382.33 P
(a name with a string, number) 180 369.33 T
(, cell reference, or cell range. When the user) 317.25 369.33 T
(enters a formula in a cell, the name will be passed through to the Parse) 180 356.33 T
-0.18 (routine. The evaluator will call the spreadsheet to \336nd out what the current) 180 343.33 P
(value of the name is and pass it back to the evaluator) 180 330.33 T
(. All of this happens) 426.17 330.33 T
(transparently to the application.) 180 317.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
-0.63 (The user can also select one of the names he has de\336ned, and paste it into the) 180 292.33 P
(formula bar) 180 279.33 T
(, by using the SSChooseNameControl object.) 234.08 279.33 T
0 14 Q
(20.4.6) 123.08 237 T
0 18 Q
(Headers and Footers) 180 237 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
1 10 Q
(The user can de\336ne a range of cells as a \322header\323. When the spreadsheet is) 180 206.33 T
-0.03 (printed, the header will be displayed at the top of every page. Similarly) 180 193.33 P
-0.03 (, the) 507.71 193.33 P
(user can specify a \322footer\323 which will appear at the bottom of every printed) 180 180.33 T
(page. The user uses the SSHeaderFooterControl to specify these ranges.) 180 167.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1237" 29
%%Page: "1238" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(Spreadsheet Objects) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(1238) 54 671.34 T
32 684 288 684 2 L
7 X
V
3 H
2 Z
0 X
N
54 90 117 125 R
7 X
V
2 60 Q
0 X
(u) 61.86 85 T
0 24 Q
(Objects) 102 110 T
306 99 486 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
305.67 122.67 485.67 134.83 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
54.33 533.33 75.17 545 R
V
0 8 Q
0 X
(20.4) 54.33 539.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
7 X
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1238" 30
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 30
%%DocumentFonts: Helvetica-Bold
%%+ NewCenturySchlbk-Roman
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Bold
%%+ Courier
%%+ NewCenturySchlbk-Italic
%%+ Courier-Bold
%%EOF
