%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 14 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /NewCenturySchlbk-Roman FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /NewCenturySchlbk-Bold FMFONTDEFINE
6 0 /NewCenturySchlbk-Italic FMFONTDEFINE
7 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "21" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(CellGetExtent) 472.46 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(21) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 621.02 531 626.03 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 621.02 531 626.03 R
7 X
0 0 0 1 0 0 0 K
V
50 625.02 609.01 625.02 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 613.02 T
3 F
(ArrayQuickSort) 99 613.02 T
2 10 Q
(Sort the given array using a modi\336ed quicksort algorithm.) 180 596.36 T
0 9 Q
(Pass:) 126 579.86 T
4 10 Q
(ds:si) 180 579.86 T
2 F
(Address of the \336rst element in the array) 252 579.86 T
(.) 436.82 579.86 T
4 F
(ax) 180 568.36 T
2 F
(Size of each element \050all of uniform size\051.) 252 568.36 T
4 F
(cx) 180 556.86 T
2 F
(Number of elements in the array) 252 556.86 T
(.) 402.57 556.86 T
4 F
(ss:bp) 180 545.36 T
2 F
-0.61 (Address of an inheritable) 252 545.36 P
5 F
-0.63 (QuickSortParameters) 369.2 545.36 P
2 F
-0.61 ( structure.) 483.1 545.36 P
4 F
(bx) 180 533.86 T
2 F
(V) 252 533.86 T
(alue to pass to callback routine speci\336ed in) 258.3 533.86 T
4 F
(ss:bp) 459.26 533.86 T
2 F
(.) 489.26 533.86 T
0 9 Q
(Returns:) 126 517.36 T
2 10 Q
(Nothing.) 180 517.36 T
0 9 Q
(Destr) 126 500.86 T
(oyed:) 146.83 500.86 T
4 10 Q
(ax) 180 500.86 T
2 F
(,) 192 500.86 T
4 F
(cx) 197.56 500.86 T
2 F
(,) 209.56 500.86 T
4 F
(dx) 215.12 500.86 T
0 9 Q
(Library:) 126 484.36 T
5 10 Q
(chunkarr) 180 484.36 T
(.def) 228.53 484.36 T
81 470.02 531 475.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 470.02 531 475.02 R
7 X
0 0 0 1 0 0 0 K
V
50 474.02 609.01 474.02 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 462.02 T
3 F
(CellDirty) 99 462.02 T
2 10 Q
(Mark a cell as dirty) 180 445.35 T
(.) 269.46 445.35 T
0 9 Q
(Pass:) 126 428.85 T
4 10 Q
(es) 180 428.85 T
2 F
(Segment address of block containing the cell.) 252 428.85 T
0 9 Q
(Returns:) 126 412.35 T
2 10 Q
(Nothing.) 180 412.35 T
0 9 Q
(Destr) 126 395.85 T
(oyed:) 146.83 395.85 T
2 10 Q
(Nothing.) 180 395.85 T
0 9 Q
(Library:) 126 379.35 T
5 10 Q
(cell.def) 180 379.35 T
81 365.01 531 370.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 365.01 531 370.02 R
7 X
0 0 0 1 0 0 0 K
V
50 369.01 609.01 369.01 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 357.01 T
3 F
(CellGetDBItem) 99 357.01 T
2 10 Q
(Get the group and item numbers of the database item associated with the) 180 340.34 T
(speci\336ed cell.) 180 328.84 T
0 9 Q
(Pass:) 126 312.34 T
4 10 Q
(ds:si) 180 312.34 T
2 F
(Address of) 252 312.34 T
5 F
(CellFunctionParameters) 303.29 312.34 T
2 F
( structure.) 431.81 312.34 T
4 F
(ax) 180 300.84 T
2 F
(Row number of cell.) 252 300.84 T
4 F
(cl) 180 289.34 T
2 F
(Column number of cell.) 252 289.34 T
0 9 Q
(Returns:) 126 272.84 T
4 10 Q
(CF) 180 272.84 T
2 F
(Set if the item exists, clear otherwise.) 252 272.84 T
4 F
(ax) 180 261.34 T
2 F
(Group number of the cell.) 252 261.34 T
4 F
(di) 180 249.84 T
2 F
(Item number of the cell.) 252 249.84 T
0 9 Q
(Destr) 126 233.34 T
(oyed:) 146.83 233.34 T
2 10 Q
(Nothing.) 180 233.34 T
0 9 Q
(Library:) 126 216.84 T
5 10 Q
(cell.def) 180 216.84 T
81 202.5 531 207.51 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 202.5 531 207.51 R
7 X
0 0 0 1 0 0 0 K
V
50 206.5 609.01 206.5 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 194.5 T
3 F
(CellGetExtent) 99 194.5 T
2 10 Q
(Get the extent \050bounds\051 of the current sheet of spreadsheet cells.) 180 177.83 T
0 9 Q
(Pass:) 126 161.33 T
4 10 Q
(ds:si) 180 161.33 T
2 F
(Address of) 252 161.33 T
5 F
(CellFunctionParameters) 303.29 161.33 T
2 F
( structure.) 431.81 161.33 T
81 144 531 648 C
235.51 643.03 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.03 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 1
%%Page: "22" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(CellLock) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(22) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 10 Q
0 X
(ss:bx) 180 641.33 T
2 F
(Address of a) 252 641.33 T
5 F
(RangeEnumParams) 311.63 641.33 T
2 F
( structure. The caller) 415.14 641.33 T
(does not need to set any values in the structure.) 252 629.83 T
0 9 Q
(Returns:) 126 613.33 T
4 10 Q
(ss:bx) 180 613.33 T
2 F
(Address of the) 252 613.33 T
5 F
(RangeEnumParams) 321.07 613.33 T
2 F
( structure; the) 424.58 613.33 T
6 9 Q
(REP) 252 601.83 T
6 10 Q
(_bounds) 271.17 601.83 T
2 F
( \336eld will be \336lled in with the extent of the) 309.5 601.83 T
(spreadsheet. If there is no current spreadsheet, all bounds) 252 590.33 T
(will be set to -1.) 252 578.83 T
0 9 Q
(Destr) 126 562.33 T
(oyed:) 146.83 562.33 T
2 10 Q
(Nothing.) 180 562.33 T
0 9 Q
(Library:) 126 545.83 T
5 10 Q
(cell.def) 180 545.83 T
81 531.49 531 536.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 531.49 531 536.5 R
7 X
0 0 0 1 0 0 0 K
V
50 535.49 609.01 535.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 523.49 T
3 F
(CellLock) 99 523.49 T
2 10 Q
-0.5 (Lock a cell\325) 180 506.83 P
-0.5 (s data to examine or change it. The cell should not be locked while) 229.57 506.83 P
(also working with other cells; the caller should lock the cell, copy the data,) 180 495.33 T
(then unlock it with) 180 483.83 T
5 F
(CellUnlock) 270.94 483.83 T
2 F
(.) 328.54 483.83 T
0 9 Q
(Pass:) 126 467.33 T
4 10 Q
(ds:si) 180 467.33 T
2 F
(Address of) 252 467.33 T
5 F
(CellFunctionParameters) 303.29 467.33 T
2 F
( structure.) 431.81 467.33 T
4 F
(ax) 180 455.83 T
2 F
(Row number of cell.) 252 455.83 T
4 F
(cl) 180 444.33 T
2 F
(Column number of cell.) 252 444.33 T
0 9 Q
(Returns:) 126 427.83 T
4 10 Q
(CF) 180 427.83 T
2 F
(Set if the item exists, clear otherwise.) 252 427.83 T
4 F
(*es:di) 180 416.33 T
2 F
(Segment:chunk handle of the cell data if cell exists.) 252 416.33 T
0 9 Q
(Destr) 126 399.83 T
(oyed:) 146.83 399.83 T
4 10 Q
(di) 180 399.83 T
2 F
(, unless it is returned.) 192 399.83 T
0 9 Q
(Library:) 126 383.33 T
5 10 Q
(cell.def) 180 383.33 T
81 368.98 531 373.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 368.98 531 373.99 R
7 X
0 0 0 1 0 0 0 K
V
50 372.98 609.01 372.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 360.98 T
3 F
(CellReplace) 99 360.98 T
2 10 Q
(Replace a cell\325) 180 344.32 T
(s data with new data.) 244.64 344.32 T
0 9 Q
(Pass:) 126 327.82 T
4 10 Q
(ds:si) 180 327.82 T
2 F
(Address of) 252 327.82 T
5 F
(CellFunctionParameters) 303.29 327.82 T
2 F
( structure.) 431.81 327.82 T
4 F
(ax) 180 316.32 T
2 F
(Row number of cell.) 252 316.32 T
4 F
(cl) 180 304.82 T
2 F
(Column number of cell.) 252 304.82 T
4 F
(es:di) 180 293.32 T
2 F
(Address of new data.) 252 293.32 T
4 F
(dx) 180 281.82 T
2 F
(Size of data pointed to, or zero to free the cell.) 252 281.82 T
0 9 Q
(Returns:) 126 265.32 T
2 10 Q
(Nothing.) 180 265.32 T
0 9 Q
(Destr) 126 248.82 T
(oyed:) 146.83 248.82 T
2 10 Q
(Possibly) 180 248.82 T
4 F
(es) 220.94 248.82 T
2 F
(, if it pointed to a database item in the same \336le.) 232.94 248.82 T
0 9 Q
(Library:) 126 232.32 T
5 10 Q
(cell.def) 180 232.32 T
81 217.98 531 222.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 217.98 531 222.98 R
7 X
0 0 0 1 0 0 0 K
V
50 221.98 609.01 221.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 209.98 T
3 F
(CellUnlock) 99 209.98 T
2 10 Q
(Unlock a cell previously locked with) 180 193.31 T
5 F
(CellLock) 348.91 193.31 T
2 F
(.) 395.03 193.31 T
0 9 Q
(Pass:) 126 176.81 T
4 10 Q
(es) 180 176.81 T
2 F
(Segment address of block containing cell data.) 252 176.81 T
0 9 Q
(Returns:) 126 160.31 T
2 10 Q
(Nothing.) 180 160.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 2
%%Page: "23" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ChunkArrayCreate) 439.8 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(23) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Normally) 180 641.33 T
(, nothing. If using the error) 222.6 641.33 T
(-checking kernel and segment) 348.71 641.33 T
-0.53 (error) 180 629.83 P
-0.53 (-checking is active, then if either) 203.14 629.83 P
2 9 Q
-0.48 (DS) 353.66 629.83 P
2 10 Q
-0.53 ( or) 366.33 629.83 P
2 9 Q
-0.48 (ES) 380.27 629.83 P
2 10 Q
-0.53 ( is pointing to a block that has) 392.43 629.83 P
(become unlocked, that register will be set to) 180 618.33 T
2 9 Q
(NULL_SEGMENT) 385.96 618.33 T
2 10 Q
(.) 463.72 618.33 T
0 9 Q
(Library:) 126 601.83 T
5 10 Q
(cell.def) 180 601.83 T
81 587.49 531 592.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 587.49 531 592.5 R
7 X
0 0 0 1 0 0 0 K
V
50 591.49 609.01 591.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 579.49 T
3 F
(CheckForDamagedES) 99 579.49 T
2 10 Q
(When using the error) 180 562.83 T
(-checking version of the ui, this routine checks the ES) 278.88 562.83 T
(register to make sure it points to a valid LMem block. This comes in handy) 180 551.33 T
(in code where *es:) 180 539.83 T
6 F
(xx) 263.52 539.83 T
2 F
( should point to an object.) 273.52 539.83 T
(In a non-error) 180 523.33 T
(-checking environment, this routine does nothing.) 244.99 523.33 T
0 9 Q
(Pass:) 126 506.83 T
2 10 Q
(es) 180 506.83 T
(Alleged local memory block handle.) 252 506.83 T
0 9 Q
(Returns:) 126 490.33 T
2 10 Q
(Nothing \050\337ags preserved as well\051.) 180 490.33 T
0 9 Q
(Destr) 126 473.83 T
(oyed:) 146.83 473.83 T
2 10 Q
(Nothing.) 180 473.83 T
0 9 Q
(Library:) 126 457.33 T
5 10 Q
(ui.def) 180 457.33 T
81 442.98 531 447.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 442.98 531 447.99 R
7 X
0 0 0 1 0 0 0 K
V
50 446.98 609.01 446.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 434.98 T
3 F
(ChunkArrayAppend) 99 434.98 T
2 10 Q
(Append a new element to the end of a chunk array) 180 418.32 T
(.) 412.43 418.32 T
0 9 Q
(Pass:) 126 401.82 T
4 10 Q
(*ds:si) 180 401.82 T
2 F
(Segment:chunk handle of the chunk array) 252 401.82 T
(.) 445.9 401.82 T
4 F
(ax) 180 390.32 T
2 F
(Size of new element, if variable-sized.) 252 390.32 T
0 9 Q
(Returns:) 126 373.82 T
4 10 Q
(ds:di) 180 373.82 T
2 F
(Address of new) 252 373.82 T
(, locked element.) 321.26 373.82 T
0 9 Q
(Destr) 126 357.32 T
(oyed:) 146.83 357.32 T
2 10 Q
(Nothing.) 180 357.32 T
0 9 Q
(Library:) 126 340.82 T
5 10 Q
(chunkarr) 180 340.82 T
(.def) 228.53 340.82 T
0 9 Q
(W) 126 324.82 T
(arning:) 134.51 324.82 T
2 10 Q
-0.52 (This routine may resize or move the LMem block, invalidating all pointers to) 180 324.82 P
(chunks or elements within it.) 180 313.32 T
81 298.48 531 303.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 298.48 531 303.48 R
7 X
0 0 0 1 0 0 0 K
V
50 302.48 609.01 302.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 290.48 T
3 F
(ChunkArrayCreate) 99 290.48 T
2 10 Q
(Create a new general chunk array with no elements.) 180 273.81 T
0 9 Q
(Pass:) 126 257.31 T
4 10 Q
(ds) 180 257.31 T
2 F
(Global handle of block for new array) 252 257.31 T
(.) 418.88 257.31 T
4 F
(bx) 180 245.81 T
2 F
(Element size \050zero for variable-sized elements\051.) 252 245.81 T
4 F
(cx) 180 234.31 T
2 F
(Size for) 252 234.31 T
5 F
(ChunkArrayHeader) 289.59 234.31 T
2 F
(, or zero for default. Extra) 392.19 234.31 T
(space is initialized to zeroes.) 252 222.81 T
4 F
(si) 180 211.31 T
2 F
(Chuck to resize and use for chunk array \050zero to allocate a) 252 211.31 T
(new chunk\051.) 252 199.81 T
4 F
(al) 180 188.31 T
5 F
(ObjChunkFlags) 252 188.31 T
2 F
( to be passed to) 333.29 188.31 T
5 F
(LMemAlloc) 406.83 188.31 T
2 F
(.) 465.53 188.31 T
0 9 Q
(Returns:) 126 171.81 T
4 10 Q
(*ds:si) 180 171.81 T
2 F
(Address of the new array) 252 171.81 T
(, locked.) 367 171.81 T
0 9 Q
(Destr) 126 155.31 T
(oyed:) 146.83 155.31 T
2 10 Q
(Nothing.) 180 155.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 3
%%Page: "24" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ChunkArrayDelete) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(24) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
5 10 Q
(chunkarr) 180 641.33 T
(.def) 228.53 641.33 T
0 9 Q
(W) 126 625.33 T
(arning:) 134.51 625.33 T
2 10 Q
(This routine may resize or move the passed block, invalidating all segment) 180 625.33 T
(pointers to it.) 180 613.83 T
81 598.99 531 604 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 598.99 531 604 R
7 X
0 0 0 1 0 0 0 K
V
50 602.99 609.01 602.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 590.99 T
3 F
(ChunkArrayDelete) 99 590.99 T
2 10 Q
(Delete a speci\336ed element from the given array) 180 574.33 T
(.) 397.61 574.33 T
0 9 Q
(Pass:) 126 557.83 T
4 10 Q
(*ds:si) 180 557.83 T
2 F
(Segment:chunk handle of the chunk array) 252 557.83 T
(.) 445.9 557.83 T
4 F
(ds:di) 180 546.33 T
2 F
(Address of locked element.) 252 546.33 T
0 9 Q
(Returns:) 126 529.83 T
4 10 Q
(ds:di) 180 529.83 T
2 F
(Address of the same element, if it still exists.) 252 529.83 T
0 9 Q
(Destr) 126 513.33 T
(oyed:) 146.83 513.33 T
2 10 Q
(Nothing.) 180 513.33 T
0 9 Q
(Library:) 126 496.83 T
5 10 Q
(chunkarr) 180 496.83 T
(.def) 228.53 496.83 T
81 482.48 531 487.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 482.48 531 487.49 R
7 X
0 0 0 1 0 0 0 K
V
50 486.48 609.01 486.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 474.48 T
3 F
(ChunkArrayDeleteRange) 99 474.48 T
2 10 Q
(Delete a range of elements from the given chunk array) 180 457.82 T
(.) 431.5 457.82 T
0 9 Q
(Pass:) 126 441.32 T
4 10 Q
(*ds:si) 180 441.32 T
2 F
(Segment:chunk handle of the chunk array) 252 441.32 T
(.) 445.9 441.32 T
4 F
(ax) 180 429.82 T
2 F
(First element to delete \050inclusive\051.) 252 429.82 T
4 F
(cx) 180 418.32 T
2 F
-0.09 (T) 252 418.32 P
-0.09 (otal number of elements to delete \050-1 to delete to the end of) 257.75 418.32 P
(the array\051.) 252 406.82 T
0 9 Q
(Returns:) 126 390.32 T
2 10 Q
(Nothing.) 180 390.32 T
0 9 Q
(Destr) 126 373.82 T
(oyed:) 146.83 373.82 T
2 10 Q
(Nothing.) 180 373.82 T
0 9 Q
(Library:) 126 357.32 T
5 10 Q
(chunkarr) 180 357.32 T
(.def) 228.53 357.32 T
81 342.98 531 347.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 342.98 531 347.98 R
7 X
0 0 0 1 0 0 0 K
V
50 346.98 609.01 346.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 334.98 T
3 F
(ChunkArrayElementResize) 99 334.98 T
2 10 Q
(Resize an element in a variable-sized chunk array) 180 318.31 T
(.) 410.21 318.31 T
0 9 Q
(Pass:) 126 301.81 T
4 10 Q
(*ds:si) 180 301.81 T
2 F
(Segment:chunk handle of the chunk array) 252 301.81 T
(.) 445.9 301.81 T
4 F
(ax) 180 290.31 T
2 F
(Element number of the element to be resized.) 252 290.31 T
4 F
(cx) 180 278.81 T
2 F
(New size of the element.) 252 278.81 T
0 9 Q
(Returns:) 126 262.31 T
2 10 Q
(Nothing.) 180 262.31 T
0 9 Q
(Destr) 126 245.81 T
(oyed:) 146.83 245.81 T
2 10 Q
(Nothing.) 180 245.81 T
0 9 Q
(Library:) 126 229.31 T
5 10 Q
(chunkarr) 180 229.31 T
(.def) 228.53 229.31 T
0 9 Q
(W) 126 213.31 T
(arning:) 134.51 213.31 T
2 10 Q
-0.31 (If you are resizing the element larger) 180 213.31 P
-0.31 (, all pointers you\325ve stored to chunks in) 349.6 213.31 P
(the block are invalidated. If you are resizing the element smaller) 180 201.81 T
(, the array) 478.74 201.81 T
(is guaranteed not to move or cause other chunks to move.) 180 190.31 T
81 175.47 531 180.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 175.47 531 180.48 R
7 X
0 0 0 1 0 0 0 K
V
50 179.47 609.01 179.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 167.47 T
3 F
(ChunkArrayElementT) 99 167.47 T
(oPtr) 220.8 167.47 T
2 10 Q
(Return the address of a speci\336ed element in a chunk array) 180 150.8 T
(.) 449.83 150.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 4
%%Page: "25" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ChunkArrayEnumRange) 405.54 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(25) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
4 10 Q
(*ds:si) 180 641.33 T
2 F
(Segment:chunk handle of the chunk array) 252 641.33 T
(.) 445.9 641.33 T
4 F
(ax) 180 629.83 T
2 F
(Element number of element to \336nd.) 252 629.83 T
0 9 Q
(Returns:) 126 613.33 T
4 10 Q
(CF) 180 613.33 T
2 F
(Set if element number out of bounds.) 252 613.33 T
4 F
(cx) 180 601.83 T
2 F
(Size of the returned element, if variable-sized.) 252 601.83 T
4 F
(ds:di) 180 590.33 T
2 F
(Address of element; if) 252 590.33 T
4 F
(ax) 355.15 590.33 T
2 F
( was out of bounds,) 367.15 590.33 T
4 F
(ds:di) 458.28 590.33 T
2 F
( will be) 488.28 590.33 T
(returned pointing to the last element in the array) 252 578.83 T
(.) 480.17 578.83 T
0 9 Q
(Destr) 126 562.33 T
(oyed:) 146.83 562.33 T
2 10 Q
(Nothing.) 180 562.33 T
0 9 Q
(Library:) 126 545.83 T
5 10 Q
(chunkarr) 180 545.83 T
(.def) 228.53 545.83 T
0 9 Q
(W) 126 529.83 T
(arning:) 134.51 529.83 T
2 10 Q
-0.04 (The error) 180 529.83 P
-0.04 (-checking version fatal-errors if passed) 223.66 529.83 P
2 9 Q
-0.04 (CA_NULL_ELEMENT) 405.48 529.83 P
2 10 Q
-0.04 ( in) 501.48 529.83 P
4 F
-0.09 (ax) 516.22 529.83 P
2 F
-0.04 (.) 528.22 529.83 P
81 514.99 531 520 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 514.99 531 520 R
7 X
0 0 0 1 0 0 0 K
V
50 518.99 609.01 518.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 506.99 T
3 F
(ChunkArrayEnum) 99 506.99 T
2 10 Q
(Process all elements in a chunk array) 180 490.33 T
(, calling a callback routine for each.) 352.8 490.33 T
0 9 Q
(Pass:) 126 473.83 T
4 10 Q
(*ds:si) 180 473.83 T
2 F
(Segment:chunk handle of the chunk array) 252 473.83 T
(.) 445.9 473.83 T
4 F
(bx:di) 180 462.33 T
2 F
(Address of the callback routine.) 252 462.33 T
4 F
(ax) 180 450.83 T
2 F
(Initial data passed to callback) 252 450.83 T
6 F
(only) 393.71 450.83 T
2 F
( if \336xed-size elements.) 413.15 450.83 T
4 F
(cx) 180 439.33 T
2 F
(,) 192 439.33 T
4 F
(dx) 197.56 439.33 T
2 F
(,) 209.56 439.33 T
4 F
(bp) 215.12 439.33 T
2 F
(,) 227.12 439.33 T
4 F
(es) 232.68 439.33 T
2 F
(Initial data to pass to callback routine.) 252 439.33 T
0 9 Q
(Returns:) 126 422.83 T
4 10 Q
(CF) 180 422.83 T
2 F
(Set if enumeration aborted by the callback routine.) 252 422.83 T
4 F
(ax) 180 411.33 T
2 F
(,) 192 411.33 T
4 F
(cx) 197.56 411.33 T
2 F
(,) 209.56 411.33 T
4 F
(dx) 215.12 411.33 T
2 F
(,) 227.12 411.33 T
4 F
(bp) 232.68 411.33 T
2 F
(,) 244.68 411.33 T
4 F
(es) 250.24 411.33 T
2 F
(As set by the last call to the callback routine.) 252 399.83 T
0 9 Q
(Destr) 126 383.33 T
(oyed:) 146.83 383.33 T
2 10 Q
(bx) 180 383.33 T
0 9 Q
(Callback Routine Speci\336cations:) 126 367.83 T
(Passed:) 189 353.83 T
4 10 Q
(*ds:si) 252 353.83 T
2 F
(Segment:chunk handle of the chunk array) 324 353.83 T
(.) 517.9 353.83 T
4 F
(ds:di) 252 342.83 T
2 F
(Address of element being processed.) 324 342.83 T
4 F
(ax) 252 331.83 T
2 F
(Size of element, if variable-sized; otherwise,) 324 331.83 T
(inherited from) 324 320.83 T
5 F
(ChunkArrayEnum) 393.81 320.83 T
2 F
(.) 489.92 320.83 T
4 F
(cx) 252 309.83 T
2 F
(,) 264 309.83 T
4 F
(dx) 269.56 309.83 T
2 F
(,) 281.56 309.83 T
4 F
(bp) 287.12 309.83 T
2 F
(,) 299.12 309.83 T
4 F
(es) 304.68 309.83 T
2 F
(Inherited from) 324 309.83 T
5 F
(ChunkArrayEnum) 394.73 309.83 T
2 F
(.) 490.84 309.83 T
0 9 Q
(Return:) 189 294.83 T
4 10 Q
(CF) 252 294.83 T
2 F
(Set to abort processing.) 324 294.83 T
4 F
(cx) 252 283.83 T
2 F
(,) 264 283.83 T
4 F
(dx) 269.56 283.83 T
2 F
(,) 281.56 283.83 T
4 F
(bp) 287.12 283.83 T
2 F
(,) 299.12 283.83 T
4 F
(es) 304.68 283.83 T
2 F
(Data to pass to next enumeration.) 324 283.83 T
0 9 Q
(May Destr) 189 268.83 T
(oy:) 229.57 268.83 T
4 10 Q
(bx) 252 268.83 T
2 F
(,) 264 268.83 T
4 F
(si) 269.56 268.83 T
2 F
(,) 281.56 268.83 T
4 F
(di) 287.12 268.83 T
0 9 Q
(Library:) 126 252.83 T
5 10 Q
(chunkarr) 180 252.83 T
(.def) 228.53 252.83 T
81 238.48 531 243.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 238.48 531 243.49 R
7 X
0 0 0 1 0 0 0 K
V
50 242.48 609.01 242.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 230.48 T
3 F
(ChunkArrayEnumRange) 99 230.48 T
2 10 Q
-0.6 (Process the speci\336ed elements in a chunk array) 180 213.82 P
-0.6 (, calling a callback routine for) 394.36 213.82 P
(each element.) 180 202.32 T
0 9 Q
(Pass:) 126 185.82 T
4 10 Q
(*ds:si) 180 185.82 T
2 F
(Segment:chunk handle of the chunk array) 252 185.82 T
(.) 445.9 185.82 T
4 F
(bx:di) 180 174.32 T
2 F
(Address of the callback routine.) 252 174.32 T
4 F
(ax) 180 162.82 T
2 F
(Number of \336rst element to process.) 252 162.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 5
%%Page: "26" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ChunkArrayGetCount) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(26) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 10 Q
0 X
(cx) 180 641.33 T
2 F
-0.7 (Number of elements to process \050-1 to process all including the) 252 641.33 P
(last element\051.) 252 629.83 T
4 F
(dx) 180 618.33 T
2 F
(,) 192 618.33 T
4 F
(bp) 197.56 618.33 T
2 F
(,) 209.56 618.33 T
4 F
(es) 215.12 618.33 T
2 F
(Initial data to pass to the callback routine.) 252 618.33 T
0 9 Q
(Returns:) 126 601.83 T
4 10 Q
(CF) 180 601.83 T
2 F
(Set if the routine was aborted before all speci\336ed elements) 252 601.83 T
(were processed.) 252 590.33 T
4 F
(ax) 180 578.83 T
2 F
(,) 192 578.83 T
4 F
(cx) 197.56 578.83 T
2 F
(,) 209.56 578.83 T
4 F
(dx) 215.12 578.83 T
2 F
(,) 227.12 578.83 T
4 F
(bp) 232.68 578.83 T
2 F
(,) 244.68 578.83 T
4 F
(es) 250.24 578.83 T
2 F
(As returned by the last call to the callback routine.) 252 567.33 T
0 9 Q
(Destr) 126 550.83 T
(oyed:) 146.83 550.83 T
2 10 Q
(Nothing.) 180 550.83 T
0 9 Q
(Callback Routine Speci\336cations:) 126 535.33 T
(Passed:) 189 521.33 T
4 10 Q
(*ds:si) 252 521.33 T
2 F
(Segment:chunk handle of the chunk array) 324 521.33 T
(.) 517.9 521.33 T
4 F
(ds:di) 252 510.33 T
2 F
(Address of element being processed.) 324 510.33 T
4 F
(ax) 252 499.33 T
2 F
(Size of element, if variable-sized; otherwise,) 324 499.33 T
(inherited from) 324 488.33 T
5 F
(ChunkArrayEnumRange) 393.81 488.33 T
2 F
(.) 522.88 488.33 T
4 F
(cx) 252 477.33 T
2 F
(,) 264 477.33 T
4 F
(dx) 269.56 477.33 T
2 F
(,) 281.56 477.33 T
4 F
(bp) 287.12 477.33 T
2 F
(,) 299.12 477.33 T
4 F
(es) 304.68 477.33 T
2 F
(Inherited from) 324 477.33 T
5 F
(ChunkArrayEnumRange) 394.73 477.33 T
2 F
(.) 523.8 477.33 T
0 9 Q
(Return:) 189 462.33 T
4 10 Q
(CF) 252 462.33 T
2 F
(Set to abort processing.) 324 462.33 T
4 F
(cx) 252 451.33 T
2 F
(,) 264 451.33 T
4 F
(dx) 269.56 451.33 T
2 F
(,) 281.56 451.33 T
4 F
(bp) 287.12 451.33 T
2 F
(,) 299.12 451.33 T
4 F
(es) 304.68 451.33 T
2 F
(Data to pass to next enumeration.) 324 451.33 T
0 9 Q
(May Destr) 189 436.33 T
(oy:) 229.57 436.33 T
4 10 Q
(bx) 252 436.33 T
2 F
(,) 264 436.33 T
4 F
(si) 269.56 436.33 T
2 F
(,) 281.56 436.33 T
4 F
(di) 287.12 436.33 T
0 9 Q
(Library:) 126 420.33 T
5 10 Q
(chunkarr) 180 420.33 T
(.def) 228.53 420.33 T
81 405.99 531 411 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 405.99 531 411 R
7 X
0 0 0 1 0 0 0 K
V
50 409.99 609.01 409.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 397.99 T
3 F
(ChunkArrayGetCount) 99 397.99 T
2 10 Q
(Return the number of elements in the given chunk array) 180 381.33 T
(.) 441.12 381.33 T
0 9 Q
(Pass:) 126 364.83 T
4 10 Q
(*ds:si) 180 364.83 T
2 F
(Segment:chunk handle of the chunk array) 252 364.83 T
(.) 445.9 364.83 T
0 9 Q
(Returns:) 126 348.33 T
4 10 Q
(cx) 180 348.33 T
2 F
(Number of elements in the array) 252 348.33 T
(.) 402.57 348.33 T
0 9 Q
(Destr) 126 331.83 T
(oyed:) 146.83 331.83 T
2 10 Q
(Nothing.) 180 331.83 T
0 9 Q
(Library:) 126 315.33 T
5 10 Q
(chunkarr) 180 315.33 T
(.def) 228.53 315.33 T
81 300.98 531 305.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 300.98 531 305.99 R
7 X
0 0 0 1 0 0 0 K
V
50 304.98 609.01 304.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 292.98 T
3 F
(ChunkArrayGetElement) 99 292.98 T
2 10 Q
(Get an element given its element number) 180 276.32 T
(.) 371.14 276.32 T
0 9 Q
(Pass:) 126 259.82 T
4 10 Q
(*ds:si) 180 259.82 T
2 F
(Segment:chunk handle of the chunk array) 252 259.82 T
(.) 445.9 259.82 T
4 F
(ax) 180 248.32 T
2 F
(Element number of element to be retrieved.) 252 248.32 T
4 F
(cx:dx) 180 236.82 T
2 F
(Address of a buffer in which the element will be returned.) 252 236.82 T
0 9 Q
(Returns:) 126 220.32 T
4 10 Q
(ax) 180 220.32 T
2 F
(Size of element returned.) 252 220.32 T
4 F
(cx:dx) 180 208.82 T
2 F
(Address of \336lled buffer) 252 208.82 T
0 9 Q
(Destr) 126 192.32 T
(oyed:) 146.83 192.32 T
2 10 Q
(Nothing.) 180 192.32 T
0 9 Q
(Library:) 126 175.82 T
5 10 Q
(chunkarr) 180 175.82 T
(.def) 228.53 175.82 T
0 9 Q
(W) 126 159.82 T
(arning:) 134.51 159.82 T
2 10 Q
(The error) 180 159.82 T
(-checking version will fatal-error if CA_NULL_ELEMENT is) 223.7 159.82 T
(passed in ax or if) 180 148.32 T
4 F
(ax) 261.31 148.32 T
2 F
( is out of bounds.) 273.31 148.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 6
%%Page: "27" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ChunkArraySort) 454.55 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(27) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
3 F
(ChunkArrayInsertAt) 99 634.99 T
2 10 Q
(Insert the speci\336ed element at a given position in the array) 180 618.33 T
(.) 452.99 618.33 T
0 9 Q
(Pass:) 126 601.83 T
4 10 Q
(*ds:si) 180 601.83 T
2 F
(Segment:chunk handle of the chunk array) 252 601.83 T
(.) 445.9 601.83 T
4 F
(ds:di) 180 590.33 T
2 F
(Address of element to insert.) 252 590.33 T
4 F
(ax) 180 578.83 T
2 F
(Size of new element, if variable-sized.) 252 578.83 T
0 9 Q
(Returns:) 126 562.33 T
4 10 Q
(ds:di) 180 562.33 T
2 F
(Address of new element in the array) 252 562.33 T
(.) 418.86 562.33 T
0 9 Q
(Destr) 126 545.83 T
(oyed:) 146.83 545.83 T
2 10 Q
(Nothing.) 180 545.83 T
0 9 Q
(Library:) 126 529.33 T
5 10 Q
(chunkarr) 180 529.33 T
(.def) 228.53 529.33 T
0 9 Q
(W) 126 513.33 T
(arning:) 134.51 513.33 T
2 10 Q
(This routine may resize or move the passed block, invalidating all segment) 180 513.33 T
(pointers to it.) 180 501.83 T
81 486.98 531 491.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 486.98 531 491.99 R
7 X
0 0 0 1 0 0 0 K
V
50 490.98 609.01 490.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 478.98 T
3 F
(ChunkArrayPtrT) 99 478.98 T
(oElement) 190.79 478.98 T
2 10 Q
(Return the element number of the element pointed to.) 180 462.32 T
0 9 Q
(Pass:) 126 445.82 T
4 10 Q
(*ds:si) 180 445.82 T
2 F
(Segment:chunk handle of the chunk array) 252 445.82 T
(.) 445.9 445.82 T
4 F
(ds:di) 180 434.32 T
2 F
(Address of the element to be checked.) 252 434.32 T
0 9 Q
(Returns:) 126 417.82 T
4 10 Q
(ax) 180 417.82 T
2 F
(Zero-based element number) 252 417.82 T
(.) 380.34 417.82 T
0 9 Q
(Destr) 126 401.32 T
(oyed:) 146.83 401.32 T
2 10 Q
(Nothing.) 180 401.32 T
0 9 Q
(Library:) 126 384.82 T
5 10 Q
(chunkarr) 180 384.82 T
(.def) 228.53 384.82 T
81 370.48 531 375.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 370.48 531 375.48 R
7 X
0 0 0 1 0 0 0 K
V
50 374.48 609.01 374.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 362.48 T
3 F
(ChunkArraySort) 99 362.48 T
2 10 Q
(Sort the given chunk array in ascending order) 180 345.81 T
(.) 392.41 345.81 T
0 9 Q
(Pass:) 126 329.31 T
4 10 Q
(*ds:si) 180 329.31 T
2 F
(Segment:chunk handle of the chunk array to sort.) 252 329.31 T
4 F
(bx) 180 317.81 T
2 F
(V) 252 317.81 T
(alue to pass to callback routine.) 258.3 317.81 T
4 F
(cx:dx) 180 306.31 T
2 F
(Address of callback routine.) 252 306.31 T
0 9 Q
(Returns:) 126 289.81 T
2 10 Q
(Nothing.) 180 289.81 T
0 9 Q
(Destr) 126 273.31 T
(oyed:) 146.83 273.31 T
4 10 Q
(cx) 180 273.31 T
2 F
(,) 192 273.31 T
4 F
(dx) 197.56 273.31 T
0 9 Q
(Callback Routine Speci\336cations:) 126 257.81 T
(Passed:) 189 243.81 T
4 10 Q
(bx) 252 243.81 T
2 F
(V) 324 243.81 T
(alue inherited from) 330.3 243.81 T
5 F
(ChunkArraySort) 422.71 243.81 T
2 F
(.) 510.13 243.81 T
4 F
(ds:si) 252 232.81 T
2 F
(Address of \336rst element to compare.) 324 232.81 T
4 F
(es:di) 252 221.81 T
2 F
(Address of second element to compare.) 324 221.81 T
0 9 Q
(Return:) 189 206.81 T
4 10 Q
(SF) 252 206.81 T
2 F
(,) 262.89 206.81 T
4 F
(OF) 268.45 206.81 T
2 F
(,) 279.34 206.81 T
4 F
(ZF) 284.9 206.81 T
2 F
(These \337ags should be set in the following) 324 206.81 T
(conditions:) 324 195.81 T
(\336rst element less than second element) 252 184.81 T
7 F
(SF) 324 173.81 T
2 F
( set) 336 173.81 T
7 F
(OF) 324 162.81 T
2 F
( clear) 336 162.81 T
7 F
(ZF) 324 151.81 T
2 F
( unrestricted) 336 151.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 7
%%Page: "28" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ChunkArrayZero) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(28) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(\336rst element equal to second element) 252 641.33 T
7 F
(SF) 324 630.33 T
2 F
( unrestricted) 336 630.33 T
7 F
(OF) 324 619.33 T
2 F
( unrestricted) 336 619.33 T
7 F
(ZF) 324 608.33 T
2 F
( set) 336 608.33 T
(\336rst element larger than second element) 252 597.33 T
7 F
(SF) 324 586.33 T
2 F
( clear) 336 586.33 T
7 F
(OF) 324 575.33 T
2 F
( clear) 336 575.33 T
7 F
(ZF) 324 564.33 T
2 F
( clear) 336 564.33 T
0 9 Q
(May Destr) 189 549.33 T
(oy:) 229.57 549.33 T
4 10 Q
(ax) 252 549.33 T
2 F
(,) 264 549.33 T
4 F
(bx) 269.56 549.33 T
2 F
(,) 281.56 549.33 T
4 F
(cx) 287.12 549.33 T
2 F
(,) 299.12 549.33 T
4 F
(dx) 304.68 549.33 T
2 F
(,) 316.68 549.33 T
4 F
(si) 322.24 549.33 T
2 F
(,) 334.24 549.33 T
4 F
(di) 339.8 549.33 T
0 9 Q
(Library:) 126 533.33 T
5 10 Q
(chunkarr) 180 533.33 T
(.def) 228.53 533.33 T
81 518.99 531 524 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 518.99 531 524 R
7 X
0 0 0 1 0 0 0 K
V
50 522.99 609.01 522.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 510.99 T
3 F
(ChunkArrayZero) 99 510.99 T
2 10 Q
(Free all the elements of the given chunk array and resize it.) 180 494.33 T
0 9 Q
(Pass:) 126 477.83 T
4 10 Q
(*ds:si) 180 477.83 T
2 F
(Segment:chunk handle of the chunk array) 252 477.83 T
(.) 445.9 477.83 T
0 9 Q
(Returns:) 126 461.33 T
2 10 Q
(Nothing.) 180 461.33 T
0 9 Q
(Destr) 126 444.83 T
(oyed:) 146.83 444.83 T
2 10 Q
(Nothing.) 180 444.83 T
0 9 Q
(Library:) 126 428.33 T
5 10 Q
(chunkarr) 180 428.33 T
(.def) 228.53 428.33 T
81 413.98 531 418.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.98 531 418.99 R
7 X
0 0 0 1 0 0 0 K
V
50 417.98 609.01 417.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.98 T
3 F
(ClipboardAbortQuickT) 99 405.98 T
(ransfer) 227.02 405.98 T
2 10 Q
(This routine aborts a quick-transfer) 180 389.32 T
(. This routine is normally used if the) 345.2 389.32 T
(quick-transfer source object is about to be destroyed or if an error occurs) 180 377.82 T
(trying to register the quick-transfer item.) 180 366.32 T
0 9 Q
(Pass:) 126 349.82 T
2 10 Q
(Nothing.) 180 349.82 T
0 9 Q
(Returns:) 126 333.32 T
2 10 Q
(Nothing.) 180 333.32 T
0 9 Q
(Destr) 126 316.82 T
(oyed:) 146.83 316.82 T
2 10 Q
(Nothing.) 180 316.82 T
0 9 Q
(Library:) 126 300.32 T
5 10 Q
(clipbrd.def) 180 300.32 T
81 285.98 531 290.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 285.98 531 290.98 R
7 X
0 0 0 1 0 0 0 K
V
50 289.98 609.01 289.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 277.98 T
3 F
(ClipboardAddT) 99 277.98 T
(oNoti\336cationList) 184.78 277.98 T
2 10 Q
(Add the passed) 180 261.31 T
2 9 Q
(OD) 253.34 261.31 T
2 10 Q
( to the transfer notify list.) 267.34 261.31 T
0 9 Q
(Pass:) 126 244.81 T
4 10 Q
(cx) 180 244.81 T
2 F
(:) 192 244.81 T
4 F
(dx) 194.78 244.81 T
2 9 Q
(OD) 252 244.81 T
2 10 Q
( to add. If) 266 244.81 T
4 F
(cx) 313.23 244.81 T
2 F
( is the process handle, then) 325.23 244.81 T
4 F
(dx) 454.13 244.81 T
2 F
( must be zero.) 466.13 244.81 T
0 9 Q
(Returns:) 126 228.31 T
2 10 Q
(Nothing.) 180 228.31 T
0 9 Q
(Destr) 126 211.81 T
(oyed:) 146.83 211.81 T
2 10 Q
(Nothing.) 180 211.81 T
0 9 Q
(Library:) 126 195.31 T
5 10 Q
(clipbrd.def) 180 195.31 T
81 180.97 531 185.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 180.97 531 185.98 R
7 X
0 0 0 1 0 0 0 K
V
50 184.97 609.01 184.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 172.97 T
3 F
(ClipboardClearQuickT) 99 172.97 T
(ransferNoti\336cation) 225.04 172.97 T
2 10 Q
(This routine removes the quick-transfer) 180 156.3 T
2 9 Q
(OD) 367.41 156.3 T
2 10 Q
( noti\336cation.) 381.41 156.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 8
%%Page: "29" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ClipboardEnumItemFormats) 381.45 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(29) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
4 10 Q
(bx) 180 641.33 T
2 F
(:) 192 641.33 T
4 F
(di) 194.78 641.33 T
2 F
(Noti\336cation) 252 641.33 T
2 9 Q
( OD) 306.45 641.33 T
2 10 Q
( to remove.) 322.96 641.33 T
0 9 Q
(Returns:) 126 624.83 T
2 10 Q
(Nothing.) 180 624.83 T
0 9 Q
(Destr) 126 608.33 T
(oyed:) 146.83 608.33 T
2 10 Q
(Nothing.) 180 608.33 T
0 9 Q
(Library:) 126 591.83 T
5 10 Q
(clipbrd.def) 180 591.83 T
81 577.49 531 582.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 577.49 531 582.5 R
7 X
0 0 0 1 0 0 0 K
V
50 581.49 609.01 581.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 569.49 T
3 F
(ClipboardDoneW) 99 569.49 T
(ithItem) 196.22 569.49 T
2 10 Q
(This routine must be called when you are \336nished using the requested) 180 552.83 T
(transfer item.) 180 541.33 T
0 9 Q
(Pass:) 126 524.83 T
4 10 Q
(bx:ax) 180 524.83 T
2 F
(T) 252 524.83 T
(ransfer item header) 258.05 524.83 T
(, as returned by) 349.16 524.83 T
5 F
(ClipboardQueryItem) 252 513.33 T
2 F
(.) 360.52 513.33 T
0 9 Q
(Returns:) 126 496.83 T
2 10 Q
(Nothing.) 180 496.83 T
0 9 Q
(Destr) 126 480.33 T
(oyed:) 146.83 480.33 T
2 10 Q
(Nothing.) 180 480.33 T
0 9 Q
(Library:) 126 463.83 T
5 10 Q
(clipbrd.def) 180 463.83 T
81 449.48 531 454.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 449.48 531 454.49 R
7 X
0 0 0 1 0 0 0 K
V
50 453.48 609.01 453.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 441.48 T
3 F
(ClipboardEndQuickT) 99 441.48 T
(ransfer) 217.69 441.48 T
2 10 Q
(End a quick-transfer) 180 424.82 T
(. Reset the mouse pointer image, clear the) 275.37 424.82 T
(quick-transfer region \050if any\051, and clear the quick-transfer item. Send out) 180 413.32 T
(noti\336cation if necessary) 180 401.82 T
(.) 288.52 401.82 T
0 9 Q
(Pass:) 126 385.32 T
4 10 Q
(bp) 180 385.32 T
5 F
(ClipboardQuickNotifyFlags) 252 385.32 T
2 F
(. If a quick-transfer move) 395.7 385.32 T
(operation was done, then) 252 373.82 T
2 9 Q
(CQNF_MOVE) 370.72 373.82 T
2 10 Q
( should be set. If a) 430.55 373.82 T
(quick-transfer copy operation was done, then) 252 362.32 T
2 9 Q
(CQNF_COPY) 462.75 362.32 T
2 10 Q
(should be set. If the item was not accepted, the) 252 350.82 T
2 9 Q
(CQNF_NO_OPERA) 252 339.32 T
(TION) 334.18 339.32 T
2 10 Q
( should be set.) 358.18 339.32 T
0 9 Q
(Returns:) 126 322.82 T
2 10 Q
(Nothing.) 180 322.82 T
0 9 Q
(Destr) 126 306.32 T
(oyed:) 146.83 306.32 T
2 10 Q
(Nothing.) 180 306.32 T
0 9 Q
(Library:) 126 289.82 T
5 10 Q
(clipbrd.def) 180 289.82 T
81 275.48 531 280.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 275.48 531 280.48 R
7 X
0 0 0 1 0 0 0 K
V
50 279.48 609.01 279.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 267.48 T
3 F
(ClipboardEnumItemFormats) 99 267.48 T
2 10 Q
(This routine returns the list of all available formats) 180 250.81 T
(\050) 180 239.31 T
5 F
(ClipboardItemFormatID) 183.33 239.31 T
2 F
( structures\051.) 310.92 239.31 T
0 9 Q
(Pass:) 126 222.81 T
4 10 Q
(bx:ax) 180 222.81 T
2 F
(T) 252 222.81 T
(ransfer item header) 258.05 222.81 T
(, as returned by) 349.16 222.81 T
5 F
(ClipboardQueryItem) 252 211.31 T
2 F
(.) 360.52 211.31 T
4 F
(cx) 180 199.81 T
2 F
(Maximum number of formats to return.) 252 199.81 T
4 F
(es:di) 180 188.31 T
2 F
(Buffer for formats \050should be at least) 252 188.31 T
4 F
(cx) 425.71 188.31 T
2 F
( *) 437.71 188.31 T
(sizeof\050) 252 176.81 T
5 F
(ClipboardItemFormatID) 281.25 176.81 T
2 F
(\051.) 408.84 176.81 T
0 9 Q
(Returns:) 126 160.31 T
4 10 Q
(cx) 180 160.31 T
2 F
(Number of formats returned.) 252 160.31 T
5 F
(es) 180 148.81 T
2 F
(:) 190.74 148.81 T
4 F
(di) 193.52 148.81 T
2 F
(\050unchanged\051 Buffer now \336lled.) 252 148.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 9
%%Page: "30" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ClipboardFreeItem) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(30) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
5 10 Q
(clipbrd.def) 180 624.83 T
81 610.49 531 615.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 610.49 531 615.5 R
7 X
0 0 0 1 0 0 0 K
V
50 614.49 609.01 614.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 602.49 T
3 F
(ClipboardFreeItem) 99 602.49 T
2 10 Q
(Free the passed clipboard item.) 180 585.83 T
0 9 Q
(Pass:) 126 569.33 T
4 10 Q
(bx) 180 569.33 T
2 F
(:) 192 569.33 T
4 F
(ax) 194.78 569.33 T
5 F
(VMFileHandle) 252 569.33 T
2 F
(:) 327.17 569.33 T
5 F
(VMBlockHandle) 329.95 569.33 T
2 F
( of item to free.) 414.58 569.33 T
0 9 Q
(Returns:) 126 552.83 T
2 10 Q
(Nothing.) 180 552.83 T
0 9 Q
(Destr) 126 536.33 T
(oyed:) 146.83 536.33 T
2 10 Q
(Nothing.) 180 536.33 T
0 9 Q
(Library:) 126 519.83 T
5 10 Q
(clipbrd.def) 180 519.83 T
81 505.48 531 510.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 505.48 531 510.49 R
7 X
0 0 0 1 0 0 0 K
V
50 509.48 609.01 509.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 497.48 T
3 F
(ClipboardFreeItemsNotInUse) 99 497.48 T
2 10 Q
-0.14 (Frees normal or quick transfer item if nobody\325) 180 480.82 P
-0.14 (s using it, nukes references to) 391.27 480.82 P
(it, sends proper) 180 469.32 T
2 9 Q
(GCN) 254.63 469.32 T
2 10 Q
( messages out.) 275.46 469.32 T
0 9 Q
(Pass:) 126 452.82 T
2 10 Q
(Nothing.) 180 452.82 T
0 9 Q
(Returns:) 126 436.32 T
2 10 Q
(Nothing.) 180 436.32 T
0 9 Q
(Destr) 126 419.82 T
(oyed:) 146.83 419.82 T
2 10 Q
(Nothing.) 180 419.82 T
0 9 Q
(Library:) 126 403.32 T
5 10 Q
(clipbrd.def) 180 403.32 T
0 9 Q
(W) 126 387.32 T
(arning:) 134.51 387.32 T
2 10 Q
-0.59 (The user should not have called) 180 387.32 P
5 F
-0.61 (ClipboardRegisterItem) 325.93 387.32 P
2 F
-0.59 ( with this transfer) 446.12 387.32 P
(item, as this routine just frees the data without updating any references in) 180 375.82 T
(the map block.) 180 364.32 T
81 349.48 531 354.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 349.48 531 354.48 R
7 X
0 0 0 1 0 0 0 K
V
50 353.48 609.01 353.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 341.48 T
3 F
(ClipboardGetClipboardFile) 99 341.48 T
2 10 Q
(Return the) 180 324.81 T
2 9 Q
(VM) 233.33 324.81 T
2 10 Q
( \336le used to hold clipboard items.) 248.32 324.81 T
0 9 Q
(Pass:) 126 308.31 T
2 10 Q
(Nothing.) 180 308.31 T
0 9 Q
(Returns:) 126 291.81 T
4 10 Q
(bx) 180 291.81 T
2 F
(Handle of) 252 291.81 T
2 9 Q
(UI) 299.78 291.81 T
2 10 Q
(\325) 310.78 291.81 T
(s clipboard) 312.45 291.81 T
2 9 Q
(VM) 365.42 291.81 T
2 10 Q
( \336le.) 380.41 291.81 T
0 9 Q
(Destr) 126 275.31 T
(oyed:) 146.83 275.31 T
2 10 Q
(Nothing.) 180 275.31 T
0 9 Q
(Library:) 126 258.81 T
5 10 Q
(clipbrd.def) 180 258.81 T
81 244.47 531 249.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.47 531 249.48 R
7 X
0 0 0 1 0 0 0 K
V
50 248.47 609.01 248.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 236.47 T
3 F
(ClipboardGetItemInfo) 99 236.47 T
2 10 Q
(Get more information about the passed transfer item.) 180 219.8 T
0 9 Q
(Pass:) 126 203.3 T
4 10 Q
(bx:ax) 180 203.3 T
2 F
(T) 252 203.3 T
(ransfer item header) 258.05 203.3 T
(, as returned by) 349.16 203.3 T
5 F
(ClipboardQueryItem) 252 191.8 T
2 F
(.) 360.52 191.8 T
0 9 Q
(Returns:) 126 175.3 T
4 10 Q
(cx) 180 175.3 T
2 F
(:) 192 175.3 T
4 F
(dx) 194.78 175.3 T
2 F
(Handle:chunk of) 252 175.3 T
6 F
(CIH_sourceID) 331.26 175.3 T
2 F
( from clipboard item header) 396.6 175.3 T
(.) 524.2 175.3 T
0 9 Q
(Destr) 126 158.8 T
(oyed:) 146.83 158.8 T
2 10 Q
(Nothing.) 180 158.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 10
%%Page: "31" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ClipboardGetUndoItemInfo) 389.22 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(31) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
5 10 Q
(clipbrd.def) 180 641.33 T
81 626.99 531 632 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.99 531 632 R
7 X
0 0 0 1 0 0 0 K
V
50 630.99 609.01 630.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.99 T
3 F
(ClipboardGetNormalItemInfo) 99 618.99 T
2 10 Q
(Return normal clipboard item information.) 180 602.33 T
0 9 Q
(Pass:) 126 585.83 T
2 10 Q
(Nothing.) 180 585.83 T
0 9 Q
(Returns:) 126 569.33 T
4 10 Q
(bx) 180 569.33 T
2 F
(Clipboard) 252 569.33 T
2 9 Q
(VM) 300.34 569.33 T
2 10 Q
( \336le handle.) 315.33 569.33 T
5 F
(ax) 180 557.83 T
2 F
(Clipboard) 252 557.83 T
2 9 Q
(VM) 300.34 557.83 T
2 10 Q
( block handle.) 315.33 557.83 T
0 9 Q
(Destr) 126 541.33 T
(oyed:) 146.83 541.33 T
2 10 Q
(Nothing.) 180 541.33 T
0 9 Q
(Library:) 126 524.83 T
5 10 Q
(clipbrd.def) 180 524.83 T
81 510.48 531 515.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 510.48 531 515.49 R
7 X
0 0 0 1 0 0 0 K
V
50 514.48 609.01 514.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 502.48 T
3 F
(ClipboardGetQuickItemInfo) 99 502.48 T
2 10 Q
(Return quick clipboard item information.) 180 485.82 T
0 9 Q
(Pass:) 126 469.32 T
2 10 Q
(Nothing.) 180 469.32 T
0 9 Q
(Returns:) 126 452.82 T
4 10 Q
(bx) 180 452.82 T
2 F
(Clipboard) 252 452.82 T
2 9 Q
(VM) 300.34 452.82 T
2 10 Q
( \336le handle.) 315.33 452.82 T
5 F
(ax) 180 441.32 T
2 F
(Clipboard) 252 441.32 T
2 9 Q
(VM) 300.34 441.32 T
2 10 Q
( block handle.) 315.33 441.32 T
0 9 Q
(Destr) 126 424.82 T
(oyed:) 146.83 424.82 T
2 10 Q
(Nothing.) 180 424.82 T
0 9 Q
(Library:) 126 408.32 T
5 10 Q
(clipbrd.def) 180 408.32 T
81 393.98 531 398.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 393.98 531 398.98 R
7 X
0 0 0 1 0 0 0 K
V
50 397.98 609.01 397.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 385.98 T
3 F
(ClipboardGetQuickT) 99 385.98 T
(ransferStatus) 215.03 385.98 T
2 10 Q
(Check to see if a quick-transfer is in progress.) 180 369.31 T
0 9 Q
(Pass:) 126 352.81 T
2 10 Q
(Nothing.) 180 352.81 T
0 9 Q
(Returns:) 126 336.31 T
7 10 Q
(ZF) 180 336.31 T
2 F
(Clear if quick-transfer is in progress; set otherwise.) 252 336.31 T
(ax) 180 324.81 T
(If a quick transfer is in progress, this will be) 252 324.81 T
5 F
(ClipboardQuckT) 252 313.31 T
(ransferFlags) 338.24 313.31 T
2 F
( indicating what stage the) 404.17 313.31 T
(process is in.) 252 301.81 T
0 9 Q
(Destr) 126 285.31 T
(oyed:) 146.83 285.31 T
2 10 Q
(Nothing.) 180 285.31 T
0 9 Q
(Library:) 126 268.81 T
5 10 Q
(clipbrd.def) 180 268.81 T
81 254.47 531 259.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 254.47 531 259.48 R
7 X
0 0 0 1 0 0 0 K
V
50 258.47 609.01 258.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 246.47 T
3 F
(ClipboardGetUndoItemInfo) 99 246.47 T
2 10 Q
(Return undo clipboard item information.) 180 229.8 T
0 9 Q
(Pass:) 126 213.3 T
2 10 Q
(Nothing.) 180 213.3 T
0 9 Q
(Returns:) 126 196.8 T
4 10 Q
(bx) 180 196.8 T
2 F
(Clipboard) 252 196.8 T
2 9 Q
(VM) 300.34 196.8 T
2 10 Q
( \336le handle.) 315.33 196.8 T
5 F
(ax) 180 185.3 T
2 F
(Clipboard) 252 185.3 T
2 9 Q
(VM) 300.34 185.3 T
2 10 Q
( block handle.) 315.33 185.3 T
0 9 Q
(Destr) 126 168.8 T
(oyed:) 146.83 168.8 T
2 10 Q
(Nothing.) 180 168.8 T
0 9 Q
(Library:) 126 152.3 T
5 10 Q
(clipbrd.def) 180 152.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 11
%%Page: "32" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ClipboardHandleEndMoveCopy) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(32) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
3 F
(ClipboardHandleEndMoveCopy) 99 634.99 T
2 10 Q
-0.61 (This routine handles a) 180 618.33 P
2 9 Q
-0.55 (MSG_MET) 284.81 618.33 P
-0.55 (A_END_COPY) 330.98 618.33 P
2 10 Q
-0.61 (, either preparing to \336nish the) 392.04 618.33 P
(quick-transfer and send a) 180 606.83 T
2 9 Q
(MSG_MET) 301.49 606.83 T
(A_END_MOVE_COPY) 347.66 606.83 T
2 10 Q
( to the object with) 442.83 606.83 T
(the active grab or ending the quick-transfer and sending a) 180 595.33 T
2 9 Q
(MSG_MET) 180 583.83 T
(A_END_OTHER) 226.17 583.83 T
2 10 Q
( to the object with the implied grab.) 296 583.83 T
0 9 Q
(Pass:) 126 567.33 T
4 10 Q
(bx) 180 567.33 T
2 F
(Zero to send a) 252 567.33 T
2 9 Q
(MSG_MET) 319.6 567.33 T
(A_END_OTHER) 365.77 567.33 T
2 10 Q
(; non-zero to send a) 435.6 567.33 T
2 9 Q
(MSG_MET) 252 555.83 T
(A_END_MOVE_COPY) 298.17 555.83 T
2 10 Q
(.) 392.23 555.83 T
5 F
(bp) 180 544.33 T
2 F
(High byte is a) 252 544.33 T
5 F
(UIFunctionsActive) 319.24 544.33 T
2 F
( structure.) 417.37 544.33 T
7 F
(CF) 180 532.83 T
2 F
(Should be set clear) 252 532.83 T
(. Set to check if quick-transfer is in) 338.68 532.83 T
(progress \050this is needed only for internal input handling\051.) 252 521.33 T
0 9 Q
(Returns:) 126 504.83 T
4 10 Q
(ax) 180 504.83 T
2 9 Q
(MSG_MET) 252 504.83 T
(A_END_OTHER) 298.17 504.83 T
2 10 Q
( or) 368 504.83 T
2 9 Q
(MSG_MET) 383 504.83 T
(A_END_MOVE_COPY) 429.17 504.83 T
2 10 Q
(\050as determined by passed value in) 252 493.33 T
4 F
(bx) 411.84 493.33 T
2 F
(\051.) 423.84 493.33 T
0 9 Q
(Destr) 126 476.83 T
(oyed:) 146.83 476.83 T
2 10 Q
(Nothing.) 180 476.83 T
0 9 Q
(Library:) 126 460.33 T
5 10 Q
(clipbrd.def) 180 460.33 T
81 445.98 531 450.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 445.98 531 450.99 R
7 X
0 0 0 1 0 0 0 K
V
50 449.98 609.01 449.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 437.98 T
3 F
(ClipboardQueryItem) 99 437.98 T
2 10 Q
(This routine registers the passed transfer item.) 180 421.32 T
0 9 Q
(Pass:) 126 404.82 T
4 10 Q
(bp) 180 404.82 T
5 F
(ClipboardItemFlags) 252 404.82 T
2 F
( \050all but) 356.26 404.82 T
2 9 Q
(CIF_QUICK) 395.35 404.82 T
2 10 Q
( will be ignored\051.) 447.51 404.82 T
0 9 Q
(Returns:) 126 388.32 T
4 10 Q
(bp) 180 388.32 T
2 F
(Number of formats available \050zero if no clipboard item\051.) 252 388.32 T
(cx:dx) 180 376.82 T
(Owner of clipboard item.) 252 376.82 T
(bx:ax) 180 365.32 T
5 F
-0.4 (VMFileHandle) 252 365.32 P
2 F
-0.39 (:) 327.17 365.32 P
5 F
-0.4 (VMBlockHandle) 329.95 365.32 P
2 F
-0.39 ( to clipboard item header) 414.58 365.32 P
(\050which may then be passed to) 252 353.82 T
5 F
(ClipboardRequestItemFormat) 252 342.32 T
2 F
(\051.) 409.04 342.32 T
0 9 Q
(Destr) 126 325.82 T
(oyed:) 146.83 325.82 T
2 10 Q
(Nothing.) 180 325.82 T
0 9 Q
(W) 126 309.32 T
(arning:) 134.51 309.32 T
2 10 Q
(After calling this routine,) 180 309.32 T
5 F
(ClipboardDoneW) 300.19 309.32 T
(ithItem) 388.89 309.32 T
2 F
( must be called.) 427.77 309.32 T
0 9 Q
(Library:) 126 292.82 T
5 10 Q
(clipbrd.def) 180 292.82 T
81 278.48 531 283.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 278.48 531 283.48 R
7 X
0 0 0 1 0 0 0 K
V
50 282.48 609.01 282.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 270.48 T
3 F
(ClipboardRegisterItem) 99 270.48 T
2 10 Q
(This routine registers the passed transfer item.) 180 253.81 T
0 9 Q
(Pass:) 126 237.31 T
4 10 Q
(ax) 180 237.31 T
2 F
(Handle of) 252 237.31 T
2 9 Q
(VM) 299.78 237.31 T
2 10 Q
( block containing) 314.77 237.31 T
5 F
(ClipboardItemHeader) 396.08 237.31 T
2 F
(structure or zero to null the clipboard item.) 252 225.81 T
4 F
(bx) 180 214.31 T
2 F
(Handle of) 252 214.31 T
2 9 Q
(VM) 299.78 214.31 T
2 10 Q
( \336le containing clipboard item.) 314.77 214.31 T
4 F
(bp) 180 202.81 T
5 F
(ClipboardItemFlags) 252 202.81 T
2 F
(.) 356.26 202.81 T
0 9 Q
(Returns:) 126 186.31 T
7 10 Q
(CF) 180 186.31 T
2 F
(If registering a quick transfer item, this \337ag\325) 252 186.31 T
(s behavior is) 457.76 186.31 T
-0.73 (unde\336ned. If registering a normal transfer item, this \337ag will) 252 174.81 P
(be set on an error) 252 163.31 T
(, clear otherwise.) 332.56 163.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 12
%%Page: "33" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ClipboardRequestItemFormat) 375.24 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(33) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
5 10 Q
(clipbrd.def) 180 624.83 T
81 610.49 531 615.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 610.49 531 615.5 R
7 X
0 0 0 1 0 0 0 K
V
50 614.49 609.01 614.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 602.49 T
3 F
(ClipboardRemoteReceive) 99 602.49 T
2 10 Q
(Receive clipboard from remotely connected machine.) 180 585.83 T
0 9 Q
(Pass:) 126 569.33 T
2 10 Q
(Nothing.) 180 569.33 T
0 9 Q
(Returns:) 126 552.83 T
7 10 Q
(CF) 180 552.83 T
2 F
(Set on error) 252 552.83 T
(, clear on success.) 306.44 552.83 T
0 9 Q
(Destr) 126 536.33 T
(oyed:) 146.83 536.33 T
2 10 Q
(Nothing.) 180 536.33 T
0 9 Q
(Library:) 126 519.83 T
5 10 Q
(clipbrd.def) 180 519.83 T
81 505.48 531 510.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 505.48 531 510.49 R
7 X
0 0 0 1 0 0 0 K
V
50 509.48 609.01 509.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 497.48 T
3 F
(ClipboardRemoteSend) 99 497.48 T
2 10 Q
(Send clipboard to remotely connected machine.) 180 480.82 T
0 9 Q
(Pass:) 126 464.32 T
2 10 Q
(Nothing.) 180 464.32 T
0 9 Q
(Returns:) 126 447.82 T
7 10 Q
(CF) 180 447.82 T
2 F
(Set on failure, clear on success.) 252 447.82 T
0 9 Q
(Destr) 126 431.32 T
(oyed:) 146.83 431.32 T
2 10 Q
(Nothing.) 180 431.32 T
0 9 Q
(Library:) 126 414.82 T
5 10 Q
(clipbrd.def) 180 414.82 T
81 400.48 531 405.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 400.48 531 405.48 R
7 X
0 0 0 1 0 0 0 K
V
50 404.48 609.01 404.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 392.48 T
3 F
(ClipboardRemoveFromNoti\336cationList) 99 392.48 T
2 10 Q
(Remove the passed) 180 375.81 T
2 9 Q
(OD) 271.12 375.81 T
2 10 Q
( from the transfer notify list.) 285.12 375.81 T
0 9 Q
(Pass:) 126 359.31 T
4 10 Q
(cx) 180 359.31 T
2 F
(:) 192 359.31 T
4 F
(dx) 194.78 359.31 T
2 9 Q
(OD) 252 359.31 T
2 10 Q
( to remove. If) 266 359.31 T
4 F
(cx) 329.89 359.31 T
2 F
( is the process handle, then) 341.89 359.31 T
4 F
(dx) 470.79 359.31 T
2 F
( must be) 482.79 359.31 T
(zero.) 252 347.81 T
0 9 Q
(Returns:) 126 331.31 T
7 10 Q
(CF) 180 331.31 T
2 F
(Clear if successfully removed, set if was not found.) 252 331.31 T
0 9 Q
(Destr) 126 314.81 T
(oyed:) 146.83 314.81 T
2 10 Q
(Nothing.) 180 314.81 T
0 9 Q
(Library:) 126 298.31 T
5 10 Q
(clipbrd.def) 180 298.31 T
81 283.97 531 288.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 283.97 531 288.98 R
7 X
0 0 0 1 0 0 0 K
V
50 287.97 609.01 287.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 275.97 T
3 F
(ClipboardRequestItemFormat) 99 275.97 T
2 10 Q
(This routine requests the given transfer item, as stored in the given format) 180 259.3 T
(type.) 180 247.8 T
0 9 Q
(Pass:) 126 231.3 T
4 10 Q
(bx:ax) 180 231.3 T
2 F
(T) 252 231.3 T
(ransfer item header) 258.05 231.3 T
(, as returned by) 349.16 231.3 T
5 F
(ClipboardQueryItem) 252 219.8 T
2 F
(.) 360.52 219.8 T
4 F
(cx) 180 208.3 T
2 F
(:) 192 208.3 T
4 F
(dx) 194.78 208.3 T
2 F
(Format manufacturer:format type.) 252 208.3 T
0 9 Q
(Returns:) 126 191.8 T
4 10 Q
(bx) 180 191.8 T
2 F
(File handle of transfer item.) 252 191.8 T
5 F
(ax) 180 180.3 T
2 F
(:) 192.22 180.3 T
4 F
(bp) 195 180.3 T
2 9 Q
(VM) 252 180.3 T
2 10 Q
( chain \050zero if none\051.) 266.99 180.3 T
4 F
(cx) 180 168.8 T
2 F
(First extra data word.) 252 168.8 T
4 F
(dx) 180 157.3 T
2 F
(Second extra data word.) 252 157.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 13
%%Page: "34" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ClipboardSetQuickTransferFeedback) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(34) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
5 10 Q
(clipbrd.def) 180 624.83 T
81 610.49 531 615.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 610.49 531 615.5 R
7 X
0 0 0 1 0 0 0 K
V
50 614.49 609.01 614.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 602.49 T
3 F
(ClipboardSetQuickT) 99 602.49 T
(ransferFeedback) 213.7 602.49 T
2 10 Q
(Set mouse cursor for quick-transfer) 180 585.83 T
(.) 342.95 585.83 T
0 9 Q
(Pass:) 126 569.33 T
4 10 Q
(ax) 180 569.33 T
5 F
(ClipboardQuickT) 252 569.33 T
(ransferFeedback) 341.94 569.33 T
2 F
( value.) 430.1 569.33 T
5 F
(bp) 180 557.83 T
2 F
-0.73 (If ax is) 252 557.83 P
2 9 Q
-0.65 (CQTF_MOVE) 284.27 557.83 P
2 10 Q
-0.73 ( or) 342.77 557.83 P
2 9 Q
-0.65 (CQTF_COPY) 356.32 557.83 P
2 10 Q
-0.73 (, then the high byte of this) 411.06 557.83 P
-0.55 (register should hold a UIFunctionsActive value.) 252 546.33 P
2 9 Q
-0.5 (UIF) 472.95 546.33 P
-0.5 (A_MOVE) 489.28 546.33 P
2 10 Q
-0.52 (signals that you wish to force the cursor to be that associated) 252 534.83 P
(with a quick-move;) 252 523.33 T
2 9 Q
(UIF) 342.39 523.33 T
(A_COPY) 358.73 523.33 T
2 10 Q
( that you wish to force the) 395.56 523.33 T
(quick-copy cursor) 252 511.83 T
(.) 332.17 511.83 T
0 9 Q
(Returns:) 126 495.33 T
2 10 Q
(Nothing.) 180 495.33 T
0 9 Q
(Destr) 126 478.83 T
(oyed:) 146.83 478.83 T
2 10 Q
(Nothing.) 180 478.83 T
0 9 Q
(Library:) 126 462.33 T
5 10 Q
(clipbrd.def) 180 462.33 T
81 447.98 531 452.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 447.98 531 452.99 R
7 X
0 0 0 1 0 0 0 K
V
50 451.98 609.01 451.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 439.98 T
3 F
(ClipboardStartQuickT) 99 439.98 T
(ransfer) 222.36 439.98 T
2 10 Q
(Initiate a quick transfer \050normally called from) 180 423.32 T
2 9 Q
(MSG_MET) 180 411.82 T
(A_ST) 226.17 411.82 T
(ART_MOVE_COPY) 248.35 411.82 T
2 10 Q
(\051.) 330.68 411.82 T
0 9 Q
(Pass:) 126 395.32 T
4 10 Q
(si) 180 395.32 T
5 F
(ClipboardQuickT) 252 395.32 T
(ransferFlags) 341.94 395.32 T
2 F
(. The) 407.87 395.32 T
2 9 Q
(CQTF_COPY_ONL) 433.99 395.32 T
(Y) 513.85 395.32 T
2 10 Q
(\337ag should be set if the source only supports copying.) 252 383.82 T
(The) 252 372.32 T
2 9 Q
(CQTF_USE_REGION) 272.56 372.32 T
2 10 Q
( \337ag should be set if you will be) 364.57 372.32 T
(passing a region to use as the quick-transfer cursor) 252 360.82 T
(.) 488.12 360.82 T
(The) 252 349.32 T
2 9 Q
(CQTF_NOTIFICA) 272.56 349.32 T
(TION) 348.74 349.32 T
2 10 Q
( \337ag should be set if the source) 372.74 349.32 T
(wants noti\336cation when the quick-transfer item is accepted) 252 337.82 T
(by the destination.) 252 326.32 T
4 F
(ax) 180 314.82 T
2 F
(Initial cursor to use \050) 252 314.82 T
2 9 Q
(CQTF_MOVE) 349.22 314.82 T
2 10 Q
( or) 407.72 314.82 T
2 9 Q
(CQTF_COPY) 422.72 314.82 T
2 10 Q
(\051. This) 478.57 314.82 T
-0.56 (should be -1 if you wish to use the default cursor \050i.e. object is) 252 303.32 P
-0.52 (a quick-transfer source, but not a quick transfer destination\051.) 252 291.82 P
4 F
(cx) 180 280.32 T
2 F
(,) 192 280.32 T
4 F
(dx) 197.56 280.32 T
2 F
(If) 252 280.32 T
2 9 Q
(CQTF_USE_REGION) 262.18 280.32 T
2 10 Q
( set, these registers hold the mouse) 354.19 280.32 T
(position in screen coordinates. Otherwise they are ignored.) 252 268.82 T
4 F
(bx) 180 257.32 T
2 F
(:) 192 257.32 T
4 F
(di) 194.78 257.32 T
2 F
(If) 252 257.32 T
2 9 Q
( CQTF_NOTIFICA) 259.4 257.32 T
(TION) 338.08 257.32 T
2 10 Q
(set, these registers hold the) 364.58 257.32 T
2 9 Q
(OD) 494.96 257.32 T
2 10 Q
( to) 508.97 257.32 T
(receive) 252 245.82 T
2 9 Q
(MSG_NOTIFY_QUICK_TRANSFER_MOVE) 287.18 245.82 T
2 10 Q
(,) 473.69 245.82 T
2 9 Q
(MSG_NOTIFY_QUICK_TRANSFER_COPY) 252 234.32 T
2 10 Q
(, and) 434.74 234.32 T
2 9 Q
(MSG_MET) 252 222.82 T
(A_CLIPBOARD_NOTIFY_QUICK_TRANSFER_FEED) 298.17 222.82 T
(BACK) 252 211.32 T
2 10 Q
(.) 278.5 211.32 T
4 F
(ss) 180 199.82 T
2 F
(:) 192 199.82 T
4 F
(bp) 194.78 199.82 T
2 F
(If) 252 199.82 T
2 9 Q
(CQTF_USE_REGION) 262.18 199.82 T
2 10 Q
( set, values will be passed on stack.) 354.19 199.82 T
0 9 Q
(Pass on stack:) 126 183.32 T
2 10 Q
(The following structure will only be passed if) 180 183.32 T
2 9 Q
(CQTF_USE_REGION) 390.21 183.32 T
2 10 Q
( is set:) 482.22 183.32 T
( ClipboardQuickT) 180 171.82 T
(ransferRegionInfo struct) 261.8 171.82 T
2 9 Q
( CQTRI) 252 160.32 T
2 10 Q
(_paramAX word) 284.17 160.32 T
2 9 Q
( CQTRI) 252 148.82 T
2 10 Q
(_paramBX word) 284.17 148.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 14
%%Page: "35" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ConfigBuildTitledMoniker) 396.97 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(35) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 9 Q
0 X
(CQTRI) 254.78 641.33 T
2 10 Q
(_paramCX word) 284.44 641.33 T
2 9 Q
(CQTRI) 254.78 629.83 T
2 10 Q
(_paramDX word) 284.44 629.83 T
2 9 Q
( CQTRI) 252 618.33 T
2 10 Q
(_regionPos Point) 284.17 618.33 T
2 9 Q
( CQTRI) 252 606.83 T
2 10 Q
(_strategy dword) 284.17 606.83 T
2 9 Q
( CQTRI) 252 595.33 T
2 10 Q
(_region dword) 284.17 595.33 T
(; pointer to region) 444.24 595.33 T
( ClipboardQuickT) 180 583.83 T
(ransferRegionInfo ends) 261.8 583.83 T
6 9 Q
(CQTRI) 180 567.33 T
6 10 Q
(_region) 210 567.33 T
2 F
( must be in a block that is in memory already) 243.69 567.33 T
(.) 452.26 567.33 T
6 9 Q
-0.06 (CQTRI) 180 550.83 P
6 10 Q
-0.07 (_strategy) 210 550.83 P
2 F
-0.07 ( should be a video driver strategy) 251.47 550.83 P
-0.07 (. T) 404.04 550.83 P
-0.07 (o \336nd out the strategy of) 415.29 550.83 P
(the video driver associated with your window) 180 539.33 T
(, send your object a) 388.17 539.33 T
2 9 Q
(MSG_VIS_VUP_QUER) 180 527.83 T
(Y) 277.33 527.83 T
2 10 Q
( with) 283.67 527.83 T
2 9 Q
(VUQ_VIDEO_DRIVER) 310.16 527.83 T
2 10 Q
(. Pass the handle thus) 407.32 527.83 T
(gained to) 180 516.33 T
5 F
(GeodeInfoDriver) 225.38 516.33 T
2 F
(, which will return the strategy) 312.78 516.33 T
(.) 456.31 516.33 T
0 9 Q
(Returns:) 126 499.83 T
7 10 Q
(CF) 180 499.83 T
2 F
-0.39 (Clear if) 252 499.83 P
2 9 Q
-0.35 (UI) 288.64 499.83 P
2 10 Q
-0.39 ( part of new quick-transfer successfully begun; set) 299.64 499.83 P
(if a quick-transfer was already in progress.) 252 488.33 T
0 9 Q
(Destr) 126 471.83 T
(oyed:) 146.83 471.83 T
2 10 Q
(Nothing.) 180 471.83 T
0 9 Q
(Library:) 126 455.33 T
5 10 Q
(clipbrd.def) 180 455.33 T
81 440.99 531 446 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 440.99 531 446 R
7 X
0 0 0 1 0 0 0 K
V
50 444.99 609.01 444.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 432.99 T
3 F
(ClipboardT) 99 432.99 T
(estItemFormat) 161.45 432.99 T
2 10 Q
(This routine determines whether the clipboard item supports the speci\336ed) 180 416.33 T
(format.) 180 404.83 T
0 9 Q
(Pass:) 126 388.33 T
4 10 Q
(bx:ax) 180 388.33 T
2 F
(T) 252 388.33 T
(ransfer item header) 258.05 388.33 T
(, as returned by) 349.16 388.33 T
5 F
(ClipboardQueryItem) 252 376.83 T
2 F
(.) 360.52 376.83 T
4 F
(cx:dx) 180 365.33 T
2 F
(Format manufacturer:format type.) 252 365.33 T
0 9 Q
(Returns:) 126 348.83 T
7 10 Q
(CF) 180 348.83 T
2 F
(Clear if format supported; set otherwise.) 252 348.83 T
0 9 Q
(Destr) 126 332.33 T
(oyed:) 146.83 332.33 T
2 10 Q
(Nothing.) 180 332.33 T
0 9 Q
(Library:) 126 315.83 T
5 10 Q
(clipbrd.def) 180 315.83 T
81 301.48 531 306.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 301.48 531 306.49 R
7 X
0 0 0 1 0 0 0 K
V
50 305.48 609.01 305.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 293.48 T
3 F
(ClipboardUnregisterItem) 99 293.48 T
2 10 Q
(This routine unregisters the passed clipboard item, restoring any transfer) 180 276.82 T
(which may have been disturbed by the last normal clipboard item.) 180 265.32 T
0 9 Q
(Pass:) 126 248.82 T
4 10 Q
(cx) 180 248.82 T
2 F
(:) 192 248.82 T
4 F
(dx) 194.78 248.82 T
2 F
(Owner output descriptor used when registering previous) 252 248.82 T
(item.) 252 237.32 T
0 9 Q
(Returns:) 126 220.82 T
2 10 Q
(Nothing.) 180 220.82 T
0 9 Q
(Destr) 126 204.32 T
(oyed:) 146.83 204.32 T
2 10 Q
(Nothing.) 180 204.32 T
0 9 Q
(Library:) 126 187.82 T
5 10 Q
(clipbrd.def) 180 187.82 T
81 173.48 531 178.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 173.48 531 178.48 R
7 X
0 0 0 1 0 0 0 K
V
50 177.48 609.01 177.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 165.48 T
3 F
(Con\336gBuildT) 99 165.48 T
(itledMoniker) 174.11 165.48 T
2 10 Q
(Global routine to build a titled moniker based on the passed moniker list) 180 148.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 15
%%Page: "36" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ConfigBuildTitledMonikerUsingToken) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(36) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
2 10 Q
(*) 180 641.33 T
4 F
(ds) 185 641.33 T
2 F
(:) 197 641.33 T
4 F
(si) 199.78 641.33 T
2 F
(visual moniker list.) 252 641.33 T
0 9 Q
(Returns:) 126 624.83 T
2 10 Q
(Nothing; visMoniker list replaced with visMoniker) 180 624.83 T
(.) 412.98 624.83 T
0 9 Q
(Destr) 126 608.33 T
(oyed:) 146.83 608.33 T
2 10 Q
(Nothing.) 180 608.33 T
0 9 Q
(Library:) 126 591.83 T
5 10 Q
(con\336g.def) 180 591.83 T
81 577.49 531 582.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 577.49 531 582.5 R
7 X
0 0 0 1 0 0 0 K
V
50 581.49 609.01 581.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 569.49 T
3 F
(Con\336gBuildT) 99 569.49 T
(itledMonikerUsingT) 174.11 569.49 T
(oken) 284.57 569.49 T
2 10 Q
(Combine 2 vis monikers\321placing the text moniker centered below the) 180 552.83 T
(picture moniker) 180 541.33 T
(.) 253.33 541.33 T
0 9 Q
(Pass:) 126 524.83 T
4 10 Q
(ds) 180 524.83 T
2 F
(Local memory block in which to create the new moniker) 252 524.83 T
(.) 509.25 524.83 T
4 F
(ax) 180 513.33 T
2 F
(:) 192 513.33 T
4 F
(bx) 194.78 513.33 T
2 F
(:) 206.78 513.33 T
4 F
(si) 209.56 513.33 T
2 F
(T) 252 513.33 T
(oken characters.) 257.75 513.33 T
0 9 Q
(Returns:) 126 496.83 T
7 10 Q
(CF) 180 496.83 T
2 F
(Clear if found; set otherwise.) 252 496.83 T
(*) 180 485.33 T
4 F
(ds) 185 485.33 T
2 F
(:) 197 485.33 T
4 F
(dx) 199.78 485.33 T
2 F
(New moniker) 252 485.33 T
(.) 313.49 485.33 T
0 9 Q
(Destr) 126 468.83 T
(oyed:) 146.83 468.83 T
4 10 Q
(ax) 180 468.83 T
2 F
(,) 192 468.83 T
4 F
(bx) 197.56 468.83 T
2 F
(,) 209.56 468.83 T
4 F
(cx) 215.12 468.83 T
2 F
(,) 227.12 468.83 T
4 F
(di) 232.68 468.83 T
0 9 Q
(Library:) 126 452.33 T
5 10 Q
(con\336g.def) 180 452.33 T
81 437.98 531 442.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 437.98 531 442.99 R
7 X
0 0 0 1 0 0 0 K
V
50 441.98 609.01 441.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 429.98 T
3 F
(DBAlloc) 99 429.98 T
2 10 Q
(Allocate a new database item in a speci\336ed group.) 180 413.32 T
0 9 Q
(Pass:) 126 396.82 T
4 10 Q
(bx) 180 396.82 T
2 F
(File handle of the database \336le.) 252 396.82 T
4 F
(ax) 180 385.32 T
2 F
(Group identi\336er of the new item \050) 252 385.32 T
2 9 Q
(VM) 406.82 385.32 T
2 10 Q
( block handle\051.) 421.81 385.32 T
(For an ungrouped item, pass) 252 373.82 T
2 9 Q
(DB_UNGROUPED) 387.57 373.82 T
2 10 Q
(.) 467.58 373.82 T
4 F
(cx) 180 362.32 T
2 F
(Size of the new item.) 252 362.32 T
4 F
(ds) 180 350.82 T
2 F
(Optional segment address of an item-block.) 252 350.82 T
4 F
(es) 180 339.32 T
2 F
(Optional segment address of an item-block.) 252 339.32 T
0 9 Q
(Returns:) 126 322.82 T
4 10 Q
(di) 180 322.82 T
2 F
(Item number of newly allocated item.) 252 322.82 T
4 F
(ax) 180 311.32 T
2 F
(Group number of new item.) 252 311.32 T
4 F
(ds) 180 299.82 T
2 F
(\050If passed\051 \336xed up.) 252 299.82 T
4 F
(es) 180 288.32 T
2 F
(\050If passed\051 \336xed up.) 252 288.32 T
0 9 Q
(Destr) 126 271.82 T
(oyed:) 146.83 271.82 T
2 10 Q
(Nothing.) 180 271.82 T
0 9 Q
(Library:) 126 255.32 T
5 10 Q
(dbase.def) 180 255.32 T
81 240.98 531 245.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 240.98 531 245.98 R
7 X
0 0 0 1 0 0 0 K
V
50 244.98 609.01 244.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 232.98 T
3 F
(DBCopyDBItem) 99 232.98 T
2 10 Q
(Copy an existing database item into a newly-allocated item.) 180 216.31 T
0 9 Q
(Pass:) 126 199.81 T
4 10 Q
(bx) 180 199.81 T
2 F
(File handle of the source database \336le.) 252 199.81 T
4 F
(ax) 180 188.31 T
2 F
(Group identi\336er of the source database item.) 252 188.31 T
4 F
(di) 180 176.81 T
2 F
(Item number of the source database item.) 252 176.81 T
4 F
(bp) 180 165.31 T
2 F
(File handle of the destination database \336le.) 252 165.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 16
%%Page: "37" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DBFree) 511.35 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(37) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 10 Q
0 X
(cx) 180 641.33 T
2 F
(Group identi\336er of the destination item\325) 252 641.33 T
(s group. For and) 435.72 641.33 T
(ungrouped item, pass) 252 629.83 T
2 9 Q
(DB_UNGROUPED) 354.23 629.83 T
2 10 Q
(.) 434.24 629.83 T
0 9 Q
(Returns:) 126 613.33 T
4 10 Q
(di) 180 613.33 T
2 F
(Item number of the new item.) 252 613.33 T
4 F
(ax) 180 601.83 T
2 F
(Group identi\336er of the new item.) 252 601.83 T
0 9 Q
(Destr) 126 585.33 T
(oyed:) 146.83 585.33 T
2 10 Q
(Nothing.) 180 585.33 T
0 9 Q
(Library:) 126 568.83 T
5 10 Q
(dbase.def) 180 568.83 T
0 9 Q
(W) 126 552.83 T
(arning:) 134.51 552.83 T
2 10 Q
-0.28 (Because a new chunk is allocated, chunks or blocks may be moved. Thus, all) 180 552.83 P
(pointers are invalidated by this routine.) 180 541.33 T
81 526.49 531 531.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 526.49 531 531.5 R
7 X
0 0 0 1 0 0 0 K
V
50 530.49 609.01 530.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 518.49 T
3 F
(DBDeleteAt) 99 518.49 T
2 10 Q
(Delete a given number of bytes from within the speci\336ed database item.) 180 501.83 T
0 9 Q
(Pass:) 126 485.33 T
4 10 Q
(bx) 180 485.33 T
2 F
(File handle of the database \336le.) 252 485.33 T
4 F
(ax) 180 473.83 T
2 F
(Group identi\336er of the item.) 252 473.83 T
4 F
(di) 180 462.33 T
2 F
(Item number of the item.) 252 462.33 T
4 F
(dx) 180 450.83 T
2 F
(Offset of \336rst byte to be deleted.) 252 450.83 T
4 F
(cx) 180 439.33 T
2 F
(T) 252 439.33 T
(otal number of bytes to be deleted.) 257.75 439.33 T
0 9 Q
(Returns:) 126 422.83 T
2 10 Q
(Nothing.) 180 422.83 T
0 9 Q
(Destr) 126 406.33 T
(oyed:) 146.83 406.33 T
2 10 Q
(Nothing.) 180 406.33 T
0 9 Q
(Library:) 126 389.83 T
5 10 Q
(dbase.def) 180 389.83 T
81 375.48 531 380.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 375.48 531 380.49 R
7 X
0 0 0 1 0 0 0 K
V
50 379.48 609.01 379.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 367.48 T
3 F
(DBDirty) 99 367.48 T
2 10 Q
(Mark a database item as dirty so it will be written to the database \336le with) 180 350.82 T
(its changes.) 180 339.32 T
0 9 Q
(Pass:) 126 322.82 T
4 10 Q
(es) 180 322.82 T
2 F
(Segment of locked block containing the database item.) 252 322.82 T
0 9 Q
(Returns:) 126 306.32 T
2 10 Q
(Nothing.) 180 306.32 T
0 9 Q
(Destr) 126 289.82 T
(oyed:) 146.83 289.82 T
2 10 Q
(Nothing.) 180 289.82 T
0 9 Q
(Library:) 126 273.32 T
5 10 Q
(dbase.def) 180 273.32 T
81 258.98 531 263.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 258.98 531 263.98 R
7 X
0 0 0 1 0 0 0 K
V
50 262.98 609.01 262.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 250.98 T
3 F
(DBFree) 99 250.98 T
2 10 Q
(Remove the speci\336ed item from the database.) 180 234.31 T
0 9 Q
(Pass:) 126 217.81 T
4 10 Q
(bx) 180 217.81 T
2 F
(File handle of the database \336le.) 252 217.81 T
4 F
(ax) 180 206.31 T
2 F
(Group identi\336er of the item.) 252 206.31 T
4 F
(di) 180 194.81 T
2 F
(Item number of the item to be freed.) 252 194.81 T
0 9 Q
(Returns:) 126 178.31 T
2 10 Q
(Nothing.) 180 178.31 T
0 9 Q
(Destr) 126 161.81 T
(oyed:) 146.83 161.81 T
2 10 Q
(Nothing.) 180 161.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 17
%%Page: "38" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DBGetMap) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(38) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
5 10 Q
(dbase.def) 180 641.33 T
81 626.99 531 632 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.99 531 632 R
7 X
0 0 0 1 0 0 0 K
V
50 630.99 609.01 630.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.99 T
3 F
(DBGetMap) 99 618.99 T
2 10 Q
(Return the item that is set to be the database\325) 180 602.33 T
(s map.) 392.09 602.33 T
0 9 Q
(Pass:) 126 585.83 T
4 10 Q
(bx) 180 585.83 T
2 F
(File handle of the database \336le.) 252 585.83 T
0 9 Q
(Returns:) 126 569.33 T
4 10 Q
(ax) 180 569.33 T
2 F
(Group identi\336er of the map item\325) 252 569.33 T
(s group.) 403.68 569.33 T
4 F
(di) 180 557.83 T
2 F
(Item number of the map item.) 252 557.83 T
0 9 Q
(Destr) 126 541.33 T
(oyed:) 146.83 541.33 T
2 10 Q
(Nothing.) 180 541.33 T
0 9 Q
(Library:) 126 524.83 T
5 10 Q
(dbase.def) 180 524.83 T
81 510.48 531 515.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 510.48 531 515.49 R
7 X
0 0 0 1 0 0 0 K
V
50 514.48 609.01 514.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 502.48 T
3 F
(DBGroupAlloc) 99 502.48 T
2 10 Q
(Create a new database group.) 180 485.82 T
0 9 Q
(Pass:) 126 469.32 T
4 10 Q
(bx) 180 469.32 T
2 F
(File handle of the database \336le.) 252 469.32 T
0 9 Q
(Returns:) 126 452.82 T
4 10 Q
(ax) 180 452.82 T
2 F
(Group identi\336er of the new group.) 252 452.82 T
0 9 Q
(Destr) 126 436.32 T
(oyed:) 146.83 436.32 T
2 10 Q
(Nothing.) 180 436.32 T
0 9 Q
(Library:) 126 419.82 T
5 10 Q
(dbase.def) 180 419.82 T
81 405.48 531 410.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 405.48 531 410.48 R
7 X
0 0 0 1 0 0 0 K
V
50 409.48 609.01 409.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 397.48 T
3 F
(DBGroupFree) 99 397.48 T
2 10 Q
(Remove all items in the speci\336ed group and delete the group.) 180 380.81 T
0 9 Q
(Pass:) 126 364.31 T
4 10 Q
(bx) 180 364.31 T
2 F
(File handle of the database \336le.) 252 364.31 T
4 F
(ax) 180 352.81 T
2 F
(Group identi\336er of the group to be deleted.) 252 352.81 T
0 9 Q
(Returns:) 126 336.31 T
2 10 Q
(Nothing.) 180 336.31 T
0 9 Q
(Destr) 126 319.81 T
(oyed:) 146.83 319.81 T
2 10 Q
(Nothing.) 180 319.81 T
0 9 Q
(Library:) 126 303.31 T
5 10 Q
(dbase.def) 180 303.31 T
81 288.97 531 293.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 288.97 531 293.98 R
7 X
0 0 0 1 0 0 0 K
V
50 292.97 609.01 292.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 280.97 T
3 F
(DBInsertAt) 99 280.97 T
2 10 Q
(Insert a speci\336ed number of bytes within a given database item. The bytes) 180 264.3 T
(may be inserted at any offset, and the new bytes will be zeroed.) 180 252.8 T
0 9 Q
(Pass:) 126 236.3 T
4 10 Q
(bx) 180 236.3 T
2 F
(File handle of the database \336le.) 252 236.3 T
4 F
(ax) 180 224.8 T
2 F
(Group identi\336er of the item.) 252 224.8 T
4 F
(di) 180 213.3 T
2 F
(Item number of the item.) 252 213.3 T
4 F
(cx) 180 201.8 T
2 F
(T) 252 201.8 T
(otal number of bytes to insert.) 257.75 201.8 T
4 F
(ds) 180 190.3 T
2 F
(Optional segment address of an item-block.) 252 190.3 T
4 F
(es) 180 178.8 T
2 F
(Optional segment address of an item-block.) 252 178.8 T
0 9 Q
(Returns:) 126 162.3 T
4 10 Q
(ds) 180 162.3 T
2 F
(\050If passed\051 \336xed up.) 252 162.3 T
4 F
(es) 180 150.8 T
2 F
(\050If passed\051 \336xed up.) 252 150.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "38" 18
%%Page: "39" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DBReAlloc) 491.12 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(39) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 10 Q
0 X
(si) 180 641.33 T
(Old segment address of changed item block.) 252 641.33 T
(ax) 180 629.83 T
(New segment address of changed item block.) 252 629.83 T
0 9 Q
(Destr) 126 613.33 T
(oyed:) 146.83 613.33 T
2 10 Q
(Nothing.) 180 613.33 T
0 9 Q
(Library:) 126 596.83 T
5 10 Q
(dbase.def) 180 596.83 T
0 9 Q
(W) 126 580.83 T
(arning:) 134.51 580.83 T
2 10 Q
(Because the chunk is resized larger) 180 580.83 T
(, chunks or blocks may be moved. Thus,) 343.33 580.83 T
(all pointers are invalidated by this routine.) 180 569.33 T
81 554.49 531 559.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 554.49 531 559.5 R
7 X
0 0 0 1 0 0 0 K
V
50 558.49 609.01 558.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 546.49 T
3 F
(DBLock) 99 546.49 T
2 10 Q
(Lock a database item for exclusive access. When you\325re done with the item,) 180 529.83 T
(unlock it with) 180 518.33 T
5 F
(DBUnlock) 247.05 518.33 T
2 F
(.) 300.2 518.33 T
0 9 Q
(Pass:) 126 501.83 T
4 10 Q
(bx) 180 501.83 T
2 F
(File handle of the database \336le.) 252 501.83 T
4 F
(ax) 180 490.33 T
2 F
(Item\325) 252 490.33 T
(s group number) 275.52 490.33 T
(.) 347.74 490.33 T
4 F
(di) 180 478.83 T
2 F
(Item\325) 252 478.83 T
(s item number) 275.52 478.83 T
(.) 342.01 478.83 T
0 9 Q
(Returns:) 126 462.33 T
4 10 Q
(*es:di) 180 462.33 T
2 F
(Segment:chunk handle of database item.) 252 462.33 T
0 9 Q
(Destr) 126 445.83 T
(oyed:) 146.83 445.83 T
2 10 Q
(Nothing.) 180 445.83 T
0 9 Q
(Library:) 126 429.33 T
5 10 Q
(dbase.def) 180 429.33 T
81 414.98 531 419.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 414.98 531 419.99 R
7 X
0 0 0 1 0 0 0 K
V
50 418.98 609.01 418.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 406.98 T
3 F
(DBLockMap) 99 406.98 T
2 10 Q
(Lock the map item for the database \336le. This is a utility that is slightly) 180 390.32 T
(quicker than calling) 180 378.82 T
5 F
(DBGetMap) 275.57 378.82 T
2 F
( followed by) 332.6 378.82 T
5 F
(DBLock) 390.02 378.82 T
2 F
(. When \336nished with) 431.69 378.82 T
(the map item, you must call) 180 367.32 T
5 F
(DBUnlock) 311.88 367.32 T
2 F
( on it.) 365.03 367.32 T
0 9 Q
(Pass:) 126 350.82 T
4 10 Q
(bx) 180 350.82 T
2 F
(File handle of the database \336le.) 252 350.82 T
0 9 Q
(Returns:) 126 334.32 T
4 10 Q
(*es:di) 180 334.32 T
2 F
(Segment:chunk handle of the locked map item.) 252 334.32 T
4 F
(di) 180 322.82 T
2 F
-0 (Zero if there is no map item. In this case,) 252 322.82 P
4 F
-0.01 (es) 444.38 322.82 P
2 F
-0 ( is not returned.) 456.38 322.82 P
0 9 Q
(Destr) 126 306.32 T
(oyed:) 146.83 306.32 T
2 10 Q
(Nothing.) 180 306.32 T
0 9 Q
(Library:) 126 289.82 T
5 10 Q
(dbase.def) 180 289.82 T
81 275.48 531 280.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 275.48 531 280.48 R
7 X
0 0 0 1 0 0 0 K
V
50 279.48 609.01 279.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 267.48 T
3 F
(DBReAlloc) 99 267.48 T
2 10 Q
(Change the size of an existing database item.) 180 250.81 T
0 9 Q
(Pass:) 126 234.31 T
4 10 Q
(bx) 180 234.31 T
2 F
(File handle of the database \336le.) 252 234.31 T
4 F
(ax) 180 222.81 T
2 F
(Group identi\336er of the item \050) 252 222.81 T
2 9 Q
(VM) 385.15 222.81 T
2 10 Q
( block handle\051.) 400.14 222.81 T
4 F
(di) 180 211.31 T
2 F
(Item number of the item to be reallocated.) 252 211.31 T
4 F
(cx) 180 199.81 T
2 F
(New size of the item.) 252 199.81 T
4 F
(ds) 180 188.31 T
2 F
(Optional segment address of an item-block.) 252 188.31 T
4 F
(es) 180 176.81 T
2 F
(Optional segment address of an item-block.) 252 176.81 T
0 9 Q
(Returns:) 126 160.31 T
4 10 Q
(ds) 180 160.31 T
2 F
(\050If passed\051 \336xed up.) 252 160.31 T
4 F
(es) 180 148.81 T
2 F
(\050If passed\051 \336xed up.) 252 148.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 19
%%Page: "40" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DBSetMap) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(40) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
5 10 Q
(dbase.def) 180 624.83 T
81 610.49 531 615.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 610.49 531 615.5 R
7 X
0 0 0 1 0 0 0 K
V
50 614.49 609.01 614.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 602.49 T
3 F
(DBSetMap) 99 602.49 T
2 10 Q
(Mark a database item as being the map item for the database \336le.) 180 585.83 T
0 9 Q
(Pass:) 126 569.33 T
4 10 Q
(bx) 180 569.33 T
2 F
(File handle of the database \336le.) 252 569.33 T
4 F
(ax) 180 557.83 T
2 F
(Group identi\336er of the item\325) 252 557.83 T
(s group.) 380.71 557.83 T
4 F
(di) 180 546.33 T
2 F
(Item number of the item to be made the map.) 252 546.33 T
0 9 Q
(Returns:) 126 529.83 T
2 10 Q
(Nothing.) 180 529.83 T
0 9 Q
(Destr) 126 513.33 T
(oyed:) 146.83 513.33 T
2 10 Q
(Nothing.) 180 513.33 T
0 9 Q
(Library:) 126 496.83 T
5 10 Q
(dbase.def) 180 496.83 T
81 482.48 531 487.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 482.48 531 487.49 R
7 X
0 0 0 1 0 0 0 K
V
50 486.48 609.01 486.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 474.48 T
3 F
(DBUnlock) 99 474.48 T
2 10 Q
(Unlocks a database item that had previously been locked with) 180 457.82 T
5 F
(DBLock) 469.88 457.82 T
2 F
(.) 511.55 457.82 T
0 9 Q
(Pass:) 126 441.32 T
4 10 Q
(es) 180 441.32 T
2 F
(Segment address of the item\325) 252 441.32 T
(s item-block.) 385.35 441.32 T
0 9 Q
(Returns:) 126 424.82 T
2 10 Q
(Nothing.) 180 424.82 T
0 9 Q
(Destr) 126 408.32 T
(oyed:) 146.83 408.32 T
2 10 Q
(Nothing. \050Error) 180 408.32 T
(-checking code may destroy ds or es by writing) 252.03 408.32 T
2 9 Q
(NULL_SEGMENT) 180 396.82 T
2 10 Q
( to it, if it pointed to a block that had become unlocked.\051) 258.68 396.82 T
0 9 Q
(Library:) 126 380.32 T
5 10 Q
(dbase.def) 180 380.32 T
81 365.98 531 370.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 365.98 531 370.98 R
7 X
0 0 0 1 0 0 0 K
V
50 369.98 609.01 369.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 357.98 T
3 F
(DiskCheckInUse) 99 357.98 T
2 10 Q
-0.07 (Determine if the passed disk is actively being used, either by an open \336le or) 180 341.31 P
(by a thread having a directory on the disk in its directory stack.) 180 329.81 T
0 9 Q
(Pass:) 126 313.31 T
4 10 Q
(bx) 180 313.31 T
2 F
(Disk handle of disk to be checked.) 252 313.31 T
0 9 Q
(Returns:) 126 296.81 T
4 10 Q
(CF) 180 296.81 T
2 F
(Set if disk is in use, clear if it is not.) 252 296.81 T
0 9 Q
(Destr) 126 280.31 T
(oyed:) 146.83 280.31 T
2 10 Q
(Nothing.) 180 280.31 T
0 9 Q
(Library:) 126 263.81 T
5 10 Q
(disk.def) 180 263.81 T
81 249.47 531 254.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 249.47 531 254.48 R
7 X
0 0 0 1 0 0 0 K
V
50 253.47 609.01 253.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 241.47 T
3 F
(DiskCheckUnnamed) 99 241.47 T
2 10 Q
(Check if the passed disk handle refers to an unnamed disk \050i.e. a disk that) 180 224.8 T
(has no user) 180 213.3 T
(-supplied volume name\051.) 232.97 213.3 T
0 9 Q
(Pass:) 126 196.8 T
4 10 Q
(bx) 180 196.8 T
2 F
(Disk handle of disk to be checked.) 252 196.8 T
0 9 Q
(Returns:) 126 180.3 T
4 10 Q
(CF) 180 180.3 T
2 F
(Set if disk is unnamed, clear if it is named.) 252 180.3 T
0 9 Q
(Destr) 126 163.8 T
(oyed:) 146.83 163.8 T
2 10 Q
(Nothing.) 180 163.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 20
%%Page: "41" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DiskCopy) 498.88 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(41) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
5 10 Q
(disk.def) 180 641.33 T
81 626.99 531 632 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.99 531 632 R
7 X
0 0 0 1 0 0 0 K
V
50 630.99 609.01 630.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.99 T
3 F
(DiskCheckW) 99 618.99 T
(ritable) 171.47 618.99 T
2 10 Q
(See if the passed volume is writable.) 180 602.33 T
0 9 Q
(Pass:) 126 585.83 T
4 10 Q
(bx) 180 585.83 T
2 F
(Disk handle of volume to be checked.) 252 585.83 T
0 9 Q
(Returns:) 126 569.33 T
4 10 Q
(CF) 180 569.33 T
2 F
(Set if the volume is writable, clear if it is not.) 252 569.33 T
0 9 Q
(Destr) 126 552.83 T
(oyed:) 146.83 552.83 T
2 10 Q
(Nothing.) 180 552.83 T
0 9 Q
(Library:) 126 536.33 T
5 10 Q
(disk.def) 180 536.33 T
81 521.98 531 526.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 521.98 531 526.99 R
7 X
0 0 0 1 0 0 0 K
V
50 525.98 609.01 525.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 513.98 T
3 F
(DiskCopy) 99 513.98 T
2 10 Q
-0.14 (Copies the contents of the source disk to the destination disk, prompting for) 180 497.32 P
(them as necessary) 180 485.82 T
(.) 263.71 485.82 T
0 9 Q
(Pass:) 126 469.32 T
4 10 Q
(dh) 180 469.32 T
2 F
(source drive number) 252 469.32 T
4 F
(dl) 180 457.82 T
2 F
(destination drive number) 252 457.82 T
4 F
(al) 180 446.32 T
5 F
(DiskCopyFlags) 252 446.32 T
4 F
(cx) 180 434.82 T
2 F
(:) 192 434.82 T
4 F
(bp) 194.78 434.82 T
2 F
(callback routine) 252 434.82 T
0 9 Q
(Returns:) 126 418.32 T
2 10 Q
(ax) 180 418.32 T
5 F
(DiskCopyError) 252 418.32 T
2 F
(/FormatError; Zero if successful.) 331.64 418.32 T
0 9 Q
(Callback Routine Speci\336cations:) 126 402.82 T
(Passed:) 189 388.82 T
4 10 Q
(ax) 252 388.82 T
2 F
(DiskCopyCallback value signalling what to) 324 388.82 T
(do next.) 324 377.82 T
4 F
(bx) 252 366.82 T
2 F
(,) 264 366.82 T
4 F
(dx) 269.56 366.82 T
2 F
(Additional information based on value of ax:) 324 366.82 T
2 9 Q
(DCC_GET_SOURCE_DISK) 324 355.82 T
4 10 Q
(dl) 329.56 344.82 T
2 F
( = Zero-based drive number) 341.56 344.82 T
(.) 468.18 344.82 T
2 9 Q
(DCC_REPORT_NUM_SW) 324 333.82 T
(APS) 432.84 333.82 T
4 10 Q
(dx) 329.56 322.82 T
2 F
( = Number of swaps required.) 341.56 322.82 T
2 9 Q
(DCC_GET_DEST_DISK) 324 311.82 T
4 10 Q
(dl) 329.56 300.82 T
2 F
( = Zero-based drive number) 341.56 300.82 T
(.) 468.18 300.82 T
2 9 Q
(DCC_VERIFY_DEST_DESTRUCTION) 324 289.82 T
4 10 Q
(bx) 329.56 278.82 T
2 F
( = Disk handle of destination disk) 341.56 278.82 T
4 F
(dl) 329.56 267.82 T
2 F
( = Zero-based drive number) 341.56 267.82 T
2 9 Q
(DCC_REPORT_FORMA) 324 256.82 T
(T_PCT) 425.5 256.82 T
4 10 Q
(dx) 329.56 245.82 T
2 F
( = Percentage of disk formatted.) 341.56 245.82 T
2 9 Q
(DCC_REPORT_READ_PCT) 324 234.82 T
4 10 Q
(dx) 329.56 223.82 T
2 F
( = Percentage of disk read.) 341.56 223.82 T
2 9 Q
(DCC_REPORT_WRITE_PCT) 324 212.82 T
4 10 Q
(dx) 329.56 201.82 T
2 F
( = Percentage of disk written.) 341.56 201.82 T
0 9 Q
(Return:) 189 186.82 T
2 10 Q
(Zero to continue, non-zero to abort.) 252 186.82 T
0 9 Q
(Destr) 126 170.82 T
(oyed:) 146.83 170.82 T
2 10 Q
(Nothing.) 180 170.82 T
0 9 Q
(Library:) 126 154.32 T
5 10 Q
(disk.def) 180 154.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 21
%%Page: "42" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DiskFind) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(42) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
3 F
(DiskFind) 99 634.99 T
2 10 Q
(Search the list of registered disks and return the handle of that having the) 180 618.33 T
-0.33 (passed volume name. An additional search is also made to ensure the match) 180 606.83 P
(is unique.) 180 595.33 T
0 9 Q
(Pass:) 126 578.83 T
4 10 Q
(ds:si) 180 578.83 T
2 F
(Address of null-terminated volume name to search for) 252 578.83 T
(.) 500.89 578.83 T
0 9 Q
(Returns:) 126 562.33 T
4 10 Q
(CF) 180 562.33 T
2 F
(Set if error) 252 562.33 T
(.) 301.81 562.33 T
4 F
(ax) 180 550.83 T
5 F
(DiskFindResult) 252 550.83 T
2 F
(:) 333.66 550.83 T
2 9 Q
(DFR_UNIQUE) 252 539.33 T
2 10 Q
( if found and unique match.) 315.17 539.33 T
2 9 Q
(DFR_NOT_UNIQUE) 252 527.83 T
2 10 Q
( if found but not unique.) 340.01 527.83 T
2 9 Q
(DFR_NOT_FOUND) 252 516.33 T
2 10 Q
( if no match found.) 335.52 516.33 T
4 F
(bx) 180 504.83 T
2 F
(If successful, disk handle of \336rst disk found; otherwise, zero.) 252 504.83 T
0 9 Q
(Destr) 126 488.33 T
(oyed:) 146.83 488.33 T
2 10 Q
(Nothing.) 180 488.33 T
0 9 Q
(Library:) 126 471.83 T
5 10 Q
(disk.def) 180 471.83 T
81 457.48 531 462.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 457.48 531 462.49 R
7 X
0 0 0 1 0 0 0 K
V
50 461.48 609.01 461.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 449.48 T
3 F
(DiskForEach) 99 449.48 T
2 10 Q
-0.51 (Call a callback routine for each disk registered with the system, allowing the) 180 432.82 P
(callback to cancel the operation.) 180 421.32 T
0 9 Q
(Pass:) 126 404.82 T
4 10 Q
(ax) 180 404.82 T
2 F
(,) 192 404.82 T
4 F
(cx) 197.56 404.82 T
2 F
(,) 209.56 404.82 T
4 F
(dx) 215.12 404.82 T
2 F
(,) 227.12 404.82 T
4 F
(bp) 232.68 404.82 T
2 F
(Initial data to pass to the callback routine.) 252 404.82 T
4 F
(di:si) 180 393.32 T
2 F
(Address of callback routine.) 252 393.32 T
0 9 Q
(Returns:) 126 376.82 T
4 10 Q
(ax) 180 376.82 T
2 F
(,) 192 376.82 T
4 F
(cx) 197.56 376.82 T
2 F
(,) 209.56 376.82 T
4 F
(dx) 215.12 376.82 T
2 F
(,) 227.12 376.82 T
4 F
(bp) 232.68 376.82 T
2 F
(As returned by last callback execution.) 252 376.82 T
4 F
(CF) 180 365.32 T
2 F
(Set if callback forced early termination.) 252 365.32 T
4 F
(bx) 180 353.82 T
2 F
-0.72 (If) 252 353.82 P
7 F
-1.54 (CF) 261.46 353.82 P
2 F
-0.72 ( set, the disk handle of the last disk processed; otherwise) 273.46 353.82 P
(will be returned zero.) 252 342.32 T
0 9 Q
(Destr) 126 325.82 T
(oyed:) 146.83 325.82 T
4 10 Q
(di) 180 325.82 T
2 F
(,) 192 325.82 T
4 F
(si) 197.56 325.82 T
0 9 Q
(Callback Routine Speci\336cations:) 126 310.32 T
(Passed:) 189 296.32 T
4 10 Q
(bx) 252 296.32 T
2 F
(Disk handle of current disk.) 324 296.32 T
4 F
(ax) 252 285.32 T
2 F
(,) 264 285.32 T
4 F
(cx) 269.56 285.32 T
2 F
(,) 281.56 285.32 T
4 F
(dx) 287.12 285.32 T
2 F
(,) 299.12 285.32 T
4 F
(bp) 304.68 285.32 T
2 F
(Data set by caller and callback.) 324 285.32 T
0 9 Q
(Return:) 189 270.32 T
4 10 Q
(ax) 252 270.32 T
2 F
(,) 264 270.32 T
4 F
(cx) 269.56 270.32 T
2 F
(,) 281.56 270.32 T
4 F
(dx) 287.12 270.32 T
2 F
(,) 299.12 270.32 T
4 F
(bp) 304.68 270.32 T
2 F
(May be modi\336ed or preserved.) 324 270.32 T
4 F
(CF) 252 259.32 T
2 F
(Set if processing should be aborted.) 324 259.32 T
0 9 Q
(May Destr) 189 244.32 T
(oy:) 229.57 244.32 T
4 10 Q
(ax) 252 244.32 T
2 F
(,) 264 244.32 T
4 F
(cx) 269.56 244.32 T
2 F
(,) 281.56 244.32 T
4 F
(dx) 287.12 244.32 T
2 F
(,) 299.12 244.32 T
4 F
(bp) 304.68 244.32 T
0 9 Q
(Library:) 126 228.32 T
5 10 Q
(disk.def) 180 228.32 T
81 213.98 531 218.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 213.98 531 218.98 R
7 X
0 0 0 1 0 0 0 K
V
50 217.98 609.01 217.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 205.98 T
3 F
(DiskFormat) 99 205.98 T
2 10 Q
(Format the disk in the speci\336ed drive.) 180 189.31 T
0 9 Q
(Pass:) 126 172.81 T
4 10 Q
(al) 180 172.81 T
2 F
(Drive number) 252 172.81 T
(.) 315.89 172.81 T
4 F
(ah) 180 161.31 T
2 9 Q
(GEOS) 252 161.31 T
2 10 Q
( media descriptor \050) 278.17 161.31 T
5 F
(MediaT) 364.65 161.31 T
(ype) 403.38 161.31 T
2 F
(\051.) 421.9 161.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 22
%%Page: "43" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DiskGetVolumeFreeSpace) 400.14 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(43) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 10 Q
0 X
(bx) 180 641.33 T
2 F
(Handle of the disk to be formatted, or) 252 641.33 T
(Zero if disk is known to be unformatted, or) 252 629.83 T
(-1 if state of drive is not known.) 252 618.33 T
4 F
(bp) 180 606.83 T
5 F
(DiskFormatFlags) 252 606.83 T
2 F
(.) 342.18 606.83 T
4 F
(ds:si) 180 595.33 T
2 F
(New null-terminated) 252 595.33 T
2 9 Q
(ASCII) 352.01 595.33 T
2 10 Q
( volume name for the disk.) 378 595.33 T
4 F
(cx:dx) 180 583.83 T
2 F
(Address of callback routine, initialized only if) 252 583.83 T
2 9 Q
(DFF_CALLBACK_PCT_DONE) 252 572.33 T
2 10 Q
( or) 382.35 572.33 T
2 9 Q
(DFF_CALLBACK_CYL_HEAD) 397.35 572.33 T
2 10 Q
(passed in) 252 560.83 T
4 F
(bp) 298.12 560.83 T
2 F
(.) 310.12 560.83 T
0 9 Q
(Returns:) 126 544.33 T
4 10 Q
(CF) 180 544.33 T
2 F
(Set on error) 252 544.33 T
(.) 306.44 544.33 T
4 F
(ax) 180 532.83 T
2 F
(Error code if error \050) 252 532.83 T
5 F
(FormatError) 341.97 532.83 T
2 F
(\051, or) 409.76 532.83 T
2 9 Q
(FMT_DONE) 430.87 532.83 T
2 10 Q
( if) 483.71 532.83 T
(successful.) 252 521.33 T
4 F
(si:di) 180 509.83 T
2 F
(If successful, returns number of bytes in good clusters.) 252 509.83 T
4 F
(dx:cx) 180 498.33 T
2 F
(If successful, returns number of bytes in bad clusters.) 252 498.33 T
0 9 Q
(Destr) 126 481.83 T
(oyed:) 146.83 481.83 T
4 10 Q
(ax) 180 481.83 T
2 F
(,) 192 481.83 T
4 F
(bx) 197.56 481.83 T
0 9 Q
(Callback Routine Speci\336cations:) 126 466.33 T
(Passed:) 189 452.33 T
4 10 Q
(ax) 252 452.33 T
2 F
-0.59 (Percentage done or number of cylinder heads) 324 452.33 P
(\336nished, appropriate to) 324 441.33 T
4 F
(bp) 435.12 441.33 T
2 F
( parameter) 447.12 441.33 T
(.) 497.68 441.33 T
0 9 Q
(Return:) 189 426.33 T
4 10 Q
(CF) 252 426.33 T
2 F
(Return set to cancel format.) 324 426.33 T
0 9 Q
(May Destr) 189 411.33 T
(oy:) 229.57 411.33 T
2 10 Q
(Nothing.) 252 411.33 T
0 9 Q
(Library:) 126 395.33 T
5 10 Q
(disk.def) 180 395.33 T
0 9 Q
(W) 126 379.33 T
(arning:) 134.51 379.33 T
2 10 Q
(All data on the destination disk is lost.) 180 379.33 T
81 364.49 531 369.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 364.49 531 369.5 R
7 X
0 0 0 1 0 0 0 K
V
50 368.49 609.01 368.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 356.49 T
3 F
(DiskGetDrive) 99 356.49 T
2 10 Q
(Return the drive number of the drive in which the passed disk was) 180 339.83 T
(registered.) 180 328.33 T
0 9 Q
(Pass:) 126 311.83 T
4 10 Q
(bx) 180 311.83 T
2 F
(Disk handle of registered disk.) 252 311.83 T
0 9 Q
(Returns:) 126 295.33 T
4 10 Q
(al) 180 295.33 T
2 F
(Zero-based drive number) 252 295.33 T
(.) 367 295.33 T
0 9 Q
(Destr) 126 278.83 T
(oyed:) 146.83 278.83 T
2 10 Q
(ah) 180 278.83 T
0 9 Q
(Library:) 126 262.33 T
5 10 Q
(disk.def) 180 262.33 T
81 247.98 531 252.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 247.98 531 252.99 R
7 X
0 0 0 1 0 0 0 K
V
50 251.98 609.01 251.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 239.98 T
3 F
(DiskGetV) 99 239.98 T
(olumeFreeSpace) 151.46 239.98 T
2 10 Q
(Return the number of bytes free on a volume.) 180 223.32 T
0 9 Q
(Pass:) 126 206.82 T
4 10 Q
(bx) 180 206.82 T
2 F
(Disk handle of registered volume.) 252 206.82 T
0 9 Q
(Returns:) 126 190.32 T
4 10 Q
(CF) 180 190.32 T
2 F
(Set if error) 252 190.32 T
(, clear if successful.) 301.81 190.32 T
4 F
(ax) 180 178.82 T
2 F
(If error) 252 178.82 T
(, error code:) 284.76 178.82 T
2 9 Q
(ERROR_INV) 342.16 178.82 T
(ALID_VOLUME) 396.15 178.82 T
2 10 Q
(.) 465.65 178.82 T
4 F
(dx.ax) 180 167.32 T
2 F
(If successful, number of bytes free on volume.) 252 167.32 T
0 9 Q
(Destr) 126 150.82 T
(oyed:) 146.83 150.82 T
2 10 Q
(Nothing.) 180 150.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 23
%%Page: "44" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DiskGetVolumeInfo) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(44) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
5 10 Q
(disk.def) 180 641.33 T
81 626.99 531 632 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.99 531 632 R
7 X
0 0 0 1 0 0 0 K
V
50 630.99 609.01 630.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.99 T
3 F
(DiskGetV) 99 618.99 T
(olumeInfo) 151.46 618.99 T
2 10 Q
(Return information about a registered disk.) 180 602.33 T
0 9 Q
(Pass:) 126 585.83 T
4 10 Q
(bx) 180 585.83 T
2 F
(Disk handle of registered disk.) 252 585.83 T
4 F
(es:di) 180 574.33 T
2 F
(Address of) 252 574.33 T
5 F
(DiskInfoStruct) 303.29 574.33 T
2 F
( to \336ll in.) 381.07 574.33 T
0 9 Q
(Returns:) 126 557.83 T
4 10 Q
(CF) 180 557.83 T
2 F
(Set if error) 252 557.83 T
(.) 301.81 557.83 T
4 F
(ax) 180 546.33 T
2 F
(Zero if successful, otherwise) 252 546.33 T
2 9 Q
(ERROR_INV) 384.4 546.33 T
(ALID_VOLUME) 438.39 546.33 T
2 10 Q
(.) 507.89 546.33 T
4 F
(es:di) 180 534.83 T
2 F
(If successful, the address of the returned) 252 534.83 T
5 F
(DiskInfoStruct) 442.91 534.83 T
2 F
(structure, \336lled in.) 252 523.33 T
0 9 Q
(Destr) 126 506.83 T
(oyed:) 146.83 506.83 T
2 10 Q
(ax) 180 506.83 T
0 9 Q
(Library:) 126 490.33 T
5 10 Q
(disk.def) 180 490.33 T
81 475.98 531 480.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 475.98 531 480.99 R
7 X
0 0 0 1 0 0 0 K
V
50 479.98 609.01 479.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 467.98 T
3 F
(DiskGetV) 99 467.98 T
(olumeName) 151.46 467.98 T
2 10 Q
(Return the volume name of the disk speci\336ed by the passed handle.) 180 451.32 T
0 9 Q
(Pass:) 126 434.82 T
4 10 Q
(bx) 180 434.82 T
2 F
(Disk handle of registered disk.) 252 434.82 T
4 F
(es:di) 180 423.32 T
2 F
(Pointer to locked or \336xed buffer at least) 252 423.32 T
2 9 Q
(VOLUME_NAME_LENGTH_ZT) 252 411.82 T
2 10 Q
( bytes long.) 388 411.82 T
0 9 Q
(Returns:) 126 395.32 T
4 10 Q
(es:di) 180 395.32 T
2 F
(Pointer to null-terminated volume name \050with no trailing) 252 395.32 T
(spaces\051.) 252 383.82 T
0 9 Q
(Destr) 126 367.32 T
(oyed:) 146.83 367.32 T
2 10 Q
(Nothing.) 180 367.32 T
0 9 Q
(Library:) 126 350.82 T
5 10 Q
(disk.def) 180 350.82 T
81 336.48 531 341.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 336.48 531 341.48 R
7 X
0 0 0 1 0 0 0 K
V
50 340.48 609.01 340.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 328.48 T
3 F
(DiskRegisterDisk) 99 328.48 T
2 10 Q
(Register a disk with the system.) 180 311.81 T
0 9 Q
(Pass:) 126 295.31 T
4 10 Q
(al) 180 295.31 T
2 F
(Drive number containing disk to be registered.) 252 295.31 T
0 9 Q
(Returns:) 126 278.81 T
4 10 Q
(CF) 180 278.81 T
2 F
(Clear if successful, set if error) 252 278.81 T
(.) 389.58 278.81 T
4 F
(bx) 180 267.31 T
2 F
(Disk handle of registered disk if successful, zero if error) 252 267.31 T
(.) 508.66 267.31 T
0 9 Q
(Destr) 126 250.81 T
(oyed:) 146.83 250.81 T
2 10 Q
(Nothing.) 180 250.81 T
0 9 Q
(Library:) 126 234.31 T
5 10 Q
(disk.def) 180 234.31 T
81 219.97 531 224.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 219.97 531 224.98 R
7 X
0 0 0 1 0 0 0 K
V
50 223.97 609.01 223.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 211.97 T
3 F
(DiskRegisterDiskSilently) 99 211.97 T
2 10 Q
(Register a disk with the system without informing the user) 180 195.3 T
(.) 452.99 195.3 T
0 9 Q
(Pass:) 126 178.8 T
4 10 Q
(al) 180 178.8 T
2 F
(Drive number containing disk to be registered.) 252 178.8 T
0 9 Q
(Returns:) 126 162.3 T
4 10 Q
(CF) 180 162.3 T
2 F
(Clear if successful, set if error) 252 162.3 T
(.) 389.58 162.3 T
4 F
(bx) 180 150.8 T
2 F
(Disk handle of registered disk if successful, zero if error) 252 150.8 T
(.) 508.66 150.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 24
%%Page: "45" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DiskSave) 502.77 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(45) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
5 10 Q
(disk.def) 180 624.83 T
81 610.49 531 615.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 610.49 531 615.5 R
7 X
0 0 0 1 0 0 0 K
V
50 614.49 609.01 614.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 602.49 T
3 F
(DiskRestore) 99 602.49 T
2 10 Q
(Restore a disk handle that had been saved to the state \336le with) 180 585.83 T
5 F
(DiskSave) 474.88 585.83 T
2 F
(.) 523.21 585.83 T
0 9 Q
(Pass:) 126 569.33 T
4 10 Q
(ds:si) 180 569.33 T
2 F
(Address of locked or \336xed buffer originally passed to) 252 569.33 T
5 F
(DiskSave) 252 557.83 T
2 F
(.) 300.33 557.83 T
4 F
(cx:dx) 180 546.33 T
2 F
(Address of callback routine to call if the user must be) 252 546.33 T
(prompted for the disk. If) 252 534.83 T
4 F
(cx) 367.74 534.83 T
2 F
( is zero, no callback will be) 379.74 534.83 T
-0.06 (attempted and the routine will fail if the disk is unavailable) 252 523.33 P
-0.04 (\050i.e. the drive no longer exists or the disk is not in the drive\051.) 252 511.83 P
0 9 Q
(Returns:) 126 495.33 T
4 10 Q
(CF) 180 495.33 T
2 F
(Set if disk handle could not be restored.) 252 495.33 T
4 F
(ax) 180 483.83 T
2 F
(If) 252 483.83 T
7 F
(CF) 262.18 483.83 T
2 F
( clear) 274.18 483.83 T
(, the disk handle of the registered disk.) 298.81 483.83 T
(If) 252 472.33 T
7 F
(CF) 262.18 472.33 T
2 F
( set, a) 274.18 472.33 T
5 F
(DiskRestoreError) 304.38 472.33 T
2 F
( indicating the failure.) 397.54 472.33 T
0 9 Q
(Destr) 126 455.83 T
(oyed:) 146.83 455.83 T
2 10 Q
(Nothing.) 180 455.83 T
0 9 Q
(Callback Routine Speci\336cations:) 126 440.33 T
(Passed:) 189 426.33 T
4 10 Q
(ds:dx) 252 426.33 T
2 F
-0.32 (Address of null-terminated drive name, with) 324 426.33 P
(\322:\323 \050colon\051 as the last character) 324 415.33 T
(.) 464.38 415.33 T
4 F
(ds:di) 252 404.33 T
2 F
(Address of null-terminated disk name.) 324 404.33 T
4 F
(ds:si) 252 393.33 T
2 F
(Address of buffer originally passed to) 324 393.33 T
5 F
(DiskSave) 324 382.33 T
2 F
(.) 372.33 382.33 T
4 F
(ax) 252 371.33 T
5 F
(DiskRestoreError) 324 371.33 T
2 F
( to be returned if the) 417.16 371.33 T
(callback routine was not being called.) 324 360.33 T
4 F
(bx) 252 349.33 T
2 F
(,) 264 349.33 T
4 F
(bp) 269.56 349.33 T
2 F
(As passed to) 324 349.33 T
5 F
(DiskRestore) 384.38 349.33 T
2 F
(.) 448.27 349.33 T
0 9 Q
(Return:) 189 334.33 T
4 10 Q
(CF) 252 334.33 T
2 F
-0.64 (Clear if disk should be in the drive, set if user) 324 334.33 P
(cancelled the restoration.) 324 323.33 T
4 F
(ds:si) 252 312.33 T
2 F
-0.86 (If) 324 312.33 P
7 F
-1.85 (CF) 333.32 312.33 P
2 F
-0.86 ( clear) 345.32 312.33 P
-0.86 (, address of buffer originally passed) 369.1 312.33 P
(to) 324 301.33 T
5 F
(DiskSave) 335.67 301.33 T
2 F
(.) 384 301.33 T
4 F
(ax) 252 290.33 T
2 F
(If) 324 290.33 T
7 F
(CF) 334.18 290.33 T
2 F
( set, error code returned \050typically) 346.18 290.33 T
2 9 Q
(DRE_USER_CANCELED_RESTORE) 324 279.33 T
2 10 Q
(\051.) 481 279.33 T
0 9 Q
(May Destr) 189 264.33 T
(oy:) 229.57 264.33 T
2 10 Q
(Nothing.) 252 264.33 T
0 9 Q
(Library:) 126 248.33 T
5 10 Q
(disk.def) 180 248.33 T
81 233.98 531 238.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 233.98 531 238.99 R
7 X
0 0 0 1 0 0 0 K
V
50 237.98 609.01 237.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 225.98 T
3 F
(DiskSave) 99 225.98 T
2 10 Q
-0.44 (Save information that will allow a disk handle to be restored when the caller) 180 209.32 P
(is restoring itself from a state \336le after a shutdown.) 180 197.82 T
0 9 Q
(Pass:) 126 181.32 T
4 10 Q
(bx) 180 181.32 T
2 F
(Disk handle to save.) 252 181.32 T
4 F
(es:di) 180 169.82 T
2 F
(Address of locked or \336xed buffer for opaque data.) 252 169.82 T
4 F
(cx) 180 158.32 T
2 F
(Size of buffer in) 252 158.32 T
4 F
(es:di) 327.74 158.32 T
2 F
(.) 357.74 158.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 25
%%Page: "46" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DiskSetVolumeName) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(46) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Returns:) 126 641.33 T
4 10 Q
(CF) 180 641.33 T
2 F
(Clear if successful, set if error) 252 641.33 T
(.) 389.58 641.33 T
4 F
(cx) 180 629.83 T
2 F
(If) 252 629.83 T
7 F
(CF) 262.18 629.83 T
2 F
( clear) 274.18 629.83 T
(, actual number of bytes used in the buffer) 298.81 629.83 T
(.) 494.2 629.83 T
-0.32 (If) 252 618.33 P
7 F
-0.69 (CF) 261.86 618.33 P
2 F
-0.32 ( set, the number of bytes needed to save the disk; zero if) 273.86 618.33 P
-0.49 (the disk can not be saved at all \050e.g. it is a network drive that) 252 606.83 P
(no longer exists\051.) 252 595.33 T
0 9 Q
(Destr) 126 578.83 T
(oyed:) 146.83 578.83 T
2 10 Q
(Nothing.) 180 578.83 T
0 9 Q
(Library:) 126 562.33 T
5 10 Q
(disk.def) 180 562.33 T
81 547.99 531 553 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.99 531 553 R
7 X
0 0 0 1 0 0 0 K
V
50 551.99 609.01 551.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.99 T
3 F
(DiskSetV) 99 539.99 T
(olumeName) 150.13 539.99 T
2 10 Q
(Set the name of a registered disk.) 180 523.33 T
0 9 Q
(Pass:) 126 506.83 T
4 10 Q
(bx) 180 506.83 T
2 F
(Disk handle of registered volume.) 252 506.83 T
4 F
(ds:si) 180 495.33 T
2 F
(Address of null-terminated) 252 495.33 T
2 9 Q
(ASCII) 379.59 495.33 T
2 10 Q
( name.) 405.58 495.33 T
0 9 Q
(Returns:) 126 478.83 T
4 10 Q
(CF) 180 478.83 T
2 F
(Set if error) 252 478.83 T
(.) 301.81 478.83 T
4 F
(ax) 180 467.33 T
2 F
(Error code, or zero if no error) 252 467.33 T
2 9 Q
(ERROR_INV) 252 455.83 T
(ALID_VOLUME) 305.99 455.83 T
(ERROR_ACCESS_DENIED) 252 444.33 T
2 10 Q
(.) 369.32 444.33 T
0 9 Q
(Destr) 126 427.83 T
(oyed:) 146.83 427.83 T
2 10 Q
(Nothing.) 180 427.83 T
0 9 Q
(Library:) 126 411.33 T
5 10 Q
(disk.def) 180 411.33 T
81 396.98 531 401.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 396.98 531 401.99 R
7 X
0 0 0 1 0 0 0 K
V
50 400.98 609.01 400.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 388.98 T
3 F
(DosExec) 99 388.98 T
2 10 Q
(Begin execution of a) 180 372.32 T
2 9 Q
(DOS) 275.93 372.32 T
2 10 Q
( application, shutting down) 295.6 372.32 T
2 9 Q
(GEOS) 424.88 372.32 T
2 10 Q
( to state \336les or) 451.06 372.32 T
(creating a new task in the task-switcher for the) 180 360.82 T
2 9 Q
(DOS) 402.25 360.82 T
2 10 Q
( application.) 421.92 360.82 T
0 9 Q
(Pass:) 126 344.32 T
4 10 Q
(bx) 180 344.32 T
2 F
-0.28 (Optional disk handle for the disk on which the) 252 344.32 P
2 9 Q
-0.25 (DOS) 466.89 344.32 P
2 10 Q
-0.28 ( program) 486.57 344.32 P
(resides. \050Pass zero for the disk containing) 252 332.82 T
2 9 Q
(GEOS) 447.01 332.82 T
2 10 Q
(.\051) 473.18 332.82 T
4 F
(ds:si) 180 321.32 T
2 F
(Address of null-terminated path of the) 252 321.32 T
2 9 Q
(DOS) 432.56 321.32 T
2 10 Q
( application. If) 452.23 321.32 T
(this is just a null character) 252 309.82 T
(, the system\325) 376.27 309.82 T
(s command) 433.69 309.82 T
(interpreter will be run with the given command-line) 252 298.32 T
(arguments.) 252 286.82 T
4 F
(es:di) 180 275.32 T
2 F
(If DEF_MEM_REQ is passed, this will contain the) 252 275.32 T
(DosExecArgAndMemReqsStruct containing the memory) 252 263.82 T
-0.07 (requirements of the program; Otherwise, this is the address) 252 252.32 P
-0.81 (of a buffer containing the command-line arguments to pass to) 252 240.82 P
(the application.) 252 229.32 T
4 F
(ax) 180 217.82 T
2 F
(Optional disk handle for the disk that contains the path or) 252 217.82 T
(directory in which the application should be executed.) 252 206.32 T
4 F
(dx:bp) 180 194.82 T
2 F
(Address of a buffer containing the null-terminated path or) 252 194.82 T
(directory name in which the application should be executed.) 252 183.32 T
4 F
(cx) 180 171.82 T
2 F
(A record of) 252 171.82 T
5 F
(DosExecFlags) 304.95 171.82 T
2 F
(.) 377.35 171.82 T
0 9 Q
(Returns:) 126 155.32 T
4 10 Q
(CF) 180 155.32 T
2 F
(Set if the program could not be run.) 252 155.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 26
%%Page: "47" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DriveGetName) 467.81 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 533.71 671.34 T
2 F
(47) 546.88 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 10 Q
0 X
(ax) 180 641.33 T
2 F
(Error code if) 252 641.33 T
7 F
(CF) 312.54 641.33 T
2 F
( is set:) 324.54 641.33 T
2 9 Q
(ERROR_FILE_NOT_FOUND) 252 629.83 T
(ERROR_DOS_EXEC_IN_PROGRESS) 252 618.33 T
(ERROR_INSUFFICIENT_MEMOR) 252 606.83 T
(Y) 400.32 606.83 T
(ERROR_ARGS_TOO_LONG) 252 595.33 T
0 F
(Destr) 126 578.83 T
(oyed:) 146.83 578.83 T
4 10 Q
(ax) 180 578.83 T
2 F
(,) 192 578.83 T
4 F
(bx) 197.56 578.83 T
2 F
(,) 209.56 578.83 T
4 F
(cx) 215.12 578.83 T
2 F
(,) 227.12 578.83 T
4 F
(dx) 232.68 578.83 T
2 F
(,) 244.68 578.83 T
4 F
(di) 250.24 578.83 T
2 F
(,) 262.24 578.83 T
4 F
(si) 267.8 578.83 T
2 F
(,) 279.8 578.83 T
4 F
(bp) 285.36 578.83 T
2 F
(,) 297.36 578.83 T
4 F
(ds) 302.92 578.83 T
2 F
(,) 314.92 578.83 T
4 F
(es) 320.48 578.83 T
0 9 Q
(Library:) 126 562.33 T
5 10 Q
(system.def) 180 562.33 T
81 547.99 531 553 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 547.99 531 553 R
7 X
0 0 0 1 0 0 0 K
V
50 551.99 609.01 551.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 539.99 T
3 F
(DriveGetDefaultMedia) 99 539.99 T
2 10 Q
(Return the) 180 523.33 T
2 9 Q
(GEOS) 233.33 523.33 T
2 10 Q
( media descriptor of the highest density format supported) 259.5 523.33 T
(by the speci\336ed drive.) 180 511.83 T
0 9 Q
(Pass:) 126 495.33 T
4 10 Q
(al) 180 495.33 T
2 F
(Zero-based drive number) 252 495.33 T
(.) 367 495.33 T
0 9 Q
(Returns:) 126 478.83 T
4 10 Q
(CF) 180 478.83 T
2 F
(Set if drive does not exist.) 252 478.83 T
4 F
(ah) 180 467.33 T
2 9 Q
(GEOS) 252 467.33 T
2 10 Q
( media descriptor \050) 278.17 467.33 T
5 F
(MediaT) 364.65 467.33 T
(ype) 403.38 467.33 T
2 F
(\051.) 421.9 467.33 T
0 9 Q
(Destr) 126 450.83 T
(oyed:) 146.83 450.83 T
2 10 Q
(Nothing.) 180 450.83 T
0 9 Q
(Library:) 126 434.33 T
5 10 Q
(drive.def) 180 434.33 T
81 419.98 531 424.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 419.98 531 424.99 R
7 X
0 0 0 1 0 0 0 K
V
50 423.98 609.01 423.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 411.98 T
3 F
(DriveGetExtStatus) 99 411.98 T
2 10 Q
(Return the extended status word for the speci\336ed drive.) 180 395.32 T
0 9 Q
(Pass:) 126 378.82 T
4 10 Q
(al) 180 378.82 T
2 F
(Zero-based drive number) 252 378.82 T
(.) 367 378.82 T
0 9 Q
(Returns:) 126 362.32 T
4 10 Q
(CF) 180 362.32 T
2 F
(Set if drive does not exist.) 252 362.32 T
4 F
(ax) 180 350.82 T
5 F
(DriveExtendedStatus) 252 350.82 T
2 F
( record if successful.) 363.85 350.82 T
0 9 Q
(Destr) 126 334.32 T
(oyed:) 146.83 334.32 T
2 10 Q
(Nothing.) 180 334.32 T
0 9 Q
(Library:) 126 317.82 T
5 10 Q
(drive.def) 180 317.82 T
81 303.48 531 308.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 303.48 531 308.48 R
7 X
0 0 0 1 0 0 0 K
V
50 307.48 609.01 307.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 295.48 T
3 F
(DriveGetName) 99 295.48 T
2 10 Q
(Return the name of the speci\336ed drive.) 180 278.81 T
0 9 Q
(Pass:) 126 262.31 T
4 10 Q
(al) 180 262.31 T
2 F
(Zero-based drive number) 252 262.31 T
(.) 367 262.31 T
4 F
(es:di) 180 250.81 T
2 F
(Address of locked or \336xed buffer into which the) 252 250.81 T
(null-terminated name will be written.) 252 239.31 T
4 F
(cx) 180 227.81 T
2 F
(Number of bytes in the buffer) 252 227.81 T
(.) 388.12 227.81 T
0 9 Q
(Returns:) 126 211.31 T
4 10 Q
(CF) 180 211.31 T
2 F
( clear:) 192 211.31 T
4 F
(cx) 252 199.81 T
2 F
(Number of bytes written to the buffer including the) 252 188.31 T
(terminating null.) 252 176.81 T
4 F
(es:di) 252 165.31 T
2 F
(Address of the terminating null,) 252 153.81 T
6 F
(not) 403.49 153.81 T
2 F
( the \336rst character) 418.12 153.81 T
(.) 503.67 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 27
%%Page: "48" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(DriveGetStatus) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(48) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
4 10 Q
0 X
(CF) 180 641.33 T
2 F
( set:) 192 641.33 T
4 F
(cx) 252 629.83 T
2 F
(Zero if the drive does not exist.) 252 618.33 T
(T) 252 606.83 T
(otal number of bytes needed if the buffer is too small.) 257.75 606.83 T
0 9 Q
(Destr) 126 590.33 T
(oyed:) 146.83 590.33 T
2 10 Q
(Nothing.) 180 590.33 T
0 9 Q
(Library:) 126 573.83 T
5 10 Q
(drive.def) 180 573.83 T
81 559.49 531 564.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 559.49 531 564.5 R
7 X
0 0 0 1 0 0 0 K
V
50 563.49 609.01 563.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 551.49 T
3 F
(DriveGetStatus) 99 551.49 T
2 10 Q
(Returns status information on the speci\336ed drive.) 180 534.83 T
0 9 Q
(Pass:) 126 518.33 T
4 10 Q
(al) 180 518.33 T
2 F
(Zero-based drive number) 252 518.33 T
(.) 367 518.33 T
0 9 Q
(Returns:) 126 501.83 T
4 10 Q
(CF) 180 501.83 T
2 F
(Set if drive does not exist.) 252 501.83 T
4 F
(ah) 180 490.33 T
5 F
(DriveStatus) 252 490.33 T
2 F
( record if successful.) 314.22 490.33 T
0 9 Q
(Destr) 126 473.83 T
(oyed:) 146.83 473.83 T
2 10 Q
(Nothing.) 180 473.83 T
0 9 Q
(Library:) 126 457.33 T
5 10 Q
(drive.def) 180 457.33 T
81 442.98 531 447.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 442.98 531 447.99 R
7 X
0 0 0 1 0 0 0 K
V
50 446.98 609.01 446.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 434.98 T
3 F
(DriveT) 99 434.98 T
(estMediaSupport) 135.46 434.98 T
2 10 Q
(T) 180 418.32 T
(est if the speci\336ed drive supports the given media type.) 185.75 418.32 T
0 9 Q
(Pass:) 126 401.82 T
4 10 Q
(al) 180 401.82 T
2 F
(Zero-based drive number) 252 401.82 T
(.) 367 401.82 T
4 F
(ah) 180 390.32 T
5 F
(MediaT) 252 390.32 T
(ype) 290.73 390.32 T
2 F
( media descriptor) 309.25 390.32 T
(.) 388.88 390.32 T
0 9 Q
(Returns:) 126 373.82 T
4 10 Q
(CF) 180 373.82 T
2 F
(Clear if media type supported by the drive; set otherwise.) 252 373.82 T
0 9 Q
(Destr) 126 357.32 T
(oyed:) 146.83 357.32 T
2 10 Q
(Nothing.) 180 357.32 T
0 9 Q
(Library:) 126 340.82 T
5 10 Q
(drive.def) 180 340.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 28
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 28
%%DocumentFonts: Times-Bold
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Roman
%%+ Helvetica-Bold
%%+ Courier-Bold
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%+ Courier
%%EOF
