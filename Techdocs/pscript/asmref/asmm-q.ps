%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 14 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 1 /ZapfDingbats FMFONTDEFINE
2 0 /NewCenturySchlbk-Roman FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /NewCenturySchlbk-Bold FMFONTDEFINE
5 0 /NewCenturySchlbk-Italic FMFONTDEFINE
6 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "257" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemAllocSetOwner) 435.92 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(257) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 621.02 531 626.03 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 621.02 531 626.03 R
7 X
0 0 0 1 0 0 0 K
V
50 625.02 609.01 625.02 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 613.02 T
0 F
(MemAlloc) 99 613.02 T
2 10 Q
(Creates a block and assigns a handle to it. This block can be discardable,) 180 596.36 T
(swapable, \336xed or movable. A passed \337ag determines whether heap) 180 584.86 T
(compaction or discarding of objects should be used to generate free space.) 180 573.36 T
0 9 Q
(Pass:) 126 556.86 T
3 10 Q
(ax) 180 556.86 T
2 F
(Size \050in bytes\051 to allocate.) 252 556.86 T
3 F
(cl) 180 545.36 T
4 F
(HeapFlags) 252 545.36 T
2 F
( record.) 307.18 545.36 T
3 F
(ch) 180 533.86 T
4 F
(HeapAllocFlags) 252 533.86 T
2 F
( record.) 333.48 533.86 T
0 9 Q
(Returns:) 126 517.36 T
3 10 Q
(CF) 180 517.36 T
2 F
(Set if error \050not enough memory\051.) 252 517.36 T
3 F
(bx) 180 505.86 T
2 F
(Handle to block allocated.) 252 505.86 T
3 F
(ax) 180 494.36 T
2 F
(Address of block allocated \050if block is \336xed or locked\051.) 252 494.36 T
0 9 Q
(Destr) 126 477.86 T
(oyed:) 146.83 477.86 T
3 10 Q
(cx) 180 477.86 T
0 9 Q
(Library:) 126 461.36 T
4 10 Q
(heap.def) 180 461.36 T
81 446.52 531 451.52 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 446.52 531 451.52 R
7 X
0 0 0 1 0 0 0 K
V
50 450.52 609.01 450.52 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 438.52 T
0 F
(MemAllocLMem) 99 438.52 T
2 10 Q
(Allocates a block within a local memory heap from scratch. T) 180 421.85 T
(o take an) 460.23 421.85 T
(existing block and create a local memory heap built on it, use) 180 410.35 T
4 F
(LMemInitHeap) 180 398.85 T
2 F
(.) 258.87 398.85 T
0 9 Q
(Pass:) 126 382.35 T
3 10 Q
(ax) 180 382.35 T
2 F
(T) 252 382.35 T
(ype of heap \050) 258.15 382.35 T
4 F
(LMemT) 316.67 382.35 T
(ype) 355.77 382.35 T
2 F
(\051.) 374.29 382.35 T
3 F
(cx) 180 370.85 T
2 F
(Size of block header \050or 0 for the default\051.) 252 370.85 T
0 9 Q
(Returns:) 126 354.35 T
3 10 Q
(bx) 180 354.35 T
2 F
(Block handle of the new block. This block will have two) 252 354.35 T
(handles allocated and 64 bytes heap space.) 252 342.85 T
0 9 Q
(Destr) 126 326.35 T
(oyed:) 146.83 326.35 T
2 10 Q
(Nothing.) 180 326.35 T
0 9 Q
(Library:) 126 309.85 T
4 10 Q
(lmem.def) 180 309.85 T
81 295.01 531 300.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 295.01 531 300.02 R
7 X
0 0 0 1 0 0 0 K
V
50 299.01 609.01 299.01 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 287.01 T
0 F
(MemAllocSetOwner) 99 287.01 T
2 10 Q
(Creates a block, assigns a handle to it, and explicitly sets the owner of the) 180 270.34 T
(new block by passing the handle of the owning geode. Otherwise, it is) 180 258.84 T
(identical to) 180 247.34 T
4 F
(MemAlloc) 234.64 247.34 T
2 F
(.) 286.12 247.34 T
0 9 Q
(Pass:) 126 230.84 T
3 10 Q
(ax) 180 230.84 T
2 F
(Size \050in bytes\051 to allocate.) 252 230.84 T
3 F
(cl) 180 219.34 T
4 F
(HeapFlags) 252 219.34 T
2 F
( record.) 307.18 219.34 T
3 F
(ch) 180 207.84 T
4 F
(HeapAllocFlags) 252 207.84 T
2 F
( record.) 333.48 207.84 T
3 F
(bx) 180 196.34 T
2 F
(New owner of block.) 252 196.34 T
0 9 Q
(Returns:) 126 179.84 T
3 10 Q
(CF) 180 179.84 T
2 F
(Set if error \050not enough memory\051.) 252 179.84 T
3 F
(bx) 180 168.34 T
2 F
(Handle to block allocated.) 252 168.34 T
3 F
(ax) 180 156.84 T
2 F
(Address of block allocated \050if block is \336xed or locked\051.) 252 156.84 T
81 144 531 648 C
235.51 643.03 376.49 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
235.51 643.03 376.49 648 R
7 X
0 0 0 1 0 0 0 K
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 C
36 72 576 720 C
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "257" 1
%%Page: "258" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemDecRefCount) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(258) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
3 10 Q
(cx) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(heap.def) 180 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(MemDecRefCount) 99 601.99 T
2 10 Q
-0.01 (Decrements a reference count in a memory handle and immediately frees it) 180 585.33 P
(when the count reaches zero.) 180 573.83 T
0 9 Q
(Pass:) 126 557.33 T
3 10 Q
(bx) 180 557.33 T
2 F
(Memory handle. If zero, this routine will do nothing;) 252 557.33 T
0 9 Q
(Returns:) 126 540.83 T
2 10 Q
(Non-) 180 540.83 T
2 9 Q
(EC) 202.59 540.83 T
2 10 Q
(:) 215.59 540.83 T
(Nothing.) 252 540.83 T
2 9 Q
(EC) 180 529.33 T
2 10 Q
(:) 193 529.33 T
3 F
(bx) 252 529.33 T
2 F
( cleared if reference count drops to zero \050and block was) 264 529.33 T
(freed\051.) 252 517.83 T
0 9 Q
(Destr) 126 501.33 T
(oyed:) 146.83 501.33 T
2 10 Q
(Nothing.) 180 501.33 T
0 9 Q
(Library:) 126 484.83 T
4 10 Q
(heap.def) 180 484.83 T
81 469.98 531 474.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 469.98 531 474.99 R
7 X
0 0 0 1 0 0 0 K
V
50 473.98 609.01 473.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 461.98 T
0 F
(MemDer) 99 461.98 T
(efDS) 144.76 461.98 T
2 10 Q
(Returns the address of the block referenced by its block handle into the) 180 445.32 T
2 9 Q
(DS) 511.69 445.32 T
2 10 Q
-0.3 (register) 180 433.82 P
-0.3 (. The block must be locked before calling this routine. This routine is) 215.18 433.82 P
(useful in allocating a \336xed or locked block.) 180 422.32 T
0 9 Q
(Pass:) 126 405.82 T
3 10 Q
(bx) 180 405.82 T
2 F
(Block handle.) 252 405.82 T
0 9 Q
(Returns:) 126 389.32 T
3 10 Q
(ds) 180 389.32 T
2 F
(Segment of handle.) 252 389.32 T
0 9 Q
(Destr) 126 372.82 T
(oyed:) 146.83 372.82 T
2 10 Q
(Nothing. Flags preserved.) 180 372.82 T
0 9 Q
(Library:) 126 356.32 T
4 10 Q
(heap.def) 180 356.32 T
81 341.48 531 346.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 341.48 531 346.48 R
7 X
0 0 0 1 0 0 0 K
V
50 345.48 609.01 345.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 333.48 T
0 F
(MemDer) 99 333.48 T
(efES) 144.76 333.48 T
2 10 Q
(Returns the address of a block referenced by its block handle into the) 180 316.81 T
2 9 Q
(ES) 502.25 316.81 T
2 10 Q
(register) 180 305.31 T
(. the block must be locked before calling this routine.) 215.18 305.31 T
0 9 Q
(Pass:) 126 288.81 T
3 10 Q
(bx) 180 288.81 T
2 F
(Block handle.) 252 288.81 T
0 9 Q
(Returns:) 126 272.31 T
3 10 Q
(es) 180 272.31 T
2 F
(Segment of handle.) 252 272.31 T
0 9 Q
(Destr) 126 255.81 T
(oyed:) 146.83 255.81 T
2 10 Q
(Nothing. Flags preserved.) 180 255.81 T
0 9 Q
(Library:) 126 239.31 T
4 10 Q
(heap.def) 180 239.31 T
81 224.47 531 229.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 224.47 531 229.48 R
7 X
0 0 0 1 0 0 0 K
V
50 228.47 609.01 228.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 216.47 T
0 F
(MemDiscard) 99 216.47 T
2 10 Q
(Throws away the contents of a discardable memory block.) 180 199.8 T
0 9 Q
(Pass:) 126 183.3 T
3 10 Q
(bx) 180 183.3 T
2 F
(Handle of memory block.) 252 183.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "258" 2
%%Page: "259" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemGetInfo) 480.24 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(259) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Returns:) 126 641.33 T
3 10 Q
(CF) 180 641.33 T
2 F
(Set if block couldn\325) 252 641.33 T
(t be discarded. \050This may happen if the) 338.5 641.33 T
(block being discarded is a) 252 629.83 T
2 9 Q
(VM) 372.95 629.83 T
2 10 Q
( block, for example, and some) 387.94 629.83 T
(other thread is using the \336le.\051) 252 618.33 T
0 9 Q
(Destr) 126 601.83 T
(oyed:) 146.83 601.83 T
3 10 Q
(bx) 180 601.83 T
0 9 Q
(Library:) 126 585.33 T
4 10 Q
(heap.def) 180 585.33 T
81 570.49 531 575.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 570.49 531 575.5 R
7 X
0 0 0 1 0 0 0 K
V
50 574.49 609.01 574.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 562.49 T
0 F
(MemDowngradeExclLock) 99 562.49 T
2 10 Q
(Downgrades an exclusive lock to a shared lock, waking any shared lockers) 180 545.83 T
(blocked on the block.) 180 534.33 T
0 9 Q
(Pass:) 126 517.83 T
3 10 Q
(bx) 180 517.83 T
2 F
(Block handle whose exclusive lock should be downgraded.) 252 517.83 T
0 9 Q
(Returns:) 126 501.33 T
3 10 Q
(ax) 180 501.33 T
2 F
(Segment of block.) 252 501.33 T
0 9 Q
(Destr) 126 484.83 T
(oyed:) 146.83 484.83 T
2 10 Q
(Nothing.) 180 484.83 T
0 9 Q
(Library:) 126 468.33 T
4 10 Q
(heap.def) 180 468.33 T
81 453.48 531 458.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 453.48 531 458.49 R
7 X
0 0 0 1 0 0 0 K
V
50 457.48 609.01 457.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 445.48 T
0 F
(MemFr) 99 445.48 T
(ee) 138.1 445.48 T
2 10 Q
(Frees a memory block. The block may be locked at the time it is freed.) 180 428.82 T
-0.74 (Therefore, make sure that no other thread has locked the block before freeing) 180 417.32 P
(it.) 180 405.82 T
0 9 Q
(Pass:) 126 389.32 T
3 10 Q
(bx) 180 389.32 T
2 F
(Handle of block to free.) 252 389.32 T
0 9 Q
(Returns:) 126 372.82 T
2 10 Q
(Nothing.) 180 372.82 T
0 9 Q
(Destr) 126 356.32 T
(oyed:) 146.83 356.32 T
3 10 Q
(bx) 180 356.32 T
0 9 Q
(Library:) 126 339.82 T
4 10 Q
(heap.def) 180 339.82 T
81 324.98 531 329.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 324.98 531 329.98 R
7 X
0 0 0 1 0 0 0 K
V
50 328.98 609.01 328.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 316.98 T
0 F
(MemGetInfo) 99 316.98 T
2 10 Q
(Returns information about a memory block. Pass this routine the proper) 180 300.31 T
4 F
(MemGetInfoT) 180 288.81 T
(ype) 251.5 288.81 T
2 F
(. The return values depend on what information you) 270.02 288.81 T
(request.) 180 277.31 T
0 9 Q
(Pass:) 126 260.81 T
3 10 Q
(ax) 180 260.81 T
4 F
(MemGetInfoT) 252 260.81 T
(ype) 323.5 260.81 T
2 F
(.) 342.02 260.81 T
3 F
(bx) 180 249.31 T
2 F
(Handle of block.) 252 249.31 T
0 9 Q
(Returns:) 126 232.81 T
3 10 Q
(ax) 180 232.81 T
2 F
(V) 252 232.81 T
(alue based on the) 258.3 232.81 T
4 F
(MemGetInfoT) 341.84 232.81 T
(ype) 413.34 232.81 T
2 F
( passed:) 431.86 232.81 T
2 9 Q
(MGIT_SIZE) 252 221.31 T
3 10 Q
(ax) 324 209.81 T
2 F
( = size of block in bytes.) 336 209.81 T
2 9 Q
(MGIT_FLAGS_AND_LOCK_COUNT) 252 198.31 T
3 10 Q
(al) 324 186.81 T
2 F
( =) 336 186.81 T
4 F
(HeapFlags) 347.62 186.81 T
2 F
(.) 402.8 186.81 T
3 F
(ah) 324 175.31 T
2 F
( = lock count.) 336 175.31 T
2 9 Q
(MGIT_OWNER_OR_VM_FILE_HANDLE) 252 163.81 T
3 10 Q
(ax) 324 152.31 T
2 F
( = handle of owner) 336 152.31 T
(.) 420.77 152.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "259" 3
%%Page: "260" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemIncRefCount) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(260) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
2 9 Q
0 X
(MGIT_ADDRESS) 252 641.33 T
3 10 Q
(ax) 324 629.83 T
2 F
( = segment of block.) 336 629.83 T
2 9 Q
(MGIT_OTHER_INFO) 252 618.33 T
3 10 Q
(ax) 324 606.83 T
2 F
( = contents of) 336 606.83 T
5 9 Q
(HM_) 400.58 606.83 T
5 10 Q
(otherInfo) 421.07 606.83 T
2 F
( \336eld.) 463.09 606.83 T
2 9 Q
(MGIT_EXEC_THREAD) 252 595.33 T
3 10 Q
(ax) 324 583.83 T
2 F
( = handle of thread.) 336 583.83 T
0 9 Q
(Destr) 126 567.33 T
(oyed:) 146.83 567.33 T
2 10 Q
(Nothing.) 180 567.33 T
0 9 Q
(Library:) 126 550.83 T
4 10 Q
(heap.def) 180 550.83 T
81 535.99 531 541 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 535.99 531 541 R
7 X
0 0 0 1 0 0 0 K
V
50 539.99 609.01 539.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 527.99 T
0 F
(MemIncRefCount) 99 527.99 T
2 10 Q
(Increments a reference count on a memory handle.) 180 511.33 T
0 9 Q
(Pass:) 126 494.83 T
3 10 Q
(bx) 180 494.83 T
2 F
(Memory handle. If zero, will do nothing.) 252 494.83 T
0 9 Q
(Returns:) 126 478.33 T
2 10 Q
(Nothing.) 180 478.33 T
0 9 Q
(Destr) 126 461.83 T
(oyed:) 146.83 461.83 T
2 10 Q
(Nothing.) 180 461.83 T
0 9 Q
(Library:) 126 445.33 T
4 10 Q
(heap.def) 180 445.33 T
81 430.48 531 435.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 430.48 531 435.49 R
7 X
0 0 0 1 0 0 0 K
V
50 434.48 609.01 434.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 422.48 T
0 F
(MemInitRefCount) 99 422.48 T
2 10 Q
(Initializes a reference count for a memory handle.) 180 405.82 T
0 9 Q
(Pass:) 126 389.32 T
3 10 Q
(bx) 180 389.32 T
2 F
(Memory handle.) 252 389.32 T
3 F
(ax) 180 377.82 T
2 F
(Initial reference count \0500 is not allowed\051.) 252 377.82 T
0 9 Q
(Returns:) 126 361.32 T
2 10 Q
(Nothing.) 180 361.32 T
0 9 Q
(Destr) 126 344.82 T
(oyed:) 146.83 344.82 T
2 10 Q
(Nothing.) 180 344.82 T
0 9 Q
(Library:) 126 328.32 T
4 10 Q
(heap.def) 180 328.32 T
81 313.48 531 318.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 313.48 531 318.48 R
7 X
0 0 0 1 0 0 0 K
V
50 317.48 609.01 317.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 305.48 T
0 F
(MemLock) 99 305.48 T
2 10 Q
-0.48 (Locks the given block, returning the absolute address of the block of memory) 180 288.81 P
(pointed to by the given handle. Increments the lock count by one. Locked) 180 277.31 T
-0.79 (memory blocks cannot be moved or discarded \050though they may be freed\051. Y) 180 265.81 P
-0.79 (ou) 517.9 265.81 P
(cannot give a block a lock count greater than 255.) 180 254.31 T
0 9 Q
(Pass:) 126 237.81 T
3 10 Q
(bx) 180 237.81 T
2 F
(Handle to block of memory) 252 237.81 T
(.) 374.79 237.81 T
0 9 Q
(Returns:) 126 221.31 T
3 10 Q
(CF) 180 221.31 T
2 F
(Set on error \050Block is discarded\051.) 252 221.31 T
3 F
(ax) 180 209.81 T
2 F
(Segment address of block of memory) 252 209.81 T
(.) 419.42 209.81 T
0 9 Q
(Destr) 126 193.31 T
(oyed:) 146.83 193.31 T
2 10 Q
(Nothing.) 180 193.31 T
0 9 Q
(Library:) 126 176.81 T
4 10 Q
(heap.def) 180 176.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "260" 4
%%Page: "261" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemModifyFlags) 451.46 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(261) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(MemLockExcl) 99 634.99 T
2 10 Q
-0.8 (Locks a memory block for exclusive read/write access. If no one has locked the) 180 618.33 P
-0.08 (block, the thread will gain exclusive access; otherwise, the thread will block) 180 606.83 P
(and the request will go on the queue. Use) 180 595.33 T
4 F
(MemUnlockExcl) 374.11 595.33 T
2 F
( to unlock the) 459.11 595.33 T
(block for exclusive access.) 180 583.83 T
0 9 Q
(Pass:) 126 567.33 T
3 10 Q
(bx) 180 567.33 T
2 F
(Block to lock.) 252 567.33 T
0 9 Q
(Returns:) 126 550.83 T
3 10 Q
(ax) 180 550.83 T
2 F
(Segment address of locked block.) 252 550.83 T
0 9 Q
(Destr) 126 534.33 T
(oyed:) 146.83 534.33 T
2 10 Q
(Nothing.) 180 534.33 T
0 9 Q
(Library:) 126 517.83 T
4 10 Q
(heap.def) 180 517.83 T
81 502.98 531 507.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 502.98 531 507.99 R
7 X
0 0 0 1 0 0 0 K
V
50 506.98 609.01 506.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 494.98 T
0 F
(MemLockFixedOrMovable) 99 494.98 T
2 10 Q
-0.09 (Given a virtual segment, locks the corresponding block down if the segment) 180 478.32 P
(is movable.) 180 466.82 T
0 9 Q
(Pass:) 126 450.32 T
3 10 Q
(bx) 180 450.32 T
2 F
(V) 252 450.32 T
(irtual segment.) 258.78 450.32 T
0 9 Q
(Returns:) 126 433.82 T
3 10 Q
(CF) 180 433.82 T
2 F
(Set if block is discarded and can\325) 252 433.82 T
(t be reloaded; clear if block) 402.03 433.82 T
(is) 252 422.32 T
2 9 Q
(OK) 262.56 422.32 T
2 10 Q
(:) 276.56 422.32 T
3 F
(ax) 180 410.82 T
2 F
(Segment if block is OK; zero otherwise.) 252 410.82 T
0 9 Q
(Destr) 126 394.32 T
(oyed:) 146.83 394.32 T
2 10 Q
(Nothing.) 180 394.32 T
0 9 Q
(Library:) 126 377.82 T
4 10 Q
(heap.def) 180 377.82 T
81 362.98 531 367.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 362.98 531 367.98 R
7 X
0 0 0 1 0 0 0 K
V
50 366.98 609.01 366.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 354.98 T
0 F
(MemLockShar) 99 354.98 T
(ed) 176.11 354.98 T
2 10 Q
(Locks a block down for shared \050usually read-only\051 access.) 180 338.31 T
0 9 Q
(Pass:) 126 321.81 T
3 10 Q
(bx) 180 321.81 T
2 F
(Handle of block to be locked.) 252 321.81 T
0 9 Q
(Returns:) 126 305.31 T
3 10 Q
(ax) 180 305.31 T
2 F
(Segment of locked block.) 252 305.31 T
0 9 Q
(Destr) 126 288.81 T
(oyed:) 146.83 288.81 T
2 10 Q
(Nothing.) 180 288.81 T
0 9 Q
(Library:) 126 272.31 T
4 10 Q
(heap.def) 180 272.31 T
81 257.47 531 262.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 257.47 531 262.48 R
7 X
0 0 0 1 0 0 0 K
V
50 261.47 609.01 261.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 249.47 T
0 F
(MemModifyFlags) 99 249.47 T
2 10 Q
-0.58 (Modify the) 180 232.8 P
5 9 Q
-0.52 (HM_) 231.43 232.8 P
5 10 Q
-0.58 (\337ags) 251.92 232.8 P
2 F
-0.58 ( associated with a memory block. The following bits may) 273.58 232.8 P
(be altered:) 180 221.3 T
2 9 Q
(HF_SHARABLE) 231.68 221.3 T
2 10 Q
(,) 301.34 221.3 T
2 9 Q
(HF_DISCARDABLE) 306.9 221.3 T
2 10 Q
(,) 393.23 221.3 T
2 9 Q
(HF_SW) 398.79 221.3 T
(AP) 430.46 221.3 T
(ABLE) 442.29 221.3 T
2 10 Q
(, and) 467.79 221.3 T
2 9 Q
(HF_LMEM) 180 209.8 T
2 10 Q
(.) 227.49 209.8 T
0 9 Q
(Pass:) 126 193.3 T
3 10 Q
(bx) 180 193.3 T
2 F
(Handle of block to modify) 252 193.3 T
(.) 368.68 193.3 T
3 F
(al) 180 181.8 T
2 F
(Flags to set in the) 252 181.8 T
5 9 Q
(HM_) 337.95 181.8 T
5 10 Q
(\337ags) 358.44 181.8 T
2 F
( \336eld.) 380.1 181.8 T
3 F
(ah) 180 170.3 T
2 F
(Flags to clear in the) 252 170.3 T
5 9 Q
(HM_) 347.02 170.3 T
5 10 Q
(\337ags) 367.51 170.3 T
2 F
( \336eld.) 389.17 170.3 T
0 9 Q
(Returns:) 126 153.8 T
2 10 Q
(Nothing.) 180 153.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "261" 5
%%Page: "262" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemModifyOtherInfo) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(262) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
3 10 Q
(ax) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(heap.def) 180 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(MemModifyOtherInfo) 99 601.99 T
2 10 Q
(Modi\336es the) 180 585.33 T
5 9 Q
(HM_) 239.63 585.33 T
5 10 Q
(otherInfo) 260.12 585.33 T
2 F
( \336eld associated with a memory block.) 302.14 585.33 T
0 9 Q
(Pass:) 126 568.83 T
3 10 Q
(bx) 180 568.83 T
2 F
(Handle of block to modify) 252 568.83 T
(.) 368.68 568.83 T
3 F
(ax) 180 557.33 T
2 F
(New) 252 557.33 T
5 9 Q
(HM_) 275.71 557.33 T
5 10 Q
(otherInfo) 296.2 557.33 T
2 F
( value.) 338.22 557.33 T
0 9 Q
(Returns:) 126 540.83 T
2 10 Q
(Nothing.) 180 540.83 T
0 9 Q
(Destr) 126 524.33 T
(oyed:) 146.83 524.33 T
3 10 Q
(ax) 180 524.33 T
0 9 Q
(Library:) 126 507.83 T
4 10 Q
(heap.def) 180 507.83 T
81 492.98 531 497.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 492.98 531 497.99 R
7 X
0 0 0 1 0 0 0 K
V
50 496.98 609.01 496.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 484.98 T
0 F
(MemOwner) 99 484.98 T
2 10 Q
(Returns the owner \336eld of a handle.) 180 468.32 T
0 9 Q
(Pass:) 126 451.82 T
3 10 Q
(bx) 180 451.82 T
2 F
(Handle.) 252 451.82 T
0 9 Q
(Returns:) 126 435.32 T
3 10 Q
(bx) 180 435.32 T
2 F
(Owner) 252 435.32 T
(. if the block is owned by a) 282.37 435.32 T
2 9 Q
(VM) 406.85 435.32 T
2 10 Q
( \336le, the process that) 421.84 435.32 T
(owns the) 252 423.82 T
2 9 Q
(VM) 296.08 423.82 T
2 10 Q
( \336le is returned.) 311.07 423.82 T
0 9 Q
(Destr) 126 407.32 T
(oyed:) 146.83 407.32 T
2 10 Q
(Nothing.) 180 407.32 T
0 9 Q
(Library:) 126 390.82 T
4 10 Q
(heap.def) 180 390.82 T
81 375.98 531 380.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 375.98 531 380.98 R
7 X
0 0 0 1 0 0 0 K
V
50 379.98 609.01 379.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 367.98 T
0 F
(MemPLock) 99 367.98 T
2 10 Q
(Calls) 180 351.31 T
4 F
(HandleP) 206.49 351.31 T
2 F
( and) 251.67 351.31 T
4 F
(MemLock) 274.64 351.31 T
2 F
( in that order) 325.38 351.31 T
(.) 386.31 351.31 T
0 9 Q
(Pass:) 126 334.81 T
3 10 Q
(bx) 180 334.81 T
2 F
(Handle of memory block.) 252 334.81 T
0 9 Q
(Returns:) 126 318.31 T
3 10 Q
(ax) 180 318.31 T
2 F
(Segment address of block.) 252 318.31 T
0 9 Q
(Destr) 126 301.81 T
(oyed:) 146.83 301.81 T
2 10 Q
(Nothing.) 180 301.81 T
0 9 Q
(Library:) 126 285.31 T
4 10 Q
(heap.def) 180 285.31 T
81 270.47 531 275.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 270.47 531 275.48 R
7 X
0 0 0 1 0 0 0 K
V
50 274.47 609.01 274.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 262.47 T
0 F
(MemReAlloc) 99 262.47 T
2 10 Q
(Reallocates space within a given block, changing its size. Also used to) 180 245.8 T
(reallocate space for a block that has been discarded.) 180 234.3 T
0 9 Q
(Pass:) 126 217.8 T
3 10 Q
(ax) 180 217.8 T
2 F
-0.57 (Size \050in bytes\051 to allocate. Pass zero to allocate the block with) 252 217.8 P
(the same size.) 252 206.3 T
3 F
(bx) 180 194.8 T
2 F
(Handle of block.) 252 194.8 T
3 F
(ch) 180 183.3 T
4 F
(HeapAllocFlags.) 252 183.3 T
0 9 Q
(Returns:) 126 166.8 T
3 10 Q
(CF) 180 166.8 T
2 F
(Set if error \050not enough memory\051.) 252 166.8 T
3 F
(bx) 180 155.3 T
2 F
(Handle of block \050unchanged\051.) 252 155.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "262" 6
%%Page: "263" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemThreadGrabNB) 431.23 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(263) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(ax) 180 641.33 T
2 F
(Segment address of block if) 252 641.33 T
2 9 Q
(HF_LOCK) 381.09 641.33 T
2 10 Q
( was passed in the) 425.6 641.33 T
4 F
(HeapAllocFlags) 252 629.83 T
2 F
(.) 333.48 629.83 T
0 9 Q
(Destr) 126 613.33 T
(oyed:) 146.83 613.33 T
3 10 Q
(ax, cx) 180 613.33 T
0 9 Q
(Library:) 126 596.83 T
4 10 Q
(heap.def) 180 596.83 T
81 581.99 531 587 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 581.99 531 587 R
7 X
0 0 0 1 0 0 0 K
V
50 585.99 609.01 585.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 573.99 T
0 F
(MemSegmentT) 99 573.99 T
(oHandle) 176.54 573.99 T
2 10 Q
(Returns the corresponding handle of a passed segment value.) 180 557.33 T
0 9 Q
(Pass:) 126 540.83 T
3 10 Q
(cx) 180 540.83 T
2 F
(Segment address.) 252 540.83 T
0 9 Q
(Returns:) 126 524.33 T
3 10 Q
(CF) 180 524.33 T
2 F
(Set if a matching handle is found.) 252 524.33 T
3 F
(cx) 180 512.83 T
2 F
(Handle.) 252 512.83 T
0 9 Q
(Returns:) 126 496.33 T
2 10 Q
(Nothing.) 180 496.33 T
0 9 Q
(Library:) 126 479.83 T
4 10 Q
(heap.def) 180 479.83 T
81 464.98 531 469.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 464.98 531 469.99 R
7 X
0 0 0 1 0 0 0 K
V
50 468.98 609.01 468.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 456.98 T
0 F
(MemThr) 99 456.98 T
(eadGrab) 145.44 456.98 T
2 10 Q
(Locks a block and increments a semaphore on the block; the current thread) 180 440.32 T
-0.79 (will be able to perform more) 180 428.82 P
4 F
-0.81 (MemThreadGrab) 308.08 428.82 P
2 F
-0.79 ( operations but other threads) 397.15 428.82 P
(will block on) 180 417.32 T
4 F
(MemThreadGrab) 240.76 417.32 T
2 F
(. If another thread has the semaphore) 329.83 417.32 T
4 F
-0.48 (MemThreadGrab) 180 405.82 P
2 F
-0.47 ( blocks until it can get the semaphore; it then increments) 269.07 405.82 P
(the semaphore, locks the block, and returns the address.) 180 394.32 T
0 9 Q
(Pass:) 126 377.82 T
3 10 Q
(bx) 180 377.82 T
2 F
(Handle of block.) 252 377.82 T
0 9 Q
(Returns:) 126 361.32 T
3 10 Q
(CF) 180 361.32 T
2 F
(Set if block has been discarded; clear if block is resident.) 252 361.32 T
3 F
(ax) 180 349.82 T
2 F
(If) 252 349.82 T
6 F
(CF) 262.18 349.82 T
2 F
( is set) 274.18 349.82 T
3 F
(ax) 303.82 349.82 T
2 F
( = segment address of block of memory) 315.82 349.82 T
(.) 493.19 349.82 T
(If) 252 338.32 T
6 F
(CF) 262.18 338.32 T
2 F
( is clear) 274.18 338.32 T
(,) 309.37 338.32 T
3 F
(ax) 314.93 338.32 T
2 F
( = 0.) 326.93 338.32 T
0 9 Q
(Destr) 126 321.82 T
(oyed:) 146.83 321.82 T
2 10 Q
(Nothing.) 180 321.82 T
0 9 Q
(Library:) 126 305.32 T
4 10 Q
(heap.def) 180 305.32 T
81 290.48 531 295.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 290.48 531 295.48 R
7 X
0 0 0 1 0 0 0 K
V
50 294.48 609.01 294.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 282.48 T
0 F
(MemThr) 99 282.48 T
(eadGrabNB) 145.44 282.48 T
2 10 Q
(Performs the same function as MemThreadGrab \050locks a block and) 180 265.81 T
-0.08 (increments a semaphore on the block\051 except that it doesn\325) 180 254.31 P
-0.08 (t block if another) 449.65 254.31 P
(thread has the semaphore.) 180 242.81 T
0 9 Q
(Pass:) 126 226.31 T
3 10 Q
(bx) 180 226.31 T
2 F
(Handle of block.) 252 226.31 T
0 9 Q
(Returns:) 126 209.81 T
3 10 Q
(CF) 180 209.81 T
2 F
(Set if block has been discarded; clear if block is resident.) 252 209.81 T
3 F
(ax) 180 198.31 T
2 F
(If) 252 198.31 T
6 F
(CF) 262.18 198.31 T
2 F
( is set,) 274.18 198.31 T
3 F
(ax) 306.6 198.31 T
2 F
( = segment address of block of memory) 318.6 198.31 T
(.) 495.97 198.31 T
(If) 252 186.81 T
6 F
(CF) 262.18 186.81 T
2 F
( is clear) 274.18 186.81 T
(,) 309.37 186.81 T
3 F
(ax) 314.93 186.81 T
2 F
( = 0.) 326.93 186.81 T
0 9 Q
(Destr) 126 170.31 T
(oyed:) 146.83 170.31 T
2 10 Q
(Nothing.) 180 170.31 T
0 9 Q
(Library:) 126 153.81 T
4 10 Q
(heap.def) 180 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "263" 7
%%Page: "264" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MemThreadRelease) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(264) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(MemThr) 99 634.99 T
(eadRelease) 145.44 634.99 T
2 10 Q
(Releases a thread previously grabbed by) 180 618.33 T
4 F
(MemThreadGrab) 369.29 618.33 T
2 F
(.) 458.36 618.33 T
0 9 Q
(Pass:) 126 601.83 T
3 10 Q
(bx) 180 601.83 T
2 F
(Handle of block.) 252 601.83 T
0 9 Q
(Returns:) 126 585.33 T
2 10 Q
(Nothing.) 180 585.33 T
0 9 Q
(Destr) 126 568.83 T
(oyed:) 146.83 568.83 T
2 10 Q
(Nothing.) 180 568.83 T
0 9 Q
(Library:) 126 552.33 T
4 10 Q
(heap.def) 180 552.33 T
81 537.48 531 542.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 537.48 531 542.49 R
7 X
0 0 0 1 0 0 0 K
V
50 541.48 609.01 541.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 529.48 T
0 F
(MemUnlock) 99 529.48 T
2 10 Q
(Unlocks a given block of memory by decrementing its lock count. If the lock) 180 512.82 T
(count reaches zero then the block is subject to moving or discarding.) 180 501.32 T
0 9 Q
(Pass:) 126 484.82 T
3 10 Q
(bx) 180 484.82 T
2 F
(Handle of block.) 252 484.82 T
0 9 Q
(Returns:) 126 468.32 T
2 10 Q
(Nothing.) 180 468.32 T
0 9 Q
(Destr) 126 451.82 T
(oyed:) 146.83 451.82 T
2 10 Q
(Nothing \050\337ags preserved\051.) 180 451.82 T
2 9 Q
(\050If EC) 180 440.32 T
2 10 Q
(checking) 207.66 440.32 T
2 9 Q
(\051) 248.21 440.32 T
2 10 Q
(:) 251.2 440.32 T
(Possibly) 252 428.82 T
3 F
(ds) 292.94 428.82 T
2 F
( or) 304.94 428.82 T
3 F
(es) 319.94 428.82 T
2 F
( will be destroyed. \050If segment) 331.94 428.82 T
-0.49 (error) 252 417.32 P
-0.49 (-checking is on and either) 275.14 417.32 P
3 F
-1.05 (ds) 394.38 417.32 P
2 F
-0.49 ( or) 406.38 417.32 P
3 F
-1.05 (es) 420.41 417.32 P
2 F
-0.49 ( is pointing to a block) 432.41 417.32 P
(that has become unlocked, then that register will be set to) 252 405.82 T
2 9 Q
(NULL_SEGMENT) 252 394.32 T
2 10 Q
( upon return from this procedure.\051) 330.68 394.32 T
0 9 Q
(Library:) 126 377.82 T
4 10 Q
(heap.def) 180 377.82 T
81 362.98 531 367.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 362.98 531 367.98 R
7 X
0 0 0 1 0 0 0 K
V
50 366.98 609.01 366.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 354.98 T
0 F
(MemUnlockFixedOrMovable) 99 354.98 T
2 10 Q
(Given a virtual segment, unlocks the corresponding block if the segment is) 180 338.31 T
(movable.) 180 326.81 T
0 9 Q
(Pass:) 126 310.31 T
3 10 Q
(bx) 180 310.31 T
2 F
(V) 252 310.31 T
(irtual segment.) 258.78 310.31 T
0 9 Q
(Returns:) 126 293.81 T
2 10 Q
(Nothing.) 180 293.81 T
0 9 Q
(Destr) 126 277.31 T
(oyed:) 146.83 277.31 T
2 10 Q
(Nothing \050\337ags preserved\051.) 180 277.31 T
0 9 Q
(Library:) 126 260.81 T
4 10 Q
(heap.def) 180 260.81 T
81 245.97 531 250.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 245.97 531 250.98 R
7 X
0 0 0 1 0 0 0 K
V
50 249.97 609.01 249.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 237.97 T
0 F
(MemUnlockShar) 99 237.97 T
(ed) 186.78 237.97 T
2 10 Q
(Unlocks a block that was locked by either) 180 221.3 T
4 F
(MemLockShared) 374.49 221.3 T
2 F
( or) 462.46 221.3 T
4 F
(MemLockExcl) 180 209.8 T
2 F
(.) 253.52 209.8 T
0 9 Q
(Pass:) 126 193.3 T
3 10 Q
(bx) 180 193.3 T
2 F
(Handle to be unlocked.) 252 193.3 T
0 9 Q
(Returns:) 126 176.8 T
2 10 Q
(Nothing.) 180 176.8 T
0 9 Q
(Destr) 126 160.3 T
(oyed:) 146.83 160.3 T
2 10 Q
(Nothing \050\337ags preserved\051.) 180 160.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "264" 8
%%Page: "265" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MessageProcess) 462.37 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(265) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(heap.def) 180 641.33 T
81 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
50 630.49 609.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.49 T
0 F
(MemUnlockV) 99 618.49 T
2 10 Q
(Unlocks a block and releases a semaphore on that block. \050Performs a) 180 601.83 T
4 F
(MemUnlock) 180 590.33 T
2 F
( and a) 242.22 590.33 T
4 F
(HandleV) 273.53 590.33 T
2 F
( in that order) 318.71 590.33 T
(.\051) 379.64 590.33 T
0 9 Q
(Pass:) 126 573.83 T
3 10 Q
(bx) 180 573.83 T
2 F
(Handle of memory block.) 252 573.83 T
0 9 Q
(Returns:) 126 557.33 T
3 10 Q
(bx) 180 557.33 T
2 F
(Same handle.) 252 557.33 T
0 9 Q
(Destr) 126 540.83 T
(oyed:) 146.83 540.83 T
2 10 Q
(Nothing \050\337ags preserved\051.) 180 540.83 T
0 9 Q
(Library:) 126 524.33 T
4 10 Q
(heap.def) 180 524.33 T
81 509.48 531 514.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 509.48 531 514.49 R
7 X
0 0 0 1 0 0 0 K
V
50 513.48 609.01 513.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 501.48 T
0 F
(MemUpgradeShar) 99 501.48 T
(edLock) 194.77 501.48 T
2 10 Q
(Upgrades a shared lock to an exclusive lock. If the block is shared by other) 180 484.82 T
(threads this will block and the memory block may move on the heap before) 180 473.32 T
(gaining exclusive access.) 180 461.82 T
0 9 Q
(Pass:) 126 445.32 T
3 10 Q
(bx) 180 445.32 T
2 F
(Handle \050locked and shared\051 whose lock should be upgraded.) 252 445.32 T
-0.36 (The handle must not be locked more than once by the thread) 252 433.82 P
(calling this routine) 252 422.32 T
0 9 Q
(Returns:) 126 405.82 T
3 10 Q
(ds, es) 180 405.82 T
2 F
-0.21 (Fixed up to possibly new block location if they were pointing) 252 405.82 P
(to the block upon entry) 252 394.32 T
(.) 357.75 394.32 T
3 F
(ax) 180 382.82 T
2 F
(Position of locked block.) 252 382.82 T
0 9 Q
(Destr) 126 366.32 T
(oyed:) 146.83 366.32 T
2 10 Q
(Nothing.) 180 366.32 T
0 9 Q
(Library:) 126 349.82 T
4 10 Q
(heap.def) 180 349.82 T
81 334.98 531 339.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 334.98 531 339.98 R
7 X
0 0 0 1 0 0 0 K
V
50 338.98 609.01 338.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 326.98 T
0 F
(MessageDispatch) 99 326.98 T
2 10 Q
-0.01 (Dispatches a passed message without destroying the handle of the message) 180 310.31 P
(\050event\051 to dispatch using) 180 298.81 T
4 F
(ObjMessage) 296.67 298.81 T
2 F
(.) 358.51 298.81 T
0 9 Q
(Pass:) 126 282.31 T
3 10 Q
(bx) 180 282.31 T
2 F
(Handle of message \050event\051.) 252 282.31 T
3 F
(di) 180 270.81 T
4 F
(MessageFlags) 252 270.81 T
2 F
(.) 323.47 270.81 T
2 9 Q
(MF_RECORD) 329.03 270.81 T
2 10 Q
( in this instance means to) 388.02 270.81 T
(dispatch but do not destroy the message.) 252 259.31 T
0 9 Q
(Returns:) 126 242.81 T
3 10 Q
(ax, cx, dx, bp) 180 242.81 T
2 F
(As in) 252 231.31 T
4 F
(ObjMessage) 278.67 231.31 T
2 F
(.) 340.51 231.31 T
0 9 Q
(Destr) 126 214.81 T
(oyed:) 146.83 214.81 T
2 10 Q
(Nothing.) 180 214.81 T
0 9 Q
(Library:) 126 198.31 T
4 10 Q
(object.def) 180 198.31 T
81 183.47 531 188.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 183.47 531 188.48 R
7 X
0 0 0 1 0 0 0 K
V
50 187.47 609.01 187.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 175.47 T
0 F
(MessagePr) 99 175.47 T
(ocess) 154.76 175.47 T
2 10 Q
(Processes a message \050event\051 dispatching it via a custom callback routine.) 180 158.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "265" 9
%%Page: "266" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MessageSetDestination) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(266) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
3 10 Q
(bx) 180 641.33 T
2 F
(Handle of message \050event\051 to dispatch.) 252 641.33 T
3 F
(di) 180 629.83 T
2 F
(Data to pass to callback routine, if any) 252 629.83 T
(.) 429.27 629.83 T
3 F
(si) 180 618.33 T
2 F
(Non-zero to preserve event. Zero to destroy it.) 252 618.33 T
0 9 Q
(Pass on stack:) 126 601.83 T
2 10 Q
(fptr) 180 590.33 T
(Address of callback routine. \050Segment is pushed \336rst\051.) 252 590.33 T
0 9 Q
(Callback Routine Speci\336cations:) 126 574.83 T
(Passed:) 189 560.83 T
2 10 Q
(\050Same as in) 252 560.83 T
4 F
(ObjMessage) 308.87 560.83 T
2 F
( except that) 370.71 560.83 T
3 F
(di) 427.94 560.83 T
2 F
( is passed through) 439.94 560.83 T
(from caller) 324 549.83 T
(.\051) 373.44 549.83 T
3 F
(CF) 252 538.83 T
2 F
(Set if event has stack data.) 324 538.83 T
3 F
(ss) 252 527.83 T
2 F
(:[) 264 527.83 T
3 F
(sp) 270.11 527.83 T
2 F
(+4]) 282.11 527.83 T
(Calling thread. \050This address is directly) 324 527.83 T
(above the return address.\051) 324 516.83 T
0 9 Q
(Return:) 189 501.83 T
2 10 Q
(Nothing.) 252 501.83 T
0 9 Q
(May Destr) 189 486.83 T
(oy:) 229.57 486.83 T
3 10 Q
(ax) 252 486.83 T
2 F
(,) 264 486.83 T
3 F
(cx) 269.56 486.83 T
2 F
(,) 281.56 486.83 T
3 F
(dx) 287.12 486.83 T
2 F
(,) 299.12 486.83 T
3 F
(si) 304.68 486.83 T
2 F
(,) 316.68 486.83 T
3 F
(di) 322.24 486.83 T
2 F
(,) 334.24 486.83 T
3 F
(bp) 339.8 486.83 T
2 F
(,) 351.8 486.83 T
3 F
(ds) 357.36 486.83 T
2 F
(,) 369.36 486.83 T
3 F
(es) 374.92 486.83 T
0 9 Q
(Returns:) 126 470.83 T
3 10 Q
(ax) 180 470.83 T
2 F
(,) 192 470.83 T
3 F
(cx) 197.56 470.83 T
2 F
(,) 209.56 470.83 T
3 F
(dx) 215.12 470.83 T
2 F
(,) 227.12 470.83 T
3 F
(bp) 232.68 470.83 T
2 F
(As returned by callback routine.) 252 459.33 T
0 9 Q
(Destr) 126 442.83 T
(oyed:) 146.83 442.83 T
2 10 Q
(Nothing.) 180 442.83 T
0 9 Q
(Library:) 126 426.33 T
4 10 Q
(object.def) 180 426.33 T
81 411.49 531 416.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 411.49 531 416.5 R
7 X
0 0 0 1 0 0 0 K
V
50 415.49 609.01 415.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 403.49 T
0 F
(MessageSetDestination) 99 403.49 T
2 10 Q
(Changes an event\325) 180 386.83 T
(s destination optr) 264.27 386.83 T
(.) 345.02 386.83 T
0 9 Q
(Pass:) 126 370.33 T
3 10 Q
(bx) 180 370.33 T
2 F
(Event handle \050message\051.) 252 370.33 T
3 F
(cx:si) 180 358.83 T
2 F
(destination.) 252 358.83 T
0 9 Q
(Returns:) 126 342.33 T
2 10 Q
(Nothing.) 180 342.33 T
0 9 Q
(Destr) 126 325.83 T
(oyed:) 146.83 325.83 T
2 10 Q
(Nothing.) 180 325.83 T
0 9 Q
(Library:) 126 309.33 T
4 10 Q
(object.def) 180 309.33 T
81 294.48 531 299.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 294.48 531 299.49 R
7 X
0 0 0 1 0 0 0 K
V
50 298.48 609.01 298.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 286.48 T
0 F
(MetaGrabFocusExclLow) 99 286.48 T
2 10 Q
(This routine grabs the focus exclusive for the object.) 180 269.82 T
0 9 Q
(Pass:) 126 253.32 T
3 10 Q
(*ds:si) 180 253.32 T
2 F
(Object instance data.) 252 253.32 T
0 9 Q
(Returns:) 126 236.82 T
3 10 Q
(ds) 180 236.82 T
2 F
(Updated to point at segment of same block as on entry) 252 236.82 T
(.) 502.23 236.82 T
0 9 Q
(Destr) 126 220.32 T
(oyed:) 146.83 220.32 T
2 10 Q
(Nothing.) 180 220.32 T
0 9 Q
(Library:) 126 203.82 T
4 10 Q
(uiInputC.def) 180 203.82 T
0 9 Q
(W) 126 187.32 T
(arning:) 134.51 187.32 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 187.32 P
(invalidating stored segment pointers to them.) 180 175.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "266" 10
%%Page: "267" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MetaReleaseFTExclLow) 411.03 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(267) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(MetaGrabModelExclLow) 99 634.99 T
2 10 Q
(This routine grabs the model exclusive for the object.) 180 618.33 T
0 9 Q
(Pass:) 126 601.83 T
3 10 Q
(*ds:si) 180 601.83 T
2 F
(Object instance data.) 252 601.83 T
0 9 Q
(Returns:) 126 585.33 T
3 10 Q
(ds) 180 585.33 T
2 F
(Updated to point at segment of same block as on entry) 252 585.33 T
(.) 502.23 585.33 T
0 9 Q
(Destr) 126 568.83 T
(oyed:) 146.83 568.83 T
2 10 Q
(Nothing.) 180 568.83 T
0 9 Q
(Library:) 126 552.33 T
4 10 Q
(uiInputC.def) 180 552.33 T
0 9 Q
(W) 126 535.83 T
(arning:) 134.51 535.83 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 535.83 P
(invalidating stored segment pointers to them.) 180 524.33 T
81 509.48 531 514.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 509.48 531 514.49 R
7 X
0 0 0 1 0 0 0 K
V
50 513.48 609.01 513.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 501.48 T
0 F
(MetaGrabT) 99 501.48 T
(argetExclLow) 159.89 501.48 T
2 10 Q
(This routine grabs the target exclusive for the object.) 180 484.82 T
0 9 Q
(Pass:) 126 468.32 T
3 10 Q
(*ds:si) 180 468.32 T
2 F
(Object instance data.) 252 468.32 T
0 9 Q
(Returns:) 126 451.82 T
3 10 Q
(ds) 180 451.82 T
2 F
(Updated to point at segment of same block as on entry) 252 451.82 T
(.) 502.23 451.82 T
0 9 Q
(Destr) 126 435.32 T
(oyed:) 146.83 435.32 T
2 10 Q
(Nothing.) 180 435.32 T
0 9 Q
(Library:) 126 418.82 T
4 10 Q
(uiInputC.def) 180 418.82 T
0 9 Q
(W) 126 402.32 T
(arning:) 134.51 402.32 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 402.32 P
(invalidating stored segment pointers to them.) 180 390.82 T
81 375.98 531 380.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 375.98 531 380.98 R
7 X
0 0 0 1 0 0 0 K
V
50 379.98 609.01 379.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 367.98 T
0 F
(MetaReleaseFocusExclLow) 99 367.98 T
2 10 Q
(This routine releases the focus exclusive for the object.) 180 351.31 T
0 9 Q
(Pass:) 126 334.81 T
3 10 Q
(*ds:si) 180 334.81 T
2 F
(Object instance data.) 252 334.81 T
0 9 Q
(Returns:) 126 318.31 T
3 10 Q
(ds) 180 318.31 T
2 F
(Updated to point at segment of same block as on entry) 252 318.31 T
(.) 502.23 318.31 T
0 9 Q
(Destr) 126 301.81 T
(oyed:) 146.83 301.81 T
2 10 Q
(Nothing.) 180 301.81 T
0 9 Q
(Library:) 126 285.31 T
4 10 Q
(uiInputC.def) 180 285.31 T
0 9 Q
(W) 126 268.81 T
(arning:) 134.51 268.81 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 268.81 P
(invalidating stored segment pointers to them.) 180 257.31 T
81 242.47 531 247.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 242.47 531 247.48 R
7 X
0 0 0 1 0 0 0 K
V
50 246.47 609.01 246.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 234.47 T
0 F
(MetaReleaseFTExclLow) 99 234.47 T
2 10 Q
(This routine releases the focus and target exclusives for the object.) 180 217.8 T
0 9 Q
(Pass:) 126 201.3 T
3 10 Q
(*ds:si) 180 201.3 T
2 F
(Object instance data.) 252 201.3 T
0 9 Q
(Returns:) 126 184.8 T
3 10 Q
(ds) 180 184.8 T
2 F
(Updated to point at segment of same block as on entry) 252 184.8 T
(.) 502.23 184.8 T
0 9 Q
(Destr) 126 168.3 T
(oyed:) 146.83 168.3 T
2 10 Q
(Nothing.) 180 168.3 T
0 9 Q
(Library:) 126 151.8 T
4 10 Q
(uiInputC.def) 180 151.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "267" 11
%%Page: "268" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(MetaRelaseModelExclLow) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(268) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(W) 126 641.33 T
(arning:) 134.51 641.33 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 641.33 P
(invalidating stored segment pointers to them.) 180 629.83 T
81 614.99 531 620 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 614.99 531 620 R
7 X
0 0 0 1 0 0 0 K
V
50 618.99 609.01 618.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 606.99 T
0 F
(MetaRelaseModelExclLow) 99 606.99 T
2 10 Q
(This routine releases the model exclusive for the object.) 180 590.33 T
0 9 Q
(Pass:) 126 573.83 T
3 10 Q
(*ds:si) 180 573.83 T
2 F
(Object instance data.) 252 573.83 T
0 9 Q
(Returns:) 126 557.33 T
3 10 Q
(ds) 180 557.33 T
2 F
(Updated to point at segment of same block as on entry) 252 557.33 T
(.) 502.23 557.33 T
0 9 Q
(Destr) 126 540.83 T
(oyed:) 146.83 540.83 T
2 10 Q
(Nothing.) 180 540.83 T
0 9 Q
(Library:) 126 524.33 T
4 10 Q
(uiInputC.def) 180 524.33 T
0 9 Q
(W) 126 507.83 T
(arning:) 134.51 507.83 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 507.83 P
(invalidating stored segment pointers to them.) 180 496.33 T
81 481.48 531 486.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 481.48 531 486.49 R
7 X
0 0 0 1 0 0 0 K
V
50 485.48 609.01 485.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 473.48 T
0 F
(MetaReleaseT) 99 473.48 T
(argetExclLow) 171.2 473.48 T
2 10 Q
(This routine releases the target exclusive for the object.) 180 456.82 T
0 9 Q
(Pass:) 126 440.32 T
3 10 Q
(*ds:si) 180 440.32 T
2 F
(Object instance data.) 252 440.32 T
0 9 Q
(Returns:) 126 423.82 T
3 10 Q
(ds) 180 423.82 T
2 F
(Updated to point at segment of same block as on entry) 252 423.82 T
(.) 502.23 423.82 T
0 9 Q
(Destr) 126 407.32 T
(oyed:) 146.83 407.32 T
2 10 Q
(Nothing.) 180 407.32 T
0 9 Q
(Library:) 126 390.82 T
4 10 Q
(uiInputC.def) 180 390.82 T
0 9 Q
(W) 126 374.32 T
(arning:) 134.51 374.32 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 374.32 P
(invalidating stored segment pointers to them.) 180 362.82 T
81 347.98 531 352.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 347.98 531 352.98 R
7 X
0 0 0 1 0 0 0 K
V
50 351.98 609.01 351.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 339.98 T
0 F
(NameArrayAdd) 99 339.98 T
2 10 Q
-0.09 (Creates an element within a name array and copies the data and name into) 180 323.31 P
(it. If an element with the same name already exists, this routine will not) 180 311.81 T
(create a duplicate; if) 180 300.31 T
2 9 Q
(NAAF_SET_DA) 277.05 300.31 T
(T) 343.56 300.31 T
(A_ON_REPLACE) 349.07 300.31 T
2 10 Q
( is passed, the newly) 423.4 300.31 T
(added element will replace the duplicate element.) 180 288.81 T
(This routine may resize the) 180 272.31 T
2 9 Q
( LM) 307.23 272.31 T
2 10 Q
(em block, moving it on the heap and) 324.23 272.31 T
(invalidating stored segment pointers to it.) 180 260.81 T
0 9 Q
(Pass:) 126 244.31 T
3 10 Q
(*ds:si) 180 244.31 T
2 F
(Name array) 252 244.31 T
(.) 306.64 244.31 T
3 F
(es:di) 180 232.81 T
2 F
(Name to add.) 252 232.81 T
3 F
(cx) 180 221.31 T
2 F
(Length of name \0500 for null-terminated\051.) 252 221.31 T
3 F
(bx) 180 209.81 T
4 F
(NameArrayAddFlags) 252 209.81 T
2 F
(.) 360.89 209.81 T
3 F
(dx:ax) 180 198.31 T
2 F
(Data for element.) 252 198.31 T
0 9 Q
(Returns:) 126 181.81 T
3 10 Q
(CF) 180 181.81 T
2 F
(Set if name added.) 252 181.81 T
3 F
(ax) 180 170.31 T
2 F
(Name token.) 252 170.31 T
0 9 Q
(Destr) 126 153.81 T
(oyed:) 146.83 153.81 T
2 10 Q
(Nothing.) 180 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "268" 12
%%Page: "269" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(NameArrayFind) 458.46 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(269) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(chunkarr) 180 641.33 T
(.def) 228.53 641.33 T
81 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
50 630.49 609.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.49 T
0 F
(NameArrayChangeName) 99 618.49 T
2 10 Q
(Changes the element\325) 180 601.83 T
(s name within the passed name array) 279.27 601.83 T
(.) 452.45 601.83 T
(This routine may resize the) 180 585.33 T
2 9 Q
( LM) 307.23 585.33 T
2 10 Q
(em block, moving it on the heap and) 324.23 585.33 T
(invalidating stored segment pointers to it.) 180 573.83 T
0 9 Q
(Pass:) 126 557.33 T
3 10 Q
(*ds:si) 180 557.33 T
2 F
(Name array) 252 557.33 T
(.) 306.64 557.33 T
3 F
(ax) 180 545.83 T
2 F
(Name token.) 252 545.83 T
3 F
(es:di) 180 534.33 T
2 F
(New name.) 252 534.33 T
3 F
(cx) 180 522.83 T
2 F
(Length of name \0500 for null-terminated\051.) 252 522.83 T
0 9 Q
(Returns:) 126 506.33 T
2 10 Q
(Nothing.) 180 506.33 T
0 9 Q
(Destr) 126 489.83 T
(oyed:) 146.83 489.83 T
2 10 Q
(Nothing.) 180 489.83 T
0 9 Q
(Library:) 126 473.33 T
4 10 Q
(chunkarr) 180 473.33 T
(.def) 228.53 473.33 T
81 458.48 531 463.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 458.48 531 463.49 R
7 X
0 0 0 1 0 0 0 K
V
50 462.48 609.01 462.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 450.48 T
0 F
(NameArrayCr) 99 450.48 T
(eate) 174.08 450.48 T
2 10 Q
(Creates a name array with zero elements. Add elements with) 180 433.82 T
4 F
(NameArrayAdd) 180 422.32 T
2 F
(.) 260.93 422.32 T
(This routine may resize the) 180 405.82 T
2 9 Q
( LM) 307.23 405.82 T
2 10 Q
(em block, moving it on the heap and) 324.23 405.82 T
(invalidating stored segment pointers to it.) 180 394.32 T
0 9 Q
(Pass:) 126 377.82 T
3 10 Q
(ds) 180 377.82 T
2 F
(Block for new array) 252 377.82 T
(.) 342 377.82 T
3 F
(bx) 180 366.32 T
2 F
(Data size for each element.) 252 366.32 T
3 F
(cx) 180 354.82 T
2 F
(Size for) 252 354.82 T
4 F
(ChunkArrayHeader) 289.59 354.82 T
2 F
(. Default size is zero.) 392.19 354.82 T
3 F
(si) 180 343.32 T
2 F
(ChunkHandle to use \050or 0 if you want to allocate one\051.) 252 343.32 T
3 F
(al) 180 331.82 T
4 F
(ObjChunkFlags) 252 331.82 T
2 F
( to pass to) 333.29 331.82 T
4 F
(LMemAlloc) 382.75 331.82 T
2 F
(.) 441.45 331.82 T
0 9 Q
(Returns:) 126 315.32 T
3 10 Q
(*ds:si) 180 315.32 T
2 F
(Name array) 252 315.32 T
(.) 306.64 315.32 T
0 9 Q
(Destr) 126 298.82 T
(oyed:) 146.83 298.82 T
2 10 Q
(Nothing.) 180 298.82 T
0 9 Q
(Library:) 126 282.32 T
4 10 Q
(chunkarr) 180 282.32 T
(.def) 228.53 282.32 T
81 267.48 531 272.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 267.48 531 272.48 R
7 X
0 0 0 1 0 0 0 K
V
50 271.48 609.01 271.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 259.48 T
0 F
(NameArrayFind) 99 259.48 T
2 10 Q
(Finds a name element within a name array) 180 242.81 T
(.) 379.49 242.81 T
0 9 Q
(Pass:) 126 226.31 T
3 10 Q
(*ds:si) 180 226.31 T
2 F
(Name array) 252 226.31 T
(.) 306.64 226.31 T
3 F
(es:di) 180 214.81 T
2 F
(Name to \336nd.) 252 214.81 T
3 F
(cx) 180 203.31 T
2 F
(Length of name \0500 for null-terminated\051.) 252 203.31 T
3 F
(dx:ax) 180 191.81 T
2 F
(Buffer to return data \050or zero to not return data\051.) 252 191.81 T
0 9 Q
(Returns:) 126 175.31 T
3 10 Q
(ax) 180 175.31 T
2 F
(Name token. \050) 252 175.31 T
2 9 Q
(CA_NULL_ELEMENT) 317.2 175.31 T
2 10 Q
( if not found\051.) 413.2 175.31 T
3 F
(CF) 180 163.81 T
2 F
(Set if name found.) 252 163.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "269" 13
%%Page: "270" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjBlockGetOutput) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(270) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(chunkarr) 180 624.83 T
(.def) 228.53 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(ObjBlockGetOutput) 99 601.99 T
2 10 Q
-0.27 (Returns the optr of the object set to receive output messages from all objects) 180 585.33 P
(within the object block. \050This output optr is stored in an object block\325) 180 573.83 T
(s) 495.97 573.83 T
4 F
(ObjLMemBlockHeader) 180 562.33 T
2 F
(.\051) 297.78 562.33 T
0 9 Q
(Pass:) 126 545.83 T
3 10 Q
(ds) 180 545.83 T
2 F
(Object block.) 252 545.83 T
0 9 Q
(Returns:) 126 529.33 T
3 10 Q
(bx:si) 180 529.33 T
2 F
(Output optr) 252 529.33 T
(.) 306.63 529.33 T
0 9 Q
(Destr) 126 512.83 T
(oyed:) 146.83 512.83 T
2 10 Q
(Nothing.) 180 512.83 T
0 9 Q
(Library:) 126 496.33 T
4 10 Q
(object.def) 180 496.33 T
81 481.48 531 486.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 481.48 531 486.49 R
7 X
0 0 0 1 0 0 0 K
V
50 485.48 609.01 485.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 473.48 T
0 F
(ObjBlockSetOutput) 99 473.48 T
2 10 Q
(Sets the optr of the object set to receive output messages from all objects) 180 456.82 T
(within the object block. \050This output optr is stored in an object block\325) 180 445.32 T
(s) 495.97 445.32 T
4 F
(ObjLMemBlockHeader) 180 433.82 T
2 F
(.\051) 297.78 433.82 T
0 9 Q
(Pass:) 126 417.32 T
3 10 Q
(ds) 180 417.32 T
2 F
(Object block.) 252 417.32 T
3 F
(bx:si) 180 405.82 T
2 F
(Output optr) 252 405.82 T
(.) 306.63 405.82 T
0 9 Q
(Returns:) 126 389.32 T
2 10 Q
(Nothing.) 180 389.32 T
0 9 Q
(Destr) 126 372.82 T
(oyed:) 146.83 372.82 T
2 10 Q
(Nothing.) 180 372.82 T
0 9 Q
(Library:) 126 356.32 T
4 10 Q
(object.def) 180 356.32 T
81 341.48 531 346.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 341.48 531 346.48 R
7 X
0 0 0 1 0 0 0 K
V
50 345.48 609.01 345.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 333.48 T
0 F
(ObjCallClassNoLock) 99 333.48 T
2 10 Q
(Sends a message \050invokes a method\051 of the given class for an object. If the) 180 316.81 T
(message is not resident in the passed class, sends that message on to the) 180 305.31 T
(class\325 superclass.) 180 293.81 T
-0.17 (This routine assumes that the object block containing the receiving object is) 180 277.31 P
(already locked down and is being run by the same process. It is the) 180 265.81 T
(responsibility of the caller to ensure that this is the case.) 180 254.31 T
0 9 Q
(Pass:) 126 237.81 T
3 10 Q
(ax) 180 237.81 T
2 F
(Message.) 252 237.81 T
3 F
(cx, dx, bp) 180 226.31 T
2 F
(Other data to pass.) 252 226.31 T
3 F
(*ds:si) 180 214.81 T
2 F
-0.44 (Instance data of object in question; if the receiving object is a) 252 214.81 P
(process) 252 203.31 T
3 F
(ds) 288.66 203.31 T
2 F
( is the core block of the process.) 300.66 203.31 T
3 F
(ds) 448.63 203.31 T
2 F
( must be) 460.63 203.31 T
(pointing to an object block, another kind of local memory) 252 191.81 T
(block, or a core block;) 252 180.31 T
3 F
(ds) 353.5 180.31 T
2 F
(:0 must the be the handle of the) 365.5 180.31 T
(block.) 252 168.81 T
3 F
(es:di) 180 157.31 T
2 F
(Class to call.) 252 157.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "270" 14
%%Page: "271" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjCallInstanceNoLock) 411.77 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(271) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Returns:) 126 641.33 T
3 10 Q
(CF) 180 641.33 T
2 F
(Clear if no message was called; otherwise, this \337ag is set by) 252 641.33 T
(the invoked message.) 252 629.83 T
3 F
(ax, cx, dx, bp) 180 618.33 T
2 F
(Return values set by message.) 252 606.83 T
3 F
(ds) 180 595.33 T
2 F
-0.22 (Pointing to same object block. \050The address may be different) 252 595.33 P
(since) 252 583.83 T
2 9 Q
(LM) 278.11 583.83 T
2 10 Q
(em block may move while locked.\051) 292.61 583.83 T
3 F
(bx, si, di) 180 572.33 T
2 F
(,) 240 572.33 T
3 F
(es) 245.56 572.33 T
2 F
(Unchanged.) 252 560.83 T
0 9 Q
(Message Speci\336cations:) 126 546 T
(Passed:) 189 532.33 T
3 10 Q
(es) 252 532.33 T
2 F
(Segment of class called.) 324 532.33 T
3 F
(*ds:si) 252 521.33 T
2 F
(Instance data of object called.) 324 521.33 T
3 F
(ds:bx) 252 510.33 T
2 F
(Instance data of object called \050=) 324 510.33 T
3 F
(*ds:si) 472.85 510.33 T
2 F
(\051.) 508.85 510.33 T
3 F
(ds:di) 252 499.33 T
2 F
(If class of message handler is in a master) 324 499.33 T
(part, this is the data for master part of) 324 488.33 T
(message. Otherwise,) 324 477.33 T
3 F
(ds:di) 421.98 477.33 T
2 F
( =) 451.98 477.33 T
3 F
(*ds:si) 463.6 477.33 T
2 F
(.) 499.6 477.33 T
3 F
(cx, dx, bp) 252 466.33 T
2 F
(Other data.) 324 466.33 T
3 F
(ax) 252 455.33 T
2 F
(Message.) 324 455.33 T
0 9 Q
(Return:) 189 440.33 T
3 10 Q
(ax) 252 440.33 T
2 F
(,) 264 440.33 T
3 F
(cx) 269.56 440.33 T
2 F
(,) 281.56 440.33 T
3 F
( dx, bp) 284.34 440.33 T
2 F
(Return values of message. If message does) 324 429.33 T
(not return some or all of these registers,) 324 418.33 T
(those not returned may be destroyed.) 324 407.33 T
0 9 Q
(May Destr) 189 392.33 T
(oy:) 229.57 392.33 T
3 10 Q
(bx) 252 392.33 T
2 F
(,) 264 392.33 T
3 F
(si) 269.56 392.33 T
2 F
(,) 281.56 392.33 T
3 F
(di) 287.12 392.33 T
2 F
(,) 299.12 392.33 T
3 F
(ds) 304.68 392.33 T
2 F
(,) 316.68 392.33 T
3 F
(es) 322.24 392.33 T
2 F
( \050and unused return registers above\051.) 334.24 392.33 T
0 9 Q
(Destr) 126 376.33 T
(oyed:) 146.83 376.33 T
2 10 Q
(Nothing.) 180 376.33 T
0 9 Q
(Library:) 126 359.83 T
4 10 Q
(object.def) 180 359.83 T
81 344.99 531 350 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 344.99 531 350 R
7 X
0 0 0 1 0 0 0 K
V
50 348.99 609.01 348.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 336.99 T
0 F
(ObjCallInstanceNoLock) 99 336.99 T
2 10 Q
(Invokes a message of the given instance\325) 180 320.33 T
(s class, \336xing up) 366.32 320.33 T
3 F
(ds) 445.22 320.33 T
2 F
( upon return.) 457.22 320.33 T
-0.17 (This routine assumes that the object block containing the receiving object is) 180 303.83 P
(already locked down and is being run by the same process. It is the) 180 292.33 T
(responsibility of the caller to ensure that this is the case.) 180 280.83 T
0 9 Q
(Pass:) 126 264.33 T
3 10 Q
(ax) 180 264.33 T
2 F
(Message to invoke.) 252 264.33 T
3 F
(cx, dx, bp) 180 252.83 T
2 F
(Other data to pass with message.) 252 252.83 T
3 F
(*ds:si) 180 241.33 T
2 F
(Instance data of object to call.) 252 241.33 T
3 F
(ds) 392.39 241.33 T
2 F
( must be pointing to an) 404.39 241.33 T
-0.79 (object block, another local memory block, or a core block. \050I.e.,) 252 229.83 P
3 F
(ds) 252 218.33 T
2 F
(:0 must be the handle of the block.\051) 264 218.33 T
0 9 Q
(Returns:) 126 201.83 T
3 10 Q
(CF) 180 201.83 T
2 F
(Clear if no message was called; otherwise, this \337ag is set by) 252 201.83 T
(the invoked message.) 252 190.33 T
3 F
(ax, cx, dx, bp) 180 178.83 T
2 F
(Return values set by message.) 252 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "271" 15
%%Page: "272" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjCallInstanceNoLockES) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(272) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(ds) 180 641.33 T
2 F
-0.22 (Pointing to same object block. \050The address may be different) 252 641.33 P
(since) 252 629.83 T
2 9 Q
(LM) 278.11 629.83 T
2 10 Q
(em block may move while locked.\051) 292.61 629.83 T
3 F
(bx, si, di) 180 618.33 T
2 F
(Unchanged.) 252 618.33 T
3 F
(es) 180 606.83 T
2 F
-0.22 (If) 252 606.83 P
3 F
-0.47 (es) 261.96 606.83 P
2 F
-0.22 ( =) 273.96 606.83 P
3 F
-0.47 (ds) 285.14 606.83 P
2 F
-0.22 ( upon entry) 297.14 606.83 P
-0.22 (, then) 348.92 606.83 P
3 F
-0.47 (es) 377.93 606.83 P
2 F
-0.22 ( is destroyed. Otherwise,) 389.93 606.83 P
3 F
-0.47 (es) 506.1 606.83 P
2 F
-0.22 ( is) 518.1 606.83 P
(unchanged.) 252 595.33 T
0 9 Q
(Message Speci\336cations:) 126 580.5 T
(Passed:) 189 566.83 T
3 10 Q
(es) 252 566.83 T
2 F
(Segment of class called.) 324 566.83 T
3 F
(*ds:si) 252 555.83 T
2 F
(Instance data of object called.) 324 555.83 T
3 F
(ds:bx) 252 544.83 T
2 F
(Instance data of object called \050=) 324 544.83 T
3 F
(*ds:si) 472.85 544.83 T
2 F
(\051.) 508.85 544.83 T
3 F
(ds:di) 252 533.83 T
2 F
(If class of message handler is in a master) 324 533.83 T
(part, this is the data for master part of) 324 522.83 T
(message. Otherwise,) 324 511.83 T
3 F
(ds:di) 421.98 511.83 T
2 F
( =) 451.98 511.83 T
3 F
(*ds:si) 463.6 511.83 T
2 F
(.) 499.6 511.83 T
3 F
(cx, dx, bp) 252 500.83 T
2 F
(Other data.) 324 500.83 T
3 F
(ax) 252 489.83 T
2 F
(Message.) 324 489.83 T
0 9 Q
(Return:) 189 474.83 T
3 10 Q
(ax) 252 474.83 T
2 F
(,) 264 474.83 T
3 F
(cx) 269.56 474.83 T
2 F
(,) 281.56 474.83 T
3 F
( dx, bp) 284.34 474.83 T
2 F
(Return values of message. If message does) 324 463.83 T
(not return some or all of these registers,) 324 452.83 T
(those not returned may be destroyed.) 324 441.83 T
0 9 Q
(May Destr) 189 426.83 T
(oy:) 229.57 426.83 T
3 10 Q
(bx) 252 426.83 T
2 F
(,) 264 426.83 T
3 F
(si) 269.56 426.83 T
2 F
(,) 281.56 426.83 T
3 F
(di) 287.12 426.83 T
2 F
(,) 299.12 426.83 T
3 F
(ds) 304.68 426.83 T
2 F
(,) 316.68 426.83 T
3 F
(es) 322.24 426.83 T
2 F
( \050and unused return registers above\051.) 334.24 426.83 T
0 9 Q
(Destr) 126 410.83 T
(oyed:) 146.83 410.83 T
2 10 Q
(Nothing. \050Possibly) 180 410.83 T
3 F
(es) 267.61 410.83 T
2 F
(; see above.\051) 279.61 410.83 T
0 9 Q
(Library:) 126 394.33 T
4 10 Q
(object.def) 180 394.33 T
81 379.49 531 384.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 379.49 531 384.5 R
7 X
0 0 0 1 0 0 0 K
V
50 383.49 609.01 383.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 371.49 T
0 F
(ObjCallInstanceNoLockES) 99 371.49 T
2 10 Q
-0.15 (Invokes a message of the given object instance\325) 180 354.83 P
-0.15 (s class, \336xing up both) 394.87 354.83 P
3 F
-0.33 (ds) 496.34 354.83 P
2 F
-0.15 ( and) 508.34 354.83 P
3 F
(es) 180 343.33 T
2 F
( upon return.) 192 343.33 T
-0.17 (This routine assumes that the object block containing the receiving object is) 180 326.83 P
(already locked down and is being run by the same process. It is the) 180 315.33 T
(responsibility of the caller to ensure that this is the case.) 180 303.83 T
0 9 Q
(Pass:) 126 287.33 T
3 10 Q
(ax) 180 287.33 T
2 F
(Message to invoke.) 252 287.33 T
3 F
(cx, dx, bp) 180 275.83 T
2 F
(Other data to pass with message.) 252 275.83 T
3 F
(*ds:si) 180 264.33 T
2 F
(Instance data of object to call.) 252 264.33 T
3 F
(ds) 392.39 264.33 T
2 F
( must be pointing to an) 404.39 264.33 T
-0.53 (object block, another local memory block, or a core block. \050I.e.) 252 252.83 P
3 F
(ds) 252 241.33 T
2 F
(:0 must be the handle of the block.\051) 264 241.33 T
3 F
(es) 180 229.83 T
2 F
(Pointing to an object block, a local memory bloc, or a core) 252 229.83 T
(block. \050I.e.) 252 218.33 T
3 F
(es) 302.38 218.33 T
2 F
(:0 must be the handle of the block.\051) 314.38 218.33 T
0 9 Q
(Returns:) 126 201.83 T
3 10 Q
(CF) 180 201.83 T
2 F
(Clear if no message was called; otherwise, this \337ag is set by) 252 201.83 T
(the invoked message.) 252 190.33 T
3 F
(ax, cx, dx, bp) 180 178.83 T
2 F
(Return values set by message \050if any\051.) 252 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "272" 16
%%Page: "273" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjCallSuperNoLock) 426.54 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(273) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(ds) 180 641.33 T
2 F
-0.28 (Pointing to same object block as the) 252 641.33 P
3 F
-0.6 (ds) 418.06 641.33 P
2 F
-0.28 ( passed. \050The address) 430.06 641.33 P
(may be different since lmem block may move while locked.\051) 252 629.83 T
3 F
(es) 180 618.33 T
2 F
-0.28 (Pointing to same object block as the) 252 618.33 P
3 F
-0.6 (es) 418.06 618.33 P
2 F
-0.28 ( passed. \050The address) 430.06 618.33 P
(may be different since lmem block may move while locked.\051) 252 606.83 T
3 F
(bx, si, di) 180 595.33 T
2 F
(Unchanged.) 252 595.33 T
0 9 Q
(Message Speci\336cations:) 126 580.5 T
(Passed:) 189 566.83 T
3 10 Q
(es) 252 566.83 T
2 F
(Segment of class called.) 324 566.83 T
3 F
(*ds:si) 252 555.83 T
2 F
(Instance data of object called.) 324 555.83 T
3 F
(ds:bx) 252 544.83 T
2 F
(Instance data of object called \050=) 324 544.83 T
3 F
(*ds:si) 472.85 544.83 T
2 F
(\051.) 508.85 544.83 T
3 F
(ds:di) 252 533.83 T
2 F
(If class of message handler is in a master) 324 533.83 T
(part, this is the data for master part of) 324 522.83 T
(message.) 324 511.83 T
(Otherwise,) 368.64 511.83 T
3 F
(ds:di) 421.98 511.83 T
2 F
( =) 451.98 511.83 T
3 F
(*ds:si) 463.6 511.83 T
2 F
(.) 499.6 511.83 T
3 F
(cx, dx, bp) 252 500.83 T
2 F
(Other data.) 324 500.83 T
3 F
(ax) 252 489.83 T
2 F
(Message.) 324 489.83 T
0 9 Q
(Return:) 189 474.83 T
3 10 Q
(ax) 252 474.83 T
2 F
(,) 264 474.83 T
3 F
(cx) 269.56 474.83 T
2 F
(,) 281.56 474.83 T
3 F
( dx, bp) 284.34 474.83 T
2 F
(Return values of message. If message does) 324 463.83 T
(not return some or all of these registers,) 324 452.83 T
(those not returned may be destroyed.) 324 441.83 T
0 9 Q
(May Destr) 189 426.83 T
(oy:) 229.57 426.83 T
3 10 Q
(bx) 252 426.83 T
2 F
(,) 264 426.83 T
3 F
(si) 269.56 426.83 T
2 F
(,) 281.56 426.83 T
3 F
(di) 287.12 426.83 T
2 F
(,) 299.12 426.83 T
3 F
(ds) 304.68 426.83 T
2 F
(,) 316.68 426.83 T
3 F
(es) 322.24 426.83 T
2 F
( \050and unused return registers above\051.) 334.24 426.83 T
0 9 Q
(Destr) 126 410.83 T
(oyed:) 146.83 410.83 T
2 10 Q
(Nothing.) 180 410.83 T
0 9 Q
(Library:) 126 394.33 T
4 10 Q
(object.def) 180 394.33 T
81 379.49 531 384.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 379.49 531 384.5 R
7 X
0 0 0 1 0 0 0 K
V
50 383.49 609.01 383.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 371.49 T
0 F
(ObjCallSuperNoLock) 99 371.49 T
2 10 Q
(Invokes a message of the given object instance\325) 180 354.83 T
(s superclass.) 395.95 354.83 T
-0.17 (This routine assumes that the object block containing the receiving object is) 180 338.33 P
(already locked down and is being run by the same process. It is the) 180 326.83 T
(responsibility of the caller to ensure that this is the case.) 180 315.33 T
0 9 Q
(Pass:) 126 298.83 T
3 10 Q
(ax) 180 298.83 T
2 F
(Message to invoke.) 252 298.83 T
3 F
(cx, dx, bp) 180 287.33 T
2 F
(Other data to pass with message.) 252 287.33 T
3 F
(*ds:si) 180 275.83 T
2 F
(Instance data of object to call.) 252 275.83 T
3 F
(ds) 392.39 275.83 T
2 F
( must be pointing to an) 404.39 275.83 T
-0.53 (object block, another local memory block, or a core block. \050I.e.) 252 264.33 P
3 F
(ds) 252 252.83 T
2 F
(:0 must be the handle of the block.\051) 264 252.83 T
3 F
(es:di) 180 241.33 T
2 F
(Class to call superclass of.) 252 241.33 T
0 9 Q
(Returns:) 126 224.83 T
3 10 Q
(CF) 180 224.83 T
2 F
(Clear if no message was called; otherwise, this \337ag is set by) 252 224.83 T
(the invoked message.) 252 213.33 T
3 F
(ax, cx, dx, bp) 180 201.83 T
2 F
(Return values set by message \050if any\051.) 252 190.33 T
3 F
(ds) 180 178.83 T
2 F
-0.28 (Pointing to same object block as the) 252 178.83 P
3 F
-0.6 (ds) 418.06 178.83 P
2 F
-0.28 ( passed. \050The address) 430.06 178.83 P
(may be different since) 252 167.33 T
2 9 Q
(LM) 356.82 167.33 T
2 10 Q
(em block may move while locked.\051) 371.32 167.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "273" 17
%%Page: "274" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjCompAddChild) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(274) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(bx, si, di,) 180 641.33 T
(es) 248.78 641.33 T
2 F
(Unchanged.) 252 629.83 T
0 9 Q
(Message Speci\336cations:) 126 615 T
(Passed:) 189 601.33 T
3 10 Q
(es) 252 601.33 T
2 F
(Segment of class called.) 324 601.33 T
3 F
(*ds:si) 252 590.33 T
2 F
(Instance data of object called.) 324 590.33 T
3 F
(ds:bx) 252 579.33 T
2 F
(Instance data of object called \050=) 324 579.33 T
3 F
(*ds:si) 472.85 579.33 T
2 F
(\051.) 508.85 579.33 T
3 F
(ds:di) 252 568.33 T
2 F
(If class of message handler is in a master) 324 568.33 T
(part, this is the data for master part of) 324 557.33 T
(message.) 324 546.33 T
(Otherwise,) 368.64 546.33 T
3 F
(ds:di) 421.98 546.33 T
2 F
( =) 451.98 546.33 T
3 F
(*ds:si) 463.6 546.33 T
2 F
(.) 499.6 546.33 T
3 F
(cx, dx, bp) 252 535.33 T
2 F
(Other data useful to message.) 324 535.33 T
3 F
(ax) 252 524.33 T
2 F
(Message.) 324 524.33 T
0 9 Q
(Return:) 189 509.33 T
3 10 Q
(ax) 252 509.33 T
2 F
(,) 264 509.33 T
3 F
(cx) 269.56 509.33 T
2 F
(,) 281.56 509.33 T
3 F
( dx, bp) 284.34 509.33 T
2 F
(Return values of message. If message does) 324 498.33 T
(not return some or all of these registers,) 324 487.33 T
(those not returned may be destroyed.) 324 476.33 T
0 9 Q
(May Destr) 189 461.33 T
(oy:) 229.57 461.33 T
3 10 Q
(bx) 252 461.33 T
2 F
(,) 264 461.33 T
3 F
(si) 269.56 461.33 T
2 F
(,) 281.56 461.33 T
3 F
(di) 287.12 461.33 T
2 F
(,) 299.12 461.33 T
3 F
(ds) 304.68 461.33 T
2 F
(,) 316.68 461.33 T
3 F
(es) 322.24 461.33 T
2 F
( \050and unused return registers above\051.) 334.24 461.33 T
0 9 Q
(Destr) 126 445.33 T
(oyed:) 146.83 445.33 T
2 10 Q
(Nothing.) 180 445.33 T
0 9 Q
(Library:) 126 428.83 T
4 10 Q
(object.def) 180 428.83 T
81 413.99 531 419 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.99 531 419 R
7 X
0 0 0 1 0 0 0 K
V
50 417.99 609.01 417.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.99 T
0 F
(ObjCompAddChild) 99 405.99 T
2 10 Q
(Adds a child object to the composite \336eld of another) 180 389.33 T
(, composite object.) 416.68 389.33 T
0 9 Q
(Pass:) 126 372.83 T
2 10 Q
(*) 180 372.83 T
3 F
(ds) 185 372.83 T
2 F
(:) 197 372.83 T
3 F
(si) 199.78 372.83 T
2 F
(Instance data of composite object.) 252 372.83 T
3 F
(cx) 180 361.33 T
2 F
(:) 192 361.33 T
3 F
(dx) 194.78 361.33 T
2 F
(Object to add as child.) 252 361.33 T
3 F
(bp) 180 349.83 T
4 F
(CompChildFlags) 252 349.83 T
2 F
( to specify desired child location. Use the) 338.67 349.83 T
2 9 Q
(CCF_MARK_DIRTY) 252 338.33 T
2 10 Q
( \336eld to mark chunks as dirty) 337.99 338.33 T
(.) 473.39 338.33 T
3 F
(bx) 180 326.83 T
2 F
(Offset to master instance offset to part containing LinkPart) 252 326.83 T
(and CompPart \336elds.) 252 315.33 T
3 F
(ax) 180 303.83 T
2 F
(Offset to \336eld of type \322LinkPart\323 in instance data.) 252 303.83 T
3 F
(di) 180 292.33 T
2 F
(Offset to \336eld of type \322CompPart\323 in instance data.) 252 292.33 T
0 9 Q
(Returns:) 126 275.83 T
3 10 Q
(ds) 180 275.83 T
2 F
(Updated to point at segment of same block as on entry) 252 275.83 T
(.) 502.23 275.83 T
0 9 Q
(Destr) 126 259.33 T
(oyed:) 146.83 259.33 T
3 10 Q
(ax) 180 259.33 T
2 F
(,) 192 259.33 T
3 F
(bx) 197.56 259.33 T
2 F
(,) 209.56 259.33 T
3 F
(di) 215.12 259.33 T
2 F
(,) 227.12 259.33 T
3 F
(bp) 232.68 259.33 T
2 F
(.) 244.68 259.33 T
0 9 Q
(Library:) 126 242.83 T
4 10 Q
(metaC.def) 180 242.83 T
81 227.98 531 232.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 227.98 531 232.99 R
7 X
0 0 0 1 0 0 0 K
V
50 231.98 609.01 231.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 219.98 T
0 F
(ObjCompFindChild) 99 219.98 T
2 10 Q
(Pass a message to the next sibling of a linkable object.) 180 203.32 T
0 9 Q
(Pass:) 126 186.82 T
3 10 Q
(*ds:si) 180 186.82 T
2 F
(Object.) 252 186.82 T
3 F
(cx) 180 175.32 T
2 F
(:) 192 175.32 T
3 F
(dx) 197.56 175.32 T
2 F
-0.42 (Optr of child object, or to \336nd the) 252 175.32 P
5 F
-0.42 (n) 404.54 175.32 P
2 F
-0.42 (th child let) 410.65 175.32 P
3 F
-0.91 (cx) 462.35 175.32 P
2 F
-0.42 ( be zero and) 474.35 175.32 P
3 F
(dx) 252 163.82 T
2 F
( the number) 264 163.82 T
5 F
(n) 323.45 163.82 T
2 F
( of the child to \336nd \050\336rst child is zero\051.) 329.56 163.82 T
3 F
(ax) 180 152.32 T
2 F
(Offset to \336eld of type \322LinkPart\323 in instance data.) 252 152.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "274" 18
%%Page: "275" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjCompMoveChild) 431.22 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(275) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(bx) 180 641.33 T
2 F
(Offset to master instance offset to part containing LinkPart) 252 641.33 T
(and CompPart.) 252 629.83 T
3 F
(di) 180 618.33 T
2 F
(Offset to \336eld of type \322CompPart\323 in instance data.) 252 618.33 T
0 9 Q
(Returns:) 126 601.83 T
6 10 Q
(CF) 180 601.83 T
2 F
(Set if not found, clear otherwise.) 252 601.83 T
3 F
(bp) 180 590.33 T
2 F
-0.6 (If child found, this is the child\325) 252 590.33 P
-0.6 (s position \050\336rst child is zero\051. If) 388.94 590.33 P
(child not found, this register holds the total number of) 252 578.83 T
(children.) 252 567.33 T
3 F
(cx) 180 555.83 T
2 F
(:) 192 555.83 T
3 F
(dx) 194.78 555.83 T
2 F
(If child found,) 252 555.83 T
2 9 Q
(OD) 319.4 555.83 T
2 10 Q
( of child. If child not found and you were) 333.4 555.83 T
-0.22 (searching for an) 252 544.33 P
2 9 Q
-0.2 (OD) 328.92 544.33 P
2 10 Q
-0.22 (, then these registers will be unchanged.) 342.92 544.33 P
(If child not found and you were searching for a child by) 252 532.83 T
(position, then) 252 521.33 T
3 F
(cx) 318.12 521.33 T
2 F
( will be unchanged and) 330.12 521.33 T
3 F
(dx) 439.77 521.33 T
2 F
( will be equal to) 451.77 521.33 T
-0.2 (the passed child number minus the total number of children.) 252 509.83 P
0 9 Q
(Destr) 126 493.33 T
(oyed:) 146.83 493.33 T
2 10 Q
(Nothing.) 180 493.33 T
0 9 Q
(Library:) 126 476.83 T
4 10 Q
(metaC.def) 180 476.83 T
81 461.99 531 467 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 461.99 531 467 R
7 X
0 0 0 1 0 0 0 K
V
50 465.99 609.01 465.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 453.99 T
0 F
(ObjCompMoveChild) 99 453.99 T
2 10 Q
(This routine performs a) 180 437.33 T
2 9 Q
(MSG_MOVE_CHILD) 292.41 437.33 T
2 10 Q
( for a composite object.) 381.73 437.33 T
(This routine is used to move a child to a different location in the list of) 180 420.83 T
(children. The child is not physically moved, rather the nextSibling pointers) 180 409.33 T
-0.37 (\050and possibly the composite\325) 180 397.83 P
-0.37 (s \336rstChild pointer\051 are changed. The child to be) 307.62 397.83 P
-0.6 (moved must be a child of the composite \050or else a fatal error will be generated) 180 386.33 P
-0.63 (in the Error Checking system\051. The location to add the child is determined by) 180 374.83 P
(the \337ags and the reference child passed.) 180 363.33 T
0 9 Q
(Pass:) 126 346.83 T
3 10 Q
(*ds:si) 180 346.83 T
2 F
(Object.) 252 346.83 T
3 F
(cx) 180 335.33 T
2 F
(:) 192 335.33 T
3 F
(dx) 197.56 335.33 T
2 F
(Optr of child object.) 252 335.33 T
3 F
(ax) 180 323.83 T
2 F
-0.9 (Offset within master group instance data to \322LinkPart\323 in the) 252 323.83 P
(child.) 252 312.33 T
3 F
(bx) 180 300.83 T
2 F
(Offset of master group pointer in composite and child\325) 252 300.83 T
(s base) 499.6 300.83 T
(structure.) 252 289.33 T
3 F
(di) 180 277.83 T
2 F
-0.62 (Offset within master group instance data to CompPart in the) 252 277.83 P
(composite.) 252 266.33 T
3 F
(bp) 180 254.83 T
4 F
(CompChildOptions) 252 254.83 T
2 F
( to specify target position.) 351.63 254.83 T
0 9 Q
(Returns:) 126 238.33 T
3 10 Q
(ds) 180 238.33 T
2 F
(Updated to point at segment of same block as on entry) 252 238.33 T
(.) 502.23 238.33 T
0 9 Q
(Destr) 126 221.83 T
(oyed:) 146.83 221.83 T
3 10 Q
(ax) 180 221.83 T
2 F
(,) 192 221.83 T
3 F
( bx) 194.78 221.83 T
2 F
(,) 212.78 221.83 T
3 F
(di) 218.34 221.83 T
2 F
(.) 230.34 221.83 T
0 9 Q
(Library:) 126 205.33 T
4 10 Q
(metaC.def) 180 205.33 T
0 9 Q
(W) 126 188.83 T
(arning:) 134.51 188.83 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 188.83 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 177.33 P
(them.) 180 165.83 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "275" 19
%%Page: "276" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjCompProcessChildren) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(276) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(ObjCompPr) 99 634.99 T
(ocessChildr) 162.78 634.99 T
(en) 222.56 634.99 T
2 10 Q
(This routine processes the children of a composite object via a callback) 180 618.33 T
(routine or via several prede\336ned callback routines.) 180 606.83 T
-0.5 (The callback routine is called for each child in order with all passed registers) 180 590.33 P
(preserved except) 180 578.83 T
3 F
(bx) 260.36 578.83 T
2 F
(. The callback routine returns the carry set to end) 272.36 578.83 T
(processing at this point.) 180 567.33 T
0 9 Q
(Pass:) 126 550.83 T
3 10 Q
(*ds:si) 180 550.83 T
2 F
(Object.) 252 550.83 T
3 F
(bx) 180 539.33 T
2 F
(Offset of master group pointer in composite and child\325) 252 539.33 T
(s base) 499.6 539.33 T
(structure.) 252 527.83 T
3 F
(di) 180 516.33 T
2 F
-0.62 (Offset within master group instance data to CompPart in the) 252 516.33 P
(composite.) 252 504.83 T
3 F
(ax) 180 493.33 T
2 F
(,) 192 493.33 T
3 F
(cx) 197.56 493.33 T
2 F
(,) 209.56 493.33 T
3 F
(dx) 215.12 493.33 T
2 F
(,) 227.12 493.33 T
3 F
(bp) 232.68 493.33 T
2 F
(Parameters to pass to callback routine. If using an) 252 493.33 T
4 F
(ObjCompCallT) 252 481.83 T
(ype) 328.15 481.83 T
2 F
( instead of a custom routine, then ax is) 346.67 481.83 T
(the message to send to children.) 252 470.33 T
0 9 Q
(Pass on stack:) 126 453.83 T
2 10 Q
(\050Pushed in this order\051) 180 453.83 T
(optr) 180 442.33 T
-0.42 (Object descriptor of initial child to process \050or zero to start at) 252 442.33 P
(composite\325) 252 430.83 T
(s) 299.41 430.83 T
5 F
(n) 306.82 430.83 T
2 F
(th child, where) 312.93 430.83 T
5 F
(n) 384.97 430.83 T
2 F
( is stored in the chunk half of) 391.08 430.83 T
(the optr\051.) 252 419.33 T
(word) 180 407.83 T
(Offset to \336eld of type LinkPart in instance data.) 252 407.83 T
(fptr) 180 396.33 T
(Address of callback routine \050segment pushed \336rst\051, or if) 252 396.33 T
(segment is zero then offset is an) 252 384.83 T
4 F
(ObjCompCallT) 403.12 384.83 T
(ype) 479.27 384.83 T
2 F
(. This) 497.79 384.83 T
(\336eld will be popped off of stack on return.) 252 373.33 T
0 9 Q
(Returns:) 126 356.83 T
2 10 Q
(Callback routine popped off of stack.) 180 356.83 T
6 F
(CF) 180 345.33 T
2 F
(Set if call aborted in the middle.) 252 345.33 T
3 F
(ax) 180 333.83 T
2 F
(,) 192 333.83 T
3 F
(cx) 197.56 333.83 T
2 F
(,) 209.56 333.83 T
3 F
(dx) 215.12 333.83 T
2 F
(,) 227.12 333.83 T
3 F
(di) 232.68 333.83 T
2 F
(,) 244.68 333.83 T
3 F
(bp) 250.24 333.83 T
2 F
(Returned with callback routine\325) 265.02 333.83 T
(s changes.) 410.96 333.83 T
3 F
(ds) 180 322.33 T
2 F
(Pointing at same block \050could have moved\051.) 252 322.33 T
3 F
(es) 180 310.83 T
2 F
-0.25 (Untouched \050i.e. isn\325) 252 310.83 P
-0.25 (t \336xed up, even if it points at a block that) 340.39 310.83 P
(might have moved\051.) 252 299.33 T
0 9 Q
(Destr) 126 282.83 T
(oyed:) 146.83 282.83 T
3 10 Q
(di) 180 282.83 T
2 F
(.) 192 282.83 T
0 9 Q
(Callback Routine Speci\336cations:) 126 267.33 T
(Passed:) 189 253.33 T
2 10 Q
(*) 252 253.33 T
3 F
(ds) 257 253.33 T
2 F
(:) 269 253.33 T
3 F
(si) 271.78 253.33 T
2 F
(Child object.) 324 253.33 T
(*) 252 242.33 T
3 F
(es) 257 242.33 T
2 F
(:) 269 242.33 T
3 F
(di) 271.78 242.33 T
2 F
(Composite object.) 324 242.33 T
3 F
(ax) 252 231.33 T
2 F
(,) 264 231.33 T
3 F
(cx) 269.56 231.33 T
2 F
(,) 281.56 231.33 T
3 F
(dx) 287.12 231.33 T
2 F
(,) 299.12 231.33 T
3 F
(bp) 304.68 231.33 T
2 F
(Data.) 324 231.33 T
0 9 Q
(Return:) 189 216.33 T
6 10 Q
(CF) 252 216.33 T
2 F
(Set to end processing.) 324 216.33 T
3 F
(ax) 252 205.33 T
2 F
(,) 264 205.33 T
3 F
(cx) 269.56 205.33 T
2 F
(,) 281.56 205.33 T
3 F
(dx) 287.12 205.33 T
2 F
(,) 299.12 205.33 T
3 F
(bp) 304.68 205.33 T
2 F
(Data to send to next child.) 324 205.33 T
0 9 Q
(May Destr) 189 190.33 T
(oy:) 229.57 190.33 T
3 10 Q
(bx) 252 190.33 T
2 F
(,) 264 190.33 T
3 F
(si) 269.56 190.33 T
2 F
(,) 281.56 190.33 T
3 F
(di) 287.12 190.33 T
2 F
(,) 299.12 190.33 T
3 F
(ds) 304.68 190.33 T
2 F
(,) 316.68 190.33 T
3 F
(es) 322.24 190.33 T
2 F
(.) 334.24 190.33 T
0 9 Q
(Library:) 126 174.33 T
4 10 Q
(metaC.def) 180 174.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "276" 20
%%Page: "277" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjDecInUseCount) 439.78 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(277) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(W) 126 641.33 T
(arning:) 134.51 641.33 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 641.33 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 629.83 P
(them.) 180 618.33 T
81 603.49 531 608.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 603.49 531 608.5 R
7 X
0 0 0 1 0 0 0 K
V
50 607.49 609.01 607.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 595.49 T
0 F
(ObjCompRemoveChild) 99 595.49 T
2 10 Q
(This routine performs a) 180 578.83 T
2 9 Q
(MSG_REMOVE_CHILD) 292.41 578.83 T
2 10 Q
( for a composite object.) 394.73 578.83 T
(This routine is used to remove a child from a composite. The child to be) 180 562.33 T
(removed must be a child of the composite \050The error checking system will) 180 550.83 T
(generate a fatal error otherwise.\051. the child is not destroyed and is not sent) 180 539.33 T
(any noti\336cation that it is being removed.) 180 527.83 T
0 9 Q
(Pass:) 126 511.33 T
3 10 Q
(*ds:si) 180 511.33 T
2 F
(Object.) 252 511.33 T
3 F
(cx) 180 499.83 T
2 F
(:) 192 499.83 T
3 F
(dx) 197.56 499.83 T
2 F
(Optr of child object.) 252 499.83 T
3 F
(ax) 180 488.33 T
2 F
-0.9 (Offset within master group instance data to \322LinkPart\323 in the) 252 488.33 P
(child.) 252 476.83 T
3 F
(bx) 180 465.33 T
2 F
(Offset of master group pointer in composite and child\325) 252 465.33 T
(s base) 499.6 465.33 T
(structure.) 252 453.83 T
3 F
(di) 180 442.33 T
2 F
-0.62 (Offset within master group instance data to CompPart in the) 252 442.33 P
(composite.) 252 430.83 T
3 F
(bp) 180 419.33 T
2 F
(CompChildFlags. Set) 252 419.33 T
2 9 Q
(CCF_MARK_DIRTY) 353.13 419.33 T
2 10 Q
( to mark chunks as) 439.12 419.33 T
(dirty) 252 407.83 T
(.) 273.48 407.83 T
0 9 Q
(Returns:) 126 391.33 T
3 10 Q
(ds) 180 391.33 T
2 F
(Updated to point at segment of same block as on entry) 252 391.33 T
(.) 502.23 391.33 T
0 9 Q
(Destr) 126 374.83 T
(oyed:) 146.83 374.83 T
3 10 Q
(ax) 180 374.83 T
2 F
(,) 192 374.83 T
3 F
( bx) 194.78 374.83 T
2 F
(,) 212.78 374.83 T
3 F
(di) 218.34 374.83 T
2 F
(.) 230.34 374.83 T
0 9 Q
(Library:) 126 358.33 T
4 10 Q
(metaC.def) 180 358.33 T
0 9 Q
(W) 126 341.83 T
(arning:) 134.51 341.83 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 341.83 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 330.33 P
(them.) 180 318.83 T
81 303.98 531 308.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 303.98 531 308.99 R
7 X
0 0 0 1 0 0 0 K
V
50 307.98 609.01 307.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 295.98 T
0 F
(ObjDecInUseCount) 99 295.98 T
2 10 Q
(Decrements the in-use count for an object block, stored in the) 180 279.32 T
4 F
-0.65 (ObjLMemBlockHeader) 180 267.82 P
2 F
-0.63 ( structure at the from of an object block. The in-use) 298.52 267.82 P
(count ensures that an object block being used is not freed prematurely) 180 256.32 T
(.) 503.54 256.32 T
0 9 Q
(Pass:) 126 239.82 T
3 10 Q
(ds) 180 239.82 T
2 F
(Object block.) 252 239.82 T
3 F
(si) 180 228.32 T
2 F
(Chunk handle of object in block that is decrementing the) 252 228.32 T
(count. \050In) 252 216.82 T
2 9 Q
(EC) 299.4 216.82 T
2 10 Q
( code, this is used to keep track of counts on a) 312.4 216.82 T
(per) 252 205.32 T
(-object basis.\051) 267 205.32 T
0 9 Q
(Returns:) 126 188.82 T
2 10 Q
(Nothing.) 180 188.82 T
0 9 Q
(Destr) 126 172.32 T
(oyed:) 146.83 172.32 T
2 10 Q
(Nothing.) 180 172.32 T
0 9 Q
(Library:) 126 155.82 T
4 10 Q
(object.def) 180 155.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "277" 21
%%Page: "278" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjDecInteractibleCount) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(278) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(ObjDecInteractibleCount) 99 634.99 T
2 10 Q
(Decrements the interactible count of the passed object block. This count) 180 618.33 T
(quanti\336es the number of objects in the block that are currently interactible) 180 606.83 T
(with the user) 180 595.33 T
(.) 240.93 595.33 T
0 9 Q
(Pass:) 126 578.83 T
3 10 Q
(ds) 180 578.83 T
2 F
(Object block.) 252 578.83 T
3 F
(si) 180 567.33 T
2 F
(Chunk handle of object in block that is decrementing the) 252 567.33 T
(count. \050In) 252 555.83 T
2 9 Q
(EC) 299.4 555.83 T
2 10 Q
( code, this is used to keep track of counts on a) 312.4 555.83 T
(per) 252 544.33 T
(-object basis.\051) 267 544.33 T
0 9 Q
(Returns:) 126 527.83 T
2 10 Q
(Nothing.) 180 527.83 T
0 9 Q
(Destr) 126 511.33 T
(oyed:) 146.83 511.33 T
2 10 Q
(Nothing.) 180 511.33 T
0 9 Q
(Library:) 126 494.83 T
4 10 Q
(object.def) 180 494.83 T
81 479.98 531 484.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 479.98 531 484.99 R
7 X
0 0 0 1 0 0 0 K
V
50 483.98 609.01 483.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 471.98 T
0 F
(ObjDoRelocation) 99 471.98 T
2 10 Q
-0.38 (Relocates a single piece of data \050word or double word\051 within an object block.) 180 455.32 P
0 9 Q
(Pass:) 126 438.82 T
3 10 Q
(al) 180 438.82 T
4 F
(ObjRelocationT) 252 438.82 T
(ype) 333.14 438.82 T
2 F
(.) 351.66 438.82 T
3 F
(bx) 180 427.32 T
2 F
(Handle of block to perform relocation operation.) 252 427.32 T
3 F
(cx) 180 415.82 T
2 F
(Low word of relocation data.) 252 415.82 T
3 F
(dx) 180 404.32 T
2 F
(High word of relocation data. \050This is only used if the) 252 404.32 T
4 F
(ObjRelocationT) 252 392.82 T
(ype) 333.14 392.82 T
2 F
( is) 351.66 392.82 T
2 9 Q
(RELOC_ENTR) 365 392.82 T
(Y_POINT) 428 392.82 T
2 10 Q
(.\051) 467.92 392.82 T
0 9 Q
(Returns:) 126 376.32 T
3 10 Q
(CF) 180 376.32 T
2 F
(Set if error is encountered.) 252 376.32 T
3 F
(cx) 180 364.82 T
2 F
(Low word relocated.) 252 364.82 T
3 F
(dx) 180 353.32 T
2 F
(High word relocated \050unless) 252 353.32 T
3 F
(ObjRelocationType) 384.22 353.32 T
2 F
( was not) 486.22 353.32 T
2 9 Q
(RELOC_ENTR) 252 341.82 T
(Y_POINT) 315 341.82 T
2 10 Q
(, in which case) 354.92 341.82 T
3 F
(dx) 425.3 341.82 T
2 F
( is unchanged.\051) 437.3 341.82 T
0 9 Q
(Destr) 126 325.32 T
(oyed:) 146.83 325.32 T
2 10 Q
(Nothing.) 180 325.32 T
0 9 Q
(Library:) 126 308.82 T
4 10 Q
(object.def) 180 308.82 T
81 293.98 531 298.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 293.98 531 298.98 R
7 X
0 0 0 1 0 0 0 K
V
50 297.98 609.01 297.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 285.98 T
0 F
(ObjDoUnRelocation) 99 285.98 T
2 10 Q
(Unrelocates a single piece of data \050word or double word\051 within an object) 180 269.31 T
(block.) 180 257.81 T
0 9 Q
(Pass:) 126 241.31 T
3 10 Q
(al) 180 241.31 T
4 F
(ObjRelocationT) 252 241.31 T
(ype) 333.14 241.31 T
2 F
(.) 351.66 241.31 T
3 F
(bx) 180 229.81 T
2 F
(Handle of block to perform relocation operation.) 252 229.81 T
3 F
(cx) 180 218.31 T
2 F
(Low word of relocation data.) 252 218.31 T
3 F
(dx) 180 206.81 T
2 F
(High word of relocation data. \050This is only used if the) 252 206.81 T
4 F
(ObjRelocationT) 252 195.31 T
(ype) 333.14 195.31 T
2 F
( is) 351.66 195.31 T
2 9 Q
(RELOC_ENTR) 365 195.31 T
(Y_POINT) 428 195.31 T
2 10 Q
(.\051) 467.92 195.31 T
0 9 Q
(Returns:) 126 178.81 T
3 10 Q
(CF) 180 178.81 T
2 F
(Set if error is encountered.) 252 178.81 T
3 F
(cx) 180 167.31 T
2 F
(Low word unrelocated.) 252 167.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "278" 22
%%Page: "279" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjEnableDetach) 450.66 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(279) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(dx) 180 641.33 T
2 F
(High word unrelocated \050unless) 252 641.33 T
3 F
(ObjRelocationType) 396.44 641.33 T
2 F
( was) 498.44 641.33 T
(not) 252 629.83 T
2 9 Q
(RELOC_ENTR) 269.78 629.83 T
(Y_POINT) 332.78 629.83 T
2 10 Q
(, in which case) 372.7 629.83 T
3 F
(dx) 443.08 629.83 T
2 F
( is unchanged.\051) 455.08 629.83 T
0 9 Q
(Destr) 126 613.33 T
(oyed:) 146.83 613.33 T
2 10 Q
(Nothing.) 180 613.33 T
0 9 Q
(Library:) 126 596.83 T
4 10 Q
(object.def) 180 596.83 T
81 581.99 531 587 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 581.99 531 587 R
7 X
0 0 0 1 0 0 0 K
V
50 585.99 609.01 585.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 573.99 T
0 F
(ObjDuplicateMessage) 99 573.99 T
2 10 Q
(Duplicates an encapsulated message \050event\051, returning a copy of the event.) 180 557.33 T
0 9 Q
(Pass:) 126 540.83 T
3 10 Q
(bx) 180 540.83 T
2 F
(Message to duplicate.) 252 540.83 T
0 9 Q
(Returns:) 126 524.33 T
3 10 Q
(ax) 180 524.33 T
2 F
(Duplicate message \050event\051.) 252 524.33 T
0 9 Q
(Destr) 126 507.83 T
(oyed:) 146.83 507.83 T
2 10 Q
(Nothing.) 180 507.83 T
0 9 Q
(Library:) 126 491.33 T
4 10 Q
(object.def) 180 491.33 T
81 476.48 531 481.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 476.48 531 481.49 R
7 X
0 0 0 1 0 0 0 K
V
50 480.48 609.01 480.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 468.48 T
0 F
(ObjDuplicateResour) 99 468.48 T
(ce) 204.78 468.48 T
2 10 Q
-0.26 (Duplicates an object resource block \050and any objects and chunks within that) 180 451.82 P
(object block\051, returning the handle of the newly-created block.) 180 440.32 T
0 9 Q
(Pass:) 126 423.82 T
3 10 Q
(bx) 180 423.82 T
2 F
(Resource block handle to duplicate.) 252 423.82 T
3 F
(ax) 180 412.32 T
2 F
(Handle of geode to own block.) 252 412.32 T
(Zero to have block owned by geode running current thread.) 252 400.82 T
(-1 to copy owner from source block.) 252 389.32 T
3 F
(cx) 180 377.82 T
2 F
(Handle of thread to run new block.) 252 377.82 T
(Zero to have block run by current thread.) 252 366.32 T
(-1 to copy nature of thread from source block.) 252 354.82 T
(\050If source is process-driven, duplicated block will be) 252 343.32 T
-0.69 (process-driven. If source is ui-driven, duplicated block will be) 252 331.82 P
-0.51 (ui-driven. If source is run by anything else, that same thread) 252 320.32 P
(will run the new thread.\051) 252 308.82 T
0 9 Q
(Returns:) 126 292.32 T
3 10 Q
(bx) 180 292.32 T
2 F
(Handle of duplicated block.) 252 292.32 T
0 9 Q
(Destr) 126 275.82 T
(oyed:) 146.83 275.82 T
2 10 Q
(Nothing.) 180 275.82 T
0 9 Q
(Library:) 126 259.32 T
4 10 Q
(object.def) 180 259.32 T
81 244.48 531 249.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 244.48 531 249.48 R
7 X
0 0 0 1 0 0 0 K
V
50 248.48 609.01 248.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 236.48 T
0 F
(ObjEnableDetach) 99 236.48 T
2 10 Q
(Acknowledge detach for an object.) 180 219.81 T
0 9 Q
(Pass:) 126 203.31 T
3 10 Q
(*ds:si) 180 203.31 T
2 F
(Object.) 252 203.31 T
0 9 Q
(Returns:) 126 186.81 T
3 10 Q
(ds) 180 186.81 T
2 F
(Updated to point at segment of same block as on entry) 252 186.81 T
(.) 502.23 186.81 T
0 9 Q
(Destr) 126 170.31 T
(oyed:) 146.83 170.31 T
2 10 Q
(Nothing.) 180 170.31 T
0 9 Q
(Library:) 126 153.81 T
4 10 Q
(metaC.def) 180 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "279" 23
%%Page: "280" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjFreeChunk) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(280) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(W) 126 641.33 T
(arning:) 134.51 641.33 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 641.33 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 629.83 P
(them) 180 618.33 T
81 603.49 531 608.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 603.49 531 608.5 R
7 X
0 0 0 1 0 0 0 K
V
50 607.49 609.01 607.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 595.49 T
0 F
(ObjFr) 99 595.49 T
(eeChunk) 131.45 595.49 T
2 10 Q
-0.37 (Frees a chunk within an object block. \050Chunks within resources will remain,) 180 578.83 P
(with their size resized to zero.\051) 180 567.33 T
0 9 Q
(Pass:) 126 550.83 T
3 10 Q
(*ds:ax) 180 550.83 T
2 F
(Chunk to free.) 252 550.83 T
0 9 Q
(Returns:) 126 534.33 T
2 10 Q
(Nothing.) 180 534.33 T
0 9 Q
(Destr) 126 517.83 T
(oyed:) 146.83 517.83 T
3 10 Q
(ax) 180 517.83 T
0 9 Q
(Library:) 126 501.33 T
4 10 Q
(object.def) 180 501.33 T
81 486.48 531 491.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 486.48 531 491.49 R
7 X
0 0 0 1 0 0 0 K
V
50 490.48 609.01 490.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 478.48 T
0 F
(ObjFr) 99 478.48 T
(eeDuplicate) 131.45 478.48 T
2 10 Q
(Frees a block created by) 180 461.82 T
4 F
(ObjDuplicateResource) 294.28 461.82 T
2 F
( or saved with) 411.69 461.82 T
4 F
(ObjSaveBlock) 180 450.32 T
2 F
(.) 252.6 450.32 T
0 9 Q
(Pass:) 126 433.82 T
3 10 Q
(bx) 180 433.82 T
2 F
(Handle of block to free.) 252 433.82 T
0 9 Q
(Returns:) 126 417.32 T
2 10 Q
(Nothing.) 180 417.32 T
0 9 Q
(Destr) 126 400.82 T
(oyed:) 146.83 400.82 T
3 10 Q
(bx) 180 400.82 T
0 9 Q
(Library:) 126 384.32 T
4 10 Q
(object.def) 180 384.32 T
81 369.48 531 374.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 369.48 531 374.48 R
7 X
0 0 0 1 0 0 0 K
V
50 373.48 609.01 373.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 361.48 T
0 F
(ObjFr) 99 361.48 T
(eeMessage) 131.45 361.48 T
2 10 Q
(Frees an event handle \050and the event attached to that handle\051.) 180 344.81 T
0 9 Q
(Pass:) 126 328.31 T
3 10 Q
(bx) 180 328.31 T
2 F
(Event handle.) 252 328.31 T
0 9 Q
(Returns:) 126 311.81 T
2 10 Q
(Nothing.) 180 311.81 T
0 9 Q
(Destr) 126 295.31 T
(oyed:) 146.83 295.31 T
2 10 Q
(Nothing.) 180 295.31 T
0 9 Q
(Library:) 126 278.81 T
4 10 Q
(object.def) 180 278.81 T
81 263.97 531 268.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.97 531 268.98 R
7 X
0 0 0 1 0 0 0 K
V
50 267.97 609.01 267.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.97 T
0 F
(ObjFr) 99 255.97 T
(eeObjBlock) 131.45 255.97 T
2 10 Q
(Frees an object block. Object blocks created with) 180 239.3 T
4 F
(ObjDuplicateBlock) 406.7 239.3 T
2 F
( or) 505.41 239.3 T
4 F
(ObjSaveBlock) 180 227.8 T
2 F
( should use) 252.6 227.8 T
4 F
(ObjFreeDuplicate) 307.42 227.8 T
2 F
( instead.) 400.38 227.8 T
0 9 Q
(Pass:) 126 211.3 T
3 10 Q
(bx) 180 211.3 T
2 F
(Object block.) 252 211.3 T
0 9 Q
(Returns:) 126 194.8 T
2 10 Q
(Nothing.) 180 194.8 T
0 9 Q
(Destr) 126 178.3 T
(oyed:) 146.83 178.3 T
2 10 Q
(Nothing.) 180 178.3 T
0 9 Q
(Library:) 126 161.8 T
4 10 Q
(object.def) 180 161.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "280" 24
%%Page: "281" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjIncDetach) 473.23 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(281) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(ObjGetFlags) 99 634.99 T
2 10 Q
(Returns the) 180 618.33 T
4 F
(ObjChunkFlags) 237.96 618.33 T
2 F
( associated with an object block\325) 319.25 618.33 T
(s chunk.) 465.95 618.33 T
0 9 Q
(Pass:) 126 601.83 T
3 10 Q
(ds) 180 601.83 T
2 F
(Object block.) 252 601.83 T
3 F
(ax) 180 590.33 T
2 F
(Chunk.) 252 590.33 T
0 9 Q
(Returns:) 126 573.83 T
3 10 Q
(al) 180 573.83 T
4 F
(ObjChunkFlags) 252 573.83 T
2 F
(.) 333.29 573.83 T
3 F
(ah) 180 562.33 T
2 F
(Zero.) 252 562.33 T
0 9 Q
(Destr) 126 545.83 T
(oyed:) 146.83 545.83 T
2 10 Q
(Nothing.) 180 545.83 T
0 9 Q
(Library:) 126 529.33 T
4 10 Q
(object.def) 180 529.33 T
81 514.48 531 519.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 514.48 531 519.49 R
7 X
0 0 0 1 0 0 0 K
V
50 518.48 609.01 518.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 506.48 T
0 F
(ObjGetMessageInfo) 99 506.48 T
2 10 Q
(Returns information about an event handle.) 180 489.82 T
0 9 Q
(Pass:) 126 473.32 T
3 10 Q
(bx) 180 473.32 T
2 F
(Event handle.) 252 473.32 T
0 9 Q
(Returns:) 126 456.82 T
3 10 Q
(ax) 180 456.82 T
2 F
(Message number) 252 456.82 T
(.) 329.78 456.82 T
3 F
(cx:si) 180 445.32 T
2 F
(Destination optr) 252 445.32 T
(.) 327.38 445.32 T
3 F
(CF) 180 433.82 T
2 F
(Set if event contains stack data, clear if event contains) 252 433.82 T
(register data.) 252 422.32 T
0 9 Q
(Destr) 126 405.82 T
(oyed:) 146.83 405.82 T
2 10 Q
(Nothing.) 180 405.82 T
0 9 Q
(Library:) 126 389.32 T
4 10 Q
(object.def) 180 389.32 T
81 374.48 531 379.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 374.48 531 379.48 R
7 X
0 0 0 1 0 0 0 K
V
50 378.48 609.01 378.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 366.48 T
0 F
(ObjGotoSuperT) 99 366.48 T
(ailRecurse) 181.91 366.48 T
2 10 Q
(This is an optimized version of) 180 349.81 T
4 F
(ObjCallSuperNoLock) 324.09 349.81 T
2 F
( that only works in) 434.47 349.81 T
(the case of tail recursion.) 180 338.31 T
0 9 Q
(Pass:) 126 321.81 T
3 10 Q
(ax) 180 321.81 T
2 F
(method number to call) 252 321.81 T
3 F
(cx) 180 310.31 T
2 F
(,) 192 310.31 T
3 F
(dx) 197.56 310.31 T
2 F
(,) 209.56 310.31 T
3 F
(bp) 215.12 310.31 T
2 F
(other data to pass) 252 310.31 T
3 F
(ds) 180 298.81 T
2 F
(:*) 192 298.81 T
3 F
(si) 199.78 298.81 T
2 F
-0.06 (instance data to pass \050) 252 298.81 P
3 F
-0.12 (si) 355.32 298.81 P
2 F
-0.06 ( is lmem handle\051 or) 367.32 298.81 P
3 F
-0.12 (ds) 459.08 298.81 P
2 F
-0.06 ( = core block) 471.08 298.81 P
(of process. The) 252 287.31 T
3 F
(ds) 323.11 287.31 T
2 F
( register must point to an object block,) 335.11 287.31 T
(other local memory block, or a core block\321) 252 275.81 T
3 F
(ds) 449.61 275.81 T
2 F
(:0 must be the) 461.61 275.81 T
(handle of the block.) 252 264.31 T
3 F
(es) 180 252.81 T
2 F
(:) 192 252.81 T
3 F
(di) 194.78 252.81 T
2 F
(class to call superclass of) 252 252.81 T
0 9 Q
(Returns:) 126 236.31 T
2 10 Q
(Nothing.) 180 236.31 T
0 9 Q
(Destr) 126 219.81 T
(oyed:) 146.83 219.81 T
2 10 Q
(Nothing.) 180 219.81 T
0 9 Q
(Library:) 126 203.31 T
4 10 Q
(object.def) 180 203.31 T
81 188.47 531 193.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 188.47 531 193.48 R
7 X
0 0 0 1 0 0 0 K
V
50 192.47 609.01 192.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 180.47 T
0 F
(ObjIncDetach) 99 180.47 T
2 10 Q
(Increment the acknowledge count for a detaching object.) 180 163.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "281" 25
%%Page: "282" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjIncInUseCount) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(282) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
3 10 Q
(*ds:si) 180 641.33 T
2 F
(Object.) 252 641.33 T
0 9 Q
(Returns:) 126 624.83 T
2 10 Q
(Nothing.) 180 624.83 T
0 9 Q
(Destr) 126 608.33 T
(oyed:) 146.83 608.33 T
2 10 Q
(Nothing.) 180 608.33 T
0 9 Q
(Library:) 126 591.83 T
4 10 Q
(metaC.def) 180 591.83 T
81 576.99 531 582 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 576.99 531 582 R
7 X
0 0 0 1 0 0 0 K
V
50 580.99 609.01 580.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 568.99 T
0 F
(ObjIncInUseCount) 99 568.99 T
2 10 Q
(Increments the in-use count for an object block, stored in the) 180 552.33 T
4 F
-0.76 (ObjLMemBlockHeader) 180 540.83 P
2 F
-0.74 ( structure at the front of an object block. The in-use) 298.52 540.83 P
(count ensures that an object block being used is not freed prematurely) 180 529.33 T
(.) 503.54 529.33 T
0 9 Q
(Pass:) 126 512.83 T
3 10 Q
(ds) 180 512.83 T
2 F
(Object block.) 252 512.83 T
3 F
(si) 180 501.33 T
2 F
(Chunk handle of object in block that is incrementing the) 252 501.33 T
(count. \050In) 252 489.83 T
2 9 Q
(EC) 299.4 489.83 T
2 10 Q
( code, this is used to keep track of counts on a) 312.4 489.83 T
(per) 252 478.33 T
(-object basis.\051) 267 478.33 T
0 9 Q
(Returns:) 126 461.83 T
2 10 Q
(Nothing.) 180 461.83 T
0 9 Q
(Destr) 126 445.33 T
(oyed:) 146.83 445.33 T
2 10 Q
(Nothing.) 180 445.33 T
0 9 Q
(Library:) 126 428.83 T
4 10 Q
(object.def) 180 428.83 T
81 413.98 531 418.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.98 531 418.99 R
7 X
0 0 0 1 0 0 0 K
V
50 417.98 609.01 417.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.98 T
0 F
(ObjIncInteractibleCount) 99 405.98 T
2 10 Q
(Increments the interactible count of the passed object block. This count) 180 389.32 T
(quanti\336es the number of objects in the block that are currently interactible) 180 377.82 T
(with the user) 180 366.32 T
(.) 240.93 366.32 T
0 9 Q
(Pass:) 126 349.82 T
3 10 Q
(ds) 180 349.82 T
2 F
(Object block.) 252 349.82 T
3 F
(si) 180 338.32 T
2 F
(Chunk handle of object in block that is incrementing the) 252 338.32 T
(count. \050In) 252 326.82 T
2 9 Q
(EC) 299.4 326.82 T
2 10 Q
( code, this is used to keep track of counts on a) 312.4 326.82 T
(per) 252 315.32 T
(-object basis.\051) 267 315.32 T
0 9 Q
(Returns:) 126 298.82 T
2 10 Q
(Nothing.) 180 298.82 T
0 9 Q
(Destr) 126 282.32 T
(oyed:) 146.83 282.32 T
2 10 Q
(Nothing.) 180 282.32 T
0 9 Q
(Library:) 126 265.82 T
4 10 Q
(object.def) 180 265.82 T
81 250.98 531 255.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 250.98 531 255.98 R
7 X
0 0 0 1 0 0 0 K
V
50 254.98 609.01 254.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 242.98 T
0 F
(ObjInitDetach) 99 242.98 T
2 10 Q
(Prepare to detach an object.) 180 226.31 T
0 9 Q
(Pass:) 126 209.81 T
3 10 Q
(*ds:si) 180 209.81 T
2 F
(Object.) 252 209.81 T
3 F
(dx:bp) 180 198.31 T
2 F
(optr to receive) 252 198.31 T
2 9 Q
(MSG_MET) 320.7 198.31 T
(A_SHUTDOWN_ACK) 366.87 198.31 T
2 10 Q
(.) 459.04 198.31 T
3 F
(ax) 180 186.81 T
2 F
(Message provoking this call \050) 252 186.81 T
2 9 Q
(MSG_MET) 386.27 186.81 T
(A_DET) 432.44 186.81 T
(ACH) 462.45 186.81 T
2 10 Q
( or) 482.94 186.81 T
2 9 Q
(MSG_MET) 252 175.31 T
(A_APP_SHUTDOWN) 298.17 175.31 T
2 10 Q
(\051.) 388.85 175.31 T
3 F
(cx) 180 163.81 T
2 F
(Caller) 252 163.81 T
2 9 Q
(ID) 283.3 163.81 T
2 10 Q
(; an identi\336er token for the caller) 293.96 163.81 T
(.) 446.39 163.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "282" 26
%%Page: "283" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjInstantiate) 470.11 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(283) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Returns:) 126 641.33 T
3 10 Q
(ds) 180 641.33 T
2 F
(Updated to point at segment of same block as on entry) 252 641.33 T
(.) 502.23 641.33 T
0 9 Q
(Destr) 126 624.83 T
(oyed:) 146.83 624.83 T
2 10 Q
(Nothing.) 180 624.83 T
0 9 Q
(Library:) 126 608.33 T
4 10 Q
(metaC.def) 180 608.33 T
0 9 Q
(W) 126 591.83 T
(arning:) 134.51 591.83 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 591.83 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 580.33 P
(them) 180 568.83 T
81 553.99 531 559 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 553.99 531 559 R
7 X
0 0 0 1 0 0 0 K
V
50 557.99 609.01 557.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 545.99 T
0 F
(ObjInitializeMaster) 99 545.99 T
2 10 Q
(Initializes a master part of an object.) 180 529.33 T
0 9 Q
(Pass:) 126 512.83 T
3 10 Q
(*ds:si) 180 512.83 T
2 F
(Object.) 252 512.83 T
3 F
(es:di) 180 501.33 T
2 F
(Class of part to initialize.) 252 501.33 T
0 9 Q
(Returns:) 126 484.83 T
3 10 Q
(CF) 180 484.83 T
2 F
(Set.) 252 484.83 T
3 F
(ds) 180 473.33 T
2 F
(Possibly changed.) 252 473.33 T
0 9 Q
(Destr) 126 456.83 T
(oyed:) 146.83 456.83 T
2 10 Q
(Nothing.) 180 456.83 T
0 9 Q
(Library:) 126 440.33 T
4 10 Q
(object.def) 180 440.33 T
81 425.48 531 430.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 425.48 531 430.49 R
7 X
0 0 0 1 0 0 0 K
V
50 429.48 609.01 429.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 417.48 T
0 F
(ObjInitializePart) 99 417.48 T
2 10 Q
-0.82 (Ensures that an object is expanded, and initialized if necessary) 180 400.82 P
-0.82 (, for all master) 463.36 400.82 P
(parts down through the part passed. This routine sends) 180 389.32 T
2 9 Q
-0.89 (MSG_MET) 180 377.82 P
-0.89 (A_RESOL) 226.17 377.82 P
-0.89 (VE_V) 268.01 377.82 P
-0.89 (ARIANT_SUPERCLASS) 291.01 377.82 P
2 10 Q
-0.99 ( to any master parts above the) 394.34 377.82 P
(one passed, if that variable class had not yet been determined.) 180 366.32 T
-0.27 (This routine may resize any) 180 349.82 P
2 9 Q
-0.25 (LM) 310.69 349.82 P
2 10 Q
-0.27 (em and/or object blocks, moving them on the) 325.19 349.82 P
(heap and invalidating stored segment pointers to them.) 180 338.32 T
0 9 Q
(Pass:) 126 321.82 T
3 10 Q
(*ds:si) 180 321.82 T
2 F
(Object.) 252 321.82 T
3 F
(bx) 180 310.32 T
2 F
(Offset to the part to build.) 252 310.32 T
0 9 Q
(Returns:) 126 293.82 T
3 10 Q
(ds) 180 293.82 T
2 F
(Possibly changed.) 252 293.82 T
0 9 Q
(Destr) 126 277.32 T
(oyed:) 146.83 277.32 T
2 10 Q
(Nothing.) 180 277.32 T
0 9 Q
(Library:) 126 260.82 T
4 10 Q
(object.def) 180 260.82 T
81 245.98 531 250.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 245.98 531 250.98 R
7 X
0 0 0 1 0 0 0 K
V
50 249.98 609.01 249.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 237.98 T
0 F
(ObjInstantiate) 99 237.98 T
2 10 Q
-0.54 (Instantiates \050creates\051 an object of the passed class, allocating a chunk for the) 180 221.31 P
-0.72 (object, initializing the chunk to zeroes, \336lling in the class pointer and passing) 180 209.81 P
2 9 Q
(MSG_PROCESS_INST) 180 198.31 T
(ANTIA) 276.18 198.31 T
(TE) 305.68 198.31 T
2 10 Q
( to the object \050if it has no master classes\051.) 318.19 198.31 T
(If the object block is run by a different process, instantiation is done via a) 180 181.81 T
(remote call.) 180 170.31 T
0 9 Q
(Pass:) 126 153.81 T
3 10 Q
(es:di) 180 153.81 T
2 F
(Class to instantiate a new object.) 252 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "283" 27
%%Page: "284" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjIsClassADescendant) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(284) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(bx) 180 641.33 T
2 F
(Handle of block in which to instantiate the object.) 252 641.33 T
0 9 Q
(Returns:) 126 624.83 T
3 10 Q
(si) 180 624.83 T
2 F
(Chunk handle to the new object) 252 624.83 T
3 F
(ds) 180 613.33 T
2 F
(Updated to point at same segment as on entry) 252 613.33 T
(.) 464.26 613.33 T
0 9 Q
(Destr) 126 596.83 T
(oyed:) 146.83 596.83 T
2 10 Q
(Nothing.) 180 596.83 T
0 9 Q
(Library:) 126 580.33 T
4 10 Q
(object.def) 180 580.33 T
81 565.49 531 570.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 565.49 531 570.5 R
7 X
0 0 0 1 0 0 0 K
V
50 569.49 609.01 569.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 557.49 T
0 F
(ObjIsClassADescendant) 99 557.49 T
2 10 Q
(T) 180 540.83 T
(est whether a given class is a subclass of another speci\336ed class.) 185.75 540.83 T
0 9 Q
(Pass:) 126 524.33 T
3 10 Q
(ds:si) 180 524.33 T
2 F
(Class pointer to the potential ancestor class.) 252 524.33 T
3 F
(es:di) 180 512.83 T
2 F
(Class pointer to the potential descendant class.) 252 512.83 T
0 9 Q
(Returns:) 126 496.33 T
3 10 Q
(CF) 180 496.33 T
2 F
(Set if class in) 252 496.33 T
3 F
(es:di) 316.46 496.33 T
2 F
( is a descendant of the class in) 346.46 496.33 T
3 F
(ds:si) 489.26 496.33 T
2 F
(.) 519.26 496.33 T
(Clear otherwise.) 252 484.83 T
0 9 Q
(Destr) 126 468.33 T
(oyed:) 146.83 468.33 T
2 10 Q
(Nothing.) 180 468.33 T
0 9 Q
(Library:) 126 451.83 T
4 10 Q
(object.def) 180 451.83 T
81 436.98 531 441.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 436.98 531 441.99 R
7 X
0 0 0 1 0 0 0 K
V
50 440.98 609.01 440.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 428.98 T
0 F
(ObjIsObjectInClass) 99 428.98 T
2 10 Q
(T) 180 412.32 T
(ests whether or not an object is of a given class. If a variant class is) 185.75 412.32 T
(encountered, the object will not be grown out past that class in the search.) 180 400.82 T
-0.12 (If you wish to do a complete search past any variant classes, send the object) 180 384.32 P
2 9 Q
(MSG_MET) 180 372.82 T
(A_DUMMY) 226.17 372.82 T
2 10 Q
( \336rst.) 274.83 372.82 T
0 9 Q
(Pass:) 126 356.32 T
3 10 Q
(*ds:si) 180 356.32 T
2 F
(Object.) 252 356.32 T
3 F
(es:di) 180 344.82 T
2 F
(Class.) 252 344.82 T
0 9 Q
(Returns:) 126 328.32 T
3 10 Q
(CF) 180 328.32 T
2 F
(Set if object is in the given class.) 252 328.32 T
0 9 Q
(Destr) 126 311.82 T
(oyed:) 146.83 311.82 T
2 10 Q
(Nothing.) 180 311.82 T
0 9 Q
(Library:) 126 295.32 T
4 10 Q
(object.def) 180 295.32 T
81 280.48 531 285.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 280.48 531 285.48 R
7 X
0 0 0 1 0 0 0 K
V
50 284.48 609.01 284.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 272.48 T
0 F
(ObjLinkCallNextSibling) 99 272.48 T
2 10 Q
(Pass a message to the next sibling of a linkable object.) 180 255.81 T
0 9 Q
(Pass:) 126 239.31 T
3 10 Q
(*ds:si) 180 239.31 T
2 F
(Object.) 252 239.31 T
3 F
(ax) 180 227.81 T
2 F
(Message to call.) 252 227.81 T
3 F
(cx) 180 216.31 T
2 F
(,) 192 216.31 T
3 F
(dx) 197.56 216.31 T
2 F
(,) 209.56 216.31 T
3 F
(bp) 215.12 216.31 T
2 F
(Parameters for message.) 252 216.31 T
3 F
(bx) 180 204.81 T
2 F
(Offset to master class pointer) 252 204.81 T
(.) 387.38 204.81 T
3 F
(di) 180 193.31 T
2 F
(Offset into master part where LinkPart is.) 252 193.31 T
0 9 Q
(Returns:) 126 176.81 T
6 10 Q
(CF) 180 176.81 T
2 F
-0.23 (Clear if not method routine called; otherwise set by message) 252 176.81 P
(handler) 252 165.31 T
(.) 287.37 165.31 T
3 F
(ax) 180 153.81 T
2 F
(,) 192 153.81 T
3 F
(cx) 197.56 153.81 T
2 F
(,) 209.56 153.81 T
3 F
(dx) 215.12 153.81 T
2 F
(,) 227.12 153.81 T
3 F
(bp) 232.68 153.81 T
2 F
(Return value of message, if any) 252 153.81 T
(.) 396.46 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "284" 28
%%Page: "285" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjLinkFindParent) 437.42 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(285) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(bx) 180 641.33 T
2 F
(,) 192 641.33 T
3 F
(si) 197.56 641.33 T
2 F
(,) 209.56 641.33 T
3 F
(di) 215.12 641.33 T
2 F
(,) 227.12 641.33 T
3 F
(es) 232.68 641.33 T
2 F
(Unchanged.) 252 641.33 T
3 F
(ds) 180 629.83 T
2 F
(Updated to point at segment of same block as on entry) 252 629.83 T
(.) 502.23 629.83 T
0 9 Q
(Destr) 126 613.33 T
(oyed:) 146.83 613.33 T
2 10 Q
(Nothing.) 180 613.33 T
0 9 Q
(Library:) 126 596.83 T
4 10 Q
(metaC.def) 180 596.83 T
0 9 Q
(W) 126 580.33 T
(arning:) 134.51 580.33 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 580.33 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 568.83 P
(them.) 180 557.33 T
81 542.49 531 547.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 542.49 531 547.5 R
7 X
0 0 0 1 0 0 0 K
V
50 546.49 609.01 546.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 534.49 T
0 F
(ObjLinkCallPar) 99 534.49 T
(ent) 183.47 534.49 T
2 10 Q
(Pass a message to the parent of a linkable object.) 180 517.83 T
0 9 Q
(Pass:) 126 501.33 T
3 10 Q
(*ds:si) 180 501.33 T
2 F
(Object.) 252 501.33 T
3 F
(ax) 180 489.83 T
2 F
(Message to call.) 252 489.83 T
3 F
(cx) 180 478.33 T
2 F
(,) 192 478.33 T
3 F
(dx) 197.56 478.33 T
2 F
(,) 209.56 478.33 T
3 F
(bp) 215.12 478.33 T
2 F
(Parameters for message.) 252 478.33 T
3 F
(bx) 180 466.83 T
2 F
(Offset to master class pointer) 252 466.83 T
(.) 387.38 466.83 T
3 F
(di) 180 455.33 T
2 F
(Offset into master part where LinkPart is.) 252 455.33 T
0 9 Q
(Returns:) 126 438.83 T
6 10 Q
(CF) 180 438.83 T
2 F
-0.23 (Clear if not method routine called; otherwise set by message) 252 438.83 P
(handler) 252 427.33 T
(.) 287.37 427.33 T
3 F
(ax) 180 415.83 T
2 F
(,) 192 415.83 T
3 F
(cx) 197.56 415.83 T
2 F
(,) 209.56 415.83 T
3 F
(dx) 215.12 415.83 T
2 F
(,) 227.12 415.83 T
3 F
(bp) 232.68 415.83 T
2 F
(Return value of message, if any) 252 415.83 T
(.) 396.46 415.83 T
3 F
(bx) 180 404.33 T
2 F
(,) 192 404.33 T
3 F
(si) 197.56 404.33 T
2 F
(,) 209.56 404.33 T
3 F
(di) 215.12 404.33 T
2 F
(,) 227.12 404.33 T
3 F
(es) 232.68 404.33 T
2 F
(Unchanged.) 252 404.33 T
3 F
(ds) 180 392.83 T
2 F
(Updated to point at segment of same block as on entry) 252 392.83 T
(. the) 502.23 392.83 T
(address could be different since local memory blocks can) 252 381.33 T
(move while locked.) 252 369.83 T
0 9 Q
(Destr) 126 353.33 T
(oyed:) 146.83 353.33 T
2 10 Q
(Nothing.) 180 353.33 T
0 9 Q
(Library:) 126 336.83 T
4 10 Q
(metaC.def) 180 336.83 T
0 9 Q
(W) 126 320.33 T
(arning:) 134.51 320.33 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 320.33 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 308.83 P
(them.) 180 297.33 T
81 282.48 531 287.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 282.48 531 287.49 R
7 X
0 0 0 1 0 0 0 K
V
50 286.48 609.01 286.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 274.48 T
0 F
(ObjLinkFindPar) 99 274.48 T
(ent) 186.14 274.48 T
2 10 Q
(Pass a method to the next sibling of a linkable object.) 180 257.82 T
0 9 Q
(Pass:) 126 241.32 T
3 10 Q
(*ds:si) 180 241.32 T
2 F
(Object.) 252 241.32 T
3 F
(bx) 180 218.32 T
2 F
(Offset to master class pointer) 252 218.32 T
(.) 387.38 218.32 T
3 F
(di) 180 206.82 T
2 F
(Offset into master part where LinkPart is.) 252 206.82 T
0 9 Q
(Returns:) 126 190.32 T
3 10 Q
(bx) 180 190.32 T
6 F
(:) 192 190.32 T
3 F
(si) 198 190.32 T
2 F
(Parent object, or zero if none.) 252 190.32 T
3 F
(ds) 180 178.82 T
2 F
(Unchanged.) 252 178.82 T
0 9 Q
(Destr) 126 162.32 T
(oyed:) 146.83 162.32 T
2 10 Q
(Nothing.) 180 162.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "285" 29
%%Page: "286" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjLockObjBlock) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(286) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(metaC.def) 180 641.33 T
0 9 Q
(W) 126 624.83 T
(arning:) 134.51 624.83 T
2 10 Q
-0.75 (This routine may resize LMem or object blocks, moving them on the heap and) 180 624.83 P
-0.55 (invalidating stored segment pointers and current register or stored offsets to) 180 613.33 P
(them.) 180 601.83 T
81 586.99 531 592 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 586.99 531 592 R
7 X
0 0 0 1 0 0 0 K
V
50 590.99 609.01 590.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 578.99 T
0 F
(ObjLockObjBlock) 99 578.99 T
2 10 Q
(Locks an object block, loading in the resource if necessary) 180 562.33 T
(. If the block is an) 445.02 562.33 T
2 9 Q
(LM) 180 550.83 T
2 10 Q
(em heap but is not an object block, this routine acts like) 194.5 550.83 T
4 F
(MemLock) 455.11 550.83 T
2 F
(.) 505.85 550.83 T
0 9 Q
(Pass:) 126 534.33 T
3 10 Q
(bx) 180 534.33 T
2 F
(Handle of block.) 252 534.33 T
0 9 Q
(Returns:) 126 517.83 T
3 10 Q
(ax) 180 517.83 T
2 F
(Segment.) 252 517.83 T
0 9 Q
(Destr) 126 501.33 T
(oyed:) 146.83 501.33 T
2 10 Q
(Nothing.) 180 501.33 T
0 9 Q
(Library:) 126 484.83 T
4 10 Q
(object.def) 180 484.83 T
81 469.98 531 474.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 469.98 531 474.99 R
7 X
0 0 0 1 0 0 0 K
V
50 473.98 609.01 473.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 461.98 T
0 F
(ObjMapSavedT) 99 461.98 T
(oState) 180.58 461.98 T
2 10 Q
(Maps a saved/duplicated block to its corresponding VM block handle in the) 180 445.32 T
(process\325 state \336le.) 180 433.82 T
0 9 Q
(Pass:) 126 417.32 T
3 10 Q
(bx) 180 417.32 T
2 F
(Process handle \050or 0 for current thread\325) 252 417.32 T
(s process\051.) 433.1 417.32 T
0 9 Q
(Returns:) 126 400.82 T
3 10 Q
(CF) 180 400.82 T
2 F
(Clear if block is found. Set if no such block appears on a) 252 400.82 T
(process\325 saved block list.) 252 389.32 T
3 F
(ax) 180 377.82 T
2 9 Q
(VM) 252 377.82 T
2 10 Q
( block handle \050if block found\051.) 266.99 377.82 T
0 9 Q
(Destr) 126 361.32 T
(oyed:) 146.83 361.32 T
2 10 Q
(Nothing.) 180 361.32 T
0 9 Q
(Library:) 126 344.82 T
4 10 Q
(object.def) 180 344.82 T
81 329.98 531 334.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 329.98 531 334.98 R
7 X
0 0 0 1 0 0 0 K
V
50 333.98 609.01 333.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 321.98 T
0 F
(ObjMapStateT) 99 321.98 T
(oSaved) 175.9 321.98 T
2 10 Q
(Maps a) 180 305.31 T
2 9 Q
(VM) 216.49 305.31 T
2 10 Q
( block) 231.48 305.31 T
2 9 Q
(ID) 261.12 305.31 T
2 10 Q
( from a state \336le to the corresponding memory block) 271.79 305.31 T
(handle for a process.) 180 293.81 T
0 9 Q
(Pass:) 126 277.31 T
3 10 Q
(ax) 180 277.31 T
2 9 Q
(VM) 252 277.31 T
2 10 Q
( block handle.) 266.99 277.31 T
3 F
(bx) 180 265.81 T
2 F
(Process handle \050or 0 for current thread\325) 252 265.81 T
(s process\051.) 433.1 265.81 T
0 9 Q
(Returns:) 126 249.31 T
6 10 Q
(CF) 180 249.31 T
2 F
(Clear if block is found. Set if no such block appears on a) 252 249.31 T
(process\325 saved block list.) 252 237.81 T
3 F
(bx) 180 226.31 T
2 F
(\050If block is found\051 Memory block handle.) 252 226.31 T
0 9 Q
(Destr) 126 209.81 T
(oyed:) 146.83 209.81 T
2 10 Q
(Nothing.) 180 209.81 T
0 9 Q
(Library:) 126 193.31 T
4 10 Q
(object.def) 180 193.31 T
81 178.47 531 183.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 178.47 531 183.48 R
7 X
0 0 0 1 0 0 0 K
V
50 182.47 609.01 182.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 170.47 T
0 F
(ObjMarkDirty) 99 170.47 T
2 10 Q
(Register) 180 153.8 T
(-saving routine to mark an object dirty) 218.52 153.8 T
(.) 396.13 153.8 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "286" 30
%%Page: "287" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjMessage) 484.12 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(287) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
3 10 Q
(*ds:si) 180 641.33 T
2 F
(Chunk in object block to mark dirty) 252 641.33 T
(.) 415.54 641.33 T
0 9 Q
(Returns:) 126 624.83 T
2 10 Q
(Nothing.) 180 624.83 T
0 9 Q
(Destr) 126 608.33 T
(oyed:) 146.83 608.33 T
2 10 Q
(Nothing.) 180 608.33 T
0 9 Q
(Library:) 126 591.83 T
4 10 Q
(object.def) 180 591.83 T
81 576.99 531 582 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 576.99 531 582 R
7 X
0 0 0 1 0 0 0 K
V
50 580.99 609.01 580.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 568.99 T
0 F
(ObjMessage) 99 568.99 T
2 10 Q
(Sends a message to an object.) 180 552.33 T
0 9 Q
(Pass:) 126 535.83 T
3 10 Q
(bx:si) 180 535.83 T
2 F
-0.49 (Destination for message. In most cases, this is the optr of the) 252 535.83 P
-0.08 (object to receive the message; this destination may also be a) 252 524.33 P
-0.24 (process, in which case) 252 512.83 P
3 F
-0.51 (bx) 355.31 512.83 P
2 F
-0.24 ( = process) 367.31 512.83 P
2 9 Q
-0.21 (ID) 414.88 512.83 P
2 10 Q
-0.24 ( and) 425.55 512.83 P
3 F
-0.51 (si) 448.04 512.83 P
2 F
-0.24 ( contains other) 460.04 512.83 P
(data.) 252 501.33 T
3 F
(di) 180 489.83 T
4 F
(MessageFlags) 252 489.83 T
2 F
(. \050If) 323.47 489.83 T
2 9 Q
(MF_CUSTOM) 342.54 489.83 T
2 10 Q
( is passed, a fptr to a) 402.54 489.83 T
-0.28 (callback routine is pushed on the stack. The routine must be) 252 478.33 P
(locked in memory for the duration of the) 252 466.83 T
4 F
(ObjMessage) 441.45 466.83 T
2 F
(.\051) 503.29 466.83 T
3 F
(ax) 180 455.33 T
2 F
(Message.) 252 455.33 T
3 F
(cx) 180 443.83 T
2 F
(Event word 0.) 252 443.83 T
3 F
(dx) 180 432.33 T
2 F
(Event word 1.) 252 432.33 T
3 F
(bp) 180 420.83 T
2 F
(Event word 2.) 252 420.83 T
0 9 Q
(Returns:) 126 404.33 T
3 10 Q
(di) 180 404.33 T
2 9 Q
(MESSAGE_NO_ERROR) 252 404.33 T
2 10 Q
( if no error is encountered; otherwise) 354.66 404.33 T
4 F
(MessageError) 252 392.83 T
2 F
(.) 324.04 392.83 T
-0.4 (\050If) 180 381.33 P
2 9 Q
-0.36 (MF_CUSTOM) 193.11 381.33 P
2 10 Q
-0.4 ( was passed, the custom routine will be popped off the stack.\051) 253.12 381.33 P
(\050If) 180 369.83 T
2 9 Q
(MF_CALL) 193.51 369.83 T
2 10 Q
( was passed,) 237.51 369.83 T
3 F
(ax, cx, dx, bp,) 297.9 369.83 T
2 F
( and) 387.9 369.83 T
6 F
(CF) 410.87 369.83 T
2 F
( will contain return) 422.87 369.83 T
(values.\051) 252 358.33 T
0 9 Q
(Destr) 126 341.83 T
(oyed:) 146.83 341.83 T
2 10 Q
(Nothing.) 180 341.83 T
0 9 Q
(Message Speci\336cations:) 126 326.99 T
(Passed:) 189 313.33 T
3 10 Q
(es) 252 313.33 T
2 F
(Segment of class called.) 324 313.33 T
3 F
(*ds:si) 252 302.33 T
2 F
(Instance data of object called. \050If class is a) 324 302.33 T
(subclass of ProcessClass) 324 291.33 T
3 F
(ds) 439.38 291.33 T
2 F
( = dgroup of) 451.38 291.33 T
-0.39 (process and) 324 280.33 P
3 F
-0.84 (si) 380.07 280.33 P
2 F
-0.39 ( = other data passed by caller) 392.07 280.33 P
-0.39 (.\051) 524.89 280.33 P
3 F
(ds:bx) 252 269.33 T
2 F
(Instance data of object called \050=) 324 269.33 T
3 F
(*ds:si) 472.85 269.33 T
2 F
(\051.) 508.85 269.33 T
3 F
(ds:di) 252 258.33 T
2 F
(If the class of the message handler is in a) 324 258.33 T
(master part, this is the data for master part) 324 247.33 T
(of message.) 324 236.33 T
(Otherwise,) 379.75 236.33 T
3 F
(ds:di) 433.09 236.33 T
2 F
( =) 463.09 236.33 T
3 F
(*ds:si) 474.71 236.33 T
2 F
(.) 510.71 236.33 T
3 F
(cx, dx, bp) 252 225.33 T
2 F
(Other data useful to message.) 324 225.33 T
3 F
(ax) 252 214.33 T
2 F
(Message.) 324 214.33 T
0 9 Q
(Return:) 189 199.33 T
3 10 Q
(ax) 252 199.33 T
2 F
(,) 264 199.33 T
3 F
(cx) 269.56 199.33 T
2 F
(,) 281.56 199.33 T
3 F
( dx, bp) 284.34 199.33 T
2 F
(Return values of message. If message does) 324 188.33 T
(not return some or all of these registers,) 324 177.33 T
(those not returned may be destroyed.) 324 166.33 T
0 9 Q
(May Destr) 189 151.33 T
(oy:) 229.57 151.33 T
3 10 Q
(bx) 252 151.33 T
2 F
(,) 264 151.33 T
3 F
(si) 269.56 151.33 T
2 F
(,) 281.56 151.33 T
3 F
(di) 287.12 151.33 T
2 F
(,) 299.12 151.33 T
3 F
(ds) 304.68 151.33 T
2 F
(,) 316.68 151.33 T
3 F
(es) 322.24 151.33 T
2 F
( \050and unused return registers above\051.) 334.24 151.33 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "287" 31
%%Page: "288" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjProcBroadcastMessage) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(288) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(object.def) 180 641.33 T
81 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
50 630.49 609.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.49 T
0 F
(ObjPr) 99 618.49 T
(ocBr) 131.45 618.49 T
(oadcastMessage) 155.89 618.49 T
2 10 Q
(Broadcasts an event to all threads with event queues.) 180 601.83 T
0 9 Q
(Pass:) 126 585.33 T
3 10 Q
(bx) 180 585.33 T
2 F
(Encapsulated message \050event\051 to broadcast.) 252 585.33 T
0 9 Q
(Returns:) 126 568.83 T
2 10 Q
(Nothing.) 180 568.83 T
0 9 Q
(Destr) 126 552.33 T
(oyed:) 146.83 552.33 T
2 10 Q
(Nothing.) 180 552.33 T
0 9 Q
(Library:) 126 535.83 T
4 10 Q
(object.def) 180 535.83 T
81 520.98 531 525.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 520.98 531 525.99 R
7 X
0 0 0 1 0 0 0 K
V
50 524.98 609.01 524.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 512.98 T
0 F
(ObjRelocOrUnRelocSuper) 99 512.98 T
2 10 Q
(Relocate or unrelocate an object\325) 180 496.32 T
(s superclass structures and pointers.) 328.71 496.32 T
0 9 Q
(Pass:) 126 479.82 T
3 10 Q
(*ds:si) 180 479.82 T
2 F
(Segment:Chunk handle of the object\325) 252 479.82 T
(s instance chunk.) 421.46 479.82 T
3 F
(bp) 180 468.32 T
2 F
(Inherited variables.) 252 468.32 T
3 F
(es:di) 180 456.82 T
2 F
(Class pointer to the object\325) 252 456.82 T
(s class.) 374.05 456.82 T
0 9 Q
(Returns:) 126 440.32 T
3 10 Q
(CF) 180 440.32 T
2 F
(Set if error) 252 440.32 T
(, clear otherwise.) 301.81 440.32 T
0 9 Q
(Destr) 126 423.82 T
(oyed:) 146.83 423.82 T
3 10 Q
(ax) 180 423.82 T
2 F
(,) 192 423.82 T
3 F
(dx) 197.56 423.82 T
2 F
(,) 209.56 423.82 T
3 F
(dx) 215.12 423.82 T
0 9 Q
(Library:) 126 407.32 T
4 10 Q
(object.def) 180 407.32 T
81 392.48 531 397.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 392.48 531 397.48 R
7 X
0 0 0 1 0 0 0 K
V
50 396.48 609.01 396.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 384.48 T
0 F
(ObjResizeMaster) 99 384.48 T
2 10 Q
(Resizes a master class part of an object.) 180 367.81 T
0 9 Q
(Pass:) 126 351.31 T
3 10 Q
(*ds:si) 180 351.31 T
2 F
(Object.) 252 351.31 T
3 F
(bx) 180 339.81 T
2 F
(Offset to master part to expand.) 252 339.81 T
3 F
(ax) 180 328.31 T
2 F
(New size for master part.) 252 328.31 T
0 9 Q
(Returns:) 126 311.81 T
3 10 Q
(ds) 180 311.81 T
2 F
(Possibly changed.) 252 311.81 T
0 9 Q
(Destr) 126 295.31 T
(oyed:) 146.83 295.31 T
3 10 Q
(ax) 180 295.31 T
0 9 Q
(Library:) 126 278.81 T
4 10 Q
(object.def) 180 278.81 T
81 263.97 531 268.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 263.97 531 268.98 R
7 X
0 0 0 1 0 0 0 K
V
50 267.97 609.01 267.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 255.97 T
0 F
(ObjSaveBlock) 99 255.97 T
2 10 Q
(Sets up an) 180 239.3 T
2 9 Q
(LM) 231.68 239.3 T
2 10 Q
(em block to be saved to its owner) 246.18 239.3 T
(\325) 398.8 239.3 T
(s state \336le.) 400.47 239.3 T
0 9 Q
(Pass:) 126 222.8 T
3 10 Q
(bx) 180 222.8 T
2 F
(Handle of block to be saved. This block must be an) 252 222.8 T
2 9 Q
(LM) 487.8 222.8 T
2 10 Q
(em) 502.3 222.8 T
-0.22 (block and have) 252 211.3 P
2 9 Q
-0.2 (LMF_HAS_FLAGS) 323.22 211.3 P
2 10 Q
-0.22 ( set in its) 403.56 211.3 P
5 9 Q
-0.2 (LMBH_) 448.26 211.3 P
5 10 Q
-0.22 (\337ags) 481.26 211.3 P
2 F
-0.22 ( word) 502.92 211.3 P
(\050and contain a corresponding \337ags chunk\051.) 252 199.8 T
0 9 Q
(Returns:) 126 183.3 T
2 10 Q
(Nothing.) 180 183.3 T
0 9 Q
(Destr) 126 166.8 T
(oyed:) 146.83 166.8 T
2 10 Q
(Nothing.) 180 166.8 T
0 9 Q
(Library:) 126 150.3 T
4 10 Q
(object.def) 180 150.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "288" 32
%%Page: "289" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjSwapLockParent) 431.22 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(289) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
81 642.99 531 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 642.99 531 648 R
7 X
0 0 0 1 0 0 0 K
V
50 646.99 609.01 646.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 634.99 T
0 F
(ObjSetFlags) 99 634.99 T
2 10 Q
(Sets the object \337ags \050) 180 618.33 T
4 F
(ObjChunkFlags) 277.79 618.33 T
2 F
(\051 associated with a chunk.) 359.08 618.33 T
0 9 Q
(Pass:) 126 601.83 T
3 10 Q
(ax) 180 601.83 T
2 F
(Chunk.) 252 601.83 T
3 F
(bl) 180 590.33 T
2 F
(ObjChunkFlags to set.) 252 590.33 T
3 F
(bh) 180 578.83 T
2 F
(ObjChunkFlags to clear) 252 578.83 T
(.) 361.46 578.83 T
3 F
(ds) 180 567.33 T
2 F
(Object block.) 252 567.33 T
0 9 Q
(Returns:) 126 550.83 T
2 10 Q
(Nothing.) 180 550.83 T
0 9 Q
(Destr) 126 534.33 T
(oyed:) 146.83 534.33 T
2 10 Q
(Nothing.) 180 534.33 T
0 9 Q
(Library:) 126 517.83 T
4 10 Q
(object.def) 180 517.83 T
81 502.98 531 507.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 502.98 531 507.99 R
7 X
0 0 0 1 0 0 0 K
V
50 506.98 609.01 506.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 494.98 T
0 F
(ObjSwapLock) 99 494.98 T
2 10 Q
(This utility routine locks a new object block and saves the old object\325) 180 478.32 T
(s block) 494.87 478.32 T
(handle. This is useful when using) 180 466.82 T
4 F
(ObjCallInstanceNoLock) 338.17 466.82 T
2 F
( is much more) 462.24 466.82 T
-0.69 (desirable than using) 180 455.32 P
4 F
-0.71 (ObjMessage) 275.55 455.32 P
2 F
-0.69 ( for repeated operations; for example, if an) 337.39 455.32 P
(object needs to send 5 messages to an object, it might be faster to lock that) 180 443.82 T
(object and use) 180 432.32 T
4 F
(ObjCallInstanceNoLock) 248.34 432.32 T
2 F
(.) 372.41 432.32 T
0 9 Q
(Pass:) 126 415.82 T
3 10 Q
(ds) 180 415.82 T
2 F
(Segment of object 1.) 252 415.82 T
3 F
(bx) 180 404.32 T
2 F
(Block handle of object 2.) 252 404.32 T
0 9 Q
(Returns:) 126 387.82 T
3 10 Q
(ds) 180 387.82 T
2 F
(Segment of object 2 \050now locked, if different from object 1\051.) 252 387.82 T
3 F
(bx) 180 376.32 T
2 F
(Block handle of object 1.) 252 376.32 T
0 9 Q
(Destr) 126 359.82 T
(oyed:) 146.83 359.82 T
2 10 Q
(Nothing. Flags preserved.) 180 359.82 T
0 9 Q
(Library:) 126 343.32 T
4 10 Q
(object.def) 180 343.32 T
81 328.48 531 333.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 328.48 531 333.48 R
7 X
0 0 0 1 0 0 0 K
V
50 332.48 609.01 332.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 320.48 T
0 F
(ObjSwapLockPar) 99 320.48 T
(ent) 191.46 320.48 T
2 10 Q
(This utility routine locks the parent of an object and saves the child\325) 180 303.81 T
(s block) 493.93 303.81 T
(handle. This is useful when using) 180 292.31 T
4 F
(ObjCallInstanceNoLock) 338.17 292.31 T
2 F
( is much more) 462.24 292.31 T
-0.69 (desirable than using) 180 280.81 P
4 F
-0.71 (ObjMessage) 275.55 280.81 P
2 F
-0.69 ( for repeated operations; for example, if an) 337.39 280.81 P
(object needs to send 5 messages to its parent, it might be faster to lock the) 180 269.31 T
(parent object and use) 180 257.81 T
4 F
(ObjCallInstanceNoLock) 281.86 257.81 T
2 F
(.) 405.93 257.81 T
0 9 Q
(Pass:) 126 241.31 T
3 10 Q
(*ds:si) 180 241.31 T
2 F
(Object.) 252 241.31 T
3 F
(bx) 180 229.81 T
2 F
(Master offset.) 252 229.81 T
3 F
(di) 180 218.31 T
2 F
(Offset to linkage part.) 252 218.31 T
0 9 Q
(Returns:) 126 201.81 T
3 10 Q
(CF) 180 201.81 T
2 F
(Set if successful; otherwise, object is not linked to a parent.) 252 201.81 T
3 F
(*ds:si) 180 190.31 T
2 F
(Instance data of parent object. \050) 252 190.31 T
3 F
(si) 398.49 190.31 T
2 F
( = 0 if no parent is) 410.49 190.31 T
(encountered.\051) 252 178.81 T
3 F
(bx) 180 167.31 T
2 F
(Block handle of original object, which is still locked.) 252 167.31 T
0 9 Q
(Destr) 126 150.81 T
(oyed:) 146.83 150.81 T
2 10 Q
(Nothing.) 180 150.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "289" 33
%%Page: "290" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjSwapUnlock) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(290) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(object.def) 180 641.33 T
81 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
50 630.49 609.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.49 T
0 F
(ObjSwapUnlock) 99 618.49 T
2 10 Q
(This utility routine swaps a locked object block, unlocking it in the process,) 180 601.83 T
(with a new object block.) 180 590.33 T
0 9 Q
(Pass:) 126 573.83 T
3 10 Q
(ds) 180 573.83 T
2 F
(Segment of object 2.) 252 573.83 T
3 F
(bx) 180 562.33 T
2 F
(Block handle of object 1 \050which must be locked\051.) 252 562.33 T
0 9 Q
(Returns:) 126 545.83 T
3 10 Q
(ds) 180 545.83 T
2 F
(Segment of object 1.) 252 545.83 T
3 F
(bx) 180 534.33 T
2 F
(Block handle of object 2.) 252 534.33 T
0 9 Q
(Destr) 126 517.83 T
(oyed:) 146.83 517.83 T
2 10 Q
(Nothing. Flags preserved.) 180 517.83 T
0 9 Q
(Library:) 126 501.33 T
4 10 Q
(object.def) 180 501.33 T
81 486.48 531 491.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 486.48 531 491.49 R
7 X
0 0 0 1 0 0 0 K
V
50 490.48 609.01 490.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 478.48 T
0 F
(ObjT) 99 478.48 T
(estIfObjBlockRunByCurThr) 125.9 478.48 T
(ead) 274.37 478.48 T
2 10 Q
(Determines if the current running thread owns a given object block.) 180 461.82 T
0 9 Q
(Pass:) 126 445.32 T
3 10 Q
(bx) 180 445.32 T
2 F
(Handle of object block. \050If) 252 445.32 T
3 F
(bx) 372.56 445.32 T
2 F
( is a) 384.56 445.32 T
2 9 Q
(VM) 406.24 445.32 T
2 10 Q
( block, then the thread) 421.23 445.32 T
(which runs the) 252 433.82 T
2 9 Q
(VM) 324.22 433.82 T
2 10 Q
( \336le is checked.\051) 339.21 433.82 T
0 9 Q
(Returns:) 126 417.32 T
6 10 Q
(ZF) 180 417.32 T
2 F
-0.75 (Set if current thread is the same thread speci\336ed running the) 252 417.32 P
(object block. The block may be locked, unlocked, and sent) 252 405.82 T
-0.71 (messages using any routines available by the current thread.) 252 394.32 P
(Clear if the block is inaccessible by the current thread.) 252 382.82 T
(\050) 252 371.32 T
4 F
(ObjMessage) 255.33 371.32 T
2 F
( must be called to communicate with any) 317.17 371.32 T
(objects in the block.\051) 252 359.82 T
0 9 Q
(Destr) 126 343.32 T
(oyed:) 146.83 343.32 T
2 10 Q
(Nothing.) 180 343.32 T
0 9 Q
(Library:) 126 326.82 T
4 10 Q
(object.def) 180 326.82 T
81 311.98 531 316.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 311.98 531 316.98 R
7 X
0 0 0 1 0 0 0 K
V
50 315.98 609.01 315.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 303.98 T
0 F
(ObjV) 99 303.98 T
(arAddData) 126.56 303.98 T
2 10 Q
-0.53 (Adds a new vardata entry or replaces the existing data within an entry \050with) 180 287.31 P
(zeroed data\051. This routine returns a pointer to the extra data section of the) 180 275.81 T
(vardata entry in order to allow you to initialize this data immediately) 180 264.31 T
(.) 500.62 264.31 T
0 9 Q
(Pass:) 126 247.81 T
3 10 Q
(*ds:si) 180 247.81 T
2 F
(Object to add vardata entry \050or replace an entry\051.) 252 247.81 T
3 F
(ax) 180 236.31 T
2 F
-0.5 (V) 252 236.31 P
-0.5 (ardata type \050with) 258.3 236.31 P
2 9 Q
-0.45 (VDF_SA) 340.14 236.31 P
-0.45 (VE_TO_ST) 375.31 236.31 P
-0.45 (A) 421.49 236.31 P
-0.45 (TE) 427.49 236.31 P
2 10 Q
-0.5 ( set correctly by the) 439.99 236.31 P
(caller\051.) 252 224.81 T
3 F
(cx) 180 213.31 T
2 F
(Size of extra data. \050) 252 213.31 T
3 F
(cx) 341.83 213.31 T
2 F
( = zero if no extra data\051.) 353.83 213.31 T
0 9 Q
(Returns:) 126 196.81 T
3 10 Q
(ds:bx) 180 196.81 T
2 F
-0.55 (\050If object has extra data, pointer to the extra data; otherwise,) 252 196.81 P
(an opaque pointer which may be passed to) 252 185.31 T
4 F
(ObjV) 252 173.81 T
(arDeleteDataAt) 277 173.81 T
2 F
(.\051) 358.29 173.81 T
(Object is marked dirty even if vardata entry \336eld previously existed.) 180 162.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "290" 34
%%Page: "291" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjVarDeleteDataAt) 430.49 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(291) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(object.def) 180 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(ObjV) 99 601.99 T
(arCopyDataRange) 126.56 601.99 T
2 10 Q
-0.41 (Copies a group of vardata entries \050matching the speci\336ed range values\051 from) 180 585.33 P
(one object into another object. Y) 180 573.83 T
(ou can pass an identical start and end) 326.68 573.83 T
(vardata type value to copy a single vardata entry from one object another) 180 562.33 T
(.) 518 562.33 T
0 9 Q
(Pass:) 126 545.83 T
3 10 Q
(*ds:si) 180 545.83 T
2 F
(Source object to copy vardata entries from.) 252 545.83 T
3 F
(*es:bp) 180 534.33 T
2 F
(Destination object to copy vardata entries into.) 252 534.33 T
3 F
(cx) 180 522.83 T
2 F
(Smallest vardata value to copy \050inclusive\051. Any) 252 522.83 T
4 F
(V) 252 511.33 T
(arDataFlags) 258.67 511.33 T
2 F
( are ignored.) 322.74 511.33 T
3 F
(dx) 180 499.83 T
2 F
(Largest vardata value to copy \050inclusive\051. Any) 252 499.83 T
4 F
(V) 252 488.33 T
(arDataFlags) 258.67 488.33 T
2 F
( are ignored.) 322.74 488.33 T
0 9 Q
(Returns:) 126 471.83 T
3 10 Q
(ds, es) 180 471.83 T
2 F
(Updated segment addresses of blocks.) 252 471.83 T
(Destination object is marked dirty if any entries are copied.) 180 460.33 T
0 9 Q
(Destr) 126 443.83 T
(oyed:) 146.83 443.83 T
2 10 Q
(Nothing.) 180 443.83 T
0 9 Q
(Library:) 126 427.33 T
4 10 Q
(object.def) 180 427.33 T
81 412.48 531 417.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 412.48 531 417.49 R
7 X
0 0 0 1 0 0 0 K
V
50 416.48 609.01 416.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 404.48 T
0 F
(ObjV) 99 404.48 T
(arDeleteData) 126.56 404.48 T
2 10 Q
(Deletes a speci\336ed vardata entry \336eld and associated extra data \050if any\051) 180 387.82 T
(within an object.) 180 376.32 T
0 9 Q
(Pass:) 126 359.82 T
3 10 Q
(*ds:si) 180 359.82 T
2 F
(Object to delete vardata entry from.) 252 359.82 T
3 F
(ax) 180 348.32 T
2 F
(V) 252 348.32 T
(ardata type to delete. \050) 258.3 348.32 T
4 F
(V) 362.95 348.32 T
(arDataFlags) 369.62 348.32 T
2 F
( ignored.\051) 433.69 348.32 T
0 9 Q
(Returns:) 126 331.82 T
3 10 Q
(CF) 180 331.82 T
2 F
(Set if vardata entry not found, else clear if data deleted.) 252 331.82 T
3 F
(ds) 180 320.32 T
2 F
(Updated segment of object block.) 252 320.32 T
(Object is marked dirty \050if data \336eld is found and deleted\051.) 180 308.82 T
0 9 Q
(Destr) 126 292.32 T
(oyed:) 146.83 292.32 T
2 10 Q
(Nothing.) 180 292.32 T
0 9 Q
(Library:) 126 275.82 T
4 10 Q
(object.def) 180 275.82 T
81 260.98 531 265.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 260.98 531 265.98 R
7 X
0 0 0 1 0 0 0 K
V
50 264.98 609.01 264.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 252.98 T
0 F
(ObjV) 99 252.98 T
(arDeleteDataAt) 126.56 252.98 T
2 10 Q
(Deletes a vardata entry \336eld \050speci\336ed at by the passed opaque pointer\051.) 180 236.31 T
0 9 Q
(Pass:) 126 219.81 T
3 10 Q
(*ds:si) 180 219.81 T
2 F
(Object to delete vardata entry from.) 252 219.81 T
3 F
(ds:bx) 180 208.31 T
2 F
(Opaque pointer as returned by) 252 208.31 T
4 F
(ObjV) 396.83 208.31 T
(arAddData) 421.83 208.31 T
2 F
(,) 478.87 208.31 T
4 F
(ObjV) 252 196.81 T
(arFindData) 277 196.81 T
2 F
(, or) 337.55 196.81 T
4 F
(ObjV) 355.33 196.81 T
(arDerefData) 380.33 196.81 T
2 F
(.) 445.33 196.81 T
0 9 Q
(Returns:) 126 180.31 T
2 10 Q
(Object is marked dirty) 180 180.31 T
(.) 282.79 180.31 T
0 9 Q
(Destr) 126 163.81 T
(oyed:) 146.83 163.81 T
2 10 Q
(Nothing.) 180 163.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "291" 35
%%Page: "292" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ObjVarDeleteDataRange) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(292) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(object.def) 180 641.33 T
81 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
50 630.49 609.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.49 T
0 F
(ObjV) 99 618.49 T
(arDeleteDataRange) 126.56 618.49 T
2 10 Q
-0.57 (Deletes a group of vardata entries \050matching the speci\336ed range values\051. Y) 180 601.83 P
-0.57 (ou) 517.68 601.83 P
(may also specify that you only wish to delete vardata entries that are not) 180 590.33 T
(marked) 180 578.83 T
2 9 Q
(VDF_SA) 218.34 578.83 T
(VE_TO_ST) 253.51 578.83 T
(A) 299.69 578.83 T
(TE) 305.69 578.83 T
2 10 Q
(.) 318.2 578.83 T
0 9 Q
(Pass:) 126 562.33 T
3 10 Q
(*ds:si) 180 562.33 T
2 F
(Object to delete vardata entries from.) 252 562.33 T
3 F
(cx) 180 550.83 T
2 F
(Smallest vardata value to delete \050inclusive\051. Any) 252 550.83 T
4 F
(V) 252 539.33 T
(arDataFlags) 258.67 539.33 T
2 F
( are ignored.) 322.74 539.33 T
3 F
(dx) 180 527.83 T
2 F
(Largest vardata value to delete \050inclusive\051. Any) 252 527.83 T
4 F
(V) 252 516.33 T
(arDataFlags) 258.67 516.33 T
2 F
( are ignored.) 322.74 516.33 T
3 F
(bp) 180 504.83 T
2 F
-0.84 (Zero to delete all data entries within the passed range values;) 252 504.83 P
(if non-zero, routine will only delete vardata entries that are) 252 493.33 T
(both within the passed range and are not marked) 252 481.83 T
2 9 Q
(VDF_SA) 252 470.33 T
(VE_TO_ST) 287.17 470.33 T
(A) 333.35 470.33 T
(TE) 339.35 470.33 T
2 10 Q
(.) 351.86 470.33 T
0 9 Q
(Returns:) 126 453.83 T
2 10 Q
(Object is marked dirty if any vardata entries are deleted.) 180 453.83 T
0 9 Q
(Destr) 126 437.33 T
(oyed:) 146.83 437.33 T
2 10 Q
(Nothing.) 180 437.33 T
0 9 Q
(Library:) 126 420.83 T
4 10 Q
(object.def) 180 420.83 T
81 405.98 531 410.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 405.98 531 410.99 R
7 X
0 0 0 1 0 0 0 K
V
50 409.98 609.01 409.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 397.98 T
0 F
(ObjV) 99 397.98 T
(arDer) 126.56 397.98 T
(efData) 157 397.98 T
2 10 Q
-0.34 (Returns either a pointer to a vardata entry\325) 180 381.32 P
-0.34 (s extra data section or an opaque) 377.99 381.32 P
-0.43 (pointer to the vardata entry type passed. \050If there is no extra data, it returns) 180 369.82 P
-0.34 (a pointer to the data entry + offset) 180 358.32 P
5 9 Q
-0.31 (VDI_) 339.08 358.32 P
5 10 Q
-0.34 (extraData) 360.58 358.32 P
2 F
-0.34 (. This is used as an opaque) 406.5 358.32 P
(pointer in such routines as ObjV) 180 346.82 T
(arDeleteDataAt\051) 328.9 346.82 T
0 9 Q
(Pass:) 126 330.32 T
3 10 Q
(*ds:si) 180 330.32 T
2 F
(Object in which to return opaque pointer to vardata data) 252 330.32 T
(section.) 252 318.82 T
3 F
(ax) 180 307.32 T
2 F
(V) 252 307.32 T
(ardata type. \050) 258.3 307.32 T
4 F
(V) 320.72 307.32 T
(arDataFlags) 327.39 307.32 T
2 F
( ignored.\051) 391.46 307.32 T
0 9 Q
(Returns:) 126 290.82 T
3 10 Q
(ds:bx) 180 290.82 T
2 F
-0.45 (If entry contains extra data, pointer to the extra data section) 252 290.82 P
(of the vardata entry; otherwise,) 252 279.32 T
3 F
(ds:bx) 400.72 279.32 T
2 F
( is an opaque pointer) 430.72 279.32 T
(which may be passed to) 252 267.82 T
4 F
(ObjV) 364.06 267.82 T
(arDeleteDataAt) 389.06 267.82 T
2 F
(.) 470.35 267.82 T
0 9 Q
(Destr) 126 251.32 T
(oyed:) 146.83 251.32 T
2 10 Q
(Nothing.) 180 251.32 T
0 9 Q
(Library:) 126 234.82 T
4 10 Q
(object.def) 180 234.82 T
81 219.98 531 224.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 219.98 531 224.98 R
7 X
0 0 0 1 0 0 0 K
V
50 223.98 609.01 223.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 211.98 T
0 F
(ObjV) 99 211.98 T
(arFindData) 126.56 211.98 T
2 10 Q
(Searches an object\325) 180 195.31 T
(s vardata section for a given vardata type. If found, this) 267.23 195.31 T
(routine returns a pointer to the appropriate vardata section \050or an opaque) 180 183.81 T
(pointer if there is no extra data; this opaque pointer should be used before) 180 172.31 T
(performing any) 180 160.81 T
2 9 Q
(LM) 254.07 160.81 T
2 10 Q
(em operations on the block containing the object.\051) 268.57 160.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "292" 36
%%Page: "293" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserAddDependencies) 411.01 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(293) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Pass:) 126 641.33 T
3 10 Q
(*ds:si) 180 641.33 T
2 F
-0.09 (Object to search vardata section for the particular data type.) 252 641.33 P
3 F
(ax) 180 629.83 T
2 F
(V) 252 629.83 T
(ardata type. \050) 258.3 629.83 T
4 F
(V) 320.72 629.83 T
(arDataFlags) 327.39 629.83 T
2 F
( ignored.\051) 391.46 629.83 T
0 9 Q
(Returns:) 126 613.33 T
3 10 Q
(CF) 180 613.33 T
2 F
(Set if vardata type is found; otherwise clear) 252 613.33 T
(.) 452.95 613.33 T
3 F
(ds:bx) 180 601.83 T
2 F
(If vardata entry contains extra data,) 252 601.83 T
3 F
(ds:bx) 423.69 601.83 T
2 F
( returns) 453.69 601.83 T
(containing a pointer to the extra data; otherwise,) 252 590.33 T
3 F
( ds:bx) 478.7 590.33 T
2 F
-0.84 (returns containing an opaque pointer which may be passed to) 252 578.83 P
4 F
-0.46 (ObjV) 252 567.33 P
-0.46 (arDeleteDataAt) 277 567.33 P
2 F
-0.45 (. \050This opaque pointer actually points) 358.29 567.33 P
(to the location of the vardata entry +) 252 555.83 T
5 9 Q
(VDI_) 424.75 555.83 T
5 10 Q
(extraOffset) 446.25 555.83 T
2 F
(.\051) 496.23 555.83 T
0 9 Q
(Destr) 126 539.33 T
(oyed:) 146.83 539.33 T
2 10 Q
(Nothing.) 180 539.33 T
0 9 Q
(Library:) 126 522.83 T
4 10 Q
(object.def) 180 522.83 T
81 507.99 531 513 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 507.99 531 513 R
7 X
0 0 0 1 0 0 0 K
V
50 511.99 609.01 511.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 499.99 T
0 F
(ObjV) 99 499.99 T
(arScanData) 126.56 499.99 T
2 10 Q
-0.81 (Scans an object\325) 180 483.33 P
-0.81 (s vardata and calls all pertaining routines listed in a \322vardata) 251.16 483.33 P
(handler\323 table.) 180 471.83 T
0 9 Q
(Pass:) 126 455.33 T
3 10 Q
(*ds:si) 180 455.33 T
2 F
(Object to scan vardata \336elds.) 252 455.33 T
3 F
(ax) 180 443.83 T
2 F
(Number of) 252 443.83 T
4 F
(V) 304.04 443.83 T
(arDataHandler) 310.71 443.83 T
2 F
( structures in table.) 389.6 443.83 T
3 F
(es:di) 180 432.33 T
2 F
-0.85 (Pointer to a list of) 252 432.33 P
4 F
-0.88 (V) 333.49 432.33 P
-0.88 (arDataHandler) 340.16 432.33 P
2 F
-0.85 ( structures. The handler) 419.05 432.33 P
(routines must be far routines in the same segment as the) 252 420.83 T
(handler table.) 252 409.33 T
3 F
(cx, dx, bp) 180 397.83 T
2 F
(Data to pass to vardata handlers.) 252 397.83 T
0 9 Q
(Returns:) 126 381.33 T
3 10 Q
(cx, dx, bp) 180 381.33 T
2 F
(Data returned after passing through handlers.) 252 381.33 T
3 F
(ds) 180 369.83 T
2 F
(Updated segment address of object.) 252 369.83 T
0 9 Q
(Destr) 126 353.33 T
(oyed:) 146.83 353.33 T
2 10 Q
(Nothing.) 180 353.33 T
0 9 Q
(V) 126 338.49 T
(arData Handler Routine Speci\336cations:) 131.67 338.49 T
(Passed:) 189 324.83 T
3 10 Q
(*ds:si) 252 324.83 T
2 F
(Object.) 324 324.83 T
3 F
(ds:bx) 252 313.83 T
2 F
(Extra data of vardata entry in question;) 324 313.83 T
(otherwise an opaque pointer to the start of) 324 302.83 T
(vardata entry + size vardata entry) 324 291.83 T
(.) 482.3 291.83 T
3 F
(ax) 252 280.83 T
2 F
(V) 324 280.83 T
(ardata type.) 330.3 280.83 T
3 F
(cx, dx, bp) 252 269.83 T
2 F
(Data to pass to) 324 269.83 T
4 F
(V) 396.25 269.83 T
(arDataHandler) 402.92 269.83 T
2 F
(.) 481.07 269.83 T
0 9 Q
(Return:) 189 254.83 T
3 10 Q
(ds) 252 254.83 T
2 F
(Updated segment for object.) 324 254.83 T
3 F
(cx, dx, bp) 252 243.83 T
2 F
(Returned data from) 324 243.83 T
4 F
(V) 418.26 243.83 T
(arDataHandler) 424.93 243.83 T
2 F
(.) 503.08 243.83 T
0 9 Q
(May Destr) 189 228.83 T
(oy:) 229.57 228.83 T
3 10 Q
(ax, bx, si, di, es) 252 228.83 T
0 9 Q
(Library:) 126 212.83 T
4 10 Q
(object.def) 180 212.83 T
81 197.98 531 202.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 197.98 531 202.99 R
7 X
0 0 0 1 0 0 0 K
V
50 201.98 609.01 201.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 189.98 T
0 F
(ParserAddDependencies) 99 189.98 T
2 10 Q
(Adds a set of dependencies from a dependency block.) 180 173.32 T
0 9 Q
(Pass:) 126 156.82 T
3 10 Q
(bx) 180 156.82 T
2 F
(Handle of the dependency block.) 252 156.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "293" 37
%%Page: "294" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserAddSingleDependency) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(294) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(ss:bp) 180 641.33 T
2 F
(Pointer to) 252 641.33 T
4 F
(DependencyParameters) 300.71 641.33 T
2 F
( on the stack.) 425.53 641.33 T
0 9 Q
(Returns:) 126 624.83 T
3 10 Q
(CF) 180 624.83 T
2 F
(Set on error; otherwise clear) 252 624.83 T
(.) 382.37 624.83 T
3 F
(al) 180 613.33 T
2 F
(\050If) 252 613.33 T
6 F
(CF) 265.51 613.33 T
2 F
( is set\051: Error code.) 277.51 613.33 T
0 9 Q
(Destr) 126 596.83 T
(oyed:) 146.83 596.83 T
3 10 Q
(ax) 180 596.83 T
0 9 Q
(Library:) 126 580.33 T
4 10 Q
(parse.def) 180 580.33 T
81 565.49 531 570.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 565.49 531 570.5 R
7 X
0 0 0 1 0 0 0 K
V
50 569.49 609.01 569.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 557.49 T
0 F
(ParserAddSingleDependency) 99 557.49 T
2 10 Q
(Adds a single dependency to a cell.) 180 540.83 T
0 9 Q
(Pass:) 126 524.33 T
3 10 Q
(ds:si) 180 524.33 T
4 F
(CellFunctionParameters) 252 524.33 T
2 F
(.) 380.52 524.33 T
3 F
(ax) 180 512.83 T
2 F
(Row of cell to add dependency to.) 252 512.83 T
3 F
(cx) 180 501.33 T
2 F
(Column of cell to add dependency to.) 252 501.33 T
3 F
(ss:bp) 180 489.83 T
4 F
(DependencyParameters) 252 489.83 T
2 F
(.) 376.82 489.83 T
0 9 Q
(Returns:) 126 473.33 T
3 10 Q
(CF) 180 473.33 T
2 F
(Set on error; otherwise clear) 252 473.33 T
(.) 382.37 473.33 T
3 F
(al) 180 461.83 T
2 F
(\050If) 252 461.83 T
6 F
(CF) 265.51 461.83 T
2 F
( is set\051: Error code.) 277.51 461.83 T
0 9 Q
(Destr) 126 445.33 T
(oyed:) 146.83 445.33 T
3 10 Q
(ax) 180 445.33 T
0 9 Q
(Library:) 126 428.83 T
4 10 Q
(parse.def) 180 428.83 T
81 413.98 531 418.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 413.98 531 418.99 R
7 X
0 0 0 1 0 0 0 K
V
50 417.98 609.01 417.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 405.98 T
0 F
(ParserErr) 99 405.98 T
(orMessage) 151.43 405.98 T
2 10 Q
(Returns a text-based error message string, when passed a) 180 389.32 T
4 F
(ParserScannerEvaluatorError) 180 377.82 T
2 F
(.) 338.17 377.82 T
0 9 Q
(Pass:) 126 361.32 T
3 10 Q
(ds:si) 180 361.32 T
2 F
(Buffer to place the error message string.) 252 361.32 T
3 F
(al) 180 349.82 T
2 F
(ParserScannerEvaluatorError) 252 349.82 T
0 9 Q
(Returns:) 126 333.32 T
3 10 Q
(cx) 180 333.32 T
2 F
(Length of the error message \050not including the null\051.) 252 333.32 T
0 9 Q
(Destr) 126 316.82 T
(oyed:) 146.83 316.82 T
2 10 Q
(Nothing.) 180 316.82 T
0 9 Q
(Library:) 126 300.32 T
4 10 Q
(parse.def) 180 300.32 T
81 285.48 531 290.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 285.48 531 290.48 R
7 X
0 0 0 1 0 0 0 K
V
50 289.48 609.01 289.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 277.48 T
0 F
(ParserEvalExpr) 99 277.48 T
(ession) 182.11 277.48 T
2 10 Q
(Evaluates a stream of parser tokens.) 180 260.81 T
0 9 Q
(Pass:) 126 244.31 T
3 10 Q
(ds:si) 180 244.31 T
2 F
(Pointer to parsed expression.) 252 244.31 T
3 F
(es:di) 180 232.81 T
2 F
-0.3 (Pointer to the base of a scratch buffer) 252 232.81 P
-0.3 (. This buffer consists of) 422.68 232.81 P
(two stacks. The argument stack grows down from the top of) 252 221.31 T
-0.41 (the buffer and the operator/function stack grows up from the) 252 209.81 P
-0.76 (bottom of the buffer) 252 198.31 P
-0.76 (. The two stacks should not collide. If they) 340.64 198.31 P
(do, an error is reported.) 252 186.81 T
3 F
(cx) 180 175.31 T
2 F
-0.7 (Size of scratch buffer) 252 175.31 P
-0.7 (. This size must be large enough to avoid) 346.36 175.31 P
(collisions between the argument stack and the) 252 163.81 T
(operator/function stack. \050See above.\051) 252 152.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "294" 38
%%Page: "295" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserEvalPopNArgs) 428.91 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(295) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(ss:bp) 180 641.33 T
2 F
(Pointer to) 252 641.33 T
4 F
(EvalParameters) 300.71 641.33 T
2 F
( structure on the stack.) 384.6 641.33 T
0 9 Q
(Returns:) 126 624.83 T
3 10 Q
(CF) 180 624.83 T
2 F
(Set if a \322serious\323 error occurs. If a non-serious error occurs,) 252 624.83 T
(then the evaluator argument stack will contain the error) 252 613.33 T
(token.) 252 601.83 T
3 F
(al) 180 590.33 T
2 F
(\050If) 252 590.33 T
6 F
(CF) 265.51 590.33 T
2 F
( is set\051:) 277.51 590.33 T
4 F
( ParserScannerEvalError) 310.48 590.33 T
2 F
( code.) 443.74 590.33 T
3 F
(es:bx) 180 578.83 T
2 F
(Pointer to the evaluated stream.) 252 578.83 T
3 F
(ss) 180 567.33 T
2 F
(:[) 192 567.33 T
3 F
(bp) 198.11 567.33 T
2 F
(].) 210.11 567.33 T
5 9 Q
(EP) 216.22 567.33 T
5 10 Q
(_depHandle) 228.72 567.33 T
2 F
-0.24 (If generating dependencies, then this holds the block handle) 252 555.83 P
-0.48 (of the locked block containing the list of cells, ranges, names,) 252 544.33 P
(and functions that the expression depends on.) 252 532.83 T
0 9 Q
(Destr) 126 516.33 T
(oyed:) 146.83 516.33 T
3 10 Q
(ah) 180 516.33 T
0 9 Q
(Library:) 126 499.83 T
4 10 Q
(parse.def) 180 499.83 T
81 484.99 531 490 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 484.99 531 490 R
7 X
0 0 0 1 0 0 0 K
V
50 488.99 609.01 488.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 476.99 T
0 F
(ParserEvalFor) 99 476.99 T
(eachArg) 174.77 476.99 T
2 10 Q
(Calls a callback routine for each argument within an argument stack.) 180 460.33 T
0 9 Q
(Pass:) 126 443.83 T
3 10 Q
(es:bx) 180 443.83 T
2 F
(Pointer to argument stack.) 252 443.83 T
3 F
(cx) 180 432.33 T
2 F
(Number of arguments.) 252 432.33 T
3 F
(ss:bp) 180 420.83 T
2 F
(Pointer to) 252 420.83 T
4 F
(EvalParameters) 300.71 420.83 T
2 F
( structure on the stack.) 384.6 420.83 T
3 F
(ax:si) 180 409.33 T
2 F
(Pointer to callback routine.) 252 409.33 T
0 9 Q
(Returns:) 126 392.83 T
3 10 Q
(CF) 180 392.83 T
2 F
(Set on error; otherwise clear) 252 392.83 T
(.) 382.37 392.83 T
3 F
(al) 180 381.33 T
2 F
(\050If) 252 381.33 T
6 F
(CF) 265.51 381.33 T
2 F
( is set\051: Error code.) 277.51 381.33 T
0 9 Q
(Destr) 126 364.83 T
(oyed:) 146.83 364.83 T
3 10 Q
(ax) 180 364.83 T
0 9 Q
(Callback Routine Speci\336cations:) 126 349.33 T
(Passed:) 189 335.33 T
2 10 Q
(es:bx) 252 335.33 T
(Pointer to argument on the stack.) 324 335.33 T
(cx) 252 324.33 T
(Argument number \050zero-based\051.) 324 324.33 T
0 9 Q
(Return:) 189 309.33 T
3 10 Q
(CF) 252 309.33 T
2 F
(Set on error) 324 309.33 T
(.) 378.44 309.33 T
(\050If) 252 298.33 T
6 F
(CF) 265.51 298.33 T
2 F
( is) 277.51 298.33 T
(set\051:) 294.07 298.33 T
3 F
(al) 324 298.33 T
2 F
( = error code.) 336 298.33 T
0 9 Q
(Library:) 126 282.33 T
4 10 Q
(parse.def) 180 282.33 T
81 267.48 531 272.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 267.48 531 272.49 R
7 X
0 0 0 1 0 0 0 K
V
50 271.48 609.01 271.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 259.48 T
0 F
(ParserEvalPopNArgs) 99 259.48 T
2 10 Q
-0.04 (Pops a number of arguments off the argument stack. It is important to note) 180 242.82 P
(that this routine does not perform any sort of destructive acts to the) 180 231.32 T
(argument stack.) 180 219.82 T
0 9 Q
(Pass:) 126 203.32 T
3 10 Q
(es:bx) 180 203.32 T
2 F
(Pointer to top of argument stack.) 252 203.32 T
3 F
(ss:bp) 180 191.82 T
2 F
(Pointer to) 252 191.82 T
4 F
(EvalParameters) 300.71 191.82 T
2 F
( structure on the stack.) 384.6 191.82 T
3 F
(cx) 180 180.32 T
2 F
(Number of arguments to pop off.) 252 180.32 T
0 9 Q
(Returns:) 126 163.82 T
3 10 Q
(es:bx) 180 163.82 T
2 F
(Pointer to new top of argument stack.) 252 163.82 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "295" 39
%%Page: "296" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserEvalPropagateEvalError) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(296) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(parse.def) 180 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(ParserEvalPr) 99 601.99 T
(opagateEvalErr) 168.77 601.99 T
(or) 250.55 601.99 T
2 10 Q
(Propagates an error up the argument stack.) 180 585.33 T
0 9 Q
(Pass:) 126 568.83 T
3 10 Q
(es:bx) 180 568.83 T
2 F
(Pointer to the argument stack.) 252 568.83 T
3 F
(es:di) 180 557.33 T
2 F
(Pointer to the operator stack.) 252 557.33 T
3 F
(cx) 180 545.83 T
2 F
(Number of arguments to pop.) 252 545.83 T
3 F
(al) 180 534.33 T
2 F
(Error code to put on the stack.) 252 534.33 T
0 9 Q
(Returns:) 126 517.83 T
3 10 Q
(CF) 180 517.83 T
2 F
(Set on error; otherwise clear) 252 517.83 T
(.) 382.37 517.83 T
3 F
(es:bx) 180 506.33 T
2 F
(New pointer to top of argument stack.) 252 506.33 T
3 F
(al) 180 494.83 T
2 F
(Error code.) 252 494.83 T
0 9 Q
(Destr) 126 478.33 T
(oyed:) 146.83 478.33 T
3 10 Q
(ax) 180 478.33 T
2 F
(.) 192 478.33 T
0 9 Q
(Library:) 126 461.83 T
4 10 Q
(parse.def) 180 461.83 T
81 446.98 531 451.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 446.98 531 451.99 R
7 X
0 0 0 1 0 0 0 K
V
50 450.98 609.01 450.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 438.98 T
0 F
(ParserEvalPushArgument) 99 438.98 T
2 10 Q
(Pushes an argument onto the argument stack.) 180 422.32 T
0 9 Q
(Pass:) 126 405.82 T
3 10 Q
(es:bx) 180 405.82 T
2 F
(Pointer to the argument stack.) 252 405.82 T
3 F
(es:di) 180 394.32 T
2 F
(Pointer to the operator stack.) 252 394.32 T
3 F
(al) 180 382.82 T
2 F
(T) 252 382.82 T
(ype of item \050) 258.15 382.82 T
4 F
(EvalArgumentT) 315.19 382.82 T
(ype) 397.44 382.82 T
2 F
(\051.) 415.96 382.82 T
3 F
(cx) 180 371.32 T
2 F
(Additional size to allocate beyond which would normally be) 252 371.32 T
(assumed for this item.) 252 359.82 T
3 F
(ss:bp) 180 348.32 T
2 F
(Pointer to) 252 348.32 T
4 F
(EvalParameters) 300.71 348.32 T
2 F
( structure on the stack.) 384.6 348.32 T
0 9 Q
(Returns:) 126 331.82 T
3 10 Q
(CF) 180 331.82 T
2 F
(Set on error; otherwise clear) 252 331.82 T
(.) 382.37 331.82 T
3 F
(es:bx) 180 320.32 T
2 F
(New pointer to top of argument stack. \050This points to the) 252 320.32 T
(allocated item.\051) 252 308.82 T
3 F
(al) 180 297.32 T
2 F
(\050If) 252 297.32 T
6 F
(CF) 265.51 297.32 T
2 F
( set\051: Error code.) 277.51 297.32 T
0 9 Q
(Destr) 126 280.82 T
(oyed:) 146.83 280.82 T
2 10 Q
(Nothing.) 180 280.82 T
0 9 Q
(Library:) 126 264.32 T
4 10 Q
(parse.def) 180 264.32 T
81 249.48 531 254.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 249.48 531 254.48 R
7 X
0 0 0 1 0 0 0 K
V
50 253.48 609.01 253.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 241.48 T
0 F
(ParserEvalPushCellRefer) 99 241.48 T
(ence) 230.76 241.48 T
2 10 Q
(Pushes a cell reference on the argument stack.) 180 224.81 T
0 9 Q
(Pass:) 126 208.31 T
3 10 Q
(ds:si) 180 208.31 T
2 F
(Pointer to) 252 208.31 T
4 F
(ParseT) 300.71 208.31 T
(okenCellData) 336.64 208.31 T
2 F
(.) 407.38 208.31 T
3 F
(es:di) 180 196.81 T
2 F
(Pointer to top of operator stack.) 252 196.81 T
3 F
(es:bx) 180 185.31 T
2 F
(Pointer to top of argument stack.) 252 185.31 T
3 F
(ss:bp) 180 173.81 T
2 F
(Pointer to) 252 173.81 T
4 F
(EvalParameters) 300.71 173.81 T
2 F
( structure on the stack.) 384.6 173.81 T
0 9 Q
(Returns:) 126 157.31 T
3 10 Q
(CF) 180 157.31 T
2 F
(Set on error; otherwise clear) 252 157.31 T
(.) 382.37 157.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "296" 40
%%Page: "297" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserEvalPushRange) 423.45 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(297) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(si) 180 641.33 T
2 F
-0.43 (Pointer past the) 252 641.33 P
4 F
-0.44 (ParserT) 328.13 641.33 P
-0.44 (okenCellData) 369.25 641.33 P
2 F
-0.43 (.the allocated item.\051) 439.99 641.33 P
3 F
(al) 180 629.83 T
2 F
(\050If) 252 629.83 T
6 F
(CF) 265.51 629.83 T
2 F
( set\051: Error code.) 277.51 629.83 T
0 9 Q
(Destr) 126 613.33 T
(oyed:) 146.83 613.33 T
3 10 Q
(ax) 180 613.33 T
0 9 Q
(Library:) 126 596.83 T
4 10 Q
(parse.def) 180 596.83 T
81 581.99 531 587 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 581.99 531 587 R
7 X
0 0 0 1 0 0 0 K
V
50 585.99 609.01 585.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 573.99 T
0 F
(ParserEvalPushNumericConstant) 99 573.99 T
2 10 Q
(Pushes a numeric constant on the argument stack.) 180 557.33 T
0 9 Q
(Pass:) 126 540.83 T
3 10 Q
(ds:si) 180 540.83 T
2 F
(Pointer to) 252 540.83 T
4 F
(ParseT) 300.71 540.83 T
(okenNumberData) 336.64 540.83 T
2 F
(.) 429.04 540.83 T
3 F
(es:di) 180 529.33 T
2 F
(Pointer to top of operator stack.) 252 529.33 T
3 F
(es:bx) 180 517.83 T
2 F
(Pointer to top of argument stack.) 252 517.83 T
3 F
(ss:bp) 180 506.33 T
2 F
(Pointer to) 252 506.33 T
4 F
(EvalParameters) 300.71 506.33 T
2 F
( structure on the stack.) 384.6 506.33 T
0 9 Q
(Returns:) 126 489.83 T
3 10 Q
(CF) 180 489.83 T
2 F
(Set on error; otherwise clear) 252 489.83 T
(.) 382.37 489.83 T
3 F
(si) 180 478.33 T
2 F
(Pointer past the) 252 478.33 T
4 F
(ParserT) 329.42 478.33 T
(okenNumberData) 370.54 478.33 T
2 F
(.the allocated) 462.94 478.33 T
(item.\051) 252 466.83 T
3 F
(al) 180 455.33 T
2 F
(\050If) 252 455.33 T
6 F
(CF) 265.51 455.33 T
2 F
( set\051: Error code.) 277.51 455.33 T
0 9 Q
(Destr) 126 438.83 T
(oyed:) 146.83 438.83 T
3 10 Q
(ax) 180 438.83 T
0 9 Q
(Library:) 126 422.33 T
4 10 Q
(parse.def) 180 422.33 T
81 407.48 531 412.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 407.48 531 412.49 R
7 X
0 0 0 1 0 0 0 K
V
50 411.48 609.01 411.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 399.48 T
0 F
(ParserEvalPushNumericConstantW) 99 399.48 T
(ord) 284.33 399.48 T
2 10 Q
(Pushes a word-length numeric constant onto the argument stack.) 180 382.82 T
0 9 Q
(Returns:) 126 366.32 T
3 10 Q
(es:di) 180 366.32 T
2 F
(Pointer to top of operator stack.) 252 366.32 T
3 F
(es:bx) 180 354.82 T
2 F
(Pointer to top of argument stack.) 252 354.82 T
3 F
(ss:bp) 180 343.32 T
2 F
(Pointer to) 252 343.32 T
4 F
(EvalParameters) 300.71 343.32 T
2 F
( structure on the stack.) 384.6 343.32 T
3 F
(cx) 180 331.82 T
2 F
(W) 252 331.82 T
(ord value to push.) 261.26 331.82 T
0 9 Q
(Returns:) 126 315.32 T
3 10 Q
(es:bx) 180 315.32 T
2 F
(New argument stack.) 252 315.32 T
0 9 Q
(Destr) 126 298.82 T
(oyed:) 146.83 298.82 T
2 10 Q
(Nothing.) 180 298.82 T
0 9 Q
(Library:) 126 282.32 T
4 10 Q
(parse.def) 180 282.32 T
81 267.48 531 272.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 267.48 531 272.48 R
7 X
0 0 0 1 0 0 0 K
V
50 271.48 609.01 271.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 259.48 T
0 F
(ParserEvalPushRange) 99 259.48 T
2 10 Q
(Pushes a range on the argument stack.) 180 242.81 T
0 9 Q
(Pass:) 126 226.31 T
3 10 Q
(ds:si) 180 226.31 T
2 F
(Pointer to) 252 226.31 T
4 F
(EvalRangeData) 300.71 226.31 T
2 F
(.) 381.81 226.31 T
3 F
(es:di) 180 214.81 T
2 F
(Pointer to top of operator stack.) 252 214.81 T
3 F
(es:bx) 180 203.31 T
2 F
(Pointer to top of argument stack.) 252 203.31 T
3 F
(ss:bp) 180 191.81 T
2 F
(Pointer to) 252 191.81 T
4 F
(EvalParameters) 300.71 191.81 T
2 F
( structure on the stack.) 384.6 191.81 T
0 9 Q
(Returns:) 126 175.31 T
3 10 Q
(CF) 180 175.31 T
2 F
(Set on error; otherwise clear) 252 175.31 T
(.) 382.37 175.31 T
3 F
(al) 180 163.81 T
2 F
(\050If) 252 163.81 T
6 F
(CF) 265.51 163.81 T
2 F
( set\051: Error code.) 277.51 163.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "297" 41
%%Page: "298" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserEvalPushStringConstant) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(298) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
3 10 Q
(ax) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(parse.def) 180 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(ParserEvalPushStringConstant) 99 601.99 T
2 10 Q
(Pushes a string constant on the argument stack.) 180 585.33 T
0 9 Q
(Pass:) 126 568.83 T
3 10 Q
(ds:si) 180 568.83 T
2 F
(Pointer to string data.) 252 568.83 T
3 F
(cx) 180 557.33 T
2 F
(Size of the string.) 252 557.33 T
3 F
(es:di) 180 545.83 T
2 F
(Pointer to top of operator stack.) 252 545.83 T
3 F
(es:bx) 180 534.33 T
2 F
(Pointer to top of argument stack.) 252 534.33 T
3 F
(ss:bp) 180 522.83 T
2 F
(Pointer to) 252 522.83 T
4 F
(EvalParameters) 300.71 522.83 T
2 F
( structure on the stack.) 384.6 522.83 T
0 9 Q
(Returns:) 126 506.33 T
3 10 Q
(CF) 180 506.33 T
2 F
(Set on error; otherwise clear) 252 506.33 T
(.) 382.37 506.33 T
3 F
(al) 180 494.83 T
2 F
(\050If) 252 494.83 T
6 F
(CF) 265.51 494.83 T
2 F
( set\051: Error code.) 277.51 494.83 T
0 9 Q
(Destr) 126 478.33 T
(oyed:) 146.83 478.33 T
3 10 Q
(ax) 180 478.33 T
0 9 Q
(Library:) 126 461.83 T
4 10 Q
(parse.def) 180 461.83 T
81 446.98 531 451.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 446.98 531 451.99 R
7 X
0 0 0 1 0 0 0 K
V
50 450.98 609.01 450.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 438.98 T
0 F
(ParserEvalRangeIntersection) 99 438.98 T
2 10 Q
(Implements the range intersection operator on two passed ranges.) 180 422.32 T
0 9 Q
(Pass:) 126 405.82 T
3 10 Q
(ds:si) 180 405.82 T
2 F
(Pointer to \336rst range. This range must contain absolute) 252 405.82 T
(values \050i.e. $A$1\051.) 252 394.32 T
3 F
(es:di) 180 382.82 T
2 F
(Pointer to second range. This range must also contain) 252 382.82 T
(absolute values \050i.e. $A$1\051.) 252 371.32 T
0 9 Q
(Returns:) 126 354.82 T
3 10 Q
(es:di) 180 354.82 T
2 F
(Intersection of the two ranges, in absolute values.) 252 354.82 T
3 F
(CF) 180 343.32 T
2 F
(Set on error) 252 343.32 T
(.) 306.44 343.32 T
3 F
(al) 180 331.82 T
2 F
(\050If) 252 331.82 T
6 F
(CF) 265.51 331.82 T
2 F
( is set\051: Error code. \050This is always) 277.51 331.82 T
2 9 Q
(PSEE_ROW_OUT_OF_RANGE) 252 320.32 T
2 10 Q
( or) 384.17 320.32 T
2 9 Q
(PSEE_COLUMN_OUT_OF_RANGE) 252 308.82 T
2 10 Q
(.\051) 404.51 308.82 T
0 9 Q
(Destr) 126 292.32 T
(oyed:) 146.83 292.32 T
3 10 Q
(ax) 180 292.32 T
0 9 Q
(Library:) 126 275.82 T
4 10 Q
(parse.def) 180 275.82 T
81 260.98 531 265.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 260.98 531 265.98 R
7 X
0 0 0 1 0 0 0 K
V
50 264.98 609.01 264.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 252.98 T
0 F
(ParserFor) 99 252.98 T
(eachPr) 151.43 252.98 T
(ecedent) 187.2 252.98 T
2 10 Q
(Calls a routine for each entry within a precedent list. \050Precedents are the) 180 236.31 T
(actual cells that an expression depends on.\051) 180 224.81 T
0 9 Q
(Pass:) 126 208.31 T
3 10 Q
(bx) 180 208.31 T
2 F
(Block.) 252 208.31 T
3 F
(di:dx) 180 196.81 T
2 F
(Callback routine.) 252 196.81 T
0 9 Q
(Returns:) 126 180.31 T
3 10 Q
(CF) 180 180.31 T
2 F
(Set on error; otherwise clear) 252 180.31 T
(.) 382.37 180.31 T
3 F
(al) 180 168.81 T
2 F
(\050If) 252 168.81 T
6 F
(CF) 265.51 168.81 T
2 F
( is set\051: Error code.) 277.51 168.81 T
0 9 Q
(Destr) 126 152.31 T
(oyed:) 146.83 152.31 T
3 10 Q
(ax) 180 152.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "298" 42
%%Page: "299" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserForeachToken) 431.24 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(299) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Callback Routine Speci\336cations:) 126 641.33 T
(Passed:) 189 627.33 T
3 10 Q
(cx, ds, si, bp) 252 627.33 T
2 F
(Same as passed in.) 324 616.33 T
3 F
(dl) 252 605.33 T
2 F
(T) 324 605.33 T
(ype of precedent.) 330.15 605.33 T
3 F
(es:di) 252 594.33 T
2 F
(Pointer to the precedent data.) 324 594.33 T
0 9 Q
(Return:) 189 579.33 T
3 10 Q
(CF) 252 579.33 T
2 F
(Set to abort continuation.) 324 579.33 T
3 F
(al) 252 568.33 T
2 F
(\050If) 324 568.33 T
6 F
(CF) 337.51 568.33 T
2 F
( is set\051: Error code.) 349.51 568.33 T
0 9 Q
(May Destr) 189 553.33 T
(oy:) 229.57 553.33 T
2 10 Q
(Nothing.) 252 553.33 T
0 9 Q
(Library:) 126 537.33 T
4 10 Q
(parse.def) 180 537.33 T
81 522.49 531 527.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 522.49 531 527.5 R
7 X
0 0 0 1 0 0 0 K
V
50 526.49 609.01 526.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 514.49 T
0 F
(ParserFor) 99 514.49 T
(eachRefer) 151.43 514.49 T
(ence) 203.18 514.49 T
2 10 Q
(Calls a routine for each reference within the given expression. \050References) 180 497.83 T
(are the cells that are referred to in the expression; this may be either a cell) 180 486.33 T
(reference or a name.\051) 180 474.83 T
0 9 Q
(Pass:) 126 458.33 T
3 10 Q
(es:di) 180 458.33 T
2 F
(Pointer to the expression.) 252 458.33 T
3 F
(cx:dx) 180 446.83 T
2 F
(Callback routine.) 252 446.83 T
3 F
(ss:bp) 180 435.33 T
2 F
(Arguments to the callback routine.) 252 435.33 T
3 F
(ds:si) 180 423.83 T
2 F
(Other arguments to the callback routine.) 252 423.83 T
0 9 Q
(Returns:) 126 407.33 T
2 10 Q
(Nothing.) 180 407.33 T
0 9 Q
(Destr) 126 390.83 T
(oyed:) 146.83 390.83 T
2 10 Q
(Nothing.) 180 390.83 T
0 9 Q
(Callback Routine Speci\336cations:) 126 375.33 T
(Passed:) 189 361.33 T
3 10 Q
(es:di) 252 361.33 T
2 F
(Pointer to the cell reference.) 324 361.33 T
3 F
(ss:bp) 252 350.33 T
2 F
(Passed parameters.) 324 350.33 T
3 F
(ds:si) 252 339.33 T
2 F
(Other passed parameters.) 324 339.33 T
3 F
(al) 252 328.33 T
2 F
(T) 324 328.33 T
(ype of reference:) 330.15 328.33 T
2 9 Q
(P) 324 317.33 T
(ARSER_TOKEN_CELL) 329.34 317.33 T
(P) 324 306.33 T
(ARSER_TOKEN_NAME) 329.34 306.33 T
0 F
(Return:) 189 291.33 T
2 10 Q
(Nothing.) 252 291.33 T
0 9 Q
(May Destr) 189 276.33 T
(oy:) 229.57 276.33 T
2 10 Q
(Nothing.) 252 276.33 T
0 9 Q
(Library:) 126 260.33 T
4 10 Q
(parse.def) 180 260.33 T
81 245.48 531 250.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 245.48 531 250.49 R
7 X
0 0 0 1 0 0 0 K
V
50 249.48 609.01 249.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 237.48 T
0 F
(ParserFor) 99 237.48 T
(eachT) 151.43 237.48 T
(oken) 181.66 237.48 T
2 10 Q
(Calls a routine for each token within the given expression. \050A token is a) 180 220.82 T
(distinct, separate element within an expression; e.g. a number) 180 209.32 T
(, operator) 467.45 209.32 T
(,) 511.34 209.32 T
(function, etc.\051) 180 197.82 T
0 9 Q
(Pass:) 126 181.32 T
3 10 Q
(es:di) 180 181.32 T
2 F
(Pointer to the expression.) 252 181.32 T
3 F
(cx:dx) 180 169.82 T
2 F
(Callback routine.) 252 169.82 T
3 F
(ss:bp) 180 158.32 T
2 F
(Arguments to the callback routine.) 252 158.32 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "299" 43
%%Page: "300" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserFormatCellReference) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(300) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(ds:si) 180 641.33 T
2 F
(Other arguments to the callback routine.) 252 641.33 T
0 9 Q
(Returns:) 126 624.83 T
2 10 Q
(Nothing.) 180 624.83 T
0 9 Q
(Destr) 126 608.33 T
(oyed:) 146.83 608.33 T
2 10 Q
(Nothing.) 180 608.33 T
0 9 Q
(Callback Routine Speci\336cations:) 126 592.83 T
(Passed:) 189 578.83 T
3 10 Q
(es:di) 252 578.83 T
2 F
(Pointer to the cell reference.) 324 578.83 T
3 F
(ss:bp) 252 567.83 T
2 F
(Passed parameters.) 324 567.83 T
3 F
(ds:si) 252 556.83 T
2 F
(Other passed parameters.) 324 556.83 T
3 F
(al) 252 545.83 T
2 F
(T) 324 545.83 T
(ype of reference:) 330.15 545.83 T
2 9 Q
(P) 324 534.83 T
(ARSER_TOKEN_CELL) 329.34 534.83 T
(P) 324 523.83 T
(ARSER_TOKEN_NAME) 329.34 523.83 T
0 F
(Return:) 189 508.83 T
2 10 Q
(Nothing.) 252 508.83 T
0 9 Q
(May Destr) 189 493.83 T
(oy:) 229.57 493.83 T
2 10 Q
(Nothing.) 252 493.83 T
0 9 Q
(Library:) 126 477.83 T
4 10 Q
(parse.def) 180 477.83 T
81 462.99 531 468 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 462.99 531 468 R
7 X
0 0 0 1 0 0 0 K
V
50 466.99 609.01 466.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 454.99 T
0 F
(ParserFormatCellRefer) 99 454.99 T
(ence) 220.73 454.99 T
2 10 Q
(Formats a single cell reference of the form) 180 438.33 T
2 9 Q
(AB123) 377.78 438.33 T
2 10 Q
(.) 405.79 438.33 T
0 9 Q
(Pass:) 126 421.83 T
3 10 Q
(ax) 180 421.83 T
2 F
(Row of cell.) 252 421.83 T
3 F
(cx) 180 410.33 T
2 F
(Column of cell.) 252 410.33 T
3 F
(es:di) 180 398.83 T
2 F
(Pointer to buffer \050) 252 398.83 T
2 9 Q
(MAX_CELL_REF_SIZE) 334.59 398.83 T
2 10 Q
( or larger\051.) 434.75 398.83 T
0 9 Q
(Returns:) 126 382.33 T
3 10 Q
(es:di) 180 382.33 T
2 F
(String \050null-terminated\051.) 252 382.33 T
3 F
(cx) 180 370.83 T
2 F
(Length of string \050without null-terminator\051.) 252 370.83 T
0 9 Q
(Destr) 126 354.33 T
(oyed:) 146.83 354.33 T
2 10 Q
(Nothing.) 180 354.33 T
0 9 Q
(Library:) 126 337.83 T
4 10 Q
(parse.def) 180 337.83 T
81 322.98 531 327.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 322.98 531 327.99 R
7 X
0 0 0 1 0 0 0 K
V
50 326.98 609.01 326.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 314.98 T
0 F
(ParserFormatColumnRefer) 99 314.98 T
(ence) 241.4 314.98 T
2 10 Q
(Formats a column reference in the form \322) 180 298.32 T
2 9 Q
(AB) 370.37 298.32 T
2 10 Q
(.\323) 383.37 298.32 T
0 9 Q
(Pass:) 126 281.82 T
3 10 Q
(ax) 180 281.82 T
2 F
(Column number \050zero-based\051 to format.) 252 281.82 T
3 F
(es:di) 180 270.32 T
2 F
(Pointer to buffer to place text.) 252 270.32 T
3 F
(cx) 180 258.82 T
2 F
(Size of buffer) 252 258.82 T
(.) 312.18 258.82 T
0 9 Q
(Returns:) 126 242.32 T
2 10 Q
(Nothing.) 180 242.32 T
0 9 Q
(Destr) 126 225.82 T
(oyed:) 146.83 225.82 T
2 10 Q
(Nothing.) 180 225.82 T
0 9 Q
(Library:) 126 209.32 T
4 10 Q
(parse.def) 180 209.32 T
81 194.48 531 199.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 194.48 531 199.48 R
7 X
0 0 0 1 0 0 0 K
V
50 198.48 609.01 198.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 186.48 T
0 F
(ParserFormatExpr) 99 186.48 T
(ession) 197.42 186.48 T
2 10 Q
(Formats a parsed expression into a text string.) 180 169.81 T
0 9 Q
(Pass:) 126 153.31 T
3 10 Q
(ds:si) 180 153.31 T
2 F
(Pointer to the parsed expression.) 252 153.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "300" 44
%%Page: "301" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserFormatWordConstant) 383.81 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(301) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
3 10 Q
0 X
(es:di) 180 641.33 T
2 F
(Pointer to buffer to place the text.) 252 641.33 T
3 F
(ss:bp) 180 629.83 T
2 F
(Pointer to) 252 629.83 T
4 F
(FormatParameters) 300.71 629.83 T
2 F
(.) 399.79 629.83 T
0 9 Q
(Returns:) 126 613.33 T
3 10 Q
(cx) 180 613.33 T
2 F
(Length of the text \050not including the null-terminator\051.) 252 613.33 T
0 9 Q
(Destr) 126 596.83 T
(oyed:) 146.83 596.83 T
2 10 Q
(Nothing.) 180 596.83 T
0 9 Q
(Library:) 126 580.33 T
4 10 Q
(parse.def) 180 580.33 T
81 565.49 531 570.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 565.49 531 570.5 R
7 X
0 0 0 1 0 0 0 K
V
50 569.49 609.01 569.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 557.49 T
0 F
(ParserFormatRangeRefer) 99 557.49 T
(ence) 232.73 557.49 T
2 10 Q
(Formats a multiple \050range\051 cell reference of the form) 180 540.83 T
2 9 Q
(AB123) 425.37 540.83 T
2 10 Q
(:) 453.38 540.83 T
2 9 Q
(CD456) 456.16 540.83 T
2 10 Q
(.) 484.67 540.83 T
0 9 Q
(Pass:) 126 524.33 T
3 10 Q
(ax) 180 524.33 T
2 F
(Row of starting cell.) 252 524.33 T
3 F
(cx) 180 512.83 T
2 F
(Column of starting cell.) 252 512.83 T
3 F
(dx) 180 501.33 T
2 F
(Row of ending cell.) 252 501.33 T
3 F
(bx) 180 489.83 T
2 F
(Column of ending cell.) 252 489.83 T
3 F
(es:di) 180 478.33 T
2 F
(Pointer to buffer) 252 478.33 T
(.) 327.74 478.33 T
0 9 Q
(Returns:) 126 461.83 T
3 10 Q
(es:di) 180 461.83 T
2 F
(String \050null-terminated\051.) 252 461.83 T
3 F
(cx) 180 450.33 T
2 F
(Length of string \050without null-terminator\051.) 252 450.33 T
0 9 Q
(Destr) 126 433.83 T
(oyed:) 146.83 433.83 T
2 10 Q
(Nothing.) 180 433.83 T
0 9 Q
(Library:) 126 417.33 T
4 10 Q
(parse.def) 180 417.33 T
81 402.48 531 407.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 402.48 531 407.49 R
7 X
0 0 0 1 0 0 0 K
V
50 406.48 609.01 406.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 394.48 T
0 F
(ParserFormatRowRefer) 99 394.48 T
(ence) 223.39 394.48 T
2 10 Q
(Formats a row reference in the form \322123.\323) 180 377.82 T
0 9 Q
(Pass:) 126 361.32 T
3 10 Q
(ax) 180 361.32 T
2 F
(Row number \050zero-based\051 to format.) 252 361.32 T
3 F
(es:di) 180 349.82 T
2 F
(Pointer to buffer to place string \050of) 252 349.82 T
2 9 Q
(MAX_REFERENCE_SIZE) 414.41 349.82 T
2 10 Q
(or larger\051.) 252 338.32 T
3 F
(cx) 180 326.82 T
2 F
(Size of buffer) 252 326.82 T
(.) 312.18 326.82 T
0 9 Q
(Returns:) 126 310.32 T
2 10 Q
(Nothing.) 180 310.32 T
0 9 Q
(Destr) 126 293.82 T
(oyed:) 146.83 293.82 T
2 10 Q
(Nothing.) 180 293.82 T
0 9 Q
(Library:) 126 277.32 T
4 10 Q
(parse.def) 180 277.32 T
81 262.48 531 267.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 262.48 531 267.48 R
7 X
0 0 0 1 0 0 0 K
V
50 266.48 609.01 266.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 254.48 T
0 F
(ParserFormatW) 99 254.48 T
(ordConstant) 182.98 254.48 T
2 10 Q
(Formats a word constant.) 180 237.81 T
0 9 Q
(Pass:) 126 221.31 T
3 10 Q
(ax) 180 221.31 T
2 F
(Number to format.) 252 221.31 T
3 F
(es:di) 180 209.81 T
2 F
(Pointer to buffer to place string \050of) 252 209.81 T
2 9 Q
(MAX_REFERENCE_SIZE) 414.41 209.81 T
2 10 Q
(or larger\051.) 252 198.31 T
3 F
(cx) 180 186.81 T
2 F
(Size of buffer) 252 186.81 T
(.) 312.18 186.81 T
0 9 Q
(Returns:) 126 170.31 T
2 10 Q
(Nothing.) 180 170.31 T
0 9 Q
(Destr) 126 153.81 T
(oyed:) 146.83 153.81 T
2 10 Q
(Nothing.) 180 153.81 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "301" 45
%%Page: "302" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ParserGetFunctionArgs) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(302) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Library:) 126 641.33 T
4 10 Q
(parse.def) 180 641.33 T
81 626.49 531 631.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 626.49 531 631.5 R
7 X
0 0 0 1 0 0 0 K
V
50 630.49 609.01 630.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 618.49 T
0 F
(ParserGetFunctionArgs) 99 618.49 T
2 10 Q
(Returns the arguments of a speci\336ed parser function. The arguments are) 180 601.83 T
(stored as a text string within the passed buffer) 180 590.33 T
(.) 395.95 590.33 T
0 9 Q
(Pass:) 126 573.83 T
3 10 Q
(cx) 180 573.83 T
2 F
(Item number) 252 573.83 T
(.) 312 573.83 T
3 F
(ax) 180 562.33 T
4 F
(FunctionT) 252 562.33 T
(ype) 306.1 562.33 T
2 F
( to match.) 324.62 562.33 T
3 F
(es:di) 180 550.83 T
2 F
(Buffer to place string.) 252 550.83 T
0 9 Q
(Returns:) 126 534.33 T
3 10 Q
(cx) 180 534.33 T
2 F
(Number of characters \050not including null terminator\051.) 252 534.33 T
0 9 Q
(Destr) 126 517.83 T
(oyed:) 146.83 517.83 T
2 10 Q
(Nothing.) 180 517.83 T
0 9 Q
(Library:) 126 501.33 T
4 10 Q
(parse.def) 180 501.33 T
81 486.48 531 491.49 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 486.48 531 491.49 R
7 X
0 0 0 1 0 0 0 K
V
50 490.48 609.01 490.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 478.48 T
0 F
(ParserGetFunctionDescription) 99 478.48 T
2 10 Q
-0.46 (Returns a description of a speci\336ed parser function. The description string is) 180 461.82 P
(stored in the passed buffer) 180 450.32 T
(.) 302.41 450.32 T
0 9 Q
(Pass:) 126 433.82 T
3 10 Q
(cx) 180 433.82 T
2 F
(Item number) 252 433.82 T
(.) 312 433.82 T
3 F
(ax) 180 422.32 T
4 F
(FunctionT) 252 422.32 T
(ype) 306.1 422.32 T
2 F
( to match.) 324.62 422.32 T
3 F
(es:di) 180 410.82 T
2 F
(Buffer to place string.) 252 410.82 T
0 9 Q
(Returns:) 126 394.32 T
3 10 Q
(cx) 180 394.32 T
2 F
(Number of characters \050not including null terminator\051.) 252 394.32 T
0 9 Q
(Destr) 126 377.82 T
(oyed:) 146.83 377.82 T
2 10 Q
(Nothing.) 180 377.82 T
0 9 Q
(Library:) 126 361.32 T
4 10 Q
(parse.def) 180 361.32 T
81 346.48 531 351.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 346.48 531 351.48 R
7 X
0 0 0 1 0 0 0 K
V
50 350.48 609.01 350.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 338.48 T
0 F
(ParserGetFunctionMoniker) 99 338.48 T
2 10 Q
(Returns the name of the speci\336ed parser function.) 180 321.81 T
0 9 Q
(Pass:) 126 305.31 T
3 10 Q
(cx) 180 305.31 T
2 F
(Item number) 252 305.31 T
(.) 312 305.31 T
3 F
(ax) 180 293.81 T
2 F
(FunctionT) 252 293.81 T
(ype to match.) 299.63 293.81 T
3 F
(es:di) 180 282.31 T
2 F
(Buffer to place string.) 252 282.31 T
0 9 Q
(Returns:) 126 265.81 T
3 10 Q
(cx) 180 265.81 T
2 F
(Number of characters \050not including null terminator\051.) 252 265.81 T
0 9 Q
(Destr) 126 249.31 T
(oyed:) 146.83 249.31 T
2 10 Q
(Nothing.) 180 249.31 T
0 9 Q
(Library:) 126 232.81 T
4 10 Q
(parse.def) 180 232.81 T
81 217.97 531 222.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 217.97 531 222.98 R
7 X
0 0 0 1 0 0 0 K
V
50 221.97 609.01 221.97 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 209.97 T
0 F
(ParserGetNumberOfFunctions) 99 209.97 T
2 10 Q
-0.27 (Returns the number of parser functions matching a particular function type.) 180 193.3 P
0 9 Q
(Pass:) 126 176.8 T
3 10 Q
(ax) 180 176.8 T
4 F
(FunctionT) 252 176.8 T
(ype) 306.1 176.8 T
2 F
( to match.) 324.62 176.8 T
0 9 Q
(Returns:) 126 160.3 T
3 10 Q
(cx) 180 160.3 T
2 F
(Number of functions of type) 252 160.3 T
4 F
(FunctionT) 383.48 160.3 T
(ype) 437.58 160.3 T
2 F
(.) 456.1 160.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "302" 46
%%Page: "303" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(PrefTestVideoDevice) 432.04 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(303) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Destr) 126 641.33 T
(oyed:) 146.83 641.33 T
2 10 Q
(Nothing.) 180 641.33 T
0 9 Q
(Library:) 126 624.83 T
4 10 Q
(parse.def) 180 624.83 T
81 609.99 531 615 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 609.99 531 615 R
7 X
0 0 0 1 0 0 0 K
V
50 613.99 609.01 613.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 601.99 T
0 F
(ParserLocalizeFormats) 99 601.99 T
2 10 Q
(Re-initialize localization information.) 180 585.33 T
0 9 Q
(Pass:) 126 568.83 T
2 10 Q
(Nothing.) 180 568.83 T
0 9 Q
(Returns:) 126 552.33 T
2 10 Q
(Nothing.) 180 552.33 T
0 9 Q
(Destr) 126 535.83 T
(oyed:) 146.83 535.83 T
2 10 Q
(Nothing.) 180 535.83 T
0 9 Q
(Library:) 126 519.33 T
4 10 Q
(parse.def) 180 519.33 T
81 504.98 531 509.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 504.98 531 509.99 R
7 X
0 0 0 1 0 0 0 K
V
50 508.98 609.01 508.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 496.98 T
0 F
(ParserParseString) 99 496.98 T
2 10 Q
(Parses a string.) 180 480.32 T
0 9 Q
(Pass:) 126 463.82 T
3 10 Q
(ds:si) 180 463.82 T
2 F
(Pointer to text to perform the parse operation.) 252 463.82 T
3 F
(es:di) 180 452.32 T
2 F
(Buffer to place parsed data.) 252 452.32 T
3 F
(ss:bp) 180 440.82 T
2 F
(Pointer to) 252 440.82 T
4 F
(ParserParameters) 300.71 440.82 T
2 F
( structure on the stack.) 396.09 440.82 T
0 9 Q
(Returns:) 126 424.32 T
3 10 Q
(CF) 180 424.32 T
2 F
(Set on error; clear otherwise.) 252 424.32 T
3 F
(al) 180 412.82 T
4 F
(ParserScannerEvaluatorError) 252 412.82 T
2 F
(.) 410.17 412.82 T
3 F
(cx, dx) 180 401.32 T
2 F
(Range of text where the error was encountered.) 252 401.32 T
3 F
(es:di) 180 389.82 T
2 F
(Pointer past the last token written.) 252 389.82 T
0 9 Q
(Destr) 126 373.32 T
(oyed:) 146.83 373.32 T
3 10 Q
(ah) 180 373.32 T
0 9 Q
(Library:) 126 356.82 T
4 10 Q
(parse.def) 180 356.82 T
81 341.98 531 346.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 341.98 531 346.98 R
7 X
0 0 0 1 0 0 0 K
V
50 345.98 609.01 345.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 333.98 T
0 F
(ParserRemoveDependencies) 99 333.98 T
2 10 Q
(Removes a set of dependencies from a dependency block.) 180 317.31 T
0 9 Q
(Pass:) 126 300.81 T
3 10 Q
(bx) 180 300.81 T
2 F
(Handle of the dependency block.) 252 300.81 T
3 F
(ss:bp) 180 289.31 T
2 F
(Pointer to) 252 289.31 T
4 F
(DependencyParameters) 300.71 289.31 T
2 F
( on the stack.) 425.53 289.31 T
0 9 Q
(Returns:) 126 272.81 T
3 10 Q
(CF) 180 272.81 T
2 F
(Set on error; otherwise clear) 252 272.81 T
(.) 382.37 272.81 T
3 F
(al) 180 261.31 T
2 F
(\050If) 252 261.31 T
6 F
(CF) 265.51 261.31 T
2 F
( is set\051: Error code.) 277.51 261.31 T
0 9 Q
(Destr) 126 244.81 T
(oyed:) 146.83 244.81 T
3 10 Q
(ax) 180 244.81 T
0 9 Q
(Library:) 126 228.31 T
4 10 Q
(parse.def) 180 228.31 T
81 213.47 531 218.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 213.47 531 218.48 R
7 X
0 0 0 1 0 0 0 K
V
50 217.47 609.01 217.47 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 205.47 T
0 F
(Pr) 99 205.47 T
(efT) 111.44 205.47 T
(estV) 127.67 205.47 T
(ideoDevice) 149.88 205.47 T
2 10 Q
(Checks if the selected video driver is available on the machine.) 180 188.8 T
0 9 Q
(Pass:) 126 172.3 T
3 10 Q
(bx:si) 180 172.3 T
2 F
(Handle of the) 252 172.3 T
4 F
(PrefDeviceList) 317.56 172.3 T
2 F
(.) 395.33 172.3 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "303" 47
%%Page: "304" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(ProcCallFixedOrMovable) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(304) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Returns:) 126 641.33 T
3 10 Q
(CF) 180 641.33 T
2 F
(Set if device is unavailable, clear if available or if it is) 252 641.33 T
(indeterminate whether the device is available.) 252 629.83 T
3 F
(ax) 180 618.33 T
2 F
(\050If) 252 618.33 T
6 F
(CF) 265.51 618.33 T
2 F
( clear\051:) 277.51 618.33 T
4 F
(DisplayT) 324 618.33 T
(ype) 370.14 618.33 T
2 F
( \050in) 388.66 618.33 T
3 F
(al) 406.81 618.33 T
2 F
(, 0 in) 418.81 618.33 T
3 F
(ah) 444.75 618.33 T
2 F
(\051.) 456.75 618.33 T
(\050If) 252 606.83 T
6 F
(CF) 265.51 606.83 T
2 F
( set\051:) 277.51 606.83 T
(0 if driver is de\336nitely not present or) 324 606.83 T
4 F
(GeodeLoadError) 252 595.33 T
2 F
(+1 if the driver couldn\325) 339.97 595.33 T
(t be loaded for) 444.74 595.33 T
(some reason.) 252 583.83 T
0 9 Q
(Destr) 126 567.33 T
(oyed:) 146.83 567.33 T
3 10 Q
(cx, dx, di) 180 567.33 T
0 9 Q
(Library:) 126 550.83 T
4 10 Q
(con\336g.def) 180 550.83 T
81 535.99 531 541 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 535.99 531 541 R
7 X
0 0 0 1 0 0 0 K
V
50 539.99 609.01 539.99 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 527.99 T
0 F
(Pr) 99 527.99 T
(ocCallFixedOrMovable) 111.44 527.99 T
2 10 Q
(Calls the routine speci\336ed by the passed virtual far pointer) 180 511.33 T
(.) 452.06 511.33 T
0 9 Q
(Pass:) 126 494.83 T
3 10 Q
(ax) 180 494.83 T
2 F
(Offset of routine.) 252 494.83 T
3 F
(bx) 180 483.33 T
2 F
(V) 252 483.33 T
(irtual segment. \050T) 258.78 483.33 T
(ogether) 341.39 483.33 T
3 F
(bx) 378.98 483.33 T
2 F
( and) 390.98 483.33 T
3 F
(ax) 413.95 483.33 T
2 F
( form a virtual far) 425.95 483.33 T
(pointer) 252 471.83 T
(.\051) 284.59 471.83 T
0 9 Q
(Returns:) 126 455.33 T
2 10 Q
(From called routine.) 180 455.33 T
0 9 Q
(Destr) 126 438.83 T
(oyed:) 146.83 438.83 T
2 10 Q
(All registers returned by called routine will be returned to the caller of) 180 438.83 T
4 F
(ProcCallFixedOrMovable) 180 427.33 T
2 F
(.) 312.22 427.33 T
0 9 Q
(Library:) 126 410.83 T
4 10 Q
(resource.def) 180 410.83 T
81 395.98 531 400.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 395.98 531 400.99 R
7 X
0 0 0 1 0 0 0 K
V
50 399.98 609.01 399.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 387.98 T
0 F
(Pr) 99 387.98 T
(ocCallModuleRoutine) 111.44 387.98 T
2 10 Q
(Calls a process\325 routine in another code resource. The stack usage of this) 180 371.32 T
-0.21 (routine is guaranteed; the routine called will return two words of the return) 180 359.82 P
(address on the stack followed by any parameters that the caller may have) 180 348.32 T
(pushed.) 180 336.82 T
0 9 Q
(Pass:) 126 320.32 T
3 10 Q
(ax) 180 320.32 T
2 F
(Offset to routine.) 252 320.32 T
3 F
(bx) 180 308.82 T
2 F
(V) 252 308.82 T
(irtual segment of routine. \050T) 258.78 308.82 T
(ogether) 388.98 308.82 T
3 F
(bx) 426.57 308.82 T
2 F
( and) 438.57 308.82 T
3 F
(ax) 461.54 308.82 T
2 F
( form a) 473.54 308.82 T
(virtual far pointer) 252 297.32 T
(.\051) 335.15 297.32 T
0 9 Q
(Returns:) 126 280.82 T
2 10 Q
(From called routine.) 180 280.82 T
0 9 Q
(Destr) 126 264.32 T
(oyed:) 146.83 264.32 T
2 10 Q
(All registers returned by called routine will be returned to the caller of) 180 264.32 T
4 F
(ProcCallModuleRoutine) 180 252.82 T
2 F
(.) 305.74 252.82 T
0 9 Q
(Library:) 126 236.32 T
4 10 Q
(resource.def) 180 236.32 T
81 221.48 531 226.48 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 221.48 531 226.48 R
7 X
0 0 0 1 0 0 0 K
V
50 225.48 609.01 225.48 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 213.48 T
0 F
(Pr) 99 213.48 T
(ocGetLibraryEntry) 111.44 213.48 T
2 10 Q
(Returns the address of a routine within a library) 180 196.81 T
(. Y) 404.28 196.81 T
(ou can pass the result) 415.77 196.81 T
(directly to) 180 185.31 T
4 F
(ProcCallFixedOrMovable) 229.63 185.31 T
2 F
( to call the routine.) 361.85 185.31 T
0 9 Q
(Pass:) 126 168.81 T
3 10 Q
(ax) 180 168.81 T
2 F
(Library entry point number) 252 168.81 T
(.) 379.6 168.81 T
3 F
(bx) 180 157.31 T
2 F
(Library handle.) 252 157.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "304" 48
%%Page: "305" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
162 690.34 558 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(QueuePostMessage) 442.91 692.67 T
162 666.34 558 678.01 R
7 X
V
1 10 Q
0 X
(n) 528.15 671.34 T
2 F
(305) 541.32 671.34 T
324 684 580 684 2 L
3 H
2 Z
N
512 90 558 125 R
7 X
V
1 60 Q
0 X
(n) 512.17 85 T
279 104 510 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 303.17 110 T
(ence) 464.69 110 T
63 99 243 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
63.67 123.5 243.67 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 9 Q
0 X
(Returns:) 126 641.33 T
3 10 Q
(bx:ax) 180 641.33 T
2 F
(Library entry point \050virtual far pointer\051.) 252 641.33 T
0 9 Q
(Destr) 126 624.83 T
(oyed:) 146.83 624.83 T
2 10 Q
(Nothing.) 180 624.83 T
0 9 Q
(Library:) 126 608.33 T
4 10 Q
(resource.def) 180 608.33 T
81 593.49 531 598.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 593.49 531 598.5 R
7 X
0 0 0 1 0 0 0 K
V
50 597.49 609.01 597.49 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 585.49 T
0 F
(Pr) 99 585.49 T
(ocInfo) 111.44 585.49 T
2 10 Q
-0.23 (Returns the contents of the) 180 568.83 P
5 9 Q
-0.21 (HM_) 307.55 568.83 P
5 10 Q
-0.23 (otherInfo) 328.04 568.83 P
2 F
-0.23 ( \336eld for a given process. This \336eld) 370.06 568.83 P
(holds the \336rst thread of this process.) 180 557.33 T
0 9 Q
(Pass:) 126 540.83 T
3 10 Q
(bx) 180 540.83 T
2 F
(Process handle.) 252 540.83 T
0 9 Q
(Returns:) 126 524.33 T
3 10 Q
(bx) 180 524.33 T
2 F
-0.44 (Contents of) 252 524.33 P
5 9 Q
-0.4 (HM_) 306.85 524.33 P
5 10 Q
-0.44 (otherInfo) 327.34 524.33 P
2 F
-0.44 ( \336eld of process \050this \336eld holds the) 369.36 524.33 P
(\336rst thread of this process\051.) 252 512.83 T
0 9 Q
(Destr) 126 496.33 T
(oyed:) 146.83 496.33 T
2 10 Q
(Nothing.) 180 496.33 T
0 9 Q
(Library:) 126 479.83 T
4 10 Q
(geode.def) 180 479.83 T
81 464.98 531 469.99 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 464.98 531 469.99 R
7 X
0 0 0 1 0 0 0 K
V
50 468.98 609.01 468.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 456.98 T
0 F
(QueueGetMessage) 99 456.98 T
2 10 Q
(Returns the next event from a given event queue; this routine blocks the) 180 440.32 T
-0.12 (queue if it is currently empty until an event is added which can be returned.) 180 428.82 P
0 9 Q
(Pass:) 126 412.32 T
3 10 Q
(bx) 180 412.32 T
2 F
(Handle of event queue.) 252 412.32 T
0 9 Q
(Returns:) 126 395.82 T
3 10 Q
(ax) 180 395.82 T
2 F
(Event handle.) 252 395.82 T
0 9 Q
(Destr) 126 379.32 T
(oyed:) 146.83 379.32 T
2 10 Q
(Nothing.) 180 379.32 T
0 9 Q
(Library:) 126 362.82 T
4 10 Q
(geode.def) 180 362.82 T
81 347.98 531 352.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
81 347.98 531 352.98 R
7 X
0 0 0 1 0 0 0 K
V
50 351.98 609.01 351.98 2 L
V
1 H
2 Z
0 X
N
36 72 576 720 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(n) 81 339.98 T
0 F
(QueuePostMessage) 99 339.98 T
2 10 Q
(Adds the passed event to the speci\336ed event queue.) 180 323.31 T
0 9 Q
(Pass:) 126 306.81 T
3 10 Q
(bx) 180 306.81 T
2 F
(Handle of event queue.) 252 306.81 T
3 F
(ax) 180 295.31 T
2 F
(Event to post.) 252 295.31 T
3 F
(si) 180 283.81 T
2 F
(Calling thread.) 252 283.81 T
3 F
(di) 180 272.31 T
4 F
(MessageFlags) 252 272.31 T
2 F
( though only) 323.47 272.31 T
2 9 Q
(MF_INSERT_A) 384.03 272.31 T
(T_FRONT) 449.2 272.31 T
2 10 Q
( is used) 492.54 272.31 T
(\050to place the message at the front of the queue\051.) 252 260.81 T
0 9 Q
(Returns:) 126 244.31 T
2 10 Q
(Nothing.) 180 244.31 T
0 9 Q
(Destr) 126 227.81 T
(oyed:) 146.83 227.81 T
2 10 Q
(Nothing.) 180 227.81 T
0 9 Q
(Library:) 126 211.31 T
4 10 Q
(geode.def) 180 211.31 T
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "305" 49
%%Page: "306" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 690.34 450 702 R
7 X
0 0 0 1 0 0 0 K
V
0 14 Q
0 X
(QueuePostMessage) 54 692.67 T
54 666.34 450 678.01 R
7 X
V
1 10 Q
0 X
(n) 54 671.34 T
2 F
(306) 67.17 671.34 T
32 684 288 684 2 L
3 H
2 Z
N
54 90 108 125 R
7 X
V
1 60 Q
0 X
(n) 58.17 85 T
104 104 333 126 R
7 X
V
0 24 Q
0 X
(Assembly Refer) 104 110 T
(ence) 265.52 110 T
360 99 540 117 R
7 X
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
360 123.5 540 135.67 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
81 144 531 648 R
V
0 0 1 0 1 1 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "306" 50
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 50
%%DocumentFonts: Times-Bold
%%+ ZapfDingbats
%%+ NewCenturySchlbk-Roman
%%+ Courier-Bold
%%+ NewCenturySchlbk-Bold
%%+ NewCenturySchlbk-Italic
%%+ Courier
%%EOF
