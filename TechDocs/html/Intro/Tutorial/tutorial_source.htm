<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<!-- $Id: tutorial_source.htm,v 1.5 97/12/08 16:53:35 lawrence Exp $ -->
<META NAME="copyright" CONTENT="Copyright 1997 GEOWORKS">
<!-- <META NAME="description" CONTENT=""> -->
<!-- <META NAME="keywords" CONTENT=""> -->
<LINK REL="STYLESHEET" HREF="../../docHelpers/style.css">
<LINK REV="MADE" HREF="mailto:doc-feedback@geoworks.com">

<TITLE>Tutorial Part 2 Source Code</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">


<H1 CLASS="sectionTitle">
<A NAME="84644">
 </A>
Tutorial Part 2 Source Code</H1>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="tutorial.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="tutorial.htm"><IMG SRC="../../docImages/prevUp.gif" BORDER="0" ALT="Prev: ">Tutorial Part 2: A New Application</A>
<!-- to next --> | <A HREF="tutorial.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Prev: ">Tutorial Part 3: Adding Procedural Code</A>
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
<P>Here is the source code for the application discussed in this chapter. The 
source code is in two files:</P>
<UL>
<LI><A HREF="#gp">TUTORIAL.GP, the Glue Parameters file</A>
<LI><A HREF="#goc">TUTORIAL.GOC, the Goc code</A>
</UL>
<A NAME="gp"> </A>
<H2>TUTORIAL.GP</H2>
<A NAME="IX_name .gp file keyword:in Tutorial example"></A>
<PRE># Permanent name: This is required by Glue to set the permanent name
# and extension of the geode. The permanent name of a library is what
# goes in the imported library table of a client geode (along with the
# protocol number). It is also what Swat uses to name the patient.
#
name     tutorial.app</PRE>
<A NAME="IX_longname .gp file keyword:in Tutorial example"></A>
<PRE># Long filename: this name can displayed by the system. &quot;EC &quot; is
# prepended to this when the error-checking version is linked by Glue.
#
longname &quot;Tutorial Sample Application&quot;</PRE>
<A NAME="IX_token .gp file keyword:in Tutorial example"></A>
<A NAME="IX_tokenchars .gp file keyword:in Tutorial example"></A>
<PRE># Token: The four-letter name is used by the system to locate the
# icon for this application in the token database. The tokenid
# number corresponds to the manufacturer ID of the program's author
# for uniqueness of the token. Since this is a sample application, we
# use the manufacturer ID for the SDK, which is 8.
#
tokenchars &quot;TUTO&quot;
tokenid    8</PRE>
<A NAME="IX_type .gp file keyword:in Tutorial example"></A>
<PRE># Specify geode type: This geode is an application, and will have
# its own process (thread).
#
type   appl, process, single</PRE>
<A NAME="IX_class .gp file keyword:in Tutorial example"></A>
<PRE># Specify class name for application thread. Messages sent to the
# application thread (a.k.a. &quot;process&quot; when specified as the output
# of a UI object) will be handled by this process class.
#
class  TutorialProcessClass</PRE>
<A NAME="IX_appobj .gp file keyword:in Tutorial example"></A>
<PRE># Specify application object. This is the object that serves as
# the top-level UI object in the application.
#
appobj TutorialApp</PRE>
<A NAME="IX_platform .gp file keyword:in Tutorial example"></A>
<PRE># Specify for which platform this application will be compiled.
# Glue uses this to make sure that the libraries we are using
# (listed below) are available for this platform.
# In this case, the specified platform is the Nokia 9000i Communicator
#
platform n9000v20</PRE>
<A NAME="IX_heapspace .gp file keyword:in Tutorial example"></A>
<PRE># Heapspace: This is roughly the non-discardable memory usage
# (in paragraphs (16 bytes/paragraph)) of the application and any
# transient libraries that it depends on, plus an additional
# amount for thread activity. To find the heapspace for an
# application, use the Swat &quot;heapspace&quot; command.
#
heapspace 3K</PRE>
<A NAME="IX_library .gp file keyword:in Tutorial example"></A>
<PRE># Libraries: list which libraries are used by the application.
# The foam library is for the Nokia 9000i Communicator only.
#
library geos
library ui
library foam</PRE>
<A NAME="IX_resource .gp file keyword:in Tutorial example"></A>
<PRE># Resources: list all resource blocks which are used by the
# application whose allocation flags can't be inferred by Glue.
# Usually this is needed only for object blocks, fixed code
# resources, or data resources that are read-only. Standard
# discardable code resources do not need to be mentioned.
#
resource APPRESOURCE ui-object
resource INTERFACE   ui-object</PRE>

<A NAME="goc"> </A>
<H2>TUTORIAL.GOC</H2>
<PRE>/********************************************************************
 *		Include Files
 *******************************************************************/
<A NAME="IX_@include:in Tutorial example[;include:in Tutorial example]"></A>
@include &lt;stdapp.goh&gt;
@include &lt;foam.goh&gt;</PRE>
<PRE>/********************************************************************
 *		Class Definitions
 *******************************************************************/
	/*
	 * Here we define &quot;TutorialProcessClass&quot; as a subclass of the
	 * system provided &quot;GenProcessClass&quot;. As this application is
	 * launched, an instance of this class will be created, and
	 * will handle all application-related events (messages). The
	 * application thread will be responsible for running this
	 * object, meaning that whenever this object handles a message,
	 * we will be executing in the application thread.
	 *
	 * You will find no object in this file declared to be of this
	 * class. Instead, it is specified as the class for the
	 * application thread in &quot;tutorial.gp&quot;.
	 */
<A NAME="IX_@class:in Tutorial example[;class:in Tutorial example]"></A>
<A NAME="IX_GenProcessClass:subclassing in Tutorial example"></A>
@class TutorialProcessClass, GenProcessClass;</PRE>
<PRE>	/*
	 * Define messages for this class here. Most commonly, UI
	 * objects will send these messages to the application thread
	 * when they've been activated by the user.
	 */
<A NAME="IX_@endc:in Tutorial example[;endc:in Tutorial example]"></A>
@endc; /* end of class definition */</PRE>
<PRE>/********************************************************************
 *		Class Declarations
 *******************************************************************/
	/*
	 * Each object class requires a &quot;class record&quot; be stored in
	 * fixed memory for it. The class record is used by the GEOS
	 * message system for the delivery of messages sent to an
	 * object of the class. The class record needs to be defined
	 * in the file where the objects of that class are defined.
	 * The @classdecl GOC directive tells GOC to create the class
	 * record here.
	 *
	 * The neverSaved flag is necessary because ProcessClass
	 * objects are hybrid objects. It tells the system that no
	 * object of this class will ever be loaded from or stored to
	 * a state file.
	 */
<A NAME="IX_@classdecl:in Tutorial example[;classdecl:in Tutorial example]"></A>
@classdecl TutorialProcessClass, neverSaved;</PRE>
<PRE>/********************************************************************
 *		UI Object Resources
 *******************************************************************/</PRE>
<PRE>/********************************************************************
 *		AppResource Resource
 *******************************************************************/
<A NAME="IX_@start:in Tutorial example[;start:in Tutorial example]"></A>
@start AppResource;</PRE>
<PRE>/*
	*    Application Object
	*
	* The very top-level generic object of an application MUST be
	* a GenApplication object. The tutorial.gp file contains the &quot;appobj&quot;
	* statement which indicates that this &quot;TutorialApp&quot; object is in
	* fact the top-level UI object.
	*
	* This object should be in its own resource, as it is all that
	* need be in memory when the application is iconified. As such,
	* its resource should be as small as possible.
	*
	* FoamSubApplicationClass is for the Nokia 9000i Communicator
	* only. It adds special behavior for that platform.
	*/
<A NAME="IX_@object:in Tutorial example[;object:in Tutorial example]"></A>
<A NAME="IX_FoamSubApplicationClass:in Tutorial example"></A>
@object FoamSubApplicationClass TutorialApp = {
<A NAME="IX_GI_visMoniker:in Tutorial example"></A>
<A NAME="IX_Monikers:in Tutorial example"></A>
		/*
		 * While the application object isn't shown on the screen,
		 * it has a list of VisMonikers for three purposes:
		 *   1) The GenPrimary (see below) inherits the moniker
		 *      when it comes up on screen.
		 *   2) When GeoManager needs to display an icon for the
		 *      application, and there's none for it in the Token
		 *      Database, it launches the app and sends a message
		 *      to the application object to install its list of
		 *      monikers in the token database under the
		 *      application's token.
		 *   3) When the GenPrimary is minimized, it uses the most
		 *      appropriate graphical moniker from this list for the
		 *      application's icon. If there's an abbreviated-text
		 *      moniker in the list, that's used as the icon title.
		 *      Else any regular-text moniker is used.
		 */
	GI_visMoniker = list { @TutorialTextMoniker };</PRE>
<A NAME="IX_GI_comp:in Tutorial example"></A>
<PRE>		/*
		 * The GenApplication object has at least one child:
		 * the main application window.
		 */
	GI_comp = @TutorialPrimary;</PRE>
<A NAME="IX_gcnList() keyword:in Tutorial example"></A>
<A NAME="IX_GAGCNLT_WINDOWS:in Tutorial example"></A>
<PRE>		/*
		 * The main window should appear on-screen when the application
		 * is launched, so place it on the GAGCNLT_WINDOWS GCN list.
		 * This causes the application object to bring it on-screen at
		 * the appropriate time.
		 */
	gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS ) = @TutorialPrimary;
}</PRE>
<A NAME="IX_@visMoniker:in Tutorial example[;visMoniker:in Tutorial]"></A>
<A NAME="IX_@localize:in Tutorial example[;localize:in Tutorial example]"></A>
<PRE>@visMoniker TutorialTextMoniker = &quot;My Tutorial&quot;;
@localize &quot;Program Title&quot;;</PRE>
<A NAME="IX_@end:in Tutorial example[;end:in Tutorial example]"></A>
<PRE>@end AppResource;</PRE>
<PRE>/********************************************************************
 *		Interface Resource
 * This resource is for miscellaneous UI objects.
 *******************************************************************/
@start Interface;</PRE>
<PRE>	/*
	 *    Primary window
	 *
	 * Every application has at least one GenPrimary object.
	 * This object serves as the main window of the application.
	 * Inside this window, various UI components, such as menus
	 * or lists, can be placed.
	 */
<A NAME="IX_GenPrimaryClass:in Tutorial example"></A>
@object GenPrimaryClass TutorialPrimary  = {
		/*
		 * This window has two children:
		 * the GenView object and the Close button (see below).
		 */
	GI_comp = @TutorialView, @TutorialCloseTrigger;
}</PRE>
<A NAME="IX_GenViewClass:in Tutorial example"></A>
<PRE>	/*
	 *    GenView object
	 *
	 * This GenView object creates a window where the application can
	 * display portions of the document as necessary. As we want this
	 * window to be scrollable, the specific UI will create scroll
	 * bars with which the user can interact. Whenever a portion of
	 * the window needs to be redrawn, the GenView object will
	 * invalidate a portion of the window, causing a MSG_META_EXPOSED
	 * to be sent to the application. The application will draw the
	 * document into the window as requested. The window keeps track
	 * of a mask, which is used to clip the application's drawing
	 * operations, so that only the invalid portion of the window is
	 * drawn to.
	 */
@object GenViewClass TutorialView = {
<A NAME="IX_GVI_horizAttrs:in Tutorial example"></A>
<A NAME="IX_GVI_vertAttrs:in Tutorial example"></A>
		/*
		 * Make sure the view never gets larger
		 * than the thing being displayed within it.
		 */
	GVI_horizAttrs = @default | GVDA_NO_LARGER_THAN_CONTENT;
	GVI_vertAttrs = @default | GVDA_NO_LARGER_THAN_CONTENT;

<A NAME="IX_GVI_content:in Tutorial example"></A>
		/*
		 * When the contents of this view (i.e. the document) must be
		 * updated, the UI should send a MSG_META_EXPOSED to the
		 * TutorialProcessClass object.
		 */
	GVI_content = process;
};</PRE>
<A NAME="IX_GenTriggerClass:in Tutorial example"></A>
<PRE>	/*
	 *    Close trigger
	 *
	 * On certain systems we should provide a way to exit the
	 * application. On the Nokia 9000i Communicator we have a
	 * close trigger like this one.
	 */
@object ComplexMonikerClass TutorialCloseTrigger = {

	ComplexMoniker = GenTriggerClass;
	CMI_topText = CMT_CLOSE;

<A NAME="IX_GTI_destination:in Tutorial example"></A>
<A NAME="IX_GTI_actionMsg:in Tutorial example"></A>
<A NAME="IX_MSG_FSA_RETURN_TO_LAUNCHER:in Tutorial example"></A>
		/*
		 * The next two instance fields are part of the
		 * GenTriggerClass. They specify the recipient object
		 * and the message that will be sent to that object
		 * when this trigger is activated.
		 */
	GTI_destination = @TutorialApp;
	GTI_actionMsg = MSG_FSA_RETURN_TO_LAUNCHER;

<A NAME="IX_HINT_SEEK_MENU_BAR:in Tutorial example"></A>
<A NAME="IX_HINT_SEEK_REPLY_BAR:in Tutorial example"></A>
<A NAME="IX_HINT_SEEK_SLOT:in Tutorial example"></A>
		/*
		 * The specific UI uses this combination of hints
		 * to place this trigger on the right side of the
		 * Nokia 9000i Communicator's screen.
		 */
	HINT_SEEK_MENU_BAR;
	HINT_SEEK_REPLY_BAR;
	HINT_SEEK_SLOT = 3;
}</PRE>
<PRE>@end Interface;</PRE>

<HR>
<!-- This blob is a bunch of standard links: up, back, index, etc. -->
<!-- up to top -->|&nbsp;<A HREF="../../index.htm"><IMG SRC="../../docImages/upTop.gif" ALT="Up: " BORDER="0">GEOS SDK TechDocs</A>
<!-- up to parent -->| <A HREF="tutorial.htm"><IMG SRC="../../docImages/up.gif" ALT="Up" BORDER="0"></A>
<!-- down to first child --> 
<!-- to previous --> | <A HREF="tutorial.htm"><IMG SRC="../../docImages/prev.gif" BORDER="0" ALT="Prev: ">Tutorial Part 2: A New Application</A>
<!-- to next --> | <A HREF="tutorial.htm"><IMG SRC="../../docImages/nextUp.gif" BORDER="0" ALT="Prev: ">Tutorial Part 3: Adding Code and Debugging with Swat</A>
<HR>
<!-- That blob was a bunch of standard links: up, back, index, etc. -->
</BODY>
</HTML>



