/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994 -- All Rights Reserved

PROJECT:	Gopher Client
MODULE:		Gopher Library -- socket
FILE:		gopherSocketC.goh

AUTHOR:		Alvin Cham, Nov 29, 1994

ROUTINES:
	Name			Description
	----			-----------

	for GopherSocketClass:
	----------------------

	MSG_GOPHER_SOCKET_SET_DATA_SOCKET
				- set the value for the data socket

	MSG_GOPHER_SOCKET_GET_DATA_SOCKET
				- get the value for the data socket

	MSG_GOPHER_SOCKET_SET_LISTEN_SOCKET
				- set the value for the listen socket

	MSG_GOPHER_SOCKET_GET_LISTEN_SOCKET
				- get the value for the listen socket

	MSG_GOPHER_SOCKET_SET_THREAD_HANDLE
				- set the value for the thread handle

	MSG_GOPHER_SOCKET_GET_THREAD_HANDLE
				- get the value for the thread handle

	for GopherSocketThreadClass:
	----------------------------

	MSG_GOPHER_SOCKET_THREAD_LISTEN
				- listen for connection

	MSG_GOPHER_SOCKET_THREAD_RECV
				- start the receive loop 

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AC	11/29/94   	Initial version.

DESCRIPTION:
	This file contains the class definitions of the GopherSocketClass.

	$Id: gopherSocketC.goh,v 1.1 97/04/04 18:05:00 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#ifndef __GOPHER_SOCKET_CLASS_GOH
#define __GOPHER_SOCKET_CLASS_GOH

#include <gopherSocket.h>
@include <gopherC.goh>
@include <socket.goh>

@deflib gopher

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	Structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
typedef struct {
	SocketAddress	sa;
	byte		ua[MAX_ADDRESS_SIZE];
} GopherSocketAddress;

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	Gopher Socket Class
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
@class	GopherSocketClass, GopherClass;

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	Messages	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/* get's and set's */

/*
 * set the socket that we are using.
 *
 * Context:	Message involving the socket testing of the gopher
 *		client.
 * Source:	any object
 * Destination:	Gopher object
 * Interception:none
 */
@message void MSG_GOPHER_SOCKET_SET_DATA_SOCKET(word socket);

/*
 * get the socket that we are using.
 *
 * Context:	Message involving the socket testing of the gopher
 *		client.
 * Source:	any object
 * Destination:	Gopher object
 * Interception:none
 */
@message word MSG_GOPHER_SOCKET_GET_DATA_SOCKET();

/*
 * set the socket that we are using.
 *
 * Context:	Message involving the socket testing of the gopher
 *		client.
 * Source:	any object
 * Destination:	Gopher object
 * Interception:none
 */
@message void MSG_GOPHER_SOCKET_SET_LISTEN_SOCKET(word socket);

/*
 * get the socket that we are using.
 *
 * Context:	Message involving the socket testing of the gopher
 *		client.
 * Source:	any object
 * Destination:	Gopher object
 * Interception:none
 */
@message word MSG_GOPHER_SOCKET_GET_LISTEN_SOCKET();

/*
 * set the thread handle for the extra thread created while using the socket
 * library.
 *
 * Context:	Message involving the testing of the gopher client via
 *		sockets.	
 * Source:	any object (process class object)
 * Destination:	Gopher object
 * Interception:none
 */
@message void MSG_GOPHER_SOCKET_SET_THREAD_HANDLE(Handle newThread);

/*
 * get the thread handle for the extra thread created while using the socket
 * library.
 *
 * Context:	Message involving the testing of the gopher client via
 *		sockets.	
 * Source:	any object (process class object)
 * Destination:	Gopher object
 * Interception:none
 */
@message Handle MSG_GOPHER_SOCKET_GET_THREAD_HANDLE();

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	Instance data + defaults
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
/*
 * Context:  	The socket ID
 * Usage: 	Needed for identification of a socket. 
 */
	@instance	Socket	GSI_dataSocket = 0;

/*
 * Context:  	The socket ID
 * Usage: 	Needed for identification of a socket. 
 */
	@instance	Socket	GSI_listenSocket = 0;

/*
 * Context:  	The handle of the extra thread that is created when using the
 *	     	socket library.
 * Usage: 	Needed for socket driver communication establishment
 */
	@instance	ThreadHandle	GSI_thread = NullHandle;

@endc

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	Gopher Socket Thread Class
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

@class	GopherSocketThreadClass, ProcessClass;

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	Messages	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/
/*
 * listen for the connection
 *
 * Context:	Message involving the testing of the gopher client via
 *		sockets.	
 * Source:	any object
 * Destination:	GopherSocketThreadClass object
 * Interception:none
 */
@message	void	MSG_GOPHER_SOCKET_THREAD_LISTEN(optr gopherObj);

/*
 * the receive loop
 *
 * Context:	Message involving the testing of the gopher client via
 *		sockets.	
 * Source:	any object
 * Destination: GopherSocketThreadClass object
 * Interception:none
 */
@message	void	MSG_GOPHER_SOCKET_THREAD_RECV(optr gopherObj);

@endc

@endlib

#endif


