/***************************************************************************
 *
 *	Useful Macros
 *	(c) by RABE-Soft 07/2025
 *
 * 	Note: The comments were translated from German to English with AI support
 *	and have not been reviewed in detail. They may therefore sometimes sound a bit odd.
 *
 ***************************************************************************/
@include <Ansi/stdio.h>

#ifndef min
#define min(a,b)	( ((a) < (b)) ?  (a) : (b) )
#endif

#ifndef max
#define max(a,b)	( ((a) > (b)) ?  (a) : (b) )
#endif

/**************************************************************************
	Tools: Error and Message Boxes
 **************************************************************************/

/* ############## Predefined Message Boxes ################# */

/* Error Boxes:			ErrorMsgBox();	ErrorMsgNumberBox();
		"OK" trigger
		return: IC_OK */

/* Warning Boxes: 		WarningMsgBox(); WarningMsgNumberBox();
		"YES" and "NO" trigger
		return:	IC_YES | IC_NO */

/* Info Boxes:    		InfoMsgBox(); InfoMsgNumberBox();
		"OK" trigger
		return: IC_OK */

/* Question Boxes:		QuestionMsgBox(); QuestionMsgNumberBox();
		"YES" and "NO" trigger
		return:	IC_YES | IC_NO */


#define	ErrorMsgBox(info,param1, param2) BoxMessageBox(info,param1,\
					param2,CDT_ERROR,GIT_NOTIFICATION);

#define	ErrorMsgNumberBox(info,param1, number)	BoxMessageNumberBox(info,param1,\
					number,CDT_ERROR,GIT_NOTIFICATION)

#define	WarningMsgBox(info,param1, param2)	BoxMessageBox(info,param1,\
					param2,CDT_WARNING,GIT_AFFIRMATION)
#define	WarningMsgNumberBox(info,param1, number)	BoxMessageNumberBox(info,param1,\
					number,CDT_WARNING,GIT_AFFIRMATION)

#define	InfoMsgBox(info,param1, param2)	BoxMessageBox(info,param1,\
					param2,CDT_NOTIFICATION,GIT_NOTIFICATION)
#define	InfoMsgNumberBox(info,param1, number)	BoxMessageNumberBox(info,param1,\
					number,CDT_NOTIFICATION,GIT_NOTIFICATION)

#define	QuestionMsgBox(info,param1, param2)	BoxMessageBox(info,param1,\
					param2,CDT_QUESTION,GIT_AFFIRMATION)
#define	QuestionMsgNumberBox(info,param1, number)	BoxMessageNumberBox(info,param1,\
					number,CDT_QUESTION,GIT_AFFIRMATION)

/* Routine-Header for the message boxes */

word BoxMessageBox(optr info, char *param1, char *param2, word dtyp, word ityp);
word BoxMessageNumberBox(optr info, char *param, int nr, word dtyp, word ityp);


/* ------------------------ */
/* Debug message boxes     */
/* ------------------------ */

#ifndef MessageBox
#define MessageBox(txt) { \
		UserStandardDialog ( (char *)0,(char *)0,(char *)0,(char *)0,txt, \
		(( CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET) | \
		 ( GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ); \
		 }
#endif

// MessageBox not intended for debugging purposes, but to indicate
// that something was overlooked (different name, easier to grep)
#ifndef ProgError
#define ProgError(txt) { \
		UserStandardDialog ( (char *)0,(char *)0,(char *)0,(char *)0,txt, \
		(( CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET) | \
		 ( GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ); \
		 }
#endif

#ifndef MessageBoxOptr
#define MessageBoxOptr(op) { \
		UserStandardDialogOptr ( (optr)0,(optr)0,(optr)0,(optr)0,op, \
		(( CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET) | \
		 ( GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ); \
		 }
#endif

#ifndef MessageNumberBox
#define  MessageNumberBox(number) { \
		char txt[20]; \
		LocalFixedToAscii(txt,MakeWWFixed(number),0); \
		UserStandardDialog ( (char *)0,(char *)0,(char *)0,(char *)0,txt, \
		(( CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET) | \
		 ( GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ); \
		 }
#endif

#ifndef MessageDWordBox
#define  MessageDWordBox(number) { \
		char txt[14]; \
		UtilHex32ToAscii(txt,number,UHTAF_NULL_TERMINATE); \
		UserStandardDialog ( (char *)0,(char *)0,(char *)0,(char *)0,txt, \
		(( CDT_NOTIFICATION << CDBF_DIALOG_TYPE_OFFSET) | \
		 ( GIT_NOTIFICATION << CDBF_INTERACTION_TYPE_OFFSET)) ); \
		 }
#endif

/* -------------------------------------------------------------- */
