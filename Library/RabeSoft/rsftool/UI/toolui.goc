/***************************************************************************
 *
 *	File-Tool-Library
 *	Module: UI objects
 *	(c) by RABE-Soft 12/99
 *
 * 	Note: The comments were translated from German into English with the help of AI
 *	and have not been reviewed in detail. Therefore, they may sometimes sound a bit odd.
 *
 ***************************************************************************/
@include <stdapp.goh>
#include <fileEnum.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <fileEnum.h>
#include <file.h>

@include "rsftool.goh"
@include "Main/ftlocals.goh"

@start DialogBoxResource, notDetachable;

@object SelectDirOrFileDialogClass SelectDirDialog = {
	GI_visMoniker = "Select directory";
	GI_states = @default & ~GS_USABLE;
	/* Warning! If the order of the children is changed,
	   the DIALOG_CHILD_xx constants must be adjusted accordingly */
	GI_comp = @SelectDirInfoText,@DirSelector,@DirStatusText,
		@DirPathText,@SelectDirCancelTrigger,
		@SelectDirCustomTrigger,@SelectDirOKTrigger;
		HINT_CENTER_CHILDREN_HORIZONTALLY;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE
		| GIA_INITIATED_VIA_USER_DO_DIALOG
		| GIA_MODAL;
	}

@object GenTextClass DirStatusText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;	/* currently unused,
					but essential for child order */
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass DirPathText = {
	GI_attrs = @default | GA_READ_ONLY;
	GTXI_text = "";
	/*HINT_FIXED_SIZE = { SST_AVG_CHAR_WIDTHS | 42 ,
				SST_LINES_OF_TEXT | 3, 3 };*/
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass SelectDirInfoText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenFileSelectorClass DirSelector = {
	HINT_FILE_SELECTOR_NUMBER_OF_FILES_TO_SHOW = 8;
	ATTR_GEN_FILE_SELECTOR_FILE_ATTR = { 0, 0};
	GFSI_attrs = @default | FSA_SHOW_FILES_DISABLED;
	GFSI_destination = SelectDirDialog;
	GFSI_notificationMsg = MSG_SDOF_SEL_DIR_NOTIFICATION;
/*	HINT_FILE_SELECTOR_FILE_LIST_WIDTH = 45;*/
	}


@object GenTriggerClass SelectDirOKTrigger = {
	GI_visMoniker = " OK ";
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_OK;
	HINT_SEEK_REPLY_BAR;
	HINT_DEFAULT_FOCUS;
	}
@object GenTriggerClass SelectDirCancelTrigger = {
	GI_visMoniker = "Cancel";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_NO;
	}
@object GenTriggerClass SelectDirCustomTrigger = {
	GI_visMoniker = "Custom";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_YES;
	}

@object SelectDirOrFileDialogClass SelectFileDialog = {
	GI_visMoniker = "Select file";
	GI_states = @default & ~GS_USABLE;
	/* Warning! If the order of the children is changed,
	   the DIALOG_CHILD_xx constants must be adjusted accordingly */
	GI_comp = @SelectFileInfoText,@FileSelector,@FileStatusText,
		@FilePathText,@SelectFileCancelTrigger,
		@SelectFileCustomTrigger,@SelectFileOKTrigger;
		HINT_CENTER_CHILDREN_HORIZONTALLY;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE
		| GIA_INITIATED_VIA_USER_DO_DIALOG
		| GIA_MODAL;
	}

@object GenTextClass FileStatusText = {
	GI_attrs = @default | GA_READ_ONLY;
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass FilePathText = {
	GI_attrs = @default | GA_READ_ONLY;
	GTXI_text = "";
/*	HINT_FIXED_SIZE = { SST_AVG_CHAR_WIDTHS | 42 ,
				SST_LINES_OF_TEXT | 3, 3 };
	*/
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass SelectFileInfoText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenFileSelectorClass FileSelector = {
	HINT_FILE_SELECTOR_NUMBER_OF_FILES_TO_SHOW = 8;
	ATTR_GEN_FILE_SELECTOR_FILE_ATTR = { 0, 0};
	GFSI_destination = SelectFileDialog;
	GFSI_notificationMsg = MSG_SDOF_SEL_FILE_NOTIFICATION;
	HINT_DEFAULT_FOCUS;
/*	HINT_FILE_SELECTOR_FILE_LIST_WIDTH = 45;*/
	}


@object GenTriggerClass SelectFileOKTrigger = {
	GI_visMoniker = "OK";
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_OK;
	HINT_SEEK_REPLY_BAR;
	}
@object GenTriggerClass SelectFileCancelTrigger = {
	GI_visMoniker = "Cancel";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_NO;
	}
@object GenTriggerClass SelectFileCustomTrigger = {
	GI_visMoniker = "Custom";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_YES;
	}


@object GenInteractionClass InfoSortBox = {
	GI_visMoniker = "Please wait";
	GI_states = @default & ~GS_USABLE;
	/* Warning! If changed, update CHILD_NR_IVALUE! */
	GI_comp = @InfoSortGlyph,@InfoSortValue;
	HINT_ORIENT_CHILDREN_HORIZONTALLY;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE
		| GIA_INITIATED_VIA_USER_DO_DIALOG
		| GIA_MODAL;
	}
@object GenGlyphClass InfoSortGlyph = {
	GI_visMoniker = " Sorting files ...";
	}
@object GenValueClass InfoSortValue = {
	GVLI_value = 0;
	GI_attrs = @default | GA_READ_ONLY;
	}


@visMoniker	ConfirmOkMoniker ='O',"OK";
@visMoniker	ConfirmCancelMoniker ='c',"Cancel";

@visMoniker	ConfirmYesMoniker ='Y',"Yes";
@visMoniker	ConfirmNoMoniker ='N',"No";
@visMoniker	ConfirmYesAllMoniker =6,"Yes, all";

@object SelectDirOrFileDialogClass SaveFileDialog = {
	GI_visMoniker = "Save file";
	GI_states = @default & ~GS_USABLE;
	/* Warning! If the order of the children is changed,
	   the DIALOG_CHILD_xx constants must be adjusted accordingly */
	GI_comp = @SaveFileInfoText,@SaveFileSelector,
		@SaveFileDummyStatusText,	/* to ensure correct child order */
		@SaveFilePathText,
		@SaveFileCancelTrigger,
		@SaveFileCustomTrigger,@SaveFileOKTrigger,
		@SaveFileNameText,@DosFileNameInfoGlyph;
		HINT_CENTER_CHILDREN_HORIZONTALLY;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE
		| GIA_INITIATED_VIA_USER_DO_DIALOG
		| GIA_MODAL;
	}

@object GenTextClass SaveFilePathText = {
	GI_visMoniker = "Save in folder:";
	HINT_PLACE_MONIKER_ABOVE;
	GI_attrs = @default | GA_READ_ONLY;
	GTXI_text = "(path)";
/*	HINT_FIXED_SIZE = { SST_AVG_CHAR_WIDTHS | 42 ,
				SST_LINES_OF_TEXT | 3, 3 };*/
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass SaveFileInfoText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass SaveFileDummyStatusText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}

@object GenFileSelectorClass SaveFileSelector = {
	HINT_FILE_SELECTOR_NUMBER_OF_FILES_TO_SHOW = 8;
	ATTR_GEN_FILE_SELECTOR_FILE_ATTR = { 0, 0};
	GFSI_attrs = @default | FSA_SHOW_FILES_DISABLED;
	GFSI_destination = SaveFileDialog;
	GFSI_notificationMsg = MSG_SDOF_SEL_DIR_NOTIFICATION;
	HINT_DEFAULT_FOCUS;
/*	HINT_FILE_SELECTOR_FILE_LIST_WIDTH = 45;*/
	}
@object GenTextClass SaveFileNameText = {
	GI_visMoniker = 'N',"Name of file:";
	HINT_PLACE_MONIKER_ABOVE;
	GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
	GTXI_maxLength = 32;
	ATTR_GEN_TEXT_LEGAL_FILENAMES;
	GTXI_destination = SaveFileOKTrigger;
	GTXI_applyMsg = MSG_GEN_TRIGGER_SEND_ACTION;
	HINT_TEXT_WHITE_WASH_COLOR;
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	HINT_DEFAULT_FOCUS;
	}
@visMoniker NewNameInputTextMoniker = 'N',"New name for the file:";

@object GenTriggerClass SaveFileOKTrigger = {
	GI_visMoniker = "OK";
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_OK;
	HINT_SEEK_REPLY_BAR;
	}
@object GenTriggerClass SaveFileCancelTrigger = {
	GI_visMoniker = "Cancel";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_NO;
	}
@object GenTriggerClass SaveFileCustomTrigger = {
	GI_visMoniker = " Something else ";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_YES;
	}
@object GenGlyphClass DosFileNameInfoGlyph = {
	GI_visMoniker = "The file name must be of the type FILENAME.EXT.";
	GI_states = @default & ~GS_USABLE;
	}

@visMoniker SaveFileAsTitelMoniker = "Save file as";
@visMoniker SaveFileAsTextMoniker = "New name for the file:";


@object SelectDirOrFileDialogClass InputCommonDialog = {
	GI_visMoniker = "Enter name";
	GI_states = @default & ~GS_USABLE;
	/* Warning! If the order of the children is changed,
	   the DIALOG_CHILD_xx constants must be adjusted accordingly */
	GI_comp = @InputCommonInfoText,@InputCommonSelectorDummy,
		@InputCommonDummyStatusText,	/* to ensure correct child order */
		@InputCommonPathTextDummy,
		@InputCommonCancelTrigger,
		@InputCommonCustomTrigger,@InputCommonOKTrigger,
		@InputCommonNameText;
		HINT_CENTER_CHILDREN_HORIZONTALLY;
	GII_visibility = GIV_DIALOG;
	GII_attrs = @default | GIA_NOT_USER_INITIATABLE
		| GIA_INITIATED_VIA_USER_DO_DIALOG
		| GIA_MODAL;
	}

@object GenGlyphClass InputCommonPathTextDummy = {
	GI_states = @default & ~GS_USABLE;
	}
@object GenTextClass InputCommonInfoText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}
@object GenTextClass InputCommonDummyStatusText = {
	GI_attrs = @default | GA_READ_ONLY;
	GI_states = @default & ~GS_USABLE;
	GTXI_text = "";
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE;
	}

@object GenGlyphClass InputCommonSelectorDummy = {
	GI_states = @default & ~GS_USABLE;
	}
@object GenTextClass InputCommonNameText = {
	GI_visMoniker = "  ";
	HINT_PLACE_MONIKER_ABOVE;
	GTXI_attrs = @default | GTA_SINGLE_LINE_TEXT;
	GTXI_maxLength = 32;
	ATTR_GEN_TEXT_LEGAL_FILENAMES;
	GTXI_destination = InputCommonOKTrigger;
	GTXI_applyMsg = MSG_GEN_TRIGGER_SEND_ACTION;
	HINT_TEXT_WHITE_WASH_COLOR;
	HINT_EXPAND_WIDTH_TO_FIT_PARENT;
	HINT_DEFAULT_FOCUS;
	}

@object GenTriggerClass InputCommonOKTrigger = {
	GI_visMoniker = " OK ";
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_OK;
	HINT_SEEK_REPLY_BAR;
	}
@object GenTriggerClass InputCommonCancelTrigger = {
	GI_visMoniker = 'c', " Cancel ";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_NO;
	}
@object GenTriggerClass InputCommonCustomTrigger = {
	GI_visMoniker = " Something else ";
	GI_states = @default & ~GS_USABLE;
	GI_attrs = @default | GA_SIGNAL_INTERACTION_COMPLETE;
	HINT_SEEK_REPLY_BAR;
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND = IC_YES;
	}

@end DialogBoxResource;


@start InfoTextResource, data;

@chunk char InfoInputFolder[] = "Please enter name for the new folder.";

@chunk char TitleInputFolder[] = "Create new folder";

@chunk char FileNameDialogTitleSaveAs[] = "Save file as";

@chunk char FileNameDialogTitleDuplicate[] = "Duplicate file";

@chunk char FileNameDialogTitleRename[] = "Rename file";

@chunk char FileNameDialogTitleCopyNewName[] = "Copy file";


@chunk char FileCopyNewNameInfo[] = "Choose the folder and a name for the copied file.";

@chunk char FileDuplicateInfo[] = "Choose a name for the copy of the file.";

@chunk char FileRenameInfo[] = "Choose a name for the new file.";

@chunk char FileEnterFilenameInfo[] = "Enter a filename.";

@chunk char OldFileNameInfo[] = "Renaming: ";

@chunk char FileToolFileDeleteInfoText[] ="The file shown in the title is to be deleted but was not found in the expected folder. \
Select the folder in which it is located. Or click Cancel to not delete the file.";

@chunk char ErrorOpenDir[] = "An error occurred while opening the directory '\01'.";

@chunk char ErrorEnumCount[] = "The directory '\01' contains too many files. \02 files were not examined.";

@chunk char QuestionRO[] = "The file '\01' is write-protected. Should it still be deleted?";

@chunk char QuestionOverwriteRO[] = "The file '\01' is write-protected. Should it still be overwritten?";

@chunk char WarningDeleteSystem[] = "The file '\01' is a system or hidden file. Should it still be deleted?";

@chunk char WarningOverwriteSystem[] = "The file '\01' is a system or hidden file. Should it still be overwritten?";

@chunk char WarningOverwriteExec[] = "Are you sure you want to overwrite the executable file (application or library) '\01'?";

@chunk char WarningDeleteExec[] = "The file '\01' is executable (application or library). Should it still be deleted?";

@chunk char WarningDeleteGeosFile[] = "Are you sure you want to delete the GEOS file '\01'?";

@chunk char WarningOverwriteGeosFile[] = "Are you sure you want to overwrite the GEOS file '\01'?";

@chunk char WarningDeleteDOSFile[] = "Are you sure you want to delete the DOS file '\01'?";

@chunk char WarningOverwriteDOSFile[] = "Are you sure you want to overwrite the DOS file '\01'?";

@chunk char WarningDeleteLink[] = "Are you sure you want to delete the link '\01'?";

@chunk char WarningOverwriteLink[] = "Are you sure you want to overwrite the link '\01'?";

@chunk char ErrorFileDelete[] = "An error occurred while deleting the file '\01'. The file could not be deleted. Error code: \02";

@chunk char ErrorModiDosIsCurrentDir[] = "You cannot change the DOS name of the current Folder here!";

@chunk char ErrorIsSystemDir[] = "The folder '\01' is a system folder. You cannot delete or rename it.";

@chunk char ErrorAccessMemoryCommon[] = "Fatal error!\rThere is not enough memory available.";

@chunk char ErrorAccessMemory[] = "Fatal error writing to the file '\01'! There is not enough memory available.";

@chunk char ErrorAccessFile[] = "An error occurred while writing to the file '\01'.\rAccess to the file was denied.";

@chunk char ErrorWriteFile[] = "An error occurred while writing to the file '\01'. Error code: \02.";

@chunk char RenameFileExits[] = "The file '\02' could not be renamed to '\01'. A file with this name already exists.";

@chunk char RenameAccessDenied[] = "An error occurred while renaming the file '\02' to '\01'. Access to the file was denied. \
It may be in use. Would you like to try again after fixing the problem?";

@chunk char RenameAccessDenied2[] = "An error occurred while renaming the file '\02' to '\01'. Access to the file was denied.";

@chunk char RenameNotFound[] = "The file '\02' is to be renamed but was not found. Would you like to search for the file? If you click 'No', the file will not be renamed.";

@chunk char RenameNotFound2[] = "The file '\01' is to be renamed but was not found.";

@chunk char FileToolFileRenameInfoText[] = "The file shown in the title is to be renamed, but was not found in the displayed directory. \
Select the directory in which the file is located, or click 'Cancel' to not rename the file.";

@chunk char RenameInvalidName[] = "The file '\02' could not be renamed. The name '\01' is not valid for this file.";

@chunk char RenameDiskWriteProtected[] = "The disk containing the file '\01' is write-protected. Would you like to try again after fixing the problem?";

@chunk char RenameError[] = "An error occurred while renaming the file '\01'. The file could not be renamed. Would you like to try again after fixing the problem? Error code: \02";

@chunk char RenameError2[] = "An error occurred while renaming the file '\01'. The file could not be renamed. Error code: \02";

@chunk char ModifyDosFileExits[] = "The DOS name of the file '\02' could not be changed to \
'\01'. A file with this name already exists.";

@chunk char ModifyDosAccessDenied[] = "An error occurred while changing the DOS name of the file '\02' to '\01'. \
Access was denied. The file may be in use. Would you like to try again after \
resolving the issue?";

@chunk char ModifyDosAccessDenied2[] = "An error occurred while changing the DOS name of the file '\02' to '\01'. \
Access was denied.";

@chunk char ModifyDosNotFound[] = "The DOS name of the file '\02' is to be changed, \
but the file was not found. Would you like to search for the file? \
If you click 'No', the DOS name will not be changed.";

@chunk char ModifyDosNotFound2[] = "The DOS name of the file '\02' is to be changed, \
but the file was not found.";

@chunk char FileToolModifyDosNameInfoText[] = "The DOS name of the file specified in the title \
is to be changed, but the file was not found in the displayed directory. \
Select the directory where the file is located or click 'Cancel' to \
not change the DOS name.";

@chunk char ModifyDosInvalidName[] = "The DOS name of the file '\02' could not be changed. \
The name '\01' is not a valid DOS name.";

@chunk char ModifyDosDiskWriteProtected[] = "The disk containing the file '\01' \
is write-protected. Would you like to try again after \
resolving the issue?";

@chunk char ModifyDosError[] = "An error occurred while changing the DOS name of the file '\01'. \
The file could not be renamed. Would you like to try again after \
resolving the issue? Error code: \02";

@chunk char ModifyDosError2[] = "An error occurred while changing the DOS name of the file '\01'. \
The file could not be renamed. Error code: \02";


@chunk char CannotCopyFolders[] = "The file '\01' is not a file but a folder. \
Folders cannot be copied or moved with file routines. Please \
contact the programmer.";

@chunk char ErrorCopyFileToFolder[] = "The file '\01' cannot be copied \
because a folder with the name '\02' exists in the target directory.";

@chunk char ErrorOverwriteFolder[] = "'\01' cannot be overwritten \
because it is a folder and not a file.";

@chunk char ErrorDeleteFolder[] = "'\01' cannot be deleted \
because it is a folder and not a file.";

/* File size and attribute - texts */
@chunk char FileAttrTextSpace1[] = " - ";
@chunk char FileAttrTextBytes[] = " bytes, ";

@chunk char InvalidDOSName[] = "\"\01\" is not a valid name for a DOS file.";

@chunk char ErrorEmptyFileName[] = "You must enter a filename. The name field \
cannot be empty!";

@chunk char CopyOfText[] = "Copy of ";

@chunk char ErrorEmptyText[] = "You must enter something. The text field \
cannot be empty!";


@end InfoTextResource;



@start InfoText2Resource, data;

@chunk char NewAttrNotSupported[] = "An error occurred while changing the property '\02' for the \
file '\01'. This property is not supported by this file.";

@chunk char NewAttrInvalidSize[] = "An error occurred while changing the property '\02' for the \
file '\01'. The property has a different size than requested. You should contact the programmer.";

@chunk char NewAttrNotToSet[] = "An error occurred while changing the property '\02' for the \
file '\01'. The property cannot be changed for this file.";

@chunk char NewAttrAccessDenied[] = "An error occurred while changing the property '\02' for the \
file '\01'. Access to the file was denied. It may be in use. Would you like to try again after \
fixing the problem?";

@chunk char NewAttrDiskWriteProtected[] = "The disk containing the file '\01' \
is write-protected. Would you like to try again after \
fixing the problem?";

@chunk char NewAttrCommonError[] = "An error occurred while changing the property '\02' for the \
file '\01'. Would you like to try again after \
fixing the problem?";

/* FileTool-Library: Texts describing the Extended Attributes */
@chunk char TxtModification[] = "Last Modification";

@chunk char TxtFileAttr[] = "File Attributes";

@chunk char TxtSize[] = "File Size";

@chunk char TxtFileType[] = "File Type";

@chunk char TxtFlags[] = "Extended File Attributes";

@chunk char TxtRelease[] = "Release Number";

@chunk char TxtProtocol[] = "Protocol Number";

@chunk char TxtFileToken[] = "File Icon";

@chunk char TxtCreatorToken[] = "Associated Application";

@chunk char TxtUserNotes[] = "Document Notes";

@chunk char TxtCopyrightNotice[] = "Copyright Notice";

@chunk char TxtErstellung[] = "Document Creation Time";

@chunk char TxtPassword[] = "Password";

@chunk char TxtUserDefined[] = "User Defined";

@chunk char TxtName[] = "Filename";

@chunk char TxtGeodeAttr[] = "Geode Attributes";

@chunk char TxtPathInfo[] = "Path Information";

@chunk char TxtFileID[] = "File ID";

@chunk char TxtDesktopInfo[] = "Desktop Information";

@chunk char TxtDirveStaus[] = "Drive Status";

@chunk char TxtDosName[] = "DOS Name";

@chunk char TxtOwner[] = "Owner";

@chunk char TxtRights[] = "Permissions";

@chunk char TxtUnknown[] = "(*unknown*)";

@chunk char WriteProtectedCopyError[] = "The disk in drive \01 is \
write-protected. Fix the problem and then click 'OK'.";

@chunk char NoSpaceCopyError[] = "There is not enough free space on the disk in drive \02. \
The file '\01' cannot be copied or moved.";

@chunk char FormatMismatchCopyError[] = "The file to be copied is not \
of the same type (DOS file / GEOS file) as the existing file. \
Only if you are absolutely sure that you want to replace the file '\02' with \
the file '\01', click 'Yes'.";

@chunk char FormatMismatchCopyError2[] = "The existing file '\02' is not \
of the same type (DOS file / GEOS file) as the source file '\01'. \
The source file cannot be copied or moved.";

@chunk char FileIsOpenCopyError[] = "The existing file '\01' is in \
use. Fix the problem and then click 'OK'. \
Or click 'Cancel' to terminate the process.";

@chunk char FileIsOpenCopyError2[] = "The existing file '\01' is in \
use. The file '\02' cannot be copied or moved.";

@chunk char CommonCopyError[] = "An error occurred while copying the file '\01'. Error code: \02\r\
If you know how to fix the problem, resolve it and then click 'OK'. \
Or click 'Cancel' to terminate the process.";

@chunk char CommonCopyError2[] = "An error occurred while copying the file '\01'. Error code: \02";

@chunk char AccessDeniedCopyError[] = "Access to the file '\01' \
was denied. The file or disk may be write-protected \
or the file is being used by another application. \
If you know how to fix the problem, resolve it and then click 'OK'. \
Or click 'Cancel' to terminate the process.";

@chunk char AccessDeniedCopyError2[] = "Access to the file '\01' \
was denied. The file '\02' cannot be copied or moved.";

@chunk char SureForCopyRO[] = "The file '\01' is write-protected. Do you still want to \
overwrite it?";

@chunk char CopyFileNotFound[] = "An error occurred while copying the file '\01'. \
The file does not exist or you do not have access to it.";

@chunk char SureReplaceFileByFile[] = "Are you sure you want to \
overwrite the file '\01'?";

@chunk char SureReplaceFileByLink[] = "Are you sure you want to replace the file '\01' \
with a link (a pointer) to a file? The file '\02' will be \
deleted first!";

@chunk char SureReplaceLinkByFile[] = "Are you sure you want to replace the link '\01' \
with a file?";

@chunk char SureReplaceLinkByLink[] = "Are you sure you want to replace the link '\01' \
with another link?";

@chunk char NoDiskInDrive[] = "There is no disk in drive \01. \
Insert a disk and then click \"OK\". Or click \
\"Cancel\" to terminate the process.";

@chunk char DiskFull[] = "The disk in drive \01 is full. Please \
replace the disk and then click \"OK\". Or click \
\"Cancel\" to terminate the process.";

@chunk char DiskSpaceLow[] = "Warning! The disk in drive \01 has \
only \02 bytes free space. That may not be enough. \
Do you still want to use the disk?";

@chunk char InsertNewDisk[] = "Please insert a new disk!";

@end InfoText2Resource;

