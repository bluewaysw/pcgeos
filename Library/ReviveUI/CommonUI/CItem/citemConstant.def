COMMENT @----------------------------------------------------------------------

	Copyright (c) GeoWorks 1992 -- All Rights Reserved

PROJECT:	PC GEOS
MODULE:		CommonUI/CExcl (common code for lists in several specific UIs)
FILE:		cexclConstant.def

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	Chris	1/92		Initial version

DESCRIPTION:
	This file contains constants for the Excl module.

	$Id: citemConstant.def,v 1.28 97/01/06 16:08:39 brianc Exp $

------------------------------------------------------------------------------@


;Misc:

MO_CHECKMARK_WIDTH	= 7		;width of checkmark (in menu items)
MO_CHECKMARK_HEIGHT	= 8		;height of checkmark (in menu items)
MO_MENU_ITEM_DOTS_WIDTH	= 19		;"..." following menu item
					;(depends upon font)

MO_SCROLL_POPUP_ITEM_EXTRA_SPACE	equ	2	;no particular reason...

;For normal or default buttons:

CUAS_SCROLL_ITEM_MIN_WIDTH	= 6
				
					; insets to compensate for the larger
					; size of buttons in reply bars

;------------------------------------------------------------------------------
;		Misc
;------------------------------------------------------------------------------

if _ODIE
;
; insets for alphanumeric tab items with gstring monikers
;
ALPHA_TAB_INSET_X	=	2
ALPHA_TAB_INSET_Y	=	2
endif

if _JEDIMOTIF
TOOLBOX_INSET_X		=	1
TOOLBOX_INSET_Y		=	1

elseif _RUDY

TOOLBOX_INSET_X		=	0		
TOOLBOX_INSET_Y 	= 	0

elseif _ODIE

TOOLBOX_INSET_X		=	4		
TOOLBOX_INSET_Y 	= 	4		; for tabs

else

TOOLBOX_INSET_X		=	2		;insets for toolbox ITEMs
TOOLBOX_INSET_Y 	= 	2		;  (was 2 to match double-border
						;   buttons)
endif
			
if _JEDIMOTIF
BW_TOOLBOX_INSET_X	=	1
BW_TOOLBOX_INSET_Y	=	1
elif _RUDY
BW_TOOLBOX_INSET_X 	=	0		;GenBooleans...
BW_TOOLBOX_INSET_Y	=	0		
elif _ODIE
BW_TOOLBOX_INSET_X 	=	4		; tabs
BW_TOOLBOX_INSET_Y	=	4		
else
BW_TOOLBOX_INSET_X 	=	2		;leave room for 2 pixel frame...
BW_TOOLBOX_INSET_Y	=	2		;leave room for 2 pixel frame...
endif


; It is a good idea to keep exclusive ITEM spacing at -1 or 0, so that in
; vertical ITEM controls you can drag across the items and always select
; something (as supposed to releasing between items and having it revert
; back to the originally selected item).  Color ITEMs have 0 spacing to
; make highlights look right.  Black and white has -1 spacing so there are
; only single line borders.
  
OLS < 	OL_BW_EXCLUSIVE_SPACING		=	-1			>
OLS < 	OL_COLOR_EXCLUSIVE_SPACING	=	0			>
OLS <	OL_NONEXCLUSIVE_SPACING		=	4			>
   
   
MO < 	OL_BW_TOOLBOX_SPACING		=	-1			>
MO <	MO_ITEM_SPACING			=	0			>
PMAN < 	OL_BW_TOOLBOX_SPACING		=	-1			>
PMAN <	MO_ITEM_SPACING			=	0			>
NOT_MO<	MO_ITEM_SPACING			=	0			>
;NOT_MO<MO_ITEM_SPACING			=	-1			>
;If Jedi doesn't care about good ideas, it wants a gap between toolbox items
;JEDI <	OL_BW_TOOLBOX_SPACING		=	1			>
					
	OL_NON_EXCL_TOOLBOX_SPACING	=	0

USE_VIS_ATTR_FLG	= 0

if _CUA_STYLE and (not _MOTIF) and (not _PM)	;-------------------------------

if _RUDY
CHECK_HEIGHT = 10
else
endif

CHECK_WIDTH_REAL = 12
CHECK_LEFT_BORDER = 0	; Pixels in from left at which left edge of box...
CHECK_RIGHT_BORDER = 3	; Pixels in from CHECK_WIDTH at which the right edge

CHECK_BOX_WIDTH = CHECK_WIDTH_REAL + CHECK_LEFT_BORDER + 1
CHECK_TOP_BORDER = 1
CHECK_BOTTOM_BORDER = CHECK_TOP_BORDER
endif		;---------------------------------------------------------------

if _MOTIF	;---------------------------------------------------------------
if _ODIE
CHECK_HEIGHT = 24
CHECK_WIDTH_REAL = 24
else
CHECK_HEIGHT = 9	; was 12...
CHECK_WIDTH_REAL = 9	; was 12...
endif
CHECK_LEFT_BORDER = 2	; Pixels in from left at which left edge of box...
CHECK_RIGHT_BORDER = 3	; Pixels in from CHECK_WIDTH at which the right edge

if _JEDIMOTIF
CHECK_BOX_OFFSET = 2
else
CHECK_BOX_OFFSET = 5
endif
CHECK_BOX_WIDTH = CHECK_WIDTH_REAL + CHECK_LEFT_BORDER + CHECK_BOX_OFFSET
CHECK_TOP_BORDER = 1
CHECK_BOTTOM_BORDER = CHECK_TOP_BORDER
endif		;---------------------------------------------------------------

if _PM		;---------------------------------------------------------------
CHECK_WIDTH = 16
CHECK_HEIGHT = 12
CHECK_WIDTH_REAL = 13
CHECK_LEFT_BORDER = 2	; Pixels in from left at which left edge of box...
CHECK_RIGHT_BORDER = 3	; Pixels in from CHECK_WIDTH at which the right edge

CHECK_BOX_OFFSET = 5
CHECK_BOX_WIDTH = CHECK_WIDTH_REAL + CHECK_LEFT_BORDER + CHECK_BOX_OFFSET
CHECK_TOP_BORDER = 1
CHECK_BOTTOM_BORDER = CHECK_TOP_BORDER
endif		;---------------------------------------------------------------

if _OL_STYLE	;---------------------------------------------------------------
CHECK_HEIGHT = 11
CHECK_WIDTH_REAL = 13
CHECK_WIDTH = 16
CHECK_TOP_BORDER = 1	   ; Pixels in from top at which top edge of box resides
CHECK_LEFT_BORDER = 4	   ; Pixels in from left at which left edge of box...
CHECK_BOTTOM_BORDER =1	   ; Pixels in from bottom at which bottom...
CHECK_RIGHT_BORDER = 2	   ; Pixels in from CHECK_WIDTH at which the right edge
			   ; of the box actually resides
CHECK_REAL_RIGHT_BORDER=3  ; any space to the right of the entire checkbox
CHECK_BOX_WIDTH = CHECK_WIDTH_REAL - CHECK_RIGHT_BORDER + 1
CHECK_BOX_OFFSET = 4
endif		;---------------------------------------------------------------

if _CUA_STYLE or (not _MOTIF) and (not _PM)	;-------------------------------
RADIO_HEIGHT = 10
RADIO_WIDTH_REAL = 11
RADIO_WIDTH = 16
RADIO_TOP_BORDER = 2	; Pixels in from top at which top edge of box resides
RADIO_LEFT_BORDER = 0	; Pixels in from left at which left edge of box...
RADIO_BOTTOM_BORDER =0	; Pixels in from bottom at which bottom...
RADIO_RIGHT_BORDER = 4	; Pixels in from RADIO_WIDTH at which the right edge
			; of the box actually resides
RADIO_BOX_WIDTH = RADIO_WIDTH_REAL - RADIO_RIGHT_BORDER + 1

MO_ITEM_INSET_LEFT	=	RADIO_WIDTH_REAL + 3
MO_ITEM_INSET_RIGHT	=	7
MO_ITEM_INSET_Y		=	2
endif		;---------------------------------------------------------------
   
if _MOTIF 	;--------------------------------------------------------------
DIAMOND_HEIGHT = 11
if _ODIE
RADIO_HEIGHT = 22
RADIO_WIDTH_REAL = 22
else
RADIO_HEIGHT = 9
RADIO_WIDTH_REAL = 11
endif
if _JEDIMOTIF
RADIO_WIDTH = RADIO_WIDTH_REAL
else
RADIO_WIDTH = 16
endif
RADIO_TOP_BORDER = 1	; Pixels in from top at which top edge of box resides
RADIO_LEFT_BORDER = 2	; Pixels in from left at which left edge of box...
RADIO_BOTTOM_BORDER =1	; Pixels in from bottom at which bottom...
RADIO_RIGHT_BORDER = 3	; Pixels in from RADIO_WIDTH at which the right edge
			; of the box actually resides
RADIO_BOX_WIDTH = RADIO_WIDTH_REAL - RADIO_RIGHT_BORDER + 1

if _JEDIMOTIF
MO_ITEM_INSET_LEFT	=	RADIO_WIDTH_REAL + RADIO_LEFT_BORDER
elseif _ODIE
MO_ITEM_INSET_LEFT	=	CHECK_WIDTH_REAL + 3 + CHECK_LEFT_BORDER
	; For Odie, use the width of the check box to determine the left
	; moniker inset since the Odie check box is wider than the Odie 
	; radio button (the reverse of standard Motif).
else
MO_ITEM_INSET_LEFT	=	RADIO_WIDTH_REAL + 3 + RADIO_LEFT_BORDER
endif
MO_ITEM_INSET_RIGHT	=	7

if _RUDY
MO_ITEM_INSET_Y	=	0
elif _ODIE
MO_ITEM_INSET_Y =	0
else
MO_ITEM_INSET_Y	=	2
endif

endif		;--------------------------------------------------------------


if _PM	 	;--------------------------------------------------------------
DIAMOND_HEIGHT = 11
RADIO_HEIGHT = 10
RADIO_WIDTH_REAL = 11
RADIO_WIDTH = 16
RADIO_TOP_BORDER = 1	; Pixels in from top at which top edge of box resides
RADIO_LEFT_BORDER = 4	; Pixels in from left at which left edge of box...
RADIO_BOTTOM_BORDER =1	; Pixels in from bottom at which bottom...
RADIO_RIGHT_BORDER = 3	; Pixels in from RADIO_WIDTH at which the right edge
			; of the box actually resides
RADIO_BOX_WIDTH = RADIO_WIDTH_REAL - RADIO_RIGHT_BORDER + 1

MO_ITEM_INSET_LEFT	=	RADIO_WIDTH_REAL + 3 + RADIO_LEFT_BORDER
MO_ITEM_INSET_RIGHT	=	7
MO_ITEM_INSET_Y	=	2
endif		;--------------------------------------------------------------

   
SLIST_DEFAULT_ITEMS_SHOWN = 5		; Default number of entries to display
					; at one time if none is given
CGA_SLIST_DEFAULT_ITEMS_SHOWN = 5	; Default for CGA vertical lists

SLIST_MAXIMUM_DEFAULT_SIZE = 400	; Maximum default size in general

if _OL_STYLE	;---------------------------------------------------------------
SLIST_HORIZ_MARGIN	= 5		; Left & right margin for the list
SLIST_VERT_MARGIN	= 5		; Top & bottom margin for the list
SLIST_SCROLLBAR_MARGIN	= 4		; Distance btwn list & scrollbar
SLIST_SCROLLBAR_WIDTH	= SLIST_SCROLLBAR_MARGIN + SCROLLBAR_WIDTH
					; Total width of scrollbar & margin
					; (distance bwtn list & right margin)
endif		;---------------------------------------------------------------

if _CUA_STYLE	;---------------------------------------------------------------
MO_SLIST_HORIZ_MARGIN	  = 1		; Left & right margin for the list
MO_SLIST_VERT_MARGIN	  = 1		; Top & bottom margin for the list
			  
CUA < MO_SLIST_SCROLLBAR_MARGIN = -1	; Distance btwn list & scrollbar   >
MAC < MO_SLIST_SCROLLBAR_MARGIN = -1	; Distance btwn list & scrollbar   >
MO  < MO_SLIST_SCROLLBAR_MARGIN	 = 4	; 				   >
PMAN < MO_SLIST_SCROLLBAR_MARGIN = 4	; 				   >

MO_SLIST_SCROLLBAR_WIDTH  = MO_SLIST_SCROLLBAR_MARGIN + MO_SCROLLBAR_WIDTH
					; Total width of scrollbar & margin
					; (distance bwtn list & right margin)
   
endif		;---------------------------------------------------------------
		
SCROLL_ITEM_INSET_X	= 2

if _RUDY
MO_SCROLL_ITEM_INSET_Y	= 0
MO_SCROLL_ITEM_INSET_X	= 0
elseif _ODIE
MO_SCROLL_ITEM_INSET_Y	= 3
MO_SCROLL_ITEM_INSET_X	= 3
elseif _JEDIMOTIF
MO_SCROLL_ITEM_INSET_Y	= 1
MO_SCROLL_ITEM_INSET_X	= 12
else
MO_SCROLL_ITEM_INSET_Y	= 1
MO_SCROLL_ITEM_INSET_X	= SCROLL_ITEM_INSET_X
endif



if _RUDY
   RUDY_FILE_SELECTOR_EXTRA_Y	equ	2	;Extra space added in to items
						;  for File Selectors only

   ITEM_RIGHT_MARK_Y_OFFSET	equ	0
   ITEM_RIGHT_MARK_X_OFFSET	equ	6	;Should be same as 
						;  CTRL_RIGHT_MARK_X_OFFSET!

   CHECK_MAGIC_EXTRA_SPACE 	equ	0	; MO_CONTROL_MKR_X_SPACING
		;Unclear extra space needed for center-by-monikers calculations
		; for Booleans (I give up), used in ItemDrawBWHighlight,
		; OLCheckedItemGetLargestCenter, & OLItemInsetIfCenteredBoolean

endif


;------------------------------------------------------------------------------
;			Global symbols
;------------------------------------------------------------------------------

global UpdateItemState:far
