/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1992 -- All Rights Reserved
 *
 * PROJECT:	  PCGEOS
 * MODULE:	  prefsnd
 * FILE:	  prefsnd.ui
 *
 * AUTHOR:  	  Gene Anderson: Aug 25, 1992
 *
 * REVISION HISTORY:
 *	Date	  Name	    Description
 *	----	  ----	    -----------
 *	8/25/92	  gene	    Initial version
 *
 * DESCRIPTION:
 *	UI for Sound module of Preferences
 *
 *
 * 	$Id: prefsnd.ui,v 1.3 98/04/24 01:55:44 gene Exp $
 *
 ***********************************************************************/

#include "generic.uih"
#include "config.uih"

#ifdef GPC_VERSION
#include "Art/mkrPrefGPC.ui"
#else
#include "Art/mkrPrefSnd.ui"
#endif
	#define _NIKE 	0

class PrefSndDialog = PrefDialog {
}

#ifdef GPC_VERSION
class ChannelVolume = PrefValue {
	originalVolumeBalance = wordComp:0;
}
class ChannelBalance = PrefValue {
}
class MyPrefItemGroup = PrefItemGroup {
}
#endif

/**************************************************************************
 *	UI FOR SOUND
 **************************************************************************/ 
start	PrefSndUI;


PrefSndTitle = TitledGlyph {
	moniker = list {
		PrefSndTextMoniker,
#ifdef GPC_VERSION
		PrefGPCMoniker
#else
		PrefSndHCMoniker,
		PrefSndLCMoniker,
		PrefSndLMMoniker,
		PrefSndLCGAMoniker
#endif
	}
}


PrefSndRoot = PrefSndDialog {
	moniker = "Sound";
	attributes = default +modal, +notUserInitiatable;
	visibility = dialog;
	type = properties;
	genStates = default -usable;
	children =
		PrefSndTitleGroup,
#ifdef GPC_VERSION
		PrefSndSubgroup,
	        PrefSndVolumeGroup,
	        PrefTriggerGroup;
#else
		PrefSndSubgroup;
#endif
	hints = {
		HINT_INTERACTION_SINGLE_USAGE,
#ifndef GPC_VERSION
		HINT_INTERACTION_COMPLEX_PROPERTIES,
#endif
		ATTR_GEN_HELP_CONTEXT {
			char "dbSound",0
		} 
	}
}

#ifdef GPC_VERSION
PrefSndVolumeGroup = GenInteraction {
    children = PrefVolumeTextGroup, PrefDummy, PrefVolume, PrefVolumeBalance;
    hints = {
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	HINT_CENTER_CHILDREN_HORIZONTALLY
    }
}
PrefVolumeTextGroup = GenInteraction {
    children = PrefVolumeText;
    hints = {
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	HINT_RIGHT_JUSTIFY_CHILDREN
    }
}
PrefDummy = GenGlyph {
    hints = {
	HINT_GLYPH_SEPARATOR,
	HINT_FIXED_SIZE {
	    SpecWidth <>
	    SpecHeight <SST_PIXELS, 10>
	}
    }
}

PrefVolumeText = GenText {
    genAttributes = readOnly;
    text = "You can adjust the sound volume by dragging the slider below.";
    hints = {
	HINT_FIXED_SIZE {
	    SpecWidth <SST_PIXELS, 360>
	    SpecHeight <>
	},
	ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE
    }
}

PrefVolume = ChannelVolume {
    moniker = 'V', "Volume:";
    maximum = "MIXER_LVL_MAX";
    minimum = "MIXER_LVL_MIN";
    incrementFrac = "((MIXER_LVL_MAX - MIXER_LVL_MIN) * 65536 / SOUND_INC_FACTOR) and 0xffff";
    increment = "(MIXER_LVL_MAX - MIXER_LVL_MIN) / SOUND_INC_FACTOR";
    destination = PrefVolume;
    hints = {
	HINT_VALUE_ANALOG_DISPLAY,
	HINT_VALUE_NO_DIGITAL_DISPLAY,
	ATTR_GEN_VALUE_STATUS_MSG {
	    word MSG_CV_TEST_VOLUME
	}
    }
}

PrefVolumeBalance = ChannelBalance {
    moniker = 'B', "Balance:";
    maximum = "SOUND_BALANCE_MAX";
    minimum = 0;
    incrementFrac = "(SOUND_BALANCE_MAX * 65536 / SOUND_INC_FACTOR) and 0xffff";
    increment = "SOUND_BALANCE_MAX / SOUND_INC_FACTOR";
    value = "SOUND_BALANCE_MAX / 2";
    destination = PrefVolume;
    hints = {
	HINT_VALUE_ANALOG_DISPLAY,
	HINT_VALUE_NO_DIGITAL_DISPLAY,
	ATTR_GEN_VALUE_STATUS_MSG {
	    word MSG_CV_TEST_VOLUME
	}
    }
}

PrefTriggerGroup = GenInteraction {
    children = PrefSndOK, PrefSndClose;
    hints = {
	HINT_ORIENT_CHILDREN_HORIZONTALLY
    }
}

PrefSndOK = GenTrigger {
    moniker = 'C', "Change";
    genStates = default -enabled;
    genAttributes = signalInteractionComplete;
    hints = {
	HINT_SEEK_REPLY_BAR,
	HINT_INTERACTION_SINGLE_USAGE,
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
	    word IC_APPLY
	}
    }
}

PrefSndClose = GenTrigger {
    moniker = 'D', "Don't Change";
    hints = {
	HINT_SEEK_REPLY_BAR,
	HINT_INTERACTION_SINGLE_USAGE,
	ATTR_GEN_TRIGGER_INTERACTION_COMMAND {
	    word IC_DISMISS
	}
    }
}
#endif

PrefSndTitleGroup = GenInteraction {
	children =
		PrefSndTitle,
		PrefSndHelp;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY
	}
}

PrefSndHelp = GenText {
	genAttributes = readOnly;
#ifdef GPC_VERSION
	text = "You can turn the sound produced by programs for such things as errors, alarms, and certain game sounds on and off.";
#else
	text = "The sounds produced by applications for errors, alarms, and other reasons can be turned on and off, and a sound driver can be selected.";
#endif
	hints = {
                  ATTR_GEN_TEXT_NEVER_MAKE_SCROLLABLE,
		  HINT_FIXED_SIZE {
#ifdef GPC_VERSION
			SpecWidth <SST_PIXELS, 360>
#else
			SpecWidth <SST_PIXELS, 425>
#endif
			SpecHeight <>
		  }
	}
}

PrefSndSubgroup = PrefInteraction {
	children =
		SoundEnableList
#ifdef GPC_VERSION
	    ;
#else
	    , SoundDriverList;
#endif
	hints = {
		HINT_ORIENT_CHILDREN_VERTICALLY,
		HINT_CENTER_CHILDREN_HORIZONTALLY,
		HINT_EXPAND_WIDTH_TO_FIT_PARENT
	}
}

#ifdef GPC_VERSION
SoundEnableList = MyPrefItemGroup {
#else
SoundEnableList = PrefItemGroup {
#endif
	moniker = 'S',"Sound:";
	children = SoundEnable, SoundDisable;
	numSelections  = 1;
	selection =  TRUE;
	hints = {
		HINT_ORIENT_CHILDREN_HORIZONTALLY,
		ATTR_GEN_ITEM_GROUP_INIT_FILE_BOOLEAN,
		ATTR_GEN_INIT_FILE_CATEGORY {
			char "ui",0
		},
		ATTR_GEN_INIT_FILE_KEY {
			char "sound",0
		}
	}
}

SoundEnable = GenItem {
 	moniker = "On";
	identifier = TRUE;
}

SoundDisable = GenItem {
	moniker = "Off";
	identifier = FALSE;	
}

#ifndef GPC_VERSION
SoundDriverList = PrefTocList vardataReloc {
	moniker = "Sound Driver";
	prefAttrs = default +rebootIfChanged;
	tocFlags = default +extendedDeviceDrivers;
	tokenChars = "'SNDD'";
	hints = {
		HINT_DRAW_IN_BOX,
		HINT_ITEM_GROUP_SCROLLABLE,
		HINT_FIXED_SIZE {
			SpecWidth <SST_AVG_CHAR_WIDTHS, 50>
			SpecHeight <SST_LINES_OF_TEXT, 4>
			word	4
		},
		HINT_PLACE_MONIKER_ABOVE,
		ATTR_GEN_INIT_FILE_CATEGORY { char "sound",0 },
		ATTR_GEN_INIT_FILE_KEY { char "device",0 },
		ATTR_GEN_PATH_DATA {
			GenFilePath <SP_SYSTEM,"SOUND">
		},
		ATTR_PREF_REBOOT_STRING {
			UN_OPTR	SoundDriverRebootString
		}
	}
}
#endif  // GPC_VERSION

end	PrefSndUI;

start	Strings, data;

#ifndef GPC_VERSION
chunk SoundDriverRebootString = "sound driver";
#endif  // GPC_VERSION


visMoniker PrefSndTextMoniker = "Sound";

visMoniker PrefSndMonikerList = list {
		PrefSndTextMoniker,
#ifdef GPC_VERSION
		PrefGPCMoniker
#else
		PrefSndHCMoniker,
		PrefSndLCMoniker,
		PrefSndLMMoniker,
		PrefSndLCGAMoniker
#endif
}

end	Strings;
