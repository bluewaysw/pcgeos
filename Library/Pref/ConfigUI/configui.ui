/***********************************************************************
 *
 *	Copyright (c) Designs in Light 2002 -- All Rights Reserved
 *
 ***********************************************************************/

#include "generic.uih"
#include "config.uih"
#include "Art/mkrConfigUI.ui"

class ConfigUIDialog = PrefDialog {
}

class ConfigUIList = PrefDynamicList {
    static /* array chunk */ optrComp : null;
    static /* dirty */ byteComp : 0;
}

class StartupList = ConfigUIList {
}
class FileAssocList = ConfigUIList {
}
class IconTokenList = GenDynamicList {
    static /* array */ hptrComp : null;
}

class SectionsPref = PrefItemGroup {
    static /* changed */ byteComp : 0;
}

#include "configuiExpress.ui"
#include "configuiApp.ui"
#include "configuiInterface.ui"
#include "configuiAdvanced.ui"
#include "configuiAppearance.ui"
#include "configuiFileMgr.ui"

/**************************************************************************
 *	UI settings
 **************************************************************************/ 
start	ConfigUIUI;


ConfigUITitle = TitledGlyph {
    moniker = list {
	ConfigUITextMoniker,
		ConfigUIHCMoniker,
	    ConfigUILCMoniker,
	    ConfigUILMMoniker,
	    ConfigUILCGAMoniker
    }
}

ConfigUIRoot = ConfigUIDialog {
    moniker = "Configure UI";
    prefAttrs = default +rebootIfChanged;
    attributes = default +modal, +notUserInitiatable;
    visibility = dialog;
    type = properties;
    genStates = default -usable;
    children =
	ConfigUITitleGroup,
	ConfigUISubgroup;
    hints = {
	HINT_INTERACTION_SINGLE_USAGE,
	HINT_INTERACTION_COMPLEX_PROPERTIES,
	ATTR_GEN_HELP_CONTEXT {	char "dbConfigUI",0 } 
    }
}


ConfigUITitleGroup = GenInteraction {
    children =
	ConfigUITitle,
	ConfigUIHelp;
    hints = {
	HINT_ORIENT_CHILDREN_HORIZONTALLY
    }
}

ConfigUIHelp = GenText {
    genAttributes = readOnly;
    text = "Fine-tune the settings for the user interface.";
    hints = {
	HINT_FIXED_SIZE {
	    SpecWidth <SST_PIXELS, 430>
	    SpecHeight <>
	}
    }
}

ConfigUISubgroup = PrefInteraction {
    children =
	SectionList, ConfigUISubgroupHolder;
    hints = {
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
	HINT_MINIMIZE_CHILD_SPACING
    }
}

ConfigUISubgroupHolder = PrefInteraction {
    children =
	AppearanceSettings,
	AppSettings,
	ExpressSettings,
	InterfaceSettings,
	AdvancedSettings,
	DriveSettings;
    hints = {
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	HINT_EXPAND_HEIGHT_TO_FIT_PARENT,
	HINT_RAISED_FRAME { word mask GRFI_LEFT or \
			    mask GRFI_RIGHT or mask GRFI_BOTTOM }
    }
}

SectionList = SectionsPref vardataReloc {
    prefAttrs = default +rebootIfChanged;
    children =
	SLAppearance,
	SLApp,
	SLExpress,
	SLInterface,
	SLAdvanced,
	SLFileMgr;
    destination = "TO_SELF";
    selection = CUIS_APPEARANCE;
    hints = {
	HINT_ITEM_GROUP_TAB_STYLE,
	ATTR_GEN_ITEM_GROUP_STATUS_MSG {
	    word MSG_SP_SECTION_CHANGED
	},
	HINT_EXPAND_WIDTH_TO_FIT_PARENT,
	ATTR_PREF_REBOOT_STRING {
	    UN_OPTR	ConfigUIMultiChangeRebootString
	}
    }
}

SLApp = GenItem {
    moniker = "Applications";
    identifier = CUIS_APPLICATIONS;
}

SLExpress = GenItem {
    moniker = "Express Menu";
    identifier = CUIS_EXPRESS_MENU;
}

SLInterface = GenItem {
    moniker = "Interface";
    identifier = CUIS_INTERFACE;
}

SLAdvanced = GenItem {
    moniker = "Advanced";
    identifier = CUIS_ADVANCED;
}

SLFileMgr = GenItem {
    moniker = "File Manager";
    identifier = CUIS_FILE_MGRS;
}

SLAppearance = GenItem {
    moniker = "Appearance";
    identifier = CUIS_APPEARANCE;
}

end	ConfigUIUI;

start	Strings, data;

chunk ConfigUIExpressRebootString = "express menu settings";
chunk ConfigUIAppSettingsRebootString = "application settings";
chunk ConfigUIInterfaceSettingsRebootString = "interface settings";
chunk ConfigUIAdvancedSettingsRebootString = "advanced settings";
chunk ConfigUIDriveSettingsRebootString = "file manager settings";
chunk ConfigUIColorRebootString = "UI color";
chunk ConfigUIRebootString = "UI and will reset the state files";
chunk ConfigUIFontRebootString = "font size";
chunk ConfigUIMultiChangeRebootString = "settings for one or more areas";

chunk ISUIName = "ISUI";
localize "long filename of isui.geo";

visMoniker ConfigUITextMoniker = "Configure UI";

visMoniker ConfigUIMonikerList = list {
		ConfigUITextMoniker,
		ConfigUIHCMoniker,
		ConfigUILCMoniker,
		ConfigUILMMoniker,
		ConfigUILCGAMoniker
}

end	Strings;
