/* Add this ps2pdf.geo to make work pscript.geo in Freegoes. */

@include "ps2pdf.goh"

@start Strings, data;

/* strings in ckp_mtds.goc */
@chunk char aOne[] = "..\\\\";
@chunk char aTwo[] = " "; 
@chunk char aThree[] = ".pdf";
@chunk char pOne[] = "gs510";
@chunk char pTwo[] = "gs510\\ps2pdf.bat";

@end Strings;
/*-------------------------------------------------------------------------
 | Routine:  ConvertToPDF
 *-------------------------------------------------------------------------
 | Description:
 |     Takes the ps name (with .PS), drops to DOS and converts
 |     Returns any error from dropping to DOS
 |
 | Inputs:
 |    char *name
 |
 |
 | Revision History:
 |    Who  Date:     Comments:
 |    ---  --------  ---------
 |    jfh  04/11/14  Created
 |
 *-----------------------------------------------------------------------*/
word _pascal ConvertToPDF(char* name)
{
word	i, p2perror = 0;
char  path[50], argString[50];

	/* null out the strings */
	for (i = 0; i < 50; i++) {
		argString[i] = 0;
		path[i] = 0;
		}

	/* build the string that is the argument to the DOS convert routine
		which is run by the batch file */
	MemLock (OptrToHandle(@aOne));
	strcpy(argString, LMemDeref(@aOne));
	strcat(argString, name);
	strcat(argString, LMemDeref(@aTwo));
	/* cut the .PS off name */
	name[strlen(name) - 3] = 0;
	strcat(argString, name);
	strcat(argString, LMemDeref(@aThree));

	/* set up the path */
	FilePushDir();
	FileSetStandardPath(SP_SPOOL);
	FileSetCurrentPath(0, LMemDeref(@pOne));
	strcpy(path, LMemDeref(@pTwo));

	/* DosExec returns 0 if successful */
	p2perror = DosExec(
						path,
						SP_SPOOL,
						argString,
						LMemDeref(@pOne),
						SP_SPOOL,
						/* let's not prompt for return DEF_PROMPT*/ 0);

	/* do some clean up */
	MemUnlock (OptrToHandle(@aOne));
	FilePopDir();

	return (p2perror);

}
