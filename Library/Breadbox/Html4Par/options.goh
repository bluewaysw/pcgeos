/***********************************************************************
 *
 * PROJECT:       HTMLPars
 * FILE:          options.goh
 *
 * AUTHOR:        Marcus Grï¿½ber and Lysle Shields
 *
 ***********************************************************************/

/* This contains all the compile time options. */

/* Choose one of the following */
//#define YAGO_2_BUILD
//@define YAGO_2_BUILD
#define WEBMAGIC_FOR_GEOS_3
@define WEBMAGIC_FOR_GEOS_3
//#define WEBMAGIC_FOR_GEOS_2
//@define WEBMAGIC_FOR_GEOS_2


/* Turn on the following option to create a verbose log of table formatting */
#if 0
#define COMPILE_OPTION_OUTPUT_LAYOUT_LOG
#define SPREAD_DISPLAY_ON
#endif

/* Uncomment the following to generate dotted boxes around regions to */
/* help see where the text regions are in the formatting */
#define COMPILE_OPTION_REGION_OUTLINES 0

/* Flag to make regions with non-rectangular shapes fill with a brown mask */
/* to show where the mask really is */
#define COMPILE_OPTION_FILL_REGION_SHAPES 0

/* Uncomment the following to enable strong heap checking through hwlib lib */
//#define DO_HW_CHECKSUM_CHECKING

/*
@define COMPILE_OPTION_CHECK_NAME_TOKENS
*/

//#define NAME_POOL_LOG_ON

@ifdef YAGO_2_BUILD
/* Turn on the following option to add SYM buttons toggling the floating
   keyboard in the modal dialog boxes used for form text entires. */
@define COMPILE_OPTION_SYM_BUTTON
@endif

@ifdef WEBMAGIC_FOR_GEOS_3
/* Turn on the following option to use ALT attribute in INPUT TYPE=TEXT
   objects as prompt in input dialog. */
@define COMPILE_OPTION_TEXT_PROMPT
/* Turn on to remove extra space at top of page if page starts with table */
#define NO_TOP_SPACE
@endif

/* Turn on to use in-place text entry, if turned off, remove stuff from .gp */
@define IN_PLACE_TEXT_ENTRY
#define IN_PLACE_TEXT_ENTRY -1

/* Turn on to use in-place select list, if turned off, remove stuff from .gp */
@define IN_PLACE_SELECT_LIST
#define IN_PLACE_SELECT_LIST -1

//#define COMPILE_OPTION_FORMAT_CHECKING

#ifdef COMPILE_OPTION_FORMAT_CHECKING

#define FC(line)                     line
#define FC_ERROR(code)               FatalError(code)
#define FC_ERROR_IF(test, code)      if (test) FatalError(code)
#define NFC(line)
#define FC_WARNING_IF(test, code)    if (test) CWarningNotice(code)
#define FC_WARNING(code)             CWarningNotice(code)

#else

#define FC(line)
#define FC_ERROR(code)
#define FC_ERROR_IF(test, code)
#define NFC(line)                    line
#define FC_WARNING_IF(test, code)
#define FC_WARNING(code)

#endif

/* Turn on this flag to make the code use huge arrays for regions */
/* instead of the smaller stuff. */
#define COMPILE_OPTION_HUGE_ARRAY_REGIONS   0

/* Turn on to use cells in a huge array instead of an optr to a */
/* chunk array */
#define COMPILE_OPTION_HUGE_ARRAY_CELLS     1

/* Turn on the following flag if you want the tables stored in a */
/* huge array instead of a chunk array.  Usually done with you */
/* turn on huge array cells. */
#define COMPILE_OPTION_HUGE_ARRAY_TABLES    1

/* Setup fonts to be bitmap or not */
/*
@define COMPILE_OPTION_BITMAP_FONTS
*/
#define DEFAULT_BITMAP_FONT                 FID_BERKELEY

@ifdef COMPILE_OPTION_BITMAP_FONTS
#define DEFAULT_FORMS_FONT                  FID_BERKELEY
@else
#define DEFAULT_FORMS_FONT                  FID_DTC_URW_SANS
@endif

/* This option makes horizontal scrollbars always appear (unless */
/* the frame has no scrollbars).  This is done to avoid flashing */
/* and reformatting caused by the scrollbar appearing and disappearing. */
@define COMPILE_OPTION_VERTICAL_SCROLLBARS_ON

#define COMPILE_OPTION_PROFILING_ON  0

/* These C wrappers should be obsolete, because the fixes have meanwhile */
/* become part of the official kernel (definitely GEOS6 or later). */
#define COMPILE_OPTION_USE_FIXED_C_WRAPPERS  0
#if COMPILE_OPTION_USE_FIXED_C_WRAPPERS

extern void *   /*XXX*/
    _pascal ChunkArrayElementToPtrFixed(optr arr, word elementNumber, word *elementSize);
#define ChunkArrayElementToPtr(a, b, c)  ChunkArrayElementToPtrFixed(a, b, c)

extern word     /*XXX*/
    _pascal ChunkArrayGetCountFixed(optr arr);
#define ChunkArrayGetCount(arr)  ChunkArrayGetCountFixed(arr)

extern dword		/*XXX*/
    _pascal HugeArrayLockFixed(VMFileHandle vmFile, VMBlockHandle vmBlock,
	          dword elemNum, void **elemPtr, word *elemSize);
#define HugeArrayLock(f, b, n, p, s)  HugeArrayLockFixed(f, b, n, p, s)

extern void		/*XXX*/
    _pascal HugeArrayUnlockFixed(void *elemPtr);
#define HugeArrayUnlock(p)  HugeArrayUnlockFixed(p)

extern void		/*XXX*/
    _pascal HugeArrayDirtyFixed(const void *elemPtr);
#define HugeArrayDirty(p)   HugeArrayDirtyFixed(p)

extern word		/*XXX*/
    _pascal HugeArrayNextFixed(void **elemPtr, word *size);
#define HugeArrayNext(p, s)  HugeArrayNextFixed(p, s)

extern word		/*XXX*/
    _pascal HugeArrayPrevFixed(void **elemPtr1, void **elemPtr2, word *size);
#define HugeArrayPrev(p, q, s)  HugeArrayPrevFixed(p, q, s)

#endif
