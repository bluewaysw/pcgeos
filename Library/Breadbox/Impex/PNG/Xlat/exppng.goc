/***********************************************************************
 *
 * MODULE:    exppng (PNG Export)
 * FILE:      exppng.goc
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *              Include files
 ***************************************************************************
 */

@include <stdapp.goh>
@include <impex.goh>

#include "pnglib.h"
#include <xlatLib.h>
@include <extgraph.goh>


/****************************************************************************
*  GLOBALS
****************************************************************************/


/**************************************************************************/

dword _pascal PngExport(ExportFrame *frame)
{
    PngError gstat = PE_NO_ERROR;
    EGError egstat = EGE_NO_ERROR;
    VMBlockHandle bmblock;
    BMType desttype;
    word *optptr;

    if(!frame->EF_transferVMChain) return(TE_ERROR);

    // get the selected output format
    if(frame->EF_exportOptions)
    {
        // getting and prepairing options
        optptr = (word*) MemLock(frame->EF_exportOptions);

        if(optptr)
        {
            desttype = *optptr;
            MemUnlock(frame->EF_exportOptions);
        }
        else
        {
            return(TE_ERROR);
        }
    }
    else
    {
        return(TE_ERROR);
    }

    if(desttype == BMF_4BIT) desttype |= BMT_PALETTE;
    if(desttype == BMF_8BIT) desttype |= BMT_PALETTE;
    if(desttype == BMF_24BIT) desttype |= BMT_MASK;

    // convert gstring to bmp
    bmblock = BmpGStringToBitmap(
        frame->EF_transferVMFile,
        VMCHAIN_GET_VM_BLOCK(frame->EF_transferVMChain),
        frame->EF_transferVMFile,
        desttype,
        &egstat);

    if(egstat != EGE_NO_ERROR)
    {
        // error code translation
        switch(egstat)
        {
            case EGE_BLOCK_LOCKING_FAILURE:
            case EGE_CANT_CREATE_BITMAP:
                return(TE_OUT_OF_MEMORY);

            case EGE_ILLEGAL_BITMAP_SIZE:
                return(TE_INVALID_FORMAT);

            default:
                return(TE_ERROR);
        }
    }

    if(!bmblock) return(TE_OUT_OF_MEMORY);

    gstat = pngExportBitmapFHandle(frame->EF_transferVMFile, bmblock, frame->EF_outputFile);

    // free bmblock
    VMFreeVMChain(frame->EF_transferVMFile, VMCHAIN_MAKE_FROM_VM_BLOCK(bmblock));

    if(gstat != PE_NO_ERROR)
    {
        // error code translation
        switch(gstat)
        {
            case PE_WRITE_PROBLEM:
                return(TE_FILE_WRITE);

            case PE_BLOCK_LOCK_FAILURE:
            case PE_OUT_OF_MEMORY:
                return(TE_OUT_OF_MEMORY);

            case PE_INVALID_BITMAP:
                return(TE_EXPORT_ERROR);

            default:
                return(TE_ERROR);
        }
    }

    return(TE_NO_ERROR);
}
