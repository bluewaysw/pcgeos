/***********************************************************************
 *
 * MODULE:    imppng.goc (PNG Import)
 * FILE:      imppng.goc
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *      Include files
 ***************************************************************************
 */

@include <stdapp.goh>
@include <impex.goh>
@include <Objects/colorC.goh>
@include <Objects/gItemGC.goh>
@include <Objects/gValueC.goh>
#include <pnglib.h>
#include <heap.h>
#include <graphics.h>
#include <color.h>
#include <xlatLib.h>


dword _pascal
PngImport(ImportFrame *frame, VMChain *chain)
{
    VMBlockHandle bmblock;
    pngAlphaTransformData pngAlphaTransform;

    /*
    pngAlphaTransformData *optionsP;

    PngImportInitAlphaDefaults(&pngAlphaTransform);

    *chain = 0;

    if (frame->IF_importOptions != NullHandle)
    {
        optionsP = (pngAlphaTransformData *) MemLock(frame->IF_importOptions);
        if (optionsP != (pngAlphaTransformData *)0)
        {
            pngAlphaTransform = *optionsP;
            MemUnlock(frame->IF_importOptions);
        }
    }
        */

    bmblock = pngImportConvertFile(frame->IF_sourceFile, frame->IF_transferVMFile, &pngAlphaTransform);

    if (bmblock != NullHandle)
    {
        *chain = VMCHAIN_MAKE_FROM_VM_BLOCK(bmblock);
        return (TE_NO_ERROR | (((dword)CIF_BITMAP) << 16));
    }

    return (TE_INVALID_FORMAT);
}

word _pascal
PngTestFile(FileHandle file)
{
    Boolean isPNG;

    isPNG = pngImportCheckHeader(file);

    if (!isPNG)
    {
        return NO_IDEA_FORMAT;
    }

    return TE_NO_ERROR;
}
