/***********************************************************************
 *
 * MODULE:    impgif (GIF Import)
 * FILE:      impgif.goc
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *              Include files
 ***************************************************************************
 */

@include <stdapp.goh>
#include <graphics.h>
@include <impex.goh>
#include <xlatLib.h>
@include <giflib.goh>

#include <Ansi/stdio.h>
#include <Ansi/string.h>

/**************************************************************************/

dword _pascal
GifImport(ImportFrame *frame, VMChain *chain)
{
	/* More stuff */
	VMBlockHandle bmblock;
	GifError stat = GE_NO_ERROR;

	// indicate status
	ImpexUpdateImportExportStatus("Importing file!", -1);

	bmblock =
		GifImportBitmapFHandle(
			frame->IF_sourceFile, frame->IF_transferVMFile,
			&stat);

	if(stat == GE_NO_ERROR)
	{
		*chain = VMCHAIN_MAKE_FROM_VM_BLOCK(bmblock);
		return (TE_NO_ERROR|(((dword)CIF_BITMAP)<<16));
	}

	*chain = 0;
	if(stat != GE_NO_ERROR)
	{
		// error code translation
		switch(stat)
		{
			case GE_WRITE_PROBLEM:
				return(TE_FILE_WRITE|(((dword)CIF_BITMAP)<<16));

			case GE_OUT_OF_MEMORY:
				return(TE_OUT_OF_MEMORY|(((dword)CIF_BITMAP)<<16));

			case GE_INVALID_BITMAP:
				return(TE_EXPORT_ERROR|(((dword)CIF_BITMAP)<<16));

			case GE_CANT_CREATE_DESTINATION_FILE:
				return(TE_FILE_ERROR|(((dword)CIF_BITMAP)<<16));

			default:
				return(TE_ERROR|(((dword)CIF_BITMAP)<<16));
		}
	}

	return (TE_ERROR|(((dword)CIF_BITMAP)<<16));
}

/**************************************************************************/

word _pascal
GifTestFile(FileHandle file)
{
	GifError stat = GE_NO_ERROR;

	stat = GifImportTestBitmapFHandle(file);

	if(stat != GE_NO_ERROR)
		return(-1);

	return(0);
};

/**************************************************************************/
