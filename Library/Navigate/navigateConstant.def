COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1994 -- All Rights Reserved

PROJECT:	Navigation Library
MODULE:		Navigate Constants
FILE:		navigateConstant.def

AUTHOR:		Alvin Cham, Sep 27, 1994

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	AC	9/27/94   	Initial revision


DESCRIPTION:
	This file contains the constants for the navigation library
		
	$Id: navigateConstant.def,v 1.1 97/04/05 01:24:40 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

SetDef	__NAVIGATECONSTANT

;****************************************************************************
;   	Defines and constants
;****************************************************************************

;----------------------------------------------------------------------------
; Status bar size
;----------------------------------------------------------------------------
MAX_STATUS_BAR_ENTRY_LENGTH 	equ 	(size NavEntryName + 16)

;----------------------------------------------------------------------------
; History list attributes
;----------------------------------------------------------------------------
MAXIMUM_HISTORY_LENGTH	    equ	    	30  	    ; remembered
MAXIMUM_HISTORY_ENTRIES     equ	    	30  	    ; displayed
MAXIMUM_HISTORY_WIDTH	    equ	    	100  	    
MAXIMUM_HISTORY_HEIGHT	    equ	    	20  	    

;----------------------------------------------------------------------------
; ChunkHandle offsets of history list and hot list.  They are stored
; in an object block so that can save block to state; however, have to
; shift it down by one chunk, the flags chunk
;----------------------------------------------------------------------------
NAVIGATE_HISTORY_LIST_CHUNK	= (size ObjLMemBlockHeader) + 2 *(size lptr)

;****************************************************************************
;   	Enums
;****************************************************************************

;----------------------------------------------------------------------------
; NavigationControlGotoPageType specifies the different possible types
; of page request
;----------------------------------------------------------------------------
NavigationControlGotoPageType	    etype   byte
NCGPT_PREVIOUS_PAGE 	enum	NavigationControlGotoPageType
NCGPT_NEXT_PAGE 	enum	NavigationControlGotoPageType

;----------------------------------------------------------------------------
; NavigateSendToOutputType specifies the types of data that we are sending
; over to the output object of the navigate controller
;----------------------------------------------------------------------------
NavigateSendToOutputType    	etype	byte
NSTOT_DATA  	enum	NavigateSendToOutputType
NSTOT_BLOCK 	enum	NavigateSendToOutputType

;****************************************************************************
; 	Structures
;****************************************************************************

;----------------------------------------------------------------------------
; NavigateHistoryElement: a chunkarray element that contains all of
; the information needed for each of the history list entry
;----------------------------------------------------------------------------
NavigateListElement	struct
    NLE_selector    	word    	; selector string for info storage
    NLE_moniker	  	lptr	    	; the text to be displayed
NavigateListElement	ends


;****************************************************************************
;   Local variables 
;****************************************************************************

;----------------------------------------------------------------------------
;   NAVIGATION_LOCALS: variables used by the NavigateControl so that it can
;   maintain its lists when links are followed
;----------------------------------------------------------------------------
NAVIGATION_LOCALS   equ	<\
.warn -unref_local\
features    	local	NCFeatures\
childBlock    	local	hptr\
toolFeatures   	local	NCToolBoxFeatures\
toolBlock    	local	hptr\
moniker    	local	NavEntryName\
selector    	local	word\
.warn @unref_local\
>

;****************************************************************************
;   	FatalErrors and Warnings
;****************************************************************************
if  	ERROR_CHECK

OBJECT_IS_NOT_A_NAV_CONTROLLER	    	    	    enum FatalErrors
; Used by ec code to check if passed *ds:si is a NavigateControlClass
; object 

NAV_CONTROL_NOTHING_SELECTED_IN_HISTORY_LIST   	    enum FatalErrors
; Used by ec code to ensure that a selection is made to an entry of
; the chunk array 

NAV_CONTROL_NO_HISTORY_ENTRY	    	   	    enum FatalErrors
; Used by ec code to ensure that there is a history entry

NAV_CONTROL_CHUNK_ARRAY_CONTAINS_NO_ELEMENTS   	    enum FatalErrors
; Used by ec code to ensure that a selection from a GenDynamicList
; entry actually has an element stored in the chunk array

NAV_CONTROL_CHUNK_ARRAY_OUT_OF_BOUNDS   	    enum FatalErrors
; Used by ec code to ensure that there is an element associated with
; the argument of ChunkArrayElementToPtr

NAV_CONTROL_INVALID_NUMBER_TO_DELETE	   	    enum FatalErrors
; Used by ec code to ensure that there is at least a certain number of
; array elements to delete 

NAV_CONTROL_BAD_BLOCK_TO_LOCK    	    	    enum FatalErrors
; Used by ec code to ensure that we can lock a block

NAV_CONTROL_CHUNK_ARRAY_CANNOT_ALLOCATE	    	    enum FatalErrors
; Used by ec code to ensure that we can allocate a chunk

NAV_CONTROL_CANNOT_ALLOCATE_BLOCK	    	    enum FatalErrors
; Used by ec code to ensure that we can allocate a block

NAV_CONTROL_BUFFER_NOT_EMPTY    	    	    enum FatalErrors
; Used by ec code to ensure that we have emptied the buffer that
; stores the list information on startup.


ARRAY_INDEX_CANNOT_GO_BACK  	    	    	    enum FatalErrors
; Used by ec code to ensure that we can actually go back an index for
; the history list array

NAV_CONTROL_OUT_OF_PAGE_BOUND	    	    	    enum FatalErrors
; Used by ec code to ensure that we have reached a bound limit for
; changing pages

endif	    ; ERROR_CHECK





