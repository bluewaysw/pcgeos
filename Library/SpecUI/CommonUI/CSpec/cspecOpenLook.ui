/*
 *
 * Project:	PC GEOS
 * Module:	OpenLook
 * File:	olresource.ui
 *
 * Author:	Doug Fults
 *
 *	This file contains the user Interface description for standard
 *	Open Look interface components.
 *
 *	$Id: cspecOpenLook.ui,v 1.1 97/04/07 10:50:37 newdeal Exp $
 *
 */

#include "generic.uih"

#include "../CommonUI/CSpec/cspecFile.ui"
#include "../CommonUI/CSpec/mkrExit.ui"
#include "../CommonUI/CSpec/mkrHelp.ui"

/*-----------------------------------------------------------------------------
	Dialog-related
-----------------------------------------------------------------------------*/
start Interface;

ResponseGroup = GenInteraction {
	hints = {
		HINT_MAKE_REPLY_BAR
	}
}

OKTrigger = GenTrigger {
	moniker = "OK";
	hints = { HINT_DEFAULT_DEFAULT_ACTION }
}

YesTrigger = GenTrigger {
	moniker = "Yes";
	hints = { HINT_DEFAULT_DEFAULT_ACTION }
}

NoTrigger = GenTrigger {
	moniker = "No";
}

CancelTrigger = GenTrigger {
	moniker = "Cancel";
}

ApplyTrigger = GenTrigger {
	moniker = "Apply";
	hints = { HINT_DEFAULT_DEFAULT_ACTION }
}

DefaultTrigger = GenTrigger {
	moniker = "Set Default";
}

ResetTrigger = GenTrigger {
	moniker = "Reset";
}

end Interface;

/*-----------------------------------------------------------------------------
	OLMenuedWinClass
-----------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------
	OLBaseWinClass
-----------------------------------------------------------------------------*/

start Interface;

WindowIcon = GenPrimary {
	moniker = "ICON";
	hints = {
		HINT_WIN_ICON		/* will become OLWinIconClass */
	}
}


end Interface;



/*-----------------------------------------------------------------------------
	Window menu
-----------------------------------------------------------------------------*/

/* VERY IMPORTANT: if you change the order of these GenTriggers in this	  */
/* menu, update the OLS_WINDOW_MENU_***_INDEX constants in cwinClassCommon.asm*/

	/*
	 * This is the menu displayed when the user pressed MENU in the
	 * title area of a base window.  It is used by OpenWinEnsureMenu.
	 * WARNING: update WindowMenuTriggerTab in CWin/cwinPtr.asm if
	 * you change this list.
	 */

start WindowMenuResource;

WindowMenu = GenInteraction {
	moniker = "Window";
	children = WindowClose, WindowFullSize, WindowRestore,
			WindowProperties, WindowBack, WindowRefresh, WindowQuit;
	hints = {
		HINT_MENUABLE
	}
}

WindowClose = GenTrigger {
	moniker = "Close";
	action = MSG_GEN_SET_MINIMIZED, "OLTPT_WINDOW";
	dataDX = "VUM_NOW";		/* pass VisUpdateMode in DL */
}

WindowFullSize = GenTrigger {
	moniker = "Full Size";
	action = MSG_GEN_SET_MAXIMIZED, "OLTPT_WINDOW";
	dataDX = "VUM_NOW";		/* pass VisUpdateMode in DL */
}

WindowRestore = GenTrigger {
	moniker = "Restore";
	action = MSG_OL_RESTORE_WIN, "OLTPT_WINDOW";
}

WindowProperties = GenTrigger {
	moniker = "Properties";
	action = MSG_OL_BW_PROPERTIES, "OLTPT_WINDOW";
}

WindowBack = GenTrigger {
	moniker = "Back";
	action = MSG_OL_WINDOW_BACK, "OLTPT_WINDOW";
}

WindowRefresh = GenTrigger {
	moniker = "Refresh";
	action = MSG_OL_WINDOW_REFRESH, "OLTPT_WINDOW";
}

WindowQuit = GenTrigger {
	moniker = "Quit";
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
					/* permanently close window */
}

end WindowMenuResource;


/*-----------------------------------------------------------------------------
	Popup Window menu
-----------------------------------------------------------------------------*/

	/*
	 * This is the menu displayed when the user pressed MENU in the
	 * title area of a popup window.  It is used by OpenWinEnsureMenu.
	 */

start PopupMenuResource;

PopupMenu = GenInteraction {
	moniker = "Window";
	children = PopupDismiss, PopupBack, PopupRefresh, PopupOwner;
	hints = {
		HINT_MENUABLE,
		HINT_SYS_MENU		/* required so that menu is given the
					 * Command Window or Summons as
					 * a visible parent, and allowed
					 * to become an OLMenuWinClass object
					 * even though there is no menu bar */
	}
}

PopupDismiss = GenInteraction {
	moniker = "Dismiss";
	children = SelectedWindows, AllPopUps;
	hints = {
		HINT_MENUABLE
	}
}
SelectedWindows = GenTrigger {
	moniker = "Selected Windows";
	action = MSG_OL_DISMISS_SELECTED, "OLTPT_WINDOW";
}
AllPopUps = GenTrigger {
	moniker = "All Pop-ups";
	action = MSG_OL_DISMISS_ALL_POPUPS, "OLTPT_WINDOW";
}

PopupBack = GenTrigger {
	moniker = "Back";
	action = MSG_OL_WINDOW_BACK, "OLTPT_WINDOW";
}

PopupRefresh = GenTrigger {
	moniker = "Refresh";
	action = MSG_OL_WINDOW_REFRESH, "OLTPT_WINDOW";
}

PopupOwner = GenTrigger {
	moniker = "Owner?";
	action = MSG_OL_POPUP_OWNER, "OLTPT_WINDOW";
}

end PopupMenuResource;



/*-----------------------------------------------------------------------------
	GCM Header Icons
-----------------------------------------------------------------------------*/

start GCMResource;

#if _GCM

GCMHeaderExitTrigger = GenTrigger {
	moniker = list {
		ExitSCMoniker,
		ExitSMMoniker
	}
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
	hints = { 
		HINT_GCM_SYS_ICON
	}
}

/* GCMHeaderOffTrigger = GenTrigger {
	moniker = list {
		OffSCMoniker,
		OffSMMoniker
	}
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
	hints = { 
		HINT_GCM_SYS_ICON
	}
} */

/* GCMHeaderWelcomeTrigger = GenTrigger {
	moniker = list {
		WorldSCMoniker,
		WorldSMMoniker
	}
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
	hints = { 
		HINT_GCM_SYS_ICON
	}
} */

GCMHeaderHelpTrigger = GenDataTrigger {
	moniker = list {
		HelpSCMoniker,
		HelpSMMoniker
	}
	genAttributes = default +initiatesInputHoldUp;
	action = MSG_UI_HELP, "TO_PROCESS";
	hints = { 
		HINT_GCM_SYS_ICON
	}
}

#endif

end GCMResource;


/*-----------------------------------------------------------------------------
	Express (Express) menu
-----------------------------------------------------------------------------*/

start ExpressMenuResource;
	/*
	 * This is the menu displayed when the user presses the PC/GEOS menu
	 */

ExpressMenu = GenInteraction {
/*	moniker = list {
		WorkspaceTextMoniker,
		WorkspaceIconMoniker
	} */
	moniker = list {
		WorkspcMenuColorMoniker,
		WorkspcMenuBWMoniker
	}
	children = AppMenu_GenList, Options;
	hints = {
		HINT_MENUABLE,
		HINT_IS_EXPRESS_MENU,		/* ensure is 1nd visible child
						 * below GenPrimary. */
		HINT_INFREQUENTLY_USED		/* not pinnable */
	}
}

visMoniker WorkspcMenuColorMoniker = {
	size = standard;
	color = color4;
	aspectRatio = normal;
	cachedSize = 26, 15;		/* full size of icon */
	gstring {
	    GSBeginString
	    GSSetAreaColorIndex	C_LIGHT_GREY
	    GSFillBitmapAtCP <(EndWorkspcMenuLGBM-StartWorkspcMenuLGBM)>
	    StartWorkspcMenuLGBM	label	byte
		    Bitmap < 25, 14, 0, <BMF_MONO> >
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00011111b, 01111111b, 11111111b, 00000000b
		    db	00011111b, 01111111b, 11111111b, 00000000b
		    db	00011111b, 01111111b, 11111111b, 00000000b
		    db	00011111b, 01111111b, 11111111b, 00000000b
		    db	00011111b, 01111111b, 11111111b, 00000000b
		    db	00011111b, 11111111b, 11111111b, 00000000b
		    db	00000000b, 01111111b, 11111111b, 00000000b
		    db	00000000b, 01111111b, 11111111b, 00000000b
		    db	00000000b, 01111111b, 11111111b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
	    EndWorkspcMenuLGBM	label	byte
	    GSSetAreaColorIndex	C_WHITE
	    GSFillBitmapAtCP <(EndWorkspcMenuLBM-StartWorkspcMenuLBM)>
	    StartWorkspcMenuLBM	label	byte
		    Bitmap < 25, 14, 0, <BMF_MONO> >
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00010000b, 00000000b, 00000000b, 00000000b
		    db	00010000b, 00000000b, 00000000b, 00000000b
		    db	00010000b, 00000000b, 00000000b, 00000000b
		    db	00010000b, 01000000b, 00000000b, 00000000b
		    db	00010000b, 01000000b, 00000000b, 00000000b
		    db	00010000b, 01000000b, 00000000b, 00000000b
		    db	00010000b, 01000000b, 00000000b, 00000000b
		    db	00000000b, 01000000b, 00000000b, 00000000b
		    db	00000000b, 01000000b, 00000000b, 00000000b
		    db	00000000b, 01000000b, 00000000b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
	    EndWorkspcMenuLBM	label	byte
	    GSSetAreaColorIndex	C_BLACK
	    GSFillBitmapAtCP <(EndWorkspcMenuDBM-StartWorkspcMenuDBM)>
	    StartWorkspcMenuDBM	label	byte
		    Bitmap < 25, 14, 0, <BMF_MONO> >
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00000000b, 00000000b, 00100000b, 00000000b
		    db	00000000b, 01111111b, 11111111b, 00000000b
		    db	00000000b, 01111111b, 11111111b, 00000000b
		    db	00000000b, 00000000b, 00000001b, 00000000b
		    db	00000000b, 00000000b, 00000001b, 00000000b
		    db	00000000b, 00000000b, 00000001b, 00000000b
		    db	00001111b, 10000000b, 00000001b, 00000000b
		    db	00000000b, 00000000b, 00000001b, 00000000b
		    db	00000000b, 00000000b, 00000001b, 00000000b
		    db	00000000b, 00111111b, 11111111b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
	    EndWorkspcMenuDBM	label	byte
	    GSEndString
	}
}

visMoniker WorkspcMenuBWMoniker = {
	size = standard;
	color = gray1;
	aspectRatio = normal;
	cachedSize = 26, 15;		/* full size of icon */
	gstring {
	    GSBeginString
	    GSFillBitmapAtCP <(EndWorkspcMenuBM-StartWorkspcMenuBM)>
	    StartWorkspcMenuBM	label	byte
		    Bitmap < 25, 15, 0, <BMF_MONO> >
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00000000b, 00000000b, 00000000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00011111b, 11111111b, 11100000b, 00000000b
		    db	00010000b, 00000000b, 00100000b, 00000000b
		    db	00010000b, 01111111b, 11111111b, 00000000b
		    db	00010000b, 01111111b, 11111111b, 00000000b
		    db	00010000b, 01000000b, 00000001b, 00000000b
		    db	00010000b, 01000000b, 00000001b, 00000000b
		    db	00010000b, 01000000b, 00000001b, 00000000b
		    db	00011111b, 11000000b, 00000001b, 00000000b
		    db	00000000b, 01000000b, 00000001b, 00000000b
		    db	00000000b, 01000000b, 00000001b, 00000000b
		    db	00000000b, 01111111b, 11111111b, 00000000b
	    EndWorkspcMenuBM	label	byte
	    GSEndString
	}
}

Utilities = GenInteraction {
	moniker = "Utilities";
	children = WorkspaceRefresh, Clipboard, PrintScreen;
	hints = {
		HINT_MENUABLE,
		HINT_INFREQUENTLY_USED		/* not pinnable */
	}
}

WorkspaceRefresh = GenTrigger {
	moniker = "WorkspaceRefresh";
	action = MSG_OL_WINDOW_REFRESH, "OLTPT_FIELD";
}

Clipboard = GenTrigger {
	moniker = "Clipboard";
	action = MSG_OL_WORKSPACE_CLIPBOARD, "OLTPT_FIELD";
}

PrintScreen = GenTrigger {
	moniker = "Print Screen";
	action = MSG_OL_WORKSPACE_PRINT_SCREEN, "OLTPT_FIELD";
}


/*-----------------------------------------------------------------------------
	workspace properties
-----------------------------------------------------------------------------*/

	/*
	 * This is the properties box displayed as part of the Workspace
	 * menu above
	 */

WorkspaceProperties = GenSummons {
	moniker = "Properties";
	children = ;
	attributes = default -appModal;
	summonsAttributes = responseType applyReset;
	/*hints = {		A MENUABLE SUMMONS??? -removed by Eric
		HINT_MENUABLE
	}*/
}



/*-----------------------------------------------------------------------------
	Application Menu - lists names of running applications
-----------------------------------------------------------------------------*/

/* This menu is copied into the OLField's Object Block when the Field is
 * VIS_BUILT. As each application's GenPrimary is VIS_BUILT, it creates
 * a GenListEntry and adds it to this menu. When an application gets the
 * FOCUS exclusive, it sends a query to the Field to get the OD of the
 * menu button, and visibly adds this button to the application's GenPrimary.
 * When the application looses the focus exclusive, the button is visibly
 * removed from the GenPrimary. */

AppMenu_GenList = GenList {		/* must be 1st child */
	attributes = type exclusive, listMethod, listMethodIsData;
				/* OD and method will be set later. */
}

/* This GenListEntry object is duplicated from this resource, once for each
 * GenPrimary that opens within the Field. The OD for the trigger
 * operation will be set during this process. No moniker is required -
 * this OLButtonClass object will use the moniker from the GenPrimary. */

AppMenuListEntry = GenListEntry {
	genStates = default -usable; 
	hints = {
		HINT_MDI_LIST_ENTRY {	/* MUST be first hint */
			dw 0		/* generic chunk not known yet */
		}
	}
}

Options = GenInteraction {
	children = Programs, Utilities, WorkspaceProperties, Exit;
	hints = {
		HINT_MENUABLE, HINT_SUB_GROUP
	}
}

Programs = GenInteraction {
	moniker = "Programs";
	hints = {
		HINT_MENUABLE,
		HINT_INFREQUENTLY_USED		/* not pinnable */
	}
}

Exit = GenTrigger {
	moniker = "Exit to DOS";
	action = MSG_GEN_FIELD_EXIT_TO_DOS, "OLTPT_FIELD";
	hints = {
		HINT_MENUABLE, HINT_SUB_GROUP
	}
}


/* Shell template for creating triggers to reside in application run menu.
 * We'll stuff the OD with the field object, which will process the method.
 * TEMPORARILY this thing will be a data trigger, so we can store a chunk
 * having the 8.3 name.
 */
RunMenuTriggerEntry = GenDataTrigger {
		/* set up a text moniker large enough for 
		 * FILE_LONGNAME_BUFFER_SIZE  (36 bytes) */
	moniker = "                                    ";
	action = MSG_GEN_FIELD_LAUNCH_APPLICATION, "OLTPT_FIELD";
}

end ExpressMenuResource;



/*-----------------------------------------------------------------------------
	GCM Header Icons
-----------------------------------------------------------------------------*/

start GCMResource;

#if _GCM

GCMHeaderExitTrigger = GenTrigger {
	moniker = list {
		ExitSCMoniker,
		ExitSMMoniker
	}
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
	hints = { 
		HINT_GCM_SYS_ICON
	}
}

/* GCMHeaderOffTrigger = GenTrigger {
	moniker = list {
		OffSCMoniker,
		OffSMMoniker
	}
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
	hints = { 
		HINT_GCM_SYS_ICON
	}
} */

/* GCMHeaderWelcomeTrigger = GenTrigger {
	moniker = list {
		WorldSCMoniker,
		WorldSMMoniker
	}
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
	hints = { 
		HINT_GCM_SYS_ICON
	}
} */

GCMHeaderHelpTrigger = GenDataTrigger {
	moniker = list {
		HelpSCMoniker,
		HelpSMMoniker
	}
	genAttributes = default +initiatesInputHoldUp;
	action = MSG_GEN_PROCESS_HELP, "OLTPT_OWNER_PROCESS";
	hints = { 
		HINT_GCM_SYS_ICON
	}
}

#endif

end GCMResource;


/*-----------------------------------------------------------------------------
	Window menu
-----------------------------------------------------------------------------*/

/* VERY IMPORTANT: if you change the order of these GenTriggers in this	  */
/* menu, update the OLS_WINDOW_MENU_***_INDEX constants in cwinClassCommon.asm*/

	/*
	 * This is the menu displayed when the user pressed MENU in the
	 * title area of a base window.  It is used by OpenWinEnsureMenu.
	 * WARNING: update WindowMenuTriggerTab in CWin/cwinPtr.asm if
	 * you change this list.
	 */

start WindowMenuResource;

WindowMenu = GenInteraction {
	moniker = "Window";
	children = WindowClose, WindowFullSize, WindowRestore,
			WindowProperties, WindowBack, WindowRefresh, WindowQuit;
	hints = {
		HINT_MENUABLE
	}
}

WindowClose = GenDataTrigger {
	moniker = "Close";
	action = MSG_GEN_SET_MINIMIZED, "OLTPT_WINDOW";
	dataDX = "VUM_NOW";		/* pass VisUpdateMode in DL */
}

WindowFullSize = GenDataTrigger {
	moniker = "Full Size";
	action = MSG_GEN_SET_MAXIMIZED, "OLTPT_WINDOW";
	dataDX = "VUM_NOW";		/* pass VisUpdateMode in DL */
}

WindowRestore = GenTrigger {
	moniker = "Restore";
	action = MSG_OL_RESTORE_WIN, "OLTPT_WINDOW";
}

WindowProperties = GenTrigger {
	moniker = "Properties";
	action = MSG_OL_BW_PROPERTIES, "OLTPT_WINDOW";
}

WindowBack = GenTrigger {
	moniker = "Back";
	action = MSG_OL_WINDOW_BACK, "OLTPT_WINDOW";
}

WindowRefresh = GenTrigger {
	moniker = "Refresh";
	action = MSG_OL_WINDOW_REFRESH, "OLTPT_WINDOW";
}

WindowQuit = GenTrigger {
	moniker = "Quit";
	action = MSG_GEN_CLOSE_INTERACTION, "OLTPT_WINDOW";
					/* permanently close window */
}

/* This object is DUPLICATED by an OLWinClass object when it is minimized. */
/* See cwinWinIcon.asm for details.					   */

WindowIcon = GenPrimary {
	moniker = "ICON";
	hints = {
		HINT_WIN_ICON		/* will become OLWinIconClass */
	}
}

end WindowMenuResource;


/*-----------------------------------------------------------------------------
	Popup Window menu
-----------------------------------------------------------------------------*/

	/*
	 * This is the menu displayed when the user pressed MENU in the
	 * title area of a popup window.  It is used by OpenWinEnsureMenu.
	 */

start PopupMenuResource;

PopupMenu = GenInteraction {
	moniker = "Window";
	children = PopupDismiss, PopupBack, PopupRefresh, PopupOwner;
	hints = {
		HINT_MENUABLE,
		HINT_SYS_MENU		/* required so that menu is given the
					 * Command Window or Summons as
					 * a visible parent, and allowed
					 * to become an OLMenuWinClass object
					 * even though there is no menu bar */
	}
}

PopupDismiss = GenInteraction {
	moniker = "Dismiss";
	children = SelectedWindows, AllPopUps;
	hints = {
		HINT_MENUABLE
	}
}
SelectedWindows = GenTrigger {
	moniker = "Selected Windows";
	action = MSG_OL_DISMISS_SELECTED, "OLTPT_WINDOW";
}
AllPopUps = GenTrigger {
	moniker = "All Pop-ups";
	action = MSG_OL_DISMISS_ALL_POPUPS, "OLTPT_WINDOW";
}

PopupBack = GenTrigger {
	moniker = "Back";
	action = MSG_OL_WINDOW_BACK, "OLTPT_WINDOW";
}

PopupRefresh = GenTrigger {
	moniker = "Refresh";
	action = MSG_OL_WINDOW_REFRESH, "OLTPT_WINDOW";
}

PopupOwner = GenTrigger {
	moniker = "Owner?";
	action = MSG_OL_POPUP_OWNER, "OLTPT_WINDOW";
}

end PopupMenuResource;
>>>>>>> 1.73
