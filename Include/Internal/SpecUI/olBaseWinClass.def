COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1994 -- All Rights Reserved

PROJECT:
MODULE:
FILE:		olBaseWinClass.def

AUTHOR:		David Litwin, Oct  6, 1994

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	10/ 6/94		Initial revision


DESCRIPTION:
	Definition of OLBaseWinClass.

	OLBaseWin is the specific UI primary window object.

	$Id: olBaseWinClass.def,v 1.2 98/03/11 06:10:51 joon Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@


OLBaseWinClass	class	OLMenuedWinClass
	uses	GenPrimaryClass

;------------------------------------------------------------------------------
;			Method Declarations
;------------------------------------------------------------------------------
; Methods to implement standard Open Look functions for base window,
; as available through the popup window associated with base windows.

MSG_OL_BW_OPEN_CLOSE			message
MSG_OL_BW_SIZE				message
MSG_OL_BW_PROPERTIES			message
;MSG_OL_BW_QUIT				message
MSG_OL_BASE_WIN_ADD_FIELD_ICONS		message
MSG_OL_BASE_WIN_REMOVE_FIELD_ICONS	message

MSG_OL_BASE_WIN_NOTIFY_OF_FILE_MENU	message
;
; Sent from OLMenuWin that is a file menu.
;
; Pass:		^lcx:dx = File menu OD
; Return:	nothing


MSG_OL_BASE_WIN_TOGGLE_MENU_BAR		message
;
; Toggle menu bar, if togglable.
;
; Pass:		nothing
; Return:	nothing
;

MSG_OL_BASE_WIN_UPDATE_EXPRESS_TOOL_AREA	message
;
; Update express menu button, if any.
;
; Pass:		nothing
; Return:	nothing
;

if TOOL_AREA_IS_TASK_BAR or WINDOW_LIST_ACTIVE
MSG_OL_BASE_WIN_SET_WINDOW_ENTRY_MONIKER	message
;
; Set the moniker for this window in the window list
;
; Pass:		nothing
; Return:	nothing
;

MSG_OL_BASE_WIN_UPDATE_WINDOW_ENTRY		message
;
; Update window list selection
;
; Pass:		nothing
; Return:	nothing
;
endif

if EVENT_MENU
MSG_OL_BASE_WIN_UPDATE_TOOL_AREAS		message
;
; Does full update of title bar and tool areas.
;
; Pass:		nothing
; Return:	nothing
;
endif

;------------------------------------------------------------------------------
;			Variable Data
;------------------------------------------------------------------------------

ATTR_OL_BASE_WIN_HAVE_FILE_MENU		vardata
;
; Set when MSG_OL_BASE_WIN_NOTIFY_OF_FILE_MENU indicates that we have a file
; menu.

TEMP_OL_BASE_WIN_HELP_TRIGGER		vardata	lptr
;
; If this exists, it holds the lptr of the help trigger that was automatically
; added to the primary.
;

TEMP_OL_BASE_WIN_FILE_MENU		vardata lptr
;
; If this exists, it holds the lptr of the file menu that was create for the
; primary during spec build.
;


if _FLOATING_KEYBOARD_TRIGGER_ON_PRIMARY
TEMP_OL_BASE_WIN_KBD_TRIGGER		vardata lptr
;
; If this exists, it holds the lptr of the help trigger that was automatically
; added to the primary.
;
endif

;------------------------------------------------------------------------------
;			Constants
;------------------------------------------------------------------------------

OLBaseWinFlags	record
	OLBWF_HAS_EXPRESS_TOOL_AREA:1
	; Set if this primary is the one which currently "has" the express tool
	; area associated with it, & so must position it as the window moves,
	; changes shape, etc.

	OLBWF_REJECT_EXPRESS_TOOL_AREA:1
	; Set if this primary does not want the express tool area to be
	; associated with it.

	:6

OLBaseWinFlags	end


;------------------------------------------------------------------------------
;			Instance Data
;------------------------------------------------------------------------------

    OLBWI_longTermString	lptr
    OLBWI_statusString		lptr
    OLBWI_modeString		lptr
if _GCM
    OLBWI_gcmFlags		GeneralConsumerModeFlags <>
					;indicates which icons to use,
					;and other GCM-specific info.
endif

;    OLBWI_expressMenuButton	optr	;menu button for Express menu

if _GCM
    OLBWI_gcmLeftIcon		lptr	;icon for left side of header
    OLBWI_gcmRightIcon		lptr	;icon for right side of header
endif

    OLBWI_flags			OLBaseWinFlags


if RADIO_STATUS_ICON_ON_PRIMARY
    OLBWI_radioStatusIcon	lptr	;radio status icon
endif

if TOOL_AREA_IS_TASK_BAR or WINDOW_LIST_ACTIVE
    OLBWI_titleBarMenu		optr
    OLBWI_windowListEntry	optr
endif

OLBaseWinClass	endc

;------------------------------------------------------------------------------
;	OLWindowListItemClass
;------------------------------------------------------------------------------
;
; This is the class we pass to the Field when creating a Window List Item to
; represent us in the Window List.  Running under the global UI thread,
; it will immediately be able to raise us to the top, give us higher CPU
; priority, etc.
;
OLWindowListItemClass	class	GenItemClass

MSG_OL_WINDOW_LIST_ITEM_SET_OPERATING_PARAMS	message
; Pass:         ^lcx:dx	- window object
; Return:	nothing
; Detroyed:	ax, cx, dx, bp

MSG_OL_WINDOW_LIST_ITEM_CLOSE_WINDOW		message
; Pass:		nothing
; Return:	nothing
; Destroy:	ax, cx, dx, bp

	OLWLI_windowObj		optr
	OLWLI_parentWin		hptr.Window

OLWindowListItemClass	endc


if RADIO_STATUS_ICON_ON_PRIMARY

include Internal/Penelope/putils.def

;------------------------------------------------------------------------------
;	RadioStatusIconClass
;------------------------------------------------------------------------------
;
; This is the radio status icon on the left side of the primary titlebar.
;
RadioStatusIconClass	class	GenTriggerClass

MSG_RADIO_STATUS_ICON_CALL_IN_PROGRESS_TIMER_MSG	message
;
; Message sent via TimerStart to cycle through "call in progress" monikers.
;
; Pass:		nothing
; Return:	nothing
; Destroy:	ax, cx, dx, bp
;

MSG_RADIO_STATUS_ICON_SHORT_TOUCH			message
;
; Message sent by short touch on radio status icon
;
; Pass:		nothing
; Return:	nothing
; Destroy:	ax, cx, dx, bp
;

MSG_RADIO_STATUS_ICON_LONG_TOUCH			message
;
; Message sent by short touch on radio status icon
;
; Pass:		nothing
; Return:	nothing
; Destroy:	ax, cx, dx, bp
;

	RSII_radioStatus	PenelopeRadioStatus
	RSII_sysTarget		byte
	RSII_iconCycleCount	byte
	RSII_cycleTimer		hptr
	RSII_cycleTimerID	word

RadioStatusIconClass	endc

endif ; RADIO_STATUS_ICON_ON_PRIMARY
