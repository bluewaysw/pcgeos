COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1994 -- All Rights Reserved

PROJECT:	SPUI
MODULE:
FILE:		olFieldClass.def

AUTHOR:		David Litwin, Oct  6, 1994

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dlitwin	10/ 6/94		Initial revision


DESCRIPTION:
	Definition of OLFieldClass.

	OLField is the OPEN LOOK Field object.

	$Id: olFieldClass.def,v 1.4 98/07/10 10:55:13 joon Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

;
;Additional Documentation:
;-------------------------
;Format of VM bitmap file:
;
;	Map Block format (FieldBGMapBlock structure):
;		word	BG width (not including any offset below)
;		word	BG height (not including any offset below)
;		word	X offset to draw bg at
;		word	Y offset to draw bg at
;		word	FieldBGFormatType enum
;
;			if FBGFT_STANDARD_GSTRING:
;		word	block handle of first block of standard VM GString
;
;			if FBGFT_BITMAP_SLICES
;		word	last line in slice (0 is first line)
;		word	block handle containing slice
;

OLFieldClass	class	VisCompClass
	uses	GenFieldClass

;------------------------------------------------------------------------------
;	Method Declarations
;------------------------------------------------------------------------------

MSG_OL_WORKSPACE_REFRESH	message
MSG_OL_WORKSPACE_CLIPBOARD	message
MSG_OL_WORKSPACE_PRINT_SCREEN	message

FieldBGDrawAttr	etype	byte
	FBGDA_UPPER_LEFT	enum	FieldBGDrawAttr
	;Just draw the graphic in the upper left of the screen

	FBGDA_CENTER		enum	FieldBGDrawAttr
	;Center the graphic on the screen

	FBGDA_TILE		enum	FieldBGDrawAttr
	;Tile the graphic to fill the screen

FieldBGFlags	record
	FBGF_DRAW_ATTR FieldBGDrawAttr:4
	;Set if we want to fill the display by tiling the BG

	:4
FieldBGFlags	end

MSG_OL_FIELD_RELEASE_EXPRESS_MENU	message
;
; Sent from OLReleaseAllStayUpModeMenus to dismiss express menu.
;
; Pass:		ss:bp - EnsureNoMenusInStayUpModeParams
; Returns:	bp - preserved
;

MSG_OL_FIELD_POPUP_EXPRESS_MENU		message
;
; Open field's express menu.
;

OLFieldMoveToolAreaParams	struct
	OLFMTAP_geode		word	; Geode making request, or NULL to
					;	"park" the tool area, at this
					;	time in the upper left hand
					;	quadrant of the field, on top.
	OLFMTAP_xPos		word	; x position on field
	OLFMTAP_yPos		word	; y position on field
if EVENT_MENU
	OLFMTAP_eventPos	word
endif
	OLFMTAP_layerID		word	; layer ID of dest. window
	OLFMTAP_layerPriority	byte	; layer priority of dest. window
	OLFMTAP_dummy		byte	; not used
OLFieldMoveToolAreaParams	ends

MSG_OL_FIELD_MOVE_TOOL_AREA		message
;
; Moves the "tool area", having the express menu in it, to a new location on
; the field.  Call by GenPrimary's when they gain the target exclusive.
;
; Pass:		ss:bp - OLFieldMoveToolAreaParams
;		dx - size OLFieldMoveToolAreaParams
; Return:	nothing

MSG_OL_FIELD_GET_TOOL_AREA_SIZE		message
;
; Returns size of "tool area".
;
; Pass:		nothing
; Return:	cx	- width
;		dx	- height
;if EVENT_MENU
;		bp	- width of event menu tool area
;endif

MSG_OL_FIELD_SIZE_TOOL_AREA		message
;
; Sizes the "tool area", having the express menu in it, to a new height.
; Call by GenPrimary's when they gain the target exclusive.
;
; Pass:		cx - new height
; Return:	nothing



MSG_OL_FIELD_TOGGLE_EXPRESS_MENU	message
;
; Open/close field's express menu.
;

MSG_OL_FIELD_NAVIGATE_TO_NEXT_APP	message
;
; Navigate to next app.
;
; pass:	^lcx:dx = current app
;	^hbp = event to dispatch when app to navigate to is found
;

if TOOL_AREA_IS_TASK_BAR or WINDOW_LIST_ACTIVE
MSG_OL_FIELD_CREATE_WINDOW_LIST_ENTRY	message
;
; Create window list entry
;
; Pass:		nothing
; Return:	^lcx:dx	= object
;		cx = 0, if no window list entry created
;

MSG_OL_FIELD_SELECT_WINDOW_LIST_ENTRY	message
;
; Bring window to front
;
; Pass:		nothing
; Return:	ax = chunk handle of currently selected item
;		carry set if no window selected
;

MSG_OL_FIELD_WINDOW_LIST_CLOSE_WINDOW	message
;
; Close the window currently selected in the window list
;
; Pass:		nothing
; Return:	nothing
;

MSG_OL_FIELD_UPDATE_TASK_BAR_LIST	message
;
; Update task bar list
;
; Pass:		nothing
; Return:	nothing
;
endif
if TOOL_AREA_IS_TASK_BAR
MSG_OL_FIELD_SEND_TO_GEN_APPLICATIONS	message
;
; Send message to GFI_genApplications
;
; Pass:		dx	= message
; Return:	nothing
;
endif

;------------------------------------------------------------------------------
;	Instance data
;------------------------------------------------------------------------------

    OLFI_staggerSlotMap word	8 dup (?) ;16 bit X 8 bit map indicating used
					  ;stagger slots (63 for windows,
					  ;63 for icons).
    OLFI_BGFile	hptr		; VM handle of file containing BG to
    				; display (0 if none wnated).
    OLFI_BGData	word		; if FBGFT_STANDARD_GSTRING, GString handle of
				; BG to display (0 if no BG wanted)
    OLFI_BGFlags	FieldBGFlags
				;How to display the BG

    OLFI_toolArea	lptr	;FloatingToolArea that Express menu is placed in
if EVENT_MENU
    OLFI_eventToolArea	lptr	;floating tool area for event menu
    OLFI_eventMenu	lptr	;event menu
endif

    ;note: these lptrs must be in this order: menu, menu button.

    OLFI_expressMenu	lptr	;ExpressMenu object for this field.
    OLFI_expressMenuButton lptr	;menu button for ExpressMenu object

if TOOL_AREA_IS_TASK_BAR or WINDOW_LIST_ACTIVE
    OLFI_windowListDialog	lptr
    OLFI_windowListList		lptr
endif

    OLFI_focusedAppPrimary optr	;OD of GenPrimary which has focus exclusive,
				;and therefore has Application Menu Button
				;installed in its title bar.

    OLFI_focusExcl	FTVMCGrab <>
    OLFI_targetExcl	FTVMCGrab <>
    OLFI_fullScreenExcl	FTVMCGrab <>

    OLFI_nonModalFocus	optr
    ; Optr of last object to have or request the focus exclusive, that was
    ; not for the implementation of a modal geode state.

if TOOL_AREA_IS_TASK_BAR
    ; ExpressMenuControl that implements SysTray
    OLFI_systemTray		lptr
endif

OLFieldClass	endc

;------------------------------------------------------------------------------
;	ToolAreaClass
;------------------------------------------------------------------------------
;
; We subclass the GenInteraction used for the system tool area in order to
; implement some rather unusual focus behavior -- if anything with the dialog
; grabs the focus, the interaction grabs the focus from its app & makes the
; app the current focus.  When the focus within is release, it releases both
; of these & asks the system to find the top focusable field again.  All this
; is so that you can hit Ctrl-Esc, then arrow keys, space/ret/esc to operate
; the express & startup menus.
;

ToolAreaClass	class	GenInteractionClass

;we'll keep this stuff even if feature is off to simplify conditional code
;elsewhere
;if TOOL_AREA_IS_TASK_BAR

ToolAreaStateFlags	record
    TASF_AUTO_HIDE:1		; set if toolarea (taskbar) is auto-hidden.
ToolAreaStateFlags	end

MSG_TOOL_AREA_AUTO_HIDE				message
;
; Auto-hide toolarea (taskbar)
;
; Pass:		nothing
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;

MSG_TOOL_AREA_INIT_POSITION			message
;
; Initialize position.
;

    TAI_state			ToolAreaStateFlags
    TAI_autoHideTimerID		word
    TAI_autoHideTimerHandle	hptr

;endif ; TOOL_AREA_IS_TASK_BAR

ToolAreaClass	endc

if TOOL_AREA_IS_TASK_BAR or WINDOW_LIST_ACTIVE
;------------------------------------------------------------------------------
;	WindowListDialogClass
;------------------------------------------------------------------------------
;
; We subclass the GenInteraction used for the window list so we can make the
; window list go away when it loses target excl.
;
WindowListDialogClass	class	GenInteractionClass
	uses	OLWinClass

    OLWLDI_flag	byte
WindowListDialogClass	endc

;------------------------------------------------------------------------------
;	WindowListListClass
;------------------------------------------------------------------------------
;
; We subclass the GenItemGroup used for the window list so we can update the
; taskbar list.
;
WindowListListClass	class	GenItemGroupClass
MSG_WINDOW_LIST_LIST_QUERY_TASK_BAR_ITEM_MONIKER	message
;
; Copy moniker from window list to the taskbar list
;
; Pass:		^lcx:dx	= dynamic list requesting the moniker
;		bp	= the position of the item requested
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;
MSG_WINDOW_LIST_LIST_SELECT_ITEM			message
;
; Select window list item
;
; Pass:		cx 	= position of the item to be selected
;		bp	= number of selections
;		dl	= GenItemGroupStateFlags
; Return:	nothing
; Destroyed:	ax, cx, dx, bp
;
WindowListListClass	endc

endif

if TOOL_AREA_IS_TASK_BAR
;------------------------------------------------------------------------------
;	TaskBarListClass
;------------------------------------------------------------------------------
TaskBarListClass	class	GenDynamicListClass
TaskBarListClass	endc

;------------------------------------------------------------------------------
;	SysTrayTriggerClass
;------------------------------------------------------------------------------
SysTrayTriggerClass	class	GenTriggerClass
	STTI_appToken	GeodeToken	; token to pass to IACPConnect
	STTI_dataFile	FileLongName	; filename to pass in ALB_dataFile
SysTrayTriggerClass	endc

;------------------------------------------------------------------------------
;	ClockTriggerClass
;------------------------------------------------------------------------------
ClockTriggerClass	class	SysTrayTriggerClass
	CTI_timerHandle		hptr
	CTI_timerID		word
	CTI_fakeDisabled	byte
ClockTriggerClass	endc

endif ; if TOOL_AREA_IS_TASK_BAR

;------------------------------------------------------------------------------
;	EMCControlPanelClass
;------------------------------------------------------------------------------
;
; We subclass ExpressMenuControl so we can prevent some buttons from being
; added to it.
;


;------------------------------------------------------------------------------
;	LauncherInteraction
;------------------------------------------------------------------------------
;


;------------------------------------------------------------------------------
;	EventMenuClass
;------------------------------------------------------------------------------
;
; We subclass the EventHandlerControlClass to make it work well in the title
; bar, etc.
;

if EVENT_MENU
EventMenuClass	class	EventHandlerControlClass
EventMenuClass	endc
endif

if TOOL_AREA_IS_TASK_BAR

;------------------------------------------------------------------------------
;	SysTrayInteractionClass
;------------------------------------------------------------------------------
SysTrayInteractionClass	class	GenInteractionClass
SysTrayInteractionClass	endc

endif
