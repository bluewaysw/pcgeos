#!/usr/public/perl
# -*- perl -*-
##############################################################################
#
# 	Copyright (c) Geoworks 1996.  All rights reserved.
#       GEOWORKS CONFIDENTIAL
#
# PROJECT:	GEOS Tools
# MODULE:	PMake
# FILE: 	copy-if-different
# AUTHOR: 	Jacob A. Gabrielson, Dec 19, 1996
#
# REVISION HISTORY:
#	Name	Date		Description
#	----	----		-----------
#	jacob	12/19/96   	Initial Revision
#
# DESCRIPTION:
#	Equivalent to doing "cmp -s foo bar || cp foo bar" under Unix.
#	Since pmake does this to figure out if it needs to update
#	the .ldf file in Installed/Include, we have this dum
#	script to do it under NT.
#
#	$Id: copy-if-different,v 1.1 96/12/20 11:42:42 jacob Exp $
#
###############################################################################

die "Usage: copy-if-different <source file> <dest file>\n"
	if ($#ARGV != 1);

$source = $ARGV[0];
$dest = $ARGV[1];

die "copy-if-different: error: Source file '$source' does not exist\n"
	if (! -e $source);

if (-e $dest) {
    #require "stat.pl";
    $ST_SIZE = 7;
    $ST_BLKSIZE = 11;

    #
    # Both files exist.  Find out how big the source and dest are.
    #
    @sourceStats = stat($source);
    die "copy-if-different: Cannot access '$source:' $!\n" if (!@sourceStats);
    @destStats = stat($dest);
    die "copy-if-different: Cannot access '$dest:' $!\n" if (!@destStats);

    #
    # Only if the files are both the same do we need to open 'em up
    # and compare contents.
    #
    if ($sourceStats[$ST_SIZE] == $destStats[$ST_SIZE]) {
	if (&CompareFiles($source, $dest,
			  $sourceStats[$ST_BLKSIZE] || 16384)) {
	    #
	    # They're the same; we don't need no copy.
	    #
	    exit 0;
	}
    }
}

if ($^O eq "linux") {

    print ("cp $source $dest\n"); 
    system("cp $source $dest") && die "cp failed: $!\n";
} else {

    $source =~ s,/,\\,g;
    $dest =~ s,/,\\,g;
    print ("copy $source $dest\n"); # NT-only (I'm lazy)
    system("copy $source $dest") && die "copy failed: $!\n";
}
exit 0;


##############################################################################
#	CompareFiles
##############################################################################
#
# SYNOPSIS:	Open 'em up, and compare byte-by-byte
# PASS:
# CALLED BY:
# RETURN:	nothing
# SIDE EFFECTS:	none
#
# STRATEGY:
#
# REVISION HISTORY:
#	Name	Date		Description
#	----	----		-----------
#       jacob 	12/20/96   	Initial Revision
#
##############################################################################
sub CompareFiles {
    local($source, $dest, $blockSize) = @_;
    local($sourceBuf, $destBuf, $different);

    $different = 0;		# assume they're the same

    open(SOURCE, "<$source") || die "copy-if-different: $source: $!\n";
    open(DEST, "<$dest") || die "copy-if-different: $dest: $!\n";

    while (read(SOURCE, $sourceBuf, $blockSize)) {
	read(DEST, $destBuf, length $sourceBuf)
	    || die "Cannot read from '$dest': $!\n";

	if ($sourceBuf ne $destBuf) {
	    $different = 1;
	}
    }

    return !$different;
}
