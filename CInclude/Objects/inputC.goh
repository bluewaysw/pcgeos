/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS
 * FILE:	Objects/inputC.goh
 * AUTHOR:	Tony Requist: February 14, 1991
 *
 * DECLARER:	Kernel
 *
 * DESCRIPTION:
 *	This file defines input methods, as they are sent through the
 * 	InputManager's monitor chain, & on to the UI.  Note that the UI
 *	converts MSG_META_BUTTON, MSG_META_PTR & MSG_META_DRAG to more
 *	generic messages which are then sent on to applications. (See
 *	uiInputC.goh)
 *
 *	$Id: inputC.goh,v 1.1 97/04/04 15:52:29 newdeal Exp $
 *
 ***********************************************************************/
@optimize
@deflib ui

@include <Objects/metaC.goh>

/*
 * These may be used to extract ButtonInfo or ShiftState information from
 * the "inputState" value passed in the following messages.
 */
#define GET_WHEEL_INFO(val) 	((sbyte) (val))
#define GET_BUTTON_INFO(val) 	((byte) (val))
#define GET_SHIFT_STATE(val) 	((byte) ((val) >> 8))

@importMessage MetaInputMessages, void MSG_META_MOUSE_BUTTON(
		word xPosition = cx,
		word yPosition = dx,
	        word inputState = bp);
/*
 * "inputState" for MSG_META_MOUSE_BUTTON is ButtonInfo in the low byte,
 * ShiftState in the high byte -- use GET_BUTTON_INFO and GET_SHIFT_STATE.
 */

@importMessage MetaInputMessages, void MSG_META_MOUSE_PTR(
		word xPosition = cx,
		word yPosition = dx,
		word inputState = bp);
/*
 * "inputState" for MSG_META_MOUSE_PTR is ButtonInfo in the low byte,
 * ShiftState in the high byte -- use GET_BUTTON_INFO and GET_SHIFT_STATE.
 */

@alias (MSG_META_MOUSE_PTR) void MSG_META_PTR(
		MouseReturnParams *retVal = bpaxdxcx,
		sword xPosition = cx,
		sword yPosition = dx,
		word inputState = bp);
/*
 * NOTE!! unlike the other mouse messages in this file, which are the low-
 * level messages used in the InputManager, this is the real beast that is
 * passed to applications.  As such, the data passed & returned are different
 * from the others -- "inputState" for MSG_META_PTR is ButtonInfo in the
 * low byte, UIFunctionsActive in the high byte -- use GET_BUTTON_INFO and
 * GET_UI_FUNCTIONS_ACTIVE to extract.
 *
 */

@importMessage MetaInputMessages, void MSG_META_KBD_CHAR(
		word character = cx, word flags = dx, word state = bp);

@importMessage MetaInputMessages, void MSG_META_PRESSURE();	/* NEEDS PROTOTYPE */

@importMessage MetaInputMessages, void MSG_META_DIRECTION();	/* NEEDS PROTOTYPE */

@importMessage MetaInputMessages, void MSG_META_MOUSE_TIMER();	/* NEEDS PROTOTYPE */

@importMessage MetaInputMessages, void MSG_META_MOUSE_DRAG(
		word xPosition = cx,
		word yPosition = dx,
		word inputState = bp);
/*
 * "inputState" for MSG_META_MOUSE_DRAG is ButtonInfo in the low byte,
 * ShiftState in the high byte -- use GET_BUTTON_INFO and GET_SHIFT_STATE.
 */


/*
 * Mouse Wheel message
 * "inputState" for MSG_META_MOUSE_WHEEL_VERTICAL is wheel Info in the low byte,
 * ShiftState in the high byte -- use GET_WHEEL_INFO and GET_SHIFT_STATE.
 * wheel is > 0 for down and < 0 for up.
 */

@importMessage	MetaInputMessages, void MSG_META_MOUSE_WHEEL_VERTICAL(
		MouseReturnParams *retVal = bpaxdxcx,
		word xPosition = cx,
		word yPosition = dx,
		word inputState = bp);

@endlib
